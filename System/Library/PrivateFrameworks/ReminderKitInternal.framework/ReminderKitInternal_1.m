id REMCacheContext.object(forKey:)(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t vars8;

  v2 = objc_msgSend(*(id *)(v1 + 16), sel_objectForKey_, a1);

  return v2;
}

id REMCacheContext.setObject(_:forKey:)(uint64_t a1, uint64_t a2)
{
  if (a1) {
    return objc_msgSend(*(id *)(v2 + 16), sel_setObject_forKey_, a1, a2);
  }
  else {
    return objc_msgSend(*(id *)(v2 + 16), sel_removeObjectForKey_, a2, a2);
  }
}

uint64_t REMStructWrapper.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 88), a1);
  return v2;
}

uint64_t REMStructWrapper.init(_:)(uint64_t a1)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 32))(v1 + *(void *)(*(void *)v1 + 88), a1);
  return v1;
}

uint64_t REMStructWrapper.value.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 88));
}

uint64_t REMStructWrapper.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  return v0;
}

uint64_t REMStructWrapper.__deallocating_deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_1A7333294()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A73332B0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A73332EC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for REMCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for REMCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMCache);
}

uint64_t dispatch thunk of REMCache.__allocating_init(cacheQueue:countLimit:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of REMCache.performReadOnly(_:operations:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of REMCache.performReadAndWrite(_:operations:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of REMCache.clear(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

unsigned char *sub_1A73333F0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73334BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for REMCache.ExecutionMode()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A73334FC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for REMCacheContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMCacheContext);
}

uint64_t sub_1A733355C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for REMStructWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for REMStructWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMStructWrapper);
}

uint64_t dispatch thunk of REMStructWrapper.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1A7333644(void *a1@<X0>, uint64_t *a2@<X8>)
{
  int v3 = v2;
  v30[2] = *(id *)MEMORY[0x1E4F143B8];
  v30[0] = 0;
  id v6 = objc_msgSend(v3, sel_resultFromPerformingInvocation_error_, a1, v30);
  id v7 = v30[0];
  if (v6)
  {
    v8 = v6;
    type metadata accessor for REMComplicationDataView.FetchModelInvocation.Result();
    uint64_t v9 = swift_dynamicCastClass();
    if (v9)
    {
      uint64_t v10 = v9;
      unint64_t v11 = *(void *)(v9 + OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_accountStorages);
      id v12 = v8;
      id v13 = v7;
      id v14 = v12;
      id v15 = v3;
      swift_bridgeObjectRetain();
      v16 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v17 = sub_1A7335270(MEMORY[0x1E4FBC868], v11, (uint64_t)v15);
      swift_bridgeObjectRelease();
      unint64_t v18 = *(void *)(v10 + OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_listStorages);
      id v19 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = sub_1A7335504(v16, v18, v17, (uint64_t)v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      id v21 = v19;
      swift_bridgeObjectRetain();
      unint64_t v22 = swift_bridgeObjectRetain();
      uint64_t v23 = sub_1A73350D4(v22, (uint64_t)v20, (uint64_t)v21);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      *a2 = v23;
    }
    else
    {
      v25 = self;
      v30[0] = 0;
      v30[1] = (id)0xE000000000000000;
      id v26 = v7;
      sub_1A7573560();
      sub_1A7572740();
      id v27 = objc_msgSend(v8, sel_description);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      sub_1A7572740();
      sub_1A7572740();
      id v28 = objc_msgSend(a1, sel_description);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      sub_1A7572740();
      swift_bridgeObjectRelease();
      v29 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      objc_msgSend(v25, sel_internalErrorWithDebugDescription_, v29);

      swift_willThrow();
    }
  }
  else
  {
    id v24 = v30[0];
    sub_1A7571850();

    swift_willThrow();
  }
}

uint64_t sub_1A73339D0()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F1C98);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F1C98);
  if (qword_1EB6FFF40 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F00);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t REMComplicationDataView.__allocating_init(store:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t REMComplicationDataView.init(store:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t REMComplicationDataView.deinit()
{
  return v0;
}

uint64_t REMComplicationDataView.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 24, 7);
}

Swift::tuple_ReminderKitInternal_REMComplicationDataView_Model __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> REMComplicationDataView.fetchModel()()
{
  uint64_t v2 = v0;
  id v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMComplicationDataView.FetchModelInvocation()), sel_init);
  sub_1A7333644(v3, &v5);

  if (!v1) {
    *uint64_t v2 = v5;
  }
  return result;
}

uint64_t type metadata accessor for REMComplicationDataView.FetchModelInvocation()
{
  return self;
}

uint64_t REMComplicationDataView.Model.reminders.getter()
{
  return swift_bridgeObjectRetain();
}

ReminderKitInternal::REMComplicationDataView::Model __swiftcall REMComplicationDataView.Model.init(reminders:)(ReminderKitInternal::REMComplicationDataView::Model reminders)
{
  v1->reminders._rawValue = reminders.reminders._rawValue;
  return reminders;
}

uint64_t static REMComplicationDataView.FetchModelInvocation.supportsSecureCoding.getter()
{
  return 1;
}

id REMComplicationDataView.FetchModelInvocation.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMComplicationDataView.FetchModelInvocation.init(coder:)(void *a1)
{
  id v3 = objc_msgSend(v1, sel_init);

  return v3;
}

id REMComplicationDataView.FetchModelInvocation.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

void REMComplicationDataView.FetchModelInvocation.clientResult(from:store:)(char *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v5 = *(void *)&a1[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_accountStorages];
  id v6 = a2;
  id v7 = a1;
  swift_bridgeObjectRetain();
  v8 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v9 = sub_1A7335270(MEMORY[0x1E4FBC868], v5, (uint64_t)v6);
  swift_bridgeObjectRelease();
  unint64_t v10 = *(void *)&v7[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_listStorages];
  id v11 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = sub_1A7335504(v8, v10, v9, (uint64_t)v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

  id v13 = v11;
  swift_bridgeObjectRetain();
  unint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_1A73350D4(v14, (uint64_t)v12, (uint64_t)v13);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  *a3 = v15;
}

void sub_1A7333E48(char *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
}

id REMComplicationDataView.FetchModelInvocation.Result.__allocating_init(accountStorages:listStorages:reminderStorages:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_accountStorages] = a1;
  *(void *)&v7[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_listStorages] = a2;
  *(void *)&v7[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_reminderStorages] = a3;
  v9.receiver = v7;
  v9.super_class = v3;
  return objc_msgSendSuper2(&v9, sel_init);
}

id REMComplicationDataView.FetchModelInvocation.Result.init(accountStorages:listStorages:reminderStorages:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_accountStorages] = a1;
  *(void *)&v3[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_listStorages] = a2;
  *(void *)&v3[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_reminderStorages] = a3;
  v9.receiver = v3;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t static REMComplicationDataView.FetchModelInvocation.Result.supportsSecureCoding.getter()
{
  return 1;
}

id REMComplicationDataView.FetchModelInvocation.Result.init(coder:)(void *a1)
{
  objc_super v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  id v5 = v2;
  uint64_t v6 = sub_1A73340FC();
  if (!v6) {
    goto LABEL_7;
  }
  uint64_t v7 = v6;
  uint64_t v8 = sub_1A7334200();
  if (!v8)
  {
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:

    unint64_t v14 = self;
    uint64_t v15 = (void *)sub_1A75725E0();
    id v16 = objc_msgSend(v14, sel_internalErrorWithDebugDescription_, v15);

    uint64_t v17 = (void *)sub_1A7571840();
    objc_msgSend(a1, sel_failWithError_, v17);

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1A7334300();
  if (!v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v11 = v10;

  id v12 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v12[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_accountStorages] = v7;
  *(void *)&v12[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_listStorages] = v9;
  *(void *)&v12[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_reminderStorages] = v11;
  v19.receiver = v12;
  v19.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v19, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v13;
}

uint64_t sub_1A73340FC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1CE0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A7578D60;
  *(void *)(v0 + 32) = sub_1A72BEFEC(0, &qword_1E96F1CE8);
  *(void *)(v0 + 40) = sub_1A72BEFEC(0, &qword_1EB705910);
  sub_1A7573130();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705938);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1CC8);
  if (swift_dynamicCast()) {
    uint64_t v1 = v3;
  }
  else {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A7334200()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1CE0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A7578D60;
  *(void *)(v0 + 32) = sub_1A72BEFEC(0, &qword_1E96F1CE8);
  *(void *)(v0 + 40) = sub_1A72BEFEC(0, &qword_1EB7058F8);
  sub_1A7573130();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705938);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1CD0);
  if (swift_dynamicCast()) {
    uint64_t v1 = v3;
  }
  else {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A7334300()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1CE0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A7578D60;
  *(void *)(v0 + 32) = sub_1A72BEFEC(0, &qword_1E96F1CE8);
  *(void *)(v0 + 40) = sub_1A72BEFEC(0, &qword_1EB705918);
  sub_1A7573130();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705938);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1CD8);
  if (swift_dynamicCast()) {
    uint64_t v1 = v3;
  }
  else {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRelease();
  return v1;
}

Swift::Void __swiftcall REMComplicationDataView.FetchModelInvocation.Result.encode(with:)(NSCoder with)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_accountStorages);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1CC8);
  v29[0] = v3;
  sub_1A7335644((uint64_t)v29, (uint64_t)v27);
  uint64_t v4 = v28;
  if (v28)
  {
    id v5 = __swift_project_boxed_opaque_existential_1(v27, v28);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1A7573DA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
  }
  uint64_t v10 = (void *)sub_1A75725E0();
  [(objc_class *)with.super.isa encodeObject:v9 forKey:v10];
  swift_unknownObjectRelease();

  sub_1A7315924((uint64_t)v29);
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_listStorages);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1CD0);
  v29[0] = v11;
  sub_1A7335644((uint64_t)v29, (uint64_t)v27);
  uint64_t v12 = v28;
  if (v28)
  {
    id v13 = __swift_project_boxed_opaque_existential_1(v27, v28);
    uint64_t v14 = *(void *)(v12 - 8);
    MEMORY[0x1F4188790](v13);
    id v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v14 + 16))(v16);
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1A7573DA0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = 0;
  }
  unint64_t v18 = (void *)sub_1A75725E0();
  [(objc_class *)with.super.isa encodeObject:v17 forKey:v18];
  swift_unknownObjectRelease();

  sub_1A7315924((uint64_t)v29);
  uint64_t v19 = *(void *)(v1 + OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_reminderStorages);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1CD8);
  v29[0] = v19;
  sub_1A7335644((uint64_t)v29, (uint64_t)v27);
  uint64_t v20 = v28;
  if (v28)
  {
    id v21 = __swift_project_boxed_opaque_existential_1(v27, v28);
    uint64_t v22 = *(void *)(v20 - 8);
    MEMORY[0x1F4188790](v21);
    id v24 = (char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v22 + 16))(v24);
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1A7573DA0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = 0;
  }
  id v26 = (void *)sub_1A75725E0();
  [(objc_class *)with.super.isa encodeObject:v25 forKey:v26];
  swift_unknownObjectRelease();

  sub_1A7315924((uint64_t)v29);
}

id REMComplicationDataView.FetchModelInvocation.Result.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void REMComplicationDataView.FetchModelInvocation.Result.init()()
{
}

void sub_1A73349FC(uint64_t a1, id *a2, uint64_t a3, uint64_t a4)
{
  id v6 = *a2;
  id v7 = objc_msgSend(*a2, sel_accountID);
  uint64_t v8 = sub_1A7402458(v7, a3);

  if (v8)
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94B28]), sel_initWithStore_account_storage_, a4, v8, v6);
    id v10 = objc_msgSend(v9, sel_objectID);
    id v11 = v9;
    sub_1A7404450((uint64_t)v11, v10);
  }
  else
  {
    if (qword_1E96F0710 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1A7571E90();
    __swift_project_value_buffer(v12, (uint64_t)qword_1E96F1C98);
    id v13 = v7;
    id v14 = v6;
    uint64_t v15 = sub_1A7571E80();
    os_log_type_t v16 = sub_1A7572FE0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      unint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138412546;
      id v19 = objc_msgSend(v14, sel_objectID);
      sub_1A7573250();
      *unint64_t v18 = v19;

      *(_WORD *)(v17 + 12) = 2112;
      id v20 = v13;
      sub_1A7573250();
      v18[1] = v13;

      _os_log_impl(&dword_1A72A1000, v15, v16, "Complications Data View fetched a list with an account ID, but no corresponding account was provided. Failed to make list. {list.objectID: %@, accountID: %@)", (uint8_t *)v17, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v18, -1, -1);
      MEMORY[0x1AD0CD330](v17, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1A7334CAC(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  id v7 = *a1;
  id v8 = objc_msgSend(*a1, sel_listID);
  if (!v8)
  {
    if (qword_1E96F0710 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1A7571E90();
    __swift_project_value_buffer(v14, (uint64_t)qword_1E96F1C98);
    id v15 = v7;
    os_log_type_t v16 = sub_1A7571E80();
    os_log_type_t v17 = sub_1A7572FE0();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      id v19 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v18 = 138412290;
      id v32 = objc_msgSend(v15, sel_objectID);
      sub_1A7573250();
      *id v19 = v32;

      _os_log_impl(&dword_1A72A1000, v16, v17, "Complications Data View fetched a reminder with no list ID. Failed to make reminder. {reminder.objectID: %@}", v18, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v19, -1, -1);
      MEMORY[0x1AD0CD330](v18, -1, -1);
    }
    else
    {
    }
    goto LABEL_15;
  }
  id v9 = v8;
  id v10 = v8;
  id v11 = sub_1A740246C(v10, a2);

  if (!v11)
  {
    if (qword_1E96F0710 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E96F1C98);
    id v21 = v7;
    id v22 = v10;
    id v23 = v21;
    id v24 = v22;
    uint64_t v25 = sub_1A7571E80();
    os_log_type_t v26 = sub_1A7572FE0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 138412546;
      os_log_type_t type = v26;
      id v29 = objc_msgSend(v23, sel_objectID);
      sub_1A7573250();
      *uint64_t v28 = v29;

      *(_WORD *)(v27 + 12) = 2112;
      id v30 = v24;
      sub_1A7573250();
      v28[1] = v9;

      _os_log_impl(&dword_1A72A1000, v25, type, "Complications Data View fetched a reminder with a list ID, but no corresponding list was provided. Failed to make reminder. {reminder.objectID: %@, listID: %@}", (uint8_t *)v27, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v28, -1, -1);
      MEMORY[0x1AD0CD330](v27, -1, -1);
    }
    else
    {
    }
    goto LABEL_15;
  }
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94BE8]), sel_initWithStore_list_storage_, a3, v11, v7);
  id v13 = objc_msgSend(v12, sel_displayDate);

  if (!v13)
  {

LABEL_15:
    id v12 = 0;
  }
  *a4 = v12;
}

uint64_t sub_1A73350D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1A75738D0())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AD0CB800](i - 4, a1) : *(id *)(a1 + 8 * i);
      id v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v14 = v7;
      sub_1A7334CAC(&v14, a2, a3, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v13)
      {
        MEMORY[0x1AD0CABF0]();
        if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1A7572A60();
        }
        sub_1A7572AB0();
        sub_1A7572A30();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1A7335270(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  if (a2 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1A75738D0();
    if (v5) {
      goto LABEL_3;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    return a1;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_31;
  }
LABEL_3:
  uint64_t v32 = v3;
  unint64_t v33 = v3 & 0xC000000000000001;
  uint64_t v6 = 4;
  while (1)
  {
    if (v33) {
      id v9 = (id)MEMORY[0x1AD0CB800](v6 - 4, v3);
    }
    else {
      id v9 = *(id *)(v3 + 8 * v6);
    }
    id v10 = v9;
    uint64_t v3 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94A48]), sel_initWithStore_storage_, a3, v9);
    id v12 = objc_msgSend(v11, sel_objectID);
    if ((a1 & 0xC000000000000001) != 0)
    {
      if (a1 < 0) {
        uint64_t v13 = a1;
      }
      else {
        uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8;
      }
      id v14 = v11;
      uint64_t v15 = sub_1A7573400();
      if (__OFADD__(v15, 1)) {
        goto LABEL_28;
      }
      a1 = sub_1A74045E4(v13, v15 + 1);
    }
    else
    {
      id v16 = v11;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = sub_1A72B252C((uint64_t)v12);
    uint64_t v20 = *(void *)(a1 + 16);
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      goto LABEL_27;
    }
    char v23 = v18;
    if (*(void *)(a1 + 24) < v22) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1A72BB790();
    }
LABEL_23:
    uint64_t v26 = 8 * v19;
    if (v23)
    {
      uint64_t v7 = *(void *)(a1 + 56);

      *(void *)(v7 + v26) = v11;
    }
    else
    {
      *(void *)(a1 + 8 * (v19 >> 6) + 64) |= 1 << v19;
      *(void *)(*(void *)(a1 + 48) + 8 * v19) = v12;
      *(void *)(*(void *)(a1 + 56) + 8 * v19) = v11;
      uint64_t v27 = *(void *)(a1 + 16);
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        goto LABEL_29;
      }
      *(void *)(a1 + 16) = v29;
      id v30 = v12;
    }

    swift_bridgeObjectRelease();
    ++v6;
    BOOL v8 = v3 == v5;
    uint64_t v3 = v32;
    if (v8) {
      goto LABEL_31;
    }
  }
  sub_1A72B542C(v22, isUniquelyReferenced_nonNull_native);
  unint64_t v24 = sub_1A72B252C((uint64_t)v12);
  if ((v23 & 1) == (v25 & 1))
  {
    unint64_t v19 = v24;
    goto LABEL_23;
  }
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

void *sub_1A7335504(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = a1;
  BOOL v8 = a1;
  if (a2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v9; uint64_t v9 = sub_1A75738D0())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v11 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AD0CB800](i - 4, a2) : *(id *)(a2 + 8 * i);
      BOOL v8 = v11;
      uint64_t v12 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v14 = v11;
      sub_1A73349FC((uint64_t)&v15, &v14, a3, a4);
      if (v4)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v8;
      }

      if (v12 == v9)
      {
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1A7335644(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705938);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for REMComplicationDataView()
{
  return self;
}

uint64_t method lookup function for REMComplicationDataView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMComplicationDataView);
}

uint64_t dispatch thunk of REMComplicationDataView.__allocating_init(store:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for REMComplicationDataView.Model()
{
  return &type metadata for REMComplicationDataView.Model;
}

uint64_t type metadata accessor for REMComplicationDataView.FetchModelInvocation.Result()
{
  return self;
}

uint64_t method lookup function for REMComplicationDataView.FetchModelInvocation.Result(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMComplicationDataView.FetchModelInvocation.Result);
}

uint64_t dispatch thunk of REMComplicationDataView.FetchModelInvocation.Result.__allocating_init(accountStorages:listStorages:reminderStorages:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t static REMPrivacyPermissionsDataView.hasIncompleteRemindersWithLocation(store:)(char a1)
{
  return sub_1A7335814(a1, (void (*)(void))type metadata accessor for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation, (void (*)(void *__return_ptr))sub_1A72F4BB4) & 1;
}

uint64_t type metadata accessor for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation()
{
  return self;
}

uint64_t static REMPrivacyPermissionsDataView.hasIncompleteRemindersWithDueDate(store:)(char a1)
{
  return sub_1A7335814(a1, (void (*)(void))type metadata accessor for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation, (void (*)(void *__return_ptr))sub_1A72F4C34) & 1;
}

uint64_t sub_1A7335814(char a1, void (*a2)(void), void (*a3)(void *__return_ptr))
{
  a2();
  id v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  a3(v9);
  if (v3)
  {
  }
  else
  {
    a1 = v9[0];
    uint64_t v7 = (void *)v9[1];
  }
  return a1 & 1;
}

uint64_t type metadata accessor for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation()
{
  return self;
}

uint64_t static REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_1A73358DC(uint64_t a1)
{
  unint64_t v2 = sub_1A7335990();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7335918(uint64_t a1)
{
  unint64_t v2 = sub_1A7335990();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.Parameters.encode(to:)(void *a1)
{
  return sub_1A7335D30(a1, &qword_1EB701A58, (void (*)(void))sub_1A7335990);
}

unint64_t sub_1A7335990()
{
  unint64_t result = qword_1EB701A10;
  if (!qword_1EB701A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701A10);
  }
  return result;
}

uint64_t REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.Parameters.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1A7335A0C(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1A7335A34(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A7335F08(a1, a2, a3, &qword_1EB701A58, (void (*)(void))sub_1A7335990);
}

uint64_t REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.Result.hasLocationAlarms.getter()
{
  return *v0;
}

unint64_t sub_1A7335A78()
{
  return 0xD000000000000011;
}

uint64_t sub_1A7335A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7336E10(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A7335AC0(uint64_t a1)
{
  unint64_t v2 = sub_1A7335B74();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7335AFC(uint64_t a1)
{
  unint64_t v2 = sub_1A7335B74();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.Result.encode(to:)(void *a1)
{
  return sub_1A7336134(a1, &qword_1EB701A68, (void (*)(void))sub_1A7335B74);
}

unint64_t sub_1A7335B74()
{
  unint64_t result = qword_1EB7033F8;
  if (!qword_1EB7033F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7033F8);
  }
  return result;
}

uint64_t REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.Result.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1A7336304(a1, &qword_1EB701A48, (void (*)(void))sub_1A7335B74, a2);
}

uint64_t sub_1A7335C04@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A7335C1C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73364BC(a1, a2, a3, &qword_1EB701A68, (void (*)(void))sub_1A7335B74);
}

uint64_t static REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_1A7335C7C(uint64_t a1)
{
  unint64_t v2 = sub_1A7335E50();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7335CB8(uint64_t a1)
{
  unint64_t v2 = sub_1A7335E50();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Parameters.encode(to:)(void *a1)
{
  return sub_1A7335D30(a1, &qword_1EB701A50, (void (*)(void))sub_1A7335E50);
}

uint64_t sub_1A7335D30(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  BOOL v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A75741B0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A7335E50()
{
  unint64_t result = qword_1EB7019E8;
  if (!qword_1EB7019E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7019E8);
  }
  return result;
}

uint64_t REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Parameters.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1A7335ECC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A7335F08(a1, a2, a3, &qword_1EB701A50, (void (*)(void))sub_1A7335E50);
}

uint64_t sub_1A7335F08(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_1A75741B0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Result.hasRemindersWithDueDate.getter()
{
  return *v0;
}

ReminderKitInternal::REMPrivacyPermissionsDataView::IncompleteRemindersCountWithDueDateInvocation::Result __swiftcall REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Result.init(hasRemindersWithDueDate:)(ReminderKitInternal::REMPrivacyPermissionsDataView::IncompleteRemindersCountWithDueDateInvocation::Result hasRemindersWithDueDate)
{
  v1->hasRemindersWithDueDate = hasRemindersWithDueDate.hasRemindersWithDueDate;
  return hasRemindersWithDueDate;
}

unint64_t sub_1A7336038()
{
  return 0xD000000000000017;
}

uint64_t sub_1A7336054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7336E98(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A7336080(uint64_t a1)
{
  unint64_t v2 = sub_1A7336274();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73360BC(uint64_t a1)
{
  unint64_t v2 = sub_1A7336274();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Result.encode(to:)(void *a1)
{
  return sub_1A7336134(a1, &qword_1EB701A60, (void (*)(void))sub_1A7336274);
}

uint64_t sub_1A7336134(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v10 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10();
  sub_1A75741B0();
  sub_1A7573B20();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A7336274()
{
  unint64_t result = qword_1EB7033E8;
  if (!qword_1EB7033E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7033E8);
  }
  return result;
}

uint64_t REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Result.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1A7336304(a1, &qword_1EB701A40, (void (*)(void))sub_1A7336274, a2);
}

uint64_t sub_1A7336304@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v13 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v14 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A7574190();
  if (!v4)
  {
    char v10 = sub_1A7573A10();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v7);
    *uint64_t v13 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A7336468@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A7336480(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73364BC(a1, a2, a3, &qword_1EB701A60, (void (*)(void))sub_1A7336274);
}

uint64_t sub_1A73364BC(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v12 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12();
  sub_1A75741B0();
  sub_1A7573B20();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t REMPrivacyPermissionsDataView.deinit()
{
  return v0;
}

uint64_t REMPrivacyPermissionsDataView.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

unint64_t sub_1A73366B4()
{
  unint64_t result = qword_1E96F1CF0;
  if (!qword_1E96F1CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1CF0);
  }
  return result;
}

unint64_t sub_1A7336714()
{
  unint64_t result = qword_1E96F1CF8;
  if (!qword_1E96F1CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1CF8);
  }
  return result;
}

unint64_t sub_1A733676C()
{
  unint64_t result = qword_1E96F1D00;
  if (!qword_1E96F1D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1D00);
  }
  return result;
}

unint64_t sub_1A73367CC()
{
  unint64_t result = qword_1E96F1D08;
  if (!qword_1E96F1D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1D08);
  }
  return result;
}

uint64_t type metadata accessor for REMPrivacyPermissionsDataView()
{
  return self;
}

uint64_t method lookup function for REMPrivacyPermissionsDataView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMPrivacyPermissionsDataView);
}

ValueMetadata *type metadata accessor for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.Parameters()
{
  return &type metadata for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.Parameters;
}

ValueMetadata *type metadata accessor for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.Result()
{
  return &type metadata for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.Result;
}

ValueMetadata *type metadata accessor for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Parameters()
{
  return &type metadata for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Parameters;
}

unsigned char *_s19ReminderKitInternal29REMPrivacyPermissionsDataViewC46IncompleteRemindersCountWithLocationInvocationC6ResultVwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7336960);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Result()
{
  return &type metadata for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Result;
}

ValueMetadata *type metadata accessor for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Result.CodingKeys()
{
  return &type metadata for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithDueDateInvocation.Parameters.CodingKeys;
}

unsigned char *_s19ReminderKitInternal29REMPrivacyPermissionsDataViewC45IncompleteRemindersCountWithDueDateInvocationC6ResultV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A7336A58);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.Result.CodingKeys()
{
  return &type metadata for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMPrivacyPermissionsDataView.IncompleteRemindersCountWithLocationInvocation.Parameters.CodingKeys;
}

unint64_t sub_1A7336AA4()
{
  unint64_t result = qword_1E96F1D10;
  if (!qword_1E96F1D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1D10);
  }
  return result;
}

unint64_t sub_1A7336AFC()
{
  unint64_t result = qword_1E96F1D18;
  if (!qword_1E96F1D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1D18);
  }
  return result;
}

unint64_t sub_1A7336B54()
{
  unint64_t result = qword_1EB7033E0;
  if (!qword_1EB7033E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7033E0);
  }
  return result;
}

unint64_t sub_1A7336BAC()
{
  unint64_t result = qword_1EB7033F0;
  if (!qword_1EB7033F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7033F0);
  }
  return result;
}

unint64_t sub_1A7336C04()
{
  unint64_t result = qword_1EB7019F8;
  if (!qword_1EB7019F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7019F8);
  }
  return result;
}

unint64_t sub_1A7336C5C()
{
  unint64_t result = qword_1EB7019F0;
  if (!qword_1EB7019F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7019F0);
  }
  return result;
}

unint64_t sub_1A7336CB4()
{
  unint64_t result = qword_1EB703408;
  if (!qword_1EB703408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703408);
  }
  return result;
}

unint64_t sub_1A7336D0C()
{
  unint64_t result = qword_1EB703400;
  if (!qword_1EB703400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703400);
  }
  return result;
}

unint64_t sub_1A7336D64()
{
  unint64_t result = qword_1EB701A20;
  if (!qword_1EB701A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701A20);
  }
  return result;
}

unint64_t sub_1A7336DBC()
{
  unint64_t result = qword_1EB701A18;
  if (!qword_1EB701A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701A18);
  }
  return result;
}

uint64_t sub_1A7336E10(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001A759FE40)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1A7336E98(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x80000001A759FE60)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

id sub_1A7336F2C()
{
  qword_1EB700640 = *MEMORY[0x1E4F28358];
  return (id)qword_1EB700640;
}

uint64_t static NSFileProtectionType.rem_spotlightIndexFileProtection.getter()
{
  if (qword_1EB700BC8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB700640;
  id v1 = (id)qword_1EB700640;
  return v0;
}

uint64_t sub_1A7336FA0(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  if (!v5) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v8 << 6))
  {
    uint64_t v12 = *(void *)(a1 + 56) + 32 * i;
    if (*(unsigned char *)(v12 + 24))
    {
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v16 = *(void *)(v12 + 8);
      uint64_t v17 = *(void *)(v12 + 16);
      sub_1A73455E0(v16, v17, 0);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1A72AC148(0, v9[2] + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      unint64_t v19 = v9[2];
      unint64_t v18 = v9[3];
      uint64_t v20 = v9;
      if (v19 >= v18 >> 1)
      {
        uint64_t result = (uint64_t)sub_1A72AC148((void *)(v18 > 1), v19 + 1, 1, v9);
        uint64_t v20 = (void *)result;
      }
      v20[2] = v19 + 1;
      uint64_t v9 = v20;
      BOOL v21 = &v20[2 * v19];
      v21[4] = v16;
      v21[5] = v17;
      if (v5) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v6) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v6) {
        goto LABEL_29;
      }
      unint64_t v14 = *(void *)(v2 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v6) {
          goto LABEL_29;
        }
        unint64_t v14 = *(void *)(v2 + 8 * v8);
        if (!v14)
        {
          int64_t v8 = v13 + 3;
          if (v13 + 3 >= v6) {
            goto LABEL_29;
          }
          unint64_t v14 = *(void *)(v2 + 8 * v8);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v6)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v9;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v15);
  if (v14)
  {
    int64_t v8 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v8);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A7337198()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1EB700B18);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB700B18);
  if (qword_1EB7042A8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F18);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

double static REMAnchoredBubbleModel.defaultDistanceScale.getter()
{
  return 0.2;
}

double static REMAnchoredBubbleModel.distanceScaleAdjustmentStep.getter()
{
  return 0.05;
}

void static REMAnchoredBubbleModel.train(titleList:distanceScale:usePCA:)(uint64_t a1, void *a2, char a3)
{
  char v5 = a3 & 1;
  int64_t v6 = (void *)MEMORY[0x1AD0CC790]();
  sub_1A7337304(a1, a2, v5, &v7);
}

void sub_1A7337304(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  uint64_t v24 = a1;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1DF8);
  sub_1A734686C();
  sub_1A72DF534();
  uint64_t v7 = sub_1A7572970();
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  unint64_t v10 = self;
  uint64_t v11 = (void *)sub_1A75725E0();
  id v12 = objc_msgSend(v10, sel_dominantLanguageForString_, v11);

  if (v12)
  {
    swift_bridgeObjectRelease();
    static REMAnchoredBubbleModel.train(titleList:lang:distanceScale:usePCA:)(a1, (unint64_t)v12, a2, a3 & 1, 1);
    uint64_t v14 = v13;

    if (!v23) {
      *a4 = v14;
    }
  }
  else
  {
    if (qword_1EB700B30 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1A7571E90();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB700B18);
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1A7571E80();
    os_log_type_t v17 = sub_1A7572FD0();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v24 = v19;
      *(_DWORD *)unint64_t v18 = 136315138;
      swift_bridgeObjectRetain();
      sub_1A72D1730(v7, v9, &v24);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A72A1000, v16, v17, "REMAnchoredBubbleModel: Unable to detect language from title string %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v19, -1, -1);
      MEMORY[0x1AD0CD330](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v20 = self;
    BOOL v21 = (void *)sub_1A75725E0();
    objc_msgSend(v20, sel_internalErrorWithDebugDescription_, v21);

    swift_willThrow();
  }
}

void static REMAnchoredBubbleModel.train(titleList:lang:distanceScale:usePCA:)(uint64_t a1, unint64_t a2, void *a3, char a4, char a5)
{
  unint64_t v9 = a2;
  id v11 = objc_msgSend(self, sel_wordEmbeddingForLanguage_, a2);
  if (!v11)
  {
    if (qword_1EB700B30 != -1) {
LABEL_31:
    }
      swift_once();
    uint64_t v18 = sub_1A7571E90();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EB700B18);
    id v19 = (id)v9;
    uint64_t v20 = sub_1A7571E80();
    os_log_type_t v21 = sub_1A7572FD0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v76 = (void *)v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v75 = sub_1A72D1730(v24, v25, (uint64_t *)&v76);
      sub_1A7573250();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v20, v21, "REMAnchoredBubbleModel: Missing NLEmbedding for %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v23, -1, -1);
      MEMORY[0x1AD0CD330](v22, -1, -1);
    }
    else
    {
    }
    v63 = self;
    v76 = 0;
    unint64_t v77 = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    v76 = (void *)0xD000000000000030;
    unint64_t v77 = 0x80000001A759FE80;
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    v64 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v63, sel_internalErrorWithDebugDescription_, v64);

    swift_willThrow();
    return;
  }
  id v12 = v11;
  sub_1A7337CF4(a1, v9);
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_1A72D2538(v13);
  swift_bridgeObjectRelease();
  v76 = v14;
  sub_1A73418B0((uint64_t *)&v76, (uint64_t (*)(uint64_t))sub_1A74F9E68, sub_1A7342A64);
  if (v5) {
    goto LABEL_33;
  }
  char v69 = a4;
  uint64_t v15 = swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t)v76;
  uint64_t v70 = (uint64_t)a3;
  if (a5)
  {
    uint64_t v15 = sub_1A7344E08((uint64_t)v76, v12);
    uint64_t v17 = v15;
  }
  else
  {
    uint64_t v17 = 0;
  }
  uint64_t v26 = MEMORY[0x1E4FBC868];
  v76 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v27 = *(void *)(v16 + 16);
  if (!v27)
  {
    uint64_t v29 = (void *)MEMORY[0x1E4FBC868];
LABEL_26:
    uint64_t v75 = 0x3FC999999999999ALL;
    v76 = (void *)v26;
    v53 = (void *)MEMORY[0x1AD0CC790](v15);
    sub_1A7338640(v70, v69 & 1, (uint64_t *)&v76, v16, (uint64_t)v12, (uint64_t)v29, v17, (double *)&v75);
    swift_release();
    swift_release();
    uint64_t v54 = sub_1A7344120((uint64_t)v76);
    uint64_t v55 = v75;
    type metadata accessor for REMAnchoredBubbleModel();
    uint64_t v56 = swift_allocObject();
    uint64_t v57 = v56 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictionEditingSessionID;
    uint64_t v58 = sub_1A7571BC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 1, 1, v58);
    uint64_t v59 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction;
    *(void *)(v56 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction) = 0;
    *(void *)(v56 + 16) = v9;
    *(void *)(v56 + 24) = v54;
    v60 = (void *)(v56 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_version);
    void *v60 = 3223089;
    v60[1] = 0xE300000000000000;
    *(void *)(v56 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale) = v55;
    *(void *)(v56 + v59) = v17;
    id v61 = (id)v9;
    swift_bridgeObjectRelease();

    swift_release();
    uint64_t v62 = MEMORY[0x1E4FBC860];
    *(void *)(v56 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestTitleTokens) = MEMORY[0x1E4FBC860];
    *(void *)(v56 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions) = v62;
    *(void *)(v56 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels) = 0;
    return;
  }
  uint64_t v66 = v17;
  v67 = v12;
  unint64_t v68 = v9;
  swift_retain();
  uint64_t v65 = v16;
  BOOL v28 = (uint64_t *)(v16 + 64);
  uint64_t v29 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v31 = *(v28 - 3);
    uint64_t v74 = *(v28 - 4);
    uint64_t v32 = *(v28 - 2);
    uint64_t v33 = *(v28 - 1);
    uint64_t v34 = *v28;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1A72B2210(v32, v33);
    uint64_t v36 = v29[2];
    BOOL v37 = (v35 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    a3 = v35;
    if (v29[3] < v38) {
      break;
    }
LABEL_17:
    if (a3)
    {
      uint64_t v72 = v27;
      uint64_t v73 = v34;
      swift_bridgeObjectRelease();
      uint64_t v41 = v29[7];
      v42 = *(void **)(v41 + 8 * v9);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v71 = v41;
      *(void *)(v41 + 8 * v9) = v42;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v42 = sub_1A72ACD4C(0, v42[2] + 1, 1, v42);
        *(void *)(v41 + 8 * v9) = v42;
      }
      unint64_t v45 = v42[2];
      unint64_t v44 = v42[3];
      unint64_t v46 = v45 + 1;
      uint64_t v27 = v72;
      if (v45 >= v44 >> 1)
      {
        v47 = sub_1A72ACD4C((void *)(v44 > 1), v45 + 1, 1, v42);
        unint64_t v46 = v45 + 1;
        v42 = v47;
        *(void *)(v71 + 8 * v9) = v47;
      }
      v42[2] = v46;
      id v30 = &v42[5 * v45];
      v30[4] = v74;
      v30[5] = v31;
      v30[6] = v32;
      v30[7] = v33;
      v30[8] = v73;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F58);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1A75785A0;
      *(void *)(v48 + 32) = v74;
      *(void *)(v48 + 40) = v31;
      *(void *)(v48 + 48) = v32;
      *(void *)(v48 + 56) = v33;
      *(void *)(v48 + 64) = v34;
      v29[(v9 >> 6) + 8] |= 1 << v9;
      v49 = (uint64_t *)(v29[6] + 16 * v9);
      uint64_t *v49 = v32;
      v49[1] = v33;
      *(void *)(v29[7] + 8 * v9) = v48;
      uint64_t v50 = v29[2];
      BOOL v51 = __OFADD__(v50, 1);
      uint64_t v52 = v50 + 1;
      if (v51) {
        goto LABEL_30;
      }
      v29[2] = v52;
    }
    v28 += 5;
    if (!--v27)
    {
      uint64_t v16 = v65;
      uint64_t v15 = swift_release();
      id v12 = v67;
      unint64_t v9 = v68;
      uint64_t v17 = v66;
      uint64_t v26 = MEMORY[0x1E4FBC868];
      goto LABEL_26;
    }
  }
  sub_1A72B576C(v38, 1);
  uint64_t v29 = v76;
  unint64_t v39 = sub_1A72B2210(v32, v33);
  if ((a3 & 1) == (v40 & 1))
  {
    unint64_t v9 = v39;
    goto LABEL_17;
  }
  sub_1A7574010();
  __break(1u);
LABEL_33:
  swift_release();
  __break(1u);
  __break(1u);
}

uint64_t sub_1A7337CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v93 = a2;
  uint64_t v92 = sub_1A7571500();
  MEMORY[0x1F4188790](v92);
  v91 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v95 = a1 + 64;
  uint64_t v106 = MEMORY[0x1E4FBC870];
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  int64_t v96 = (unint64_t)(v6 + 63) >> 6;
  v90 = (void (**)(char *, uint64_t))(v3 + 8);
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v94 = 0;
  unint64_t v10 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v89 = a1;
  while (1)
  {
    if (v8)
    {
      uint64_t v98 = (v8 - 1) & v8;
      int64_t v99 = v9;
      unint64_t v11 = __clz(__rbit64(v8)) | (v9 << 6);
    }
    else
    {
      BOOL v12 = __OFADD__(v9, 1);
      int64_t v13 = v9 + 1;
      if (v12) {
        goto LABEL_98;
      }
      if (v13 >= v96) {
        goto LABEL_91;
      }
      unint64_t v14 = *(void *)(v95 + 8 * v13);
      if (!v14)
      {
        int64_t v15 = v13 + 1;
        if (v13 + 1 >= v96) {
          goto LABEL_91;
        }
        unint64_t v14 = *(void *)(v95 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v13 + 2;
          if (v13 + 2 >= v96) {
            goto LABEL_91;
          }
          unint64_t v14 = *(void *)(v95 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v13 + 3 >= v96) {
              goto LABEL_91;
            }
            unint64_t v14 = *(void *)(v95 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                int64_t v13 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_99;
                }
                if (v13 >= v96) {
                  break;
                }
                unint64_t v14 = *(void *)(v95 + 8 * v13);
                ++v15;
                if (v14) {
                  goto LABEL_19;
                }
              }
LABEL_91:
              swift_release();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return (uint64_t)v10;
            }
          }
        }
        int64_t v13 = v15;
      }
LABEL_19:
      uint64_t v98 = (v14 - 1) & v14;
      int64_t v99 = v13;
      unint64_t v11 = __clz(__rbit64(v14)) + (v13 << 6);
    }
    uint64_t v16 = 16 * v11;
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(a1 + 56) + v16);
    uint64_t v21 = v20[1];
    uint64_t v101 = *v20;
    swift_bridgeObjectRetain();
    uint64_t v22 = swift_bridgeObjectRetain();
    v97 = (void *)MEMORY[0x1AD0CC790](v22);
    if (sub_1A7572700() <= 99) {
      break;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v8 = v98;
    int64_t v9 = v99;
  }
  uint64_t v100 = v19;
  v105[0] = _s19ReminderKitInternal25REMFilteredTitleEmbeddingC17decodeEmojiInText_8languageS2S_So10NLLanguageatFZ_0(v18, v19);
  v105[1] = v23;
  uint64_t v24 = v91;
  sub_1A75714D0();
  sub_1A72DF534();
  uint64_t v25 = sub_1A75732B0();
  unint64_t v27 = v26;
  (*v90)(v24, v92);
  uint64_t v28 = swift_bridgeObjectRelease();
  uint64_t v29 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000) == 0) {
    uint64_t v29 = v25 & 0xFFFFFFFFFFFFLL;
  }
  if (!v29)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v105[0] = MEMORY[0x1E4FBC860];
  id v30 = (void *)MEMORY[0x1AD0CC790](v28);
  uint64_t v31 = v94;
  sub_1A73401A8();
  uint64_t v94 = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = v105[0];
  uint64_t v103 = *(void *)(v105[0] + 16);
  if (!v103)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    a1 = v89;
    goto LABEL_6;
  }
  unint64_t v33 = 0;
  uint64_t v102 = v105[0] + 32;
  uint64_t v104 = v21;
  while (v33 < *(void *)(v32 + 16))
  {
    uint64_t v34 = (uint64_t *)(v102 + 16 * v33);
    uint64_t v35 = *v34;
    uint64_t v36 = v34[1];
    uint64_t v37 = v106;
    if (!*(void *)(v106 + 16))
    {
      swift_bridgeObjectRetain();
      if (v10[2]) {
        goto LABEL_47;
      }
      goto LABEL_58;
    }
    sub_1A75740C0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A75726F0();
    uint64_t v38 = sub_1A7574110();
    uint64_t v39 = -1 << *(unsigned char *)(v37 + 32);
    unint64_t v40 = v38 & ~v39;
    if (((*(void *)(v37 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v41 = *(void *)(v37 + 48);
    v42 = (void *)(v41 + 16 * v40);
    BOOL v43 = *v42 == v35 && v42[1] == v36;
    if (!v43 && (sub_1A7573DB0() & 1) == 0)
    {
      uint64_t v44 = ~v39;
      while (1)
      {
        unint64_t v40 = (v40 + 1) & v44;
        if (((*(void *)(v37 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0) {
          break;
        }
        unint64_t v45 = (void *)(v41 + 16 * v40);
        BOOL v46 = *v45 == v35 && v45[1] == v36;
        if (v46 || (sub_1A7573DB0() & 1) != 0) {
          goto LABEL_26;
        }
      }
LABEL_46:
      swift_bridgeObjectRelease();
      uint64_t v21 = v104;
      if (v10[2])
      {
LABEL_47:
        swift_bridgeObjectRetain();
        unint64_t v47 = sub_1A72B2210(v35, v36);
        if (v48)
        {
          v49 = (uint64_t *)(v10[7] + 24 * v47);
          uint64_t v51 = *v49;
          uint64_t v50 = v49[1];
          uint64_t v52 = v49[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (v51 == v101 && v50 == v21)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v54 = sub_1A7573DB0();
            swift_bridgeObjectRelease();
            if ((v54 & 1) == 0)
            {
              swift_bridgeObjectRetain();
              unint64_t v55 = sub_1A72B2210(v35, v36);
              char v57 = v56;
              swift_bridgeObjectRelease();
              if (v57)
              {
                int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v105[0] = (uint64_t)v10;
                if (!isUniquelyReferenced_nonNull_native)
                {
                  sub_1A72BB7A8();
                  unint64_t v10 = (void *)v105[0];
                }
                swift_bridgeObjectRelease();
                sub_1A7459F10(v55, (uint64_t)v10);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_1A72DF384(v105, v35, v36);
              swift_bridgeObjectRelease();
              goto LABEL_27;
            }
          }
          BOOL v12 = __OFADD__(v52, 1);
          uint64_t v73 = v52 + 1;
          if (v12) {
            goto LABEL_95;
          }
          swift_bridgeObjectRetain();
          char v74 = swift_isUniquelyReferenced_nonNull_native();
          v105[0] = (uint64_t)v10;
          unint64_t v76 = sub_1A72B2210(v35, v36);
          uint64_t v77 = v10[2];
          BOOL v78 = (v75 & 1) == 0;
          uint64_t v79 = v77 + v78;
          if (__OFADD__(v77, v78)) {
            goto LABEL_96;
          }
          char v80 = v75;
          if (v10[3] < v79)
          {
            sub_1A72B5444(v79, v74);
            unint64_t v81 = sub_1A72B2210(v35, v36);
            if ((v80 & 1) != (v82 & 1)) {
              goto LABEL_100;
            }
            unint64_t v76 = v81;
            unint64_t v10 = (void *)v105[0];
            if ((v80 & 1) == 0) {
              goto LABEL_74;
            }
LABEL_78:
            v86 = (void *)(v10[7] + 24 * v76);
            swift_bridgeObjectRelease();
            uint64_t v21 = v104;
            void *v86 = v101;
            v86[1] = v21;
            v86[2] = v73;
LABEL_67:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_27;
          }
          if (v74)
          {
            unint64_t v10 = (void *)v105[0];
            if (v75) {
              goto LABEL_78;
            }
          }
          else
          {
            sub_1A72BB7A8();
            unint64_t v10 = (void *)v105[0];
            if (v80) {
              goto LABEL_78;
            }
          }
LABEL_74:
          v10[(v76 >> 6) + 8] |= 1 << v76;
          v83 = (uint64_t *)(v10[6] + 16 * v76);
          uint64_t *v83 = v35;
          v83[1] = v36;
          v84 = (void *)(v10[7] + 24 * v76);
          uint64_t v21 = v104;
          void *v84 = v101;
          v84[1] = v21;
          v84[2] = v73;
          uint64_t v85 = v10[2];
          BOOL v12 = __OFADD__(v85, 1);
          uint64_t v71 = v85 + 1;
          if (v12) {
            goto LABEL_97;
          }
LABEL_63:
          v10[2] = v71;
          swift_bridgeObjectRetain();
          goto LABEL_67;
        }
        swift_bridgeObjectRelease();
      }
LABEL_58:
      swift_bridgeObjectRetain();
      char v59 = swift_isUniquelyReferenced_nonNull_native();
      v105[0] = (uint64_t)v10;
      unint64_t v61 = sub_1A72B2210(v35, v36);
      uint64_t v62 = v10[2];
      BOOL v63 = (v60 & 1) == 0;
      uint64_t v64 = v62 + v63;
      if (__OFADD__(v62, v63)) {
        goto LABEL_93;
      }
      char v65 = v60;
      if (v10[3] >= v64)
      {
        if (v59)
        {
          unint64_t v10 = (void *)v105[0];
          if ((v60 & 1) == 0) {
            goto LABEL_62;
          }
        }
        else
        {
          sub_1A72BB7A8();
          unint64_t v10 = (void *)v105[0];
          if ((v65 & 1) == 0) {
            goto LABEL_62;
          }
        }
      }
      else
      {
        sub_1A72B5444(v64, v59);
        unint64_t v66 = sub_1A72B2210(v35, v36);
        if ((v65 & 1) != (v67 & 1)) {
          goto LABEL_100;
        }
        unint64_t v61 = v66;
        unint64_t v10 = (void *)v105[0];
        if ((v65 & 1) == 0)
        {
LABEL_62:
          v10[(v61 >> 6) + 8] |= 1 << v61;
          unint64_t v68 = (uint64_t *)(v10[6] + 16 * v61);
          *unint64_t v68 = v35;
          v68[1] = v36;
          char v69 = (void *)(v10[7] + 24 * v61);
          uint64_t v21 = v104;
          *char v69 = v101;
          v69[1] = v21;
          v69[2] = 1;
          uint64_t v70 = v10[2];
          BOOL v12 = __OFADD__(v70, 1);
          uint64_t v71 = v70 + 1;
          if (v12) {
            goto LABEL_94;
          }
          goto LABEL_63;
        }
      }
      uint64_t v72 = (void *)(v10[7] + 24 * v61);
      swift_bridgeObjectRelease();
      uint64_t v21 = v104;
      *uint64_t v72 = v101;
      v72[1] = v21;
      v72[2] = 1;
      goto LABEL_67;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = v104;
LABEL_27:
    if (++v33 == v103) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

void sub_1A7338640(uint64_t a1, char a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double *a8)
{
  uint64_t v9 = v8;
  if ((a2 & 1) == 0)
  {
    *a3 = sub_1A733893C(a4, a5, a6, a7);
    swift_bridgeObjectRelease();
    *(void *)a8 = a1;
    return;
  }
  double v31 = 0.4;
  *a3 = sub_1A733893C(a4, a5, a6, a7);
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v18 = sub_1A7346E48(v17);
  swift_bridgeObjectRelease();
  char v19 = sub_1A7338B88(v18, a5, a7, 0.4);
  swift_bridgeObjectRelease();
  char v30 = v19 & 1;
  uint64_t v20 = swift_beginAccess();
  v21.n128_f64[0] = v31;
  if (v31 > 0.01)
  {
    uint64_t v22 = a8;
    while (v30 == 1)
    {
      uint64_t v23 = (void *)MEMORY[0x1AD0CC790](v20, v21);
      sub_1A7338D90(&v31, a3, a4, a5, a6, a7, &v30);
      if (v9) {
        goto LABEL_17;
      }
      uint64_t v9 = 0;
      v21.n128_f64[0] = v31;
      if (v31 <= 0.01)
      {
        if (v30) {
          goto LABEL_15;
        }
        goto LABEL_9;
      }
    }
    goto LABEL_9;
  }
  uint64_t v22 = a8;
  if ((v19 & 1) == 0)
  {
LABEL_9:
    if (qword_1EB700B30 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1A7571E90();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB700B18);
    uint64_t v25 = sub_1A7571E80();
    os_log_type_t v26 = sub_1A7572FF0();
    if (os_log_type_enabled(v25, v26))
    {
      unint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v27 = 134217984;
      sub_1A7573250();
      _os_log_impl(&dword_1A72A1000, v25, v26, "REMAnchoredBubbleModel: selected scale %f", v27, 0xCu);
      uint64_t v28 = v27;
      uint64_t v22 = a8;
      MEMORY[0x1AD0CD330](v28, -1, -1);
    }

    *uint64_t v22 = v31;
    return;
  }
LABEL_15:
  uint64_t v23 = (void *)MEMORY[0x1AD0CC790](v21);
  sub_1A7339094(a3, a4, a5, a6, a7, v22);
  if (v9)
  {
LABEL_17:
    __break(1u);
  }
  else
  {
  }
}

uint64_t sub_1A733893C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = MEMORY[0x1E4FBC868];
  uint64_t v22 = MEMORY[0x1E4FBC868];
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v7 = 0;
    uint64_t v8 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
    while (1)
    {
      unint64_t v10 = (void *)*(v8 - 1);
      uint64_t v9 = *v8;
      ++v7;
      uint64_t v12 = *(v8 - 3);
      uint64_t v11 = *(v8 - 2);
      swift_bridgeObjectRetain();
      uint64_t v13 = swift_bridgeObjectRetain();
      unint64_t v14 = (void *)MEMORY[0x1AD0CC790](v13);
      sub_1A73406AC(a2, v12, v11, a3, v10, v9, a4, (double *)&v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v22;
      if (*(void *)(v22 + 16) >> 3 >= 0x271uLL) {
        break;
      }
      v8 += 5;
      if (v20 == v7) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_1EB700B30 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1A7571E90();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB700B18);
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1A7571E80();
    os_log_type_t v17 = sub_1A7572FB0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 134218240;
      sub_1A7573250();
      *(_WORD *)(v18 + 12) = 2048;
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v16, v17, "Achieved maxAnchoredBubbleCount. Examined %ld word from total %ld candidates", (uint8_t *)v18, 0x16u);
      MEMORY[0x1AD0CD330](v18, -1, -1);

      return v4;
    }

LABEL_11:
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1A7338B88(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v9 = (void *)MEMORY[0x1AD0CC790]();
  sub_1A7340F48(a1, a2, a3, &v16, &v17, v4, a4);
  if (qword_1EB700B30 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1A7571E90();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB700B18);
  uint64_t v11 = sub_1A7571E80();
  os_log_type_t v12 = sub_1A7572FF0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 134218240;
    swift_beginAccess();
    sub_1A7573250();
    *(_WORD *)(v13 + 12) = 2048;
    swift_beginAccess();
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v11, v12, "REMAnchoredBubbleModel: checking singular with %ld vectorizable bubbles and %ld are non-singular", (uint8_t *)v13, 0x16u);
    MEMORY[0x1AD0CD330](v13, -1, -1);
  }

  uint64_t result = swift_beginAccess();
  uint64_t v15 = 5 * v17;
  if ((unsigned __int128)(v17 * (__int128)5) >> 64 == (5 * v17) >> 63)
  {
    swift_beginAccess();
    return v15 < v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A7338D90(double *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  swift_beginAccess();
  *a1 = *a1 + -0.05;
  if (qword_1EB700B30 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1A7571E90();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EB700B18);
  unint64_t v14 = sub_1A7571E80();
  os_log_type_t v15 = sub_1A7572FF0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v24 = a7;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 134217984;
    swift_beginAccess();
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v14, v15, "REMAnchoredBubbleModel: current scale %f", v16, 0xCu);
    uint64_t v17 = v16;
    a7 = v24;
    MEMORY[0x1AD0CD330](v17, -1, -1);
  }

  swift_beginAccess();
  *a2 = sub_1A733893C(a3, a4, a5, a6);
  swift_bridgeObjectRelease();
  uint64_t v18 = swift_bridgeObjectRetain();
  unint64_t v19 = sub_1A7346E48(v18);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v20 = sub_1A7338B88(v19, a4, a6, *a1);
  swift_bridgeObjectRelease();
  *a7 = v20 & 1;
  __n128 v21 = sub_1A7571E80();
  os_log_type_t v22 = sub_1A7572FF0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 134217984;
    swift_beginAccess();
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v21, v22, "REMAnchoredBubbleModel: trained for scale %f", v23, 0xCu);
    MEMORY[0x1AD0CD330](v23, -1, -1);
  }
}

uint64_t sub_1A7339094(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (qword_1EB700B30 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1A7571E90();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB700B18);
  os_log_type_t v12 = sub_1A7571E80();
  os_log_type_t v13 = sub_1A7572FF0();
  if (os_log_type_enabled(v12, v13))
  {
    unint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v14 = 134217984;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v12, v13, "REMAnchoredBubbleModel: fall back with default %f", v14, 0xCu);
    MEMORY[0x1AD0CD330](v14, -1, -1);
  }

  *a1 = sub_1A733893C(a2, a3, a4, a5);
  uint64_t result = swift_bridgeObjectRelease();
  *a6 = 0x3FC999999999999ALL;
  return result;
}

uint64_t sub_1A7339254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A7571BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  os_log_type_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  os_log_type_t v15 = &v23[-v14];
  uint64_t result = sub_1A733F3E0(a1, a2);
  if (v17)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDD0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
    *(unsigned char *)(inited + 32) = 4;
    *(void *)(inited + 40) = MEMORY[0x1E4FBC870];
    unint64_t v19 = sub_1A72B0BB8(inited);
    sub_1A7571B70();
    swift_bridgeObjectRelease();
    sub_1A72BF1E8((uint64_t)v15, (uint64_t)v13, &qword_1EB704C40);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
    {
      sub_1A72CB560((uint64_t)v15, &qword_1EB704C40);
      sub_1A72CB560((uint64_t)v13, &qword_1EB704C40);
      unint64_t v20 = 0xE500000000000000;
      uint64_t v21 = 0x296C696E28;
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v9, v13, v6);
      uint64_t v21 = sub_1A7571B80();
      unint64_t v20 = v22;
      sub_1A72CB560((uint64_t)v15, &qword_1EB704C40);
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    }
    type metadata accessor for REMSuggestedList();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v21;
    *(void *)(result + 24) = v20;
    *(void *)a3 = v19;
    *(void *)(a3 + 8) = result;
    *(void *)(a3 + 16) = 0;
    *(void *)(a3 + 24) = 0;
    *(unsigned char *)(a3 + 32) = 0;
  }
  else
  {
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(unsigned char *)(a3 + 32) = -1;
  }
  return result;
}

uint64_t sub_1A73394F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A75719C0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v29 - v7;
  sub_1A7571910();
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale);
  uint64_t v10 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v0 + 24);
  sub_1A75714B0();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1A75714A0();
  v36[0] = 3223089;
  v36[1] = 0xE300000000000000;
  v36[2] = v9;
  v36[3] = v10;
  v36[4] = v12;
  v36[5] = v13;
  sub_1A73453D8();
  uint64_t v14 = sub_1A7571490();
  uint64_t v32 = v2;
  uint64_t v15 = v14;
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v33 = v15;
  unint64_t v34 = v17;
  sub_1A7571A30();
  if (qword_1EB700B30 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1A7571E90();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EB700B18);
  uint64_t v19 = v32;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v32);
  unint64_t v20 = sub_1A7571E80();
  os_log_type_t v21 = sub_1A7572FF0();
  if (os_log_type_enabled(v20, v21))
  {
    os_log_t v31 = v20;
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v36[0] = v30;
    *(_DWORD *)unint64_t v22 = 136315138;
    v29[1] = v22 + 4;
    uint64_t v23 = sub_1A7571890();
    uint64_t v35 = sub_1A72D1730(v23, v24, v36);
    sub_1A7573250();
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v3 + 8);
    v25(v6, v19);
    unint64_t v20 = v31;
    _os_log_impl(&dword_1A72A1000, v31, v21, "REMAnchoredBubbleModel: Model info saved to {%s}", v22, 0xCu);
    uint64_t v26 = v30;
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v26, -1, -1);
    MEMORY[0x1AD0CD330](v22, -1, -1);
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t))(v3 + 8);
    v25(v6, v19);
  }

  if (*(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction))
  {
    swift_retain();
    char v28 = sub_1A752D770();
    sub_1A72E3460(v33, v34);
    swift_release();
    v25(v8, v19);
  }
  else
  {
    v25(v8, v19);
    sub_1A72E3460(v33, v34);
    char v28 = 1;
  }
  return v28 & 1;
}

uint64_t sub_1A7339B88(uint64_t a1)
{
  uint64_t v3 = sub_1A75719C0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale);
  uint64_t v8 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v1 + 24);
  sub_1A75714B0();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1A75714A0();
  v26[0] = 3223089;
  v26[1] = 0xE300000000000000;
  v26[2] = v7;
  v26[3] = v8;
  v26[4] = v10;
  v26[5] = v11;
  sub_1A73453D8();
  uint64_t v13 = sub_1A7571490();
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1A7571A30();
  if (qword_1EB700B30 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1A7571E90();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB700B18);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  unint64_t v17 = sub_1A7571E80();
  os_log_type_t v18 = sub_1A7572FF0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    v26[0] = v20;
    unint64_t v24 = v15;
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v23 = v19 + 4;
    uint64_t v21 = sub_1A7571890();
    uint64_t v25 = sub_1A72D1730(v21, v22, v26);
    sub_1A7573250();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _os_log_impl(&dword_1A72A1000, v17, v18, "REMAnchoredBubbleModel.saveBubblesJson: Model info saved to {%s}", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v20, -1, -1);
    MEMORY[0x1AD0CD330](v19, -1, -1);
    sub_1A72E3460(v13, v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1A72E3460(v13, v15);
  }

  return 1;
}

uint64_t static REMAnchoredBubbleModel.loadOnDeviceTrainedModel(baseURL:)()
{
  uint64_t v0 = sub_1A75719C0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v26[-v4];
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v26[-v6];
  sub_1A7571910();
  uint64_t v8 = sub_1A75719D0();
  unint64_t v10 = v9;
  sub_1A72E3408(v8, v9);
  sub_1A7571920();
  uint64_t v28 = sub_1A752F078();
  uint64_t v11 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  uint64_t v29 = (v1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v11(v5, v0);
  sub_1A7571460();
  swift_allocObject();
  sub_1A7571450();
  sub_1A734542C();
  sub_1A7571440();
  swift_release();
  uint64_t v30 = v7;
  uint64_t v12 = v31;
  uint64_t v13 = v32;
  uint64_t v14 = v33;
  unint64_t v27 = v11;
  uint64_t v15 = v34;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1A75725E0();
  type metadata accessor for REMAnchoredBubbleModel();
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v17 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictionEditingSessionID;
  uint64_t v19 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction;
  *(void *)(v17 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction) = 0;
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v15;
  uint64_t v21 = (void *)(v17 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_version);
  *uint64_t v21 = v12;
  v21[1] = v13;
  *(void *)(v17 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale) = v14;
  *(void *)(v17 + v20) = v28;
  swift_bridgeObjectRetain();
  swift_release();
  sub_1A72E3460(v8, v10);
  unint64_t v22 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  *(void *)(v17 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestTitleTokens) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  sub_1A72E3460(v8, v10);
  *(void *)(v17 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions) = v23;
  unint64_t v24 = v30;
  *(void *)(v17 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels) = 0;
  v22(v24, v0);
  return v17;
}

uint64_t static REMAnchoredBubbleModel.loadGroceryModel(from:labels:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1A75719C0();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1A75719D0();
  unint64_t v6 = v5;
  sub_1A7571460();
  swift_allocObject();
  sub_1A7571450();
  sub_1A734542C();
  sub_1A7571440();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1A75725E0();
  type metadata accessor for REMAnchoredBubbleModel();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = v9 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictionEditingSessionID;
  uint64_t v11 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction;
  *(void *)(v9 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction) = 0;
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v18;
  uint64_t v13 = (void *)(v9 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_version);
  *uint64_t v13 = v15;
  v13[1] = v16;
  *(void *)(v9 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale) = v17;
  *(void *)(v9 + v12) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1A72E3460(v4, v6);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  *(void *)(v9 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestTitleTokens) = MEMORY[0x1E4FBC860];
  *(void *)(v9 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions) = v14;
  *(void *)(v9 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels) = a2;
  return v9;
}

uint64_t sub_1A733B050()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1A7572400();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A733B0B4()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels))
  {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels);
  }
  else
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = sub_1A7336FA0(v2);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1A7341934(v3);
    swift_bridgeObjectRelease();
    unint64_t v6 = v4;
    swift_bridgeObjectRetain_n();
    sub_1A73418B0((uint64_t *)&v6, sub_1A74F9DF0, sub_1A7342378);
    swift_bridgeObjectRelease_n();
    uint64_t v1 = (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A733B198()
{
  return *(void *)(*(void *)(v0 + 24) + 16);
}

double sub_1A733B1A4()
{
  return *(double *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale);
}

uint64_t sub_1A733B1B4()
{
  id v1 = objc_msgSend(self, sel_wordEmbeddingForLanguage_, *(void *)(v0 + 16));
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_1A7344340(*(void *)(v0 + 24));
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction);
    double v5 = *(double *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale);
    swift_retain();
    char v6 = sub_1A7338B88(v3, (uint64_t)v2, v4, v5);

    swift_release();
    swift_release();
    return v6 & 1;
  }
  else
  {
    if (qword_1EB700B30 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A7571E90();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB700B18);
    swift_retain_n();
    uint64_t v9 = sub_1A7571E80();
    os_log_type_t v10 = sub_1A7572FD0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      sub_1A72D1730(v13, v14, &v15);
      sub_1A7573250();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v9, v10, "REMAnchoredBubbleModel: failed to init wordEmbedding for language code %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v12, -1, -1);
      MEMORY[0x1AD0CD330](v11, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return 0;
  }
}

unint64_t sub_1A733B424()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(self, sel_wordEmbeddingForLanguage_, *(void *)(v0 + 16));
  if (!v2)
  {
    if (qword_1EB700B30 != -1) {
      goto LABEL_181;
    }
    goto LABEL_160;
  }
  uint64_t v3 = v2;
  uint64_t v171 = 0;
  unint64_t v172 = MEMORY[0x1E4FBC868];
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v142 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  uint64_t v141 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels;
  uint64_t v8 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction;
  uint64_t v156 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale;
  uint64_t v145 = v4;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  int64_t v9 = 0;
  int64_t v143 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v153 = v1;
  v159 = v3;
  uint64_t v160 = v8;
  while (2)
  {
    while (2)
    {
      while (2)
      {
        if (v7)
        {
          unint64_t v10 = __clz(__rbit64(v7));
          uint64_t v11 = (v7 - 1) & v7;
          unint64_t v12 = v10 | (v9 << 6);
        }
        else
        {
          BOOL v13 = __OFADD__(v9++, 1);
          if (v13) {
            goto LABEL_176;
          }
          if (v9 >= v143) {
            goto LABEL_158;
          }
          unint64_t v14 = *(void *)(v142 + 8 * v9);
          if (!v14)
          {
            int64_t v15 = v9 + 1;
            if (v9 + 1 >= v143) {
              goto LABEL_158;
            }
            unint64_t v14 = *(void *)(v142 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v9 + 2;
              if (v9 + 2 >= v143) {
                goto LABEL_158;
              }
              unint64_t v14 = *(void *)(v142 + 8 * v15);
              if (!v14)
              {
                int64_t v15 = v9 + 3;
                if (v9 + 3 >= v143) {
                  goto LABEL_158;
                }
                unint64_t v14 = *(void *)(v142 + 8 * v15);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v9 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      goto LABEL_180;
                    }
                    if (v9 >= v143) {
                      break;
                    }
                    unint64_t v14 = *(void *)(v142 + 8 * v9);
                    ++v15;
                    if (v14) {
                      goto LABEL_19;
                    }
                  }
LABEL_158:

                  swift_release();
                  swift_beginAccess();
                  return v172;
                }
              }
            }
            int64_t v9 = v15;
          }
LABEL_19:
          uint64_t v11 = (v14 - 1) & v14;
          unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
        }
        uint64_t v16 = (uint64_t *)(*(void *)(v145 + 48) + 16 * v12);
        uint64_t v17 = *v16;
        unint64_t v18 = v16[1];
        uint64_t v19 = *(void *)(v145 + 56) + 32 * v12;
        double v20 = *(double *)v19;
        uint64_t v21 = *(void *)(v19 + 8);
        uint64_t v22 = *(void *)(v19 + 16);
        char v148 = *(unsigned char *)(v19 + 24);
        unint64_t v151 = v11;
        int64_t v152 = v9;
        uint64_t v155 = v21;
        if ((v148 & 1) == 0)
        {
          sub_1A73455E0(v21, v22, 0);
          sub_1A73455E0(v21, v22, 0);
          swift_bridgeObjectRetain();
          uint64_t v149 = v21;
          uint64_t v150 = v22;
          goto LABEL_60;
        }
        uint64_t v164 = *(void *)(v1 + v141);
        if (v164)
        {
          swift_bridgeObjectRetain();
          uint64_t v23 = v164;
          uint64_t v24 = v155;
          if ((v155 & 0x8000000000000000) == 0) {
            goto LABEL_58;
          }
          goto LABEL_63;
        }
        uint64_t v146 = *(void *)(v19 + 16);
        uint64_t v25 = *(void *)(v1 + 24);
        uint64_t v26 = v25 + 64;
        uint64_t v27 = 1 << *(unsigned char *)(v25 + 32);
        if (v27 < 64) {
          uint64_t v28 = ~(-1 << v27);
        }
        else {
          uint64_t v28 = -1;
        }
        unint64_t v29 = v28 & *(void *)(v25 + 64);
        int64_t v30 = (unint64_t)(v27 + 63) >> 6;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        int64_t v31 = 0;
        uint64_t v32 = (void *)MEMORY[0x1E4FBC860];
        if (v29)
        {
LABEL_29:
          unint64_t v33 = __clz(__rbit64(v29));
          v29 &= v29 - 1;
          unint64_t v34 = v33 | (v31 << 6);
          goto LABEL_30;
        }
        while (1)
        {
          BOOL v13 = __OFADD__(v31++, 1);
          if (v13)
          {
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
            goto LABEL_179;
          }
          if (v31 >= v30) {
            goto LABEL_57;
          }
          unint64_t v36 = *(void *)(v26 + 8 * v31);
          if (!v36) {
            break;
          }
LABEL_46:
          unint64_t v29 = (v36 - 1) & v36;
          unint64_t v34 = __clz(__rbit64(v36)) + (v31 << 6);
LABEL_30:
          uint64_t v35 = *(void *)(v25 + 56) + 32 * v34;
          if (*(unsigned char *)(v35 + 24))
          {
            if (v29) {
              goto LABEL_29;
            }
          }
          else
          {
            uint64_t v38 = *(void *)(v35 + 16);
            uint64_t v162 = *(void *)(v35 + 8);
            swift_bridgeObjectRetain();
            uint64_t v39 = v17;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v32 = sub_1A72AC148(0, v32[2] + 1, 1, v32);
            }
            unint64_t v41 = v32[2];
            unint64_t v40 = v32[3];
            v42 = v32;
            if (v41 >= v40 >> 1) {
              v42 = sub_1A72AC148((void *)(v40 > 1), v41 + 1, 1, v32);
            }
            v42[2] = v41 + 1;
            uint64_t v32 = v42;
            BOOL v43 = &v42[2 * v41];
            v43[4] = v162;
            v43[5] = v38;
            uint64_t v17 = v39;
            if (v29) {
              goto LABEL_29;
            }
          }
        }
        int64_t v37 = v31 + 1;
        if (v31 + 1 >= v30) {
          goto LABEL_57;
        }
        unint64_t v36 = *(void *)(v26 + 8 * v37);
        if (v36) {
          goto LABEL_45;
        }
        int64_t v37 = v31 + 2;
        if (v31 + 2 >= v30) {
          goto LABEL_57;
        }
        unint64_t v36 = *(void *)(v26 + 8 * v37);
        if (v36) {
          goto LABEL_45;
        }
        int64_t v37 = v31 + 3;
        if (v31 + 3 >= v30) {
          goto LABEL_57;
        }
        unint64_t v36 = *(void *)(v26 + 8 * v37);
        if (v36) {
          goto LABEL_45;
        }
        int64_t v37 = v31 + 4;
        if (v31 + 4 >= v30) {
          goto LABEL_57;
        }
        unint64_t v36 = *(void *)(v26 + 8 * v37);
        if (v36)
        {
LABEL_45:
          int64_t v31 = v37;
          goto LABEL_46;
        }
        int64_t v37 = v31 + 5;
        if (v31 + 5 < v30)
        {
          unint64_t v36 = *(void *)(v26 + 8 * v37);
          if (!v36)
          {
            while (1)
            {
              int64_t v31 = v37 + 1;
              if (__OFADD__(v37, 1)) {
                break;
              }
              if (v31 >= v30) {
                goto LABEL_57;
              }
              unint64_t v36 = *(void *)(v26 + 8 * v31);
              ++v37;
              if (v36) {
                goto LABEL_46;
              }
            }
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            swift_once();
LABEL_160:
            uint64_t v134 = sub_1A7571E90();
            __swift_project_value_buffer(v134, (uint64_t)qword_1EB700B18);
            swift_retain_n();
            v135 = sub_1A7571E80();
            os_log_type_t v136 = sub_1A7572FD0();
            if (os_log_type_enabled(v135, v136))
            {
              v137 = (uint8_t *)swift_slowAlloc();
              uint64_t v138 = swift_slowAlloc();
              v170[0] = v138;
              *(_DWORD *)v137 = 136315138;
              uint64_t v139 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
              v168 = (void *)sub_1A72D1730(v139, v140, v170);
              sub_1A7573250();
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1A72A1000, v135, v136, "REMAnchoredBubbleModel: failed to init wordEmbedding for language code %s", v137, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1AD0CD330](v138, -1, -1);
              MEMORY[0x1AD0CD330](v137, -1, -1);
            }
            else
            {

              swift_release_n();
            }
            return sub_1A72B0CBC(MEMORY[0x1E4FBC860]);
          }
          goto LABEL_45;
        }
LABEL_57:
        uint64_t v3 = v159;
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v44 = sub_1A7341934((uint64_t)v32);
        swift_bridgeObjectRelease();
        v168 = v44;
        swift_bridgeObjectRetain_n();
        sub_1A73418B0((uint64_t *)&v168, sub_1A74F9DF0, sub_1A7342378);
        uint64_t v8 = v160;
        int64_t v9 = v152;
        uint64_t v22 = v146;
        swift_bridgeObjectRelease_n();
        uint64_t v23 = (uint64_t)v168;
        uint64_t v1 = v153;
        uint64_t v24 = v155;
        if (v155 < 0) {
          goto LABEL_63;
        }
LABEL_58:
        if (v24 >= *(void *)(v23 + 16))
        {
LABEL_63:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_1A734557C(v24, v22, 1);
          if (qword_1EB700B30 != -1) {
            swift_once();
          }
          uint64_t v51 = sub_1A7571E90();
          __swift_project_value_buffer(v51, (uint64_t)qword_1EB700B18);
          swift_bridgeObjectRetain();
          uint64_t v52 = sub_1A7571E80();
          os_log_type_t v53 = sub_1A7572FD0();
          if (os_log_type_enabled(v52, v53))
          {
            uint64_t v54 = swift_slowAlloc();
            uint64_t v55 = swift_slowAlloc();
            v168 = (void *)v55;
            *(_DWORD *)uint64_t v54 = 136315138;
            swift_bridgeObjectRetain();
            *(void *)(v54 + 4) = sub_1A72D1730(v17, v18, (uint64_t *)&v168);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1A72A1000, v52, v53, "REMAnchoredBubbleModel.triggerWordsByList: category list is nil for %s", (uint8_t *)v54, 0xCu);
            swift_arrayDestroy();
            uint64_t v56 = v55;
            uint64_t v1 = v153;
            MEMORY[0x1AD0CD330](v56, -1, -1);
            MEMORY[0x1AD0CD330](v54, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          unint64_t v7 = v151;
          continue;
        }
        break;
      }
      uint64_t v45 = v23 + 16 * v24;
      uint64_t v46 = *(void *)(v45 + 40);
      uint64_t v149 = *(void *)(v45 + 32);
      swift_bridgeObjectRetain();
      uint64_t v150 = v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_60:
      swift_beginAccess();
      unint64_t v47 = v172;
      if (*(void *)(v172 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v48 = sub_1A72B2210(v149, v150);
        if (v49)
        {
          uint64_t v50 = *(void **)(*(void *)(v47 + 56) + 8 * v48);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_70;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      uint64_t v50 = (void *)MEMORY[0x1E4FBC860];
LABEL_70:
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v50 = sub_1A72AC148(0, v50[2] + 1, 1, v50);
      }
      unint64_t v58 = v50[2];
      unint64_t v57 = v50[3];
      if (v58 >= v57 >> 1) {
        uint64_t v50 = sub_1A72AC148((void *)(v57 > 1), v58 + 1, 1, v50);
      }
      v50[2] = v58 + 1;
      char v59 = &v50[2 * v58];
      v59[4] = v17;
      v59[5] = v18;
      if (__OFADD__(v171, 1)) {
        goto LABEL_168;
      }
      ++v171;
      if (qword_1EB700B30 != -1) {
        swift_once();
      }
      uint64_t v154 = sub_1A7571E90();
      __swift_project_value_buffer(v154, (uint64_t)qword_1EB700B18);
      swift_bridgeObjectRetain_n();
      char v60 = sub_1A7571E80();
      os_log_type_t v61 = sub_1A7572FF0();
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v62 = v50;
        uint64_t v63 = swift_slowAlloc();
        uint64_t v64 = swift_slowAlloc();
        v168 = (void *)v64;
        *(_DWORD *)uint64_t v63 = 134218242;
        *(void *)(v63 + 4) = v171;
        *(_WORD *)(v63 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v63 + 14) = sub_1A72D1730(v17, v18, (uint64_t *)&v168);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A72A1000, v60, v61, "REMAnchoredBubbleModel: Anchor word no %ld: %s", (uint8_t *)v63, 0x16u);
        swift_arrayDestroy();
        uint64_t v65 = v64;
        uint64_t v1 = v153;
        MEMORY[0x1AD0CD330](v65, -1, -1);
        uint64_t v66 = v63;
        uint64_t v50 = v62;
        int64_t v9 = v152;
        MEMORY[0x1AD0CD330](v66, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v67 = *(void *)(v1 + v8);
      swift_retain();
      sub_1A733C980(v67, &v168);
      swift_release();
      uint64_t v158 = v169;
      if (!v169)
      {
        swift_bridgeObjectRelease();
        sub_1A734557C(v155, v22, v148);
        v127 = sub_1A7571E80();
        os_log_type_t v128 = sub_1A7572FF0();
        if (os_log_type_enabled(v127, v128))
        {
          v129 = v50;
          v130 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v130 = 0;
          _os_log_impl(&dword_1A72A1000, v127, v128, "REMAnchoredBubbleModel: Anchor word has no embedding", v130, 2u);
          v131 = v130;
          uint64_t v50 = v129;
          MEMORY[0x1AD0CD330](v131, -1, -1);
        }

        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v167[0] = v172;
        unint64_t v172 = 0x8000000000000000;
        sub_1A72D6A40((uint64_t)v50, v149, v150, isUniquelyReferenced_nonNull_native);
        unint64_t v172 = v167[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        unint64_t v7 = v151;
        continue;
      }
      break;
    }
    uint64_t v147 = v22;
    uint64_t v157 = (uint64_t)v168;
    uint64_t v68 = sub_1A7572F50();
    swift_bridgeObjectRelease();
    uint64_t v69 = *(void *)(v68 + 16);
    if (!v69)
    {
LABEL_148:
      swift_bridgeObjectRelease();
      sub_1A734557C(v155, v147, v148);
      swift_beginAccess();
      char v118 = swift_isUniquelyReferenced_nonNull_native();
      v167[0] = v172;
      unint64_t v172 = 0x8000000000000000;
      sub_1A72D6A40((uint64_t)v50, v149, v150, v118);
      unint64_t v172 = v167[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      v119 = sub_1A7571E80();
      os_log_type_t v120 = sub_1A7572FF0();
      if (os_log_type_enabled(v119, v120))
      {
        uint64_t v121 = swift_slowAlloc();
        uint64_t v122 = swift_slowAlloc();
        v168 = (void *)v122;
        *(_DWORD *)uint64_t v121 = 136315138;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
        uint64_t v123 = sub_1A7572400();
        unint64_t v125 = v124;
        uint64_t v1 = v153;
        swift_bridgeObjectRelease();
        uint64_t v126 = v123;
        uint64_t v8 = v160;
        *(void *)(v121 + 4) = sub_1A72D1730(v126, v125, (uint64_t *)&v168);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v119, v120, "REMAnchoredBubbleModel: Trigger words: %s", (uint8_t *)v121, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v122, -1, -1);
        MEMORY[0x1AD0CD330](v121, -1, -1);
      }

      swift_release();
      unint64_t v7 = v151;
      int64_t v9 = v152;
      continue;
    }
    break;
  }
  uint64_t v70 = (uint64_t *)(v68 + 40);
  while (2)
  {
    uint64_t v71 = *(v70 - 1);
    uint64_t v72 = *v70;
    uint64_t v73 = *(void **)(v1 + v8);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v165 = v71;
    uint64_t v74 = sub_1A7572F40();
    if (!v74)
    {
      swift_bridgeObjectRelease();
      goto LABEL_147;
    }
    uint64_t v75 = v74;
    if (!v73)
    {
      swift_bridgeObjectRelease();
      goto LABEL_84;
    }
    unint64_t v76 = *(void *)(v74 + 16);
    if (v76 >> 60) {
      goto LABEL_165;
    }
    v163 = v50;
    swift_retain();
    uint64_t v77 = (void *)swift_slowAlloc();
    BOOL v78 = v77;
    unint64_t v79 = *(void *)(v75 + 16);
    if (v79)
    {
      if (v76 < v79) {
        goto LABEL_167;
      }
      if (v75 + 32 < (unint64_t)v77 + 8 * v79 && (unint64_t)v77 < v75 + 32 + 8 * v79) {
        goto LABEL_182;
      }
      memcpy(v77, (const void *)(v75 + 32), 8 * v79);
    }
    swift_bridgeObjectRelease();
    if (v79 != v76) {
      goto LABEL_166;
    }
    type metadata accessor for REMLinearAlgebraDataRef();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v78;
    *(void *)(inited + 24) = v76;
    uint64_t v161 = inited;
    if (!v73[6])
    {
      if (qword_1E96F0938 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v154, (uint64_t)qword_1E96F5948);
      uint64_t v92 = sub_1A7571E80();
      os_log_type_t v93 = sub_1A7572FD0();
      uint64_t v8 = v160;
      if (os_log_type_enabled(v92, v93))
      {
        uint64_t v94 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v94 = 0;
        _os_log_impl(&dword_1A72A1000, v92, v93, "REMPCASolver project vector: missing PCA projection", v94, 2u);
        MEMORY[0x1AD0CD330](v94, -1, -1);
      }
      swift_release_n();

      unint64_t v82 = v76;
      uint64_t v91 = v161;
      uint64_t v50 = v163;
      goto LABEL_135;
    }
    if (v73[5] != v76)
    {
      sub_1A734558C();
      uint64_t v95 = (void *)swift_allocError();
      *int64_t v96 = 1;
      swift_willThrow();
      swift_release();
      id v97 = v95;
      id v98 = v95;
      int64_t v99 = sub_1A7571E80();
      os_log_type_t v100 = sub_1A7572FD0();
      if (os_log_type_enabled(v99, v100))
      {
        uint64_t v101 = swift_slowAlloc();
        uint64_t v102 = swift_slowAlloc();
        v168 = (void *)v102;
        *(_DWORD *)uint64_t v101 = 136315138;
        swift_getErrorValue();
        uint64_t v103 = Error.rem_errorDescription.getter(v166);
        *(void *)(v101 + 4) = sub_1A72D1730(v103, v104, (uint64_t *)&v168);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1A72A1000, v99, v100, "REMAnchoredBubbleModel: Skipping dimension reduction when predicting from token due to %s", (uint8_t *)v101, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v102, -1, -1);
        uint64_t v105 = v101;
        uint64_t v1 = v153;
        MEMORY[0x1AD0CD330](v105, -1, -1);

        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_release();

        swift_bridgeObjectRelease();
        swift_release();
      }
      uint64_t v3 = v159;
      uint64_t v8 = v160;
      uint64_t v50 = v163;
      goto LABEL_85;
    }
    unint64_t v82 = v73[4];
    if (v82 && v76)
    {
      if ((v82 & 0x8000000000000000) != 0) {
        goto LABEL_183;
      }
      uint64_t v83 = sub_1A7572A90();
      *(void *)(v83 + 16) = v82;
      v84 = (char *)(v83 + 32);
      bzero((void *)(v83 + 32), 8 * v82);
      if (v82 >> 60) {
        goto LABEL_170;
      }
      uint64_t v85 = (char *)swift_slowAlloc();
      unint64_t v86 = *(void *)(v83 + 16);
      if (v86)
      {
        if (v82 < v86) {
          goto LABEL_177;
        }
        size_t v87 = 8 * v86;
        if (v84 < &v85[8 * v86] && v85 < &v84[v87]) {
          goto LABEL_182;
        }
        v144 = v85;
        memcpy(v85, v84, v87);
        uint64_t v85 = v144;
      }
      uint64_t v88 = v85;
      swift_bridgeObjectRelease();
      if (v86 != v82) {
        goto LABEL_172;
      }
      uint64_t v89 = swift_allocObject();
      *(void *)(v89 + 16) = v88;
      *(void *)(v89 + 24) = v82;
      if (v82 >> 31) {
        goto LABEL_173;
      }
      if (v76 >> 31) {
        goto LABEL_175;
      }
      uint64_t v90 = v89;
      cblas_dgemv_NEWLAPACK();
      swift_release_n();
      swift_release();
      uint64_t v91 = v90;
      uint64_t v1 = v153;
      uint64_t v8 = v160;
      uint64_t v50 = v163;
LABEL_135:
      double v112 = *(double *)(v1 + v156);
      v168 = (void *)v157;
      uint64_t v169 = v158;
      v167[0] = v82;
      v167[1] = v91;
      static REMVector.angularCosineDistance(lhs:rhs:)((int64_t *)&v168, v167);
      uint64_t v3 = v159;
      if (v112 > 0.49)
      {
        double v114 = 0.49;
        if (v113 <= 0.25) {
          goto LABEL_137;
        }
LABEL_143:
        if (v114 + v114 + v113 * (1.0 - v114) * 4.0 + -1.0 < v20) {
          goto LABEL_144;
        }
LABEL_138:
        swift_release();
LABEL_84:
        swift_bridgeObjectRelease();
LABEL_85:
        v70 += 3;
        if (!--v69) {
          goto LABEL_148;
        }
        continue;
      }
      if (v112 > 0.2) {
        double v114 = v112;
      }
      else {
        double v114 = 0.2;
      }
      if (v113 > 0.25) {
        goto LABEL_143;
      }
LABEL_137:
      if (v113 * 4.0 * v114 >= v20) {
        goto LABEL_138;
      }
LABEL_144:
      unint64_t v116 = v50[2];
      unint64_t v115 = v50[3];
      if (v116 >= v115 >> 1) {
        uint64_t v50 = sub_1A72AC148((void *)(v115 > 1), v116 + 1, 1, v50);
      }
      v50[2] = v116 + 1;
      v117 = &v50[2 * v116];
      v117[4] = v165;
      v117[5] = v72;
LABEL_147:
      swift_release();
      goto LABEL_85;
    }
    break;
  }
  if ((v82 & 0x8000000000000000) != 0) {
    goto LABEL_183;
  }
  if (v82)
  {
    uint64_t v106 = sub_1A7572A90();
    *(void *)(v106 + 16) = v82;
    bzero((void *)(v106 + 32), 8 * v82);
    if (v82 >> 60) {
      goto LABEL_171;
    }
  }
  else
  {
    uint64_t v106 = MEMORY[0x1E4FBC860];
    if (*(void *)(MEMORY[0x1E4FBC860] + 16)) {
      goto LABEL_169;
    }
  }
  v107 = (char *)swift_slowAlloc();
  v108 = v107;
  unint64_t v109 = *(void *)(v106 + 16);
  if (!v109)
  {
LABEL_133:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    if (v109 != v82) {
      goto LABEL_174;
    }
    uint64_t v91 = swift_allocObject();
    *(void *)(v91 + 16) = v108;
    *(void *)(v91 + 24) = v82;
    uint64_t v50 = v163;
    uint64_t v8 = v160;
    goto LABEL_135;
  }
  if (v82 < v109) {
    goto LABEL_178;
  }
  v110 = (char *)(v106 + 32);
  size_t v111 = 8 * v109;
  if (v106 + 32 >= (unint64_t)&v107[8 * v109] || v107 >= &v110[v111])
  {
    memcpy(v107, v110, v111);
    goto LABEL_133;
  }
LABEL_182:
  sub_1A7573940();
  __break(1u);
LABEL_183:
  sub_1A7573830();
  __break(1u);
  unint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1A733C980@<X0>(uint64_t a1@<X3>, void *a2@<X8>)
{
  uint64_t result = sub_1A7572F40();
  if (result)
  {
    uint64_t v5 = result;
    if (a1)
    {
      unint64_t v6 = *(void *)(result + 16);
      swift_retain();
      sub_1A733E31C(v5, v6, v9);
      v8[0] = v9[0];
      v8[1] = v9[1];
      sub_1A752DC98(v8, v10);
      swift_release();
      uint64_t result = swift_release();
      unint64_t v7 = v10[1];
      *a2 = v10[0];
      a2[1] = v7;
      return result;
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a2 = 0;
  a2[1] = 0;
  return result;
}

void *sub_1A733CBF8(uint64_t a1, unint64_t a2, void (*a3)(void, void, void), unint64_t a4, uint64_t a5)
{
  unint64_t v6 = v5;
  uint64_t v104 = a5;
  uint64_t v98 = *v6;
  uint64_t v100 = sub_1A7571BC0();
  uint64_t v102 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  os_log_type_t v93 = &v90[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1D60);
  MEMORY[0x1F4188790](v99);
  uint64_t v105 = &v90[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  id v97 = &v90[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v94 = &v90[-v17];
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = &v90[-v18];
  uint64_t v20 = sub_1A7571500();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = &v90[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a4)
  {
    uint64_t v95 = a1;
    unint64_t v96 = a2;
    uint64_t v103 = v6;
    uint64_t v101 = v6[2];
    uint64_t v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v26 = v25;
    uint64_t v27 = self;
    uint64_t v92 = a3;
    uint64_t v28 = (void *)sub_1A75725E0();
    id v29 = objc_msgSend(v27, sel_baseLanguageFromLanguage_, v28);

    uint64_t v30 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v32 = v31;

    if (v24 == v30 && v26 == v32)
    {
      swift_bridgeObjectRelease_n();
      unint64_t v33 = v103;
      uint64_t v34 = v95;
      uint64_t v35 = v96;
      goto LABEL_6;
    }
    char v36 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v33 = v103;
    a3 = v92;
    uint64_t v34 = v95;
    uint64_t v35 = v96;
    if (v36)
    {
LABEL_6:
      *(void *)&long long v106 = _s19ReminderKitInternal25REMFilteredTitleEmbeddingC17decodeEmojiInText_8languageS2S_So10NLLanguageatFZ_0(v34, v35);
      *((void *)&v106 + 1) = v37;
      sub_1A75714D0();
      sub_1A72DF534();
      uint64_t v95 = sub_1A75732B0();
      unint64_t v96 = v38;
      (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v23, v20);
      swift_bridgeObjectRelease();
      uint64_t v39 = (uint64_t)v33
          + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictionEditingSessionID;
      swift_beginAccess();
      uint64_t v40 = v102;
      uint64_t v41 = v100;
      uint64_t v92 = *(void (**)(void, void, void))(v102 + 16);
      v92(v19, v104, v100);
      v42 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v40 + 56);
      v42(v19, 0, 1, v41);
      BOOL v43 = v105;
      uint64_t v44 = (uint64_t)&v105[*(int *)(v99 + 48)];
      sub_1A72BF1E8(v39, (uint64_t)v105, &qword_1EB704C40);
      sub_1A72BF1E8((uint64_t)v19, v44, &qword_1EB704C40);
      uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
      if (v45((uint64_t)v43, 1, v41) == 1)
      {
        sub_1A72CB560((uint64_t)v19, &qword_1EB704C40);
        if (v45(v44, 1, v41) == 1)
        {
          uint64_t v46 = sub_1A72CB560((uint64_t)v105, &qword_1EB704C40);
LABEL_26:
          *(void *)&long long v106 = MEMORY[0x1E4FBC860];
          uint64_t v68 = (void *)MEMORY[0x1AD0CC790](v46);
          sub_1A73401A8();
          swift_bridgeObjectRelease();
          uint64_t v69 = (void *)v106;
          uint64_t v70 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestTitleTokens;
          uint64_t v71 = (uint64_t)v103;
          uint64_t v72 = *(void **)((char *)v103
                           + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestTitleTokens);
          if (v72[2] + 1 == *(void *)(v106 + 16)
            && (swift_bridgeObjectRetain(),
                swift_bridgeObjectRetain(),
                uint64_t v73 = (void *)sub_1A733D7E0(1, (uint64_t)v69),
                char v74 = sub_1A72DDEA4(v72, v73),
                swift_bridgeObjectRelease(),
                swift_bridgeObjectRelease(),
                (v74 & 1) != 0)
            && v69[2])
          {
            swift_bridgeObjectRetain();
            sub_1A733E438(v101, &v106);
            swift_bridgeObjectRelease();
            char v75 = v109;
            if (v109 != 255)
            {
              long long v76 = v106;
              uint64_t v77 = v71;
              uint64_t v78 = v107;
              uint64_t v79 = v108;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F50);
              uint64_t v80 = swift_allocObject();
              *(_OWORD *)(v80 + 16) = xmmword_1A75785A0;
              *(_OWORD *)(v80 + 32) = v76;
              *(void *)(v80 + 48) = v78;
              *(void *)(v80 + 56) = v79;
              *(unsigned char *)(v80 + 64) = v75;
              *(void *)(v77 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions) = v80;
              sub_1A7345658(v76, *((void **)&v76 + 1), v78, v79, v75);
              swift_bridgeObjectRelease();
              sub_1A7345658(v76, *((void **)&v76 + 1), v78, v79, v75);
              uint64_t v56 = sub_1A72ACE70(0, 1, 1, MEMORY[0x1E4FBC860]);
              unint64_t v82 = v56[2];
              unint64_t v81 = v56[3];
              if (v82 >= v81 >> 1) {
                uint64_t v56 = sub_1A72ACE70((void *)(v81 > 1), v82 + 1, 1, v56);
              }
              v56[2] = v82 + 1;
              uint64_t v83 = &v56[5 * v82];
              *((_OWORD *)v83 + 2) = v76;
              v83[6] = v78;
              v83[7] = v79;
              *((unsigned char *)v83 + 64) = v75;
              sub_1A7345758(v76, *((void **)&v76 + 1), v78, v79, v75);
              uint64_t v71 = (uint64_t)v103;
              goto LABEL_37;
            }
          }
          else if ((sub_1A72DDEA4(*(void **)(v71 + v70), v69) & 1) == 0)
          {
            uint64_t v85 = swift_bridgeObjectRetain();
            uint64_t v86 = sub_1A72E6AB4(v85);
            swift_bridgeObjectRelease();
            uint64_t v87 = swift_bridgeObjectRetain();
            uint64_t v88 = sub_1A7344534(v87, v86);
            swift_bridgeObjectRelease();
            swift_retain();
            uint64_t v56 = (void *)sub_1A7344A74(v88, v71);
            swift_release();
            swift_release();
            goto LABEL_37;
          }
          uint64_t v56 = *(void **)(v71 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions);
          swift_bridgeObjectRetain();
LABEL_37:
          *(void *)(v71 + v70) = v69;
          swift_bridgeObjectRelease();
          *(void *)(v71 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions) = v56;
          goto LABEL_38;
        }
      }
      else
      {
        uint64_t v99 = (uint64_t)v42;
        unint64_t v57 = v94;
        sub_1A72BF1E8((uint64_t)v43, (uint64_t)v94, &qword_1EB704C40);
        if (v45(v44, 1, v41) != 1)
        {
          uint64_t v64 = v102;
          uint64_t v65 = v57;
          uint64_t v66 = v93;
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v102 + 32))(v93, v44, v41);
          sub_1A734586C();
          int v91 = sub_1A75725C0();
          uint64_t v67 = *(void (**)(unsigned char *, uint64_t))(v64 + 8);
          v67(v66, v41);
          sub_1A72CB560((uint64_t)v19, &qword_1EB704C40);
          v67(v65, v41);
          uint64_t v46 = sub_1A72CB560((uint64_t)v43, &qword_1EB704C40);
          v42 = (void (*)(unsigned char *, void, uint64_t, uint64_t))v99;
          if (v91) {
            goto LABEL_26;
          }
LABEL_21:
          uint64_t v58 = (uint64_t)v97;
          v92(v97, v104, v41);
          v42((unsigned char *)v58, 0, 1, v41);
          swift_beginAccess();
          sub_1A73455F0(v58, v39);
          uint64_t v59 = swift_endAccess();
          uint64_t v60 = HIBYTE(v96) & 0xF;
          if ((v96 & 0x2000000000000000) == 0) {
            uint64_t v60 = v95 & 0xFFFFFFFFFFFFLL;
          }
          if (!v60)
          {
            swift_bridgeObjectRelease();
            v84 = v103;
            uint64_t v56 = (void *)MEMORY[0x1E4FBC860];
            *(void *)((char *)v103 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestTitleTokens) = MEMORY[0x1E4FBC860];
            swift_bridgeObjectRelease();
            *(void *)((char *)v84 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions) = v56;
LABEL_39:
            swift_bridgeObjectRelease();
            return v56;
          }
          *(void *)&long long v106 = MEMORY[0x1E4FBC860];
          os_log_type_t v61 = (void *)MEMORY[0x1AD0CC790](v59);
          sub_1A73401A8();
          swift_bridgeObjectRelease();
          uint64_t v62 = (uint64_t)v103;
          *(void *)((char *)v103 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestTitleTokens) = v106;
          swift_bridgeObjectRelease();
          swift_retain();
          uint64_t v63 = swift_bridgeObjectRetain();
          uint64_t v56 = sub_1A7344CB8(v63, v62);
          swift_bridgeObjectRelease();
          swift_release();
          *(void *)(v62 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions) = v56;
LABEL_38:
          swift_bridgeObjectRetain();
          goto LABEL_39;
        }
        sub_1A72CB560((uint64_t)v19, &qword_1EB704C40);
        (*(void (**)(unsigned char *, uint64_t))(v102 + 8))(v57, v41);
        v42 = (void (*)(unsigned char *, void, uint64_t, uint64_t))v99;
      }
      sub_1A72CB560((uint64_t)v105, &qword_1E96F1D60);
      goto LABEL_21;
    }
  }
  uint64_t v47 = (uint64_t)a3;
  if (qword_1EB700B30 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_1A7571E90();
  __swift_project_value_buffer(v48, (uint64_t)qword_1EB700B18);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  char v49 = sub_1A7571E80();
  os_log_type_t v50 = sub_1A7572FF0();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(void *)&long long v106 = v52;
    *(_DWORD *)uint64_t v51 = 136315394;
    if (a4)
    {
      unint64_t v53 = a4;
    }
    else
    {
      uint64_t v47 = 0x296C696E28;
      unint64_t v53 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v110 = sub_1A72D1730(v47, v53, (uint64_t *)&v106);
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2080;
    uint64_t v54 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v110 = sub_1A72D1730(v54, v55, (uint64_t *)&v106);
    sub_1A7573250();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v49, v50, "REMAnchoredBubbleModel: lang %s is not supported by current model (%s)", (uint8_t *)v51, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v52, -1, -1);
    MEMORY[0x1AD0CD330](v51, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  return (void *)MEMORY[0x1E4FBC860];
}

uint64_t sub_1A733D7E0(uint64_t result, uint64_t a2)
{
  if (result < 0) {
    goto LABEL_30;
  }
  uint64_t v2 = a2;
  if (!result) {
    return v2;
  }
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    return v8;
  }
  unint64_t v4 = 0;
  unint64_t v5 = 0;
  unint64_t v6 = (uint64_t *)(a2 + 40);
  uint64_t v25 = v3 - 1;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v24 = result;
  do
  {
    uint64_t v14 = *(v6 - 1);
    uint64_t v13 = *v6;
    uint64_t v15 = *(void *)(v7 + 16);
    if (v15 < result)
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1A72D2D00(0, v15 + 1, 1);
      }
      unint64_t v10 = *(void *)(v7 + 16);
      unint64_t v9 = *(void *)(v7 + 24);
      if (v10 >= v9 >> 1) {
        sub_1A72D2D00(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v7 + 16) = v10 + 1;
      uint64_t v11 = v7 + 16 * v10;
      *(void *)(v11 + 32) = v14;
      *(void *)(v11 + 40) = v13;
      uint64_t result = v24;
      uint64_t v12 = a2;
LABEL_8:
      if (v25 == v4) {
        goto LABEL_25;
      }
      goto LABEL_9;
    }
    if (v5 >= v15) {
      goto LABEL_28;
    }
    uint64_t v23 = *(v6 - 1);
    uint64_t v16 = v7 + 16 * v5;
    uint64_t v17 = *(void *)(v16 + 32);
    uint64_t v18 = *(void *)(v16 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1A72D2D00(0, *(void *)(v8 + 16) + 1, 1);
    }
    unint64_t v20 = *(void *)(v8 + 16);
    unint64_t v19 = *(void *)(v8 + 24);
    if (v20 >= v19 >> 1) {
      sub_1A72D2D00(v19 > 1, v20 + 1, 1);
    }
    *(void *)(v8 + 16) = v20 + 1;
    uint64_t v21 = v8 + 16 * v20;
    *(void *)(v21 + 32) = v17;
    *(void *)(v21 + 40) = v18;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1A74F9DF0(v7);
      uint64_t v7 = result;
    }
    uint64_t v12 = a2;
    if (v5 >= *(void *)(v7 + 16)) {
      goto LABEL_29;
    }
    uint64_t v22 = v7 + 16 * v5;
    swift_bridgeObjectRelease();
    uint64_t result = v24;
    *(void *)(v22 + 32) = v23;
    *(void *)(v22 + 40) = v13;
    if ((uint64_t)++v5 < v24) {
      goto LABEL_8;
    }
    if (v25 == v4) {
      goto LABEL_25;
    }
    unint64_t v5 = 0;
LABEL_9:
    ++v4;
    v6 += 2;
  }
  while (v4 < *(void *)(v12 + 16));
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

double sub_1A733DA38()
{
  double result = *(double *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale) + 0.05;
  *(double *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale) = result;
  return result;
}

double sub_1A733DA58()
{
  double result = *(double *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale) + -0.05;
  *(double *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale) = result;
  return result;
}

uint64_t sub_1A733DA78(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v13 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1DB0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7346690();
  sub_1A75741B0();
  LOBYTE(v15) = 0;
  sub_1A7573B30();
  if (!v4)
  {
    uint64_t v15 = a2;
    uint64_t v16 = a3;
    char v17 = v13 & 1;
    char v14 = 1;
    sub_1A7346738();
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1A733DC14(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1D70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7345E04();
  sub_1A75741B0();
  char v14 = 0;
  sub_1A7573B10();
  if (!v2)
  {
    char v13 = 1;
    sub_1A7573B30();
    char v12 = 2;
    sub_1A7573B10();
    uint64_t v11 = *(void *)(v3 + 40);
    v10[15] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1D48);
    sub_1A7345E58();
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A733DDE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A72B21AC(a1, (uint64_t)v10);
  uint64_t v5 = sub_1A75726E0();
  if (v2)
  {

    sub_1A72B21AC(a1, (uint64_t)v10);
    uint64_t v7 = sub_1A7572D10();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v7 = v5;
    uint64_t v9 = v6;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
  }
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v9;
  *(unsigned char *)(a2 + 16) = v2 != 0;
  return result;
}

uint64_t sub_1A733DEA8()
{
  if (*(unsigned char *)(v0 + 16)) {
    return sub_1A7572D20();
  }
  else {
    return sub_1A7572750();
  }
}

uint64_t sub_1A733DEDC()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_1A75740C0();
  if (v1) {
    sub_1A75740D0();
  }
  else {
    sub_1A75726F0();
  }
  return sub_1A7574110();
}

uint64_t sub_1A733DF48()
{
  if (*(unsigned char *)(v0 + 16)) {
    return sub_1A75740D0();
  }

  return sub_1A75726F0();
}

uint64_t sub_1A733DFA4()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_1A75740C0();
  if (v1) {
    sub_1A75740D0();
  }
  else {
    sub_1A75726F0();
  }
  return sub_1A7574110();
}

uint64_t sub_1A733E00C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  if (a1[2])
  {
    if (v3 == v4) {
      return *((unsigned __int8 *)a2 + 16);
    }
    else {
      return 0;
    }
  }
  else if (a2[2])
  {
    return 0;
  }
  else
  {
    uint64_t v6 = a1[1];
    if (v3 == v4 && v6 == a2[1]) {
      return 1;
    }
    else {
      return sub_1A7573DB0();
    }
  }
}

uint64_t sub_1A733E064()
{
  if (*v0) {
    return 1953720684;
  }
  else {
    return 0x737569646172;
  }
}

uint64_t sub_1A733E094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7345F28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A733E0BC(uint64_t a1)
{
  unint64_t v2 = sub_1A7346690();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A733E0F8(uint64_t a1)
{
  unint64_t v2 = sub_1A7346690();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1A733E134@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1A7346004(a1);
  if (!v2)
  {
    *(void *)a2 = v7;
    *(void *)(a2 + 8) = result;
    *(void *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 24) = v6 & 1;
  }
  return result;
}

uint64_t sub_1A733E16C(void *a1)
{
  return sub_1A733DA78(a1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1A733E190()
{
  uint64_t result = 0x6E6F6973726576;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65636E6174736964;
      break;
    case 2:
      uint64_t result = 1735287148;
      break;
    case 3:
      uint64_t result = 0x73656C62627562;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A733E220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A73461D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A733E248(uint64_t a1)
{
  unint64_t v2 = sub_1A7345E04();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A733E284(uint64_t a1)
{
  unint64_t v2 = sub_1A7345E04();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1A733E2C0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1A73463A4(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1A733E304(void *a1)
{
  return sub_1A733DC14(a1);
}

uint64_t sub_1A733E31C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  if (*(void *)(a1 + 16) != a2)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (a2 >> 60)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  char v6 = (void *)swift_slowAlloc();
  long long v7 = v6;
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    if (v8 == a2)
    {
      type metadata accessor for REMLinearAlgebraDataRef();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v7;
      *(void *)(result + 24) = a2;
      *a3 = a2;
      a3[1] = result;
      return result;
    }
    goto LABEL_15;
  }
  if (v8 <= a2)
  {
    if (a1 + 32 < (unint64_t)v6 + 8 * v8 && (unint64_t)v6 < a1 + 32 + 8 * v8) {
      goto LABEL_17;
    }
    memcpy(v6, (const void *)(a1 + 32), 8 * v8);
    goto LABEL_11;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

void sub_1A733E438(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  uint64_t v108 = a2;
  uint64_t v106 = sub_1A7571BC0();
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v104 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  long long v7 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v102 - v8;
  id v10 = objc_msgSend(self, sel_wordEmbeddingForLanguage_, a1);
  if (!v10) {
    goto LABEL_85;
  }
  uint64_t v11 = v10;
  uint64_t v12 = sub_1A7572F40();
  if (!v12)
  {

LABEL_85:
    uint64_t v88 = v108;
    _OWORD *v108 = 0u;
    v88[1] = 0u;
    *((unsigned char *)v88 + 32) = -1;
    return;
  }
  uint64_t v102 = v7;
  uint64_t v103 = v9;
  uint64_t v13 = *(void *)(v128 + 24);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v117 = v13 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v115 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction;
  uint64_t v114 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale;
  int64_t v118 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v116 = v12;
  size_t v111 = (char *)(v12 + 32);
  uint64_t v107 = &v135;
  swift_bridgeObjectRetain();
  int64_t v18 = 0;
  v119 = 0;
  *(void *)&long long v19 = 136315138;
  long long v110 = v19;
  uint64_t v109 = MEMORY[0x1E4FBC840] + 8;
  id v113 = v11;
  uint64_t v112 = v13;
  for (id i = v11; ; id i = v113)
  {
    while (1)
    {
      while (1)
      {
        if (v17)
        {
          unint64_t v21 = __clz(__rbit64(v17));
          v17 &= v17 - 1;
          unint64_t v22 = v21 | (v18 << 6);
        }
        else
        {
          if (__OFADD__(v18++, 1)) {
            goto LABEL_94;
          }
          if (v18 >= v118)
          {
LABEL_83:

            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_85;
          }
          unint64_t v24 = *(void *)(v117 + 8 * v18);
          if (!v24)
          {
            int64_t v25 = v18 + 1;
            if (v18 + 1 >= v118) {
              goto LABEL_83;
            }
            unint64_t v24 = *(void *)(v117 + 8 * v25);
            if (!v24)
            {
              int64_t v25 = v18 + 2;
              if (v18 + 2 >= v118) {
                goto LABEL_83;
              }
              unint64_t v24 = *(void *)(v117 + 8 * v25);
              if (!v24)
              {
                int64_t v25 = v18 + 3;
                if (v18 + 3 >= v118) {
                  goto LABEL_83;
                }
                unint64_t v24 = *(void *)(v117 + 8 * v25);
                if (!v24)
                {
                  while (1)
                  {
                    int64_t v18 = v25 + 1;
                    if (__OFADD__(v25, 1)) {
                      break;
                    }
                    if (v18 >= v118) {
                      goto LABEL_83;
                    }
                    unint64_t v24 = *(void *)(v117 + 8 * v18);
                    ++v25;
                    if (v24) {
                      goto LABEL_19;
                    }
                  }
LABEL_95:
                  __break(1u);
LABEL_96:
                  sub_1A7573940();
                  __break(1u);
                  return;
                }
              }
            }
            int64_t v18 = v25;
          }
LABEL_19:
          unint64_t v17 = (v24 - 1) & v24;
          unint64_t v22 = __clz(__rbit64(v24)) + (v18 << 6);
        }
        uint64_t v26 = v13;
        uint64_t v27 = *(void *)(v13 + 56) + 32 * v22;
        double v28 = *(double *)v27;
        uint64_t v29 = *(void *)(v27 + 8);
        uint64_t v30 = *(void *)(v27 + 16);
        int v31 = *(unsigned __int8 *)(v27 + 24);
        swift_bridgeObjectRetain();
        sub_1A73455E0(v29, v30, v31);
        id v32 = i;
        uint64_t v33 = sub_1A7572F40();
        swift_bridgeObjectRelease();
        if (v33) {
          break;
        }
        sub_1A734557C(v29, v30, v31);
        uint64_t v13 = v26;
      }
      uint64_t v121 = v29;
      uint64_t v122 = v30;
      int64_t v123 = v18;
      uint64_t v34 = v116;
      unint64_t v35 = *(void *)(v116 + 16);
      if (v35 >> 60)
      {
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
        goto LABEL_95;
      }
      uint64_t v36 = 8 * v35;
      swift_bridgeObjectRetain();
      uint64_t v37 = (char *)swift_slowAlloc();
      unint64_t v38 = v37;
      if (*(void *)(v34 + 16))
      {
        if (v111 < &v37[v36] && v37 < &v111[v36]) {
          goto LABEL_96;
        }
        memcpy(v37, v111, 8 * v35);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        if (v35) {
          goto LABEL_91;
        }
      }
      type metadata accessor for REMLinearAlgebraDataRef();
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 16) = v38;
      *(void *)(inited + 24) = v35;
      unint64_t v40 = *(void *)(v33 + 16);
      if (v40 >> 60) {
        goto LABEL_92;
      }
      uint64_t v41 = inited;
      unint64_t v125 = v17;
      uint64_t v42 = 8 * v40;
      BOOL v43 = (void *)swift_slowAlloc();
      uint64_t v44 = v43;
      if (*(void *)(v33 + 16))
      {
        if (v33 + 32 < (unint64_t)v43 + v42 && (unint64_t)v43 < v33 + 32 + v42) {
          goto LABEL_96;
        }
        memcpy(v43, (const void *)(v33 + 32), 8 * v40);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        if (v40) {
          goto LABEL_93;
        }
      }
      uint64_t v127 = v35;
      int v126 = v31;
      uint64_t v46 = swift_initStackObject();
      uint64_t v47 = v46;
      *(void *)(v46 + 16) = v44;
      *(void *)(v46 + 24) = v40;
      uint64_t v48 = *(void *)(v128 + v115);
      if (!v48)
      {
        unint64_t v17 = v125;
        uint64_t v50 = v41;
        id i = v32;
        uint64_t v13 = v26;
        goto LABEL_66;
      }
      uint64_t v49 = *(void *)(v48 + 48);
      unint64_t v17 = v125;
      uint64_t v124 = v46;
      if (v49)
      {
        uint64_t v50 = v41;
        long long v132 = *(_OWORD *)(v48 + 32);
        uint64_t v133 = v49;
        unint64_t v130 = v127;
        uint64_t v131 = v41;
        swift_retain();
        uint64_t v51 = v119;
        static REMMatrix.mul(_:_:)((unint64_t *)&v132, &v130, &v134);
        if (v51)
        {
          v119 = 0;
          id i = v32;
LABEL_54:
          id v58 = i;
          uint64_t v120 = v50;
          if (qword_1EB700B30 != -1) {
            swift_once();
          }
          uint64_t v59 = sub_1A7571E90();
          __swift_project_value_buffer(v59, (uint64_t)qword_1EB700B18);
          id v60 = v51;
          id v61 = v51;
          uint64_t v62 = sub_1A7571E80();
          os_log_type_t v63 = sub_1A7572FD0();
          if (os_log_type_enabled(v62, v63))
          {
            uint64_t v64 = (uint8_t *)swift_slowAlloc();
            uint64_t v65 = swift_slowAlloc();
            *(void *)&long long v132 = v65;
            *(_DWORD *)uint64_t v64 = v110;
            swift_getErrorValue();
            uint64_t v66 = Error.rem_errorDescription.getter(v129);
            unint64_t v134 = sub_1A72D1730(v66, v67, (uint64_t *)&v132);
            unint64_t v17 = v125;
            sub_1A7573250();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_1A72A1000, v62, v63, "REMAnchoredBubbleModel: Skipping dimension reduction when predicting from token due to %s", v64, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1AD0CD330](v65, -1, -1);
            id i = v113;
            MEMORY[0x1AD0CD330](v64, -1, -1);

            swift_release();
            uint64_t v13 = v112;
            uint64_t v50 = v120;
            uint64_t v47 = v124;
            goto LABEL_66;
          }
          swift_release();

          uint64_t v13 = v112;
          uint64_t v50 = v120;
          goto LABEL_64;
        }
        v119 = 0;
        swift_release();
        uint64_t v50 = v135;
        uint64_t v127 = v134;
        id i = v32;
      }
      else
      {
        uint64_t v52 = qword_1E96F0938;
        swift_retain();
        if (v52 != -1) {
          swift_once();
        }
        uint64_t v53 = sub_1A7571E90();
        __swift_project_value_buffer(v53, (uint64_t)qword_1E96F5948);
        uint64_t v54 = sub_1A7571E80();
        os_log_type_t v55 = sub_1A7572FD0();
        if (os_log_type_enabled(v54, v55))
        {
          uint64_t v56 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v56 = 0;
          _os_log_impl(&dword_1A72A1000, v54, v55, "REMPCASolver project vector: missing PCA projection", v56, 2u);
          MEMORY[0x1AD0CD330](v56, -1, -1);
        }

        uint64_t v50 = v41;
        id i = v32;
        uint64_t v47 = v124;
      }
      uint64_t v57 = *(void *)(v48 + 48);
      uint64_t v13 = v26;
      if (!v57)
      {
        id v58 = i;
        if (qword_1E96F0938 != -1) {
          swift_once();
        }
        uint64_t v68 = sub_1A7571E90();
        __swift_project_value_buffer(v68, (uint64_t)qword_1E96F5948);
        uint64_t v69 = sub_1A7571E80();
        os_log_type_t v70 = sub_1A7572FD0();
        if (os_log_type_enabled(v69, v70))
        {
          uint64_t v71 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v71 = 0;
          _os_log_impl(&dword_1A72A1000, v69, v70, "REMPCASolver project vector: missing PCA projection", v71, 2u);
          MEMORY[0x1AD0CD330](v71, -1, -1);
        }
        swift_release();

LABEL_64:
        uint64_t v47 = v124;
        id i = v58;
        goto LABEL_66;
      }
      long long v132 = *(_OWORD *)(v48 + 32);
      uint64_t v133 = v57;
      unint64_t v130 = v40;
      uint64_t v131 = v47;
      uint64_t v51 = v119;
      static REMMatrix.mul(_:_:)((unint64_t *)&v132, &v130, &v134);
      if (v51)
      {
        v119 = 0;
        goto LABEL_54;
      }
      v119 = 0;
      swift_release();
      swift_release();
      unint64_t v40 = v134;
      uint64_t v47 = v135;
LABEL_66:
      double v72 = *(double *)(v128 + v114);
      *(void *)&long long v132 = v127;
      *((void *)&v132 + 1) = v50;
      unint64_t v134 = v40;
      uint64_t v135 = v47;
      static REMVector.angularCosineDistance(lhs:rhs:)((int64_t *)&v132, (int64_t *)&v134);
      if (v72 <= 0.49)
      {
        double v75 = v72 > 0.2 ? v72 : 0.2;
        BOOL v74 = v73 <= 0.25;
      }
      else
      {
        BOOL v74 = v73 <= 0.25;
        double v75 = 0.49;
      }
      int64_t v18 = v123;
      if (v74) {
        break;
      }
      if (v75 + v75 + v73 * (1.0 - v75) * 4.0 + -1.0 <= v28) {
        goto LABEL_74;
      }
LABEL_80:
      sub_1A734557C(v121, v122, v126);
      swift_release();
      swift_release();
    }
    if (v73 * 4.0 * v75 > v28) {
      goto LABEL_80;
    }
LABEL_74:
    uint64_t v124 = v47;
    uint64_t v120 = v50;
    uint64_t v76 = v121;
    uint64_t v77 = v122;
    sub_1A7340058(v121, v122, v126);
    if (v78) {
      break;
    }
    if (qword_1EB700B30 != -1) {
      swift_once();
    }
    uint64_t v79 = sub_1A7571E90();
    __swift_project_value_buffer(v79, (uint64_t)qword_1EB700B18);
    char v80 = v126;
    sub_1A73455E0(v76, v77, v126);
    unint64_t v81 = sub_1A7571E80();
    os_log_type_t v82 = sub_1A7572FD0();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = swift_slowAlloc();
      uint64_t v84 = swift_slowAlloc();
      unint64_t v134 = v84;
      *(_DWORD *)uint64_t v83 = v110;
      *(void *)&long long v132 = v76;
      *((void *)&v132 + 1) = v77;
      LOBYTE(v133) = v80;
      sub_1A73455E0(v76, v77, v80);
      uint64_t v85 = sub_1A7572670();
      *(void *)(v83 + 4) = sub_1A72D1730(v85, v86, (uint64_t *)&v134);
      uint64_t v13 = v112;
      swift_bridgeObjectRelease();
      sub_1A734557C(v76, v77, v80);
      sub_1A734557C(v76, v77, v80);
      _os_log_impl(&dword_1A72A1000, v81, v82, "REMAnchoredBubbleModel.predict: cannot find category label for %s", (uint8_t *)v83, 0xCu);
      swift_arrayDestroy();
      uint64_t v87 = v84;
      unint64_t v17 = v125;
      MEMORY[0x1AD0CD330](v87, -1, -1);
      MEMORY[0x1AD0CD330](v83, -1, -1);
      swift_release();
      swift_release();
    }
    else
    {

      sub_1A734557C(v76, v77, v80);
      sub_1A734557C(v76, v77, v80);
      swift_release();
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  sub_1A734557C(v76, v77, v126);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDD0);
  uint64_t v89 = swift_initStackObject();
  *(_OWORD *)(v89 + 16) = xmmword_1A75785A0;
  *(unsigned char *)(v89 + 32) = 4;
  *(void *)(v89 + 40) = MEMORY[0x1E4FBC870];
  unint64_t v90 = sub_1A72B0BB8(v89);
  uint64_t v91 = (uint64_t)v103;
  sub_1A7571B70();
  swift_bridgeObjectRelease();
  uint64_t v92 = (uint64_t)v102;
  sub_1A72BF1E8(v91, (uint64_t)v102, &qword_1EB704C40);
  uint64_t v93 = v105;
  uint64_t v94 = v106;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v92, 1, v106) == 1)
  {
    sub_1A72CB560(v91, &qword_1EB704C40);
    sub_1A72CB560(v92, &qword_1EB704C40);
    unint64_t v95 = 0xE500000000000000;
    uint64_t v96 = 0x296C696E28;
  }
  else
  {
    id v97 = v104;
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))(v104, v92, v94);
    uint64_t v98 = v93;
    uint64_t v96 = sub_1A7571B80();
    unint64_t v95 = v99;
    sub_1A72CB560(v91, &qword_1EB704C40);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v97, v94);
  }
  type metadata accessor for REMSuggestedList();
  uint64_t v100 = swift_allocObject();
  *(void *)(v100 + 16) = v96;
  *(void *)(v100 + 24) = v95;
  swift_release();

  swift_release();
  swift_release();
  uint64_t v101 = v108;
  *(void *)uint64_t v108 = v90;
  *((void *)v101 + 1) = v100;
  *((void *)v101 + 2) = 0;
  *((void *)v101 + 3) = 0;
  *((unsigned char *)v101 + 32) = 0;
}

uint64_t sub_1A733F3E0(uint64_t a1, uint64_t a2)
{
  sub_1A733F538(a1, a2);
  if (v4 == -1) {
    return 0;
  }
  uint64_t v5 = v3;
  if (v4)
  {
    if (*(void *)(v2 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels))
    {
      uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels);
      if (v3 < 0) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1A7336FA0(v7);
      swift_bridgeObjectRelease();
      uint64_t v9 = sub_1A7341934(v8);
      swift_bridgeObjectRelease();
      uint64_t v11 = v9;
      swift_bridgeObjectRetain_n();
      sub_1A73418B0((uint64_t *)&v11, sub_1A74F9DF0, sub_1A7342378);
      swift_bridgeObjectRelease_n();
      uint64_t v6 = (uint64_t)v11;
      if (v5 < 0) {
        goto LABEL_9;
      }
    }
    if (v5 < *(void *)(v6 + 16))
    {
      uint64_t v5 = *(void *)(v6 + 16 * v5 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v5;
    }
LABEL_9:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

uint64_t sub_1A733F538(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1A7571500();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v40[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = 0;
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  unsigned __int8 v44 = -1;
  id v10 = objc_msgSend(self, sel_wordEmbeddingForLanguage_, *(void *)(v3 + 16));
  if (!v10)
  {
    if (qword_1EB700B30 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1A7571E90();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EB700B18);
    swift_retain_n();
    double v28 = sub_1A7571E80();
    os_log_type_t v29 = sub_1A7572FD0();
    if (!os_log_type_enabled(v28, v29))
    {

      swift_release_n();
      uint64_t v36 = 0;
      uint64_t v35 = 0;
      uint64_t v34 = 0;
      unsigned __int8 v37 = -1;
      goto LABEL_20;
    }
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v40[0] = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v32 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v40[2] = sub_1A72D1730(v32, v33, v40);
    sub_1A7573250();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v28, v29, "REMAnchoredBubbleModel: missing NLEmbedding for %s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v31, -1, -1);
    MEMORY[0x1AD0CD330](v30, -1, -1);

LABEL_18:
    uint64_t v34 = v41;
    uint64_t v35 = v42;
    uint64_t v36 = v43;
    unsigned __int8 v37 = v44;
LABEL_20:
    sub_1A734678C(v34, v35, v36, v37);
    return 0;
  }
  uint64_t v11 = v10;
  v40[0] = _s19ReminderKitInternal25REMFilteredTitleEmbeddingC17decodeEmojiInText_8languageS2S_So10NLLanguageatFZ_0(a1, a2);
  v40[1] = v12;
  sub_1A75714D0();
  sub_1A72DF534();
  uint64_t v13 = sub_1A75732B0();
  unint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v16 = swift_bridgeObjectRelease();
  uint64_t v17 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0) {
    uint64_t v17 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (!v17)
  {

    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v40[0] = MEMORY[0x1E4FBC860];
  int64_t v18 = (void *)MEMORY[0x1AD0CC790](v16);
  sub_1A73401A8();
  swift_bridgeObjectRelease();
  uint64_t v19 = v40[0];
  if (*(void *)(v40[0] + 16) >= 0xAuLL) {
    uint64_t v20 = 10;
  }
  else {
    uint64_t v20 = *(void *)(v40[0] + 16);
  }
  if (v20)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = 0;
    uint64_t v22 = 16 * v20;
    do
    {
      uint64_t v24 = *(void *)(v19 + v21 + 32);
      uint64_t v23 = *(void *)(v19 + v21 + 40);
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = (void *)MEMORY[0x1AD0CC790](v25);
      sub_1A733F998(v3, v24, v23, (uint64_t)&v41, (uint64_t)v11);
      swift_bridgeObjectRelease();
      if (v44 != 255) {
        break;
      }
      v21 += 16;
    }
    while (v22 != v21);

    swift_bridgeObjectRelease_n();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  return v41;
}

void sub_1A733F998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a1 + 24);
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1A72B2210(a2, a3);
    if (v11)
    {
      uint64_t v12 = *(void *)(v9 + 56) + 32 * v10;
      uint64_t v13 = *(void *)v12;
      uint64_t v14 = *(void *)(v12 + 8);
      uint64_t v15 = *(void *)(v12 + 16);
      char v16 = *(unsigned char *)(v12 + 24);
      sub_1A73455E0(v14, v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)a4;
      uint64_t v18 = *(void *)(a4 + 8);
      uint64_t v19 = *(void *)(a4 + 16);
      *(void *)a4 = v13;
      *(void *)(a4 + 8) = v14;
      *(void *)(a4 + 16) = v15;
      unsigned __int8 v20 = *(unsigned char *)(a4 + 24);
      *(unsigned char *)(a4 + 24) = v16;
      sub_1A734678C(v17, v18, v19, v20);
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v47 = sub_1A7572F40();
  if (v47)
  {
    uint64_t v21 = *(void *)(a1 + 24);
    uint64_t v22 = *(void *)(v21 + 64);
    uint64_t v44 = v21 + 64;
    uint64_t v23 = 1 << *(unsigned char *)(v21 + 32);
    uint64_t v24 = -1;
    if (v23 < 64) {
      uint64_t v24 = ~(-1 << v23);
    }
    unint64_t v25 = v24 & v22;
    int64_t v45 = (unint64_t)(v23 + 63) >> 6;
    uint64_t v46 = *(void *)(a1 + 24);
    uint64_t v26 = (void *)swift_bridgeObjectRetain();
    int64_t v27 = 0;
    uint64_t v28 = a4;
    while (1)
    {
      if (v25)
      {
        unint64_t v29 = __clz(__rbit64(v25));
        v25 &= v25 - 1;
        unint64_t v30 = v29 | (v27 << 6);
      }
      else
      {
        if (__OFADD__(v27++, 1))
        {
          __break(1u);
          goto LABEL_32;
        }
        if (v27 >= v45) {
          goto LABEL_30;
        }
        unint64_t v32 = *(void *)(v44 + 8 * v27);
        if (!v32)
        {
          int64_t v33 = v27 + 1;
          if (v27 + 1 >= v45) {
            goto LABEL_30;
          }
          unint64_t v32 = *(void *)(v44 + 8 * v33);
          if (!v32)
          {
            int64_t v33 = v27 + 2;
            if (v27 + 2 >= v45) {
              goto LABEL_30;
            }
            unint64_t v32 = *(void *)(v44 + 8 * v33);
            if (!v32)
            {
              int64_t v33 = v27 + 3;
              if (v27 + 3 >= v45) {
                goto LABEL_30;
              }
              unint64_t v32 = *(void *)(v44 + 8 * v33);
              if (!v32)
              {
                while (1)
                {
                  int64_t v27 = v33 + 1;
                  if (__OFADD__(v33, 1)) {
                    break;
                  }
                  if (v27 >= v45) {
                    goto LABEL_30;
                  }
                  unint64_t v32 = *(void *)(v44 + 8 * v27);
                  ++v33;
                  if (v32) {
                    goto LABEL_21;
                  }
                }
LABEL_32:
                __break(1u);
LABEL_33:
                __break(1u);
                return;
              }
            }
          }
          int64_t v27 = v33;
        }
LABEL_21:
        unint64_t v25 = (v32 - 1) & v32;
        unint64_t v30 = __clz(__rbit64(v32)) + (v27 << 6);
      }
      uint64_t v34 = (uint64_t *)(*(void *)(v46 + 48) + 16 * v30);
      uint64_t v36 = *v34;
      uint64_t v35 = v34[1];
      uint64_t v37 = *(void *)(v46 + 56) + 32 * v30;
      double v38 = *(double *)v37;
      uint64_t v39 = *(void *)(v37 + 8);
      uint64_t v40 = *(void *)(v37 + 16);
      char v41 = *(unsigned char *)(v37 + 24);
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1A73455E0(v39, v40, v41);
      uint64_t v43 = (void *)MEMORY[0x1AD0CC790](v42);
      sub_1A733FC9C(v38, a5, v36, v35, v47, a1, v39, v40, v41, v28);
      uint64_t v26 = v43;
      if (v5) {
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
      uint64_t v26 = (void *)sub_1A734557C(v39, v40, v41);
      if (*(unsigned __int8 *)(v28 + 24) != 255)
      {
LABEL_30:
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
    }
  }
}

uint64_t sub_1A733FC9C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  char v11 = v10;
  uint64_t result = sub_1A7572F40();
  if (result)
  {
    uint64_t v19 = result;
    unint64_t v20 = *(void *)(a5 + 16);
    uint64_t v21 = swift_bridgeObjectRetain();
    sub_1A733E31C(v21, v20, (unint64_t *)&v49);
    sub_1A733E31C(v19, *(void *)(v19 + 16), (unint64_t *)&v47);
    unint64_t v22 = v49;
    if (*(void *)(a6 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction))
    {
      int64_t v43 = v49;
      uint64_t v44 = v50;
      swift_retain();
      swift_retain();
      sub_1A752DC98((unint64_t *)&v43, &v45);
      if (v11)
      {
        swift_release();
        char v41 = a9;
        if (qword_1EB700B30 != -1) {
          swift_once();
        }
        uint64_t v23 = sub_1A7571E90();
        __swift_project_value_buffer(v23, (uint64_t)qword_1EB700B18);
        id v24 = v11;
        id v25 = v11;
        uint64_t v26 = sub_1A7571E80();
        os_log_type_t v27 = sub_1A7572FD0();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v40 = a8;
          uint64_t v28 = (uint8_t *)swift_slowAlloc();
          uint64_t v29 = swift_slowAlloc();
          unint64_t v45 = v29;
          *(_DWORD *)uint64_t v28 = 136315138;
          swift_getErrorValue();
          uint64_t v30 = Error.rem_errorDescription.getter(v42);
          int64_t v43 = sub_1A72D1730(v30, v31, (uint64_t *)&v45);
          sub_1A7573250();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1A72A1000, v26, v27, "REMAnchoredBubbleModel: Skipping dimension reduction when predicting from title due to %s", v28, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AD0CD330](v29, -1, -1);
          unint64_t v32 = v28;
          a8 = v40;
          MEMORY[0x1AD0CD330](v32, -1, -1);

          swift_release();
          unint64_t v22 = v49;
        }
        else
        {
          swift_release();
        }
        a9 = v41;
      }
      else
      {
        swift_release_n();
        unint64_t v22 = v45;
        uint64_t v49 = v45;
        uint64_t v50 = v46;
        int64_t v43 = v47;
        uint64_t v44 = v48;
        swift_retain();
        sub_1A752DC98((unint64_t *)&v43, &v45);
        swift_release_n();
        swift_release();
        uint64_t v47 = v45;
        uint64_t v48 = v46;
      }
    }
    unint64_t v45 = v22;
    uint64_t v46 = v50;
    int64_t v43 = v47;
    uint64_t v44 = v48;
    static REMVector.rescaledAngularCosineDistance(lhs:rhs:scale:)((int64_t *)&v45, &v43);
    double v34 = v33;
    swift_release();
    uint64_t result = swift_release();
    if (v34 < a1)
    {
      uint64_t v35 = *(void *)a10;
      uint64_t v36 = *(void *)(a10 + 8);
      uint64_t v37 = *(void *)(a10 + 16);
      *(double *)a10 = a1;
      *(void *)(a10 + 8) = a7;
      *(void *)(a10 + 16) = a8;
      uint64_t v38 = a7;
      unsigned __int8 v39 = *(unsigned char *)(a10 + 24);
      *(unsigned char *)(a10 + 24) = a9 & 1;
      sub_1A73455E0(v38, a8, a9 & 1);
      return sub_1A734678C(v35, v36, v37, v39);
    }
  }
  return result;
}

uint64_t sub_1A7340058(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = a1;
  if (a3)
  {
    if (*(void *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels))
    {
      uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels);
      if (a1 < 0) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v6 = swift_bridgeObjectRetain();
      uint64_t v7 = sub_1A7336FA0(v6);
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_1A7341934(v7);
      swift_bridgeObjectRelease();
      unint64_t v10 = v8;
      swift_bridgeObjectRetain_n();
      sub_1A73418B0((uint64_t *)&v10, sub_1A74F9DF0, sub_1A7342378);
      swift_bridgeObjectRelease_n();
      uint64_t v5 = (uint64_t)v10;
      if (v4 < 0) {
        goto LABEL_9;
      }
    }
    if (*(void *)(v5 + 16) > v4)
    {
      uint64_t v4 = *(void *)(v5 + 16 * v4 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v4;
    }
LABEL_9:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_1A73401A8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1C60);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A7578D60;
  uint64_t v1 = (void *)*MEMORY[0x1E4F38858];
  uint64_t v2 = (void *)*MEMORY[0x1E4F38870];
  *(void *)(v0 + 32) = *MEMORY[0x1E4F38858];
  *(void *)(v0 + 40) = v2;
  id v3 = objc_allocWithZone(MEMORY[0x1E4F388F0]);
  type metadata accessor for NLTagScheme(0);
  id v4 = v1;
  v2;
  uint64_t v5 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_initWithTagSchemes_, v5);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1C88);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A757BF00;
  uint64_t v8 = (void *)*MEMORY[0x1E4F387F0];
  *(void *)(inited + 32) = *MEMORY[0x1E4F387F0];
  uint64_t v9 = (void *)*MEMORY[0x1E4F38898];
  unint64_t v10 = (void *)*MEMORY[0x1E4F38820];
  *(void *)(inited + 40) = *MEMORY[0x1E4F38898];
  *(void *)(inited + 48) = v10;
  char v11 = (void *)*MEMORY[0x1E4F38828];
  *(void *)(inited + 56) = *MEMORY[0x1E4F38828];
  id v12 = v8;
  id v13 = v9;
  id v14 = v10;
  id v15 = v11;
  sub_1A74FA1B8(inited);
  swift_setDeallocating();
  type metadata accessor for NLTag(0);
  swift_arrayDestroy();
  char v16 = (void *)sub_1A75725E0();
  objc_msgSend(v6, sel_setString_, v16);

  sub_1A7573140();
  sub_1A7573150();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7340400(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v13 = v12;
  if (v11 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      uint64_t v17 = sub_1A7572860();
      uint64_t v18 = MEMORY[0x1AD0CA8A0](v17);
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  if (!a1) {
    return 1;
  }
  swift_bridgeObjectRetain();
  id v21 = a1;
  char v22 = sub_1A72DB52C((uint64_t)v21, a6);
  swift_bridgeObjectRelease();

  if ((v22 & 1) == 0) {
    return 1;
  }
  uint64_t v23 = sub_1A7573160();
  if (!*(void *)(v23 + 16))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  id v24 = *(void **)(v23 + 32);
  id v25 = v24;
  swift_bridgeObjectRelease();
  if (v24)
  {
    uint64_t v18 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v20 = v26;

LABEL_13:
    unint64_t v27 = sub_1A72CABA0();
    uint64_t v28 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    if (*(void *)(v27 + 16) && (unint64_t v30 = sub_1A72B2210(v28, v29), (v31 & 1) != 0))
    {
      uint64_t v32 = *(void *)(*(void *)(v27 + 56) + 8 * v30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v33 = sub_1A72DB328(v18, v20, v32);
      swift_bridgeObjectRelease();
      if (v33)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v35 = *a9;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a9 = v35;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v35 = sub_1A72AC148(0, v35[2] + 1, 1, v35);
      *a9 = v35;
    }
    unint64_t v38 = v35[2];
    unint64_t v37 = v35[3];
    if (v38 >= v37 >> 1)
    {
      uint64_t v35 = sub_1A72AC148((void *)(v37 > 1), v38 + 1, 1, v35);
      *a9 = v35;
    }
    v35[2] = v38 + 1;
    unsigned __int8 v39 = &v35[2 * v38];
    v39[4] = v18;
    v39[5] = v20;
  }
  return 1;
}

void sub_1A73406AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, double *a8)
{
  uint64_t v9 = v8;
  uint64_t v48 = sub_1A7572F40();
  if (v48)
  {
    uint64_t v46 = a2;
    unint64_t v47 = a3;
    double v50 = INFINITY;
    uint64_t v16 = a4 + 64;
    uint64_t v17 = 1 << *(unsigned char *)(a4 + 32);
    uint64_t v18 = -1;
    if (v17 < 64) {
      uint64_t v18 = ~(-1 << v17);
    }
    unint64_t v19 = v18 & *(void *)(a4 + 64);
    int64_t v42 = (unint64_t)(v17 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v20 = 0;
    uint64_t v21 = a4;
    uint64_t v40 = a5;
    uint64_t v41 = a6;
    uint64_t v38 = a4 + 64;
    uint64_t v39 = a4;
    while (1)
    {
LABEL_5:
      if (v19)
      {
        unint64_t v22 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        unint64_t v23 = v22 | (v20 << 6);
      }
      else
      {
        if (__OFADD__(v20++, 1))
        {
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        if (v20 >= v42) {
          goto LABEL_30;
        }
        unint64_t v25 = *(void *)(v16 + 8 * v20);
        if (!v25)
        {
          int64_t v26 = v20 + 1;
          if (v20 + 1 >= v42) {
            goto LABEL_30;
          }
          unint64_t v25 = *(void *)(v16 + 8 * v26);
          if (!v25)
          {
            int64_t v26 = v20 + 2;
            if (v20 + 2 >= v42) {
              goto LABEL_30;
            }
            unint64_t v25 = *(void *)(v16 + 8 * v26);
            if (!v25)
            {
              int64_t v26 = v20 + 3;
              if (v20 + 3 >= v42)
              {
LABEL_30:
                swift_bridgeObjectRelease();
                swift_release();
                double v35 = v50 * 0.5;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                double v49 = *a8;
                *a8 = -0.0;
                sub_1A72D6B80((uint64_t)a5, a6, v46, v47, isUniquelyReferenced_nonNull_native, v35);
                *a8 = v49;
                goto LABEL_32;
              }
              unint64_t v25 = *(void *)(v16 + 8 * v26);
              if (!v25)
              {
                while (1)
                {
                  int64_t v20 = v26 + 1;
                  if (__OFADD__(v26, 1)) {
                    goto LABEL_34;
                  }
                  if (v20 >= v42) {
                    goto LABEL_30;
                  }
                  unint64_t v25 = *(void *)(v16 + 8 * v20);
                  ++v26;
                  if (v25) {
                    goto LABEL_17;
                  }
                }
              }
            }
          }
          int64_t v20 = v26;
        }
LABEL_17:
        unint64_t v19 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      unint64_t v27 = (void **)(*(void *)(v21 + 48) + 16 * v23);
      uint64_t v28 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
      if (*v27 != a5 || v27[1] != (void *)a6)
      {
        uint64_t v43 = v28;
        uint64_t v29 = v28;
        if ((sub_1A7573DB0() & 1) == 0)
        {
          uint64_t v30 = *(void *)(v43 + 16);
          if (v30) {
            break;
          }
        }
      }
    }
    swift_bridgeObjectRetain();
    char v31 = (unint64_t *)(v29 + 40);
    while (1)
    {
      uint64_t v32 = *(v31 - 1);
      unint64_t v33 = *v31;
      uint64_t v34 = swift_bridgeObjectRetain();
      a5 = (void *)MEMORY[0x1AD0CC790](v34);
      sub_1A7340A0C(a1, v32, v33, v48, a7, &v50, v46, v47);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      v31 += 5;
      swift_bridgeObjectRelease();
      if (!--v30)
      {
        swift_bridgeObjectRelease();
        a5 = v40;
        a6 = v41;
        uint64_t v16 = v38;
        uint64_t v21 = v39;
        goto LABEL_5;
      }
    }
LABEL_35:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    double v50 = *a8;
    *a8 = -0.0;
    sub_1A72D6B80((uint64_t)a5, a6, a2, a3, v37, 0.0);
    *a8 = v50;
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A7340A0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, double *a6, uint64_t a7, unint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t result = sub_1A7572F40();
  if (result)
  {
    uint64_t v18 = result;
    uint64_t v43 = a2;
    uint64_t v44 = a6;
    unint64_t v19 = *(void *)(a4 + 16);
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_1A733E31C(v20, v19, (unint64_t *)&v52);
    sub_1A733E31C(v18, *(void *)(v18 + 16), (unint64_t *)&v50);
    unint64_t v21 = v52;
    if (a5)
    {
      int64_t v46 = v52;
      uint64_t v47 = v53;
      swift_retain();
      swift_retain();
      sub_1A752DC98((unint64_t *)&v46, &v48);
      if (v9)
      {
        swift_release();
        unint64_t v42 = a8;
        if (qword_1EB700B30 != -1) {
          swift_once();
        }
        uint64_t v22 = sub_1A7571E90();
        __swift_project_value_buffer(v22, (uint64_t)qword_1EB700B18);
        id v23 = v9;
        id v24 = v9;
        unint64_t v25 = sub_1A7571E80();
        os_log_type_t v26 = sub_1A7572FD0();
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v41 = a7;
          unint64_t v27 = (uint8_t *)swift_slowAlloc();
          uint64_t v28 = swift_slowAlloc();
          unint64_t v48 = v28;
          *(_DWORD *)unint64_t v27 = 136315138;
          swift_getErrorValue();
          uint64_t v29 = Error.rem_errorDescription.getter(v45);
          int64_t v46 = sub_1A72D1730(v29, v30, (uint64_t *)&v48);
          sub_1A7573250();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1A72A1000, v25, v26, "REMAnchoredBubbleModel: Skipping dimension reduction when training due to %s", v27, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AD0CD330](v28, -1, -1);
          char v31 = v27;
          a7 = v41;
          MEMORY[0x1AD0CD330](v31, -1, -1);

          swift_release();
          unint64_t v21 = v52;
        }
        else
        {
          swift_release();
        }
        a8 = v42;
      }
      else
      {
        swift_release_n();
        unint64_t v21 = v48;
        uint64_t v52 = v48;
        uint64_t v53 = v49;
        int64_t v46 = v50;
        uint64_t v47 = v51;
        swift_retain();
        sub_1A752DC98((unint64_t *)&v46, &v48);
        swift_release_n();
        swift_release();
        uint64_t v50 = v48;
        uint64_t v51 = v49;
      }
    }
    double v32 = *v44;
    unint64_t v48 = v21;
    uint64_t v49 = v53;
    int64_t v46 = v50;
    uint64_t v47 = v51;
    static REMVector.rescaledAngularCosineDistance(lhs:rhs:scale:)((int64_t *)&v48, &v46);
    if (v33 >= v32) {
      double v33 = v32;
    }
    *uint64_t v44 = v33;
    if (v33 == 0.0)
    {
      uint64_t v34 = a7;
      if (qword_1EB700B30 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_1A7571E90();
      __swift_project_value_buffer(v35, (uint64_t)qword_1EB700B18);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v36 = sub_1A7571E80();
      os_log_type_t v37 = sub_1A7572FB0();
      if (os_log_type_enabled(v36, v37))
      {
        unint64_t v38 = a8;
        uint64_t v39 = swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        unint64_t v48 = v40;
        *(_DWORD *)uint64_t v39 = 136315394;
        swift_bridgeObjectRetain();
        int64_t v46 = sub_1A72D1730(v34, v38, (uint64_t *)&v48);
        sub_1A7573250();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v39 + 12) = 2080;
        swift_bridgeObjectRetain();
        int64_t v46 = sub_1A72D1730(v43, a3, (uint64_t *)&v48);
        sub_1A7573250();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A72A1000, v36, v37, "%s and %s has 0 distance", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v40, -1, -1);
        MEMORY[0x1AD0CD330](v39, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      swift_release();
    }
    else
    {
      swift_release();
    }
    return swift_release();
  }
  return result;
}

void sub_1A7340F48(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, double a7)
{
  uint64_t v9 = v7;
  uint64_t v41 = a6;
  uint64_t v28 = a1 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(a1 + 64);
  int64_t v29 = (unint64_t)(v12 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v15 = 0;
  if (!v14) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  unint64_t v17 = v16 | (v15 << 6);
LABEL_5:
  uint64_t v18 = *(void *)(a1 + 56);
  unint64_t v19 = (void *)(*(void *)(a1 + 48) + 16 * v17);
  uint64_t v20 = v19[1];
  *(void *)&long long v34 = *v19;
  *((void *)&v34 + 1) = v20;
  sub_1A72BF1E8(v18 + 40 * v17, (uint64_t)v35, &qword_1E96F1DD0);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1A7346804((uint64_t)&v34, (uint64_t)&v37);
    unint64_t v23 = v38;
    if (!v38)
    {
      swift_release();
      return;
    }
    uint64_t v24 = v37;
    double v25 = v39;
    *(double *)&long long v34 = v39;
    os_log_type_t v26 = sub_1A72BEE44(&v40, (long long *)((char *)&v34 + 8));
    uint64_t v8 = (void *)MEMORY[0x1AD0CC790](v26);
    sub_1A73411EC(v24, v23, a7, v25, a2, a3, a4, a5);
    if (v9) {
      goto LABEL_34;
    }
    uint64_t v9 = 0;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34 + 8);
    if (v14) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v21 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v21 < v29)
    {
      unint64_t v22 = *(void *)(v28 + 8 * v21);
      if (v22) {
        goto LABEL_9;
      }
      v15 += 2;
      if (v21 + 1 >= v29)
      {
        int64_t v15 = v21;
      }
      else
      {
        unint64_t v22 = *(void *)(v28 + 8 * v15);
        if (v22)
        {
          ++v21;
          goto LABEL_9;
        }
        if (v21 + 2 < v29)
        {
          unint64_t v22 = *(void *)(v28 + 8 * (v21 + 2));
          if (v22)
          {
            v21 += 2;
            goto LABEL_9;
          }
          int64_t v27 = v21 + 3;
          if (v21 + 3 < v29)
          {
            unint64_t v22 = *(void *)(v28 + 8 * v27);
            if (!v22)
            {
              while (1)
              {
                int64_t v21 = v27 + 1;
                if (__OFADD__(v27, 1)) {
                  goto LABEL_33;
                }
                if (v21 >= v29)
                {
                  int64_t v15 = v29 - 1;
                  goto LABEL_14;
                }
                unint64_t v22 = *(void *)(v28 + 8 * v21);
                ++v27;
                if (v22) {
                  goto LABEL_9;
                }
              }
            }
            v21 += 3;
LABEL_9:
            unint64_t v14 = (v22 - 1) & v22;
            unint64_t v17 = __clz(__rbit64(v22)) + (v21 << 6);
            int64_t v15 = v21;
            goto LABEL_5;
          }
          int64_t v15 = v21 + 2;
        }
      }
    }
LABEL_14:
    unint64_t v14 = 0;
    uint64_t v36 = 0;
    memset(v35, 0, sizeof(v35));
    long long v34 = 0u;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

void sub_1A73411EC(uint64_t a1, unint64_t a2, double a3, double a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  sub_1A733C980(a6, &v40);
  int64_t v42 = v41;
  if (!v41)
  {
    if (qword_1EB700B30 == -1) {
      goto LABEL_19;
    }
    goto LABEL_31;
  }
  if (__OFADD__(*a7, 1))
  {
    __break(1u);
LABEL_31:
    swift_once();
LABEL_19:
    uint64_t v24 = sub_1A7571E90();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB700B18);
    swift_bridgeObjectRetain_n();
    double v25 = sub_1A7571E80();
    os_log_type_t v26 = sub_1A7572FF0();
    if (os_log_type_enabled(v25, v26))
    {
      int64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v40 = v28;
      *(_DWORD *)int64_t v27 = 136315138;
      swift_bridgeObjectRetain();
      v39[0] = sub_1A72D1730(a1, a2, &v40);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A72A1000, v25, v26, "REMAnchoredBubbleModel: check too singular: Anchorword %s has no embedding", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v28, -1, -1);
      MEMORY[0x1AD0CD330](v27, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  uint64_t v37 = a8;
  uint64_t v15 = v40;
  ++*a7;
  uint64_t v16 = *(void *)(sub_1A7572F50() + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  uint64_t v17 = swift_bridgeObjectRetain();
  if (a3 > 0.2) {
    double v18 = a3;
  }
  else {
    double v18 = 0.2;
  }
  uint64_t v38 = v17;
  for (uint64_t i = v17 + 40; ; i += 24)
  {
    swift_bridgeObjectRetain();
    sub_1A733C980(a6, &v40);
    swift_bridgeObjectRelease();
    int64_t v20 = v41;
    if (v41) {
      break;
    }
LABEL_8:
    if (!--v16)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  int64_t v21 = v40;
  uint64_t v40 = v15;
  int64_t v41 = v42;
  v39[0] = v21;
  v39[1] = v20;
  static REMVector.angularCosineDistance(lhs:rhs:)(&v40, v39);
  if (a3 <= 0.49) {
    double v23 = v18;
  }
  else {
    double v23 = 0.49;
  }
  if (v22 > 0.25)
  {
    if (v23 + v23 + v22 * (1.0 - v23) * 4.0 + -1.0 < a4) {
      goto LABEL_24;
    }
    goto LABEL_17;
  }
  if (v22 * 4.0 * v23 >= a4)
  {
LABEL_17:
    swift_release();
    goto LABEL_8;
  }
LABEL_24:
  swift_bridgeObjectRelease();
  if (__OFADD__(*v37, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v37;
    if (qword_1EB700B30 == -1) {
      goto LABEL_26;
    }
  }
  swift_once();
LABEL_26:
  uint64_t v29 = sub_1A7571E90();
  __swift_project_value_buffer(v29, (uint64_t)qword_1EB700B18);
  swift_bridgeObjectRetain();
  unint64_t v30 = sub_1A7571E80();
  os_log_type_t v31 = sub_1A7572FF0();
  if (os_log_type_enabled(v30, v31))
  {
    double v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v40 = v33;
    *(_DWORD *)double v32 = 136315138;
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1DE0);
    uint64_t v35 = MEMORY[0x1AD0CAC20](v38, v34);
    v39[0] = sub_1A72D1730(v35, v36, &v40);
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v30, v31, "REMAnchoredBubbleModel: Anchor word has nearby words: %s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v33, -1, -1);
    MEMORY[0x1AD0CD330](v32, -1, -1);

    swift_release();
LABEL_28:
    swift_release();
  }
  else
  {

    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
  }
}

uint64_t REMAnchoredBubbleModel.deinit()
{
  swift_bridgeObjectRelease();
  sub_1A72CB560(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictionEditingSessionID, &qword_1EB704C40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMAnchoredBubbleModel.__deallocating_deinit()
{
  REMAnchoredBubbleModel.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_1A7341804(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1A7345258(a1, a2);
  id v4 = *(uint64_t (**)(uint64_t))(v2 + 8);
  return sub_1A73467B0(v4, v2, v3);
}

uint64_t sub_1A734188C()
{
  return sub_1A733B0B4();
}

uint64_t sub_1A73418B0(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

void *sub_1A7341934(uint64_t a1)
{
  uint64_t v23 = MEMORY[0x1E4FBC870];
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_29;
  }
  uint64_t v21 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    id v4 = (uint64_t *)(v21 + 16 * v2);
    uint64_t v6 = *v4;
    uint64_t v5 = v4[1];
    uint64_t v7 = v23;
    if (*(void *)(v23 + 16))
    {
      sub_1A75740C0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A75726F0();
      uint64_t v8 = sub_1A7574110();
      uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v10 = v8 & ~v9;
      if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
      {
        uint64_t v11 = *(void *)(v7 + 48);
        uint64_t v12 = (void *)(v11 + 16 * v10);
        BOOL v13 = *v12 == v6 && v12[1] == v5;
        if (v13 || (sub_1A7573DB0() & 1) != 0)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v14 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v14;
          if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
            break;
          }
          uint64_t v15 = (void *)(v11 + 16 * v10);
          BOOL v16 = *v15 == v6 && v15[1] == v5;
          if (v16 || (sub_1A7573DB0() & 1) != 0) {
            goto LABEL_3;
          }
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_1A72AC148(0, v3[2] + 1, 1, v3);
    }
    unint64_t v18 = v3[2];
    unint64_t v17 = v3[3];
    if (v18 >= v17 >> 1) {
      uint64_t v3 = sub_1A72AC148((void *)(v17 > 1), v18 + 1, 1, v3);
    }
    v3[2] = v18 + 1;
    unint64_t v19 = &v3[2 * v18];
    v19[4] = v6;
    v19[5] = v5;
    swift_bridgeObjectRetain();
    sub_1A72DF384(&v22, v6, v5);
    swift_bridgeObjectRelease();
LABEL_4:
    swift_bridgeObjectRelease();
    ++v2;
  }
  while (v2 != v1);
  swift_bridgeObjectRelease();
LABEL_29:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1A7341B8C(unint64_t a1)
{
  unint64_t v1 = a1;
  uint64_t v57 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_92:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1A75738D0();
    if (v2) {
      goto LABEL_3;
    }
LABEL_93:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v57;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_93;
  }
LABEL_3:
  unint64_t v3 = 0;
  unint64_t v55 = v1 & 0xC000000000000001;
  uint64_t v49 = v1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v4 = MEMORY[0x1E4FBC870];
  unint64_t v53 = v1;
  unint64_t v48 = v1 + 32;
  uint64_t v54 = v2;
  while (1)
  {
    if (v55)
    {
      uint64_t v5 = MEMORY[0x1AD0CB800](v3, v53);
      BOOL v6 = __OFADD__(v3++, 1);
      if (v6) {
        goto LABEL_86;
      }
    }
    else
    {
      if (v3 >= *(void *)(v49 + 16)) {
        goto LABEL_87;
      }
      uint64_t v5 = *(void *)(v48 + 8 * v3);
      swift_retain();
      BOOL v6 = __OFADD__(v3++, 1);
      if (v6) {
        goto LABEL_86;
      }
    }
    if ((v4 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      char v7 = sub_1A7573450();
      swift_bridgeObjectRelease();
      swift_release();
      if (v7)
      {
        swift_release();
        goto LABEL_5;
      }
    }
    else if (*(void *)(v4 + 16))
    {
      sub_1A75740C0();
      sub_1A75740D0();
      uint64_t v8 = sub_1A7574110();
      uint64_t v9 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v10 = v8 & ~v9;
      if ((*(void *)(v4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
      {
        uint64_t v50 = ~v9;
        uint64_t v11 = v5 + 16;
        uint64_t v51 = *(void *)(v4 + 48);
        swift_beginAccess();
        while (1)
        {
          unint64_t v1 = *(void *)(v51 + 8 * v10);
          swift_beginAccess();
          uint64_t v12 = *(void *)(v1 + 24);
          if (v12 == *(void *)(v5 + 24)) {
            break;
          }
LABEL_18:
          unint64_t v10 = (v10 + 1) & v50;
          uint64_t v2 = v54;
          if (((*(void *)(v4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
            goto LABEL_29;
          }
        }
        if (v12 < 0) {
          goto LABEL_88;
        }
        if (v12)
        {
          swift_beginAccess();
          swift_beginAccess();
          unint64_t v13 = 0;
          uint64_t v14 = *(void *)(v1 + 16);
          unint64_t v15 = *(void *)(v14 + 16);
          uint64_t v16 = v14 + 32;
          while (v12 != v13)
          {
            if (v13 >= v15) {
              goto LABEL_81;
            }
            if (v13 >= *(void *)(*(void *)v11 + 16)) {
              goto LABEL_82;
            }
            if (*(double *)(v16 + 8 * v13) != *(double *)(*(void *)v11 + 8 * v13 + 32)) {
              goto LABEL_18;
            }
            if (v12 == ++v13) {
              goto LABEL_49;
            }
          }
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
LABEL_88:
          __break(1u);
LABEL_89:
          __break(1u);
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
          goto LABEL_92;
        }
        goto LABEL_49;
      }
    }
LABEL_29:
    uint64_t v17 = swift_retain();
    MEMORY[0x1AD0CABF0](v17);
    if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1A7572A60();
    }
    sub_1A7572AB0();
    sub_1A7572A30();
    if ((v4 & 0xC000000000000001) != 0)
    {
      if (v4 < 0) {
        uint64_t v18 = v4;
      }
      else {
        uint64_t v18 = v4 & 0xFFFFFFFFFFFFFF8;
      }
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1A7573410();
      swift_release();
      if (v19)
      {
        swift_bridgeObjectRelease();
        swift_release();
        type metadata accessor for RDVector();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_release();
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v30 = sub_1A7573400();
        if (__OFADD__(v30, 1)) {
          goto LABEL_91;
        }
        uint64_t v31 = sub_1A7343DEC(v18, v30 + 1);
        uint64_t v56 = v31;
        if (*(void *)(v31 + 24) <= *(void *)(v31 + 16))
        {
          swift_retain();
          sub_1A74E6504();
          uint64_t v32 = v56;
        }
        else
        {
          uint64_t v32 = v31;
          swift_retain();
        }
        sub_1A734407C(v5, v32);
        swift_release_n();
        swift_bridgeObjectRelease();
        uint64_t v4 = v32;
      }
      goto LABEL_5;
    }
    sub_1A75740C0();
    sub_1A75740D0();
    uint64_t v20 = sub_1A7574110();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = v20 & ~v21;
    if ((*(void *)(v4 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
    {
      uint64_t v52 = ~v21;
      uint64_t v23 = v5 + 16;
      uint64_t v24 = *(void *)(v4 + 48);
      swift_beginAccess();
      while (1)
      {
        uint64_t v25 = *(void *)(v24 + 8 * v22);
        swift_beginAccess();
        unint64_t v1 = *(void *)(v25 + 24);
        if (v1 == *(void *)(v5 + 24)) {
          break;
        }
LABEL_39:
        unint64_t v22 = (v22 + 1) & v52;
        if (((*(void *)(v4 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          goto LABEL_53;
        }
      }
      if ((v1 & 0x8000000000000000) != 0) {
        goto LABEL_90;
      }
      if (v1)
      {
        swift_beginAccess();
        swift_beginAccess();
        unint64_t v26 = 0;
        uint64_t v27 = *(void *)(v25 + 16);
        unint64_t v28 = *(void *)(v27 + 16);
        uint64_t v29 = v27 + 32;
        while (v1 != v26)
        {
          if (v26 >= v28) {
            goto LABEL_84;
          }
          if (v26 >= *(void *)(*(void *)v23 + 16)) {
            goto LABEL_85;
          }
          if (*(double *)(v29 + 8 * v26) != *(double *)(*(void *)v23 + 8 * v26 + 32)) {
            goto LABEL_39;
          }
          if (v1 == ++v26) {
            goto LABEL_49;
          }
        }
        goto LABEL_83;
      }
LABEL_49:
      swift_release();
      uint64_t v2 = v54;
      goto LABEL_5;
    }
LABEL_53:
    swift_retain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v1 = *(void *)(v4 + 16);
    unint64_t v34 = *(void *)(v4 + 24);
    swift_retain();
    if (v34 > v1)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1A74E85D0();
      }
      goto LABEL_74;
    }
    if (isUniquelyReferenced_nonNull_native) {
      sub_1A74E6504();
    }
    else {
      sub_1A74E9D1C();
    }
    unint64_t v1 = v4;
    sub_1A75740C0();
    sub_1A75740D0();
    uint64_t v35 = sub_1A7574110();
    uint64_t v36 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = v35 & ~v36;
    if ((*(void *)(v4 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22)) {
      break;
    }
LABEL_74:
    *(void *)(v4 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v22;
    *(void *)(*(void *)(v4 + 48) + 8 * v22) = v5;
    uint64_t v45 = *(void *)(v4 + 16);
    BOOL v6 = __OFADD__(v45, 1);
    uint64_t v46 = v45 + 1;
    if (v6)
    {
      __break(1u);
      goto LABEL_95;
    }
    *(void *)(v4 + 16) = v46;
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v2 = v54;
LABEL_5:
    if (v3 == v2) {
      goto LABEL_93;
    }
  }
  uint64_t v37 = ~v36;
  type metadata accessor for RDVector();
  uint64_t v38 = v5 + 16;
  uint64_t v39 = *(void *)(v4 + 48);
  swift_beginAccess();
  while (1)
  {
    uint64_t v40 = *(void *)(v39 + 8 * v22);
    swift_beginAccess();
    unint64_t v1 = *(void *)(v40 + 24);
    if (v1 == *(void *)(v5 + 24)) {
      break;
    }
LABEL_63:
    unint64_t v22 = (v22 + 1) & v37;
    if (((*(void *)(v4 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
      goto LABEL_74;
    }
  }
  if ((v1 & 0x8000000000000000) != 0) {
    goto LABEL_89;
  }
  if (v1)
  {
    swift_beginAccess();
    swift_beginAccess();
    unint64_t v41 = 0;
    uint64_t v42 = *(void *)(v40 + 16);
    unint64_t v43 = *(void *)(v42 + 16);
    uint64_t v44 = v42 + 32;
    while (v1 != v41)
    {
      if (v41 >= v43) {
        goto LABEL_78;
      }
      if (v41 >= *(void *)(*(void *)v38 + 16)) {
        goto LABEL_79;
      }
      if (*(double *)(v44 + 8 * v41) != *(double *)(*(void *)v38 + 8 * v41 + 32)) {
        goto LABEL_63;
      }
      if (v1 == ++v41) {
        goto LABEL_95;
      }
    }
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
LABEL_95:
  uint64_t result = sub_1A7574000();
  __break(1u);
  return result;
}

uint64_t sub_1A7342378(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A7573BB0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1A7343218(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          id v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1A73433F8((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v97 = sub_1A74F9DDC((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1A7572A90();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1A7573DB0();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1A7573DB0()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1A74F9714(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_1A74F9714((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    unint64_t v43 = &v11[16 * v41 + 32];
    *(void *)unint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        double v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        unint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        unint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1A73433F8((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)unint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        unint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1A7573DB0() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A7342A64(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A7573BB0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_162;
    }
    if (v3) {
      return sub_1A73432E8(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_170;
  }
  uint64_t v116 = result;
  uint64_t v114 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_128:
      uint64_t v105 = v11;
      uint64_t v115 = v8;
      if (v12 >= 2)
      {
        uint64_t v106 = *v114;
        do
        {
          unint64_t v107 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_157;
          }
          if (!v106) {
            goto LABEL_169;
          }
          uint64_t v108 = v105;
          uint64_t v109 = *(void *)&v105[16 * v107 + 32];
          uint64_t v110 = *(void *)&v105[16 * v12 + 24];
          sub_1A7343694((char *)(v106 + 40 * v109), (char *)(v106 + 40 * *(void *)&v105[16 * v12 + 16]), v106 + 40 * v110, __dst);
          if (v1) {
            break;
          }
          if (v110 < v109) {
            goto LABEL_158;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v108 = sub_1A74F9DDC((uint64_t)v108);
          }
          if (v107 >= *((void *)v108 + 2)) {
            goto LABEL_159;
          }
          size_t v111 = &v108[16 * v107 + 32];
          *(void *)size_t v111 = v109;
          *((void *)v111 + 1) = v110;
          unint64_t v112 = *((void *)v108 + 2);
          if (v12 > v112) {
            goto LABEL_160;
          }
          memmove(&v108[16 * v12 + 16], &v108[16 * v12 + 32], 16 * (v112 - v12));
          uint64_t v105 = v108;
          *((void *)v108 + 2) = v112 - 1;
          unint64_t v12 = v112 - 1;
        }
        while (v112 > 2);
      }
LABEL_125:
      swift_bridgeObjectRelease();
      *(void *)(v115 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v115 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F60);
    uint64_t v7 = sub_1A7572A90();
    *(void *)(v7 + 16) = v6;
    uint64_t v115 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v113 = *a1 + 32;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v117 = v3;
  uint64_t v118 = *a1;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_26;
    }
    uint64_t v14 = (void *)(v10 + 40 * v9);
    uint64_t v15 = v14[4];
    uint64_t v16 = (void *)(v10 + 40 * v13);
    uint64_t v17 = v16[4];
    if (v15 == v17) {
      break;
    }
    int v19 = v17 < v15;
LABEL_24:
    uint64_t v20 = v13 + 2;
    if (v13 + 2 < v3) {
      goto LABEL_30;
    }
    uint64_t v9 = v13 + 2;
    if (v19) {
      goto LABEL_44;
    }
LABEL_26:
    if (v9 < v3) {
      goto LABEL_52;
    }
LABEL_75:
    if (v9 < v13) {
      goto LABEL_156;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1A74F9714(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v55 = *((void *)v11 + 2);
    unint64_t v54 = *((void *)v11 + 3);
    unint64_t v12 = v55 + 1;
    if (v55 >= v54 >> 1) {
      uint64_t v11 = sub_1A74F9714((char *)(v54 > 1), v55 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    unint64_t v56 = v11 + 32;
    uint64_t v57 = &v11[16 * v55 + 32];
    *(void *)uint64_t v57 = v13;
    *((void *)v57 + 1) = v9;
    if (v55)
    {
      uint64_t v10 = v118;
      while (1)
      {
        unint64_t v58 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v63 = &v56[16 * v12];
          uint64_t v64 = *((void *)v63 - 8);
          uint64_t v65 = *((void *)v63 - 7);
          BOOL v69 = __OFSUB__(v65, v64);
          uint64_t v66 = v65 - v64;
          if (v69) {
            goto LABEL_145;
          }
          uint64_t v68 = *((void *)v63 - 6);
          uint64_t v67 = *((void *)v63 - 5);
          BOOL v69 = __OFSUB__(v67, v68);
          uint64_t v61 = v67 - v68;
          char v62 = v69;
          if (v69) {
            goto LABEL_146;
          }
          unint64_t v70 = v12 - 2;
          uint64_t v71 = &v56[16 * v12 - 32];
          uint64_t v73 = *(void *)v71;
          uint64_t v72 = *((void *)v71 + 1);
          BOOL v69 = __OFSUB__(v72, v73);
          uint64_t v74 = v72 - v73;
          if (v69) {
            goto LABEL_148;
          }
          BOOL v69 = __OFADD__(v61, v74);
          uint64_t v75 = v61 + v74;
          if (v69) {
            goto LABEL_151;
          }
          if (v75 >= v66)
          {
            unint64_t v93 = &v56[16 * v58];
            uint64_t v95 = *(void *)v93;
            uint64_t v94 = *((void *)v93 + 1);
            BOOL v69 = __OFSUB__(v94, v95);
            uint64_t v96 = v94 - v95;
            if (v69) {
              goto LABEL_155;
            }
            BOOL v86 = v61 < v96;
            goto LABEL_113;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v87 = *((void *)v11 + 4);
            uint64_t v88 = *((void *)v11 + 5);
            BOOL v69 = __OFSUB__(v88, v87);
            uint64_t v80 = v88 - v87;
            char v81 = v69;
            goto LABEL_107;
          }
          uint64_t v60 = *((void *)v11 + 4);
          uint64_t v59 = *((void *)v11 + 5);
          BOOL v69 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          char v62 = v69;
        }
        if (v62) {
          goto LABEL_147;
        }
        unint64_t v70 = v12 - 2;
        uint64_t v76 = &v56[16 * v12 - 32];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v79 = __OFSUB__(v77, v78);
        uint64_t v80 = v77 - v78;
        char v81 = v79;
        if (v79) {
          goto LABEL_150;
        }
        uint64_t v82 = &v56[16 * v58];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v69 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v69) {
          goto LABEL_153;
        }
        if (__OFADD__(v80, v85)) {
          goto LABEL_154;
        }
        if (v80 + v85 >= v61)
        {
          BOOL v86 = v61 < v85;
LABEL_113:
          if (v86) {
            unint64_t v58 = v70;
          }
          goto LABEL_115;
        }
LABEL_107:
        if (v81) {
          goto LABEL_149;
        }
        unint64_t v89 = &v56[16 * v58];
        uint64_t v91 = *(void *)v89;
        uint64_t v90 = *((void *)v89 + 1);
        BOOL v69 = __OFSUB__(v90, v91);
        uint64_t v92 = v90 - v91;
        if (v69) {
          goto LABEL_152;
        }
        if (v92 < v80) {
          goto LABEL_15;
        }
LABEL_115:
        unint64_t v97 = v58 - 1;
        if (v58 - 1 >= v12)
        {
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
          goto LABEL_164;
        }
        if (!v10) {
          goto LABEL_167;
        }
        uint64_t v98 = v11;
        uint64_t v99 = v10;
        uint64_t v100 = &v56[16 * v97];
        uint64_t v101 = *(void *)v100;
        uint64_t v102 = &v56[16 * v58];
        uint64_t v103 = *((void *)v102 + 1);
        sub_1A7343694((char *)(v99 + 40 * *(void *)v100), (char *)(v99 + 40 * *(void *)v102), v99 + 40 * v103, __dst);
        if (v1) {
          goto LABEL_125;
        }
        if (v103 < v101) {
          goto LABEL_142;
        }
        if (v58 > *((void *)v98 + 2)) {
          goto LABEL_143;
        }
        *(void *)uint64_t v100 = v101;
        *(void *)&v56[16 * v97 + 8] = v103;
        unint64_t v104 = *((void *)v98 + 2);
        if (v58 >= v104) {
          goto LABEL_144;
        }
        uint64_t v11 = v98;
        unint64_t v12 = v104 - 1;
        memmove(&v56[16 * v58], v102 + 16, 16 * (v104 - 1 - v58));
        *((void *)v98 + 2) = v104 - 1;
        BOOL v86 = v104 > 2;
        uint64_t v10 = v118;
        if (!v86) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v118;
LABEL_15:
    uint64_t v3 = v117;
    if (v9 >= v117)
    {
      uint64_t v8 = v115;
      goto LABEL_128;
    }
  }
  if (*v14 != *v16 || v14[1] != v16[1])
  {
    int v19 = sub_1A7573DB0();
    goto LABEL_24;
  }
  uint64_t v20 = v13 + 2;
  if (v13 + 2 >= v3) {
    goto LABEL_51;
  }
  int v19 = 0;
LABEL_30:
  uint64_t v21 = (void *)(v10 + 40 * v20);
  while (2)
  {
    uint64_t v23 = v21[4];
    uint64_t v24 = (void *)(v10 + 40 * v9);
    uint64_t v25 = v24[4];
    if (v23 != v25)
    {
      int v27 = v25 < v23;
      goto LABEL_40;
    }
    if (*v21 == *v24 && v21[1] == v24[1])
    {
      if (v19)
      {
        uint64_t v3 = v117;
        if (v20 >= v13) {
          goto LABEL_45;
        }
        goto LABEL_165;
      }
    }
    else
    {
      int v27 = sub_1A7573DB0();
LABEL_40:
      if ((v19 ^ v27)) {
        goto LABEL_43;
      }
    }
    v21 += 5;
    uint64_t v22 = v20 + 1;
    uint64_t v9 = v20;
    uint64_t v20 = v22;
    if (v22 < v117) {
      continue;
    }
    break;
  }
  uint64_t v20 = v22;
LABEL_43:
  uint64_t v3 = v117;
  uint64_t v9 = v20;
  if ((v19 & 1) == 0) {
    goto LABEL_26;
  }
LABEL_44:
  if (v20 < v13) {
    goto LABEL_165;
  }
LABEL_45:
  if (v13 < v20)
  {
    uint64_t v28 = 40 * v20;
    uint64_t v29 = 40 * v13;
    uint64_t v30 = v20;
    uint64_t v31 = v13;
    do
    {
      if (v31 != --v30)
      {
        if (!v10) {
          goto LABEL_168;
        }
        uint64_t v32 = v10 + v29;
        uint64_t v33 = v10 + v28;
        long long v34 = *(_OWORD *)(v10 + v29);
        long long v35 = *(_OWORD *)(v10 + v29 + 16);
        uint64_t v36 = *(void *)(v10 + v29 + 32);
        uint64_t v37 = *(void *)(v10 + v28 - 8);
        long long v38 = *(_OWORD *)(v10 + v28 - 24);
        *(_OWORD *)uint64_t v32 = *(_OWORD *)(v10 + v28 - 40);
        *(_OWORD *)(v32 + 16) = v38;
        *(void *)(v32 + 32) = v37;
        *(_OWORD *)(v33 - 40) = v34;
        *(_OWORD *)(v33 - 24) = v35;
        *(void *)(v33 - 8) = v36;
      }
      ++v31;
      v28 -= 40;
      v29 += 40;
    }
    while (v31 < v30);
  }
LABEL_51:
  uint64_t v9 = v20;
  if (v20 >= v3) {
    goto LABEL_75;
  }
LABEL_52:
  if (__OFSUB__(v9, v13)) {
    goto LABEL_161;
  }
  if (v9 - v13 >= v116) {
    goto LABEL_75;
  }
  if (__OFADD__(v13, v116)) {
    goto LABEL_163;
  }
  if (v13 + v116 >= v3) {
    uint64_t v39 = v3;
  }
  else {
    uint64_t v39 = v13 + v116;
  }
  if (v39 >= v13)
  {
    if (v9 != v39)
    {
      unint64_t v40 = (uint64_t *)(v113 + 40 * v9);
      do
      {
        unint64_t v41 = (uint64_t *)(v10 + 40 * v9);
        uint64_t v42 = *v41;
        uint64_t v43 = v41[1];
        uint64_t v44 = v41[4];
        uint64_t v45 = v13;
        uint64_t v46 = v40;
        do
        {
          uint64_t v47 = v46 - 9;
          uint64_t v48 = *(v46 - 5);
          if (v44 == v48)
          {
            BOOL v49 = v42 == *(v46 - 9) && v43 == *(v46 - 8);
            if (v49 || (sub_1A7573DB0() & 1) == 0) {
              break;
            }
          }
          else if (v48 >= v44)
          {
            break;
          }
          if (!v10) {
            goto LABEL_166;
          }
          uint64_t v44 = *v46;
          uint64_t v50 = *(v46 - 5);
          *(v46 - 5) = *v46;
          v46 -= 5;
          uint64_t v42 = v46[1];
          uint64_t v43 = v46[2];
          uint64_t v51 = v46[3];
          uint64_t v52 = v46[4];
          long long v53 = *((_OWORD *)v47 + 1);
          *(_OWORD *)(v47 + 5) = *(_OWORD *)v47;
          *(_OWORD *)(v47 + 7) = v53;
          v47[9] = v50;
          *(v46 - 4) = v42;
          *(v46 - 3) = v43;
          *(v46 - 2) = v51;
          *(v46 - 1) = v52;
          ++v45;
        }
        while (v9 != v45);
        ++v9;
        v40 += 5;
      }
      while (v9 != v39);
      uint64_t v9 = v39;
    }
    goto LABEL_75;
  }
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A7343218(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_1A7573DB0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A73432E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 40 * a3 + 32;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 40 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v9[4];
    uint64_t v12 = v6;
    BOOL v13 = (uint64_t *)v8;
    while (1)
    {
      uint64_t v14 = v13 - 9;
      uint64_t v15 = *(v13 - 5);
      if (v11 == v15)
      {
        BOOL v16 = result == *(v13 - 9) && v10 == *(v13 - 8);
        if (v16 || (uint64_t result = sub_1A7573DB0(), (result & 1) == 0))
        {
LABEL_4:
          ++v4;
          v8 += 40;
          if (v4 == a2) {
            return result;
          }
          goto LABEL_5;
        }
      }
      else if (v15 >= v11)
      {
        goto LABEL_4;
      }
      if (!v7) {
        break;
      }
      uint64_t v11 = *v13;
      uint64_t v17 = *(v13 - 5);
      *(v13 - 5) = *v13;
      v13 -= 5;
      uint64_t result = v13[1];
      uint64_t v10 = v13[2];
      uint64_t v18 = v13[3];
      uint64_t v19 = v13[4];
      long long v20 = *((_OWORD *)v14 + 1);
      *(_OWORD *)(v14 + 5) = *(_OWORD *)v14;
      *(_OWORD *)(v14 + 7) = v20;
      v14[9] = v17;
      *(v13 - 4) = result;
      *(v13 - 3) = v10;
      *(v13 - 2) = v18;
      *(v13 - 1) = v19;
      if (v4 == ++v12) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A73433F8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  int v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      int v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        uint64_t v19 = v6;
        while (1)
        {
          long long v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1A7573DB0() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            uint64_t v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            int v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1A7573DB0() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          BOOL v16 = v6;
        }
        else
        {
          BOOL v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      int v27 = v7;
    }
LABEL_50:
    sub_1A74F9810((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A7343694(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v37 = __src;
  uint64_t v36 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -39) {
      goto LABEL_51;
    }
    if (__dst != a2 || &a2[40 * v11] <= __dst) {
      memmove(__dst, a2, 40 * v11);
    }
    uint64_t v21 = &v4[40 * v11];
    long long v35 = v21;
    uint64_t v37 = v6;
    if (v7 >= v6 || v10 < 40)
    {
LABEL_50:
      sub_1A74F9AE0((void **)&v37, (const void **)&v36, &v35);
      return 1;
    }
    unint64_t v22 = a3 - 40;
    BOOL v23 = v6;
    while (1)
    {
      uint64_t v24 = (char *)(v22 + 40);
      uint64_t v25 = *((void *)v21 - 1);
      uint64_t v27 = *((void *)v23 - 5);
      v23 -= 40;
      uint64_t v26 = v27;
      uint64_t v28 = *((void *)v23 + 4);
      if (v25 == v28)
      {
        BOOL v29 = *((void *)v21 - 5) == v26 && *((void *)v21 - 4) == *((void *)v23 + 1);
        if (v29 || (sub_1A7573DB0() & 1) == 0)
        {
LABEL_38:
          long long v35 = v21 - 40;
          if (v24 < v21 || v22 >= (unint64_t)v21 || v24 != v21)
          {
            long long v30 = *(_OWORD *)(v21 - 40);
            long long v31 = *(_OWORD *)(v21 - 24);
            *(void *)(v22 + 32) = *((void *)v21 - 1);
            *(_OWORD *)unint64_t v22 = v30;
            *(_OWORD *)(v22 + 16) = v31;
          }
          BOOL v23 = v6;
          v21 -= 40;
          if (v6 <= v7) {
            goto LABEL_50;
          }
          goto LABEL_49;
        }
      }
      else if (v28 >= v25)
      {
        goto LABEL_38;
      }
      if (v24 != v6 || v22 >= (unint64_t)v6)
      {
        long long v32 = *(_OWORD *)v23;
        long long v33 = *((_OWORD *)v23 + 1);
        *(void *)(v22 + 32) = *((void *)v23 + 4);
        *(_OWORD *)unint64_t v22 = v32;
        *(_OWORD *)(v22 + 16) = v33;
      }
      uint64_t v37 = v23;
      if (v23 <= v7) {
        goto LABEL_50;
      }
LABEL_49:
      v22 -= 40;
      uint64_t v6 = v23;
      if (v21 <= v4) {
        goto LABEL_50;
      }
    }
  }
  if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst) {
      memmove(__dst, __src, 40 * v9);
    }
    uint64_t v12 = &v4[40 * v9];
    long long v35 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      while (1)
      {
        uint64_t v13 = *((void *)v6 + 4);
        uint64_t v14 = *((void *)v4 + 4);
        if (v13 == v14)
        {
          BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
          if (!v15 && (sub_1A7573DB0() & 1) != 0)
          {
LABEL_18:
            uint64_t v18 = v6 + 40;
            if (v7 < v6 || v7 >= v18 || v7 != v6)
            {
              long long v19 = *(_OWORD *)v6;
              long long v20 = *((_OWORD *)v6 + 1);
              *((void *)v7 + 4) = *((void *)v6 + 4);
              *(_OWORD *)uint64_t v7 = v19;
              *((_OWORD *)v7 + 1) = v20;
            }
            goto LABEL_22;
          }
        }
        else if (v14 < v13)
        {
          goto LABEL_18;
        }
        if (v7 != v4)
        {
          long long v16 = *(_OWORD *)v4;
          long long v17 = *((_OWORD *)v4 + 1);
          *((void *)v7 + 4) = *((void *)v4 + 4);
          *(_OWORD *)uint64_t v7 = v16;
          *((_OWORD *)v7 + 1) = v17;
        }
        v4 += 40;
        uint64_t v36 = v4;
        uint64_t v18 = v6;
LABEL_22:
        v7 += 40;
        if (v4 < v12)
        {
          uint64_t v6 = v18;
          if ((unint64_t)v18 < a3) {
            continue;
          }
        }
        uint64_t v37 = v7;
        goto LABEL_50;
      }
    }
    goto LABEL_50;
  }
LABEL_51:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A73439A0(uint64_t a1, uint64_t a2)
{
  return sub_1A7343BE8(a1, a2, &qword_1E96F1E08, (unint64_t *)&qword_1EB703C98, 0x1E4F179B0, (void (*)(unint64_t))sub_1A74E5358);
}

uint64_t sub_1A73439D0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1DC8);
    uint64_t v2 = sub_1A7573500();
    uint64_t v15 = v2;
    sub_1A75733C0();
    if (sub_1A7573440())
    {
      type metadata accessor for REMObjectID_Codable();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1A74E59E4(v9 + 1);
          uint64_t v2 = v15;
        }
        uint64_t result = sub_1A7573180();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (sub_1A7573440());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1A7343BB8(uint64_t a1, uint64_t a2)
{
  return sub_1A7343BE8(a1, a2, (uint64_t *)&unk_1E96F2460, (unint64_t *)&qword_1EB705BA8, 0x1E4F94BB8, (void (*)(unint64_t))sub_1A74E625C);
}

uint64_t sub_1A7343BE8(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v8 = sub_1A7573500();
    uint64_t v21 = v8;
    sub_1A75733C0();
    if (sub_1A7573440())
    {
      sub_1A72BEFEC(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v8 = v21;
        unint64_t v15 = *(void *)(v21 + 16);
        if (*(void *)(v21 + 24) <= v15)
        {
          a6(v15 + 1);
          uint64_t v8 = v21;
        }
        uint64_t result = sub_1A7573180();
        uint64_t v10 = v8 + 56;
        uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        if (((-1 << v12) & ~*(void *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*(void *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v16 = 0;
          unint64_t v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v18 = v13 == v17;
            if (v13 == v17) {
              unint64_t v13 = 0;
            }
            v16 |= v18;
            uint64_t v19 = *(void *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          unint64_t v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(void *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(void *)(*(void *)(v8 + 48) + 8 * v14) = v20;
        ++*(void *)(v8 + 16);
      }
      while (sub_1A7573440());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v8;
}

uint64_t sub_1A7343DEC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1DC0);
    uint64_t v2 = sub_1A7573500();
    uint64_t v14 = v2;
    sub_1A75733C0();
    if (sub_1A7573440())
    {
      type metadata accessor for RDVector();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1A74E6504();
          uint64_t v2 = v14;
        }
        sub_1A75740C0();
        sub_1A75740D0();
        uint64_t result = sub_1A7574110();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_1A7573440());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

unint64_t sub_1A7343FF8(uint64_t a1, uint64_t a2)
{
  sub_1A7573180();
  unint64_t result = sub_1A75733A0();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1A734407C(uint64_t a1, uint64_t a2)
{
  sub_1A75740C0();
  sub_1A75740D0();
  sub_1A7574110();
  unint64_t result = sub_1A75733A0();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1A7344120(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1DF0);
  uint64_t result = sub_1A75738F0();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    char v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t result = v16[1];
    BOOL v18 = (uint64_t *)(*(void *)(a1 + 56) + 24 * i);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = v18[2];
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    unint64_t v22 = (void *)(v3[6] + 16 * i);
    *unint64_t v22 = v17;
    v22[1] = result;
    uint64_t v23 = v3[7] + 32 * i;
    *(void *)uint64_t v23 = v19;
    *(void *)(v23 + 8) = v20;
    *(void *)(v23 + 16) = v21;
    *(unsigned char *)(v23 + 24) = 0;
    uint64_t v24 = v3[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v26;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for REMAnchoredBubbleModel()
{
  uint64_t result = qword_1EB7006C8;
  if (!qword_1EB7006C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A7344340(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1DE8);
  uint64_t result = sub_1A75738F0();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    char v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t result = v16[1];
    uint64_t v18 = *(void *)(a1 + 56) + 32 * i;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    char v22 = *(unsigned char *)(v18 + 24);
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v23 = (void *)(v3[6] + 16 * i);
    *uint64_t v23 = v17;
    v23[1] = result;
    uint64_t v24 = v3[7] + 40 * i;
    *(void *)uint64_t v24 = v19;
    *(void *)(v24 + 8) = v20;
    *(void *)(v24 + 16) = v21;
    *(unsigned char *)(v24 + 24) = v22;
    *(void *)(v24 + 32) = &type metadata for REMAnchoredBubbleModel.BubbleCategory;
    uint64_t v25 = v3[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v27;
    swift_bridgeObjectRetain();
    uint64_t result = sub_1A73455E0(v20, v21, v22);
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A7344534(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v26 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a2 + 56;
    v25[0] = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25[0] + 16 * v5);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      ++v5;
      sub_1A75740C0();
      swift_bridgeObjectRetain();
      sub_1A75726F0();
      uint64_t v9 = sub_1A7574110();
      uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
      {
        uint64_t v12 = *(void *)(v2 + 48);
        int64_t v13 = (void *)(v12 + 16 * v11);
        BOOL v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_1A7573DB0() & 1) != 0)
        {
          uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
          uint64_t v27 = v5;
LABEL_19:
          char v19 = *(unsigned char *)(v2 + 32);
          unint64_t v20 = (unint64_t)((1 << v19) + 63) >> 6;
          size_t v21 = 8 * v20;
          if ((v19 & 0x3Fu) < 0xE
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe);
            memcpy((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
            uint64_t v22 = sub_1A7344848((uint64_t)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v23 = (void *)swift_slowAlloc();
            memcpy(v23, (const void *)(v2 + 56), v21);
            uint64_t v22 = sub_1A7344848((uint64_t)v23, v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x1AD0CD330](v23, -1, -1);
          }
          return v22;
        }
        uint64_t v15 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v15;
          if (((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            break;
          }
          char v16 = (void *)(v12 + 16 * v11);
          BOOL v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_1A7573DB0() & 1) != 0)
          {
            uint64_t v27 = v5;
            uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

uint64_t sub_1A7344848(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  long long v30 = (unint64_t *)result;
  uint64_t v31 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_1A735F264(v30, a2, v31, a3);
  }
  uint64_t v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_29;
    }
    uint64_t v11 = v8 + 16 * v7;
    uint64_t v13 = *(void *)(v11 + 32);
    uint64_t v12 = *(void *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_1A75740C0();
    swift_bridgeObjectRetain();
    sub_1A75726F0();
    uint64_t v14 = sub_1A7574110();
    uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    uint64_t v18 = 1 << v16;
    if (((1 << v16) & *(void *)(v32 + 8 * (v16 >> 6))) == 0) {
      goto LABEL_4;
    }
    uint64_t v19 = *(void *)(a3 + 48);
    unint64_t v20 = (void *)(v19 + 16 * v16);
    BOOL v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_1A7573DB0() & 1) == 0)
    {
      uint64_t v24 = ~v15;
      for (unint64_t i = v16 + 1; ; unint64_t i = v26 + 1)
      {
        unint64_t v26 = i & v24;
        if (((*(void *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v19 + 16 * v26);
        BOOL v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_1A7573DB0() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v17 = v26 >> 6;
          uint64_t v18 = 1 << v26;
          goto LABEL_15;
        }
      }
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_15:
    unint64_t v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      uint64_t v23 = v31 - 1;
      if (__OFSUB__(v31, 1)) {
        goto LABEL_30;
      }
      --v31;
      if (!v23) {
        return MEMORY[0x1E4FBC870];
      }
    }
LABEL_5:
    uint64_t v8 = *a5;
    unint64_t v7 = a5[1];
    unint64_t v9 = *(void *)(*a5 + 16);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A7344A74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  if (!v6) {
    goto LABEL_7;
  }
LABEL_4:
  for (v6 &= v6 - 1; ; uint64_t v6 = (v14 - 1) & v14)
  {
    uint64_t v11 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    sub_1A733E438(v11, v23);
    uint64_t result = swift_bridgeObjectRelease();
    unsigned __int8 v12 = v24;
    if (v24 == 255)
    {
      if (v6) {
        goto LABEL_4;
      }
    }
    else
    {
      long long v21 = v23[1];
      long long v22 = v23[0];
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1A72ACE70(0, v10[2] + 1, 1, v10);
        uint64_t v10 = (void *)result;
      }
      unint64_t v16 = v10;
      unint64_t v17 = v10[2];
      uint64_t v18 = v16;
      unint64_t v19 = v16[3];
      if (v17 >= v19 >> 1)
      {
        uint64_t result = (uint64_t)sub_1A72ACE70((void *)(v19 > 1), v17 + 1, 1, v18);
        uint64_t v18 = (void *)result;
      }
      v18[2] = v17 + 1;
      unint64_t v20 = &v18[5 * v17];
      uint64_t v10 = v18;
      *((_OWORD *)v20 + 2) = v22;
      *((_OWORD *)v20 + 3) = v21;
      *((unsigned char *)v20 + 64) = v12;
      if (v6) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v7) {
      goto LABEL_29;
    }
    uint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_29;
      }
      uint64_t v14 = *(void *)(v3 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_29;
        }
        uint64_t v14 = *(void *)(v3 + 8 * v9);
        if (!v14)
        {
          int64_t v9 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_29;
          }
          uint64_t v14 = *(void *)(v3 + 8 * v9);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    ;
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v7)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v10;
  }
  uint64_t v14 = *(void *)(v3 + 8 * v15);
  if (v14)
  {
    int64_t v9 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_29;
    }
    uint64_t v14 = *(void *)(v3 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void *sub_1A7344CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = swift_bridgeObjectRetain() + 40;
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    swift_bridgeObjectRetain();
    sub_1A733E438(v3, v13);
    swift_bridgeObjectRelease();
    unsigned __int8 v7 = v14;
    if (v14 != 255)
    {
      long long v11 = v13[1];
      long long v12 = v13[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_1A72ACE70(0, v5[2] + 1, 1, v5);
      }
      unint64_t v9 = v5[2];
      unint64_t v8 = v5[3];
      if (v9 >= v8 >> 1) {
        uint64_t v5 = sub_1A72ACE70((void *)(v8 > 1), v9 + 1, 1, v5);
      }
      v5[2] = v9 + 1;
      uint64_t v6 = &v5[5 * v9];
      *((_OWORD *)v6 + 2) = v12;
      *((_OWORD *)v6 + 3) = v11;
      *((unsigned char *)v6 + 64) = v7;
    }
    v4 += 16;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A7344E08(uint64_t a1, void *a2)
{
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = 0x3FECCCCCCCCCCCCDLL;
  if (v3 >= 0x12C) {
    uint64_t v4 = 0;
  }
  uint64_t v31 = v4;
  if (v3 < 0x12C) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  char v30 = v5;
  if (v3)
  {
    id v7 = a2;
    swift_bridgeObjectRetain();
    uint64_t v8 = a1 + 56;
    unint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1A7572F40();
      if (v10)
      {
        uint64_t v11 = v10;
        *(void *)&long long v35 = v9;
        swift_bridgeObjectRetain();
        sub_1A72D0DC4(v11);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 += 40;
      --v3;
    }
    while (v3);

    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  id v12 = objc_msgSend(a2, sel_dimension);
  uint64_t v13 = v9[2];
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t)objc_msgSend(a2, sel_dimension);
  if (v14)
  {
    sub_1A752CAA8((uint64_t)v9, (uint64_t)v12, v13 / v14, &v33);
    REMMatrix.transpose()((uint64_t *)&v35);
    swift_release();
    uint64_t v33 = v31;
    char v34 = v30;
    uint64_t v24 = sub_1A752E758((uint64_t *)&v35, (uint64_t)&v33);
    if (qword_1EB700B30 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1A7571E90();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EB700B18);
    uint64_t v27 = sub_1A7571E80();
    os_log_type_t v28 = sub_1A7572FF0();
    if (os_log_type_enabled(v27, v28))
    {
      BOOL v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v29 = 0;
      _os_log_impl(&dword_1A72A1000, v27, v28, "REMAnchoredBubbleModel: pca fitted", v29, 2u);
      MEMORY[0x1AD0CD330](v29, -1, -1);
    }

    swift_release();
  }
  else
  {
    __break(1u);
    swift_once();
    uint64_t v15 = sub_1A7571E90();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB700B18);
    unint64_t v16 = v9;
    unint64_t v17 = v9;
    uint64_t v18 = sub_1A7571E80();
    os_log_type_t v19 = sub_1A7572FD0();
    if (os_log_type_enabled(v18, v19))
    {
      unint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(void *)&long long v35 = v21;
      *(_DWORD *)unint64_t v20 = 136315138;
      swift_getErrorValue();
      uint64_t v22 = Error.rem_errorDescription.getter(v32);
      uint64_t v33 = sub_1A72D1730(v22, v23, (uint64_t *)&v35);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A72A1000, v18, v19, "REMAnchoredBubbleModel: Skipping pca fitting due to %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v21, -1, -1);
      MEMORY[0x1AD0CD330](v20, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  return v24;
}

uint64_t sub_1A7345258(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1A733F538(a1, a2);
  if (v6 == 0xFF) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v7 = v4;
  if ((v6 & 1) == 0)
  {
    sub_1A734678C(v3, v4, v5, v6);
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1340);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A75785A0;
  *(void *)(v8 + 32) = v7;
  if (*(void *)(v2 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels))
  {
    uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels);
    if ((v7 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_1A7336FA0(v14);
  swift_bridgeObjectRelease();
  unint64_t v16 = sub_1A7341934(v15);
  swift_bridgeObjectRelease();
  unint64_t v17 = v16;
  swift_bridgeObjectRetain_n();
  sub_1A73418B0((uint64_t *)&v17, sub_1A74F9DF0, sub_1A7342378);
  swift_bridgeObjectRelease_n();
  uint64_t v9 = (uint64_t)v17;
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
LABEL_7:
  if (v7 < *(void *)(v9 + 16))
  {
    uint64_t v10 = v9 + 16 * v7;
    uint64_t v12 = *(void *)(v10 + 32);
    uint64_t v11 = *(void *)(v10 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 40) = v12;
    *(void *)(v8 + 48) = v11;
    *(_DWORD *)(v8 + 56) = 1065353216;
    return v8;
  }
LABEL_12:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1A73453D8()
{
  unint64_t result = qword_1E96F1D20;
  if (!qword_1E96F1D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1D20);
  }
  return result;
}

unint64_t sub_1A734542C()
{
  unint64_t result = qword_1E96F1D28;
  if (!qword_1E96F1D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1D28);
  }
  return result;
}

uint64_t sub_1A7345480()
{
  return sub_1A73454A8(&qword_1E96F1D40, &qword_1E96F1D48, (void (*)(void))sub_1A7345528);
}

uint64_t sub_1A73454A8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A7345528()
{
  unint64_t result = qword_1E96F1D50;
  if (!qword_1E96F1D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1D50);
  }
  return result;
}

uint64_t sub_1A734557C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A734558C()
{
  unint64_t result = qword_1E96F1D58;
  if (!qword_1E96F1D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1D58);
  }
  return result;
}

uint64_t sub_1A73455E0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A73455F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1A7345658(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 3:
    case 4:
    case 9:
      swift_bridgeObjectRetain();
      swift_retain();
      break;
    case 1:
    case 2:
    case 6:
    case 7:
      goto LABEL_6;
    case 5:
      swift_bridgeObjectRetain();
      id v5 = a2;
      break;
    case 8:
      swift_bridgeObjectRetain();
LABEL_6:
      swift_bridgeObjectRetain();
      break;
    default:
      return;
  }
}

void sub_1A7345758(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    sub_1A734576C(a1, a2, a3, a4, a5);
  }
}

void sub_1A734576C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 3:
    case 4:
    case 9:
      swift_bridgeObjectRelease();
      swift_release();
      break;
    case 1:
    case 2:
    case 6:
    case 7:
      goto LABEL_6;
    case 5:
      swift_bridgeObjectRelease();

      break;
    case 8:
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

unint64_t sub_1A734586C()
{
  unint64_t result = qword_1EB701410;
  if (!qword_1EB701410)
  {
    sub_1A7571BC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701410);
  }
  return result;
}

uint64_t sub_1A73458C4()
{
  return type metadata accessor for REMAnchoredBubbleModel();
}

void sub_1A73458CC()
{
  sub_1A7345B88();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for REMAnchoredBubbleModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMAnchoredBubbleModel);
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.predict(_:thresholds:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.predict(title:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.save(path:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.saveBubblesJson(fileUrl:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.labels.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.bubbleCount.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.wordDistanceScale.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.tooSingular.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.triggerWordsByList.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.predictWithLastToken(_:languageIdentifier:editingSessionID:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.increaseDistanceScale()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.reduceDistanceScale()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

void sub_1A7345B88()
{
  if (!qword_1EB704540)
  {
    sub_1A7571BC0();
    unint64_t v0 = sub_1A7573210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB704540);
    }
  }
}

uint64_t destroy for REMAnchoredBubbleModel.RadiusForBubbleCategory(uint64_t a1)
{
  return sub_1A734557C(*(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for REMAnchoredBubbleModel.RadiusForBubbleCategory(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_1A73455E0(v3, v4, v5);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for REMAnchoredBubbleModel.RadiusForBubbleCategory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_1A73455E0(v3, v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1A734557C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMAnchoredBubbleModel.RadiusForBubbleCategory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  char v3 = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = v3;
  sub_1A734557C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for REMAnchoredBubbleModel.RadiusForBubbleCategory()
{
  return &type metadata for REMAnchoredBubbleModel.RadiusForBubbleCategory;
}

void *assignWithCopy for REMAnchoredBubbleModel.ModelFileData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMAnchoredBubbleModel.ModelFileData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMAnchoredBubbleModel.ModelFileData()
{
  return &type metadata for REMAnchoredBubbleModel.ModelFileData;
}

unint64_t sub_1A7345E04()
{
  unint64_t result = qword_1E96F1D78;
  if (!qword_1E96F1D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1D78);
  }
  return result;
}

unint64_t sub_1A7345E58()
{
  unint64_t result = qword_1E96F1D80;
  if (!qword_1E96F1D80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F1D48);
    sub_1A7345ED4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1D80);
  }
  return result;
}

unint64_t sub_1A7345ED4()
{
  unint64_t result = qword_1E96F1D88;
  if (!qword_1E96F1D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1D88);
  }
  return result;
}

uint64_t sub_1A7345F28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737569646172 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953720684 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_1A7346004(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1D98);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7346690();
  sub_1A7574190();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v10) = 0;
    sub_1A7573A20();
    char v11 = 1;
    sub_1A73466E4();
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_1A73461D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636E6174736964 && a2 == 0xED0000656C616353 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1735287148 && a2 == 0xE400000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73656C62627562 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A73463A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1D90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7345E04();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_1A7573A00();
  uint64_t v11 = v10;
  char v24 = 1;
  swift_bridgeObjectRetain();
  sub_1A7573A20();
  uint64_t v13 = v12;
  char v23 = 2;
  v19[0] = sub_1A7573A00();
  uint64_t v15 = v14;
  v19[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1D48);
  char v21 = 3;
  sub_1A7345480();
  uint64_t v20 = v15;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v22;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v17 = v20;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v13;
  a2[3] = v19[0];
  a2[4] = v17;
  a2[5] = v16;
  return result;
}

unint64_t sub_1A7346690()
{
  unint64_t result = qword_1E96F1DA0;
  if (!qword_1E96F1DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1DA0);
  }
  return result;
}

unint64_t sub_1A73466E4()
{
  unint64_t result = qword_1E96F1DA8;
  if (!qword_1E96F1DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1DA8);
  }
  return result;
}

unint64_t sub_1A7346738()
{
  unint64_t result = qword_1E96F1DB8;
  if (!qword_1E96F1DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1DB8);
  }
  return result;
}

uint64_t sub_1A734678C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return sub_1A734557C(a2, a3, a4 & 1);
  }
  return result;
}

uint64_t sub_1A73467B0(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1A73467C4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A7340400(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void ***)(v3 + 56)) & 1;
}

uint64_t sub_1A7346804(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A734686C()
{
  unint64_t result = qword_1E96F1E00;
  if (!qword_1E96F1E00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F1DF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1E00);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for REMAnchoredBubbleModel.RadiusForBubbleCategory.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7346994);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMAnchoredBubbleModel.RadiusForBubbleCategory.CodingKeys()
{
  return &type metadata for REMAnchoredBubbleModel.RadiusForBubbleCategory.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for REMAnchoredBubbleModel.ModelFileData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7346A98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMAnchoredBubbleModel.ModelFileData.CodingKeys()
{
  return &type metadata for REMAnchoredBubbleModel.ModelFileData.CodingKeys;
}

uint64_t destroy for REMAnchoredBubbleModel.BubbleCategory(uint64_t a1)
{
  return sub_1A734557C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s19ReminderKitInternal22REMAnchoredBubbleModelC14BubbleCategoryOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1A73455E0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMAnchoredBubbleModel.BubbleCategory(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1A73455E0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A734557C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMAnchoredBubbleModel.BubbleCategory(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A734557C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for REMAnchoredBubbleModel.BubbleCategory()
{
  return &type metadata for REMAnchoredBubbleModel.BubbleCategory;
}

unint64_t sub_1A7346BE4()
{
  unint64_t result = qword_1E96F1E10;
  if (!qword_1E96F1E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1E10);
  }
  return result;
}

unint64_t sub_1A7346C3C()
{
  unint64_t result = qword_1E96F1E18;
  if (!qword_1E96F1E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1E18);
  }
  return result;
}

unint64_t sub_1A7346C94()
{
  unint64_t result = qword_1E96F1E20;
  if (!qword_1E96F1E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1E20);
  }
  return result;
}

unint64_t sub_1A7346CEC()
{
  unint64_t result = qword_1E96F1E28;
  if (!qword_1E96F1E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1E28);
  }
  return result;
}

unint64_t sub_1A7346D44()
{
  unint64_t result = qword_1E96F1E30;
  if (!qword_1E96F1E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1E30);
  }
  return result;
}

unint64_t sub_1A7346D9C()
{
  unint64_t result = qword_1E96F1E38;
  if (!qword_1E96F1E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1E38);
  }
  return result;
}

unint64_t sub_1A7346DF4()
{
  unint64_t result = qword_1E96F1E40;
  if (!qword_1E96F1E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1E40);
  }
  return result;
}

unint64_t sub_1A7346E48(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1DE8);
    uint64_t v2 = (void *)sub_1A7573920();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v11 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v11 >= v26) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v11);
  int64_t v13 = i + 1;
  if (!v12)
  {
    int64_t v13 = i + 2;
    if (i + 2 >= v26) {
      goto LABEL_32;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    if (!v12)
    {
      int64_t v13 = i + 3;
      if (i + 3 >= v26) {
        goto LABEL_32;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = i + 4;
        if (i + 4 >= v26) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v13);
        if (!v12)
        {
          int64_t v14 = i + 5;
          if (i + 5 < v26)
          {
            unint64_t v12 = *(void *)(v27 + 8 * v14);
            if (v12)
            {
              int64_t v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_36;
              }
              if (v13 >= v26) {
                break;
              }
              unint64_t v12 = *(void *)(v27 + 8 * v13);
              ++v14;
              if (v12) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1A72D99A4();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v12 - 1) & v12;
  unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; unint64_t v10 = v9 | (i << 6))
  {
    uint64_t v15 = (void *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v16 = v15[1];
    *(void *)&long long v28 = *v15;
    *((void *)&v28 + 1) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1DD0);
    swift_dynamicCast();
    long long v17 = v28;
    long long v32 = v29;
    long long v33 = v30;
    uint64_t v34 = v31;
    long long v28 = v29;
    long long v29 = v30;
    *(void *)&long long v30 = v31;
    unint64_t result = sub_1A72B2210(v17, *((uint64_t *)&v17 + 1));
    unint64_t v18 = result;
    if (v19)
    {
      char v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      _OWORD *v8 = v17;
      unint64_t result = sub_1A7348500((uint64_t)&v28, v2[7] + 40 * v18);
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v17;
    uint64_t v20 = v2[7] + 40 * result;
    long long v21 = v28;
    long long v22 = v29;
    *(void *)(v20 + 32) = v30;
    *(_OWORD *)uint64_t v20 = v21;
    *(_OWORD *)(v20 + 16) = v22;
    uint64_t v23 = v2[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_34;
    }
    v2[2] = v25;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A7347184(unint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1A7573400()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = MEMORY[0x1E4FBC868];
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v5 = ~v8;
    unint64_t v34 = a1 + 64;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a1 + 64);
    unint64_t v7 = a1;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11D8);
  uint64_t v3 = sub_1A7573920();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v4 = sub_1A75737F0();
  unint64_t v34 = 0;
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  unint64_t v7 = v4 | 0x8000000000000000;
LABEL_11:
  int64_t v33 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v11 = v3 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while ((v7 & 0x8000000000000000) != 0)
  {
    if (!sub_1A7573820()) {
      goto LABEL_45;
    }
    type metadata accessor for REMObjectID_Codable();
    swift_dynamicCast();
    type metadata accessor for REMList_Codable();
    swift_dynamicCast();
    unint64_t v18 = v35;
    char v19 = v36;
LABEL_36:
    uint64_t result = sub_1A7573180();
    uint64_t v26 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = 8 * v14;
    *(void *)(*(void *)(v3 + 48) + v15) = v18;
    *(void *)(*(void *)(v3 + 56) + v15) = v19;
    ++*(void *)(v3 + 16);
  }
  if (v6)
  {
    unint64_t v16 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v17 = v16 | (v13 << 6);
LABEL_35:
    unint64_t v18 = *(void **)(*(void *)(v7 + 48) + 8 * v17);
    long long v35 = v18;
    uint64_t v36 = *(void **)(*(void *)(v7 + 56) + 8 * v17);
    char v19 = v36;
    id v24 = v18;
    id v25 = v36;
    goto LABEL_36;
  }
  int64_t v20 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v20 >= v33) {
    goto LABEL_45;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v20);
  int64_t v22 = v13 + 1;
  if (v21) {
    goto LABEL_34;
  }
  int64_t v22 = v13 + 2;
  if (v13 + 2 >= v33) {
    goto LABEL_45;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21) {
    goto LABEL_34;
  }
  int64_t v22 = v13 + 3;
  if (v13 + 3 >= v33) {
    goto LABEL_45;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21) {
    goto LABEL_34;
  }
  int64_t v22 = v13 + 4;
  if (v13 + 4 >= v33) {
    goto LABEL_45;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21)
  {
LABEL_34:
    unint64_t v6 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v22 << 6);
    int64_t v13 = v22;
    goto LABEL_35;
  }
  int64_t v23 = v13 + 5;
  if (v13 + 5 >= v33)
  {
LABEL_45:
    swift_release();
    sub_1A72D99A4();
    return v3;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v13 + 5;
    goto LABEL_34;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v33) {
      goto LABEL_45;
    }
    unint64_t v21 = *(void *)(v34 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_34;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

void sub_1A7347540(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7054C8);
    unint64_t v2 = (void *)sub_1A7573920();
  }
  else
  {
    unint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v11 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v11 >= v27) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v28 + 8 * v11);
  int64_t v13 = i + 1;
  if (!v12)
  {
    int64_t v13 = i + 2;
    if (i + 2 >= v27) {
      goto LABEL_32;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v13);
    if (!v12)
    {
      int64_t v13 = i + 3;
      if (i + 3 >= v27) {
        goto LABEL_32;
      }
      unint64_t v12 = *(void *)(v28 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = i + 4;
        if (i + 4 >= v27) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v13);
        if (!v12)
        {
          int64_t v14 = i + 5;
          if (i + 5 < v27)
          {
            unint64_t v12 = *(void *)(v28 + 8 * v14);
            if (v12)
            {
              int64_t v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_36;
              }
              if (v13 >= v27) {
                break;
              }
              unint64_t v12 = *(void *)(v28 + 8 * v13);
              ++v14;
              if (v12) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1A72D99A4();
          return;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v12 - 1) & v12;
  unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; unint64_t v10 = v9 | (i << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    unint64_t v18 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    id v19 = v18;
    unint64_t v20 = sub_1A72B2210(v17, v16);
    unint64_t v21 = v20;
    if (v22)
    {
      unint64_t v7 = (uint64_t *)(v2[6] + 16 * v20);
      swift_bridgeObjectRelease();
      *unint64_t v7 = v17;
      v7[1] = v16;
      uint64_t v8 = v2[7];

      *(void *)(v8 + 8 * v21) = v19;
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    int64_t v23 = (uint64_t *)(v2[6] + 16 * v20);
    *int64_t v23 = v17;
    v23[1] = v16;
    *(void *)(v2[7] + 8 * v20) = v19;
    uint64_t v24 = v2[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_34;
    }
    v2[2] = v26;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t static REMListStableSortingDataView.fetchLists(store:objectIDs:)(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a1;
  uint64_t v42 = sub_1A7571BC0();
  uint64_t v4 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  unint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    uint64_t v7 = sub_1A7573400();
    unint64_t v8 = MEMORY[0x1E4FBC860];
    if (!v7)
    {
LABEL_19:
      uint64_t v33 = sub_1A72E72E8(v8);
      swift_bridgeObjectRelease();
      type metadata accessor for REMListStableSortingDataView.Invocation();
      id v34 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
      uint64_t v35 = v38;
      sub_1A72F5860((uint64_t)v34, v33, v43);
      swift_bridgeObjectRelease();

      if (!v2)
      {
        uint64_t v36 = (void *)v43[1];
        uint64_t v35 = sub_1A7347184(v43[0]);
        swift_bridgeObjectRelease();
      }
      return v35;
    }
    uint64_t v9 = v7;
    unint64_t v48 = MEMORY[0x1E4FBC860];
    sub_1A75736F0();
    uint64_t v45 = sub_1A75733B0();
    uint64_t v46 = v10;
    char v47 = 1;
    if ((v9 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
    __break(1u);
  }
  uint64_t v9 = *(void *)(a2 + 16);
  unint64_t v8 = MEMORY[0x1E4FBC860];
  if (!v9) {
    goto LABEL_19;
  }
  unint64_t v48 = MEMORY[0x1E4FBC860];
  sub_1A75736F0();
  uint64_t v45 = sub_1A7348124(a2);
  uint64_t v46 = v11;
  char v47 = v12 & 1;
LABEL_7:
  int64_t v13 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v14 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0) {
    uint64_t v14 = a2;
  }
  uint64_t v39 = v14;
  uint64_t v40 = a2;
  while (1)
  {
    while (1)
    {
      sub_1A7347ECC(v45, v46, v47, a2);
      uint64_t v24 = v23;
      BOOL v25 = (objc_class *)type metadata accessor for REMObjectID_Codable();
      id v26 = objc_allocWithZone(v25);
      id v27 = v24;
      id v28 = objc_msgSend(v27, sel_uuid);
      sub_1A7571BB0();

      char v29 = (void *)sub_1A7571B90();
      (*v13)(v6, v42);
      id v30 = objc_msgSend(v27, sel_entityName);
      if (!v30)
      {
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        id v30 = (id)sub_1A75725E0();
        a2 = v40;
        swift_bridgeObjectRelease();
      }
      v44.receiver = v26;
      v44.super_class = v25;
      objc_msgSendSuper2(&v44, sel_initWithUUID_entityName_, v29, v30);

      sub_1A75736C0();
      sub_1A7573700();
      sub_1A7573710();
      uint64_t result = sub_1A75736D0();
      if (v41) {
        break;
      }
      uint64_t v15 = v45;
      uint64_t v16 = v46;
      char v17 = v47;
      int64_t v18 = sub_1A7347DE8(v45, v46, v47, a2);
      uint64_t v20 = v19;
      char v22 = v21;
      sub_1A7326484(v15, v16, v17);
      uint64_t v45 = v18;
      uint64_t v46 = v20;
      a2 = v40;
      char v47 = v22 & 1;
      if (!--v9) {
        goto LABEL_18;
      }
    }
    if ((v47 & 1) == 0) {
      break;
    }
    if (sub_1A75733D0()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E48);
    uint64_t v32 = (void (*)(uint64_t *, void))sub_1A7572CB0();
    sub_1A7573460();
    v32(v43, 0);
    if (!--v9)
    {
LABEL_18:
      sub_1A7326484(v45, v46, v47);
      unint64_t v8 = v48;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t static REMListStableSortingDataView.Invocation.supportsSecureCoding.getter()
{
  return 1;
}

id REMListStableSortingDataView.Invocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMListStableSortingDataView.Invocation.init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMListStableSortingDataView.Invocation.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMListStableSortingDataView.Invocation.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id REMListStableSortingDataView.Invocation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t REMListStableSortingDataView.deinit()
{
  return v0;
}

uint64_t REMListStableSortingDataView.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

int64_t sub_1A7347DE8(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1A7347ECC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v7 = a4;
      }
      else {
        uint64_t v7 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x1AD0CB620](a1, a2, v7);
      sub_1A73484C0();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_1A75733E0() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1A75733F0();
  sub_1A73484C0();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v4 = v17;
  swift_unknownObjectRelease();
  uint64_t v8 = sub_1A7573180();
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v11 = sub_1A7573190();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v6 = (v6 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_26;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v14 = sub_1A7573190();
    }
    while ((v14 & 1) == 0);
  }

LABEL_20:
  uint64_t v15 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v16 = v15;
}

uint64_t sub_1A7348124(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1A73481AC(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for REMListStableSortingDataView.Invocation()
{
  return self;
}

uint64_t sub_1A7348224()
{
  return sub_1A73482C4((unint64_t *)&qword_1EB705B98, &qword_1EB705A50);
}

uint64_t sub_1A7348274()
{
  return sub_1A73482C4((unint64_t *)&qword_1EB7054B0, &qword_1EB704E40);
}

uint64_t sub_1A73482C4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB705B90);
    sub_1A734843C(a2, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A7348360()
{
  unint64_t result = qword_1E96F1E50;
  if (!qword_1E96F1E50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F1878);
    sub_1A734843C(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    sub_1A734843C(&qword_1EB705888, (void (*)(uint64_t))type metadata accessor for REMList_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1E50);
  }
  return result;
}

uint64_t sub_1A734843C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for REMListStableSortingDataView()
{
  return self;
}

uint64_t method lookup function for REMListStableSortingDataView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMListStableSortingDataView);
}

unint64_t sub_1A73484C0()
{
  unint64_t result = qword_1EB705BA8;
  if (!qword_1EB705BA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB705BA8);
  }
  return result;
}

uint64_t sub_1A7348500(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t REMMemberships.rem_baseForChecksum()()
{
  v14[1] = *(void **)MEMORY[0x1E4F143B8];
  id v2 = objc_msgSend(v0, sel_membershipByMemberIdentifier);
  sub_1A7571BC0();
  sub_1A734875C();
  sub_1A734879C();
  sub_1A75723F0();

  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_1A72D2088(v3);
  swift_bridgeObjectRelease();
  v14[0] = v4;
  sub_1A734881C(v14);
  if (v1)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    char v5 = v14[0];
    id v6 = v0;
    sub_1A734A4D8((uint64_t)v5, v6);
    swift_release();

    unint64_t v7 = (void *)MEMORY[0x1AD0CC790]();
    unint64_t v8 = self;
    uint64_t v9 = (void *)sub_1A7572A00();
    v14[0] = 0;
    id v10 = objc_msgSend(v8, sel_dataWithJSONObject_options_error_, v9, 0, v14);

    char v11 = v14[0];
    if (v10)
    {
      uint64_t v12 = (void *)sub_1A7571A20();
    }
    else
    {
      uint64_t v12 = v11;
      sub_1A7571850();

      swift_willThrow();
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  return result;
}

unint64_t sub_1A734875C()
{
  unint64_t result = qword_1E96F1BA8;
  if (!qword_1E96F1BA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E96F1BA8);
  }
  return result;
}

unint64_t sub_1A734879C()
{
  unint64_t result = qword_1EB701400;
  if (!qword_1EB701400)
  {
    sub_1A7571BC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701400);
  }
  return result;
}

uint64_t sub_1A73487F8()
{
  return REMMemberships.rem_baseForChecksum()();
}

uint64_t sub_1A734881C(void **a1)
{
  uint64_t v2 = *(void *)(sub_1A7571BC0() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1A74F9E2C(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_1A73488C4(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1A73488C4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A7571BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v153 = (char *)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v165 = (char *)&v145 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  v168 = (char *)&v145 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  v167 = (char *)&v145 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  char v148 = (char *)&v145 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v155 = (char *)&v145 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  unint64_t v151 = (char *)&v145 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v150 = (char *)&v145 - v20;
  v170 = a1;
  uint64_t v21 = a1[1];
  uint64_t result = sub_1A7573BB0();
  if (result >= v21)
  {
    if (v21 < 0) {
      goto LABEL_151;
    }
    if (v21) {
      return sub_1A73495CC(0, v21, 1, v170);
    }
    return result;
  }
  if (v21 >= 0) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 + 1;
  }
  if (v21 < -1) {
    goto LABEL_159;
  }
  uint64_t v146 = result;
  if (v21 < 2)
  {
    uint64_t v26 = v5;
    id v28 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v156 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v145 = MEMORY[0x1E4FBC860];
    if (v21 != 1)
    {
      unint64_t v30 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_117:
      if (v30 >= 2)
      {
        uint64_t v136 = *v170;
        do
        {
          unint64_t v137 = v30 - 2;
          if (v30 < 2) {
            goto LABEL_146;
          }
          if (!v136) {
            goto LABEL_158;
          }
          uint64_t v138 = v28;
          uint64_t v139 = v28 + 32;
          uint64_t v140 = *(void *)&v28[16 * v137 + 32];
          uint64_t v141 = *(void *)&v28[16 * v30 + 24];
          uint64_t v142 = v26;
          sub_1A7349914(v136 + *(void *)(v26 + 72) * v140, v136 + *(void *)(v26 + 72) * *(void *)&v139[16 * v30 - 16], v136 + *(void *)(v26 + 72) * v141, v156);
          if (v2) {
            break;
          }
          if (v141 < v140) {
            goto LABEL_147;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v138 = sub_1A74F9DDC((uint64_t)v138);
          }
          if (v137 >= *((void *)v138 + 2)) {
            goto LABEL_148;
          }
          int64_t v143 = &v138[16 * v137 + 32];
          *(void *)int64_t v143 = v140;
          *((void *)v143 + 1) = v141;
          unint64_t v144 = *((void *)v138 + 2);
          if (v30 > v144) {
            goto LABEL_149;
          }
          id v28 = v138;
          memmove(&v138[16 * v30 + 16], &v138[16 * v30 + 32], 16 * (v144 - v30));
          *((void *)v138 + 2) = v144 - 1;
          unint64_t v30 = v144 - 1;
          uint64_t v26 = v142;
        }
        while (v144 > 2);
      }
LABEL_128:
      swift_bridgeObjectRelease();
      *(void *)(v145 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v24 = v23 >> 1;
    uint64_t v25 = sub_1A7572A90();
    *(void *)(v25 + 16) = v24;
    uint64_t v26 = v5;
    unint64_t v27 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v145 = v25;
    unint64_t v156 = v25 + v27;
  }
  uint64_t v29 = 0;
  uint64_t v161 = v26 + 16;
  uint64_t v162 = (void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v166 = (char **)(v26 + 32);
  id v28 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v157 = v26;
  uint64_t v164 = v4;
  while (1)
  {
    uint64_t v31 = v29;
    uint64_t v32 = v29 + 1;
    uint64_t v154 = v29;
    if (v29 + 1 >= v21)
    {
      uint64_t v40 = v29 + 1;
      goto LABEL_69;
    }
    uint64_t v163 = v21;
    uint64_t v149 = v28;
    uint64_t v33 = *v170;
    uint64_t v34 = *(void *)(v26 + 72);
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    v35(v150, *v170 + v34 * v32, v4);
    uint64_t v158 = (char *)v33;
    uint64_t v169 = v34;
    v35(v151, v33 + v34 * v31, v4);
    uint64_t v36 = sub_1A7571B80();
    uint64_t v38 = v37;
    if (sub_1A7571B80() != v36) {
      goto LABEL_20;
    }
    if (v39 == v38) {
      LODWORD(v160) = 0;
    }
    else {
LABEL_20:
    }
      LODWORD(v160) = sub_1A7573DB0();
    unint64_t v41 = v148;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = *v162;
    uint64_t v43 = v164;
    (*v162)(v151, v164);
    v42(v150, v43);
    uint64_t v40 = v154 + 2;
    if (v154 + 2 >= v163)
    {
      uint64_t v55 = v157;
    }
    else
    {
      uint64_t v147 = v2;
      uint64_t v159 = v169 * v32;
      objc_super v44 = v158;
      uint64_t v45 = v169 * v40;
      while (1)
      {
        uint64_t v46 = v40;
        uint64_t v47 = v164;
        v35(v155, (uint64_t)&v44[v45], v164);
        v35(v41, (uint64_t)&v44[v159], v47);
        uint64_t v48 = sub_1A7571B80();
        uint64_t v50 = v49;
        if (sub_1A7571B80() == v48 && v51 == v50) {
          int v52 = 0;
        }
        else {
          int v52 = sub_1A7573DB0();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = v164;
        v42(v41, v164);
        v42(v155, v53);
        if ((v160 ^ v52)) {
          break;
        }
        uint64_t v40 = v46 + 1;
        v44 += v169;
        if (v163 == v46 + 1)
        {
          uint64_t v54 = v163;
          uint64_t v40 = v163;
          uint64_t v2 = v147;
          uint64_t v55 = v157;
          goto LABEL_33;
        }
      }
      uint64_t v2 = v147;
      uint64_t v55 = v157;
      uint64_t v40 = v46;
    }
    uint64_t v54 = v163;
LABEL_33:
    id v28 = v149;
    uint64_t v31 = v154;
    unint64_t v56 = v158;
    if ((v160 & 1) == 0) {
      break;
    }
    if (v40 < v154) {
      goto LABEL_152;
    }
    if (v154 >= v40) {
      break;
    }
    uint64_t v147 = v2;
    uint64_t v57 = 0;
    uint64_t v58 = v169 * (v40 - 1);
    uint64_t v59 = v40 * v169;
    uint64_t v60 = v154;
    uint64_t v61 = v154 * v169;
    do
    {
      if (v60 != v40 + v57 - 1)
      {
        if (!v56) {
          goto LABEL_157;
        }
        uint64_t v63 = &v56[v58];
        uint64_t v160 = *v166;
        ((void (*)(char *, char *, uint64_t))v160)(v153, &v56[v61], v164);
        if (v61 < v58 || &v56[v61] >= &v56[v59])
        {
          uint64_t v62 = v164;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v62 = v164;
          if (v61 != v58) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        ((void (*)(char *, char *, uint64_t))v160)(v63, v153, v62);
        uint64_t v55 = v157;
        unint64_t v56 = v158;
      }
      ++v60;
      --v57;
      v58 -= v169;
      v59 -= v169;
      v61 += v169;
    }
    while (v60 < v40 + v57);
    uint64_t v2 = v147;
    uint64_t v54 = v163;
    uint64_t v64 = v164;
    id v28 = v149;
    uint64_t v31 = v154;
    if (v40 < v163) {
      goto LABEL_49;
    }
LABEL_69:
    if (v40 < v31) {
      goto LABEL_145;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v28 = sub_1A74F9714(0, *((void *)v28 + 2) + 1, 1, v28);
    }
    unint64_t v85 = *((void *)v28 + 2);
    unint64_t v84 = *((void *)v28 + 3);
    unint64_t v30 = v85 + 1;
    uint64_t v26 = v157;
    uint64_t v163 = v40;
    if (v85 >= v84 >> 1)
    {
      uint64_t v135 = sub_1A74F9714((char *)(v84 > 1), v85 + 1, 1, v28);
      uint64_t v26 = v157;
      id v28 = v135;
    }
    *((void *)v28 + 2) = v30;
    BOOL v86 = v28 + 32;
    uint64_t v87 = &v28[16 * v85 + 32];
    uint64_t v88 = v163;
    *(void *)uint64_t v87 = v31;
    *((void *)v87 + 1) = v88;
    if (v85)
    {
      while (1)
      {
        unint64_t v89 = v30 - 1;
        if (v30 >= 4)
        {
          uint64_t v94 = &v86[16 * v30];
          uint64_t v95 = *((void *)v94 - 8);
          uint64_t v96 = *((void *)v94 - 7);
          BOOL v100 = __OFSUB__(v96, v95);
          uint64_t v97 = v96 - v95;
          if (v100) {
            goto LABEL_134;
          }
          uint64_t v99 = *((void *)v94 - 6);
          uint64_t v98 = *((void *)v94 - 5);
          BOOL v100 = __OFSUB__(v98, v99);
          uint64_t v92 = v98 - v99;
          char v93 = v100;
          if (v100) {
            goto LABEL_135;
          }
          unint64_t v101 = v30 - 2;
          uint64_t v102 = &v86[16 * v30 - 32];
          uint64_t v104 = *(void *)v102;
          uint64_t v103 = *((void *)v102 + 1);
          BOOL v100 = __OFSUB__(v103, v104);
          uint64_t v105 = v103 - v104;
          if (v100) {
            goto LABEL_137;
          }
          BOOL v100 = __OFADD__(v92, v105);
          uint64_t v106 = v92 + v105;
          if (v100) {
            goto LABEL_140;
          }
          if (v106 >= v97)
          {
            uint64_t v124 = &v86[16 * v89];
            uint64_t v126 = *(void *)v124;
            uint64_t v125 = *((void *)v124 + 1);
            BOOL v100 = __OFSUB__(v125, v126);
            uint64_t v127 = v125 - v126;
            if (v100) {
              goto LABEL_144;
            }
            BOOL v117 = v92 < v127;
            goto LABEL_106;
          }
        }
        else
        {
          if (v30 != 3)
          {
            uint64_t v118 = *((void *)v28 + 4);
            uint64_t v119 = *((void *)v28 + 5);
            BOOL v100 = __OFSUB__(v119, v118);
            uint64_t v111 = v119 - v118;
            char v112 = v100;
            goto LABEL_100;
          }
          uint64_t v91 = *((void *)v28 + 4);
          uint64_t v90 = *((void *)v28 + 5);
          BOOL v100 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          char v93 = v100;
        }
        if (v93) {
          goto LABEL_136;
        }
        unint64_t v101 = v30 - 2;
        unint64_t v107 = &v86[16 * v30 - 32];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v110 = __OFSUB__(v108, v109);
        uint64_t v111 = v108 - v109;
        char v112 = v110;
        if (v110) {
          goto LABEL_139;
        }
        uint64_t v113 = &v86[16 * v89];
        uint64_t v115 = *(void *)v113;
        uint64_t v114 = *((void *)v113 + 1);
        BOOL v100 = __OFSUB__(v114, v115);
        uint64_t v116 = v114 - v115;
        if (v100) {
          goto LABEL_142;
        }
        if (__OFADD__(v111, v116)) {
          goto LABEL_143;
        }
        if (v111 + v116 >= v92)
        {
          BOOL v117 = v92 < v116;
LABEL_106:
          if (v117) {
            unint64_t v89 = v101;
          }
          goto LABEL_108;
        }
LABEL_100:
        if (v112) {
          goto LABEL_138;
        }
        uint64_t v120 = &v86[16 * v89];
        uint64_t v122 = *(void *)v120;
        uint64_t v121 = *((void *)v120 + 1);
        BOOL v100 = __OFSUB__(v121, v122);
        uint64_t v123 = v121 - v122;
        if (v100) {
          goto LABEL_141;
        }
        if (v123 < v111) {
          goto LABEL_14;
        }
LABEL_108:
        unint64_t v128 = v89 - 1;
        if (v89 - 1 >= v30)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!*v170) {
          goto LABEL_156;
        }
        uint64_t v129 = v28;
        unint64_t v130 = &v86[16 * v128];
        uint64_t v131 = *(void *)v130;
        long long v132 = &v86[16 * v89];
        uint64_t v133 = *((void *)v132 + 1);
        sub_1A7349914(*v170 + *(void *)(v26 + 72) * *(void *)v130, *v170 + *(void *)(v26 + 72) * *(void *)v132, *v170 + *(void *)(v26 + 72) * v133, v156);
        if (v2) {
          goto LABEL_128;
        }
        if (v133 < v131) {
          goto LABEL_131;
        }
        if (v89 > *((void *)v129 + 2)) {
          goto LABEL_132;
        }
        *(void *)unint64_t v130 = v131;
        *(void *)&v86[16 * v128 + 8] = v133;
        unint64_t v134 = *((void *)v129 + 2);
        if (v89 >= v134) {
          goto LABEL_133;
        }
        id v28 = v129;
        unint64_t v30 = v134 - 1;
        memmove(&v86[16 * v89], v132 + 16, 16 * (v134 - 1 - v89));
        *((void *)v129 + 2) = v134 - 1;
        uint64_t v26 = v157;
        if (v134 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v30 = 1;
LABEL_14:
    uint64_t v21 = v170[1];
    uint64_t v29 = v163;
    uint64_t v4 = v164;
    if (v163 >= v21) {
      goto LABEL_117;
    }
  }
  uint64_t v64 = v164;
  if (v40 >= v54) {
    goto LABEL_69;
  }
LABEL_49:
  if (__OFSUB__(v40, v31)) {
    goto LABEL_150;
  }
  if (v40 - v31 >= v146) {
    goto LABEL_69;
  }
  if (__OFADD__(v31, v146)) {
    goto LABEL_153;
  }
  if (v31 + v146 >= v54) {
    uint64_t v65 = v54;
  }
  else {
    uint64_t v65 = v31 + v146;
  }
  if (v65 >= v31)
  {
    if (v40 != v65)
    {
      uint64_t v149 = v28;
      uint64_t v147 = v2;
      uint64_t v66 = *(void *)(v55 + 72);
      uint64_t v158 = *(char **)(v55 + 16);
      uint64_t v159 = v66;
      uint64_t v169 = v66 * (v40 - 1);
      uint64_t v67 = (char *)(v40 * v66);
      uint64_t v152 = v65;
      do
      {
        uint64_t v70 = 0;
        uint64_t v71 = v31;
        uint64_t v163 = v40;
        uint64_t v160 = v67;
        while (1)
        {
          uint64_t v72 = *v170;
          uint64_t v73 = (uint64_t)&v67[v70 + *v170];
          uint64_t v74 = v158;
          ((void (*)(char *, uint64_t, uint64_t))v158)(v167, v73, v64);
          ((void (*)(char *, uint64_t, uint64_t))v74)(v168, v169 + v70 + v72, v64);
          uint64_t v75 = sub_1A7571B80();
          uint64_t v77 = v76;
          if (sub_1A7571B80() == v75 && v78 == v77) {
            break;
          }
          char v79 = sub_1A7573DB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v80 = *v162;
          uint64_t v64 = v164;
          (*v162)(v168, v164);
          v80(v167, v64);
          if ((v79 & 1) == 0) {
            goto LABEL_59;
          }
          uint64_t v81 = *v170;
          uint64_t v67 = v160;
          if (!*v170) {
            goto LABEL_155;
          }
          uint64_t v82 = v81 + v169 + v70;
          uint64_t v83 = *v166;
          ((void (*)(char *, char *, uint64_t))*v166)(v165, &v160[v81 + v70], v64);
          swift_arrayInitWithTakeFrontToBack();
          ((void (*)(uint64_t, char *, uint64_t))v83)(v82, v165, v64);
          v70 -= v159;
          ++v71;
          uint64_t v69 = v163;
          if (v163 == v71) {
            goto LABEL_60;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v68 = *v162;
        uint64_t v64 = v164;
        (*v162)(v168, v164);
        v68(v167, v64);
LABEL_59:
        uint64_t v69 = v163;
        uint64_t v67 = v160;
LABEL_60:
        uint64_t v40 = v69 + 1;
        v169 += v159;
        v67 += v159;
        uint64_t v31 = v154;
      }
      while (v40 != v152);
      uint64_t v40 = v152;
      uint64_t v2 = v147;
      id v28 = v149;
    }
    goto LABEL_69;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A73495CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v46 = a4;
  uint64_t v34 = a1;
  uint64_t v6 = sub_1A7571BC0();
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  objc_super v44 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v48 = (char *)&v32 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v47 = (char *)&v32 - v13;
  uint64_t v42 = a3;
  uint64_t v33 = a2;
  if (a3 != a2)
  {
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v38 = v12 + 16;
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v35 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v36 = v6;
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v15 = v14 * (v42 - 1);
    uint64_t v39 = v14;
    uint64_t v16 = v14 * v42;
LABEL_6:
    uint64_t v18 = 0;
    uint64_t v19 = v34;
    uint64_t v40 = v16;
    uint64_t v41 = v15;
    while (1)
    {
      uint64_t v20 = *v46;
      uint64_t v45 = v16 + v18;
      uint64_t v21 = v16 + v18 + v20;
      char v22 = v37;
      v37(v47, v21, v6);
      v22(v48, v15 + v18 + v20, v6);
      uint64_t v23 = sub_1A7571B80();
      uint64_t v25 = v24;
      if (sub_1A7571B80() == v23 && v26 == v25)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v36;
        uint64_t v17 = *v35;
        (*v35)(v48, v36);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v17)(v47, v6);
        uint64_t v16 = v40;
        uint64_t v15 = v41;
LABEL_5:
        v15 += v39;
        v16 += v39;
        if (++v42 == v33) {
          return result;
        }
        goto LABEL_6;
      }
      char v27 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v36;
      id v28 = *v35;
      (*v35)(v48, v36);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v47, v6);
      uint64_t v16 = v40;
      uint64_t v15 = v41;
      if ((v27 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v29 = *v46;
      if (!*v46) {
        break;
      }
      uint64_t v30 = v29 + v41 + v18;
      uint64_t v31 = *v43;
      (*v43)(v44, v29 + v40 + v18, v6);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(v30, v44, v6);
      v18 -= v39;
      if (v42 == ++v19) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A7349914(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v66 = sub_1A7571BC0();
  uint64_t v8 = *(void *)(v66 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v66);
  uint64_t v64 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v63 = (char *)&v58 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v62 = (char *)&v58 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v58 - v15;
  uint64_t v65 = *(void *)(v17 + 72);
  if (!v65)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_69;
  }
  int64_t v18 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_70;
  }
  uint64_t v19 = (uint64_t)(a2 - a1) / v65;
  unint64_t v69 = a1;
  unint64_t v68 = a4;
  uint64_t v20 = v18 / v65;
  if (v19 >= v18 / v65)
  {
    if ((v20 & 0x8000000000000000) == 0)
    {
      uint64_t v22 = v20 * v65;
      if (a4 < a2 || a2 + v22 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v40 = a4 + v22;
      unint64_t v67 = a4 + v22;
      unint64_t v69 = a2;
      uint64_t v62 = (char *)a1;
      if (v22 >= 1 && a1 < a2)
      {
        uint64_t v42 = -v65;
        uint64_t v65 = *(void *)(v8 + 16);
        unint64_t v60 = a4;
        uint64_t v61 = v8 + 16;
        uint64_t v59 = (void (**)(char *, uint64_t))(v8 + 8);
        do
        {
          unint64_t v43 = a3;
          objc_super v44 = (void (*)(char *, unint64_t, uint64_t))v65;
          uint64_t v45 = v66;
          ((void (*)(char *, unint64_t, uint64_t))v65)(v63, v40 + v42, v66);
          unint64_t v46 = a2 + v42;
          v44(v64, a2 + v42, v45);
          uint64_t v47 = sub_1A7571B80();
          uint64_t v49 = v48;
          if (sub_1A7571B80() == v47 && v50 == v49) {
            char v51 = 0;
          }
          else {
            char v51 = sub_1A7573DB0();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v52 = v43 + v42;
          uint64_t v53 = *v59;
          uint64_t v54 = v66;
          (*v59)(v64, v66);
          v53(v63, v54);
          unint64_t v55 = v60;
          if (v51)
          {
            if (v43 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v69 += v42;
          }
          else
          {
            unint64_t v56 = v67;
            v67 += v42;
            if (v43 < v56 || v52 >= v56)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != v56)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v46 = a2;
          }
          unint64_t v40 = v67;
          if (v67 <= v55) {
            break;
          }
          a2 = v46;
          a3 = v43 + v42;
        }
        while (v46 > (unint64_t)v62);
      }
LABEL_67:
      sub_1A74F999C(&v69, &v68, (uint64_t *)&v67);
      return 1;
    }
  }
  else if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = v19 * v65;
    if (a4 < a1 || a1 + v21 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v64 = (char *)(a4 + v21);
    unint64_t v67 = a4 + v21;
    if (v21 >= 1 && a2 < a3)
    {
      uint64_t v63 = *(char **)(v8 + 16);
      uint64_t v61 = v8 + 16;
      uint64_t v24 = (void (**)(char *, uint64_t))(v8 + 8);
      while (1)
      {
        unint64_t v25 = a3;
        uint64_t v26 = v66;
        char v27 = (void (*)(char *, unint64_t, uint64_t))v63;
        ((void (*)(char *, unint64_t, uint64_t))v63)(v16, a2, v66);
        v27(v62, a4, v26);
        uint64_t v28 = sub_1A7571B80();
        uint64_t v30 = v29;
        if (sub_1A7571B80() == v28 && v31 == v30) {
          break;
        }
        char v34 = sub_1A7573DB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = *v24;
        uint64_t v36 = v66;
        (*v24)(v62, v66);
        v35(v16, v36);
        if ((v34 & 1) == 0) {
          goto LABEL_31;
        }
        unint64_t v37 = v69;
        unint64_t v38 = a2 + v65;
        if (v69 < a2 || v69 >= v38)
        {
          swift_arrayInitWithTakeFrontToBack();
          a3 = v25;
        }
        else
        {
          a3 = v25;
          if (v69 == a2) {
            unint64_t v37 = a2;
          }
          else {
            swift_arrayInitWithTakeBackToFront();
          }
        }
LABEL_37:
        unint64_t v69 = v37 + v65;
        a4 = v68;
        if (v68 < (unint64_t)v64)
        {
          a2 = v38;
          if (v38 < a3) {
            continue;
          }
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v32 = *v24;
      uint64_t v33 = v66;
      (*v24)(v62, v66);
      v32(v16, v33);
LABEL_31:
      unint64_t v37 = v69;
      unint64_t v39 = v68 + v65;
      if (v69 < v68 || v69 >= v39)
      {
        swift_arrayInitWithTakeFrontToBack();
        a3 = v25;
      }
      else
      {
        a3 = v25;
        if (v69 != v68) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v68 = v39;
      unint64_t v38 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

void *sub_1A7349FD4(uint64_t a1, void *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A7571BC0();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  unint64_t v38 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v36 = (char *)v35 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  v35[1] = v2;
  unint64_t v39 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v42 = v7;
  unint64_t v37 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v40 = "tingDataView_Invocation";
  uint64_t v43 = MEMORY[0x1E4FBC840] + 8;
  unint64_t v16 = 0x1F641A000;
  uint64_t v48 = a1;
  while (2)
  {
    uint64_t v18 = a1 + v14++;
    switch(*(unsigned char *)(v18 + 32))
    {
      case 1:
        id v20 = objc_msgSend(a2, sel_groupIdentifier);
        if (v20)
        {
          uint64_t v21 = v20;
          uint64_t v22 = v38;
          sub_1A7571BB0();

          uint64_t v23 = *v39;
          uint64_t v17 = (uint64_t)v42;
          uint64_t v24 = v22;
          unint64_t v16 = 0x1F641A000uLL;
          (*v39)(v42, v24, v8);
          (*v41)(v17, 0, 1, v8);
          if ((*v37)(v17, 1, v8) != 1)
          {
            unint64_t v25 = v36;
            v23(v36, (char *)v17, v8);
            uint64_t v47 = v8;
            boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v46);
            v23((char *)boxed_opaque_existential_0, v25, v8);
            uint64_t v44 = 0;
            goto LABEL_14;
          }
        }
        else
        {
          uint64_t v17 = (uint64_t)v42;
          (*v41)((uint64_t)v42, 1, 1, v8);
        }
        sub_1A72CB560(v17, &qword_1EB704C40);
        goto LABEL_5;
      case 2:
        id v27 = objc_msgSend(a2, sel_modifiedOn);
        uint64_t v47 = sub_1A7571B60();
        __swift_allocate_boxed_opaque_existential_0(v46);
        sub_1A7571B20();

        uint64_t v44 = 0;
        goto LABEL_14;
      case 3:
        if (([a2 (SEL)(v16 + 1457)] & 1) == 0) {
          goto LABEL_5;
        }
        unsigned __int8 v28 = [a2 (SEL)(v16 + 1457)];
        uint64_t v47 = MEMORY[0x1E4FBB390];
        LOBYTE(v46[0]) = v28;
        uint64_t v44 = 0;
LABEL_14:
        unint64_t v45 = 0xE000000000000000;
        sub_1A7572740();
        swift_bridgeObjectRelease();
        sub_1A7572740();
        sub_1A7573760();
        uint64_t v30 = v44;
        unint64_t v29 = v45;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v15 = sub_1A72AC148(0, v15[2] + 1, 1, v15);
        }
        unint64_t v32 = v15[2];
        unint64_t v31 = v15[3];
        if (v32 >= v31 >> 1) {
          uint64_t v15 = sub_1A72AC148((void *)(v31 > 1), v32 + 1, 1, v15);
        }
        v15[2] = v32 + 1;
        uint64_t v33 = &v15[2 * v32];
        v33[4] = v30;
        v33[5] = v29;
        a1 = v48;
        unint64_t v16 = 0x1F641A000;
LABEL_5:
        if (v13 != v14) {
          continue;
        }
        swift_bridgeObjectRelease();
        break;
      default:
        id v19 = objc_msgSend(a2, sel_memberIdentifier);
        uint64_t v47 = v8;
        __swift_allocate_boxed_opaque_existential_0(v46);
        sub_1A7571BB0();

        uint64_t v44 = 0;
        goto LABEL_14;
    }
    return v15;
  }
}

void *sub_1A734A4D8(uint64_t a1, void *a2)
{
  id v40 = a2;
  uint64_t v3 = sub_1A7571BC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v41 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v10 = v4 + 16;
    unint64_t v39 = v11;
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v36 = *(void *)(v10 + 56);
    unint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 32);
    char v34 = (void (**)(char *, uint64_t))(v10 - 8);
    uint64_t v35 = (void (**)(char *, char *, uint64_t))(v10 + 16);
    v32[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v38 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 40);
    v32[0] = (v10 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v14 = v41;
    uint64_t v42 = v6;
    while (1)
    {
      v39(v14, v12, v3);
      uint64_t v15 = *v38;
      (*v38)(v14, 0, 1, v3);
      if ((*v37)(v14, 1, v3) == 1) {
        break;
      }
      unint64_t v46 = v13;
      (*v35)(v6, v14, v3);
      id v16 = objc_msgSend(v40, sel_membershipByMemberIdentifier, v32[0]);
      sub_1A734875C();
      uint64_t v17 = (uint64_t)v6;
      sub_1A734879C();
      uint64_t v18 = sub_1A75723F0();

      if (*(void *)(v18 + 16) && (unint64_t v19 = sub_1A72B2464(v17), (v20 & 1) != 0))
      {
        id v21 = *(id *)(*(void *)(v18 + 56) + 8 * v19);
        swift_bridgeObjectRelease();
        id v22 = v21;
        uint64_t v23 = v33;
        uint64_t v24 = sub_1A7349FD4((uint64_t)&unk_1EFC8DCC0, v22);
        uint64_t v33 = v23;
        *(void *)&v45[0] = v24;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
        sub_1A72E3500();
        uint64_t v25 = sub_1A7572570();
        uint64_t v27 = v26;

        uint64_t v14 = v41;
        swift_bridgeObjectRelease();
        *((void *)&v44 + 1) = MEMORY[0x1E4FBB1A0];

        *(void *)&long long v43 = v25;
        *((void *)&v43 + 1) = v27;
      }
      else
      {
        swift_bridgeObjectRelease();
        long long v43 = 0u;
        long long v44 = 0u;
      }
      uint64_t v13 = v46;
      uint64_t v6 = v42;
      (*v34)(v42, v3);
      if (*((void *)&v44 + 1))
      {
        sub_1A72BEE44(&v43, v45);
        sub_1A72BEE44(v45, &v43);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_1A72AC8F0(0, v13[2] + 1, 1, v13);
        }
        unint64_t v29 = v13[2];
        unint64_t v28 = v13[3];
        if (v29 >= v28 >> 1) {
          uint64_t v13 = sub_1A72AC8F0((void *)(v28 > 1), v29 + 1, 1, v13);
        }
        _OWORD v13[2] = v29 + 1;
        sub_1A72BEE44(&v43, &v13[4 * v29 + 4]);
        uint64_t v14 = v41;
        uint64_t v6 = v42;
      }
      else
      {
        sub_1A72CB560((uint64_t)&v43, &qword_1EB705938);
      }
      v12 += v36;
      if (!--v9)
      {
        v15(v41, 1, 1, v3);
        break;
      }
    }
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    v30(v41, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t REMJSONType.associatedValueAsAny.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  if (*((unsigned char *)v1 + 8)) {
    uint64_t v4 = (uint64_t *)&unk_1EB7003E0;
  }
  else {
    uint64_t v4 = (uint64_t *)&unk_1E96F1E60;
  }
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(v4);
  *a1 = v3;

  return swift_bridgeObjectRetain();
}

void *REMJSONRepresentable.toJSONData()(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  (*(void (**)(uint64_t *__return_ptr))(a2 + 8))(&v13);
  if (!v2)
  {
    uint64_t v4 = v13;
    if (v14) {
      uint64_t v5 = (uint64_t *)&unk_1EB7003E0;
    }
    else {
      uint64_t v5 = (uint64_t *)&unk_1E96F1E60;
    }
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(v5);
    uint64_t v15 = v6;
    uint64_t v13 = v4;
    uint64_t v7 = (void *)MEMORY[0x1AD0CC790]();
    uint64_t v8 = self;
    __swift_project_boxed_opaque_existential_1(&v13, v6);
    id v12 = 0;
    id v9 = objc_msgSend(v8, sel_dataWithJSONObject_options_error_, sub_1A7573DA0(), 0, &v12);
    swift_unknownObjectRelease();
    id v10 = v12;
    if (v9)
    {
      uint64_t v3 = (void *)sub_1A7571A20();
    }
    else
    {
      uint64_t v3 = v10;
      sub_1A7571850();

      swift_willThrow();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
  }
  return v3;
}

void static REMJSONRepresentable.fromJSONData(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = (void *)MEMORY[0x1AD0CC790]();
  uint64_t v7 = self;
  uint64_t v8 = (void *)sub_1A7571A00();
  id v15 = 0;
  id v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 0, &v15);

  id v10 = v15;
  if (v9)
  {
    sub_1A7573330();
    swift_unknownObjectRelease();
    sub_1A72BEE98((uint64_t)v17, (uint64_t)&v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
    char v11 = swift_dynamicCast();
    if ((v11 & 1) != 0
      || (sub_1A72BEE98((uint64_t)v17, (uint64_t)&v15),
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7003E0),
          (swift_dynamicCast() & 1) != 0))
    {
      id v15 = v14;
      char v16 = v11 ^ 1;
      (*(void (**)(id *, uint64_t, uint64_t))(a4 + 16))(&v15, a3, a4);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A72EFD2C();
      swift_allocError();
      *(void *)uint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
      *(unsigned char *)(v13 + 16) = 3;
      swift_willThrow();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    id v12 = v10;
    sub_1A7571850();

    swift_willThrow();
  }
}

uint64_t sub_1A734AD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v10[2] = a2;
  void v9[2] = a3;
  v9[3] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7003E0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB7054F8);
  unint64_t v7 = sub_1A734C664();
  return sub_1A7320598((void (*)(char *, char *))sub_1A734C644, (uint64_t)v9, v5, a3, v6, v7, MEMORY[0x1E4FBC0F0], (uint64_t)v10);
}

uint64_t sub_1A734ADD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1A72BEE98(a1, (uint64_t)&v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
  char v9 = swift_dynamicCast();
  if ((v9 & 1) == 0)
  {
    sub_1A72BEE98(a1, (uint64_t)&v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7003E0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_1A72EFD2C();
      uint64_t v10 = swift_allocError();
      *(void *)uint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      *(unsigned char *)(v12 + 16) = 3;
      uint64_t result = swift_willThrow();
      goto LABEL_6;
    }
  }
  uint64_t v14 = v13;
  char v15 = v9 ^ 1;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a3 + 16))(&v14, a2, a3);
  uint64_t v10 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  if (v4) {
LABEL_6:
  }
    *a4 = v10;
  return result;
}

uint64_t Array<A>.toJSON()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v11[2] = a1;
  unint64_t v10[2] = a2;
  void v10[3] = a3;
  uint64_t v6 = sub_1A7572B30();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB7054F8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_1A7320598((void (*)(char *, char *))sub_1A734C088, (uint64_t)v10, v6, MEMORY[0x1E4FBC840] + 8, v7, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)v11);
  if (!v4)
  {
    *(void *)a4 = result;
    *(unsigned char *)(a4 + 8) = 1;
  }
  return result;
}

void *sub_1A734B000@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X3>, void *a4@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8))(&v10, a1, a2);
  if (v4)
  {
    *a3 = v4;
  }
  else
  {
    uint64_t v8 = v10;
    if (v11) {
      char v9 = &qword_1EB7003E0;
    }
    else {
      char v9 = &qword_1E96F1E60;
    }
    uint64_t result = (void *)__swift_instantiateConcreteTypeFromMangledName(v9);
    a4[3] = result;
    *a4 = v8;
  }
  return result;
}

uint64_t static Array<A>.fromJSON(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 8)) {
    return sub_1A734AD20(a2, *(void *)a1, a2, a3);
  }
  sub_1A72EFD2C();
  swift_allocError();
  *(void *)uint64_t v4 = 0;
  *(void *)(v4 + 8) = 0;
  *(unsigned char *)(v4 + 16) = 3;
  return swift_willThrow();
}

uint64_t sub_1A734B118()
{
  return sub_1A7572480();
}

uint64_t Dictionary<>.toJSON()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1A7572480();
  if (!v1)
  {
    *(void *)a1 = result;
    *(unsigned char *)(a1 + 8) = 0;
  }
  return result;
}

void *sub_1A734B1F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8))(&v8, a1, a2);
  if (!v3)
  {
    uint64_t v6 = v8;
    if (v9) {
      uint64_t v7 = &qword_1EB7003E0;
    }
    else {
      uint64_t v7 = &qword_1E96F1E60;
    }
    uint64_t result = (void *)__swift_instantiateConcreteTypeFromMangledName(v7);
    a3[3] = result;
    *a3 = v6;
  }
  return result;
}

uint64_t static Dictionary<>.fromJSON(_:)(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_1A72EFD2C();
    swift_allocError();
    *(void *)uint64_t v1 = 0;
    *(void *)(v1 + 8) = 0;
    *(unsigned char *)(v1 + 16) = 3;
    return swift_willThrow();
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    return sub_1A7572480();
  }
}

uint64_t sub_1A734B358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A72BEE98(a1, (uint64_t)&v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
  char v6 = swift_dynamicCast();
  if ((v6 & 1) != 0
    || (sub_1A72BEE98(a1, (uint64_t)&v9),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7003E0),
        (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v9 = v11;
    char v10 = v6 ^ 1;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(a3 + 16))(&v9, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A72EFD2C();
    swift_allocError();
    *(void *)uint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    *(unsigned char *)(v8 + 16) = 3;
    return swift_willThrow();
  }
}

uint64_t Dictionary<>.deserializeRequired<A>(key:valueType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (*(void *)(a4 + 16))
  {
    uint64_t v9 = *a3;
    uint64_t v10 = a3[1];
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1A72B2210(a1, a2);
    if (v12)
    {
      sub_1A72BEE98(*(void *)(a4 + 56) + 32 * v11, (uint64_t)&v16);
      swift_bridgeObjectRelease();
      if (*((void *)&v17 + 1))
      {
        sub_1A72BEE44(&v16, v18);
        *(void *)&long long v16 = v9;
        *((void *)&v16 + 1) = v10;
        uint64_t v13 = type metadata accessor for Dictionary<>.DeserializableValueType();
        sub_1A734B5EC((uint64_t)v18, a1, a2, v13, a5);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      }
    }
    else
    {
      long long v16 = 0u;
      long long v17 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  sub_1A72CB560((uint64_t)&v16, &qword_1EB705938);
  sub_1A72EFD2C();
  swift_allocError();
  *(void *)uint64_t v15 = a1;
  *(void *)(v15 + 8) = a2;
  *(unsigned char *)(v15 + 16) = 1;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_1A734B5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t v60 = a1;
  uint64_t v52 = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v49 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A7571BC0();
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v47 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A7571B60();
  uint64_t v48 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a4 + 16);
  uint64_t v15 = sub_1A7573210();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v47 - v18;
  uint64_t v53 = v14;
  uint64_t v20 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v17);
  id v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *v5;
  unint64_t v23 = v5[1];
  if (!(v23 >> 62))
  {
    sub_1A72BEE98(v60, (uint64_t)v58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7003E0);
    if (swift_dynamicCast())
    {
      uint64_t v29 = v54;
      sub_1A734AD20(v24, v57, v24, v23);
      uint64_t result = swift_bridgeObjectRelease();
      if (v29) {
        return result;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1EF0);
      uint64_t v27 = sub_1A7573750();
      swift_bridgeObjectRelease();
      unint64_t v28 = (uint64_t *)&unk_1E96F1F00;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
  if (v23 >> 62 != 1)
  {
    switch(v24)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 57:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
        __break(1u);
        JUMPOUT(0x1A734BD94);
      case 40:
        sub_1A72BEE98(v60, (uint64_t)v58);
        if (!swift_dynamicCast()) {
          goto LABEL_16;
        }
        sub_1A7571A40();
        uint64_t v59 = v11;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v58);
        uint64_t v43 = v48;
        (*(void (**)(uint64_t *, char *, uint64_t))(v48 + 16))(boxed_opaque_existential_0, v13, v11);
        throwingCast<A>(_:as:failureMessage:)((uint64_t)v58, v53, 0, 0, v53, v52);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v11);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      case 48:
        sub_1A72BEE98(v60, (uint64_t)v58);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_16;
        }
        uint64_t v39 = (uint64_t)v49;
        sub_1A7571B70();
        swift_bridgeObjectRelease();
        uint64_t v41 = v50;
        uint64_t v40 = v51;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v39, 1, v51) == 1)
        {
          sub_1A72CB560(v39, &qword_1EB704C40);
          goto LABEL_16;
        }
        unint64_t v45 = v47;
        (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v47, v39, v40);
        uint64_t v59 = v40;
        unint64_t v46 = __swift_allocate_boxed_opaque_existential_0(v58);
        (*(void (**)(uint64_t *, char *, uint64_t))(v41 + 16))(v46, v45, v40);
        throwingCast<A>(_:as:failureMessage:)((uint64_t)v58, v53, 0, 0, v53, v52);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v45, v40);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      case 64:
        sub_1A72BEE98(v60, (uint64_t)v58);
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
        if (!swift_dynamicCast()) {
          goto LABEL_16;
        }
        uint64_t v59 = v44;
        v58[0] = v57;
        uint64_t v31 = v52;
        uint64_t v30 = v53;
        uint64_t v32 = v53;
        goto LABEL_10;
      default:
        sub_1A72BEE98(v60, (uint64_t)v58);
        uint64_t v33 = v53;
        int v34 = swift_dynamicCast();
        uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
        if (v34)
        {
          v35(v19, 0, 1, v33);
          uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
          v36(v22, v19, v33);
          return ((uint64_t (*)(uint64_t, char *, uint64_t))v36)(v52, v22, v33);
        }
        v35(v19, 1, 1, v33);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
        break;
    }
    goto LABEL_16;
  }
  sub_1A72BEE98(v60, (uint64_t)v58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    sub_1A72EFD2C();
    swift_allocError();
    uint64_t v37 = v56;
    *(void *)uint64_t v38 = v55;
    *(void *)(v38 + 8) = v37;
    *(unsigned char *)(v38 + 16) = 2;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  v58[2] = v24;
  uint64_t v59 = v23 & 0x3FFFFFFFFFFFFFFFLL;
  uint64_t v25 = v54;
  sub_1A7572480();
  uint64_t result = swift_bridgeObjectRelease();
  if (v25) {
    return result;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1EF0);
  uint64_t v27 = sub_1A7573860();
  swift_bridgeObjectRelease();
  unint64_t v28 = (uint64_t *)&unk_1E96F1EF8;
LABEL_9:
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(v28);
  v58[0] = v27;
  uint64_t v31 = v52;
  uint64_t v30 = v53;
  uint64_t v32 = v53;
LABEL_10:
  throwingCast<A>(_:as:failureMessage:)((uint64_t)v58, v30, 0, 0, v32, v31);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
}

uint64_t Dictionary<>.deserializeOptional<A>(key:valueType:defaultValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  if (!*(void *)(a5 + 16))
  {
    long long v20 = 0u;
    long long v21 = 0u;
    goto LABEL_8;
  }
  uint64_t v13 = *a3;
  uint64_t v14 = a3[1];
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1A72B2210(a1, a2);
  if ((v16 & 1) == 0)
  {
    long long v20 = 0u;
    long long v21 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1A72BEE98(*(void *)(a5 + 56) + 32 * v15, (uint64_t)&v20);
  swift_bridgeObjectRelease();
  if (!*((void *)&v21 + 1))
  {
LABEL_8:
    sub_1A72CB560((uint64_t)&v20, &qword_1EB705938);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(a7, a4, a6);
  }
  sub_1A72BEE44(&v20, v22);
  sub_1A72BEE98((uint64_t)v22, (uint64_t)&v20);
  sub_1A734C0F8();
  if (swift_dynamicCast())
  {

LABEL_12:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(a7, a4, a6);
  }
  sub_1A72BEE98((uint64_t)v22, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705938);
  swift_dynamicCast();
  if (!*((void *)&v21 + 1)) {
    goto LABEL_12;
  }
  sub_1A72CB560((uint64_t)&v20, &qword_1EB705938);
  *(void *)&long long v20 = v13;
  *((void *)&v20 + 1) = v14;
  uint64_t v18 = type metadata accessor for Dictionary<>.DeserializableValueType();
  sub_1A734B5EC((uint64_t)v22, a1, a2, v18, a7);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

void *sub_1A734C088@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  return sub_1A734B000(*(void *)(v2 + 16), *(void *)(v2 + 24), a1, a2);
}

void *sub_1A734C0A8@<X0>(void *a1@<X8>)
{
  return sub_1A734B1F4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1A734C0C4(uint64_t a1)
{
  return sub_1A734B358(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for Dictionary<>.DeserializableValueType()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1A734C0F8()
{
  unint64_t result = qword_1E96F1E68[0];
  if (!qword_1E96F1E68[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1E96F1E68);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for REMJSONType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for REMJSONType()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for REMJSONType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMJSONType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMJSONType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMJSONType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A734C284(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1A734C28C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for REMJSONType()
{
  return &type metadata for REMJSONType;
}

uint64_t dispatch thunk of REMJSONRepresentable.toJSON()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static REMJSONRepresentable.fromJSON(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1A734C2FC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 1 <= 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for REMJSONDeserializationError(uint64_t a1)
{
  return sub_1A734C328(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1A734C328(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 1 <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19ReminderKitInternal27REMJSONDeserializationErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A734C2FC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMJSONDeserializationError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A734C2FC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A734C328(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMJSONDeserializationError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A734C328(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtendedDiff.Element(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtendedDiff.Element(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A734C4BC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1A734C4D4(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMJSONDeserializationError()
{
  return &type metadata for REMJSONDeserializationError;
}

uint64_t sub_1A734C4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

uint64_t sub_1A734C504(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 16382);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 50) >> 12) | (4
                                                           * ((*(void *)(a1 + 8) >> 50) & 0xC00 | ((*(void *)(a1 + 8) & 7) << 7) | (*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFD) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1A734C57C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFD)
  {
    *(void *)uint64_t result = a2 - 16382;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 8) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A734C5E8(void *a1)
{
  uint64_t v1 = a1[1] >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

uint64_t sub_1A734C604(uint64_t result)
{
  *(void *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_1A734C614(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *result &= 0xFFFFFFFFFFFFFF8uLL;
    result[1] = v2;
  }
  else
  {
    *uint64_t result = 8 * (a2 - 2);
    result[1] = 0x8000000000000000;
  }
  return result;
}

uint64_t sub_1A734C644(uint64_t a1, uint64_t *a2)
{
  return sub_1A734ADD0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_1A734C664()
{
  unint64_t result = qword_1E96F1F08;
  if (!qword_1E96F1F08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7003E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1F08);
  }
  return result;
}

uint64_t sub_1A734C6C4(uint64_t a1)
{
  return sub_1A734C0C4(a1);
}

uint64_t Sequence.unique<A>(by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1A75723C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v6, a3);
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  v18[7] = a6;
  v18[8] = a1;
  v18[9] = a2;
  v18[10] = &v19;
  uint64_t v16 = sub_1A75728F0();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1A734C82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *(void *)(a6 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  unint64_t v15 = (char *)v24 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)v24 - v17;
  v19(v16);
  if (!v6)
  {
    v24[1] = a4;
    swift_bridgeObjectRetain();
    int v21 = sub_1A7572CE0();
    swift_bridgeObjectRelease();
    int v25 = v21;
    if (v21)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v18, a6);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v18, a6);
      sub_1A7572CF0();
      sub_1A7572CC0();
      id v22 = *(void (**)(char *, uint64_t))(v9 + 8);
      v22(v15, a6);
      v22(v18, a6);
    }
    char v20 = v25 ^ 1;
  }
  return v20 & 1;
}

uint64_t sub_1A734CA18(uint64_t a1)
{
  return sub_1A734C82C(a1, v1[6], v1[7], v1[8], v1[2], v1[3]) & 1;
}

uint64_t Sequence<>.unique()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return Sequence.unique<A>(by:)((uint64_t)sub_1A734CAD0, (uint64_t)v8, a1, AssociatedTypeWitness, a2, a3);
}

uint64_t sub_1A734CAD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
}

uint64_t Sequence<>.mapToDict()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v40 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v32 - v5;
  uint64_t v7 = sub_1A7573210();
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v32 - v18;
  uint64_t v43 = sub_1A7572390();
  (*(void (**)(char *, unsigned int (*)(char *, uint64_t, uint64_t), uint64_t))(v14 + 16))(v16, v38, a1);
  sub_1A7572870();
  uint64_t v20 = v17;
  swift_getAssociatedConformanceWitness();
  sub_1A7573230();
  uint64_t v21 = v40;
  uint64_t v22 = v40 + 48;
  unint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
  if (v23(v13, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    uint64_t v36 = v39 + 8;
    uint64_t v37 = v24;
    int v34 = (void (**)(char *, void, uint64_t, uint64_t))(v21 + 56);
    uint64_t v35 = (void (**)(char *, char *, uint64_t))(v21 + 16);
    uint64_t v40 = v21 + 32;
    uint64_t v33 = (void (**)(char *, uint64_t))(v21 + 8);
    uint64_t v38 = v23;
    do
    {
      v37(v6, v13, AssociatedTypeWitness);
      uint64_t v25 = v22;
      uint64_t v26 = (*(uint64_t (**)(uint64_t))(v39 + 8))(AssociatedTypeWitness);
      uint64_t v27 = v19;
      uint64_t v28 = v20;
      uint64_t v30 = v29;
      (*v35)(v10, v6, AssociatedTypeWitness);
      (*v34)(v10, 0, 1, AssociatedTypeWitness);
      uint64_t v41 = v26;
      uint64_t v42 = v30;
      uint64_t v20 = v28;
      uint64_t v19 = v27;
      sub_1A75724A0();
      sub_1A75724E0();
      (*v33)(v6, AssociatedTypeWitness);
      sub_1A7573230();
      uint64_t v22 = v25;
    }
    while (v38(v13, 1, AssociatedTypeWitness) != 1);
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v20);
  return v43;
}

uint64_t REMTextMemberships.rem_baseForChecksum()()
{
  uint64_t v2 = v0;
  v26[3] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_memberships);
  sub_1A734D348();
  sub_1A75723F0();

  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1A72D21BC(v7);
  swift_bridgeObjectRelease();
  v26[0] = (uint64_t)v8;
  sub_1A734D878(v26);
  if (v1)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v26[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1A75785A0;
    v26[0] = 0;
    v26[1] = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    strcpy((char *)v26, "lastResetDate:");
    HIBYTE(v26[1]) = -18;
    id v11 = objc_msgSend(v0, sel_lastResetDate);
    if (v11)
    {
      uint64_t v12 = v11;
      sub_1A7571B20();

      uint64_t v13 = sub_1A7571B60();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 0, 1, v13);
    }
    else
    {
      uint64_t v14 = sub_1A7571B60();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 1, 1, v14);
    }
    sub_1A7572670();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    uint64_t v15 = v26[1];
    *(void *)(v10 + 32) = v26[0];
    *(void *)(v10 + 40) = v15;
    v26[2] = v10;
    id v16 = v2;
    uint64_t v17 = sub_1A734E480(v9, v16);
    swift_release();

    uint64_t v18 = sub_1A72D0C70((uint64_t)v17);
    uint64_t v19 = (void *)MEMORY[0x1AD0CC790](v18);
    uint64_t v20 = self;
    swift_bridgeObjectRetain();
    uint64_t v21 = (void *)sub_1A7572A00();
    swift_bridgeObjectRelease();
    v26[0] = 0;
    id v22 = objc_msgSend(v20, sel_dataWithJSONObject_options_error_, v21, 0, v26);

    id v23 = (id)v26[0];
    if (v22)
    {
      uint64_t v24 = (void *)sub_1A7571A20();
    }
    else
    {
      uint64_t v24 = v23;
      sub_1A7571850();

      swift_willThrow();
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v24;
  }
  return result;
}

unint64_t sub_1A734D348()
{
  unint64_t result = qword_1E96F1F10;
  if (!qword_1E96F1F10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E96F1F10);
  }
  return result;
}

void sub_1A734D388(id a1@<X1>, uint64_t *a2@<X0>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  id v6 = objc_msgSend(a1, sel_memberships);
  sub_1A734D348();
  uint64_t v7 = sub_1A75723F0();

  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1A72B2210(v5, v4);
    if (v9)
    {
      uint64_t v10 = *(void **)(*(void *)(v7 + 56) + 8 * v8);
      id v11 = v10;
    }
    else
    {
      uint64_t v10 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = v5;
  swift_bridgeObjectRetain();
  sub_1A7572740();
  if (v10)
  {
    id v12 = v10;
    sub_1A734E33C((uint64_t)&unk_1EFC8DCE8, v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    sub_1A72E3500();
    sub_1A7572570();

    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705490);
  sub_1A7572670();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();

  *a3 = v13;
  a3[1] = v4;
}

uint64_t sub_1A734D550()
{
  return REMTextMemberships.rem_baseForChecksum()();
}

uint64_t sub_1A734D574@<X0>(unsigned char *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  char v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v21 - v10;
  if (*a1)
  {
    id v12 = objc_msgSend(a2, sel_modifiedOn);
    v25[3] = sub_1A7571B60();
    __swift_allocate_boxed_opaque_existential_0(v25);
    sub_1A7571B20();
  }
  else
  {
    id v13 = objc_msgSend(a2, sel_identifier);
    if (v13)
    {
      uint64_t v14 = v13;
      sub_1A7571BB0();

      uint64_t v15 = sub_1A7571BC0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 0, 1, v15);
    }
    else
    {
      uint64_t v15 = sub_1A7571BC0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
    }
    sub_1A734E5D8((uint64_t)v9, (uint64_t)v11, &qword_1EB704C40);
    sub_1A7571BC0();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15) == 1)
    {
      sub_1A72CB560((uint64_t)v11, &qword_1EB704C40);
      long long v21 = 0u;
      long long v22 = 0u;
    }
    else
    {
      *((void *)&v22 + 1) = v15;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v21);
      (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_0, v11, v15);
    }
    sub_1A734E5D8((uint64_t)&v21, (uint64_t)v25, &qword_1EB705938);
  }
  uint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  sub_1A7335644((uint64_t)v25, (uint64_t)&v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705938);
  sub_1A7572670();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  uint64_t v18 = v23;
  unint64_t v19 = v24;
  uint64_t result = sub_1A72CB560((uint64_t)v25, &qword_1EB705938);
  *a3 = v18;
  a3[1] = v19;
  return result;
}

uint64_t sub_1A734D878(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A74F9DF0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1A734D8E4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A734D8E4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A7573BB0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1A734DFD0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      id v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1A734E0A0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1A74F9DDC((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          BOOL v100 = &v97[16 * v96 + 32];
          *(void *)BOOL v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1A7572A90();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  id v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (*v17 == v15 && v17[1] == v16)
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1A7573DB0();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    long long v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*v23 == *(v21 - 1) && v23[1] == *v21)
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1A7573DB0()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v11 = sub_1A74F9714(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      id v11 = sub_1A74F9714((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            char v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        unint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        unint64_t v85 = v11;
        BOOL v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1A734E0A0((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)BOOL v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        id v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        int v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = *(v38 - 2) == v35 && *(v38 - 1) == v36;
          if (v39 || (sub_1A7573DB0() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A734DFD0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    uint64_t v12 = v6;
    uint64_t v13 = (void *)v8;
    while (1)
    {
      uint64_t result = *(v13 - 2);
      BOOL v14 = result == v10 && *(v13 - 1) == v11;
      if (v14 || (uint64_t result = sub_1A7573DB0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v10 = *v13;
      uint64_t v11 = v13[1];
      *(_OWORD *)uint64_t v13 = *((_OWORD *)v13 - 1);
      *(v13 - 1) = v11;
      *(v13 - 2) = v10;
      v13 -= 2;
      if (v4 == ++v12) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A734E0A0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = v21 == *((void *)v17 - 2) && v22 == *((void *)v17 - 1);
          if (v23 || (sub_1A7573DB0() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    BOOL v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v4 == *(void *)v6 && *((void *)v4 + 1) == *((void *)v6 + 1);
        if (v15 || (sub_1A7573DB0() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_1A74F9810((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

void *sub_1A734E33C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    char v16 = *(unsigned char *)(a1 + v5 + 32);
    sub_1A734D574(&v16, a2, &v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    uint64_t v8 = v15;
    if (v15)
    {
      uint64_t v9 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_1A72AC148(0, v6[2] + 1, 1, v6);
      }
      unint64_t v11 = v6[2];
      unint64_t v10 = v6[3];
      if (v11 >= v10 >> 1) {
        uint64_t v6 = sub_1A72AC148((void *)(v10 > 1), v11 + 1, 1, v6);
      }
      uint64_t v6[2] = v11 + 1;
      uint64_t v7 = &v6[2 * v11];
      v7[4] = v9;
      v7[5] = v8;
    }
    ++v5;
  }
  while (v3 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

void *sub_1A734E480(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v5 = (uint64_t *)(v17 + 40);
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v8 = *v5;
    v16[0] = *(v5 - 1);
    v16[1] = v8;
    swift_bridgeObjectRetain();
    sub_1A734D388(a2, v16, &v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v15;
    if (v15)
    {
      uint64_t v10 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_1A72AC148(0, v6[2] + 1, 1, v6);
      }
      unint64_t v12 = v6[2];
      unint64_t v11 = v6[3];
      if (v12 >= v11 >> 1) {
        uint64_t v6 = sub_1A72AC148((void *)(v11 > 1), v12 + 1, 1, v6);
      }
      uint64_t v6[2] = v12 + 1;
      uint64_t v7 = &v6[2 * v12];
      v7[4] = v10;
      v7[5] = v9;
    }
    v5 += 2;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A734E5D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t CLAuthorizationStatus.description.getter()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1A734E724()
{
  return CLAuthorizationStatus.description.getter();
}

uint64_t CLAccuracyAuthorization.description.getter(uint64_t a1)
{
  uint64_t v1 = 0x6E776F6E6B6E75;
  if (a1 == 1) {
    uint64_t v1 = 0x4164656375646572;
  }
  if (a1) {
    return v1;
  }
  else {
    return 0x756363416C6C7566;
  }
}

uint64_t sub_1A734E798()
{
  uint64_t v1 = 0x6E776F6E6B6E75;
  if (*v0 == 1) {
    uint64_t v1 = 0x4164656375646572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x756363416C6C7566;
  }
}

uint64_t sub_1A734E808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A72BEE98(a1, (uint64_t)v16);
  uint64_t v11 = sub_1A7571B60();
  char v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  if (v12)
  {
    uint64_t v14 = *(void *)(v11 - 8);
    v13(v10, 0, 1, v11);
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v14 + 32))(a4, v10, v11);
  }
  else
  {
    v13(v10, 1, 1, v11);
    sub_1A72CB560((uint64_t)v10, &qword_1EB704C60);
    sub_1A72BEE98(a1, (uint64_t)v16);
    sub_1A74487D0((uint64_t)v16, a2, a3);
    sub_1A72CB560((uint64_t)v16, &qword_1EB705938);
    return swift_willThrow();
  }
}

uint64_t sub_1A734E9B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F20);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A72BEE98(a1, (uint64_t)v15);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  char v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  if (v12)
  {
    v13(v10, 0, 1, v11);
    return sub_1A734E5D8((uint64_t)v10, a4, &qword_1EB704C40);
  }
  else
  {
    v13(v10, 1, 1, v11);
    sub_1A72CB560((uint64_t)v10, &qword_1E96F1F20);
    sub_1A72BEE98(a1, (uint64_t)v15);
    sub_1A74487F0((uint64_t)v15, a2, a3);
    sub_1A72CB560((uint64_t)v15, &qword_1EB705938);
    return swift_willThrow();
  }
}

uint64_t sub_1A734EB44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if (!*(void *)(a5 + 16))
  {
    long long v14 = 0u;
    long long v15 = 0u;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1A72B2210(a1, a2);
  if ((v11 & 1) == 0)
  {
    long long v14 = 0u;
    long long v15 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1A72BEE98(*(void *)(a5 + 56) + 32 * v10, (uint64_t)&v14);
  swift_bridgeObjectRelease();
  if (!*((void *)&v15 + 1))
  {
LABEL_7:
    sub_1A72CB560((uint64_t)&v14, &qword_1EB705938);
    sub_1A72EFD2C();
    swift_allocError();
    *(void *)uint64_t v12 = a1;
    *(void *)(v12 + 8) = a2;
    *(unsigned char *)(v12 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return a2;
  }
  sub_1A72BEE44(&v14, v16);
  a2 = sub_1A734EDC0((uint64_t)v16, a1, a2, a3, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return a2;
}

uint64_t sub_1A734EC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  if (*(void *)(a5 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1A72B2210(a1, a2);
    if (v13)
    {
      sub_1A72BEE98(*(void *)(a5 + 56) + 32 * v12, (uint64_t)&v16);
      swift_bridgeObjectRelease();
      if (*((void *)&v17 + 1))
      {
        sub_1A72BEE44(&v16, v18);
        sub_1A734FEB4((uint64_t)v18, a1, a2, a3, a4, a6);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      }
    }
    else
    {
      long long v16 = 0u;
      long long v17 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  sub_1A72CB560((uint64_t)&v16, &qword_1EB705938);
  sub_1A72EFD2C();
  swift_allocError();
  *(void *)uint64_t v15 = a1;
  *(void *)(v15 + 8) = a2;
  *(unsigned char *)(v15 + 16) = 1;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_1A734EDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A7571BC0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  long long v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A7571B60();
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5 >> 62)
  {
    if (a5 >> 62 != 1)
    {
      switch(a4)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
        case 22:
        case 23:
        case 25:
        case 26:
        case 27:
        case 28:
        case 29:
        case 30:
        case 31:
        case 33:
        case 34:
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
        case 46:
        case 47:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 57:
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
        case 63:
          __break(1u);
          JUMPOUT(0x1A734F528);
        case 40:
          uint64_t v23 = v16;
          sub_1A72BEE98(a1, (uint64_t)v35);
          a1 = MEMORY[0x1E4FBC840] + 8;
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_24;
          }
          sub_1A7571A40();
          uint64_t v36 = v15;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v35);
          (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 16))(boxed_opaque_existential_0, v18, v15);
          sub_1A72BEE98((uint64_t)v35, (uint64_t)v34);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F28);
          if (swift_dynamicCast())
          {
            a1 = v37;
          }
          else
          {
            sub_1A72BEE98((uint64_t)v35, (uint64_t)v34);
            sub_1A7447A88((uint64_t)v34, 0, 0);
            sub_1A72CB560((uint64_t)v34, &qword_1EB705938);
            swift_willThrow();
          }
          (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v15);
          goto LABEL_27;
        case 48:
          sub_1A72BEE98(a1, (uint64_t)v35);
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_24;
          }
          a1 = v34[1];
          sub_1A7571B70();
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
          {
            sub_1A72CB560((uint64_t)v10, &qword_1EB704C40);
            goto LABEL_24;
          }
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
          uint64_t v36 = v11;
          uint64_t v29 = __swift_allocate_boxed_opaque_existential_0(v35);
          (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(v29, v14, v11);
          sub_1A72BEE98((uint64_t)v35, (uint64_t)v34);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F28);
          if (swift_dynamicCast())
          {
            a1 = v37;
          }
          else
          {
            sub_1A72BEE98((uint64_t)v35, (uint64_t)v34);
            sub_1A7447A88((uint64_t)v34, 0, 0);
            sub_1A72CB560((uint64_t)v34, &qword_1EB705938);
            swift_willThrow();
          }
          (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
          break;
        case 64:
          sub_1A72BEE98(a1, (uint64_t)v35);
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
          a1 = MEMORY[0x1E4FBC840] + 8;
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_24;
          }
          uint64_t v36 = v25;
          v35[0] = v34[0];
          sub_1A72BEE98((uint64_t)v35, (uint64_t)v34);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F28);
          if (!swift_dynamicCast()) {
            goto LABEL_26;
          }
          a1 = v37;
          goto LABEL_27;
        default:
          sub_1A72BEE98(a1, (uint64_t)v35);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F28);
          if (!swift_dynamicCast()) {
            goto LABEL_24;
          }
          return v34[0];
      }
      goto LABEL_27;
    }
    sub_1A72BEE98(a1, (uint64_t)v35);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
    if (swift_dynamicCast())
    {
      uint64_t v19 = v31;
      a1 = sub_1A734B118();
      swift_bridgeObjectRelease();
      if (!v19)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1EF0);
        uint64_t v20 = sub_1A7573860();
        swift_bridgeObjectRelease();
        uint64_t v21 = (uint64_t *)&unk_1E96F1EF8;
LABEL_9:
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(v21);
        v35[0] = v20;
        sub_1A72BEE98((uint64_t)v35, (uint64_t)v34);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F28);
        if (swift_dynamicCast())
        {
          a1 = v37;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
          return a1;
        }
LABEL_26:
        sub_1A72BEE98((uint64_t)v35, (uint64_t)v34);
        sub_1A7447A88((uint64_t)v34, 0, 0);
        sub_1A72CB560((uint64_t)v34, &qword_1EB705938);
        swift_willThrow();
LABEL_27:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
        return a1;
      }
      return a1;
    }
LABEL_24:
    sub_1A72EFD2C();
    swift_allocError();
    uint64_t v26 = v33;
    *(void *)uint64_t v27 = v32;
    *(void *)(v27 + 8) = v26;
    *(unsigned char *)(v27 + 16) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return a1;
  }
  sub_1A72BEE98(a1, (uint64_t)v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7003E0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v22 = v31;
  a1 = sub_1A734AD20(a4, v34[0], a4, a5);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1EF0);
    uint64_t v20 = sub_1A7573750();
    swift_bridgeObjectRelease();
    uint64_t v21 = (uint64_t *)&unk_1E96F1F00;
    goto LABEL_9;
  }
  return a1;
}

uint64_t sub_1A734F62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v31 = a2;
  uint64_t v36 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A7571BC0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  long long v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A7571B60();
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5 >> 62)
  {
    if (a5 >> 62 != 1)
    {
      switch(a4)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
        case 22:
        case 23:
        case 25:
        case 26:
        case 27:
        case 28:
        case 29:
        case 30:
        case 31:
        case 33:
        case 34:
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
        case 46:
        case 47:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 57:
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
        case 63:
          __break(1u);
          JUMPOUT(0x1A734FDB0);
        case 40:
          uint64_t v23 = v16;
          sub_1A72BEE98(a1, (uint64_t)v34);
          a1 = MEMORY[0x1E4FBC840] + 8;
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_24;
          }
          sub_1A7571A40();
          uint64_t v35 = v15;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v34);
          (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 16))(boxed_opaque_existential_0, v18, v15);
          sub_1A72BEE98((uint64_t)v34, (uint64_t)v33);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F18);
          if (swift_dynamicCast())
          {
            a1 = v32;
          }
          else
          {
            sub_1A72BEE98((uint64_t)v34, (uint64_t)v33);
            sub_1A74487BC((uint64_t)v33, 0, 0);
            sub_1A72CB560((uint64_t)v33, &qword_1EB705938);
            swift_willThrow();
          }
          (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v15);
          goto LABEL_27;
        case 48:
          sub_1A72BEE98(a1, (uint64_t)v34);
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_24;
          }
          a1 = v33[1];
          sub_1A7571B70();
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
          {
            sub_1A72CB560((uint64_t)v10, &qword_1EB704C40);
            goto LABEL_24;
          }
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
          uint64_t v35 = v11;
          uint64_t v29 = __swift_allocate_boxed_opaque_existential_0(v34);
          (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(v29, v14, v11);
          sub_1A72BEE98((uint64_t)v34, (uint64_t)v33);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F18);
          if (swift_dynamicCast())
          {
            a1 = v32;
          }
          else
          {
            sub_1A72BEE98((uint64_t)v34, (uint64_t)v33);
            sub_1A74487BC((uint64_t)v33, 0, 0);
            sub_1A72CB560((uint64_t)v33, &qword_1EB705938);
            swift_willThrow();
          }
          (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
          break;
        case 64:
          sub_1A72BEE98(a1, (uint64_t)v34);
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
          a1 = MEMORY[0x1E4FBC840] + 8;
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_24;
          }
          uint64_t v35 = v25;
          v34[0] = v33[0];
          sub_1A72BEE98((uint64_t)v34, (uint64_t)v33);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F18);
          if (!swift_dynamicCast()) {
            goto LABEL_26;
          }
          a1 = v32;
          goto LABEL_27;
        default:
          sub_1A72BEE98(a1, (uint64_t)v34);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F18);
          if (!swift_dynamicCast()) {
            goto LABEL_24;
          }
          return v33[0];
      }
      goto LABEL_27;
    }
    sub_1A72BEE98(a1, (uint64_t)v34);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
    if (swift_dynamicCast())
    {
      uint64_t v19 = v30;
      a1 = sub_1A734B118();
      swift_bridgeObjectRelease();
      if (!v19)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1EF0);
        uint64_t v20 = sub_1A7573860();
        swift_bridgeObjectRelease();
        uint64_t v21 = (uint64_t *)&unk_1E96F1EF8;
LABEL_9:
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(v21);
        v34[0] = v20;
        sub_1A72BEE98((uint64_t)v34, (uint64_t)v33);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F18);
        if (swift_dynamicCast())
        {
          a1 = v32;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
          return a1;
        }
LABEL_26:
        sub_1A72BEE98((uint64_t)v34, (uint64_t)v33);
        sub_1A74487BC((uint64_t)v33, 0, 0);
        sub_1A72CB560((uint64_t)v33, &qword_1EB705938);
        swift_willThrow();
LABEL_27:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
        return a1;
      }
      return a1;
    }
LABEL_24:
    sub_1A72EFD2C();
    swift_allocError();
    uint64_t v26 = v36;
    *(void *)uint64_t v27 = v31;
    *(void *)(v27 + 8) = v26;
    *(unsigned char *)(v27 + 16) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return a1;
  }
  sub_1A72BEE98(a1, (uint64_t)v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7003E0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v22 = v30;
  a1 = sub_1A734AD20(a4, v33[0], a4, a5);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1EF0);
    uint64_t v20 = sub_1A7573750();
    swift_bridgeObjectRelease();
    uint64_t v21 = (uint64_t *)&unk_1E96F1F00;
    goto LABEL_9;
  }
  return a1;
}

uint64_t sub_1A734FEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v52 = a4;
  uint64_t v48 = a3;
  uint64_t v45 = a6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A7571BC0();
  uint64_t v44 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1A7571B60();
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v43 - v22;
  if (!(a5 >> 62))
  {
    sub_1A72BEE98(a1, (uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7003E0);
    if (swift_dynamicCast())
    {
      uint64_t v28 = v46;
      sub_1A734AD20(v52, v49, v52, a5);
      uint64_t result = swift_bridgeObjectRelease();
      if (v28) {
        return result;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1EF0);
      uint64_t v26 = sub_1A7573750();
      swift_bridgeObjectRelease();
      uint64_t v27 = (uint64_t *)&unk_1E96F1F00;
      goto LABEL_9;
    }
    goto LABEL_17;
  }
  if (a5 >> 62 != 1)
  {
    switch(v52)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 57:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
        __break(1u);
        JUMPOUT(0x1A7350580);
      case 40:
        uint64_t v39 = v21;
        sub_1A72BEE98(a1, (uint64_t)v50);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_17;
        }
        sub_1A7571A40();
        uint64_t v51 = v17;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v50);
        (*(void (**)(uint64_t *, char *, uint64_t))(v39 + 16))(boxed_opaque_existential_0, v20, v17);
        sub_1A734E808((uint64_t)v50, 0, 0, v45);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v17);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      case 48:
        sub_1A72BEE98(a1, (uint64_t)v50);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_17;
        }
        sub_1A7571B70();
        swift_bridgeObjectRelease();
        uint64_t v38 = v44;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v10, 1, v11) == 1)
        {
          int v34 = &qword_1EB704C40;
          uint64_t v35 = (uint64_t)v10;
          goto LABEL_16;
        }
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v13, v10, v11);
        uint64_t v51 = v11;
        uint64_t v42 = __swift_allocate_boxed_opaque_existential_0(v50);
        (*(void (**)(uint64_t *, char *, uint64_t))(v38 + 16))(v42, v13, v11);
        sub_1A734E808((uint64_t)v50, 0, 0, v45);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v11);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      case 64:
        sub_1A72BEE98(a1, (uint64_t)v50);
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_17;
        }
        uint64_t v51 = v41;
        v50[0] = v49;
        uint64_t v29 = v45;
        goto LABEL_10;
      default:
        uint64_t v30 = v21;
        sub_1A72BEE98(a1, (uint64_t)v50);
        int v31 = swift_dynamicCast();
        uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
        if (v31)
        {
          v32(v16, 0, 1, v17);
          uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
          v33(v23, v16, v17);
          return ((uint64_t (*)(uint64_t, char *, uint64_t))v33)(v45, v23, v17);
        }
        v32(v16, 1, 1, v17);
        int v34 = &qword_1EB704C60;
        uint64_t v35 = (uint64_t)v16;
LABEL_16:
        sub_1A72CB560(v35, v34);
        break;
    }
    goto LABEL_17;
  }
  sub_1A72BEE98(a1, (uint64_t)v50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    sub_1A72EFD2C();
    swift_allocError();
    uint64_t v36 = v48;
    *(void *)uint64_t v37 = v47;
    *(void *)(v37 + 8) = v36;
    *(unsigned char *)(v37 + 16) = 2;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  uint64_t v24 = v46;
  sub_1A734B118();
  uint64_t result = swift_bridgeObjectRelease();
  if (v24) {
    return result;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1EF0);
  uint64_t v26 = sub_1A7573860();
  swift_bridgeObjectRelease();
  uint64_t v27 = (uint64_t *)&unk_1E96F1EF8;
LABEL_9:
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(v27);
  v50[0] = v26;
  uint64_t v29 = v45;
LABEL_10:
  sub_1A734E808((uint64_t)v50, 0, 0, v29);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
}

uint64_t sub_1A7350684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v53 = a4;
  uint64_t v49 = a3;
  uint64_t v46 = a6;
  uint64_t v8 = sub_1A7571BC0();
  uint64_t v44 = *(void *)(v8 - 8);
  uint64_t v45 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v42 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A7571B60();
  uint64_t v43 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F20);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v42 - v21;
  if (!(a5 >> 62))
  {
    sub_1A72BEE98(a1, (uint64_t)v51);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7003E0);
    if (swift_dynamicCast())
    {
      uint64_t v27 = v47;
      sub_1A734AD20(v53, v50, v53, a5);
      uint64_t result = swift_bridgeObjectRelease();
      if (v27) {
        return result;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1EF0);
      uint64_t v25 = sub_1A7573750();
      swift_bridgeObjectRelease();
      uint64_t v26 = (uint64_t *)&unk_1E96F1F00;
      goto LABEL_9;
    }
    goto LABEL_17;
  }
  if (a5 >> 62 != 1)
  {
    switch(v53)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 57:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
        __break(1u);
        JUMPOUT(0x1A7350D70);
      case 40:
        sub_1A72BEE98(a1, (uint64_t)v51);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_17;
        }
        sub_1A7571A40();
        uint64_t v52 = v10;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v51);
        uint64_t v38 = v43;
        (*(void (**)(uint64_t *, char *, uint64_t))(v43 + 16))(boxed_opaque_existential_0, v12, v10);
        sub_1A734E9B4((uint64_t)v51, 0, 0, v46);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v10);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
      case 48:
        sub_1A72BEE98(a1, (uint64_t)v51);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_17;
        }
        sub_1A7571B70();
        swift_bridgeObjectRelease();
        uint64_t v36 = v44;
        uint64_t v35 = v45;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v20, 1, v45) == 1)
        {
          int v31 = &qword_1EB704C40;
          uint64_t v32 = (uint64_t)v20;
          goto LABEL_16;
        }
        unint64_t v40 = v42;
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v42, v20, v35);
        uint64_t v52 = v35;
        uint64_t v41 = __swift_allocate_boxed_opaque_existential_0(v51);
        (*(void (**)(uint64_t *, char *, uint64_t))(v36 + 16))(v41, v40, v35);
        sub_1A734E9B4((uint64_t)v51, 0, 0, v46);
        (*(void (**)(char *, uint64_t))(v36 + 8))(v40, v35);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
      case 64:
        sub_1A72BEE98(a1, (uint64_t)v51);
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_17;
        }
        uint64_t v52 = v39;
        v51[0] = v50;
        uint64_t v28 = v46;
        goto LABEL_10;
      default:
        sub_1A72BEE98(a1, (uint64_t)v51);
        int v29 = swift_dynamicCast();
        uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
        if (v29)
        {
          v30(v15, 0, 1, v16);
          sub_1A734E5D8((uint64_t)v15, (uint64_t)v22, &qword_1EB704C40);
          return sub_1A734E5D8((uint64_t)v22, v46, &qword_1EB704C40);
        }
        v30(v15, 1, 1, v16);
        int v31 = &qword_1E96F1F20;
        uint64_t v32 = (uint64_t)v15;
LABEL_16:
        sub_1A72CB560(v32, v31);
        break;
    }
    goto LABEL_17;
  }
  sub_1A72BEE98(a1, (uint64_t)v51);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    sub_1A72EFD2C();
    swift_allocError();
    uint64_t v33 = v49;
    *(void *)uint64_t v34 = v48;
    *(void *)(v34 + 8) = v33;
    *(unsigned char *)(v34 + 16) = 2;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  uint64_t v23 = v47;
  sub_1A734B118();
  uint64_t result = swift_bridgeObjectRelease();
  if (v23) {
    return result;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1EF0);
  uint64_t v25 = sub_1A7573860();
  swift_bridgeObjectRelease();
  uint64_t v26 = (uint64_t *)&unk_1E96F1EF8;
LABEL_9:
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(v26);
  v51[0] = v25;
  uint64_t v28 = v46;
LABEL_10:
  sub_1A734E9B4((uint64_t)v51, 0, 0, v28);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
}

uint64_t sub_1A7350E74(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!*(void *)(a7 + 16))
  {
    long long v19 = 0u;
    long long v20 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1A72B2210(a1, a2);
  if ((v15 & 1) == 0)
  {
    long long v19 = 0u;
    long long v20 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1A72BEE98(*(void *)(a7 + 56) + 32 * v14, (uint64_t)&v19);
  swift_bridgeObjectRelease();
  if (!*((void *)&v20 + 1))
  {
LABEL_8:
    sub_1A72CB560((uint64_t)&v19, &qword_1EB705938);
    return a5;
  }
  sub_1A72BEE44(&v19, v21);
  sub_1A72BEE98((uint64_t)v21, (uint64_t)&v19);
  sub_1A72BEFEC(0, qword_1E96F1E68);
  if (swift_dynamicCast())
  {
  }
  else
  {
    sub_1A72BEE98((uint64_t)v21, (uint64_t)v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705938);
    swift_dynamicCast();
    if (*((void *)&v20 + 1))
    {
      sub_1A72CB560((uint64_t)&v19, &qword_1EB705938);
      uint64_t v17 = sub_1A734F62C((uint64_t)v21, a1, a2, a3, a4);
      if (!v7) {
        a5 = v17;
      }
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return a5;
}

uint64_t sub_1A7351038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  if (!*(void *)(a6 + 16))
  {
    long long v18 = 0u;
    long long v19 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1A72B2210(a1, a2);
  if ((v15 & 1) == 0)
  {
    long long v18 = 0u;
    long long v19 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1A72BEE98(*(void *)(a6 + 56) + 32 * v14, (uint64_t)&v18);
  swift_bridgeObjectRelease();
  if (!*((void *)&v19 + 1))
  {
LABEL_8:
    sub_1A72CB560((uint64_t)&v18, &qword_1EB705938);
    return sub_1A72BF1E8(a5, a7, &qword_1EB704C40);
  }
  sub_1A72BEE44(&v18, v20);
  sub_1A72BEE98((uint64_t)v20, (uint64_t)&v18);
  sub_1A72BEFEC(0, qword_1E96F1E68);
  if (swift_dynamicCast())
  {

LABEL_12:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    return sub_1A72BF1E8(a5, a7, &qword_1EB704C40);
  }
  sub_1A72BEE98((uint64_t)v20, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705938);
  swift_dynamicCast();
  if (!*((void *)&v19 + 1)) {
    goto LABEL_12;
  }
  sub_1A72CB560((uint64_t)&v18, &qword_1EB705938);
  sub_1A7350684((uint64_t)v20, a1, a2, a3, a4, a7);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

unint64_t REMTextMemberships.toJSON()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = &v24[-v9];
  id v11 = objc_msgSend(v3, sel_memberships);
  sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1F10);
  uint64_t v12 = sub_1A75723F0();

  uint64_t v13 = sub_1A735206C(v12);
  unint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A7578D60;
    *(void *)(inited + 32) = 0x68737265626D656DLL;
    *(void *)(inited + 40) = 0xEB00000000737069;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
    *(void *)(inited + 48) = v13;
    *(void *)(inited + 72) = v16;
    strcpy((char *)(inited + 80), "lastResetDate");
    *(_WORD *)(inited + 94) = -4864;
    *(void *)(inited + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F18);
    id v17 = objc_msgSend(v3, sel_lastResetDate);
    if (v17)
    {
      long long v18 = v17;
      sub_1A7571B20();

      uint64_t v19 = sub_1A7571B60();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 0, 1, v19);
    }
    else
    {
      uint64_t v19 = sub_1A7571B60();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 1, 1, v19);
    }
    sub_1A734E5D8((uint64_t)v8, (uint64_t)v10, &qword_1EB704C60);
    sub_1A7571B60();
    uint64_t v20 = *(void *)(v19 - 8);
    int v21 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v19);
    if (v21 == 1)
    {
      sub_1A72CB560((uint64_t)v10, &qword_1EB704C60);
      uint64_t v22 = 0;
    }
    else
    {
      sub_1A7571A50();
      uint64_t v22 = v23;
      (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v10, v19);
    }
    *(void *)(inited + 96) = v22;
    *(unsigned char *)(inited + 104) = v21 == 1;
    unint64_t result = sub_1A72B0944(inited);
    *(void *)a1 = result;
    *(unsigned char *)(a1 + 8) = 0;
  }
  return result;
}

char *static REMTextMemberships.fromJSON(_:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v20 - v7;
  if (*(unsigned char *)(a1 + 8))
  {
    sub_1A72EFD2C();
    swift_allocError();
    *(void *)uint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    *(unsigned char *)(v9 + 16) = 3;
    swift_willThrow();
    return v6;
  }
  uint64_t v10 = *(void *)a1;
  sub_1A7350E74(0x657365527473616CLL, 0xED00006574614474, 24, 0x8000000000000000, 0, 1, v10);
  if (v1)
  {
  }
  else if ((v11 & 1) == 0)
  {
    sub_1A7571A40();
    uint64_t v12 = sub_1A7571B60();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
    goto LABEL_8;
  }
  uint64_t v13 = sub_1A7571B60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
LABEL_8:
  uint64_t v14 = sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1F10);
  sub_1A734EB44(0x68737265626D656DLL, 0xEB00000000737069, v14, 0x40000001EFC983F8uLL, v10);
  sub_1A72BF1E8((uint64_t)v8, (uint64_t)v6, &qword_1EB704C60);
  uint64_t v16 = (void *)sub_1A75723D0();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_1A7571B60();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v6, 1, v17) != 1)
  {
    uint64_t v19 = (void *)sub_1A7571AB0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v17);
  }
  uint64_t v6 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithMemberships_lastResetDate_, v16, v19);

  sub_1A72CB560((uint64_t)v8, &qword_1EB704C60);
  return v6;
}

unint64_t sub_1A7351868@<X0>(uint64_t a1@<X8>)
{
  return REMTextMemberships.toJSON()(a1);
}

char *sub_1A735188C@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  unint64_t result = static REMTextMemberships.fromJSON(_:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t REMTimestampedUUID.toJSON()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v30 = a1;
  uint64_t v29 = sub_1A7571B60();
  uint64_t v3 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v11 = (char *)&v27 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A7578D60;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  *(void *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705490);
  uint64_t v28 = v2;
  id v13 = objc_msgSend(v2, sel_identifier);
  if (v13)
  {
    uint64_t v14 = v13;
    sub_1A7571BB0();

    uint64_t v15 = sub_1A7571BC0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 0, 1, v15);
  }
  else
  {
    uint64_t v15 = sub_1A7571BC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
  }
  sub_1A734E5D8((uint64_t)v9, (uint64_t)v11, &qword_1EB704C40);
  sub_1A7571BC0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15) == 1)
  {
    sub_1A72CB560((uint64_t)v11, &qword_1EB704C40);
    uint64_t v17 = 0;
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v17 = sub_1A7571B80();
    uint64_t v18 = v19;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v15);
  }
  uint64_t v21 = v29;
  uint64_t v20 = v30;
  uint64_t v22 = v28;
  *(void *)(inited + 48) = v17;
  *(void *)(inited + 56) = v18;
  *(void *)(inited + 80) = 0x6465696669646F6DLL;
  *(void *)(inited + 88) = 0xEA00000000006E4FLL;
  id v23 = objc_msgSend(v22, sel_modifiedOn);
  sub_1A7571B20();

  sub_1A7571A50();
  uint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  *(void *)(inited + 120) = MEMORY[0x1E4FBB3D0];
  *(void *)(inited + 96) = v25;
  unint64_t result = sub_1A72B0944(inited);
  *(void *)uint64_t v20 = result;
  *(unsigned char *)(v20 + 8) = 0;
  return result;
}

id static REMTimestampedUUID.fromJSON(_:)(uint64_t a1)
{
  uint64_t v3 = sub_1A7571B60();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v36 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  id v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v36 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v36 - v17;
  if (*(unsigned char *)(a1 + 8))
  {
    sub_1A72EFD2C();
    swift_allocError();
    *(void *)uint64_t v19 = 0;
    *(void *)(v19 + 8) = 0;
    *(unsigned char *)(v19 + 16) = 3;
    swift_willThrow();
  }
  else
  {
    uint64_t v38 = v3;
    uint64_t v39 = v9;
    uint64_t v36 = v7;
    uint64_t v37 = v4;
    uint64_t v20 = *(void *)a1;
    uint64_t v21 = sub_1A7571BC0();
    uint64_t v22 = *(void *)(v21 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v16, 1, 1, v21);
    uint64_t v23 = v40;
    sub_1A7351038(0x696669746E656469, 0xEA00000000007265, 48, 0x8000000000000000, (uint64_t)v16, v20, (uint64_t)v18);
    sub_1A72CB560((uint64_t)v16, &qword_1EB704C40);
    if (!v23)
    {
      uint64_t v24 = v22;
      uint64_t v25 = (uint64_t)v39;
      sub_1A734EC80(0x6465696669646F6DLL, 0xEA00000000006E4FLL, 40, 0x8000000000000000, v20, (uint64_t)v39);
      sub_1A72BF1E8((uint64_t)v18, (uint64_t)v13, &qword_1EB704C40);
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v25, v38);
      int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v13, 1, v21);
      if (v27 == 1)
      {
        uint64_t v28 = 0;
      }
      else
      {
        uint64_t v28 = (void *)sub_1A7571B90();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v21);
      }
      id v29 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      uint64_t v30 = v36;
      uint64_t v31 = sub_1A7571AB0();
      uint64_t v32 = v37;
      uint64_t v33 = (void *)v31;
      id v1 = objc_msgSend(v29, sel_initWithIdentifier_modifiedOn_, v28, v31);

      uint64_t v34 = v38;
      uint64_t v35 = *(void (**)(char *, uint64_t))(v32 + 8);
      v35(v30, v38);
      v35((char *)v25, v34);
      sub_1A72CB560((uint64_t)v18, &qword_1EB704C40);
    }
  }
  return v1;
}

unint64_t sub_1A735201C@<X0>(uint64_t a1@<X8>)
{
  return REMTimestampedUUID.toJSON()(a1);
}

id sub_1A7352040@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = static REMTimestampedUUID.fromJSON(_:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A735206C(uint64_t a1)
{
  uint64_t v59 = sub_1A7571B60();
  uint64_t v2 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v58 = &v49[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = &qword_1EB704C40;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v57 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  unint64_t v56 = &v49[-v8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11F0);
  uint64_t result = sub_1A75738F0();
  uint64_t v10 = result;
  int64_t v11 = 0;
  uint64_t v60 = a1;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v50 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v51 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v54 = (void (**)(unsigned char *, uint64_t))(v2 + 8);
  uint64_t v53 = result + 64;
  long long v52 = xmmword_1A7578D60;
  uint64_t v55 = result;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v61 = (v15 - 1) & v15;
  int64_t v62 = v11;
  for (unint64_t i = __clz(__rbit64(v15)) | (v11 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v19 << 6))
  {
    uint64_t v21 = *(void *)(v60 + 56);
    uint64_t v22 = (uint64_t *)(*(void *)(v60 + 48) + 16 * i);
    uint64_t v23 = v22[1];
    uint64_t v63 = *v22;
    uint64_t v24 = *(void **)(v21 + 8 * i);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v52;
    *(void *)(inited + 32) = 0x696669746E656469;
    *(void *)(inited + 40) = 0xEA00000000007265;
    *(void *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705490);
    uint64_t v26 = v23;
    swift_bridgeObjectRetain();
    id v27 = v24;
    id v28 = objc_msgSend(v27, sel_identifier);
    if (v28)
    {
      id v29 = v28;
      uint64_t v30 = (uint64_t)v57;
      sub_1A7571BB0();

      uint64_t v31 = sub_1A7571BC0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
    }
    else
    {
      uint64_t v31 = sub_1A7571BC0();
      uint64_t v30 = (uint64_t)v57;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v57, 1, 1, v31);
    }
    uint64_t v32 = v56;
    sub_1A734E5D8(v30, (uint64_t)v56, v4);
    sub_1A7571BC0();
    uint64_t v33 = v4;
    uint64_t v34 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v31) == 1)
    {
      sub_1A72CB560((uint64_t)v32, v33);
      uint64_t v35 = 0;
      uint64_t v36 = 0;
    }
    else
    {
      uint64_t v35 = sub_1A7571B80();
      uint64_t v37 = v32;
      uint64_t v36 = v38;
      (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v37, v31);
    }
    uint64_t v4 = v33;
    uint64_t v39 = v63;
    *(void *)(inited + 48) = v35;
    *(void *)(inited + 56) = v36;
    *(void *)(inited + 80) = 0x6465696669646F6DLL;
    *(void *)(inited + 88) = 0xEA00000000006E4FLL;
    id v40 = objc_msgSend(v27, sel_modifiedOn);
    uint64_t v41 = v58;
    sub_1A7571B20();

    sub_1A7571A50();
    uint64_t v43 = v42;
    (*v54)(v41, v59);
    *(void *)(inited + 120) = MEMORY[0x1E4FBB3D0];
    *(void *)(inited + 96) = v43;
    unint64_t v44 = sub_1A72B0944(inited);
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);

    *(void *)&long long v64 = v44;
    *(void *)(v53 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v10 = v55;
    uint64_t v45 = (void *)(*(void *)(v55 + 48) + 16 * i);
    *uint64_t v45 = v39;
    v45[1] = v26;
    uint64_t result = (uint64_t)sub_1A72BEE44(&v64, (_OWORD *)(*(void *)(v10 + 56) + 32 * i));
    uint64_t v46 = *(void *)(v10 + 16);
    BOOL v47 = __OFADD__(v46, 1);
    uint64_t v48 = v46 + 1;
    if (v47)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    *(void *)(v10 + 16) = v48;
    int64_t v11 = v62;
    unint64_t v15 = v61;
    if (v61) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v17 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_30;
    }
    if (v17 >= v51) {
      return v10;
    }
    unint64_t v18 = *(void *)(v50 + 8 * v17);
    int64_t v19 = v11 + 1;
    if (!v18)
    {
      int64_t v19 = v11 + 2;
      if (v11 + 2 >= v51) {
        return v10;
      }
      unint64_t v18 = *(void *)(v50 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = v11 + 3;
        if (v11 + 3 >= v51) {
          return v10;
        }
        unint64_t v18 = *(void *)(v50 + 8 * v19);
        if (!v18) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v61 = (v18 - 1) & v18;
    int64_t v62 = v19;
  }
  uint64_t v20 = v11 + 4;
  if (v11 + 4 >= v51) {
    return v10;
  }
  unint64_t v18 = *(void *)(v50 + 8 * v20);
  if (v18)
  {
    int64_t v19 = v11 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v19 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v19 >= v51) {
      return v10;
    }
    unint64_t v18 = *(void *)(v50 + 8 * v19);
    ++v20;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t URLQueryItemValueDirectStringInitializable.init(queryItemString:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1A7573210();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v17 - v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 24))(a1, a2, a3, a4);
  uint64_t v14 = *(void *)(a3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a3))
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v15 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a5, v13, a3);
    uint64_t v15 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a5, v15, 1, a3);
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URLQueryItemValueDirectStringInitializable.queryItemStringRepresentation()()
{
  sub_1A7573D70();
  uint64_t v0 = 0;
  id v1 = (void *)0xE000000000000000;
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t sub_1A735288C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A7572850();
  *a1 = result;
  a1[1] = v3;
  return result;
}

double sub_1A73528DC@<D0>(_OWORD *a1@<X8>)
{
  sub_1A735288C((uint64_t *)&v3);
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1A735291C()
{
  return 0;
}

uint64_t sub_1A735297C@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    double result = swift_bridgeObjectRelease();
    char v22 = 0;
    LOBYTE(v10) = 1;
LABEL_40:
    *a3 = v22;
    a3[1] = v10;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned int v9 = sub_1A7355E74(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A7355410);
    double result = swift_bridgeObjectRelease();
    int v10 = (v9 >> 8) & 1;
LABEL_37:
    if (v10) {
      char v22 = 0;
    }
    else {
      char v22 = v9;
    }
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)sub_1A7573680();
    }
    unsigned int v9 = sub_1A7355410(v8, v6, 10);
    int v10 = (v9 >> 8) & 1;
    goto LABEL_36;
  }
  v23[0] = result;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      uint64_t v15 = v5 - 1;
      if (v15)
      {
        LOBYTE(v9) = 0;
        uint64_t v16 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v17 = *v16 - 48;
          if (v17 > 9) {
            break;
          }
          int v18 = (char)(10 * v9);
          if (v18 != 10 * (char)v9) {
            break;
          }
          unsigned int v9 = v18 + (char)v17;
          if ((char)(v18 + v17) != v9) {
            break;
          }
          int v10 = 0;
          ++v16;
          if (!--v15) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        LOBYTE(v9) = 0;
        int64_t v19 = (unsigned __int8 *)v23;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            break;
          }
          int v21 = (char)(10 * v9);
          if (v21 != 10 * (char)v9) {
            break;
          }
          unsigned int v9 = v21 + (char)v20;
          if ((char)(v21 + v20) != v9) {
            break;
          }
          int v10 = 0;
          ++v19;
          if (!--v5) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
    if (v5)
    {
      uint64_t v11 = v5 - 1;
      if (v11)
      {
        LOBYTE(v9) = 0;
        uint64_t v12 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v13 = *v12 - 48;
          if (v13 > 9) {
            break;
          }
          int v14 = (char)(10 * v9);
          if (v14 != 10 * (char)v9) {
            break;
          }
          unsigned int v9 = v14 - (char)v13;
          if ((char)(v14 - v13) != v9) {
            break;
          }
          int v10 = 0;
          ++v12;
          if (!--v11) {
            goto LABEL_36;
          }
        }
      }
LABEL_35:
      LOBYTE(v9) = 0;
      int v10 = 1;
LABEL_36:
      double result = swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7352BA8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7356B9C(a1, a2);
  *a3 = result;
  a3[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_1A7352BD8()
{
  return sub_1A7353590();
}

uint64_t sub_1A7352BF0@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    uint64_t result = swift_bridgeObjectRelease();
    __int16 v22 = 0;
    LOBYTE(v10) = 1;
LABEL_40:
    *(_WORD *)a3 = v22;
    *(unsigned char *)(a3 + 2) = v10;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned int v9 = sub_1A7356210(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A73556C4);
    uint64_t result = swift_bridgeObjectRelease();
    int v10 = HIWORD(v9) & 1;
LABEL_37:
    if (v10) {
      __int16 v22 = 0;
    }
    else {
      __int16 v22 = v9;
    }
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)sub_1A7573680();
    }
    unsigned int v9 = sub_1A73556C4(v8, v6, 10);
    int v10 = HIWORD(v9) & 1;
    goto LABEL_36;
  }
  v23[0] = result;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      uint64_t v15 = v5 - 1;
      if (v15)
      {
        LOWORD(v9) = 0;
        uint64_t v16 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v17 = *v16 - 48;
          if (v17 > 9) {
            break;
          }
          int v18 = (__int16)(10 * v9);
          if (v18 != 10 * (__int16)v9) {
            break;
          }
          unsigned int v9 = v18 + v17;
          if ((__int16)(v18 + v17) != v9) {
            break;
          }
          int v10 = 0;
          ++v16;
          if (!--v15) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        LOWORD(v9) = 0;
        int64_t v19 = (unsigned __int8 *)v23;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            break;
          }
          int v21 = (__int16)(10 * v9);
          if (v21 != 10 * (__int16)v9) {
            break;
          }
          unsigned int v9 = v21 + v20;
          if ((__int16)(v21 + v20) != v9) {
            break;
          }
          int v10 = 0;
          ++v19;
          if (!--v5) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
    if (v5)
    {
      uint64_t v11 = v5 - 1;
      if (v11)
      {
        LOWORD(v9) = 0;
        uint64_t v12 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v13 = *v12 - 48;
          if (v13 > 9) {
            break;
          }
          int v14 = (__int16)(10 * v9);
          if (v14 != 10 * (__int16)v9) {
            break;
          }
          unsigned int v9 = v14 - v13;
          if ((__int16)(v14 - v13) != v9) {
            break;
          }
          int v10 = 0;
          ++v12;
          if (!--v11) {
            goto LABEL_36;
          }
        }
      }
LABEL_35:
      LOWORD(v9) = 0;
      int v10 = 1;
LABEL_36:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7352E1C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1A7356DC4(a1, a2);
  *(_WORD *)a3 = result;
  *(unsigned char *)(a3 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t sub_1A7352E4C()
{
  return sub_1A7353840();
}

uint64_t sub_1A7352E64@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    uint64_t result = swift_bridgeObjectRelease();
    int v24 = 0;
    LOBYTE(v23) = 1;
LABEL_40:
    *(_DWORD *)a3 = v24;
    *(unsigned char *)(a3 + 4) = v23;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v10 = sub_1A73565A8(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A7355978);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = HIDWORD(v10) & 1;
LABEL_37:
    if (v23) {
      int v24 = 0;
    }
    else {
      int v24 = v10;
    }
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)sub_1A7573680();
    }
    unsigned int v9 = sub_1A7355978(v8, v6, 10);
    LODWORD(v10) = v9;
    char v26 = BYTE4(v9) & 1;
    char v11 = BYTE4(v9) & 1;
    goto LABEL_36;
  }
  v25[0] = result;
  v25[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      uint64_t v16 = v5 - 1;
      if (v16)
      {
        LODWORD(v10) = 0;
        unsigned int v17 = (unsigned __int8 *)v25 + 1;
        while (1)
        {
          unsigned int v18 = *v17 - 48;
          if (v18 > 9) {
            break;
          }
          uint64_t v19 = 10 * (int)v10;
          if (v19 != (int)v19) {
            break;
          }
          LODWORD(v10) = v19 + v18;
          if (__OFADD__(v19, v18)) {
            break;
          }
          char v11 = 0;
          ++v17;
          if (!--v16) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        LODWORD(v10) = 0;
        unsigned int v20 = (unsigned __int8 *)v25;
        while (1)
        {
          unsigned int v21 = *v20 - 48;
          if (v21 > 9) {
            break;
          }
          uint64_t v22 = 10 * (int)v10;
          if (v22 != (int)v22) {
            break;
          }
          LODWORD(v10) = v22 + v21;
          if (__OFADD__(v22, v21)) {
            break;
          }
          char v11 = 0;
          ++v20;
          if (!--v5) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
    if (v5)
    {
      uint64_t v12 = v5 - 1;
      if (v12)
      {
        LODWORD(v10) = 0;
        unsigned int v13 = (unsigned __int8 *)v25 + 1;
        while (1)
        {
          unsigned int v14 = *v13 - 48;
          if (v14 > 9) {
            break;
          }
          uint64_t v15 = 10 * (int)v10;
          if (v15 != (int)v15) {
            break;
          }
          LODWORD(v10) = v15 - v14;
          if (__OFSUB__(v15, v14)) {
            break;
          }
          char v11 = 0;
          ++v13;
          if (!--v12) {
            goto LABEL_36;
          }
        }
      }
LABEL_35:
      LODWORD(v10) = 0;
      char v11 = 1;
LABEL_36:
      uint64_t result = swift_bridgeObjectRelease();
      LODWORD(v23) = v11 & 1;
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A735306C@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result = sub_1A7356FEC(a1, a2);
  *(_DWORD *)a3 = result;
  *(unsigned char *)(a3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_1A735309C()
{
  return sub_1A7353AD8();
}

uint64_t sub_1A73530B4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A7353128(a1, a2, (uint64_t (*)(uint64_t))sub_1A749267C, a3);
}

uint64_t sub_1A73530CC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1A73571F8(a1, a2, (uint64_t (*)(uint64_t))sub_1A749267C);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1A7353110()
{
  return sub_1A7353DAC();
}

uint64_t sub_1A7353128@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v24 = 0;
    char v23 = 1;
LABEL_39:
    *(void *)a4 = v24;
    *(unsigned char *)(a4 + 8) = v23 & 1;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1A7355318(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A7355BF8);
    char v11 = v25;
LABEL_36:
    uint64_t result = swift_bridgeObjectRelease();
    char v23 = v11 & 1;
    if (v11) {
      uint64_t v24 = 0;
    }
    else {
      uint64_t v24 = v9;
    }
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    }
    else {
      uint64_t v8 = sub_1A7573680();
    }
    uint64_t v9 = a3(v8);
    char v11 = v10 & 1;
    goto LABEL_36;
  }
  v26[0] = result;
  v26[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      uint64_t v16 = v5 - 1;
      if (v16)
      {
        uint64_t v9 = 0;
        unsigned int v17 = (unsigned __int8 *)v26 + 1;
        while (1)
        {
          unsigned int v18 = *v17 - 48;
          if (v18 > 9) {
            break;
          }
          uint64_t v19 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            break;
          }
          uint64_t v9 = v19 + v18;
          if (__OFADD__(v19, v18)) {
            break;
          }
          char v11 = 0;
          ++v17;
          if (!--v16) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        uint64_t v9 = 0;
        unsigned int v20 = (unsigned __int8 *)v26;
        while (1)
        {
          unsigned int v21 = *v20 - 48;
          if (v21 > 9) {
            break;
          }
          uint64_t v22 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            break;
          }
          uint64_t v9 = v22 + v21;
          if (__OFADD__(v22, v21)) {
            break;
          }
          char v11 = 0;
          ++v20;
          if (!--v5) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
    if (v5)
    {
      uint64_t v12 = v5 - 1;
      if (v12)
      {
        uint64_t v9 = 0;
        unsigned int v13 = (unsigned __int8 *)v26 + 1;
        while (1)
        {
          unsigned int v14 = *v13 - 48;
          if (v14 > 9) {
            break;
          }
          uint64_t v15 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            break;
          }
          uint64_t v9 = v15 - v14;
          if (__OFSUB__(v15, v14)) {
            break;
          }
          char v11 = 0;
          ++v13;
          if (!--v12) {
            goto LABEL_36;
          }
        }
      }
LABEL_35:
      uint64_t v9 = 0;
      char v11 = 1;
      goto LABEL_36;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7353340@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v19 = 0;
    LOBYTE(v10) = 1;
LABEL_40:
    *a3 = v19;
    a3[1] = v10;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned int v9 = sub_1A7355E74(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A7355F68);
    uint64_t result = swift_bridgeObjectRelease();
    int v10 = (v9 >> 8) & 1;
LABEL_37:
    if (v10) {
      char v19 = 0;
    }
    else {
      char v19 = v9;
    }
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)sub_1A7573680();
    }
    unsigned int v9 = sub_1A7355F68(v8, v6, 10);
    int v10 = (v9 >> 8) & 1;
    goto LABEL_36;
  }
  v20[0] = result;
  v20[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      uint64_t v14 = v5 - 1;
      if (v14)
      {
        LOBYTE(v9) = 0;
        uint64_t v15 = (unsigned __int8 *)v20 + 1;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            break;
          }
          if (((10 * v9) & 0xF00) != 0) {
            break;
          }
          unsigned int v9 = (10 * v9) + v16;
          if ((v9 >> 8)) {
            break;
          }
          int v10 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        LOBYTE(v9) = 0;
        unsigned int v17 = (unsigned __int8 *)v20;
        while (1)
        {
          unsigned int v18 = *v17 - 48;
          if (v18 > 9) {
            break;
          }
          if (((10 * v9) & 0xF00) != 0) {
            break;
          }
          unsigned int v9 = (10 * v9) + v18;
          if ((v9 >> 8)) {
            break;
          }
          int v10 = 0;
          ++v17;
          if (!--v5) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
    if (v5)
    {
      uint64_t v11 = v5 - 1;
      if (v11)
      {
        LOBYTE(v9) = 0;
        uint64_t v12 = (unsigned __int8 *)v20 + 1;
        while (1)
        {
          unsigned int v13 = *v12 - 48;
          if (v13 > 9) {
            break;
          }
          if (((10 * v9) & 0xF00) != 0) {
            break;
          }
          unsigned int v9 = (10 * v9) - v13;
          if ((v9 & 0xFFFFFF00) != 0) {
            break;
          }
          int v10 = 0;
          ++v12;
          if (!--v11) {
            goto LABEL_36;
          }
        }
      }
LABEL_35:
      LOBYTE(v9) = 0;
      int v10 = 1;
LABEL_36:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7353560@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7357404(a1, a2);
  *a3 = result;
  a3[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_1A7353590()
{
  return 0;
}

uint64_t sub_1A73535F0@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    uint64_t result = swift_bridgeObjectRelease();
    __int16 v19 = 0;
    LOBYTE(v10) = 1;
LABEL_40:
    *(_WORD *)a3 = v19;
    *(unsigned char *)(a3 + 2) = v10;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned int v9 = sub_1A7356210(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A7356300);
    uint64_t result = swift_bridgeObjectRelease();
    int v10 = HIWORD(v9) & 1;
LABEL_37:
    if (v10) {
      __int16 v19 = 0;
    }
    else {
      __int16 v19 = v9;
    }
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)sub_1A7573680();
    }
    unsigned int v9 = sub_1A7356300(v8, v6, 10);
    int v10 = HIWORD(v9) & 1;
    goto LABEL_36;
  }
  v20[0] = result;
  v20[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      uint64_t v14 = v5 - 1;
      if (v14)
      {
        LOWORD(v9) = 0;
        uint64_t v15 = (unsigned __int8 *)v20 + 1;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            break;
          }
          if (((10 * (unsigned __int16)v9) & 0xF0000) != 0) {
            break;
          }
          unsigned int v9 = (unsigned __int16)(10 * v9) + v16;
          if ((v9 & 0x10000) != 0) {
            break;
          }
          int v10 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        LOWORD(v9) = 0;
        unsigned int v17 = (unsigned __int8 *)v20;
        while (1)
        {
          unsigned int v18 = *v17 - 48;
          if (v18 > 9) {
            break;
          }
          if (((10 * (unsigned __int16)v9) & 0xF0000) != 0) {
            break;
          }
          unsigned int v9 = (unsigned __int16)(10 * v9) + v18;
          if ((v9 & 0x10000) != 0) {
            break;
          }
          int v10 = 0;
          ++v17;
          if (!--v5) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
    if (v5)
    {
      uint64_t v11 = v5 - 1;
      if (v11)
      {
        LOWORD(v9) = 0;
        uint64_t v12 = (unsigned __int8 *)v20 + 1;
        while (1)
        {
          unsigned int v13 = *v12 - 48;
          if (v13 > 9) {
            break;
          }
          if (((10 * (unsigned __int16)v9) & 0xF0000) != 0) {
            break;
          }
          unsigned int v9 = (unsigned __int16)(10 * v9) - v13;
          if ((v9 & 0xFFFF0000) != 0) {
            break;
          }
          int v10 = 0;
          ++v12;
          if (!--v11) {
            goto LABEL_36;
          }
        }
      }
LABEL_35:
      LOWORD(v9) = 0;
      int v10 = 1;
LABEL_36:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7353810@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1A7357620(a1, a2);
  *(_WORD *)a3 = result;
  *(unsigned char *)(a3 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t sub_1A7353840()
{
  return 0;
}

uint64_t sub_1A73538A0@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    uint64_t result = swift_bridgeObjectRelease();
    int v24 = 0;
    LOBYTE(v23) = 1;
LABEL_40:
    *(_DWORD *)a3 = v24;
    *(unsigned char *)(a3 + 4) = v23;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v10 = sub_1A73565A8(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A73566A0);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = HIDWORD(v10) & 1;
LABEL_37:
    if (v23) {
      int v24 = 0;
    }
    else {
      int v24 = v10;
    }
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)sub_1A7573680();
    }
    unsigned int v9 = sub_1A73566A0(v8, v6, 10);
    LODWORD(v10) = v9;
    char v26 = BYTE4(v9) & 1;
    char v11 = BYTE4(v9) & 1;
    goto LABEL_36;
  }
  v25[0] = result;
  v25[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      uint64_t v16 = v5 - 1;
      if (v16)
      {
        LODWORD(v10) = 0;
        unsigned int v17 = (unsigned __int8 *)v25 + 1;
        while (1)
        {
          unsigned int v18 = *v17 - 48;
          if (v18 > 9) {
            break;
          }
          uint64_t v19 = 10 * v10;
          if ((v19 & 0xFFFFFFFF00000000) != 0) {
            break;
          }
          LODWORD(v10) = v19 + v18;
          if (__CFADD__(v19, v18)) {
            break;
          }
          char v11 = 0;
          ++v17;
          if (!--v16) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        LODWORD(v10) = 0;
        unsigned int v20 = (unsigned __int8 *)v25;
        while (1)
        {
          unsigned int v21 = *v20 - 48;
          if (v21 > 9) {
            break;
          }
          uint64_t v22 = 10 * v10;
          if ((v22 & 0xFFFFFFFF00000000) != 0) {
            break;
          }
          LODWORD(v10) = v22 + v21;
          if (__CFADD__(v22, v21)) {
            break;
          }
          char v11 = 0;
          ++v20;
          if (!--v5) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
    if (v5)
    {
      uint64_t v12 = v5 - 1;
      if (v12)
      {
        LODWORD(v10) = 0;
        unsigned int v13 = (unsigned __int8 *)v25 + 1;
        while (1)
        {
          unsigned int v14 = *v13 - 48;
          if (v14 > 9) {
            break;
          }
          uint64_t v15 = 10 * v10;
          if ((v15 & 0xFFFFFFFF00000000) != 0) {
            break;
          }
          LODWORD(v10) = v15 - v14;
          if (v15 < v14) {
            break;
          }
          char v11 = 0;
          ++v13;
          if (!--v12) {
            goto LABEL_36;
          }
        }
      }
LABEL_35:
      LODWORD(v10) = 0;
      char v11 = 1;
LABEL_36:
      uint64_t result = swift_bridgeObjectRelease();
      LODWORD(v23) = v11 & 1;
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A7353AA8@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result = sub_1A735783C(a1, a2);
  *(_DWORD *)a3 = result;
  *(unsigned char *)(a3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_1A7353AD8()
{
  return 0;
}

uint64_t sub_1A7353B38@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A7353B94(a1, a2, (uint64_t (*)(uint64_t))sub_1A7492694, a3);
}

uint64_t sub_1A7353B50@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1A7357A48(a1, a2, (uint64_t (*)(uint64_t))sub_1A7492694);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1A7353B94@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v22 = 0;
    char v21 = 1;
LABEL_40:
    *(void *)a4 = v22;
    *(unsigned char *)(a4 + 8) = v21 & 1;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_1A7355318(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A7356920);
    char v11 = v23;
LABEL_37:
    uint64_t result = swift_bridgeObjectRelease();
    char v21 = v11 & 1;
    if (v11) {
      unint64_t v22 = 0;
    }
    else {
      unint64_t v22 = v9;
    }
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    }
    else {
      uint64_t v8 = sub_1A7573680();
    }
    unint64_t v9 = a3(v8);
    char v11 = v10 & 1;
    goto LABEL_37;
  }
  v24[0] = result;
  v24[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      uint64_t v16 = v5 - 1;
      if (v16)
      {
        unint64_t v9 = 0;
        unsigned int v17 = (unsigned __int8 *)v24 + 1;
        while (1)
        {
          unsigned int v18 = *v17 - 48;
          if (v18 > 9) {
            break;
          }
          if (!is_mul_ok(v9, 0xAuLL)) {
            break;
          }
          BOOL v15 = __CFADD__(10 * v9, v18);
          unint64_t v9 = 10 * v9 + v18;
          if (v15) {
            break;
          }
          char v11 = 0;
          ++v17;
          if (!--v16) {
            goto LABEL_37;
          }
        }
      }
      goto LABEL_36;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        unint64_t v9 = 0;
        uint64_t v19 = (unsigned __int8 *)v24;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            break;
          }
          if (!is_mul_ok(v9, 0xAuLL)) {
            break;
          }
          BOOL v15 = __CFADD__(10 * v9, v20);
          unint64_t v9 = 10 * v9 + v20;
          if (v15) {
            break;
          }
          char v11 = 0;
          ++v19;
          if (!--v5) {
            goto LABEL_37;
          }
        }
      }
      goto LABEL_36;
    }
    if (v5)
    {
      uint64_t v12 = v5 - 1;
      if (v12)
      {
        unint64_t v9 = 0;
        unsigned int v13 = (unsigned __int8 *)v24 + 1;
        while (1)
        {
          unsigned int v14 = *v13 - 48;
          if (v14 > 9) {
            break;
          }
          if (!is_mul_ok(v9, 0xAuLL)) {
            break;
          }
          BOOL v15 = 10 * v9 >= v14;
          unint64_t v9 = 10 * v9 - v14;
          if (!v15) {
            break;
          }
          char v11 = 0;
          ++v13;
          if (!--v12) {
            goto LABEL_37;
          }
        }
      }
LABEL_36:
      unint64_t v9 = 0;
      char v11 = 1;
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7353DAC()
{
  return 0;
}

unint64_t sub_1A7353E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result = sub_1A7355168(a1, a2);
  *(_DWORD *)a3 = result;
  *(unsigned char *)(a3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_1A7353E3C()
{
  return 0;
}

uint64_t sub_1A7353E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1A7354F64(a1, a2);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1A7353ECC()
{
  return 0;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.queryItemStringRepresentation()()
{
  sub_1A7572740();
  swift_bridgeObjectRelease();
  uint64_t v0 = 0;
  id v1 = (void *)0xE000000000000000;
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t sub_1A7353FAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _sSb19ReminderKitInternalE15queryItemStringSbSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1A7353FD4()
{
  return 0;
}

uint64_t Array<A>.init(queryItemString:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v18[0] = 44;
  v18[1] = 0xE100000000000000;
  unsigned int v17 = v18;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1A732E7B8(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A7357E44, (uint64_t)v16, a1, a2);
  swift_bridgeObjectRelease();
  v18[0] = v10;
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F30);
  uint64_t v12 = (char *)sub_1A72AE788(&qword_1E96F1F38, &qword_1E96F1F30);
  uint64_t v13 = Sequence.completeCompactMap<A>(_:)((void (*)(char *))sub_1A7357E64, (uint64_t)v15, v11, a3, v12);
  swift_bridgeObjectRelease();
  return v13;
}

void *Array<A>.queryItemStringRepresentation()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a1;
  v11[2] = a2;
  void v11[3] = a3;
  v11[4] = a4;
  uint64_t v5 = sub_1A7572B30();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB7054F8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = &v13;
  uint64_t v9 = sub_1A7320598((void (*)(char *, char *))sub_1A7357ED4, (uint64_t)v11, v5, MEMORY[0x1E4FBB1A0], v6, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)&v12);
  if (!v4)
  {
    uint64_t v13 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    sub_1A72AE788((unint64_t *)&qword_1EB703C70, &qword_1EB704AC0);
    uint64_t v8 = (void *)sub_1A7572570();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1A73542B0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = Array<A>.init(queryItemString:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8), *(void *)(a4 - 16));
  *a5 = result;
  return result;
}

void *sub_1A73542E4(uint64_t a1, uint64_t a2)
{
  return Array<A>.queryItemStringRepresentation()(*v2, *(void *)(a1 + 16), *(void *)(a2 - 8), *(void *)(a2 - 16));
}

uint64_t Date.init(queryItemString:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A7571B60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D48]), sel_init);
  uint64_t v10 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_dateFromString_, v10);

  if (!v11)
  {

    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v13(v8, 1, 1, v2);
LABEL_5:
    sub_1A72CB560((uint64_t)v8, &qword_1EB704C60);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v13)(a1, 1, 1, v2);
  }
  sub_1A7571B20();

  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v12(v8, v5, v2);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v13(v8, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
    goto LABEL_5;
  }
  v12(a1, v8, v2);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v13)(a1, 0, 1, v2);
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Date.queryItemStringRepresentation()()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D48]), sel_init);
  id v1 = (void *)sub_1A7571AB0();
  id v2 = objc_msgSend(v0, sel_stringFromDate_, v1);

  uint64_t v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v5 = v4;

  uint64_t v6 = v3;
  uint64_t v7 = v5;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t sub_1A7354618()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D48]), sel_init);
  id v1 = (void *)sub_1A7571AB0();
  id v2 = objc_msgSend(v0, sel_stringFromDate_, v1);

  uint64_t v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  return v3;
}

uint64_t TimeZone.init(queryItemString:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B68);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571E10();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1A7571E60();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
  {
    sub_1A72CB560((uint64_t)v4, &qword_1EB701B68);
    uint64_t v7 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
    uint64_t v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v7, 1, v5);
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> TimeZone.queryItemStringRepresentation()()
{
  uint64_t v0 = sub_1A7571E20();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t sub_1A7354824@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B68);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571E10();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a1 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, a1))
  {
    sub_1A72CB560((uint64_t)v6, &qword_1EB701B68);
    uint64_t v8 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a2, v6, a1);
    uint64_t v8 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v8, 1, a1);
}

uint64_t sub_1A735496C()
{
  return sub_1A7571E20();
}

void *sub_1A7354994(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704C20);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A73549FC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1A75727F0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1AD0CA990](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1A7354A78()
{
  unint64_t v0 = sub_1A7572860();
  uint64_t v4 = sub_1A7354AF8(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A7354AF8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1A7354C50(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_1A7354994(v9, 0);
      unint64_t v12 = sub_1A7354D50((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1A7573680();
LABEL_4:
        JUMPOUT(0x1AD0CA8D0);
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1AD0CA8D0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1AD0CA8D0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1A7354C50(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1A73549FC(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1A73549FC(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

unint64_t sub_1A7354D50(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    Swift::String result = v12;
    if (v17 == v15) {
      Swift::String result = sub_1A73549FC(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      Swift::String result = sub_1A75727B0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        Swift::String result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          Swift::String result = sub_1A7573680();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    Swift::String result = sub_1A73549FC(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1A7572780();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A7354F64(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_1A7573530();
    swift_bridgeObjectRelease();
    char v6 = v9;
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    if ((a2 & 0x2000000000000000) != 0)
    {
      char v6 = (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0)
        && (unint64_t v7 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
        && *v7 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_1A7573680();
      }
      char v6 = sub_1A7355108(v4, v5, (void (*)(uint64_t *__return_ptr))sub_1A7357FB4);
      swift_bridgeObjectRelease();
    }
  }
  if (v6) {
    return 0;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A7355108(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

unint64_t sub_1A7355168(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_1A7573530();
    swift_bridgeObjectRelease();
    char v6 = v9;
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    if ((a2 & 0x2000000000000000) != 0)
    {
      char v6 = (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0)
        && (unint64_t v7 = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0
        && *v7 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_1A7573680();
      }
      char v6 = sub_1A7355108(v4, v5, (void (*)(uint64_t *__return_ptr))sub_1A7357FB4);
      swift_bridgeObjectRelease();
    }
  }
  return (unint64_t)((v6 & 1) == 0) << 32;
}

uint64_t sub_1A7355318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1A7572850();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    char v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1A7354A78();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    char v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    char v9 = (void *)sub_1A7573680();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1A7355410(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          unsigned int v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            int v23 = (char)v8 * (char)a3;
            char v24 = v23;
            if ((char)v23 != v23) {
              goto LABEL_72;
            }
            int v8 = (char)v23 + (char)(v21 + v22);
            if ((char)(v24 + v21 + v22) != v8) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          int v13 = 0;
          unsigned __int8 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          LOBYTE(v28) = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            int v31 = (char)v28 * (char)a3;
            char v32 = v31;
            if ((char)v31 != v31) {
              goto LABEL_72;
            }
            int v28 = (char)v31 + (char)(v29 + v30);
            if ((char)(v32 + v29 + v30) != v28) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          char v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            int v14 = (char)v8 * (char)a3;
            char v15 = v14;
            if ((char)v14 != v14) {
              goto LABEL_72;
            }
            int v8 = (char)v14 - (char)(v10 + v11);
            if ((char)(v15 - (v10 + v11)) != v8) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1A73556C4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          unsigned int v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            int v23 = (__int16)v8 * (__int16)a3;
            __int16 v24 = v23;
            if ((__int16)v23 != v23) {
              goto LABEL_72;
            }
            int v8 = (__int16)v23 + (v21 + v22);
            if ((__int16)(v24 + (v21 + v22)) != v8) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          int v13 = 0;
          unsigned __int16 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int16 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          LOWORD(v28) = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            int v31 = (__int16)v28 * (__int16)a3;
            __int16 v32 = v31;
            if ((__int16)v31 != v31) {
              goto LABEL_72;
            }
            int v28 = (__int16)v31 + (v29 + v30);
            if ((__int16)(v32 + (v29 + v30)) != v28) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int16 v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          char v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            int v14 = (__int16)v8 * (__int16)a3;
            __int16 v15 = v14;
            if ((__int16)v14 != v14) {
              goto LABEL_72;
            }
            int v8 = (__int16)v14 - (v10 + v11);
            if ((__int16)(v15 - (v10 + v11)) != v8) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int16 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1A7355978(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unsigned int v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            uint64_t v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__OFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            uint64_t v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__OFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          char v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            uint64_t v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (__OFSUB__(v14, v15)) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1A7355BF8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1A7355E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1A7572850();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1A7354A78();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (void *)sub_1A7573680();
  }
LABEL_7:
  __int16 v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13 & 0x1FF;
}

unsigned __int8 *sub_1A7355F68(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v14 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v15 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = a3 + 55;
        }
        else
        {
          unsigned __int8 v15 = 97;
          unsigned __int8 v16 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v17 = a3 + 48;
        }
        else {
          unsigned __int8 v17 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          unsigned __int8 v18 = result + 1;
          do
          {
            unsigned int v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v19 < 0x61 || v19 >= v15) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v20 = -87;
              }
              else
              {
                char v20 = -55;
              }
            }
            else
            {
              char v20 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v8 = (v8 * a3) + (v19 + v20);
            if ((v8 >> 8)) {
              goto LABEL_72;
            }
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          int v13 = 0;
          unsigned __int8 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v21 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v22 = a3 + 55;
        }
        else
        {
          unsigned __int8 v21 = 97;
          unsigned __int8 v22 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        if (result)
        {
          LOBYTE(v24) = 0;
          do
          {
            unsigned int v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v25 < 0x61 || v25 >= v21) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v26 = -87;
              }
              else
              {
                char v26 = -55;
              }
            }
            else
            {
              char v26 = -48;
            }
            if (((v24 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v24 = (v24 * a3) + (v25 + v26);
            if ((v24 >> 8)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v8 = (v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFFFF00) != 0) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7356210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1A7572850();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1A7354A78();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (void *)sub_1A7573680();
  }
LABEL_7:
  int v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13 & 0x1FFFF;
}

unsigned __int8 *sub_1A7356300(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v14 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v15 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = a3 + 55;
        }
        else
        {
          unsigned __int8 v15 = 97;
          unsigned __int8 v16 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v17 = a3 + 48;
        }
        else {
          unsigned __int8 v17 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          unsigned __int8 v18 = result + 1;
          do
          {
            unsigned int v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v19 < 0x61 || v19 >= v15) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v20 = -87;
              }
              else
              {
                char v20 = -55;
              }
            }
            else
            {
              char v20 = -48;
            }
            if ((((unsigned __int16)v8 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            int v8 = (unsigned __int16)(v8 * a3) + (v19 + v20);
            if ((v8 & 0x10000) != 0) {
              goto LABEL_72;
            }
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          int v13 = 0;
          unsigned __int16 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int16 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v21 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v22 = a3 + 55;
        }
        else
        {
          unsigned __int8 v21 = 97;
          unsigned __int8 v22 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        if (result)
        {
          LOWORD(v24) = 0;
          do
          {
            unsigned int v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v25 < 0x61 || v25 >= v21) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v26 = -87;
              }
              else
              {
                char v26 = -55;
              }
            }
            else
            {
              char v26 = -48;
            }
            if ((((unsigned __int16)v24 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            int v24 = (unsigned __int16)(v24 * a3) + (v25 + v26);
            if ((v24 & 0x10000) != 0) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int16 v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            if ((((unsigned __int16)v8 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            int v8 = (unsigned __int16)(v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int16 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A73565A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1A7572850();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1A7354A78();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (void *)sub_1A7573680();
  }
LABEL_7:
  unint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13 | ((HIDWORD(v13) & 1) << 32);
}

unsigned __int8 *sub_1A73566A0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          char v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            unint64_t v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__CFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            unint64_t v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__CFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            unint64_t v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (v14 < v15) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1A7356920(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v14 = v9 * a3;
              unsigned __int8 v15 = v11 + v12;
              BOOL v16 = v14 >= v15;
              unint64_t v9 = v14 - v15;
              if (!v16) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_67;
    }
    if (a2)
    {
      unsigned __int8 v26 = a3 + 48;
      unsigned __int8 v27 = a3 + 55;
      unsigned __int8 v28 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v26 = 58;
      }
      else
      {
        unsigned __int8 v28 = 97;
        unsigned __int8 v27 = 65;
      }
      if (result)
      {
        unint64_t v29 = 0;
        do
        {
          unsigned int v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              uint64_t v13 = 0;
              if (v30 < 0x61 || v30 >= v28) {
                return (unsigned __int8 *)v13;
              }
              char v31 = -87;
            }
            else
            {
              char v31 = -55;
            }
          }
          else
          {
            char v31 = -48;
          }
          if (!is_mul_ok(v29, a3)) {
            return 0;
          }
          unint64_t v32 = v29 * a3;
          unsigned __int8 v33 = v30 + v31;
          BOOL v16 = __CFADD__(v32, v33);
          unint64_t v29 = v32 + v33;
          if (v16) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v29;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }
  uint64_t v17 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v18 = a3 + 48;
  unsigned __int8 v19 = a3 + 55;
  unsigned __int8 v20 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v18 = 58;
  }
  else
  {
    unsigned __int8 v20 = 97;
    unsigned __int8 v19 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  unsigned int v21 = result + 1;
  do
  {
    unsigned int v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        uint64_t v13 = 0;
        if (v22 < 0x61 || v22 >= v20) {
          return (unsigned __int8 *)v13;
        }
        char v23 = -87;
      }
      else
      {
        char v23 = -55;
      }
    }
    else
    {
      char v23 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v24 = v9 * a3;
    unsigned __int8 v25 = v22 + v23;
    BOOL v16 = __CFADD__(v24, v25);
    unint64_t v9 = v24 + v25;
    if (v16) {
      return 0;
    }
    ++v21;
    --v17;
  }
  while (v17);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1A7356B9C(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    unsigned __int8 v20 = 0;
    int v8 = 1;
    return v20 | (v8 << 8);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned int v7 = sub_1A7355E74(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A7355410);
    swift_bridgeObjectRelease();
    int v8 = (v7 >> 8) & 1;
LABEL_37:
    if (v8) {
      unsigned __int8 v20 = 0;
    }
    else {
      unsigned __int8 v20 = v7;
    }
    return v20 | (v8 << 8);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      unsigned __int8 v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      unsigned __int8 v6 = (unsigned __int8 *)sub_1A7573680();
    }
    unsigned int v7 = sub_1A7355410(v6, v4, 10);
    int v8 = (v7 >> 8) & 1;
    goto LABEL_36;
  }
  v21[0] = result;
  v21[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v3)
    {
      uint64_t v13 = v3 - 1;
      if (v13)
      {
        LOBYTE(v7) = 0;
        unint64_t v14 = (unsigned __int8 *)v21 + 1;
        while (1)
        {
          unsigned int v15 = *v14 - 48;
          if (v15 > 9) {
            break;
          }
          int v16 = (char)(10 * v7);
          if (v16 != 10 * (char)v7) {
            break;
          }
          unsigned int v7 = v16 + (char)v15;
          if ((char)(v16 + v15) != v7) {
            break;
          }
          int v8 = 0;
          ++v14;
          if (!--v13) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v3)
      {
        LOBYTE(v7) = 0;
        uint64_t v17 = (unsigned __int8 *)v21;
        while (1)
        {
          unsigned int v18 = *v17 - 48;
          if (v18 > 9) {
            break;
          }
          int v19 = (char)(10 * v7);
          if (v19 != 10 * (char)v7) {
            break;
          }
          unsigned int v7 = v19 + (char)v18;
          if ((char)(v19 + v18) != v7) {
            break;
          }
          int v8 = 0;
          ++v17;
          if (!--v3) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
    if (v3)
    {
      uint64_t v9 = v3 - 1;
      if (v9)
      {
        LOBYTE(v7) = 0;
        unsigned int v10 = (unsigned __int8 *)v21 + 1;
        while (1)
        {
          unsigned int v11 = *v10 - 48;
          if (v11 > 9) {
            break;
          }
          int v12 = (char)(10 * v7);
          if (v12 != 10 * (char)v7) {
            break;
          }
          unsigned int v7 = v12 - (char)v11;
          if ((char)(v12 - v11) != v7) {
            break;
          }
          int v8 = 0;
          ++v10;
          if (!--v9) {
            goto LABEL_36;
          }
        }
      }
LABEL_35:
      LOBYTE(v7) = 0;
      int v8 = 1;
LABEL_36:
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7356DC4(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    int v21 = 0;
    int v9 = 1;
    return v21 | (v9 << 16);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned int v8 = sub_1A7356210(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A73556C4);
    swift_bridgeObjectRelease();
    int v9 = HIWORD(v8) & 1;
LABEL_37:
    int v21 = (unsigned __int16)v8;
    if (v9) {
      int v21 = 0;
    }
    return v21 | (v9 << 16);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      unsigned __int8 v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      unsigned __int8 v6 = (unsigned __int8 *)sub_1A7573680();
    }
    unsigned int v7 = sub_1A73556C4(v6, v4, 10);
    LOWORD(v8) = v7;
    int v9 = HIWORD(v7) & 1;
    goto LABEL_36;
  }
  v22[0] = result;
  v22[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v3)
    {
      uint64_t v14 = v3 - 1;
      if (v14)
      {
        LOWORD(v8) = 0;
        unsigned int v15 = (unsigned __int8 *)v22 + 1;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            break;
          }
          int v17 = (__int16)(10 * v8);
          if (v17 != 10 * (__int16)v8) {
            break;
          }
          unsigned int v8 = v17 + v16;
          if ((__int16)(v17 + v16) != v8) {
            break;
          }
          int v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v3)
      {
        LOWORD(v8) = 0;
        unsigned int v18 = (unsigned __int8 *)v22;
        while (1)
        {
          unsigned int v19 = *v18 - 48;
          if (v19 > 9) {
            break;
          }
          int v20 = (__int16)(10 * v8);
          if (v20 != 10 * (__int16)v8) {
            break;
          }
          unsigned int v8 = v20 + v19;
          if ((__int16)(v20 + v19) != v8) {
            break;
          }
          int v9 = 0;
          ++v18;
          if (!--v3) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
    if (v3)
    {
      uint64_t v10 = v3 - 1;
      if (v10)
      {
        LOWORD(v8) = 0;
        unsigned int v11 = (unsigned __int8 *)v22 + 1;
        while (1)
        {
          unsigned int v12 = *v11 - 48;
          if (v12 > 9) {
            break;
          }
          int v13 = (__int16)(10 * v8);
          if (v13 != 10 * (__int16)v8) {
            break;
          }
          unsigned int v8 = v13 - v12;
          if ((__int16)(v13 - v12) != v8) {
            break;
          }
          int v9 = 0;
          ++v11;
          if (!--v10) {
            goto LABEL_36;
          }
        }
      }
LABEL_35:
      LOWORD(v8) = 0;
      int v9 = 1;
LABEL_36:
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A7356FEC(unint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = 0;
    LOBYTE(v21) = 1;
LABEL_39:
    LOBYTE(v23[0]) = v21;
    return v22 | ((unint64_t)v21 << 32);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v8 = sub_1A73565A8(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A7355978);
    swift_bridgeObjectRelease();
    uint64_t v21 = HIDWORD(v8) & 1;
LABEL_37:
    uint64_t v22 = v8;
    if (v21) {
      uint64_t v22 = 0;
    }
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      unsigned __int8 v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      unsigned __int8 v6 = (unsigned __int8 *)sub_1A7573680();
    }
    unsigned int v7 = sub_1A7355978(v6, v4, 10);
    LODWORD(v8) = v7;
    char v24 = BYTE4(v7) & 1;
    char v9 = BYTE4(v7) & 1;
    goto LABEL_36;
  }
  v23[0] = result;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v3)
    {
      uint64_t v14 = v3 - 1;
      if (v14)
      {
        LODWORD(v8) = 0;
        unsigned int v15 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            break;
          }
          uint64_t v17 = 10 * (int)v8;
          if (v17 != (int)v17) {
            break;
          }
          LODWORD(v8) = v17 + v16;
          if (__OFADD__(v17, v16)) {
            break;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v3)
      {
        LODWORD(v8) = 0;
        unsigned int v18 = (unsigned __int8 *)v23;
        while (1)
        {
          unsigned int v19 = *v18 - 48;
          if (v19 > 9) {
            break;
          }
          uint64_t v20 = 10 * (int)v8;
          if (v20 != (int)v20) {
            break;
          }
          LODWORD(v8) = v20 + v19;
          if (__OFADD__(v20, v19)) {
            break;
          }
          char v9 = 0;
          ++v18;
          if (!--v3) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
    if (v3)
    {
      uint64_t v10 = v3 - 1;
      if (v10)
      {
        LODWORD(v8) = 0;
        unsigned int v11 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v12 = *v11 - 48;
          if (v12 > 9) {
            break;
          }
          uint64_t v13 = 10 * (int)v8;
          if (v13 != (int)v13) {
            break;
          }
          LODWORD(v8) = v13 - v12;
          if (__OFSUB__(v13, v12)) {
            break;
          }
          char v9 = 0;
          ++v11;
          if (!--v10) {
            goto LABEL_36;
          }
        }
      }
LABEL_35:
      LODWORD(v8) = 0;
      char v9 = 1;
LABEL_36:
      swift_bridgeObjectRelease();
      LODWORD(v21) = v9 & 1;
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A73571F8(uint64_t result, unint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      }
      else {
        uint64_t v6 = sub_1A7573680();
      }
      uint64_t v7 = a3(v6);
      char v9 = v8 & 1;
      goto LABEL_36;
    }
    v22[0] = result;
    v22[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (v3)
      {
        uint64_t v14 = v3 - 1;
        if (v14)
        {
          uint64_t v7 = 0;
          unsigned int v15 = (unsigned __int8 *)v22 + 1;
          while (1)
          {
            unsigned int v16 = *v15 - 48;
            if (v16 > 9) {
              break;
            }
            uint64_t v17 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
              break;
            }
            uint64_t v7 = v17 + v16;
            if (__OFADD__(v17, v16)) {
              break;
            }
            char v9 = 0;
            ++v15;
            if (!--v14) {
              goto LABEL_36;
            }
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      if (result != 45)
      {
        if (v3)
        {
          uint64_t v7 = 0;
          unsigned int v18 = (unsigned __int8 *)v22;
          while (1)
          {
            unsigned int v19 = *v18 - 48;
            if (v19 > 9) {
              break;
            }
            uint64_t v20 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
              break;
            }
            uint64_t v7 = v20 + v19;
            if (__OFADD__(v20, v19)) {
              break;
            }
            char v9 = 0;
            ++v18;
            if (!--v3) {
              goto LABEL_36;
            }
          }
        }
        goto LABEL_35;
      }
      if (v3)
      {
        uint64_t v10 = v3 - 1;
        if (v10)
        {
          uint64_t v7 = 0;
          unsigned int v11 = (unsigned __int8 *)v22 + 1;
          while (1)
          {
            unsigned int v12 = *v11 - 48;
            if (v12 > 9) {
              break;
            }
            uint64_t v13 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
              break;
            }
            uint64_t v7 = v13 - v12;
            if (__OFSUB__(v13, v12)) {
              break;
            }
            char v9 = 0;
            ++v11;
            if (!--v10) {
              goto LABEL_36;
            }
          }
        }
LABEL_35:
        uint64_t v7 = 0;
        char v9 = 1;
        goto LABEL_36;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v7 = sub_1A7355318(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A7355BF8);
  char v9 = v21;
LABEL_36:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_1A7357404(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    unsigned __int8 v17 = 0;
    int v8 = 1;
    return v17 | (v8 << 8);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned int v7 = sub_1A7355E74(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A7355F68);
    swift_bridgeObjectRelease();
    int v8 = (v7 >> 8) & 1;
LABEL_37:
    if (v8) {
      unsigned __int8 v17 = 0;
    }
    else {
      unsigned __int8 v17 = v7;
    }
    return v17 | (v8 << 8);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v6 = (unsigned __int8 *)sub_1A7573680();
    }
    unsigned int v7 = sub_1A7355F68(v6, v4, 10);
    int v8 = (v7 >> 8) & 1;
    goto LABEL_36;
  }
  v18[0] = result;
  v18[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v3)
    {
      uint64_t v12 = v3 - 1;
      if (v12)
      {
        LOBYTE(v7) = 0;
        uint64_t v13 = (unsigned __int8 *)v18 + 1;
        while (1)
        {
          unsigned int v14 = *v13 - 48;
          if (v14 > 9) {
            break;
          }
          if (((10 * v7) & 0xF00) != 0) {
            break;
          }
          unsigned int v7 = (10 * v7) + v14;
          if ((v7 >> 8)) {
            break;
          }
          int v8 = 0;
          ++v13;
          if (!--v12) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v3)
      {
        LOBYTE(v7) = 0;
        unsigned int v15 = (unsigned __int8 *)v18;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            break;
          }
          if (((10 * v7) & 0xF00) != 0) {
            break;
          }
          unsigned int v7 = (10 * v7) + v16;
          if ((v7 >> 8)) {
            break;
          }
          int v8 = 0;
          ++v15;
          if (!--v3) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
    if (v3)
    {
      uint64_t v9 = v3 - 1;
      if (v9)
      {
        LOBYTE(v7) = 0;
        uint64_t v10 = (unsigned __int8 *)v18 + 1;
        while (1)
        {
          unsigned int v11 = *v10 - 48;
          if (v11 > 9) {
            break;
          }
          if (((10 * v7) & 0xF00) != 0) {
            break;
          }
          unsigned int v7 = (10 * v7) - v11;
          if ((v7 & 0xFFFFFF00) != 0) {
            break;
          }
          int v8 = 0;
          ++v10;
          if (!--v9) {
            goto LABEL_36;
          }
        }
      }
LABEL_35:
      LOBYTE(v7) = 0;
      int v8 = 1;
LABEL_36:
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7357620(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    int v18 = 0;
    int v9 = 1;
    return v18 | (v9 << 16);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned int v8 = sub_1A7356210(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A7356300);
    swift_bridgeObjectRelease();
    int v9 = HIWORD(v8) & 1;
LABEL_37:
    int v18 = (unsigned __int16)v8;
    if (v9) {
      int v18 = 0;
    }
    return v18 | (v9 << 16);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v6 = (unsigned __int8 *)sub_1A7573680();
    }
    unsigned int v7 = sub_1A7356300(v6, v4, 10);
    LOWORD(v8) = v7;
    int v9 = HIWORD(v7) & 1;
    goto LABEL_36;
  }
  v19[0] = result;
  v19[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v3)
    {
      uint64_t v13 = v3 - 1;
      if (v13)
      {
        LOWORD(v8) = 0;
        unsigned int v14 = (unsigned __int8 *)v19 + 1;
        while (1)
        {
          unsigned int v15 = *v14 - 48;
          if (v15 > 9) {
            break;
          }
          if (((10 * (unsigned __int16)v8) & 0xF0000) != 0) {
            break;
          }
          unsigned int v8 = (unsigned __int16)(10 * v8) + v15;
          if ((v8 & 0x10000) != 0) {
            break;
          }
          int v9 = 0;
          ++v14;
          if (!--v13) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v3)
      {
        LOWORD(v8) = 0;
        unsigned int v16 = (unsigned __int8 *)v19;
        while (1)
        {
          unsigned int v17 = *v16 - 48;
          if (v17 > 9) {
            break;
          }
          if (((10 * (unsigned __int16)v8) & 0xF0000) != 0) {
            break;
          }
          unsigned int v8 = (unsigned __int16)(10 * v8) + v17;
          if ((v8 & 0x10000) != 0) {
            break;
          }
          int v9 = 0;
          ++v16;
          if (!--v3) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
    if (v3)
    {
      uint64_t v10 = v3 - 1;
      if (v10)
      {
        LOWORD(v8) = 0;
        unsigned int v11 = (unsigned __int8 *)v19 + 1;
        while (1)
        {
          unsigned int v12 = *v11 - 48;
          if (v12 > 9) {
            break;
          }
          if (((10 * (unsigned __int16)v8) & 0xF0000) != 0) {
            break;
          }
          unsigned int v8 = (unsigned __int16)(10 * v8) - v12;
          if ((v8 & 0xFFFF0000) != 0) {
            break;
          }
          int v9 = 0;
          ++v11;
          if (!--v10) {
            goto LABEL_36;
          }
        }
      }
LABEL_35:
      LOWORD(v8) = 0;
      int v9 = 1;
LABEL_36:
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A735783C(unint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = 0;
    LOBYTE(v21) = 1;
LABEL_39:
    LOBYTE(v23[0]) = v21;
    return v22 | ((unint64_t)v21 << 32);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v8 = sub_1A73565A8(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A73566A0);
    swift_bridgeObjectRelease();
    uint64_t v21 = HIDWORD(v8) & 1;
LABEL_37:
    uint64_t v22 = v8;
    if (v21) {
      uint64_t v22 = 0;
    }
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v6 = (unsigned __int8 *)sub_1A7573680();
    }
    unsigned int v7 = sub_1A73566A0(v6, v4, 10);
    LODWORD(v8) = v7;
    char v24 = BYTE4(v7) & 1;
    char v9 = BYTE4(v7) & 1;
    goto LABEL_36;
  }
  v23[0] = result;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v3)
    {
      uint64_t v14 = v3 - 1;
      if (v14)
      {
        LODWORD(v8) = 0;
        unsigned int v15 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            break;
          }
          uint64_t v17 = 10 * v8;
          if ((v17 & 0xFFFFFFFF00000000) != 0) {
            break;
          }
          LODWORD(v8) = v17 + v16;
          if (__CFADD__(v17, v16)) {
            break;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v3)
      {
        LODWORD(v8) = 0;
        int v18 = (unsigned __int8 *)v23;
        while (1)
        {
          unsigned int v19 = *v18 - 48;
          if (v19 > 9) {
            break;
          }
          uint64_t v20 = 10 * v8;
          if ((v20 & 0xFFFFFFFF00000000) != 0) {
            break;
          }
          LODWORD(v8) = v20 + v19;
          if (__CFADD__(v20, v19)) {
            break;
          }
          char v9 = 0;
          ++v18;
          if (!--v3) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_35;
    }
    if (v3)
    {
      uint64_t v10 = v3 - 1;
      if (v10)
      {
        LODWORD(v8) = 0;
        unsigned int v11 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v12 = *v11 - 48;
          if (v12 > 9) {
            break;
          }
          uint64_t v13 = 10 * v8;
          if ((v13 & 0xFFFFFFFF00000000) != 0) {
            break;
          }
          LODWORD(v8) = v13 - v12;
          if (v13 < v12) {
            break;
          }
          char v9 = 0;
          ++v11;
          if (!--v10) {
            goto LABEL_36;
          }
        }
      }
LABEL_35:
      LODWORD(v8) = 0;
      char v9 = 1;
LABEL_36:
      swift_bridgeObjectRelease();
      LODWORD(v21) = v9 & 1;
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7357A48(uint64_t result, unint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      }
      else {
        uint64_t v6 = sub_1A7573680();
      }
      unint64_t v7 = a3(v6);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v20[0] = result;
    v20[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (v3)
      {
        uint64_t v14 = v3 - 1;
        if (v14)
        {
          unint64_t v7 = 0;
          unsigned int v15 = (unsigned __int8 *)v20 + 1;
          while (1)
          {
            unsigned int v16 = *v15 - 48;
            if (v16 > 9) {
              break;
            }
            if (!is_mul_ok(v7, 0xAuLL)) {
              break;
            }
            BOOL v13 = __CFADD__(10 * v7, v16);
            unint64_t v7 = 10 * v7 + v16;
            if (v13) {
              break;
            }
            char v9 = 0;
            ++v15;
            if (!--v14) {
              goto LABEL_37;
            }
          }
        }
        goto LABEL_36;
      }
    }
    else
    {
      if (result != 45)
      {
        if (v3)
        {
          unint64_t v7 = 0;
          uint64_t v17 = (unsigned __int8 *)v20;
          while (1)
          {
            unsigned int v18 = *v17 - 48;
            if (v18 > 9) {
              break;
            }
            if (!is_mul_ok(v7, 0xAuLL)) {
              break;
            }
            BOOL v13 = __CFADD__(10 * v7, v18);
            unint64_t v7 = 10 * v7 + v18;
            if (v13) {
              break;
            }
            char v9 = 0;
            ++v17;
            if (!--v3) {
              goto LABEL_37;
            }
          }
        }
        goto LABEL_36;
      }
      if (v3)
      {
        uint64_t v10 = v3 - 1;
        if (v10)
        {
          unint64_t v7 = 0;
          unsigned int v11 = (unsigned __int8 *)v20 + 1;
          while (1)
          {
            unsigned int v12 = *v11 - 48;
            if (v12 > 9) {
              break;
            }
            if (!is_mul_ok(v7, 0xAuLL)) {
              break;
            }
            BOOL v13 = 10 * v7 >= v12;
            unint64_t v7 = 10 * v7 - v12;
            if (!v13) {
              break;
            }
            char v9 = 0;
            ++v11;
            if (!--v10) {
              goto LABEL_37;
            }
          }
        }
LABEL_36:
        unint64_t v7 = 0;
        char v9 = 1;
        goto LABEL_37;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  unint64_t v7 = sub_1A7355318(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1A7356920);
  char v9 = v19;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t _sSb19ReminderKitInternalE15queryItemStringSbSgSS_tcfC_0()
{
  uint64_t v0 = sub_1A7572680();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  if (v0 == 1702195828 && v2 == 0xE400000000000000
    || (sub_1A7573DB0() & 1) != 0
    || v0 == 49 && v2 == 0xE100000000000000
    || (sub_1A7573DB0() & 1) != 0
    || v0 == 7562617 && v2 == 0xE300000000000000
    || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (v0 == 0x65736C6166 && v2 == 0xE500000000000000 {
         || (sub_1A7573DB0() & 1) != 0
  }
         || v0 == 48 && v2 == 0xE100000000000000
         || (sub_1A7573DB0() & 1) != 0
         || v0 == 28526 && v2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    char v4 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v4 & 1) == 0) {
      return 2;
    }
  }
  return result;
}

uint64_t sub_1A7357E44(void *a1)
{
  return sub_1A73303D4(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_1A7357E64(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = MEMORY[0x1AD0CA8A0](*a1, a1[1], a1[2], a1[3]);
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v3);
}

uint64_t sub_1A7357ED4@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(v2 + 32) + 8))(*(void *)(v2 + 16));
  if (v3)
  {
    *a1 = v3;
  }
  else
  {
    *a2 = result;
    a2[1] = v7;
  }
  return result;
}

uint64_t dispatch thunk of URLQueryItemValueDecodable.init(queryItemString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of URLQueryItemValueEncodable.queryItemStringRepresentation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of URLQueryItemValueDirectStringInitializable.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

unsigned char *sub_1A7357F88@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1A7357FF8(a1, MEMORY[0x1E4FBC878], a2);
}

void *sub_1A7357FB4@<X0>(unsigned char *a1@<X8>)
{
  return sub_1A7358070(a1);
}

unsigned char *sub_1A7357FCC@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1A7357FF8(a1, MEMORY[0x1E4FBC880], a2);
}

unsigned char *sub_1A7357FF8@<X0>(unsigned char *result@<X0>, uint64_t (*a2)(void)@<X1>, BOOL *a3@<X8>)
{
  unsigned int v4 = *result;
  BOOL v5 = v4 > 0x20;
  uint64_t v6 = (1 << v4) & 0x100003E01;
  BOOL v7 = v5 || v6 == 0;
  v8 = v7 && (uint64_t result = (unsigned char *)a2()) != 0 && *result == 0;
  *a3 = v8;
  return result;
}

void *sub_1A7358070@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t URLQueryItemDecoder.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t URLQueryItemDecoder.init()()
{
  return v0;
}

uint64_t URLQueryItemDecoder.decode<A>(_:from:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for QueryItems();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a2;
  type metadata accessor for InternalDecoder();
  unsigned int v4 = (void *)swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBC868];
  v4[2] = MEMORY[0x1E4FBC860];
  v4[3] = v5;
  v4[4] = v3;
  sub_1A73581E4();
  swift_bridgeObjectRetain();
  return sub_1A7572C40();
}

uint64_t type metadata accessor for QueryItems()
{
  return self;
}

uint64_t type metadata accessor for InternalDecoder()
{
  return self;
}

unint64_t sub_1A73581E4()
{
  unint64_t result = qword_1E96F1F40;
  if (!qword_1E96F1F40)
  {
    type metadata accessor for InternalDecoder();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1F40);
  }
  return result;
}

uint64_t URLQueryItemDecoder.decodeIfPresent<A>(_:from:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F48);
  MEMORY[0x1F4188790](v6 - 8);
  BOOL v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A7573640();
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  char v31 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = *(void *)(a2 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v12);
  unsigned int v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = v32;
  URLQueryItemDecoder.decode<A>(_:from:)(v16, a1);
  if (!v19)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a3, v18, a2);
    uint64_t v28 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a3, v28, 1, a2);
  }
  uint64_t v34 = v19;
  id v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB7054F8);
  char v21 = swift_dynamicCast();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
  if (v21)
  {
    v22(v8, 0, 1, v9);
    char v23 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    v23(v14, v8, v9);
    uint64_t v24 = (uint64_t)v31;
    v23(v31, v14, v9);
    uint64_t v25 = v33;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v33 + 88))(v24, v9) == *MEMORY[0x1E4FBBA68])
    {

      (*(void (**)(uint64_t, uint64_t))(v25 + 96))(v24, v9);
      uint64_t v26 = v24 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704508) + 48);
      uint64_t v27 = sub_1A7573630();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
      __swift_destroy_boxed_opaque_existential_1(v24);
      uint64_t v28 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a3, v28, 1, a2);
    }
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v9);
  }
  else
  {
    v22(v8, 1, 1, v9);
    sub_1A73585E0((uint64_t)v8);
  }
  return swift_willThrow();
}

uint64_t sub_1A73585E0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1F48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t URLQueryItemDecoder.deinit()
{
  return v0;
}

uint64_t URLQueryItemDecoder.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t type metadata accessor for URLQueryItemDecoder()
{
  return self;
}

uint64_t method lookup function for URLQueryItemDecoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for URLQueryItemDecoder);
}

uint64_t dispatch thunk of URLQueryItemDecoder.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1A73586A8(void *a1, uint64_t a2)
{
  uint64_t v60 = a1;
  uint64_t v4 = sub_1A7571550();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v54 = (uint64_t)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v47 - v8;
  uint64_t v10 = sub_1A7573630();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v53 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v55 = a2 + 16;
  unint64_t v56 = (char *)v47 - v14;
  swift_beginAccess();
  uint64_t v15 = *(void *)(*(void *)(a2 + 16) + 16);
  if (!v15)
  {
LABEL_10:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1FD8);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1A75785A0;
    uint64_t v25 = v60;
    sub_1A72B21AC((uint64_t)v60, v24 + 32);
    unint64_t v58 = 0;
    unint64_t v59 = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    unint64_t v58 = 0xD000000000000018;
    unint64_t v59 = 0x80000001A75A02B0;
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    sub_1A7574240();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    uint64_t v26 = v56;
    sub_1A7573620();
    uint64_t v27 = sub_1A7573640();
    swift_allocError();
    uint64_t v29 = v28;
    uint64_t v30 = v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704508) + 48);
    sub_1A72B21AC((uint64_t)v25, v29);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v30, v26, v10);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x1E4FBBA68], v27);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v26, v10);
    return v27 & 1;
  }
  v47[1] = v2;
  uint64_t v48 = v11;
  uint64_t v49 = v10;
  uint64_t v50 = v9;
  uint64_t v51 = v5;
  uint64_t v52 = v4;
  unint64_t v16 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v57 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain();
  unint64_t v17 = 0;
  while (1)
  {
    uint64_t v18 = sub_1A7571530();
    uint64_t v20 = v19;
    __swift_project_boxed_opaque_existential_1(v60, v60[3]);
    if (v18 == sub_1A7574240() && v20 == v21) {
      break;
    }
    char v23 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_12;
    }
    ++v17;
    v16 += v57;
    if (v15 == v17)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = v48;
      uint64_t v10 = v49;
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_12:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v33 = v51;
  uint64_t v32 = v52;
  uint64_t v34 = v50;
  if (v17 < *(void *)(*(void *)v55 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v51 + 16))(v50, *(void *)v55 + v16, v52);
    sub_1A7571540();
    if (v35)
    {
      char v36 = _sSb19ReminderKitInternalE15queryItemStringSbSgSS_tcfC_0();
      if (v36 == 2)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1FD8);
        uint64_t v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = xmmword_1A75785A0;
        uint64_t v38 = v60;
        sub_1A72B21AC((uint64_t)v60, v37 + 32);
        unint64_t v58 = 0;
        unint64_t v59 = 0xE000000000000000;
        sub_1A7573560();
        swift_bridgeObjectRelease();
        unint64_t v58 = 34;
        unint64_t v59 = 0xE100000000000000;
        sub_1A7571540();
        sub_1A7572740();
        swift_bridgeObjectRelease();
        sub_1A7572740();
        __swift_project_boxed_opaque_existential_1(v38, v38[3]);
        sub_1A7574240();
        sub_1A7572740();
        swift_bridgeObjectRelease();
        sub_1A7572740();
        uint64_t v39 = v53;
        sub_1A7573620();
        uint64_t v27 = sub_1A7573640();
        swift_allocError();
        uint64_t v41 = v40;
        uint64_t v42 = (char *)v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538) + 48);
        *uint64_t v41 = MEMORY[0x1E4FBB390];
        uint64_t v44 = v48;
        uint64_t v43 = v49;
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v42, v39, v49);
        (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v41, *MEMORY[0x1E4FBBA70], v27);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v43);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
        return v27 & 1;
      }
      LOBYTE(v27) = v36 & 1;
    }
    else
    {
      LOBYTE(v27) = 1;
    }
    swift_beginAccess();
    uint64_t v45 = v54;
    sub_1A73595B8(v17, v54);
    swift_endAccess();
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v46(v45, v32);
    v46((uint64_t)v34, v32);
    return v27 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7358D80@<X0>(void *a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v68 = a2;
  uint64_t v67 = a3;
  uint64_t v77 = a1;
  uint64_t v65 = a5;
  uint64_t v7 = sub_1A7573630();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v73 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v56 - v11;
  uint64_t v13 = sub_1A7573210();
  uint64_t v63 = *(void *)(v13 - 8);
  uint64_t v64 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v70 = (char *)&v56 - v14;
  uint64_t v15 = sub_1A7571550();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v62 = (uint64_t)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v71 = (char *)&v56 - v19;
  uint64_t v72 = v5 + 16;
  swift_beginAccess();
  uint64_t v20 = *(void *)(*(void *)(v5 + 16) + 16);
  if (v20)
  {
    uint64_t v57 = v12;
    uint64_t v58 = a4;
    uint64_t v61 = v15;
    uint64_t v59 = v8;
    uint64_t v60 = v7;
    unint64_t v21 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v66 = v16;
    uint64_t v74 = *(void *)(v16 + 72);
    swift_bridgeObjectRetain();
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = sub_1A7571530();
      uint64_t v25 = v24;
      __swift_project_boxed_opaque_existential_1(v77, v77[3]);
      if (v23 == sub_1A7574240() && v25 == v26) {
        break;
      }
      char v28 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_12;
      }
      ++v22;
      v21 += v74;
      if (v20 == v22)
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = v60;
        uint64_t v8 = v59;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v37 = v71;
    uint64_t v38 = v61;
    uint64_t v39 = v66;
    id v40 = v70;
    if (v22 >= *(void *)(*(void *)v72 + 16))
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v66 + 16))(v71, *(void *)v72 + v21, v61);
      uint64_t v41 = v69;
      v68(v37);
      if (v41)
      {
        return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v37, v38);
      }
      else
      {
        uint64_t v42 = v58;
        uint64_t v43 = *(void *)(v58 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v40, 1, v58) == 1)
        {
          (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v64);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1FD8);
          uint64_t v44 = swift_allocObject();
          *(_OWORD *)(v44 + 16) = xmmword_1A75785A0;
          uint64_t v45 = v77;
          sub_1A72B21AC((uint64_t)v77, v44 + 32);
          unint64_t v75 = 0;
          unint64_t v76 = 0xE000000000000000;
          uint64_t v46 = v37;
          sub_1A7573560();
          swift_bridgeObjectRelease();
          unint64_t v75 = 34;
          unint64_t v76 = 0xE100000000000000;
          sub_1A7571540();
          sub_1A7572740();
          swift_bridgeObjectRelease();
          sub_1A7572740();
          __swift_project_boxed_opaque_existential_1(v45, v45[3]);
          sub_1A7574240();
          sub_1A7572740();
          swift_bridgeObjectRelease();
          sub_1A7572740();
          BOOL v47 = v57;
          sub_1A7573620();
          uint64_t v48 = sub_1A7573640();
          swift_allocError();
          uint64_t v50 = v49;
          uint64_t v51 = (char *)v49 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538) + 48);
          *uint64_t v50 = v42;
          uint64_t v52 = v59;
          uint64_t v53 = v60;
          (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v51, v47, v60);
          (*(void (**)(void *, void, uint64_t))(*(void *)(v48 - 8) + 104))(v50, *MEMORY[0x1E4FBBA70], v48);
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v52 + 8))(v47, v53);
          return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v46, v38);
        }
        else
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v65, v40, v42);
          swift_beginAccess();
          uint64_t v54 = v62;
          sub_1A73595B8(v22, v62);
          swift_endAccess();
          uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
          v55(v54, v38);
          return ((uint64_t (*)(char *, uint64_t))v55)(v37, v38);
        }
      }
    }
  }
  else
  {
LABEL_10:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1FD8);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1A75785A0;
    uint64_t v30 = v77;
    sub_1A72B21AC((uint64_t)v77, v29 + 32);
    unint64_t v75 = 0;
    unint64_t v76 = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    unint64_t v75 = 0xD000000000000018;
    unint64_t v76 = 0x80000001A75A02B0;
    __swift_project_boxed_opaque_existential_1(v30, v30[3]);
    sub_1A7574240();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    char v31 = v73;
    sub_1A7573620();
    uint64_t v32 = sub_1A7573640();
    swift_allocError();
    uint64_t v34 = v33;
    uint64_t v35 = v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704508) + 48);
    sub_1A72B21AC((uint64_t)v30, v34);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v35, v31, v7);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x1E4FBBA68], v32);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v31, v7);
  }
  return result;
}

uint64_t sub_1A73595B8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1A74DAF88(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = sub_1A7571550();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_1A7573940();
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v10)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1A7359714(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v20 = a5;
  uint64_t v7 = sub_1A7573630();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A7571540();
  if (v11)
  {
    a3(v10);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1FD8);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1A75785A0;
    sub_1A72B21AC((uint64_t)a2, v13 + 32);
    unint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    unint64_t v21 = 0xD000000000000013;
    unint64_t v22 = 0x80000001A75A02F0;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1A7574240();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7573620();
    uint64_t v14 = sub_1A7573640();
    swift_allocError();
    uint64_t v16 = v15;
    uint64_t v17 = (char *)v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538) + 48);
    void *v16 = v20;
    uint64_t v18 = v23;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v17, v9, v7);
    (*(void (**)(void *, void, uint64_t))(*(void *)(v14 - 8) + 104))(v16, *MEMORY[0x1E4FBBA80], v14);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v9, v7);
  }
}

uint64_t sub_1A7359998()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_1A73599D0()
{
  return sub_1A7573A90();
}

uint64_t sub_1A7359A5C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t sub_1A7359AA4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A7359AB0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A7359ABC()
{
  return sub_1A73599D0();
}

uint64_t sub_1A7359AE0(uint64_t a1, uint64_t a2)
{
  return sub_1A7359B40(a1, a2, 0xD000000000000010, 0x80000001A75A0230);
}

uint64_t sub_1A7359B10(uint64_t a1, uint64_t a2)
{
  return sub_1A7359B40(a1, a2, 0xD000000000000014, 0x80000001A75A0210);
}

uint64_t sub_1A7359B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A7359B9C();
  swift_allocError();
  *unint64_t v6 = a3;
  v6[1] = a4;
  return swift_willThrow();
}

unint64_t sub_1A7359B9C()
{
  unint64_t result = qword_1E96F1F50[0];
  if (!qword_1E96F1F50[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96F1F50);
  }
  return result;
}

uint64_t type metadata accessor for InternalKeyedContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A7359C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

ValueMetadata *type metadata accessor for URLQueryItemDecodingError()
{
  return &type metadata for URLQueryItemDecodingError;
}

uint64_t sub_1A7359C20(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_1A7359C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v10[3] = a3;
  v10[4] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_0, a1, a3);
  char v8 = sub_1A73586A8(v10, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v8 & 1;
}

uint64_t sub_1A7359CCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v34 = a8;
  uint64_t v35 = a3;
  uint64_t v14 = sub_1A7573630();
  uint64_t v32 = *(void *)(v14 - 8);
  uint64_t v33 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_conformsToProtocol2();
  if (v17) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = 0;
  }
  if (v17) {
    uint64_t v19 = a1;
  }
  else {
    uint64_t v19 = 0;
  }
  if (v19)
  {
    v36[3] = a4;
    v36[4] = a6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
    uint64_t v21 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_0, a2, a4);
    MEMORY[0x1F4188790](v21);
    *(&v31 - 6) = a4;
    *(&v31 - 5) = a5;
    *(&v31 - 4) = a6;
    *(&v31 - 3) = a7;
    *(&v31 - 2) = v19;
    *(&v31 - 1) = v18;
    v37[2] = a5;
    v37[3] = v36;
    v37[4] = sub_1A735AC20;
    v37[5] = &v31 - 8;
    sub_1A7358D80(v36, (void (*)(char *))sub_1A735AC30, (uint64_t)v37, a5, v34);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1FD8);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1A75785A0;
    *(void *)(v23 + 56) = a4;
    *(void *)(v23 + 64) = a6;
    uint64_t v24 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v23 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v24, a2, a4);
    v37[0] = 0;
    v37[1] = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    sub_1A7573D80();
    sub_1A7572740();
    sub_1A7574270();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7573620();
    uint64_t v25 = sub_1A7573640();
    swift_allocError();
    uint64_t v27 = v26;
    char v28 = (char *)v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538) + 48);
    *uint64_t v27 = a1;
    uint64_t v30 = v32;
    uint64_t v29 = v33;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v28, v16, v33);
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x1E4FBBA70], v25);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v16, v29);
  }
}

uint64_t sub_1A735A058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v22 = a6;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8);
  uint64_t v12 = sub_1A7573210();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - v14;
  swift_bridgeObjectRetain();
  v11(a1, a2, a3, a4);
  uint64_t v16 = *(void *)(a3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v25 = 0;
    long long v23 = 0u;
    long long v24 = 0u;
  }
  else
  {
    *((void *)&v24 + 1) = a3;
    uint64_t v25 = a4;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v23);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_0, v15, a3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1FE0);
  uint64_t v18 = v22;
  int v19 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a5 - 8) + 56))(v18, v19 ^ 1u, 1, a5);
}

uint64_t sub_1A735A25C()
{
  sub_1A7359B9C();
  swift_allocError();
  *uint64_t v0 = 0x6F4364657473656ELL;
  v0[1] = 0xEF72656E6961746ELL;
  return swift_willThrow();
}

uint64_t sub_1A735A2C8()
{
  sub_1A7359B9C();
  swift_allocError();
  strcpy(v0, "superDecoder");
  v0[13] = 0;
  *((_WORD *)v0 + 7) = -5120;
  return swift_willThrow();
}

uint64_t sub_1A735A330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1A7359B9C();
  swift_allocError();
  void *v8 = a5;
  v8[1] = a6;
  return swift_willThrow();
}

uint64_t sub_1A735A38C()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1A735A398()
{
  return sub_1A735AE6C();
}

uint64_t sub_1A735A3A4(uint64_t a1, uint64_t a2)
{
  return sub_1A7359C28(a1, *v2, *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_1A735A3B4(uint64_t a1, uint64_t a2)
{
  return sub_1A7359C2C(a1, *v2, *(void *)(a2 + 16), *(void *)(a2 + 24)) & 1;
}

uint64_t sub_1A735A3DC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A7359CCC(MEMORY[0x1E4FBB1A0], a1, *v2, *(void *)(a2 + 16), MEMORY[0x1E4FBB1A0], *(void *)(a2 + 24), MEMORY[0x1E4FBB1D8], (uint64_t)&v5);
  if (!v3) {
    return v5;
  }
  return result;
}

double sub_1A735A430(uint64_t a1, uint64_t a2)
{
  sub_1A7359CCC(MEMORY[0x1E4FBB3D0], a1, *v2, *(void *)(a2 + 16), MEMORY[0x1E4FBB3D0], *(void *)(a2 + 24), MEMORY[0x1E4FBB408], (uint64_t)&v5);
  if (!v3) {
    return v5;
  }
  return result;
}

float sub_1A735A484(uint64_t a1, uint64_t a2)
{
  sub_1A7359CCC(MEMORY[0x1E4FBB470], a1, *v2, *(void *)(a2 + 16), MEMORY[0x1E4FBB470], *(void *)(a2 + 24), MEMORY[0x1E4FBB4A8], (uint64_t)&v5);
  if (!v3) {
    return v5;
  }
  return result;
}

uint64_t sub_1A735A4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735A764(a1, a2, a3, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB580]);
}

uint64_t sub_1A735A500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735A608(a1, a2, a3, MEMORY[0x1E4FBC098], MEMORY[0x1E4FBC0B8]);
}

uint64_t sub_1A735A528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735A67C(a1, a2, a3, MEMORY[0x1E4FBC0F8], MEMORY[0x1E4FBC118]);
}

uint64_t sub_1A735A550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735A6F0(a1, a2, a3, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBC180]);
}

uint64_t sub_1A735A578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735A764(a1, a2, a3, MEMORY[0x1E4FBC1C8], MEMORY[0x1E4FBC1F8]);
}

uint64_t sub_1A735A5A0()
{
  return sub_1A7573E90();
}

uint64_t sub_1A735A5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735A764(a1, a2, a3, MEMORY[0x1E4FBB808], MEMORY[0x1E4FBB838]);
}

uint64_t sub_1A735A5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735A608(a1, a2, a3, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBC380]);
}

uint64_t sub_1A735A608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1A7359CCC(a4, a1, *v5, *(void *)(a2 + 16), a4, *(void *)(a2 + 24), a5, (uint64_t)&v8);
  if (!v6) {
    return v8;
  }
  return result;
}

uint64_t sub_1A735A654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735A67C(a1, a2, a3, MEMORY[0x1E4FBC450], MEMORY[0x1E4FBC480]);
}

uint64_t sub_1A735A67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1A7359CCC(a4, a1, *v5, *(void *)(a2 + 16), a4, *(void *)(a2 + 24), a5, (uint64_t)&v8);
  if (!v6) {
    return v8;
  }
  return result;
}

uint64_t sub_1A735A6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735A6F0(a1, a2, a3, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC4F0]);
}

uint64_t sub_1A735A6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1A7359CCC(a4, a1, *v5, *(void *)(a2 + 16), a4, *(void *)(a2 + 24), a5, (uint64_t)&v8);
  if (!v6) {
    return v8;
  }
  return result;
}

uint64_t sub_1A735A73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735A764(a1, a2, a3, MEMORY[0x1E4FBC538], MEMORY[0x1E4FBC568]);
}

uint64_t sub_1A735A764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1A7359CCC(a4, a1, *v5, *(void *)(a2 + 16), a4, *(void *)(a2 + 24), a5, (uint64_t)&v8);
  if (!v6) {
    return v8;
  }
  return result;
}

uint64_t sub_1A735A7B0()
{
  return sub_1A7573EA0();
}

uint64_t sub_1A735A7C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1A7359CCC(a1, a2, *v6, *(void *)(a5 + 16), a3, *(void *)(a5 + 24), a4, a6);
}

uint64_t sub_1A735A7F4()
{
  return sub_1A7573E20();
}

uint64_t sub_1A735A80C()
{
  return sub_1A7573E10();
}

uint64_t sub_1A735A824()
{
  uint64_t result = sub_1A7573E30();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1A735A848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735AA74(a1, a2, a3, MEMORY[0x1E4FBBF60]);
}

uint64_t sub_1A735A874()
{
  uint64_t result = sub_1A7573E40();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1A735A898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735A9BC(a1, a2, a3, MEMORY[0x1E4FBBF78]);
}

uint64_t sub_1A735A8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735AA18(a1, a2, a3, MEMORY[0x1E4FBBF80]);
}

uint64_t sub_1A735A8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735AA74(a1, a2, a3, MEMORY[0x1E4FBBF88]);
}

uint64_t sub_1A735A91C()
{
  uint64_t result = sub_1A7573E70();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1A735A940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735AAFC(a1, a2, a3, MEMORY[0x1E4FBBFA0]);
}

uint64_t sub_1A735A96C()
{
  uint64_t result = sub_1A7573E50();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1A735A990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735A9BC(a1, a2, a3, MEMORY[0x1E4FBBF98]);
}

uint64_t sub_1A735A9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FF;
}

uint64_t sub_1A735A9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735AA18(a1, a2, a3, MEMORY[0x1E4FBBFA8]);
}

uint64_t sub_1A735AA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FFFF;
}

uint64_t sub_1A735AA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735AA74(a1, a2, a3, MEMORY[0x1E4FBBFB0]);
}

uint64_t sub_1A735AA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v4 = a4();
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

uint64_t sub_1A735AAAC()
{
  uint64_t result = sub_1A7573E80();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1A735AAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A735AAFC(a1, a2, a3, MEMORY[0x1E4FBBFC0]);
}

uint64_t sub_1A735AAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result = a4();
  if (v4) {
    return v6;
  }
  return result;
}

uint64_t sub_1A735AB28()
{
  return sub_1A7573E60();
}

uint64_t sub_1A735AB54()
{
  return sub_1A735A25C();
}

uint64_t sub_1A735AB80(uint64_t a1, uint64_t a2)
{
  return sub_1A735A330(a1, *v2, *(void *)(a2 + 16), *(void *)(a2 + 24), 0xD000000000000016, 0x80000001A75A0250);
}

uint64_t sub_1A735ABBC()
{
  return sub_1A735A2C8();
}

uint64_t sub_1A735ABE0(uint64_t a1, uint64_t a2)
{
  return sub_1A735A330(a1, *v2, *(void *)(a2 + 16), *(void *)(a2 + 24), 0x6365447265707573, 0xEC0000007265646FLL);
}

uint64_t sub_1A735AC20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A735A058(a1, a2, v3[6], v3[7], v3[3], a3);
}

uint64_t sub_1A735AC30(uint64_t a1)
{
  return sub_1A7359714(a1, *(void **)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16));
}

uint64_t sub_1A735AC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  swift_beginAccess();
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v21 = v5;
    uint64_t v10 = *(void *)(sub_1A7571550() - 8);
    uint64_t v11 = v8 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v12 = *(void *)(v10 + 72);
    v20[1] = v8;
    swift_bridgeObjectRetain();
    uint64_t v13 = v9 - 1;
    while (1)
    {
      uint64_t v14 = v13;
      uint64_t v15 = sub_1A7571530();
      uint64_t v17 = v16;
      if (v15 == sub_1A7574240() && v17 == v18) {
        break;
      }
      LOBYTE(v9) = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        uint64_t v13 = v14 - 1;
        v11 += v12;
        if (v14) {
          continue;
        }
      }
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v9) = 1;
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v5 = v21;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a3);
  return v9 & 1;
}

uint64_t sub_1A735AE6C()
{
  return sub_1A7572A80();
}

uint64_t URLQueryItemEncoder.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t URLQueryItemEncoder.init()()
{
  return v0;
}

uint64_t URLQueryItemEncoder.encode<A>(_:)()
{
  uint64_t v1 = type metadata accessor for InternalEncoder();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v3 = v2 + 16;
  v5[3] = v1;
  v5[4] = sub_1A735AFAC();
  v5[0] = v2;
  swift_retain();
  sub_1A75724F0();
  if (v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    swift_beginAccess();
    uint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v3;
}

uint64_t type metadata accessor for InternalEncoder()
{
  return self;
}

unint64_t sub_1A735AFAC()
{
  unint64_t result = qword_1E96F1FE8;
  if (!qword_1E96F1FE8)
  {
    type metadata accessor for InternalEncoder();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1FE8);
  }
  return result;
}

uint64_t URLQueryItemEncoder.deinit()
{
  return v0;
}

uint64_t URLQueryItemEncoder.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t type metadata accessor for URLQueryItemEncoder()
{
  return self;
}

uint64_t method lookup function for URLQueryItemEncoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for URLQueryItemEncoder);
}

uint64_t dispatch thunk of URLQueryItemEncoder.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1A735B06C()
{
  return sub_1A7573B90();
}

unint64_t sub_1A735B0EC()
{
  return sub_1A72B0DE0(MEMORY[0x1E4FBC860]);
}

uint64_t sub_1A735B0F8()
{
  return sub_1A735B06C();
}

uint64_t sub_1A735B11C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A735B18C(0xD000000000000010, 0x80000001A75A0230, (uint64_t)&type metadata for InvalidUnkeyedContanier, (uint64_t (*)(void))sub_1A735B2CC, a1);
}

uint64_t sub_1A735B154@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A735B18C(0xD000000000000014, 0x80000001A75A0210, (uint64_t)&type metadata for InvalidSingleValueContanier, (uint64_t (*)(void))sub_1A735B278, a1);
}

uint64_t sub_1A735B18C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t (*a4)(void)@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v11 = *v5;
  sub_1A735B224();
  uint64_t v12 = swift_allocError();
  *uint64_t v13 = a1;
  v13[1] = a2;
  a5[3] = a3;
  a5[4] = a4();
  *a5 = v12;
  a5[1] = v11;

  return swift_retain();
}

unint64_t sub_1A735B224()
{
  unint64_t result = qword_1E96F1FF0;
  if (!qword_1E96F1FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1FF0);
  }
  return result;
}

unint64_t sub_1A735B278()
{
  unint64_t result = qword_1E96F1FF8;
  if (!qword_1E96F1FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1FF8);
  }
  return result;
}

unint64_t sub_1A735B2CC()
{
  unint64_t result = qword_1E96F2000;
  if (!qword_1E96F2000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2000);
  }
  return result;
}

uint64_t _s19ReminderKitInternal22InternalKeyedContainerVMa_0()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for InvalidUnkeyedContanier()
{
  return &type metadata for InvalidUnkeyedContanier;
}

ValueMetadata *type metadata accessor for InvalidSingleValueContanier()
{
  return &type metadata for InvalidSingleValueContanier;
}

ValueMetadata *type metadata accessor for URLQueryItemEncodingError()
{
  return &type metadata for URLQueryItemEncodingError;
}

uint64_t sub_1A735B374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1A7571550();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v10 = v9;
  sub_1A7574240();
  sub_1A7571520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v10, v8, v4);
  uint64_t v11 = (unint64_t *)(a3 + 16);
  swift_beginAccess();
  unint64_t v12 = *(void *)(a3 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a3 + 16) = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v12 = sub_1A72ACF9C(0, *(void *)(v12 + 16) + 1, 1, v12);
    *uint64_t v11 = v12;
  }
  unint64_t v15 = *(void *)(v12 + 16);
  unint64_t v14 = *(void *)(v12 + 24);
  if (v15 >= v14 >> 1)
  {
    unint64_t v12 = sub_1A72ACF9C(v14 > 1, v15 + 1, 1, v12);
    *uint64_t v11 = v12;
  }
  *(void *)(v12 + 16) = v15 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v12+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v15, v10, v4);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1A735B5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v44 = a3;
  uint64_t v54 = sub_1A7573660();
  uint64_t v48 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  unint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A7571550();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v45 = v13;
  uint64_t v46 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v43 - v19;
  MEMORY[0x1F4188790](v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))((char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2008);
  if (swift_dynamicCast())
  {
    sub_1A735CEA4(v49, (uint64_t)v51);
    uint64_t v23 = v52;
    uint64_t v24 = v53;
    __swift_project_boxed_opaque_existential_1(v51, v52);
    uint64_t v25 = v47;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
    if (!v25)
    {
      sub_1A7574240();
      sub_1A7571520();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = v45;
      uint64_t v26 = v46;
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v17, v20, v45);
      uint64_t v28 = v44;
      uint64_t v29 = (unint64_t *)(v44 + 16);
      swift_beginAccess();
      unint64_t v30 = *(void *)(v28 + 16);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v28 + 16) = v30;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v30 = sub_1A72ACF9C(0, *(void *)(v30 + 16) + 1, 1, v30);
        unint64_t *v29 = v30;
      }
      unint64_t v33 = *(void *)(v30 + 16);
      unint64_t v32 = *(void *)(v30 + 24);
      if (v33 >= v32 >> 1)
      {
        unint64_t v30 = sub_1A72ACF9C(v32 > 1, v33 + 1, 1, v30);
        unint64_t *v29 = v30;
      }
      *(void *)(v30 + 16) = v33 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v30+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v33, v17, v27);
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v27);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  }
  else
  {
    uint64_t v50 = 0;
    memset(v49, 0, sizeof(v49));
    sub_1A735CE44((uint64_t)v49);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1FD8);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1A75785A0;
    *(void *)(v35 + 56) = a4;
    *(void *)(v35 + 64) = a6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v35 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_0, a2, a4);
    v51[0] = 0;
    v51[1] = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    sub_1A7573D80();
    sub_1A7572740();
    sub_1A7574270();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7573620();
    uint64_t v37 = sub_1A7573670();
    swift_allocError();
    uint64_t v39 = v38;
    id v40 = (char *)v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1E96F2018) + 48);
    v39[3] = swift_getMetatypeMetadata();
    *uint64_t v39 = a5;
    uint64_t v41 = v48;
    uint64_t v42 = v54;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v40, v12, v54);
    (*(void (**)(void *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v39, *MEMORY[0x1E4FBBAA0], v37);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v12, v42);
  }
}

uint64_t sub_1A735BB54()
{
  sub_1A735B224();
  swift_allocError();
  *uint64_t v0 = 0x6F4364657473656ELL;
  v0[1] = 0xEF72656E6961746ELL;
  type metadata accessor for InvalidKeyedContainer();
  swift_retain();
  swift_getWitnessTable();
  return sub_1A7573B90();
}

uint64_t sub_1A735BC24@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  sub_1A735B224();
  uint64_t v4 = swift_allocError();
  *uint64_t v5 = 0xD000000000000010;
  v5[1] = 0x80000001A75A0230;
  a2[3] = (uint64_t)&type metadata for InvalidUnkeyedContanier;
  a2[4] = sub_1A735B2CC();
  *a2 = v4;
  a2[1] = a1;

  return swift_retain();
}

uint64_t sub_1A735BCB8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  a2[3] = type metadata accessor for InternalEncoder();
  a2[4] = sub_1A735AFAC();
  *a2 = a1;

  return swift_retain();
}

uint64_t sub_1A735BD08@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  a2[3] = type metadata accessor for InternalEncoder();
  a2[4] = sub_1A735AFAC();
  *a2 = a1;

  return swift_retain();
}

uint64_t sub_1A735BD58(uint64_t a1, uint64_t a2)
{
  return sub_1A735B374(a1, a2, *v2);
}

uint64_t sub_1A735BD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v6[0] = a1;
  v6[1] = a2;
  return sub_1A735B5B8((uint64_t)v6, a3, *v4, *(void *)(a4 + 16), MEMORY[0x1E4FBB1A0], *(void *)(a4 + 24));
}

uint64_t sub_1A735BDC8(uint64_t a1, uint64_t a2, double a3)
{
  double v5 = a3;
  return sub_1A735B5B8((uint64_t)&v5, a1, *v3, *(void *)(a2 + 16), MEMORY[0x1E4FBB3D0], *(void *)(a2 + 24));
}

uint64_t sub_1A735BE10(uint64_t a1, uint64_t a2, float a3)
{
  float v5 = a3;
  return sub_1A735B5B8((uint64_t)&v5, a1, *v3, *(void *)(a2 + 16), MEMORY[0x1E4FBB470], *(void *)(a2 + 24));
}

uint64_t sub_1A735BE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735C0A8(a1, a2, a3, a4, MEMORY[0x1E4FBB550]);
}

uint64_t sub_1A735BE80(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735BF88(a1, a2, a3, a4, MEMORY[0x1E4FBC098]);
}

uint64_t sub_1A735BEA8(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735BFE8(a1, a2, a3, a4, MEMORY[0x1E4FBC0F8]);
}

uint64_t sub_1A735BED0(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735C048(a1, a2, a3, a4, MEMORY[0x1E4FBC150]);
}

uint64_t sub_1A735BEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735C0A8(a1, a2, a3, a4, MEMORY[0x1E4FBC1C8]);
}

uint64_t sub_1A735BF20()
{
  return sub_1A7573F60();
}

uint64_t sub_1A735BF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735C0A8(a1, a2, a3, a4, MEMORY[0x1E4FBB808]);
}

uint64_t sub_1A735BF60(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735BF88(a1, a2, a3, a4, MEMORY[0x1E4FBC358]);
}

uint64_t sub_1A735BF88(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v7 = a1;
  return sub_1A735B5B8((uint64_t)&v7, a2, *v5, *(void *)(a3 + 16), a5, *(void *)(a3 + 24));
}

uint64_t sub_1A735BFC0(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735BFE8(a1, a2, a3, a4, MEMORY[0x1E4FBC450]);
}

uint64_t sub_1A735BFE8(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v7 = a1;
  return sub_1A735B5B8((uint64_t)&v7, a2, *v5, *(void *)(a3 + 16), a5, *(void *)(a3 + 24));
}

uint64_t sub_1A735C020(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735C048(a1, a2, a3, a4, MEMORY[0x1E4FBC4C0]);
}

uint64_t sub_1A735C048(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v7 = a1;
  return sub_1A735B5B8((uint64_t)&v7, a2, *v5, *(void *)(a3 + 16), a5, *(void *)(a3 + 24));
}

uint64_t sub_1A735C080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735C0A8(a1, a2, a3, a4, MEMORY[0x1E4FBC538]);
}

uint64_t sub_1A735C0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a1;
  return sub_1A735B5B8((uint64_t)&v7, a2, *v5, *(void *)(a3 + 16), a5, *(void *)(a3 + 24));
}

uint64_t sub_1A735C0E0()
{
  return sub_1A7573F70();
}

uint64_t sub_1A735C0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A735B5B8(a1, a2, *v5, *(void *)(a5 + 16), a3, *(void *)(a5 + 24));
}

uint64_t sub_1A735C124()
{
  return sub_1A7573F50();
}

uint64_t sub_1A735C150()
{
  return sub_1A7573EC0();
}

uint64_t sub_1A735C168()
{
  return sub_1A7573EB0();
}

uint64_t sub_1A735C180()
{
  return sub_1A7573ED0();
}

uint64_t sub_1A735C19C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735C390(a1, a2, a3, a4, MEMORY[0x1E4FBBFF0]);
}

uint64_t sub_1A735C1C8()
{
  return sub_1A7573EE0();
}

uint64_t sub_1A735C1E4(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735C2E8(a1, a2, a3, a4, MEMORY[0x1E4FBC008]);
}

uint64_t sub_1A735C210(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735C33C(a1, a2, a3, a4, MEMORY[0x1E4FBC010]);
}

uint64_t sub_1A735C23C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735C390(a1, a2, a3, a4, MEMORY[0x1E4FBC018]);
}

uint64_t sub_1A735C268()
{
  return sub_1A7573F10();
}

uint64_t sub_1A735C284()
{
  return sub_1A7573F20();
}

uint64_t sub_1A735C2A0()
{
  return sub_1A7573EF0();
}

uint64_t sub_1A735C2BC(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735C2E8(a1, a2, a3, a4, MEMORY[0x1E4FBC028]);
}

uint64_t sub_1A735C2E8(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5(a1 & 0x1FF);
}

uint64_t sub_1A735C310(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735C33C(a1, a2, a3, a4, MEMORY[0x1E4FBC038]);
}

uint64_t sub_1A735C33C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5(a1 & 0x1FFFF);
}

uint64_t sub_1A735C364(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A735C390(a1, a2, a3, a4, MEMORY[0x1E4FBC040]);
}

uint64_t sub_1A735C390(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  return a5(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_1A735C3C0()
{
  return sub_1A7573F30();
}

uint64_t sub_1A735C3DC()
{
  return sub_1A7573F40();
}

uint64_t sub_1A735C3F8()
{
  return sub_1A7573F00();
}

uint64_t sub_1A735C424()
{
  return sub_1A735BB54();
}

uint64_t sub_1A735C43C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A735BC24(*v1, a1);
}

uint64_t sub_1A735C44C@<X0>(void *a1@<X8>)
{
  return sub_1A735BCB8(*v1, a1);
}

uint64_t sub_1A735C45C@<X0>(void *a1@<X8>)
{
  return sub_1A735BD08(*v1, a1);
}

uint64_t sub_1A735C46C()
{
  sub_1A735B224();
  swift_allocError();
  *uint64_t v0 = 0x6F4364657473656ELL;
  v0[1] = 0xEF72656E6961746ELL;
  type metadata accessor for InvalidKeyedContainer();
  swift_retain();
  swift_getWitnessTable();
  return sub_1A7573B90();
}

uint64_t sub_1A735C53C@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  sub_1A735B224();
  uint64_t v4 = swift_allocError();
  *float v5 = 0xD000000000000016;
  v5[1] = 0x80000001A75A0250;
  a2[3] = (uint64_t)&type metadata for InvalidUnkeyedContanier;
  a2[4] = sub_1A735B2CC();
  *a2 = v4;
  a2[1] = a1;

  return swift_retain();
}

uint64_t sub_1A735C5D0@<X0>(uint64_t a1@<X2>, void *a2@<X8>)
{
  a2[3] = type metadata accessor for InternalEncoder();
  a2[4] = sub_1A735AFAC();
  *a2 = a1;

  return swift_retain();
}

uint64_t sub_1A735C620()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C644()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C678()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C6A8()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C6DC()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C710()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C744()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C778()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C7AC()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C7E0()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C814()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C848()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C87C()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C8B0()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C8E4()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C918()
{
  return sub_1A735CFE0(*v0);
}

uint64_t sub_1A735C940()
{
  return sub_1A735C46C();
}

uint64_t sub_1A735C958@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A735C53C(*(void *)(v1 + 8), a1);
}

uint64_t sub_1A735C968@<X0>(void *a1@<X8>)
{
  return sub_1A735BD08(*(void *)(v1 + 8), a1);
}

uint64_t sub_1A735C978@<X0>(void *a1@<X8>)
{
  return sub_1A735C5D0(*(void *)(v1 + 8), a1);
}

uint64_t sub_1A735C988()
{
  return sub_1A735B06C();
}

uint64_t sub_1A735C9B4()
{
  return 0;
}

uint64_t sub_1A735C9BC()
{
  id v1 = *v0;
  return swift_willThrow();
}

uint64_t sub_1A735C9F0()
{
  return sub_1A735C9BC();
}

uint64_t sub_1A735CA08()
{
  return sub_1A7573D40();
}

uint64_t sub_1A735CA20()
{
  return sub_1A7573D50();
}

uint64_t sub_1A735CA38()
{
  return sub_1A7573C20();
}

uint64_t sub_1A735CA64()
{
  return sub_1A7573C50();
}

uint64_t sub_1A735CA90()
{
  return sub_1A7573C40();
}

uint64_t sub_1A735CABC()
{
  return sub_1A7573C60();
}

uint64_t sub_1A735CAE8()
{
  return sub_1A7573C70();
}

uint64_t sub_1A735CB14()
{
  return sub_1A7573C80();
}

uint64_t sub_1A735CB40()
{
  return sub_1A7573CA0();
}

uint64_t sub_1A735CB6C()
{
  return sub_1A7573CB0();
}

uint64_t sub_1A735CB98()
{
  return sub_1A7573CC0();
}

uint64_t sub_1A735CBC4()
{
  return sub_1A7573CD0();
}

uint64_t sub_1A735CBF0()
{
  return sub_1A7573CF0();
}

uint64_t sub_1A735CC1C()
{
  return sub_1A7573C90();
}

uint64_t sub_1A735CC48()
{
  return sub_1A7573CE0();
}

uint64_t sub_1A735CC74()
{
  return sub_1A7573D00();
}

uint64_t sub_1A735CCA0()
{
  return sub_1A7573D10();
}

uint64_t sub_1A735CCCC()
{
  return sub_1A7573D20();
}

uint64_t sub_1A735CCF8()
{
  return sub_1A7573D30();
}

uint64_t sub_1A735CD24()
{
  return sub_1A7573C30();
}

uint64_t sub_1A735CD58()
{
  return sub_1A735C988();
}

uint64_t sub_1A735CD68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v4;
  a3[1] = v5;
  id v6 = v4;

  return swift_retain();
}

uint64_t sub_1A735CDAC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  a1[3] = type metadata accessor for InternalEncoder();
  a1[4] = sub_1A735AFAC();
  *a1 = v3;

  return swift_retain();
}

uint64_t sub_1A735CDFC()
{
  return sub_1A7573DC0();
}

uint64_t sub_1A735CE14()
{
  return sub_1A7573DD0();
}

uint64_t type metadata accessor for InvalidKeyedContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A735CE44(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2010);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A735CEA4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t _s19ReminderKitInternal23InvalidUnkeyedContanierVwxx_0(id *a1)
{
  return swift_release();
}

void *_s19ReminderKitInternal23InvalidUnkeyedContanierVwCP_0(void *a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  id v5 = *(id *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = v4;
  a1[1] = v6;
  swift_retain();
  return a1;
}

uint64_t _s19ReminderKitInternal23InvalidUnkeyedContanierVwca_0(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  id v5 = *(id *)a2;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

id *_s19ReminderKitInternal23InvalidUnkeyedContanierVwta_0(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1A735CFE0(void *a1)
{
  id v1 = a1;
  return swift_willThrow();
}

uint64_t REMHashtagLabelSpecifier.Operation.description.getter()
{
  if (*v0) {
    return 6581857;
  }
  else {
    return 29295;
  }
}

uint64_t REMHashtagLabelSpecifier.Operation.rawValue.getter()
{
  if (*v0) {
    return 6581857;
  }
  else {
    return 29295;
  }
}

ReminderKitInternal::REMHashtagLabelSpecifier::Operation_optional __swiftcall REMHashtagLabelSpecifier.Operation.init(rawValue:)(Swift::String rawValue)
{
  long long v2 = v1;
  uint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *long long v2 = v5;
  return result;
}

uint64_t sub_1A735D0CC(char *a1, char *a2)
{
  return sub_1A7543AFC(*a1, *a2);
}

ReminderKitInternal::REMHashtagLabelSpecifier::Operation_optional sub_1A735D0D8(Swift::String *a1)
{
  return REMHashtagLabelSpecifier.Operation.init(rawValue:)(*a1);
}

void sub_1A735D0E4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 29295;
  if (*v1) {
    uint64_t v2 = 6581857;
  }
  unint64_t v3 = 0xE200000000000000;
  if (*v1) {
    unint64_t v3 = 0xE300000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A735D110()
{
  return sub_1A7574110();
}

uint64_t sub_1A735D180()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A735D1DC()
{
  return sub_1A7574110();
}

uint64_t sub_1A735D248()
{
  return sub_1A75729D0();
}

uint64_t sub_1A735D2A8()
{
  return sub_1A7572980();
}

uint64_t sub_1A735D2F8()
{
  if (*v0) {
    return 6581857;
  }
  else {
    return 29295;
  }
}

void sub_1A735D320()
{
  qword_1E96F20A0 = MEMORY[0x1E4FBC870];
  *(void *)algn_1E96F20A8 = MEMORY[0x1E4FBC870];
  byte_1E96F20B0 = 1;
}

unint64_t static REMHashtagLabelSpecifier.empty.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E96F0718 != -1) {
    swift_once();
  }
  unint64_t v2 = qword_1E96F20A0;
  uint64_t v3 = *(void *)algn_1E96F20A8;
  *(void *)a1 = qword_1E96F20A0;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = byte_1E96F20B0;

  return sub_1A735D3B8(v2);
}

unint64_t sub_1A735D3B8(unint64_t result)
{
  if (result >= 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t static REMHashtagLabelSpecifier.labels(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC870];
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 16) = 1;
  return swift_bridgeObjectRetain();
}

BOOL REMHashtagLabelSpecifier.isEmpty.getter()
{
  if (*v0 < 2uLL) {
    return 0;
  }
  if (*(void *)(*v0 + 16)) {
    return 0;
  }
  return *(void *)(v0[1] + 16) == 0;
}

unint64_t REMHashtagLabelSpecifier.addingLabel(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  char v7 = *(unsigned char *)(v3 + 16);
  if (*(void *)v3 >= 2uLL)
  {
    v7 &= 1u;
    unint64_t v12 = *(void *)v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A72DF384(&v11, a1, a2);
    unint64_t result = swift_bridgeObjectRelease();
    unint64_t v6 = v12;
  }
  else
  {
    unint64_t result = sub_1A735D3B8(*(void *)v3);
  }
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = v7;
  return result;
}

unint64_t REMHashtagLabelSpecifier.adjusted(toBeCompatibleWith:allowsLenientFallback:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if (!*(void *)(*(void *)a1 + 16))
  {
    if (qword_1E96F0718 != -1) {
      swift_once();
    }
    unint64_t v8 = qword_1E96F20A0;
    uint64_t v9 = *(void *)algn_1E96F20A8;
    *(void *)a3 = qword_1E96F20A0;
    *(void *)(a3 + 8) = v9;
    *(unsigned char *)(a3 + 16) = byte_1E96F20B0;
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)v3;
  uint64_t v6 = *(void *)(v3 + 8);
  char v7 = *(unsigned char *)(v3 + 16);
  if (*(void *)v3 < 2uLL)
  {
    *(void *)a3 = v5;
    *(void *)(a3 + 8) = v6;
    *(unsigned char *)(a3 + 16) = v7;
    unint64_t v8 = v5;
LABEL_7:
    return sub_1A735D3B8(v8);
  }
  if (*(void *)(v5 + 16) || *(void *)(v6 + 16))
  {
    char v11 = v7 & 1;
    if (a2)
    {
      char v21 = v7 & 1;
      MEMORY[0x1F4188790](a1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = MEMORY[0x1E4FBC870];
      uint64_t v13 = sub_1A735FF90(MEMORY[0x1E4FBC870], v5, (void (*)(uint64_t *__return_ptr, void *))sub_1A735F684);
      uint64_t v14 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v14);
      uint64_t v15 = sub_1A735FF90(v12, v6, (void (*)(uint64_t *__return_ptr, void *))sub_1A73601AC);
      unint64_t result = swift_bridgeObjectRelease();
      if (*(void *)(v13 + 16) || *(void *)(v15 + 16))
      {
        char v16 = v21;
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        uint64_t v13 = 0;
        uint64_t v15 = 0;
        char v16 = 0;
      }
      *(void *)a3 = v13;
      *(void *)(a3 + 8) = v15;
      *(unsigned char *)(a3 + 16) = v16;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v17 = swift_bridgeObjectRetain();
      uint64_t v18 = sub_1A735F4FC(v17, v5);
      swift_bridgeObjectRelease();
      uint64_t v19 = swift_bridgeObjectRetain();
      uint64_t v20 = sub_1A735F4FC(v19, v6);
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)a3 = v18;
      *(void *)(a3 + 8) = v20;
      *(unsigned char *)(a3 + 16) = v11;
    }
  }
  else
  {
    *(void *)a3 = v5;
    *(void *)(a3 + 8) = v6;
    *(unsigned char *)(a3 + 16) = v7;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A735D7B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v26[1] = a2;
  uint64_t v27 = a3;
  uint64_t v4 = sub_1A7571500();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
  *(void *)(inited + 32) = v11;
  *(void *)(inited + 40) = v12;
  uint64_t v33 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1A7571C80();
  uint64_t v14 = sub_1A7571D30();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  v32[0] = v11;
  v32[1] = v12;
  sub_1A72DF534();
  uint64_t v30 = sub_1A7573310();
  uint64_t v31 = v15;
  sub_1A75714D0();
  uint64_t v16 = sub_1A75732B0();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  sub_1A72DF588((uint64_t)v10);
  swift_bridgeObjectRetain();
  sub_1A72DF384(v32, v16, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = inited;
  uint64_t v29 = v33;
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_1A736C5C8(v19, sub_1A72E10DC);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1A72DA108(v20);
  uint64_t v23 = v22;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v25 = v27;
  *uint64_t v27 = v21;
  v25[1] = v23;
  return result;
}

uint64_t sub_1A735DA90@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v26[1] = a2;
  uint64_t v27 = a3;
  uint64_t v4 = sub_1A7571500();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
  *(void *)(inited + 32) = v11;
  *(void *)(inited + 40) = v12;
  uint64_t v33 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1A7571C80();
  uint64_t v14 = sub_1A7571D30();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  v32[0] = v11;
  v32[1] = v12;
  sub_1A72DF534();
  uint64_t v30 = sub_1A7573310();
  uint64_t v31 = v15;
  sub_1A75714D0();
  uint64_t v16 = sub_1A75732B0();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  sub_1A72DF588((uint64_t)v10);
  swift_bridgeObjectRetain();
  sub_1A72DF384(v32, v16, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = inited;
  uint64_t v29 = v33;
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_1A736C5C8(v19, sub_1A72DF5E8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1A72DA108(v20);
  uint64_t v23 = v22;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v25 = v27;
  *uint64_t v27 = v21;
  v25[1] = v23;
  return result;
}

uint64_t REMHashtagLabelSpecifier.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (!*v1 || v3 == 1) {
    return sub_1A75740D0();
  }
  uint64_t v5 = v1[1];
  sub_1A75740D0();
  sub_1A735FC74(a1, v3);
  sub_1A735FC74(a1, v5);
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t REMHashtagLabelSpecifier.hashValue.getter()
{
  unint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_1A75740C0();
  sub_1A75740D0();
  if (v2 > 1)
  {
    sub_1A735FC74((uint64_t)v4, v2);
    sub_1A735FC74((uint64_t)v4, v1);
    sub_1A75726F0();
    swift_bridgeObjectRelease();
  }
  return sub_1A7574110();
}

unint64_t sub_1A735DF04(char a1)
{
  unint64_t result = 1702060386;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x7274536C6562616CLL;
      break;
    case 4:
      unint64_t result = 0x6F6974617265706FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A735DFB0(char a1)
{
  unint64_t result = 1702060386;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x7274536C6562616CLL;
      break;
    case 4:
      unint64_t result = 0x6F6974617265706FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A735E060(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (!*v1 || v3 == 1) {
    return sub_1A75740D0();
  }
  uint64_t v5 = v1[1];
  sub_1A75740D0();
  sub_1A735FC74(a1, v3);
  sub_1A735FC74(a1, v5);
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A735E134()
{
  unint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_1A75740C0();
  sub_1A75740D0();
  if (v2 > 1)
  {
    sub_1A735FC74((uint64_t)v4, v2);
    sub_1A735FC74((uint64_t)v4, v1);
    sub_1A75726F0();
    swift_bridgeObjectRelease();
  }
  return sub_1A7574110();
}

uint64_t sub_1A735E1F4(unsigned __int8 *a1, char *a2)
{
  return sub_1A7543D28(*a1, *a2);
}

uint64_t sub_1A735E200()
{
  return sub_1A75016A8();
}

uint64_t sub_1A735E208()
{
  return sub_1A7502FA4();
}

uint64_t sub_1A735E210()
{
  return sub_1A7503784();
}

uint64_t sub_1A735E218@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A7360D48();
  *a1 = result;
  return result;
}

unint64_t sub_1A735E248@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1A735DF04(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1A735E274()
{
  return sub_1A735DFB0(*v0);
}

uint64_t sub_1A735E27C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A7360D48();
  *a1 = result;
  return result;
}

void sub_1A735E2A4(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1A735E2B0(uint64_t a1)
{
  unint64_t v2 = sub_1A73601C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A735E2EC(uint64_t a1)
{
  unint64_t v2 = sub_1A73601C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A735E328(unsigned __int8 *a1, char *a2)
{
  return sub_1A7543B90(*a1, *a2);
}

uint64_t sub_1A735E334()
{
  return sub_1A750179C();
}

uint64_t sub_1A735E33C()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A735E404()
{
  return sub_1A7503874();
}

uint64_t sub_1A735E40C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A7360DE8();
  *a1 = result;
  return result;
}

void sub_1A735E43C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000073;
  uint64_t v3 = 0x6C6562614C6C6C61;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x736C6562614C6F6ELL;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000019;
      a1[1] = 0x80000001A759DAE0;
      break;
    case 3:
      *a1 = 0x736C6562616CLL;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1A735E4DC()
{
  return sub_1A75729D0();
}

uint64_t sub_1A735E53C()
{
  return sub_1A7572980();
}

uint64_t REMHashtagLabelSpecifier.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F20B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73601C8();
  sub_1A7574190();
  if (!v2)
  {
    char v15 = 0;
    sub_1A736021C();
    sub_1A7573A50();
    switch((char)v14)
    {
      case 1:
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        uint64_t v10 = 0;
        char v11 = 0;
        uint64_t v9 = 1;
        break;
      case 2:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
        char v15 = 1;
        sub_1A7360318(&qword_1EB704C68);
        sub_1A7573A50();
        uint64_t v13 = v14;
        char v15 = 2;
        sub_1A7573A50();
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        char v15 = 4;
        sub_1A7360270();
        sub_1A7573A50();
        char v11 = v14;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        break;
      case 3:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
        char v15 = 3;
        sub_1A7360318(&qword_1EB704C68);
        sub_1A7573A50();
        uint64_t v9 = v14;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        char v11 = 1;
        uint64_t v10 = MEMORY[0x1E4FBC870];
        break;
      default:
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        char v11 = 0;
        break;
    }
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(unsigned char *)(a2 + 16) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t REMHashtagLabelSpecifier.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F20D8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  int v12 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73601C8();
  sub_1A75741B0();
  if (!v8)
  {
    LOBYTE(v11) = 0;
    goto LABEL_5;
  }
  if (v8 == 1)
  {
    LOBYTE(v11) = 1;
LABEL_5:
    char v13 = 0;
    sub_1A73602C4();
    goto LABEL_6;
  }
  LOBYTE(v11) = 2;
  char v13 = 0;
  sub_1A73602C4();
  sub_1A7573B60();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v11 = v8;
  char v13 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
  sub_1A7360318(&qword_1EB704C00);
  sub_1A7573B60();
  uint64_t v11 = v10;
  char v13 = 2;
  sub_1A7573B60();
  LOBYTE(v11) = v12 & 1;
  char v13 = 4;
  sub_1A736037C();
LABEL_6:
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A735EBE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMHashtagLabelSpecifier.init(from:)(a1, a2);
}

uint64_t sub_1A735EC00(void *a1)
{
  return REMHashtagLabelSpecifier.encode(to:)(a1);
}

uint64_t REMHashtagLabelSpecifier.description.getter()
{
  if (!*v0) {
    return 0x6C6562614C6C6C61;
  }
  if (*v0 == 1) {
    return 0x736C6562614C6F6ELL;
  }
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A72D1F58(v2);
  swift_bridgeObjectRelease();
  uint64_t v6 = v3;
  sub_1A735F1F8((uint64_t *)&v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A72E3500();
  sub_1A7572570();
  swift_release();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1A72D1F58(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5;
  sub_1A735F1F8((uint64_t *)&v6);
  sub_1A7572570();
  swift_release();
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  sub_1A7573560();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)0xD000000000000011;
  unint64_t v7 = 0x80000001A75A03F0;
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  return (uint64_t)v6;
}

uint64_t REMHashtagLabelSpecifier.init(stringRepresentation:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A7572660();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7572650();
  uint64_t v7 = sub_1A7572620();
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v9 >> 60 == 15)
  {
    uint64_t v10 = self;
    uint64_t v11 = (void *)sub_1A75725E0();
    objc_msgSend(v10, sel_internalErrorWithDebugDescription_, v11);

    return swift_willThrow();
  }
  else
  {
    sub_1A7571460();
    swift_allocObject();
    sub_1A7571450();
    sub_1A73603D0();
    sub_1A7571440();
    swift_release();
    uint64_t result = sub_1A7360424(v7, v9);
    if (!v1)
    {
      char v13 = v15;
      *(_OWORD *)a1 = v14;
      *(unsigned char *)(a1 + 16) = v13;
    }
  }
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> REMHashtagLabelSpecifier.stringRepresentation()()
{
  uint64_t v2 = sub_1A7572660();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  uint64_t v6 = v0[1];
  uint64_t v7 = (void *)*((unsigned __int8 *)v0 + 16);
  sub_1A75714B0();
  swift_allocObject();
  sub_1A75714A0();
  v18[1] = v5;
  void v18[2] = v6;
  char v19 = (char)v7;
  sub_1A7360438();
  uint64_t v8 = sub_1A7571490();
  if (!v1)
  {
    uint64_t v10 = v8;
    unint64_t v11 = v9;
    sub_1A7572650();
    uint64_t v12 = sub_1A7572630();
    if (v13)
    {
      uint64_t v4 = (char *)v12;
      uint64_t v7 = v13;
      sub_1A72E3460(v10, v11);
      swift_release();
      goto LABEL_5;
    }
    uint64_t v16 = self;
    uint64_t v4 = (char *)sub_1A75725E0();
    objc_msgSend(v16, sel_internalErrorWithDebugDescription_, v4);

    swift_willThrow();
    sub_1A72E3460(v10, v11);
  }
  swift_release();
LABEL_5:
  uint64_t v14 = (uint64_t)v4;
  char v15 = v7;
  result._object = v15;
  result._countAndFlagsBits = v14;
  return result;
}

uint64_t sub_1A735F1F8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A74F9DF0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1A7342378(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A735F264(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700DF0);
  uint64_t result = sub_1A7573510();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1A75740C0();
    swift_bridgeObjectRetain();
    sub_1A75726F0();
    uint64_t result = sub_1A7574110();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A735F4FC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1A735F6A0((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1A735F6A0((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x1AD0CD330](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1A735F684@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A735D7B4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1A735F6A0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  uint64_t v31 = *(void *)(a3 + 16);
  if (!v31)
  {
    uint64_t v26 = 0;
    goto LABEL_27;
  }
  uint64_t v32 = a4 + 56;
  uint64_t v30 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  for (uint64_t i = 0; i != v31; ++i)
  {
    uint64_t v7 = (uint64_t *)(v30 + 16 * i);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    sub_1A75740C0();
    swift_bridgeObjectRetain();
    sub_1A75726F0();
    uint64_t v10 = sub_1A7574110();
    uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v12 = v10 & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = 1 << v12;
    if (((1 << v12) & *(void *)(v32 + 8 * (v12 >> 6))) == 0) {
      goto LABEL_3;
    }
    uint64_t v15 = *(void *)(a4 + 48);
    uint64_t v16 = (void *)(v15 + 16 * v12);
    BOOL v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_1A7573DB0() & 1) == 0)
    {
      uint64_t v21 = ~v11;
      for (unint64_t j = v12 + 1; ; unint64_t j = v23 + 1)
      {
        unint64_t v23 = j & v21;
        if (((*(void *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0) {
          break;
        }
        char v24 = (void *)(v15 + 16 * v23);
        BOOL v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_1A7573DB0() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v13 = v23 >> 6;
          uint64_t v14 = 1 << v23;
          goto LABEL_12;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      continue;
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_12:
    unint64_t v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a2;
  uint64_t v26 = v28;
LABEL_27:
  swift_retain();
  return sub_1A735F264(a1, v5, v26, a4);
}

uint64_t sub_1A735F8B4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A7574110();
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v5++, 1)) {
      goto LABEL_19;
    }
    if (v5 >= v10) {
      return sub_1A75740D0();
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    if (!v12) {
      break;
    }
LABEL_16:
    uint64_t v9 = (v12 - 1) & v12;
LABEL_5:
    sub_1A75740C0();
    sub_1A75740D0();
    uint64_t result = sub_1A7574110();
    v4 ^= result;
  }
  int64_t v13 = v5 + 1;
  if (v5 + 1 >= v10) {
    return sub_1A75740D0();
  }
  uint64_t v12 = *(void *)(v6 + 8 * v13);
  if (v12)
  {
    ++v5;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v10) {
      return sub_1A75740D0();
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

void sub_1A735FA20(uint64_t a1, uint64_t a2)
{
  sub_1A7574110();
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A75733C0();
    sub_1A73484C0();
    sub_1A72D8FDC();
    sub_1A7572CD0();
    a2 = v21;
    uint64_t v3 = v22;
    uint64_t v4 = v23;
    int64_t v5 = v24;
    unint64_t v6 = v25;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v3 = a2 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v10 = 0;
  int64_t v11 = (unint64_t)(v4 + 64) >> 6;
  while (a2 < 0)
  {
    if (!sub_1A7573440()) {
      goto LABEL_26;
    }
    sub_1A73484C0();
    swift_dynamicCast();
    uint64_t v15 = v20;
    if (!v20) {
      goto LABEL_26;
    }
    int64_t v14 = v5;
    uint64_t v12 = v6;
LABEL_10:
    uint64_t v17 = sub_1A7573180();

    v10 ^= v17;
    int64_t v5 = v14;
    unint64_t v6 = v12;
  }
  if (v6)
  {
    uint64_t v12 = (v6 - 1) & v6;
    unint64_t v13 = __clz(__rbit64(v6)) | (v5 << 6);
    int64_t v14 = v5;
LABEL_9:
    uint64_t v15 = *(void **)(*(void *)(a2 + 48) + 8 * v13);
    uint64_t v20 = v15;
    id v16 = v15;
    if (!v15) {
      goto LABEL_26;
    }
    goto LABEL_10;
  }
  int64_t v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 >= v11) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v3 + 8 * v14);
    if (!v18)
    {
      int64_t v14 = v5 + 2;
      if (v5 + 2 >= v11) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v3 + 8 * v14);
      if (!v18)
      {
        int64_t v19 = v5 + 3;
        while (v11 != v19)
        {
          unint64_t v18 = *(void *)(v3 + 8 * v19++);
          if (v18)
          {
            int64_t v14 = v19 - 1;
            goto LABEL_22;
          }
        }
LABEL_26:
        sub_1A72D99A4();
        sub_1A75740D0();
        return;
      }
    }
LABEL_22:
    uint64_t v12 = (v18 - 1) & v18;
    unint64_t v13 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_1A735FC74(uint64_t a1, uint64_t a2)
{
  sub_1A7574110();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_1A75740D0();
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    if (!v13) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_5:
    sub_1A75740C0();
    swift_bridgeObjectRetain();
    sub_1A75726F0();
    uint64_t v11 = sub_1A7574110();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  int64_t v14 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t _s19ReminderKitInternal24REMHashtagLabelSpecifierO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  unint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  if (!*(void *)a1)
  {
    if (!v6)
    {
      unint64_t v3 = 0;
      char v8 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v3 == 1)
  {
    if (v6 == 1)
    {
      unint64_t v3 = 1;
      char v8 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v6 < 2)
  {
LABEL_8:
    sub_1A735D3B8(*(void *)a2);
    sub_1A735D3B8(v3);
LABEL_9:
    char v8 = 0;
    goto LABEL_10;
  }
  sub_1A735D3B8(*(void *)a2);
  sub_1A735D3B8(v3);
  if ((sub_1A72DD5F0(v3, v6) & 1) == 0 || (sub_1A72DD5F0(v2, v5) & 1) == 0) {
    goto LABEL_9;
  }
  if (v4) {
    uint64_t v10 = 6581857;
  }
  else {
    uint64_t v10 = 29295;
  }
  if (v4) {
    unint64_t v11 = 0xE300000000000000;
  }
  else {
    unint64_t v11 = 0xE200000000000000;
  }
  if (v7) {
    uint64_t v12 = 6581857;
  }
  else {
    uint64_t v12 = 29295;
  }
  if (v7) {
    unint64_t v13 = 0xE300000000000000;
  }
  else {
    unint64_t v13 = 0xE200000000000000;
  }
  if (v10 == v12 && v11 == v13)
  {
    swift_bridgeObjectRelease_n();
    char v8 = 1;
  }
  else
  {
    char v8 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_10:
  sub_1A7360E88(v3);
  sub_1A7360E88(v6);
  return v8 & 1;
}

uint64_t sub_1A735FF90(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, void *))
{
  uint64_t v23 = a1;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v19 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (v9) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v11++, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v11 >= v19) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v11);
  if (v15) {
    goto LABEL_19;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v19)
  {
LABEL_29:
    swift_release();
    return v23;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (!v15)
  {
    int64_t v16 = v11 + 2;
    if (v11 + 2 >= v19) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v16);
    if (!v15)
    {
      int64_t v16 = v11 + 3;
      if (v11 + 3 >= v19) {
        goto LABEL_29;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v11 + 4;
        if (v11 + 4 < v19)
        {
          unint64_t v15 = *(void *)(v6 + 8 * v16);
          if (v15) {
            goto LABEL_18;
          }
          while (1)
          {
            int64_t v11 = v16 + 1;
            if (__OFADD__(v16, 1)) {
              break;
            }
            if (v11 >= v19) {
              goto LABEL_29;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v11);
            ++v16;
            if (v15) {
              goto LABEL_19;
            }
          }
LABEL_31:
          __break(1u);
          return result;
        }
        goto LABEL_29;
      }
    }
  }
LABEL_18:
  int64_t v11 = v16;
LABEL_19:
  unint64_t v9 = (v15 - 1) & v15;
  for (unint64_t i = __clz(__rbit64(v15)) + (v11 << 6); ; unint64_t i = v12 | (v11 << 6))
  {
    uint64_t v17 = (void *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = v17[1];
    v22[0] = *v17;
    v22[1] = v18;
    swift_bridgeObjectRetain();
    a3(&v20, v22);
    if (v3) {
      break;
    }
    if (v21)
    {
      sub_1A72DF384(&v20, v20, v21);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v9) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      if (!v9) {
        goto LABEL_7;
      }
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A73601AC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A735DA90(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_1A73601C8()
{
  unint64_t result = qword_1E96F20C0;
  if (!qword_1E96F20C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F20C0);
  }
  return result;
}

unint64_t sub_1A736021C()
{
  unint64_t result = qword_1E96F20C8;
  if (!qword_1E96F20C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F20C8);
  }
  return result;
}

unint64_t sub_1A7360270()
{
  unint64_t result = qword_1E96F20D0;
  if (!qword_1E96F20D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F20D0);
  }
  return result;
}

unint64_t sub_1A73602C4()
{
  unint64_t result = qword_1E96F20E0;
  if (!qword_1E96F20E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F20E0);
  }
  return result;
}

uint64_t sub_1A7360318(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB705A10);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A736037C()
{
  unint64_t result = qword_1E96F20E8;
  if (!qword_1E96F20E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F20E8);
  }
  return result;
}

unint64_t sub_1A73603D0()
{
  unint64_t result = qword_1E96F20F0;
  if (!qword_1E96F20F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F20F0);
  }
  return result;
}

uint64_t sub_1A7360424(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1A72E3460(a1, a2);
  }
  return a1;
}

unint64_t sub_1A7360438()
{
  unint64_t result = qword_1E96F20F8;
  if (!qword_1E96F20F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F20F8);
  }
  return result;
}

unint64_t sub_1A7360490()
{
  unint64_t result = qword_1E96F2100;
  if (!qword_1E96F2100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2100);
  }
  return result;
}

unint64_t sub_1A73604E8()
{
  unint64_t result = qword_1E96F2108;
  if (!qword_1E96F2108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2108);
  }
  return result;
}

unint64_t destroy for REMHashtagLabelSpecifier(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19ReminderKitInternal24REMHashtagLabelSpecifierOwCP_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for REMHashtagLabelSpecifier(uint64_t a1, long long *a2)
{
  unint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v6 = *a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = v6;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  return a1;
}

uint64_t assignWithTake for REMHashtagLabelSpecifier(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMHashtagLabelSpecifier(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 17)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for REMHashtagLabelSpecifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1A7360800(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1A7360818(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    *(unsigned char *)(result + 16) = 0;
    *(void *)(result + 8) = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelSpecifier()
{
  return &type metadata for REMHashtagLabelSpecifier;
}

unsigned char *storeEnumTagSinglePayload for REMHashtagLabelSpecifier.Operation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7360918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelSpecifier.Operation()
{
  return &type metadata for REMHashtagLabelSpecifier.Operation;
}

unsigned char *storeEnumTagSinglePayload for REMHashtagLabelSpecifier.Base(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7360A1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelSpecifier.Base()
{
  return &type metadata for REMHashtagLabelSpecifier.Base;
}

uint64_t getEnumTagSinglePayload for REMHashtagLabelSpecifier.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for REMHashtagLabelSpecifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7360BB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelSpecifier.CodingKeys()
{
  return &type metadata for REMHashtagLabelSpecifier.CodingKeys;
}

unint64_t sub_1A7360BEC()
{
  unint64_t result = qword_1E96F2110;
  if (!qword_1E96F2110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2110);
  }
  return result;
}

unint64_t sub_1A7360C44()
{
  unint64_t result = qword_1E96F2118;
  if (!qword_1E96F2118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2118);
  }
  return result;
}

unint64_t sub_1A7360C9C()
{
  unint64_t result = qword_1E96F2120;
  if (!qword_1E96F2120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2120);
  }
  return result;
}

unint64_t sub_1A7360CF4()
{
  unint64_t result = qword_1E96F2128;
  if (!qword_1E96F2128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2128);
  }
  return result;
}

uint64_t sub_1A7360D48()
{
  unint64_t v0 = sub_1A7573970();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t sub_1A7360D94()
{
  unint64_t result = qword_1E96F2130;
  if (!qword_1E96F2130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2130);
  }
  return result;
}

uint64_t sub_1A7360DE8()
{
  unint64_t v0 = sub_1A7573970();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1A7360E34()
{
  unint64_t result = qword_1E96F2138;
  if (!qword_1E96F2138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2138);
  }
  return result;
}

unint64_t sub_1A7360E88(unint64_t result)
{
  if (result >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall REMChangeItemWithUnsavedSectionIDsOrdering.updateOrderingOfSections(withSectionIDsOrdering:)(Swift::OpaquePointer withSectionIDsOrdering)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 40);
  uint64_t v6 = swift_bridgeObjectRetain();
  v5(v6, v4, v3);
  BOOL v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);

  v7(1, v4, v3);
}

id sub_1A7360F4C()
{
  return objc_msgSend(v0, sel_shouldUpdateSectionsOrdering);
}

id sub_1A7360F70(char a1)
{
  return objc_msgSend(v1, sel_setShouldUpdateSectionsOrdering_, a1 & 1);
}

id (*sub_1A7360F84(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_shouldUpdateSectionsOrdering);
  return sub_1A7360FD8;
}

id sub_1A7360FD8(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setShouldUpdateSectionsOrdering_, *(unsigned __int8 *)(a1 + 8));
}

uint64_t (*sub_1A7360FF8(uint64_t **a1))()
{
  uint64_t v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_1A7361054(v2);
  return sub_1A7361050;
}

uint64_t (*sub_1A7361054(uint64_t *a1))()
{
  a1[1] = (uint64_t)v1;
  id v3 = objc_msgSend(v1, sel_unsavedSectionIDsOrdering);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1A73484C0();
    uint64_t v5 = sub_1A7572A10();
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a1 = v5;
  return sub_1A73610E4;
}

id (*sub_1A73610E8(uint64_t a1))(uint64_t)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_shouldUpdateSectionsOrdering);
  return sub_1A73613C4;
}

uint64_t sub_1A736113C()
{
  id v1 = objc_msgSend(v0, sel_unsavedSectionIDsOrdering);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_1A73484C0();
  uint64_t v3 = sub_1A7572A10();

  return v3;
}

void sub_1A73611A0(uint64_t a1)
{
  if (a1)
  {
    sub_1A73484C0();
    id v2 = (id)sub_1A7572A00();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v2 = 0;
  }
  objc_msgSend(v1, sel_setUnsavedSectionIDsOrdering_, v2);
}

void sub_1A736121C(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedSectionIDsOrdering.shouldUpdateSectionsOrdering.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedSectionIDsOrdering.shouldUpdateSectionsOrdering.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedSectionIDsOrdering.shouldUpdateSectionsOrdering.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedSectionIDsOrdering.unsavedSectionIDsOrdering.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedSectionIDsOrdering.unsavedSectionIDsOrdering.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedSectionIDsOrdering.unsavedSectionIDsOrdering.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

void sub_1A73612DC(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  if (a2)
  {
    if (v3)
    {
      sub_1A73484C0();
      swift_bridgeObjectRetain();
      id v4 = (id)sub_1A7572A00();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v4 = 0;
    }
    objc_msgSend((id)a1[1], sel_setUnsavedSectionIDsOrdering_, v4);
    swift_bridgeObjectRelease();
  }
  else if (v3)
  {
    sub_1A73484C0();
    id v4 = (id)sub_1A7572A00();
    swift_bridgeObjectRelease();
    objc_msgSend((id)a1[1], sel_setUnsavedSectionIDsOrdering_, v4);
  }
  else
  {
    id v4 = 0;
    objc_msgSend((id)a1[1], sel_setUnsavedSectionIDsOrdering_, 0);
  }
}

uint64_t REMBertTokenizer.__allocating_init(url:maxLen:asciiOnly:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = swift_allocObject();
  REMBertTokenizer.init(url:maxLen:asciiOnly:)(a1, a2, a3);
  return v6;
}

uint64_t REMBertTokenizer.init(url:maxLen:asciiOnly:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = v3;
  type metadata accessor for BasicTokenizer();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &unk_1EFC8FEA8;
  *(void *)(v3 + 16) = v9;
  uint64_t v10 = sub_1A75725D0();
  if (v4)
  {
    uint64_t v12 = sub_1A75719C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
    swift_release();
    swift_deallocPartialClassInstance();
    return v5;
  }
  uint64_t v13 = v10;
  unint64_t v14 = v11;
  uint64_t v68 = a2;
  int v69 = a3;
  uint64_t v71 = a1;
  uint64_t v72 = v3;
  v74[0] = 10;
  v74[1] = 0xE100000000000000;
  MEMORY[0x1F4188790](v10);
  v67[2] = v74;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1A732E7B8(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A7357E44, (uint64_t)v67, v13, v14);
  uint64_t v70 = 0;
  swift_bridgeObjectRelease();
  int64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    v74[0] = MEMORY[0x1E4FBC860];
    sub_1A72D2D00(0, v16, 0);
    uint64_t v17 = v74[0];
    uint64_t v18 = (uint64_t *)(v15 + 56);
    do
    {
      uint64_t v20 = *(v18 - 3);
      uint64_t v19 = *(v18 - 2);
      uint64_t v21 = *(v18 - 1);
      uint64_t v22 = *v18;
      swift_bridgeObjectRetain();
      uint64_t v23 = MEMORY[0x1AD0CA8A0](v20, v19, v21, v22);
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      v74[0] = v17;
      unint64_t v27 = *(void *)(v17 + 16);
      unint64_t v26 = *(void *)(v17 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1A72D2D00(v26 > 1, v27 + 1, 1);
        uint64_t v17 = v74[0];
      }
      *(void *)(v17 + 16) = v27 + 1;
      uint64_t v28 = v17 + 16 * v27;
      *(void *)(v28 + 32) = v23;
      *(void *)(v28 + 40) = v25;
      v18 += 4;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v30 = (void *)sub_1A72B0FE0(MEMORY[0x1E4FBC860]);
  uint64_t v31 = (void *)sub_1A72BF028(v29);
  uint64_t v73 = *(void *)(v17 + 16);
  v67[5] = v17;
  if (!v73)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    uint64_t v5 = v72;
    *(void *)(v72 + 48) = v30;
    *(void *)(v5 + 56) = v31;
    *(void *)(v5 + 32) = v68;
    *(unsigned char *)(v5 + 40) = v69 & 1;
    type metadata accessor for WordpieceTokenizer();
    uint64_t v63 = (void *)swift_allocObject();
    v63[2] = 0x5D4B4E555BLL;
    v63[3] = 0xE500000000000000;
    v63[4] = 100;
    v63[5] = v30;
    uint64_t v64 = sub_1A75719C0();
    uint64_t v65 = *(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8);
    swift_bridgeObjectRetain();
    v65(v71, v64);
    *(void *)(v5 + 24) = v63;
    return v5;
  }
  uint64_t v32 = v17;
  uint64_t v33 = 0;
  uint64_t v34 = (uint64_t *)(v32 + 40);
  while (1)
  {
    uint64_t v36 = *(v34 - 1);
    uint64_t v37 = *v34;
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v74[0] = v30;
    uint64_t v75 = v36;
    unint64_t v40 = sub_1A72B2210(v36, v37);
    uint64_t v41 = v30[2];
    BOOL v42 = (v39 & 1) == 0;
    uint64_t v43 = v41 + v42;
    if (__OFADD__(v41, v42)) {
      break;
    }
    char v44 = v39;
    if (v30[3] >= v43)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v30 = (void *)v74[0];
        if (v39) {
          goto LABEL_21;
        }
      }
      else
      {
        sub_1A72BB5E0();
        uint64_t v30 = (void *)v74[0];
        if (v44) {
          goto LABEL_21;
        }
      }
    }
    else
    {
      sub_1A72B5120(v43, isUniquelyReferenced_nonNull_native);
      unint64_t v45 = sub_1A72B2210(v75, v37);
      if ((v44 & 1) != (v46 & 1)) {
        goto LABEL_42;
      }
      unint64_t v40 = v45;
      uint64_t v30 = (void *)v74[0];
      if (v44)
      {
LABEL_21:
        *(void *)(v30[7] + 8 * v40) = v33;
        goto LABEL_25;
      }
    }
    v30[(v40 >> 6) + 8] |= 1 << v40;
    uint64_t v47 = (void *)(v30[6] + 16 * v40);
    void *v47 = v75;
    v47[1] = v37;
    *(void *)(v30[7] + 8 * v40) = v33;
    uint64_t v48 = v30[2];
    BOOL v49 = __OFADD__(v48, 1);
    uint64_t v50 = v48 + 1;
    if (v49) {
      goto LABEL_40;
    }
    v30[2] = v50;
    swift_bridgeObjectRetain();
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v51 = swift_isUniquelyReferenced_nonNull_native();
    v74[0] = v31;
    unint64_t v53 = sub_1A72B23E4(v33);
    uint64_t v54 = v31[2];
    BOOL v55 = (v52 & 1) == 0;
    uint64_t v56 = v54 + v55;
    if (__OFADD__(v54, v55)) {
      goto LABEL_39;
    }
    char v57 = v52;
    if (v31[3] >= v56)
    {
      if (v51)
      {
        uint64_t v31 = (void *)v74[0];
        if (v52) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_1A72BBEC0();
        uint64_t v31 = (void *)v74[0];
        if (v57) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_1A72B5D80(v56, v51);
      unint64_t v58 = sub_1A72B23E4(v33);
      if ((v57 & 1) != (v59 & 1)) {
        goto LABEL_43;
      }
      unint64_t v53 = v58;
      uint64_t v31 = (void *)v74[0];
      if (v57)
      {
LABEL_12:
        uint64_t v35 = (void *)(v31[7] + 16 * v53);
        swift_bridgeObjectRelease();
        void *v35 = v75;
        v35[1] = v37;
        goto LABEL_13;
      }
    }
    v31[(v53 >> 6) + 8] |= 1 << v53;
    *(void *)(v31[6] + 8 * v53) = v33;
    uint64_t v60 = (void *)(v31[7] + 16 * v53);
    void *v60 = v75;
    v60[1] = v37;
    uint64_t v61 = v31[2];
    BOOL v49 = __OFADD__(v61, 1);
    uint64_t v62 = v61 + 1;
    if (v49) {
      goto LABEL_41;
    }
    v31[2] = v62;
LABEL_13:
    ++v33;
    v34 += 2;
    swift_bridgeObjectRelease();
    if (v73 == v33) {
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  sub_1A7574010();
  __break(1u);
LABEL_43:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for BasicTokenizer()
{
  return self;
}

void *REMBertTokenizer.tokenize(text:addSpecialTokens:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void **)(v3 + 16);
  uint64_t v7 = sub_1A7361C50(a1, a2, *(unsigned char *)(v4 + 40));
  uint64_t v27 = *(void *)(v7 + 16);
  if (v27)
  {
    char v24 = a3;
    unint64_t v8 = 0;
    uint64_t v25 = v7 + 32;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v26 = v7;
    do
    {
      if (v8 >= *(void *)(v7 + 16))
      {
        __break(1u);
        goto LABEL_22;
      }
      uint64_t v10 = (uint64_t *)(v25 + 16 * v8);
      uint64_t v11 = *v10;
      int64_t v12 = v10[1];
      swift_bridgeObjectRetain();
      uint64_t v6 = (void *)sub_1A7361F7C(v11, v12);
      swift_bridgeObjectRelease();
      uint64_t v13 = v6[2];
      if (v13)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1A72AC148(0, v9[2] + 1, 1, v9);
        }
        unint64_t v14 = v6 + 5;
        do
        {
          uint64_t v16 = *(v14 - 1);
          uint64_t v15 = *v14;
          unint64_t v17 = v9[2];
          unint64_t v18 = v9[3];
          swift_bridgeObjectRetain();
          if (v17 >= v18 >> 1) {
            uint64_t v9 = sub_1A72AC148((void *)(v18 > 1), v17 + 1, 1, v9);
          }
          v14 += 2;
          void v9[2] = v17 + 1;
          uint64_t v19 = &v9[2 * v17];
          id v19[4] = v16;
          v19[5] = v15;
          --v13;
        }
        while (v13);
      }
      ++v8;
      swift_bridgeObjectRelease();
      uint64_t v7 = v26;
    }
    while (v8 != v27);
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_16;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    if (a3)
    {
LABEL_16:
      sub_1A72D0C70((uint64_t)v9);
      uint64_t v6 = &unk_1EFC8FF18;
      swift_bridgeObjectRetain();
      uint64_t v9 = &unk_1EFC8FF18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_22:
      }
        uint64_t v9 = sub_1A72AC148(0, v6[2] + 1, 1, v6);
      unint64_t v21 = v9[2];
      unint64_t v20 = v9[3];
      if (v21 >= v20 >> 1) {
        uint64_t v9 = sub_1A72AC148((void *)(v20 > 1), v21 + 1, 1, v9);
      }
      void v9[2] = v21 + 1;
      uint64_t v22 = &v9[2 * v21];
      v22[4] = 0x5D5045535BLL;
      v22[5] = 0xE500000000000000;
      swift_bridgeObjectRelease();
    }
  }
  return v9;
}

uint64_t sub_1A7361C50(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1A7571500();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v28[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  MEMORY[0x1F4188790](v12 - 8);
  unint64_t v14 = (char *)&v28[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v15 = sub_1A7571D30();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_1A72DF534();
  uint64_t v16 = sub_1A7573310();
  uint64_t v18 = v17;
  sub_1A72DF588((uint64_t)v14);
  if (a3)
  {
    uint64_t v30 = v16;
    uint64_t v31 = v18;
    strcpy((char *)v29, "[^\\p{ASCII}]+");
    HIWORD(v29[1]) = -4864;
    v28[0] = 32;
    v28[1] = 0xE100000000000000;
    uint64_t v16 = sub_1A75732C0();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v18 = v20;
  }
  uint64_t v30 = v16;
  uint64_t v31 = v18;
  id v21 = objc_msgSend(self, sel_whitespaceCharacterSet);
  sub_1A75714E0();

  uint64_t v22 = sub_1A7573280();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  v29[0] = MEMORY[0x1E4FBC860];
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain();
    char v24 = (uint64_t *)(v22 + 40);
    do
    {
      uint64_t v25 = *v24;
      uint64_t v30 = *(v24 - 1);
      uint64_t v31 = v25;
      swift_bridgeObjectRetain();
      sub_1A7362538((uint64_t)&v30, v4, v28);
      v24 += 2;
      swift_bridgeObjectRelease();
      sub_1A72D0C70(v28[0]);
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease_n();
    return v29[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
}

unint64_t sub_1A7361F7C(uint64_t a1, int64_t a2)
{
  uint64_t v3 = v2;
  if (sub_1A7572700() >= 101)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
    unint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1A75785A0;
    uint64_t v7 = *(void *)(v3 + 24);
    *(void *)(v6 + 32) = *(void *)(v3 + 16);
    *(void *)(v6 + 40) = v7;
    swift_bridgeObjectRetain();
    return v6;
  }
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v29 = MEMORY[0x1E4FBC860];
  if (sub_1A7572700() < 1)
  {
LABEL_20:
    sub_1A72D0C70((uint64_t)v8);
    return v29;
  }
  uint64_t v9 = sub_1A7572700();
  if (v9 >= 1)
  {
    uint64_t v10 = v9;
    uint64_t v11 = 0;
    uint64_t v12 = *(void *)(v2 + 40);
    uint64_t v28 = (void *)MEMORY[0x1E4FBC860];
    while (2)
    {
      unint64_t v13 = -v11;
      while (1)
      {
        unint64_t v6 = sub_1A7572730();
        unint64_t v14 = (unint64_t)sub_1A7572730() >> 14;
        if (v14 < v6 >> 14)
        {
          __break(1u);
          goto LABEL_26;
        }
        uint64_t v15 = sub_1A7572860();
        uint64_t v16 = MEMORY[0x1AD0CA8A0](v15);
        uint64_t v18 = v17;
        swift_bridgeObjectRelease();
        if (v11 >= 1)
        {
          sub_1A7572740();
          swift_bridgeObjectRelease();
          uint64_t v16 = 8995;
          uint64_t v18 = 0xE200000000000000;
        }
        if (*(void *)(v12 + 16))
        {
          swift_bridgeObjectRetain();
          sub_1A72B2210(v16, v18);
          char v20 = v19;
          swift_bridgeObjectRelease();
          if (v20) {
            break;
          }
        }
        swift_bridgeObjectRelease();
        if (v11 >= --v10) {
          goto LABEL_21;
        }
      }
      uint64_t v8 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1A72AC148(0, v28[2] + 1, 1, v28);
      }
      unint64_t v22 = v8[2];
      unint64_t v21 = v8[3];
      if (v22 >= v21 >> 1) {
        uint64_t v8 = sub_1A72AC148((void *)(v21 > 1), v22 + 1, 1, v8);
      }
      unint64_t v8[2] = v22 + 1;
      uint64_t v23 = &v8[2 * v22];
      v23[4] = v16;
      v23[5] = v18;
      if (v10 < sub_1A7572700())
      {
        uint64_t v28 = v8;
        uint64_t v24 = sub_1A7572700();
        uint64_t v11 = v10;
        BOOL v25 = v10 < v24;
        uint64_t v10 = v24;
        if (v25) {
          continue;
        }
LABEL_21:
        swift_bridgeObjectRelease();
        break;
      }
      goto LABEL_20;
    }
  }
  a1 = *(void *)(v3 + 16);
  uint64_t v3 = *(void *)(v3 + 24);
  swift_bridgeObjectRetain();
  unint64_t v6 = (unint64_t)sub_1A72AC148(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v13 = *(void *)(v6 + 16);
  unint64_t v14 = *(void *)(v6 + 24);
  a2 = v13 + 1;
  if (v13 >= v14 >> 1) {
LABEL_26:
  }
    unint64_t v6 = (unint64_t)sub_1A72AC148((void *)(v14 > 1), a2, 1, (void *)v6);
  *(void *)(v6 + 16) = a2;
  unint64_t v26 = v6 + 16 * v13;
  *(void *)(v26 + 32) = a1;
  *(void *)(v26 + 40) = v3;
  return v6;
}

uint64_t sub_1A7362268(uint64_t a1)
{
  if (*(void *)(v1 + 32) >= *(void *)(a1 + 16))
  {
    swift_retain();
    uint64_t v2 = sub_1A7362954(a1, v1);
    swift_release();
  }
  else
  {
    sub_1A7573560();
    sub_1A7572740();
    sub_1A7573BC0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7573BC0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    uint64_t v2 = 0xE000000000000000;
    sub_1A7362B00();
    swift_allocError();
    *(void *)uint64_t v3 = 0;
    *(void *)(v3 + 8) = 0xE000000000000000;
    *(unsigned char *)(v3 + 16) = 0;
    swift_willThrow();
  }
  return v2;
}

uint64_t REMBertTokenizer.tokenizeToIds(text:addSpecialTokens:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3 = REMBertTokenizer.tokenize(text:addSpecialTokens:)(a1, a2, a3);
  uint64_t v4 = sub_1A7362268((uint64_t)v3);
  swift_bridgeObjectRelease();
  return v4;
}

Swift::Int __swiftcall REMBertTokenizer.tokenToId(token:)(Swift::String token)
{
  uint64_t v2 = *(void *)(v1 + 48);
  if (*(void *)(v2 + 16))
  {
    object = token._object;
    uint64_t countAndFlagsBits = token._countAndFlagsBits;
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1A72B2210(countAndFlagsBits, (uint64_t)object);
    if (v6)
    {
      Swift::Int v7 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  else
  {
    __break(1u);
  }
  Swift::Int result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t REMBertTokenizer.deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMBertTokenizer.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 64, 7);
}

void *sub_1A7362538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v5 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  char v6 = *(void **)(a2 + 16);
  uint64_t v7 = v6[2];
  if (!v7) {
    goto LABEL_17;
  }
  BOOL v8 = (void *)v6[4] == v5 && v6[5] == v4;
  if (v8 || (sub_1A7573DB0() & 1) != 0)
  {
LABEL_7:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1A75785A0;
    *(void *)(v9 + 32) = v5;
    *(void *)(v9 + 40) = v4;
    *a3 = v9;
    return (void *)swift_bridgeObjectRetain();
  }
  if (v7 == 1)
  {
LABEL_17:
    sub_1A7572680();
    uint64_t v15 = sub_1A7572760();
    if (v16)
    {
      uint64_t v17 = v15;
      uint64_t v18 = v16;
      char v19 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        if ((sub_1A7572530() & 1) != 0
          || (sub_1A7572540() & 1) != 0
          || v17 == 45250 && v18 == 0xA200000000000000
          || (sub_1A7573DB0() & 1) != 0)
        {
          sub_1A7572740();
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v19 = sub_1A72AC148(0, v19[2] + 1, 1, v19);
          }
          unint64_t v22 = v19[2];
          unint64_t v21 = v19[3];
          unint64_t v23 = v22 + 1;
          if (v22 >= v21 >> 1)
          {
            BOOL v25 = sub_1A72AC148((void *)(v21 > 1), v22 + 1, 1, v19);
            unint64_t v23 = v22 + 1;
            char v19 = v25;
          }
          void v19[2] = v23;
          uint64_t v24 = &v19[2 * v22];
          v24[4] = v17;
          v24[5] = v18;
        }
        uint64_t v17 = sub_1A7572760();
        uint64_t v18 = v20;
      }
      while (v20);
    }
    else
    {
      char v19 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    Swift::Int result = (void *)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = v6 + 7;
    uint64_t v12 = 1;
    while (1)
    {
      uint64_t v13 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        break;
      }
      BOOL v14 = (void *)*(v11 - 1) == v5 && *v11 == v4;
      if (v14 || (sub_1A7573DB0() & 1) != 0) {
        goto LABEL_7;
      }
      v11 += 2;
      ++v12;
      if (v13 == v7) {
        goto LABEL_17;
      }
    }
    __break(1u);
    Swift::Int result = sub_1A72AC148(0, v5[2] + 1, 1, v5);
    char v19 = result;
    unint64_t v27 = result[2];
    unint64_t v26 = result[3];
    if (v27 >= v26 >> 1)
    {
      Swift::Int result = sub_1A72AC148((void *)(v26 > 1), v27 + 1, 1, result);
      char v19 = result;
    }
    void v19[2] = v27 + 1;
    uint64_t v28 = &v19[2 * v27];
    v28[4] = v11;
    v28[5] = v4;
  }
  *a3 = (uint64_t)v19;
  return result;
}

uint64_t sub_1A7362914()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 48, 7);
}

uint64_t sub_1A7362954(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1A72D2CD8(0, v2, 0);
  uint64_t v3 = v16;
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (*(void *)(v6 + 16))
  {
    uint64_t v8 = *(v7 - 1);
    uint64_t v9 = *v7;
    swift_bridgeObjectRetain_n();
    unint64_t v10 = sub_1A72B2210(v8, v9);
    if ((v11 & 1) == 0) {
      goto LABEL_10;
    }
    uint64_t v12 = *(void *)(*(void *)(v6 + 56) + 8 * v10);
    swift_bridgeObjectRelease_n();
    unint64_t v14 = *(void *)(v16 + 16);
    unint64_t v13 = *(void *)(v16 + 24);
    if (v14 >= v13 >> 1) {
      sub_1A72D2CD8(v13 > 1, v14 + 1, 1);
    }
    *(void *)(v16 + 16) = v14 + 1;
    *(void *)(v16 + 8 * v14 + 32) = v12;
    v7 += 2;
    if (!--v2) {
      return v3;
    }
  }
  __break(1u);
LABEL_10:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WordpieceTokenizer()
{
  return self;
}

uint64_t type metadata accessor for REMBertTokenizer()
{
  return self;
}

uint64_t method lookup function for REMBertTokenizer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMBertTokenizer);
}

uint64_t dispatch thunk of REMBertTokenizer.__allocating_init(url:maxLen:asciiOnly:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

unint64_t sub_1A7362B00()
{
  unint64_t result = qword_1E96F2140;
  if (!qword_1E96F2140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2140);
  }
  return result;
}

uint64_t sub_1A7362B58()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for REMBertTokenizerError()
{
  return sub_1A7362B70();
}

uint64_t sub_1A7362B70()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19ReminderKitInternal21REMBertTokenizerErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1A7362B58();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMBertTokenizerError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1A7362B58();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A7362B70();
  return a1;
}

uint64_t assignWithTake for REMBertTokenizerError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A7362B70();
  return a1;
}

ValueMetadata *type metadata accessor for REMBertTokenizerError()
{
  return &type metadata for REMBertTokenizerError;
}

char *REMSmartListCustomContextChangeItem.filter.getter()
{
  id v1 = objc_msgSend(v0, sel_smartListChangeItem);
  id v2 = objc_msgSend(v1, sel_filterData);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1A7571A20();
  unint64_t v5 = v4;

  id v6 = objc_msgSend(v0, sel_smartListChangeItem);
  id v7 = objc_msgSend(v6, sel_minimumSupportedVersion);

  BOOL v9 = v7 != (id)*MEMORY[0x1E4F95118] && v7 == (id)*MEMORY[0x1E4F95108];
  BOOL v11 = v9;
  return sub_1A73B9D80(v3, v5, (unsigned __int8 *)&v11);
}

void REMSmartListCustomContextChangeItem.filter.setter(void *a1)
{
  id v2 = v1;
  void v20[2] = *(id *)MEMORY[0x1E4F143B8];
  if (a1)
  {
    id v3 = a1;
    id v4 = objc_msgSend(v2, sel_smartListChangeItem);
    uint64_t v5 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
    BOOL v7 = v5 != *MEMORY[0x1E4F95118] && v5 == *MEMORY[0x1E4F95108];
    LOBYTE(v20[0]) = v7;
    sub_1A73B4DA8((unsigned __int8 *)v20);
    uint64_t v8 = self;
    BOOL v9 = (void *)sub_1A75723D0();
    swift_bridgeObjectRelease();
    v20[0] = 0;
    id v10 = objc_msgSend(v8, sel_dataWithJSONObject_options_error_, v9, 0, v20);

    id v11 = v20[0];
    if (v10)
    {
      uint64_t v12 = sub_1A7571A20();
      unint64_t v14 = v13;

      uint64_t v15 = (void *)sub_1A7571A00();
      sub_1A72E3460(v12, v14);
    }
    else
    {
      uint64_t v17 = v11;
      uint64_t v18 = (void *)sub_1A7571850();

      swift_willThrow();
      uint64_t v15 = 0;
    }
    objc_msgSend(v4, sel_setFilterData_, v15);

    id v16 = objc_msgSend(v2, sel_smartListChangeItem);
    objc_msgSend(v16, sel_setMinimumSupportedVersion_, REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter());
  }
  else
  {
    id v19 = objc_msgSend(v1, sel_smartListChangeItem);
    objc_msgSend(v19, sel_setFilterData_, 0);
  }
}

void (*REMSmartListCustomContextChangeItem.filter.modify(char **a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = REMSmartListCustomContextChangeItem.filter.getter();
  return sub_1A7363034;
}

void sub_1A7363034(void **a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    REMSmartListCustomContextChangeItem.filter.setter(v2);
  }
  else
  {
    REMSmartListCustomContextChangeItem.filter.setter(*a1);
  }
}

char *sub_1A736309C@<X0>(char **a1@<X8>)
{
  unint64_t result = REMSmartListCustomContextChangeItem.filter.getter();
  *a1 = result;
  return result;
}

void sub_1A73630C8(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  REMSmartListCustomContextChangeItem.filter.setter(v1);
}

uint64_t sub_1A73630F8(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1A73633D8(a1);
  return v2;
}

Swift::Void __swiftcall DeferredPromise.cancel()()
{
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    sub_1A72C7564();
    swift_release();
  }
  *(void *)(v0 + 24) = 0;

  swift_release();
}

uint64_t DeferredPromise.reject(_:)(void *a1)
{
  if (*(void *)(v1 + 24))
  {
    swift_retain();
    sub_1A72C74E8(a1);
    swift_release();
  }
  *(void *)(v1 + 24) = 0;

  return swift_release();
}

uint64_t DeferredPromise.resolve(_:)(uint64_t a1)
{
  if (*(void *)(v1 + 24))
  {
    swift_retain();
    sub_1A72C746C(a1);
    swift_release();
  }
  *(void *)(v1 + 24) = 0;

  return swift_release();
}

uint64_t DeferredPromise.promise.getter()
{
  return swift_retain();
}

uint64_t DeferredPromise.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  DeferredPromise.init()();
  return v0;
}

uint64_t DeferredPromise.init()()
{
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = 0;
  uint64_t v1 = (uint64_t *)(v0 + 16);
  type metadata accessor for Promise();
  type metadata accessor for UnfairLock();
  uint64_t v2 = swift_allocObject();
  id v3 = (_DWORD *)swift_slowAlloc();
  *(void *)(v2 + 16) = v3;
  *id v3 = 0;
  *(_DWORD *)(v2 + 24) = 0;
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  uint64_t v6 = v0;
  uint64_t v4 = sub_1A72C009C(v2, (void (*)(void))sub_1A736360C);
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *uint64_t v1 = v4;
  swift_release();
  return v6;
}

uint64_t sub_1A73633D8(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 16) = 0;
  type metadata accessor for Promise();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  uint64_t v4 = sub_1A72C009C(a1, (void (*)(void))sub_1A73635F0);
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *(void *)(v2 + 16) = v4;
  swift_release();
  return v2;
}

uint64_t sub_1A73634AC(uint64_t a1, uint64_t a2)
{
  swift_unownedRetainStrong();
  *(void *)(a2 + 24) = a1;
  swift_release();
  swift_retain();

  return swift_release();
}

uint64_t DeferredPromise.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t DeferredPromise.__deallocating_deinit()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t sub_1A7363568()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DeferredPromise()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for DeferredPromise(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DeferredPromise);
}

uint64_t dispatch thunk of DeferredPromise.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1A73635F0(uint64_t a1)
{
  return sub_1A73634AC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A7363610()
{
  type metadata accessor for Seal.Resolution();
  uint64_t result = sub_1A7573210();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A73636D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1A73640C4(a1, a2);
  return v4;
}

uint64_t sub_1A7363728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1A73642DC(a1, a2);
  return v4;
}

uint64_t sub_1A7363778(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1A7363FF0(a1);
  return v2;
}

uint64_t sub_1A73637B8(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = type metadata accessor for Seal.Resolution();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)&v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v1 + 24))
  {
    BOOL v9 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v1 + 24) = 1;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v7, a1, v3);
    swift_storeEnumTagMultiPayload();
    BOOL v9 = sub_1A73644C0((uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  v9();
  return swift_release();
}

uint64_t sub_1A7363940(void *a1)
{
  uint64_t v3 = type metadata accessor for Seal.Resolution();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v11 - v5);
  uint64_t v7 = *(void *)(v1 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v8 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v1 + 24) = 1;
    *uint64_t v6 = a1;
    swift_storeEnumTagMultiPayload();
    id v9 = a1;
    uint64_t v8 = sub_1A73644C0((uint64_t)v6);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  v8();
  return swift_release();
}

uint64_t sub_1A7363A9C()
{
  uint64_t v1 = type metadata accessor for Seal.Resolution();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v8 - v3;
  uint64_t v5 = *(void *)(v0 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v0 + 24))
  {
    uint64_t v6 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v0 + 24) = 1;
    swift_storeEnumTagMultiPayload();
    uint64_t v6 = sub_1A73644C0((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  v6();
  return swift_release();
}

uint64_t sub_1A7363BE0(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = *v9;
  uint64_t v16 = v9[2];
  os_unfair_lock_lock_with_options();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = *(void *)(v15 + 80);
  *(void *)(v17 + 24) = a1;
  *(void *)(v17 + 32) = a2;
  *(unsigned char *)(v17 + 40) = a3 & 1;
  *(void *)(v17 + 48) = a8;
  *(void *)(v17 + 56) = a9;
  *(void *)(v17 + 64) = a6;
  *(void *)(v17 + 72) = a7;
  *(void *)(v17 + 80) = a4;
  *(void *)(v17 + 88) = a5;
  id v18 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  id v19 = sub_1A7365544((uint64_t)sub_1A7367CA8, v17);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 16));
  v19();

  return swift_release();
}

uint64_t sub_1A7363D18(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A7363D58(a1, a2, a3, (uint64_t)&unk_1EFC99228, (uint64_t)sub_1A7367C44);
}

uint64_t sub_1A7363D38(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A7363D58(a1, a2, a3, (uint64_t)&unk_1EFC99200, (uint64_t)sub_1A7367BF4);
}

uint64_t sub_1A7363D58(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  uint64_t v11 = v5[2];
  os_unfair_lock_lock_with_options();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = *(void *)(v10 + 80);
  v12[3] = a1;
  v12[4] = a2;
  v12[5] = a3;
  id v13 = a1;
  swift_retain();
  unint64_t v14 = sub_1A7365544(a5, (uint64_t)v12);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  v14();

  return swift_release();
}

uint64_t sub_1A7363E30()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F2148);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F2148);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

BOOL sub_1A7363EF8(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1A7363F08()
{
  return sub_1A75740D0();
}

uint64_t sub_1A7363F30()
{
  return sub_1A7574110();
}

BOOL sub_1A7363F78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A7363EF8(*a1, *a2);
}

uint64_t sub_1A7363F88()
{
  return sub_1A7363F30();
}

uint64_t sub_1A7363F98()
{
  return sub_1A7363F08();
}

uint64_t sub_1A7363FA8()
{
  return sub_1A7574110();
}

uint64_t sub_1A7363FF0(uint64_t a1)
{
  type metadata accessor for Seal.Resolution();
  swift_getFunctionTypeMetadata1();
  *(void *)(v1 + 32) = sub_1A75723A0();
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 112);
  uint64_t v4 = swift_checkMetadataState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)(v1 + 16) = a1;
  *(unsigned char *)(v1 + 24) = 0;
  return v1;
}

uint64_t sub_1A73640C4(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = a2;
  uint64_t v4 = *(void *)(*(void *)v2 + 80);
  uint64_t v5 = type metadata accessor for Seal.Resolution();
  uint64_t v6 = sub_1A7573210();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v13 - v8;
  swift_getFunctionTypeMetadata1();
  *(void *)(v2 + 32) = sub_1A75723A0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v10(v2 + *(void *)(*(void *)v2 + 112), 1, 1, v5);
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = 1;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v9, v13, v4);
  swift_storeEnumTagMultiPayload();
  v10((uint64_t)v9, 0, 1, v5);
  uint64_t v11 = v2 + *(void *)(*(void *)v2 + 112);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v11, v9, v6);
  swift_endAccess();
  return v2;
}

uint64_t sub_1A73642DC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Seal.Resolution();
  uint64_t v6 = sub_1A7573210();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (uint64_t *)((char *)&v13 - v8);
  swift_getFunctionTypeMetadata1();
  *(void *)(v2 + 32) = sub_1A75723A0();
  uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v10((void *)(v2 + *(void *)(*(void *)v2 + 112)), 1, 1, v5);
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = 1;
  *id v9 = a2;
  swift_storeEnumTagMultiPayload();
  v10(v9, 0, 1, v5);
  uint64_t v11 = v2 + *(void *)(*(void *)v2 + 112);
  swift_beginAccess();
  (*(void (**)(uint64_t, void *, uint64_t))(v7 + 40))(v11, v9, v6);
  swift_endAccess();
  return v2;
}

uint64_t (*sub_1A73644C0(uint64_t a1))()
{
  uint64_t v18 = a1;
  uint64_t v21 = *(void *)(*v1 + 80);
  uint64_t v3 = type metadata accessor for Seal.Resolution();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v20 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  id v19 = (char *)&v18 - v5;
  uint64_t v6 = sub_1A7573210();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v18 - v8;
  uint64_t v10 = v1[2];
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v10 + 16));
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v11(v9, a1, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
  uint64_t v12 = (char *)v1 + *(void *)(*v1 + 112);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v12, v9, v6);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v13 = v1[4];
  swift_beginAccess();
  swift_getFunctionTypeMetadata1();
  sub_1A7572B30();
  swift_bridgeObjectRetain();
  sub_1A7572B20();
  swift_endAccess();
  unint64_t v14 = v19;
  v11(v19, v18, v3);
  unint64_t v15 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = v21;
  *((void *)v16 + 3) = v10;
  *((void *)v16 + 4) = v13;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v16[v15], v14, v3);
  swift_retain();
  return sub_1A7367B78;
}

void sub_1A73647BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void (*a7)(void, void), uint64_t a8, uint64_t (*a9)(void), uint64_t a10, uint64_t a11)
{
  uint64_t v33 = a7;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v36 = a3;
  uint64_t v37 = a2;
  uint64_t v14 = *(void *)(a11 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  id v19 = (char *)&v32 - v18;
  uint64_t v20 = type metadata accessor for Seal.Resolution();
  MEMORY[0x1F4188790](v20);
  unint64_t v22 = (void **)((char *)&v32 - v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)&v32 - v21, a1, v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      BOOL v25 = *v22;
      swift_retain();
      id v26 = v25;
      sub_1A7366E8C(v37, 0, 1, v33, a8, v25);

      swift_release();
    }
    else
    {
      sub_1A7364A90(v37, 0, 1, a9, a10);
    }
  }
  else
  {
    unint64_t v27 = *(void (**)(char *, void **, uint64_t))(v14 + 32);
    v27(v19, v22, a11);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, a11);
    unint64_t v28 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v29 = (char *)swift_allocObject();
    uint64_t v30 = v34;
    uint64_t v31 = v35;
    *((void *)v29 + 2) = a11;
    *((void *)v29 + 3) = v30;
    *((void *)v29 + 4) = v31;
    v27(&v29[v28], (void **)v17, a11);
    swift_retain();
    sub_1A7364A90(v37, v36, a4 & 1, sub_1A7367DAC, (uint64_t)v29);
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, a11);
  }
}

uint64_t sub_1A7364A90(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void), uint64_t a5)
{
  char v59 = a4;
  uint64_t v60 = a5;
  uint64_t v8 = sub_1A7572210();
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v56 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A7572260();
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v54 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A75721F0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_1A7572290();
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v52 - v22;
  if ((a3 & 1) != 0 || (double v24 = *(double *)&a2, *(double *)&a2 <= 0.0))
  {
    if (qword_1EB705720 != -1) {
      swift_once();
    }
    if (qword_1EB704C70 != a1)
    {
      if (qword_1EB704258 != -1) {
        swift_once();
      }
      if (qword_1EB703418 != a1)
      {
        uint64_t v66 = v59;
        uint64_t v67 = v60;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v63 = 1107296256;
        uint64_t v64 = sub_1A73322E4;
        uint64_t v65 = &block_descriptor_3;
        uint64_t v30 = _Block_copy(&aBlock);
        swift_retain();
        uint64_t v31 = v54;
        sub_1A7572240();
        uint64_t v61 = MEMORY[0x1E4FBC860];
        sub_1A732938C();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
        sub_1A73293E4();
        uint64_t v32 = v56;
        sub_1A7573380();
        MEMORY[0x1AD0CB2C0](0, v31, v10, v30);
        _Block_release(v30);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v32);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v58);
        return swift_release();
      }
      if (!objc_msgSend(self, sel_isMainThread))
      {
        sub_1A7366C4C();
        uint64_t v34 = (void *)sub_1A75730A0();
        uint64_t v66 = v59;
        uint64_t v67 = v60;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v63 = 1107296256;
        uint64_t v64 = sub_1A73322E4;
        uint64_t v65 = &block_descriptor_7;
        uint64_t v35 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        uint64_t v36 = v54;
        sub_1A7572240();
        uint64_t aBlock = MEMORY[0x1E4FBC860];
        sub_1A732938C();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
        sub_1A73293E4();
        uint64_t v37 = v56;
        sub_1A7573380();
        MEMORY[0x1AD0CB2C0](0, v36, v10, v35);
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v37);
        return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v36, v58);
      }
    }
    return v59();
  }
  if (qword_1EB704258 != -1)
  {
    uint64_t v50 = v21;
    swift_once();
    uint64_t v21 = v50;
  }
  if (qword_1EB703418 == a1)
  {
    uint64_t v38 = v21;
    sub_1A7366C4C();
    uint64_t v39 = sub_1A75730A0();
    sub_1A7572280();
    double v40 = v24 * 1000000.0;
    if ((~COERCE__INT64(v24 * 1000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v40 > -9.22337204e18)
      {
        unint64_t v53 = (void (*)(void, void))v39;
        if (v40 < 9.22337204e18)
        {
          void *v16 = (uint64_t)v40;
          (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCAB0], v13);
          MEMORY[0x1AD0CA4B0](v20, v16);
          (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
          uint64_t v41 = *(void (**)(char *, uint64_t))(v38 + 8);
          v41(v20, v17);
          uint64_t v66 = v59;
          uint64_t v67 = v60;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v63 = 1107296256;
          uint64_t v64 = sub_1A73322E4;
          uint64_t v65 = &block_descriptor_13_0;
          BOOL v42 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          uint64_t v43 = v54;
          sub_1A7572240();
          uint64_t aBlock = MEMORY[0x1E4FBC860];
          sub_1A732938C();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
          sub_1A73293E4();
          uint64_t v44 = v56;
          sub_1A7573380();
          unint64_t v45 = v53;
          MEMORY[0x1AD0CB250](v23, v43, v10, v42);
          _Block_release(v42);

          (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v44);
          (*(void (**)(char *, uint64_t))(v57 + 8))(v43, v58);
          return ((uint64_t (*)(char *, uint64_t))v41)(v23, v17);
        }
        goto LABEL_37;
      }
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (qword_1EB705720 != -1)
  {
    uint64_t v51 = v21;
    swift_once();
    uint64_t v21 = v51;
  }
  if (qword_1EB704C70 != a1)
  {
    uint64_t v25 = v21;
    sub_1A7572280();
    double v26 = v24 * 1000000.0;
    if ((~COERCE__INT64(v24 * 1000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v26 > -9.22337204e18)
      {
        if (v26 < 9.22337204e18)
        {
          void *v16 = (uint64_t)v26;
          (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCAB0], v13);
          MEMORY[0x1AD0CA4B0](v20, v16);
          (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
          unint64_t v53 = *(void (**)(void, void))(v25 + 8);
          v53(v20, v17);
          uint64_t v66 = v59;
          uint64_t v67 = v60;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v63 = 1107296256;
          uint64_t v64 = sub_1A73322E4;
          uint64_t v65 = &block_descriptor_10;
          unint64_t v27 = _Block_copy(&aBlock);
          swift_retain();
          unint64_t v28 = v54;
          sub_1A7572240();
          uint64_t v61 = MEMORY[0x1E4FBC860];
          sub_1A732938C();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
          sub_1A73293E4();
          uint64_t v29 = v56;
          sub_1A7573380();
          MEMORY[0x1AD0CB250](v23, v28, v10, v27);
          _Block_release(v27);
          (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v29);
          (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v58);
          v53(v23, v17);
          return swift_release();
        }
        goto LABEL_34;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (qword_1E96F0720 != -1) {
LABEL_38:
  }
    swift_once();
  uint64_t v46 = sub_1A7571E90();
  __swift_project_value_buffer(v46, (uint64_t)qword_1E96F2148);
  uint64_t v47 = sub_1A7571E80();
  os_log_type_t v48 = sub_1A7572FE0();
  if (os_log_type_enabled(v47, v48))
  {
    BOOL v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v49 = 0;
    _os_log_impl(&dword_1A72A1000, v47, v48, "Seal.invoke(on:afterDelay:block:) will not respect positive delay when input queue is zalgo", v49, 2u);
    MEMORY[0x1AD0CD330](v49, -1, -1);
  }

  return v59();
}

uint64_t (*sub_1A7365544(uint64_t a1, uint64_t a2))()
{
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v3 = *(void *)(*(void *)v2 + 80);
  uint64_t v4 = type metadata accessor for Seal.Resolution();
  uint64_t v5 = sub_1A7573210();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = *(void *)(v4 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v7);
  unint64_t v27 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = *(void *)(v2 + 16);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v15 + 16));
  if ((*(unsigned char *)(v2 + 24) & 1) == 0)
  {
    double v24 = (void *)swift_allocObject();
    uint64_t v25 = v28;
    uint64_t v26 = v29;
    void v24[2] = v3;
    void v24[3] = v25;
    v24[4] = v26;
    uint64_t v30 = sub_1A7366E64;
    uint64_t v31 = v24;
    swift_beginAccess();
    swift_getFunctionTypeMetadata1();
    sub_1A7572B30();
    swift_retain();
    sub_1A7572AE0();
    swift_endAccess();
    return nullsub_1;
  }
  uint64_t v16 = v2 + *(void *)(*(void *)v2 + 112);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v16, v5);
  uint64_t result = (uint64_t (*)())(*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4);
  if (result != 1)
  {
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v18(v14, v9, v4);
    uint64_t v19 = v27;
    v18(v27, v14, v4);
    unint64_t v20 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v21 = (char *)swift_allocObject();
    *((void *)v21 + 2) = v3;
    *((void *)v21 + 3) = v15;
    uint64_t v22 = v29;
    *((void *)v21 + 4) = v28;
    *((void *)v21 + 5) = v22;
    v18(&v21[v20], v19, v4);
    swift_retain();
    swift_retain();
    return sub_1A7366DA8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7365894(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Seal.Resolution();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v13 - v10, a1, v8);
  if (swift_getEnumCaseMultiPayload() > 1) {
    return sub_1A7364A90(a2, 0, 1, a3, a4);
  }
  else {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_1A73659C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(a1 + 16));
  type metadata accessor for Seal.Resolution();
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  uint64_t v6 = swift_bridgeObjectRetain();
  if (MEMORY[0x1AD0CAD00](v6, FunctionTypeMetadata1))
  {
    uint64_t v7 = 0;
    uint64_t v8 = a2 + 40;
    while (1)
    {
      char v9 = sub_1A7572AA0();
      sub_1A7572A50();
      if ((v9 & 1) == 0) {
        break;
      }
      uint64_t v10 = *(void (**)(uint64_t))(v8 - 8);
      uint64_t v11 = v7 + 1;
      BOOL v12 = __OFADD__(v7, 1);
      uint64_t result = swift_retain();
      if (v12) {
        goto LABEL_13;
      }
      v10(a3);
      swift_release();
      ++v7;
      v8 += 16;
      if (v11 == MEMORY[0x1AD0CAD00](a2, FunctionTypeMetadata1)) {
        goto LABEL_9;
      }
    }
    uint64_t result = sub_1A75735F0();
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
LABEL_9:
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A7365AF4()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  type metadata accessor for Seal.Resolution();
  uint64_t v2 = sub_1A7573210();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1A7365B98()
{
  sub_1A7365AF4();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t type metadata accessor for Seal()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for Seal.Resolution()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1A7365C20(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7365CECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for Seal.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A7365D2C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1A7365DC0(char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(char **)a2;
    *(void *)int v3 = *(void *)a2;
    int v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *(void *)a2;
      id v15 = *(id *)a2;
      *(void *)int v3 = v14;
      v3[v5] = 1;
    }
    else if (v9)
    {
      memcpy(__dst, a2, v5 + 1);
    }
    else
    {
      (*(void (**)(char *))(v4 + 16))(__dst);
      v3[v5] = 0;
    }
  }
  return v3;
}

void sub_1A7365F5C(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1)
  {
  }
  else if (!v3)
  {
    (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

unsigned char *sub_1A7366064(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *(void *)a2;
    id v11 = *(id *)a2;
    *(void *)__dst = v10;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

id *sub_1A73661C0(id *__dst, id *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)__dst + v7);
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *(unsigned __int8 *)__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v13 = *((unsigned __int8 *)__src + v7);
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *(unsigned __int8 *)__src;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      id v18 = *__src;
      id v19 = v18;
      char *__dst = v18;
      *((unsigned char *)__dst + v7) = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((unsigned char *)__dst + v7) = 0;
    }
  }
  return __dst;
}

unsigned char *sub_1A73663FC(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

id *sub_1A7366548(id *__dst, id *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)__dst + v7);
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *(unsigned __int8 *)__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v13 = *((unsigned __int8 *)__src + v7);
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *(unsigned __int8 *)__src;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      char *__dst = *__src;
      *((unsigned char *)__dst + v7) = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((unsigned char *)__dst + v7) = 0;
    }
  }
  return __dst;
}

uint64_t sub_1A736677C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_1A73668B0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1A7366A78);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1A7366AA0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1A7366B58(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1A7366C30()
{
  return swift_getWitnessTable();
}

unint64_t sub_1A7366C4C()
{
  unint64_t result = qword_1EB705908;
  if (!qword_1EB705908)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB705908);
  }
  return result;
}

uint64_t sub_1A7366C8C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for Seal.Resolution() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
  }
  else if (!EnumCaseMultiPayload)
  {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  }

  return swift_deallocObject();
}

uint64_t sub_1A7366DA8()
{
  uint64_t v1 = *(void *)(type metadata accessor for Seal.Resolution() - 8);
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(v2 + 16));
  return v3(v4);
}

uint64_t sub_1A7366E2C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7366E64()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1A7366E8C(uint64_t a1, uint64_t a2, char a3, void (*a4)(void, void), uint64_t a5, void *a6)
{
  uint64_t v12 = sub_1A7572210();
  uint64_t v69 = *(void *)(v12 - 8);
  uint64_t v70 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v67 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1A7572260();
  uint64_t v71 = *(void *)(v14 - 8);
  uint64_t v72 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v68 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1A75721F0();
  uint64_t v62 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  id v18 = (uint64_t *)((char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_1A7572290();
  uint64_t v63 = *(void *)(v19 - 8);
  uint64_t v64 = v19;
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v65 = (char *)&v61 - v23;
  double v24 = (void *)swift_allocObject();
  uint64_t v66 = a4;
  void v24[2] = a4;
  void v24[3] = a5;
  v24[4] = a6;
  if ((a3 & 1) == 0)
  {
    double v25 = *(double *)&a2;
    if (*(double *)&a2 > 0.0)
    {
      swift_retain();
      id v26 = a6;
      if (qword_1EB704258 != -1) {
        swift_once();
      }
      if (qword_1EB703418 == a1)
      {
        sub_1A7366C4C();
        uint64_t v45 = sub_1A75730A0();
        sub_1A7572280();
        double v46 = v25 * 1000000.0;
        if ((~COERCE__INT64(v25 * 1000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v46 > -9.22337204e18)
          {
            uint64_t v66 = (void (*)(void, void))v45;
            if (v46 < 9.22337204e18)
            {
              *id v18 = (uint64_t)v46;
              uint64_t v47 = v62;
              (*(void (**)(void *, void, uint64_t))(v62 + 104))(v18, *MEMORY[0x1E4FBCAB0], v16);
              MEMORY[0x1AD0CA4B0](v22, v18);
              (*(void (**)(void *, uint64_t))(v47 + 8))(v18, v16);
              uint64_t v48 = v64;
              BOOL v49 = *(void (**)(char *, uint64_t))(v63 + 8);
              v49(v22, v64);
              uint64_t v78 = sub_1A72C9D28;
              char v79 = v24;
              uint64_t aBlock = MEMORY[0x1E4F143A8];
              uint64_t v75 = 1107296256;
              unint64_t v76 = sub_1A73322E4;
              uint64_t v77 = &block_descriptor_31;
              uint64_t v50 = _Block_copy(&aBlock);
              swift_retain();
              swift_release();
              uint64_t v51 = v68;
              sub_1A7572240();
              uint64_t aBlock = MEMORY[0x1E4FBC860];
              sub_1A732938C();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
              sub_1A73293E4();
              uint64_t v52 = v67;
              uint64_t v53 = v70;
              sub_1A7573380();
              uint64_t v55 = v65;
              uint64_t v54 = v66;
              MEMORY[0x1AD0CB250](v65, v51, v52, v50);
              _Block_release(v50);

              (*(void (**)(char *, uint64_t))(v69 + 8))(v52, v53);
              (*(void (**)(char *, uint64_t))(v71 + 8))(v51, v72);
              v49(v55, v48);
              return swift_release();
            }
            goto LABEL_39;
          }
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      if (qword_1EB705720 != -1) {
        swift_once();
      }
      if (qword_1EB704C70 == a1)
      {
        if (qword_1E96F0720 == -1)
        {
LABEL_28:
          uint64_t v56 = sub_1A7571E90();
          __swift_project_value_buffer(v56, (uint64_t)qword_1E96F2148);
          uint64_t v57 = sub_1A7571E80();
          os_log_type_t v58 = sub_1A7572FE0();
          if (os_log_type_enabled(v57, v58))
          {
            char v59 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v59 = 0;
            _os_log_impl(&dword_1A72A1000, v57, v58, "Seal.invoke(on:afterDelay:block:) will not respect positive delay when input queue is zalgo", v59, 2u);
            MEMORY[0x1AD0CD330](v59, -1, -1);
          }

          goto LABEL_31;
        }
LABEL_40:
        swift_once();
        goto LABEL_28;
      }
      sub_1A7572280();
      double v27 = *(double *)&a2 * 1000000.0;
      if ((~COERCE__INT64(*(double *)&a2 * 1000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v27 > -9.22337204e18)
        {
          if (v27 < 9.22337204e18)
          {
            *id v18 = (uint64_t)v27;
            uint64_t v28 = v62;
            (*(void (**)(void *, void, uint64_t))(v62 + 104))(v18, *MEMORY[0x1E4FBCAB0], v16);
            MEMORY[0x1AD0CA4B0](v22, v18);
            (*(void (**)(void *, uint64_t))(v28 + 8))(v18, v16);
            uint64_t v29 = v64;
            uint64_t v66 = *(void (**)(void, void))(v63 + 8);
            v66(v22, v64);
            uint64_t v78 = sub_1A72C9D28;
            char v79 = v24;
            uint64_t aBlock = MEMORY[0x1E4F143A8];
            uint64_t v75 = 1107296256;
            unint64_t v76 = sub_1A73322E4;
            uint64_t v77 = &block_descriptor_28;
            uint64_t v30 = _Block_copy(&aBlock);
            swift_retain();
            uint64_t v31 = v68;
            sub_1A7572240();
            uint64_t v73 = MEMORY[0x1E4FBC860];
            sub_1A732938C();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
            sub_1A73293E4();
            uint64_t v32 = v67;
            uint64_t v33 = v70;
            sub_1A7573380();
            uint64_t v34 = v65;
            MEMORY[0x1AD0CB250](v65, v31, v32, v30);
            _Block_release(v30);
            (*(void (**)(char *, uint64_t))(v69 + 8))(v32, v33);
            (*(void (**)(char *, uint64_t))(v71 + 8))(v31, v72);
            v66(v34, v29);
LABEL_20:
            swift_release();
            return swift_release();
          }
          goto LABEL_36;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
  }
  swift_retain();
  id v35 = a6;
  if (qword_1EB705720 != -1) {
    swift_once();
  }
  if (qword_1EB704C70 != a1)
  {
    if (qword_1EB704258 != -1) {
      swift_once();
    }
    if (qword_1EB703418 != a1)
    {
      uint64_t v78 = sub_1A72C9D28;
      char v79 = v24;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v75 = 1107296256;
      unint64_t v76 = sub_1A73322E4;
      uint64_t v77 = &block_descriptor_22;
      uint64_t v36 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v37 = v68;
      sub_1A7572240();
      uint64_t v73 = MEMORY[0x1E4FBC860];
      sub_1A732938C();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
      sub_1A73293E4();
      uint64_t v38 = v67;
      uint64_t v39 = v70;
      sub_1A7573380();
      MEMORY[0x1AD0CB2C0](0, v37, v38, v36);
      _Block_release(v36);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v39);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v37, v72);
      goto LABEL_20;
    }
    if ((objc_msgSend(self, sel_isMainThread) & 1) == 0)
    {
      sub_1A7366C4C();
      double v40 = (void *)sub_1A75730A0();
      uint64_t v78 = sub_1A72C9D28;
      char v79 = v24;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v75 = 1107296256;
      unint64_t v76 = sub_1A73322E4;
      uint64_t v77 = &block_descriptor_25_0;
      uint64_t v41 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      BOOL v42 = v68;
      sub_1A7572240();
      uint64_t aBlock = MEMORY[0x1E4FBC860];
      sub_1A732938C();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
      sub_1A73293E4();
      uint64_t v43 = v67;
      uint64_t v44 = v70;
      sub_1A7573380();
      MEMORY[0x1AD0CB2C0](0, v42, v43, v41);
      _Block_release(v41);

      (*(void (**)(char *, uint64_t))(v69 + 8))(v43, v44);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v42, v72);
      return swift_release();
    }
  }
LABEL_31:
  ((void (*)(void *))v66)(a6);

  return swift_release();
}

uint64_t sub_1A7367A1C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7367A5C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for Seal.Resolution() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
  }
  else if (!EnumCaseMultiPayload)
  {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  }

  return swift_deallocObject();
}

uint64_t sub_1A7367B78()
{
  uint64_t v1 = *(void *)(type metadata accessor for Seal.Resolution() - 8);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1A73659C0(v2, v3, v4);
}

uint64_t sub_1A7367BF4(uint64_t a1)
{
  return sub_1A7365894(a1, *(void *)(v1 + 24), *(uint64_t (**)(void))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t objectdestroy_36Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7367C44()
{
  return sub_1A7364A90(*(void *)(v0 + 24), 0, 1, *(uint64_t (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1A7367C58()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1A7367CA8(uint64_t a1)
{
  sub_1A73647BC(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void (**)(void, void))(v1 + 64), *(void *)(v1 + 72), *(uint64_t (**)(void))(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 16));
}

uint64_t sub_1A7367CE8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1A7367DAC()
{
  return (*(uint64_t (**)(unint64_t))(v0 + 24))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
}

uint64_t Sequence.mapToSet<A>(_:)()
{
  return sub_1A7368554();
}

uint64_t Sequence<>.filterToSet(_:)()
{
  return Sequence.compactMapToSet<A>(_:)();
}

uint64_t Sequence.completeCompactMap<A>(_:)(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v8 = sub_1A7573210();
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v41 = (char *)&v38 - v10;
  double v46 = *(void (***)(char *, uint64_t))(a4 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v52 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v51 = (char *)&v38 - v13;
  uint64_t v55 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v17 = (char *)&v38 - v16;
  uint64_t v18 = sub_1A7573210();
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v57 = (char *)&v38 - v20;
  uint64_t v21 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v42 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  id v26 = (char *)&v38 - v25;
  uint64_t v59 = sub_1A75723A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v56, a3);
  sub_1A7572870();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v28 = v57;
  uint64_t v55 = v26;
  uint64_t v56 = v24;
  uint64_t v50 = AssociatedConformanceWitness;
  sub_1A7573230();
  uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v49 = v15 + 48;
  if (v48(v28, 1, AssociatedTypeWitness) == 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v42 + 8))(v55, v56);
    return v59;
  }
  else
  {
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v44 = (void (**)(char *, char *, uint64_t))(v46 + 4);
    uint64_t v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 6);
    uint64_t v43 = (void (**)(char *, char *, uint64_t))(v46 + 2);
    uint64_t v30 = v46 + 1;
    double v46 = (void (**)(char *, uint64_t))(v15 + 8);
    uint64_t v47 = v29;
    uint64_t v31 = v41;
    uint64_t v32 = v57;
    while (1)
    {
      v47(v17, v32, AssociatedTypeWitness);
      uint64_t v33 = v58;
      v53(v17);
      if (v33)
      {
        (*v46)(v17, AssociatedTypeWitness);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v55, v56);
        return swift_bridgeObjectRelease();
      }
      if ((*v45)(v31, 1, a4) == 1) {
        break;
      }
      uint64_t v58 = 0;
      uint64_t v34 = v17;
      id v35 = v51;
      (*v44)(v51, v31, a4);
      (*v43)(v52, v35, a4);
      sub_1A7572B30();
      sub_1A7572AE0();
      uint64_t v36 = v35;
      uint64_t v17 = v34;
      uint64_t v32 = v57;
      (*v30)(v36, a4);
      (*v46)(v17, AssociatedTypeWitness);
      sub_1A7573230();
      if (v48(v32, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_6;
      }
    }
    (*v46)(v17, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v55, v56);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v40);
    return 0;
  }
}

uint64_t Sequence.compactMapToSet<A>(_:)()
{
  return sub_1A7368554();
}

uint64_t sub_1A7368554()
{
  sub_1A75723C0();
  sub_1A7572CF0();
  uint64_t result = sub_1A7572900();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t Sequence.elements<A>(ofType:)()
{
  return sub_1A736877C();
}

uint64_t sub_1A7368624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v11 - v7, a1, AssociatedTypeWitness);
  int v9 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, v9 ^ 1u, 1, a2);
}

uint64_t Sequence.elements<A>(ofExactType:)()
{
  return sub_1A736877C();
}

uint64_t sub_1A736877C()
{
  return sub_1A75728B0();
}

uint64_t sub_1A73687C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  int v9 = (char *)&v15 - v8;
  if (swift_getDynamicType() != a2)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
LABEL_5:
    uint64_t v12 = a3;
    uint64_t v13 = 1;
    return v10(v12, v13, 1, a2);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, AssociatedTypeWitness);
  int v11 = swift_dynamicCast();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  if (!v11) {
    goto LABEL_5;
  }
  uint64_t v12 = a3;
  uint64_t v13 = 0;
  return v10(v12, v13, 1, a2);
}

uint64_t Sequence.indexBy<A, B>(key:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = a3;
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  uint64_t v16 = sub_1A72D9A0C((void (*)(char *, char *))sub_1A736B294, (uint64_t)v10, a3, TupleTypeMetadata2, MEMORY[0x1E4FBC248], a4, MEMORY[0x1E4FBC278], v8);
  sub_1A7572B30();
  swift_getWitnessTable();
  return sub_1A75724B0();
}

uint64_t sub_1A7368AD4()
{
  return swift_getAtKeyPath();
}

uint64_t Sequence.compactIndexBy<A, B>(key:value:)()
{
  return sub_1A75724B0();
}

uint64_t sub_1A7368D28@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v17 = a3;
  uint64_t v3 = *(void *)(*MEMORY[0x1E4FBC5F0] + *a2 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v11 = (char *)&v16 - v10;
  swift_getAtKeyPath();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v17, 1, 1, TupleTypeMetadata2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    uint64_t v14 = swift_getTupleTypeMetadata2();
    uint64_t v15 = v17;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v17, v11, v8);
    swift_getAtKeyPath();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v15, 0, 1, v14);
  }
}

uint64_t Sequence.firstMap<A>(_:)@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v50 = a4;
  double v46 = a1;
  uint64_t v47 = a2;
  uint64_t v38 = a6;
  uint64_t v45 = sub_1A7573210();
  uint64_t v37 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v36 = (char *)&v36 - v9;
  uint64_t v48 = a5;
  uint64_t v10 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v41 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = sub_1A7573210();
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v39 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v36 - v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v49, v10);
  sub_1A7572870();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v48 = v23;
  uint64_t v49 = v21;
  uint64_t v44 = AssociatedConformanceWitness;
  sub_1A7573230();
  uint64_t v25 = v41;
  uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
  uint64_t v43 = v41 + 48;
  if (v42(v17, 1, AssociatedTypeWitness) == 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v39 + 8))(v48, v49);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v38, 1, 1);
  }
  else
  {
    uint64_t v27 = *(void *)(v25 + 32);
    uint64_t v26 = v25 + 32;
    uint64_t v28 = (void (**)(char *, uint64_t))(v26 - 24);
    uint64_t v40 = v50 - 8;
    uint64_t v41 = v27;
    uint64_t v29 = v36;
    uint64_t v30 = (void (**)(char *, uint64_t))(v37 + 8);
    while (1)
    {
      uint64_t v31 = v26;
      ((void (*)(char *, char *, uint64_t))v41)(v13, v17, AssociatedTypeWitness);
      v46(v13);
      if (v6)
      {
        (*v28)(v13, AssociatedTypeWitness);
        return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v48, v49);
      }
      (*v28)(v13, AssociatedTypeWitness);
      uint64_t v32 = *(void *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v32 + 48))(v29, 1) != 1) {
        break;
      }
      (*v30)(v29, v45);
      sub_1A7573230();
      uint64_t v26 = v31;
      if (v42(v17, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_6;
      }
    }
    (*(void (**)(char *, uint64_t))(v39 + 8))(v48, v49);
    uint64_t v34 = v38;
    uint64_t v35 = v50;
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v38, v29, v50);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v35);
  }
}

uint64_t Sequence.map<A>(skippingError:_:)()
{
  return sub_1A75728B0();
}

void sub_1A73695D0(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t (*a3)(uint64_t, void *)@<X3>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  a2();
  if (v5)
  {
    if (a3(a1, v5))
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a5, 1, 1, a4);
    }
    else
    {
      swift_willThrow();
    }
  }
  else
  {
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a5, 0, 1, a4);
  }
}

uint64_t sub_1A73696D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a6 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)v21 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v21 - v15;
  uint64_t result = v18(v17);
  if (!v6)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v16, a6);
    sub_1A7572CF0();
    sub_1A7572CC0();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
    v20(v14, a6);
    return ((uint64_t (*)(char *, uint64_t))v20)(v16, a6);
  }
  return result;
}

uint64_t sub_1A736985C(uint64_t a1, uint64_t a2)
{
  return sub_1A736B228(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_1A73696D4);
}

uint64_t sub_1A7369888(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v28[0] = a8;
  v28[1] = a1;
  uint64_t v11 = sub_1A7573210();
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v28 - v13;
  uint64_t v30 = *(void *)(a6 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)v28 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)v28 - v21;
  uint64_t v23 = v31;
  uint64_t result = a3(a2);
  if (!v23)
  {
    uint64_t v25 = v29;
    uint64_t v26 = v30;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v14, 1, a6) == 1)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v11);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v22, v14, a6);
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v17, v22, a6);
      sub_1A7572CF0();
      sub_1A7572CC0();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v26 + 8);
      v27(v20, a6);
      return ((uint64_t (*)(char *, uint64_t))v27)(v22, a6);
    }
  }
  return result;
}

uint64_t Sequence.asyncMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v6[9] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[10] = AssociatedTypeWitness;
  v6[11] = *(void *)(AssociatedTypeWitness - 8);
  v6[12] = swift_task_alloc();
  sub_1A7573210();
  v6[13] = swift_task_alloc();
  v6[14] = *(void *)(a3 - 8);
  v6[15] = swift_task_alloc();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  v6[16] = v9;
  v6[17] = *(void *)(v9 - 8);
  v6[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A7369D14, 0, 0);
}

uint64_t sub_1A7369D14()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[5];
  v0[2] = sub_1A75723A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_1A7572870();
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  swift_getAssociatedConformanceWitness();
  sub_1A7573230();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    uint64_t v8 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
    return v9(v8);
  }
  else
  {
    uint64_t v11 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[11] + 32))(v0[12], v0[13], v0[10]);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)v11 + *v11);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[19] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1A7369F64;
    uint64_t v13 = v0[12];
    uint64_t v14 = v0[9];
    return v15(v14, v13);
  }
}

uint64_t sub_1A7369F64()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1A736A2BC;
  }
  else
  {
    uint64_t v2 = sub_1A736A080;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A736A080()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  sub_1A7572B30();
  sub_1A7572AE0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  swift_getAssociatedConformanceWitness();
  sub_1A7573230();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    uint64_t v7 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
    return v8(v7);
  }
  else
  {
    uint64_t v10 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[11] + 32))(v0[12], v0[13], v0[10]);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)v10 + *v10);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[19] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1A7369F64;
    uint64_t v12 = v0[12];
    uint64_t v13 = v0[9];
    return v14(v13, v12);
  }
}

uint64_t sub_1A736A2BC()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Sequence.asyncReduce<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[8] = a7;
  v8[9] = v7;
  void v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  unint64_t v8[2] = a1;
  v8[3] = a2;
  v8[10] = *(void *)(a6 - 8);
  v8[11] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[12] = AssociatedTypeWitness;
  v8[13] = *(void *)(AssociatedTypeWitness - 8);
  v8[14] = swift_task_alloc();
  sub_1A7573210();
  v8[15] = swift_task_alloc();
  v8[16] = *(void *)(a5 - 8);
  v8[17] = swift_task_alloc();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  v8[18] = v11;
  v8[19] = *(void *)(v11 - 8);
  v8[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A736A5DC, 0, 0);
}

uint64_t sub_1A736A5DC()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[6];
  (*(void (**)(void, void, void))(v0[10] + 16))(v0[2], v0[3], v0[7]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_1A7572870();
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[13];
  swift_getAssociatedConformanceWitness();
  sub_1A7573230();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v10 = (int *)v0[4];
    (*(void (**)(void, void, void))(v0[13] + 32))(v0[14], v0[15], v0[12]);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[21] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1A736A830;
    uint64_t v12 = v0[14];
    uint64_t v13 = v0[11];
    uint64_t v14 = v0[2];
    return v15(v13, v14, v12);
  }
}

uint64_t sub_1A736A830()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A736AB94;
  }
  else {
    uint64_t v2 = sub_1A736A944;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A736A944()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[2];
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[13];
  swift_getAssociatedConformanceWitness();
  sub_1A7573230();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v10 = (int *)v0[4];
    (*(void (**)(void, void, void))(v0[13] + 32))(v0[14], v0[15], v0[12]);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[21] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1A736A830;
    uint64_t v12 = v0[14];
    uint64_t v13 = v0[11];
    uint64_t v14 = v0[2];
    return v15(v13, v14, v12);
  }
}

uint64_t sub_1A736AB94()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[2];
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t Sequence.removingNils<A>()()
{
  return sub_1A75728B0();
}

uint64_t Sequence.sorted<A>(using:elementIdentifier:)()
{
  return sub_1A7572920();
}

BOOL sub_1A736AD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v27 = a5;
  uint64_t v30 = a2;
  uint64_t v11 = *(void *)(a8 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = v15;
  uint64_t v32 = v16;
  v17(v12);
  uint64_t v18 = type metadata accessor for OrderedSet();
  uint64_t v29 = OrderedSet.index(of:)((uint64_t)v14, v18);
  int v28 = v19;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v14, a8);
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  v27(v30);
  uint64_t v21 = OrderedSet.index(of:)((uint64_t)v14, v18);
  char v23 = v22;
  v20(v14, a8);
  uint64_t v24 = 0x7FFFFFFFFFFFFFFFLL;
  if ((v23 & 1) == 0) {
    uint64_t v24 = v21;
  }
  return (v28 & 1) == 0 && v29 < v24;
}

uint64_t Sequence<>.sum()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v13[0] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)v13 - v9;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v11);
  swift_getAssociatedConformanceWitness();
  sub_1A7573FD0();
  sub_1A7573D90();
  v13[4] = a1;
  v13[5] = a2;
  v13[6] = a3;
  v13[7] = AssociatedTypeWitness;
  sub_1A7572910();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
}

uint64_t sub_1A736B0D4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = a2();
  if (!v3)
  {
    char v7 = result;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
    if (v7)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a3, a1, AssociatedTypeWitness);
      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = 1;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v10, 1, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_1A736B1D0(uint64_t a1)
{
  return sub_1A736B300(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A736B0D4);
}

uint64_t sub_1A736B1FC(uint64_t a1, uint64_t a2)
{
  return sub_1A736B228(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_1A7369888);
}

uint64_t sub_1A736B228(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1A736B254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A7368624(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1A736B274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A73687C4(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1A736B294()
{
  return sub_1A7368AD4();
}

uint64_t sub_1A736B2BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1A736B32C(a1);
}

uint64_t sub_1A736B2D4(uint64_t a1)
{
  return sub_1A736B300(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A7368D28);
}

uint64_t sub_1A736B300(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[5], v2[6], v2[2], v2[3], v2[4]);
}

uint64_t sub_1A736B32C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v1 + 32) - 8) + 16))(a1);
}

void sub_1A736B380(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A73695D0(a1, *(void (**)(void))(v2 + 40), *(uint64_t (**)(uint64_t, void *))(v2 + 56), *(void *)(v2 + 24), a2);
}

uint64_t sub_1A736B3A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A7573210();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

BOOL sub_1A736B41C(uint64_t a1, uint64_t a2)
{
  return sub_1A736AD54(a1, a2, *(void *)(v2 + 48), *(void *)(v2 + 56), *(void (**)(uint64_t))(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1A736B454()
{
  return sub_1A7573870();
}

uint64_t Sequence.count(where:)(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v37 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = sub_1A7573210();
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v30 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v38, a3);
  sub_1A7572870();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v37 = v18;
  uint64_t v38 = v16;
  uint64_t v34 = AssociatedConformanceWitness;
  sub_1A7573230();
  uint64_t v20 = v32;
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v33(v12, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v23 = *(void *)(v20 + 32);
    uint64_t v22 = v20 + 32;
    uint64_t v32 = v23;
    uint64_t v24 = (void (**)(char *, uint64_t))(v22 - 24);
    while (1)
    {
      uint64_t v25 = v22;
      ((void (*)(char *, char *, uint64_t))v32)(v8, v12, AssociatedTypeWitness);
      char v26 = v35(v8);
      if (v4) {
        break;
      }
      char v27 = v26;
      (*v24)(v8, AssociatedTypeWitness);
      if ((v27 & 1) != 0 && __OFADD__(v21++, 1))
      {
        __break(1u);
        break;
      }
      sub_1A7573230();
      uint64_t v22 = v25;
      if (v33(v12, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_11;
      }
    }
    (*v24)(v8, AssociatedTypeWitness);
  }
LABEL_11:
  (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v38);
  return v21;
}

uint64_t BidirectionalCollection<>.slices(by:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1A7572DA0();
  if (a1)
  {
    v12[7] = 0;
    v12[8] = result;
    v12[9] = a1;
    MEMORY[0x1F4188790](result);
    v12[2] = a2;
    v12[3] = a3;
    v12[4] = v3;
    v12[5] = a1;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F21F0);
    uint64_t AssociatedTypeWitness = (char *)swift_getAssociatedTypeWitness();
    uint64_t v10 = sub_1A72AE788(&qword_1E96F21F8, &qword_1E96F21F0);
    return sub_1A72D9A0C((void (*)(char *, char *))sub_1A736BA5C, (uint64_t)v12, v8, AssociatedTypeWitness, MEMORY[0x1E4FBC248], v10, MEMORY[0x1E4FBC278], v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t *sub_1A736B9C0(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *result;
  uint64_t v4 = *result + a3;
  if (__OFADD__(*result, a3))
  {
    __break(1u);
  }
  else
  {
    uint64_t result = (uint64_t *)sub_1A7572DA0();
    if ((uint64_t)result >= v4) {
      uint64_t v5 = (void *)v4;
    }
    else {
      uint64_t v5 = result;
    }
    if ((uint64_t)v5 >= v3) {
      return (uint64_t *)sub_1A7572E70();
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_1A736BA5C(uint64_t *a1)
{
  return sub_1A736B9C0(a1, *(void *)(v1 + 32), *(void *)(v1 + 40));
}

int64_t BidirectionalCollection<>.lazySlices(by:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t result = sub_1A7572DA0();
  if (a1)
  {
    v14[0] = sub_1A736C248(0, result, a1);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a2);
    unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v12 = (v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v11, v9, a2);
    *(void *)(v13 + v12) = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701010);
    swift_getAssociatedTypeWitness();
    sub_1A72AE788(&qword_1EB701008, &qword_1EB701010);
    sub_1A7573950();
    swift_release();
    swift_bridgeObjectRelease();
    return v14[1];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t *sub_1A736BC80(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *result;
  uint64_t v4 = *result + a3;
  if (__OFADD__(*result, a3))
  {
    __break(1u);
  }
  else
  {
    int64_t result = (uint64_t *)sub_1A7572DA0();
    if ((uint64_t)result >= v4) {
      uint64_t v5 = (void *)v4;
    }
    else {
      uint64_t v5 = result;
    }
    if ((uint64_t)v5 >= v3) {
      return (uint64_t *)sub_1A7572E70();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A736BD0C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    int64_t result = swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = v2 + 4;
    uint64_t v6 = (uint64_t *)(result + 40);
    while (1)
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      if (v3)
      {
        int64_t result = swift_bridgeObjectRetain();
        BOOL v9 = __OFSUB__(v3--, 1);
        if (v9) {
          goto LABEL_28;
        }
      }
      else
      {
        unint64_t v10 = v2[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_29;
        }
        int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1) {
          uint64_t v12 = 1;
        }
        else {
          uint64_t v12 = v11;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1428);
        uint64_t v13 = (void *)swift_allocObject();
        uint64_t v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 24;
        _OWORD v13[2] = v12;
        v13[3] = 2 * v14;
        uint64_t v15 = v13 + 4;
        uint64_t v16 = v2[3] >> 1;
        uint64_t v5 = &v13[3 * v16 + 4];
        uint64_t v17 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        if (v2[2])
        {
          if (v13 != v2 || v15 >= &v2[3 * v16 + 4]) {
            memmove(v15, v2 + 4, 24 * v16);
          }
          swift_bridgeObjectRetain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        int64_t result = swift_release();
        uint64_t v2 = v13;
        BOOL v9 = __OFSUB__(v17, 1);
        uint64_t v3 = v17 - 1;
        if (v9)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
      }
      *uint64_t v5 = v4;
      v5[1] = v7;
      uint64_t v5[2] = v8;
      v5 += 3;
      v6 += 2;
      if (v1 == ++v4)
      {
        int64_t result = swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
  }
  uint64_t v3 = 0;
LABEL_24:
  unint64_t v19 = v2[3];
  if (v19 >= 2)
  {
    unint64_t v20 = v19 >> 1;
    BOOL v9 = __OFSUB__(v20, v3);
    uint64_t v21 = v20 - v3;
    if (v9) {
      goto LABEL_30;
    }
    v2[2] = v21;
  }
  return (uint64_t)v2;
}

uint64_t sub_1A736BECC(uint64_t result, int64_t a2, int64_t a3)
{
  int64_t v3 = a3 - a2;
  if (__OFSUB__(a3, a2))
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  int64_t v4 = a3;
  uint64_t v5 = (float64x2_t *)result;
  unint64_t v6 = *(void *)(result + 16);
  if (v3 >= (uint64_t)v6) {
    uint64_t v7 = *(void *)(result + 16);
  }
  else {
    uint64_t v7 = a3 - a2;
  }
  int64_t v54 = a2;
  if (v7 <= 0)
  {
    if (v7 < 0)
    {
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    uint64_t v8 = (float64_t *)MEMORY[0x1E4FBC860];
    uint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 24) >> 1;
    if (!v6) {
      goto LABEL_60;
    }
    int64_t v11 = (float64_t *)(MEMORY[0x1E4FBC860] + 32);
    int64_t v16 = a2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703D48);
    uint64_t v8 = (float64_t *)swift_allocObject();
    int64_t result = _swift_stdlib_malloc_size(v8);
    a2 = v54;
    uint64_t v9 = result - 32;
    if (result < 32) {
      uint64_t v9 = result - 17;
    }
    uint64_t v10 = v9 >> 4;
    *((void *)v8 + 2) = v7;
    *((void *)v8 + 3) = 2 * v10;
    if (v4 < v54) {
      goto LABEL_70;
    }
    if (!v6)
    {
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    if (v7 - 1 >= v6)
    {
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    int64_t v11 = v8 + 4;
    uint64_t v12 = (v10 & 0x7FFFFFFFFFFFFFFFLL) - v7;
    if (v7 - 1 >= (unint64_t)v3) {
      unint64_t v13 = v3;
    }
    else {
      unint64_t v13 = v7 - 1;
    }
    if (v13 >= v6) {
      unint64_t v13 = v6;
    }
    if (v13 > 3)
    {
      unint64_t v17 = v13 + 1;
      uint64_t v18 = v17 & 3;
      if ((v17 & 3) == 0) {
        uint64_t v18 = 4;
      }
      unint64_t v14 = v17 - v18;
      v11 += 2 * v14;
      int64_t v15 = v14 + v54;
      int64x2_t v19 = vaddq_s64(vdupq_n_s64(v54), (int64x2_t)xmmword_1A757DB40);
      unint64_t v20 = v5 + 3;
      uint64_t v21 = v8 + 8;
      int64x2_t v22 = vdupq_n_s64(2uLL);
      unint64_t v23 = v14;
      do
      {
        uint64_t v24 = v21 - 4;
        v55.val[1] = (float64x2_t)vaddq_s64(v19, v22);
        float64x2_t v25 = v20[-1];
        v55.val[0] = *v20;
        vst2q_f64(v24, *(float64x2x2_t *)(&v19 - 1));
        vst2q_f64(v21, v55);
        int64x2_t v19 = vaddq_s64(v19, vdupq_n_s64(4uLL));
        v20 += 2;
        v21 += 8;
        v23 -= 4;
      }
      while (v23);
    }
    else
    {
      unint64_t v14 = 0;
      int64_t v15 = v54;
    }
    uint64_t v26 = 0;
    unint64_t v27 = v7 - v14;
    uint64_t v28 = (uint64_t)&v5[2].f64[v14];
    unint64_t v29 = v6 - v14;
    do
    {
      if (v29 == v26)
      {
        __break(1u);
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      if (!(v15 - v4 + v26)) {
        goto LABEL_65;
      }
      *int64_t v11 = *(float64_t *)(v28 + 8 * v26);
      *((void *)v11 + 1) = v15 + v26;
      v11 += 2;
      ++v26;
    }
    while (v27 != v26);
    if ((uint64_t)v6 <= v3) {
      goto LABEL_60;
    }
    int64_t v16 = v15 + v26;
  }
  if (v7 >= v6)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (v16 == v4) {
    goto LABEL_60;
  }
  if (v4 >= a2)
  {
    float64_t v30 = v5[2].f64[v7];
    int64_t result = swift_bridgeObjectRetain();
    int64_t v31 = v54;
    if (v16 >= v54 && v16 < v4)
    {
      unint64_t v32 = v6 - 1;
      uint64_t v33 = (char *)&v5[2].f64[1];
      int64_t v34 = v4 - 1;
      uint64_t v52 = (char *)&v5[2].f64[1];
      unint64_t v53 = v6 - 1;
      int64_t v51 = v4 - 1;
      while (1)
      {
        if (!v12)
        {
          unint64_t v35 = *((void *)v8 + 3);
          if ((uint64_t)((v35 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_67;
          }
          int64_t v36 = v4;
          int64_t v37 = v35 & 0xFFFFFFFFFFFFFFFELL;
          if (v37 <= 1) {
            uint64_t v38 = 1;
          }
          else {
            uint64_t v38 = v37;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703D48);
          uint64_t v39 = (float64_t *)swift_allocObject();
          int64_t v40 = _swift_stdlib_malloc_size(v39);
          uint64_t v41 = v40 - 32;
          if (v40 < 32) {
            uint64_t v41 = v40 - 17;
          }
          uint64_t v42 = v41 >> 4;
          *((void *)v39 + 2) = v38;
          *((void *)v39 + 3) = 2 * (v41 >> 4);
          unint64_t v43 = (unint64_t)(v39 + 4);
          uint64_t v44 = *((void *)v8 + 3) >> 1;
          if (*((void *)v8 + 2))
          {
            if (v39 != v8 || v43 >= (unint64_t)&v8[2 * v44 + 4]) {
              memmove(v39 + 4, v8 + 4, 16 * v44);
            }
            unint64_t v8[2] = 0.0;
          }
          int64_t v11 = (float64_t *)(v43 + 16 * v44);
          uint64_t v12 = (v42 & 0x7FFFFFFFFFFFFFFFLL) - v44;
          int64_t result = swift_release();
          uint64_t v8 = v39;
          int64_t v4 = v36;
          unint64_t v32 = v53;
          int64_t v31 = v54;
          int64_t v34 = v51;
          uint64_t v33 = v52;
        }
        BOOL v46 = __OFSUB__(v12--, 1);
        if (v46) {
          break;
        }
        *int64_t v11 = v30;
        *((void *)v11 + 1) = v16;
        if (v32 == v7 || v34 == v16) {
          goto LABEL_59;
        }
        int64_t v47 = v16 + 1;
        if (v16 + 1 >= v31)
        {
          float64_t v30 = *(double *)&v33[8 * v7];
          v11 += 2;
          ++v7;
          ++v16;
          if (v47 < v4) {
            continue;
          }
        }
        goto LABEL_58;
      }
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
LABEL_58:
    __break(1u);
LABEL_59:
    int64_t result = swift_bridgeObjectRelease();
LABEL_60:
    unint64_t v48 = *((void *)v8 + 3);
    if (v48 >= 2)
    {
      unint64_t v49 = v48 >> 1;
      BOOL v46 = __OFSUB__(v49, v12);
      unint64_t v50 = v49 - v12;
      if (v46)
      {
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      *((void *)v8 + 2) = v50;
    }
    return (uint64_t)v8;
  }
LABEL_75:
  __break(1u);
  return result;
}

uint64_t sub_1A736C248(uint64_t result, int64_t a2, uint64_t a3)
{
  uint64_t v5 = result;
  uint64_t v6 = 0;
  uint64_t v7 = 32;
  int64_t v8 = result;
  while (1)
  {
    BOOL v9 = v8 <= a2;
    if (a3 > 0) {
      BOOL v9 = v8 >= a2;
    }
    if (v9) {
      break;
    }
    BOOL v10 = __OFADD__(v8, a3);
    v8 += a3;
    if (v10) {
      int64_t v8 = (v8 >> 63) ^ 0x8000000000000000;
    }
    v7 += 8;
    BOOL v10 = __OFADD__(v6++, 1);
    if (v10)
    {
      __break(1u);
      break;
    }
  }
  if (v6 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD8);
    int64_t v11 = (int64_t *)swift_allocObject();
    int64_t result = _swift_stdlib_malloc_size(v11);
    uint64_t v12 = result - 32;
    if (result < 32) {
      uint64_t v12 = result - 25;
    }
    uint64_t v13 = v12 >> 3;
    v11[2] = v6;
    void v11[3] = 2 * v13;
    unint64_t v14 = v11 + 4;
    uint64_t v15 = v13 & 0x7FFFFFFFFFFFFFFFLL;
LABEL_15:
    v15 -= v6;
    while (1)
    {
      BOOL v16 = v5 <= a2;
      if (a3 > 0) {
        BOOL v16 = v5 >= a2;
      }
      if (v16) {
        break;
      }
      if (__OFADD__(v5, a3)) {
        int64_t v17 = ((v5 + a3) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v17 = v5 + a3;
      }
      *v14++ = v5;
      uint64_t v5 = v17;
      if (!--v6) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  int64_t v11 = (int64_t *)MEMORY[0x1E4FBC860];
  unint64_t v14 = (int64_t *)(MEMORY[0x1E4FBC860] + 32);
  uint64_t v15 = *(void *)(MEMORY[0x1E4FBC860] + 24) >> 1;
  if (v6) {
    goto LABEL_15;
  }
  int64_t v17 = result;
LABEL_23:
  BOOL v18 = v17 <= a2;
  if (a3 > 0) {
    BOOL v18 = v17 >= a2;
  }
  if (!v18)
  {
    uint64_t v19 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
    do
    {
      int64_t v20 = v17 + a3;
      if (__OFADD__(v17, a3))
      {
        int64_t v20 = v19;
        if (!v15) {
          goto LABEL_32;
        }
        int64_t v20 = v19;
      }
      else if (!v15)
      {
LABEL_32:
        unint64_t v21 = v11[3];
        if ((uint64_t)((v21 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_58;
        }
        int64_t v22 = v21 & 0xFFFFFFFFFFFFFFFELL;
        if (v22 <= 1) {
          uint64_t v23 = 1;
        }
        else {
          uint64_t v23 = v22;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD8);
        uint64_t v24 = (int64_t *)swift_allocObject();
        int64_t v25 = _swift_stdlib_malloc_size(v24);
        uint64_t v26 = v25 - 32;
        if (v25 < 32) {
          uint64_t v26 = v25 - 25;
        }
        uint64_t v27 = v26 >> 3;
        void v24[2] = v23;
        void v24[3] = 2 * (v26 >> 3);
        unint64_t v28 = (unint64_t)(v24 + 4);
        unint64_t v29 = (unint64_t)v11[3] >> 1;
        if (v11[2])
        {
          if (v24 != v11 || v28 >= (unint64_t)&v11[v29 + 4]) {
            memmove(v24 + 4, v11 + 4, 8 * v29);
          }
          v11[2] = 0;
        }
        unint64_t v14 = (int64_t *)(v28 + 8 * v29);
        uint64_t v15 = (v27 & 0x7FFFFFFFFFFFFFFFLL) - v29;
        int64_t result = swift_release();
        int64_t v11 = v24;
        uint64_t v19 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
      }
      BOOL v10 = __OFSUB__(v15--, 1);
      if (v10) {
        goto LABEL_57;
      }
      *v14++ = v17;
      BOOL v31 = v20 <= a2;
      if (a3 > 0) {
        BOOL v31 = v20 >= a2;
      }
      int64_t v17 = v20;
    }
    while (!v31);
  }
  unint64_t v32 = v11[3];
  if (v32 < 2) {
    return (uint64_t)v11;
  }
  unint64_t v33 = v32 >> 1;
  BOOL v10 = __OFSUB__(v33, v15);
  unint64_t v34 = v33 - v15;
  if (!v10)
  {
    v11[2] = v34;
    return (uint64_t)v11;
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_1A736C4CC()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t *sub_1A736C560(uint64_t *a1)
{
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80);
  return sub_1A736BC80(a1, v1 + v2, *(void *)(v1+ ((*(void *)(*(void *)(*(void *)(v1 + 16) - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1A736C5C8(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t result = MEMORY[0x1E4FBC870];
  uint64_t v12 = MEMORY[0x1E4FBC870];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (unint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v9 = *(i - 1);
      uint64_t v8 = *i;
      v11[0] = v9;
      v11[1] = v8;
      swift_bridgeObjectRetain();
      char v10 = a2(v11);
      if (v2) {
        break;
      }
      if (v10)
      {
        swift_bridgeObjectRetain();
        sub_1A72DF384(v11, v9, v8);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void _sSd19ReminderKitInternalE7lngammayS2dFZ_0(long double a1)
{
  if (a1 < 0.0)
  {
    __break(1u);
  }
  else
  {
    long double v2 = unk_1EFC8F970 / (a1 + 14.0)
       + 1.0
       + *(double *)&qword_1EFC8F968 / (a1 + 13.0)
       + unk_1EFC8F960 / (a1 + 12.0)
       + *(double *)&qword_1EFC8F958 / (a1 + 11.0)
       + unk_1EFC8F950 / (a1 + 10.0)
       + *(double *)&qword_1EFC8F948 / (a1 + 9.0)
       + unk_1EFC8F940 / (a1 + 8.0)
       + *(double *)&qword_1EFC8F938 / (a1 + 7.0)
       + unk_1EFC8F930 / (a1 + 6.0)
       + *(double *)&qword_1EFC8F928 / (a1 + 5.0)
       + unk_1EFC8F920 / (a1 + 4.0)
       + *(double *)&qword_1EFC8F918 / (a1 + 3.0)
       + unk_1EFC8F910 / (a1 + 2.0)
       + *(double *)&qword_1EFC8F908 / (a1 + 1.0);
    log(a1 + 4.7421875 + 0.5);
    log(v2);
    log(a1);
  }
}

uint64_t sub_1A736C880()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F2200);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F2200);
  if (qword_1EB6FFF40 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F00);
  int64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

BOOL static REMApplicationIconFormat.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMApplicationIconFormat.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t REMApplicationIconFormat.hashValue.getter()
{
  return sub_1A7574110();
}

id REMUserActivity.appIconAndName(format:scale:)(char *a1, double a2)
{
  char v3 = *a1;
  sub_1A736D138();
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  sub_1A736D614(v4);
  if (!v7)
  {

    return 0;
  }
  uint64_t v8 = v6;
  unint64_t v9 = v7;
  id v10 = objc_msgSend(v5, sel_localizedName);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  char v13 = v3;
  id v11 = sub_1A736EC9C(v8, v9, &v13, a2);
  swift_bridgeObjectRelease();
  return v11;
}

id static REMUserActivity.blankAppIcon(format:scale:)(char *a1, double a2)
{
  char v3 = *a1;
  id v4 = objc_msgSend(self, sel_genericApplicationIcon);
  if (qword_1E96F0728 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1A7571E90();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E96F2200);
  id v6 = v4;
  unint64_t v7 = sub_1A7571E80();
  os_log_type_t v8 = sub_1A7572FF0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    id v10 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v9 = 138412802;
    char v11 = v3;
    id v12 = v6;
    sub_1A7573250();
    *id v10 = v6;

    char v3 = v11;
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v13 = sub_1A7572670();
    sub_1A72D1730(v13, v14, &v18);
    sub_1A7573250();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2048;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v7, v8, "resolved icon %@ for generic application (format: %s, scale: %f)", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v17, -1, -1);
    MEMORY[0x1AD0CD330](v9, -1, -1);
  }
  else
  {
  }
  LOBYTE(v18) = v3;
  id v15 = sub_1A736EAA0(v6, (unsigned __int8 *)&v18, a2);

  return v15;
}

Swift::Void __swiftcall REMUserActivity.launch()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A7571E90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A75719C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v28 - v14;
  id v16 = objc_msgSend(v1, sel_type);
  if (v16 != (id)3)
  {
    if (v16 == (id)2)
    {
      id v17 = objc_msgSend(v1, sel_userActivity);
      if (v17)
      {
        uint64_t v18 = v17;
        sub_1A736D138();
        unint64_t v29 = (void *)v19;
        sub_1A736D4CC(v19);

        int64_t v20 = v29;
      }
    }
    else if (v16 == (id)1)
    {
      id v21 = objc_msgSend(v1, sel_universalLink);
      if (v21)
      {
        int64_t v22 = v21;
        sub_1A7571940();

        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v13, 1, 1, v6);
      }
      sub_1A736EFD0((uint64_t)v13, (uint64_t)v15);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
      {
        sub_1A736F038((uint64_t)v15);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v15, v6);
        id v23 = objc_msgSend(self, sel_defaultWorkspace);
        if (v23)
        {
          uint64_t v24 = v23;
          sub_1A736DD20((uint64_t)v9);
        }
        int64_t v25 = *(void (**)(char *, uint64_t))(v7 + 8);
        v25(v9, v6);
        v25(v15, v6);
      }
    }
    else
    {
      if (qword_1E96F0728 != -1) {
        swift_once();
      }
      uint64_t v26 = __swift_project_value_buffer(v2, (uint64_t)qword_1E96F2200);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v26, v2);
      uint64_t v27 = MEMORY[0x1E4FBC860];
      sub_1A72B0944(MEMORY[0x1E4FBC860]);
      sub_1A72B0944(v27);
      sub_1A73A67DC((uint64_t)"unknown user activity type", 26, 2);
      __break(1u);
    }
  }
}

void sub_1A736D138()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A7571E90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A75719C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v24 - v14;
  id v16 = objc_msgSend(v1, sel_type);
  if (v16 != (id)3)
  {
    if (v16 == (id)2)
    {
      id v17 = objc_msgSend(v1, sel_userActivity);
      if (v17)
      {
        uint64_t v18 = v17;
        _sSo19LSApplicationRecordC19ReminderKitInternalE011applicationB015forUserActivityABSgSo06NSUserI0C_tFZ_0(v17);
      }
    }
    else if (v16 == (id)1)
    {
      id v19 = objc_msgSend(v1, sel_universalLink);
      if (v19)
      {
        int64_t v20 = v19;
        sub_1A7571940();

        id v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v21(v8, v13, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
        {
          v21(v15, v8, v9);
          sub_1A73A56AC((uint64_t)v15);
          (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
      }
      sub_1A736F038((uint64_t)v8);
    }
    else
    {
      if (qword_1E96F0728 != -1) {
        swift_once();
      }
      uint64_t v22 = __swift_project_value_buffer(v2, (uint64_t)qword_1E96F2200);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v22, v2);
      uint64_t v23 = MEMORY[0x1E4FBC860];
      sub_1A72B0944(MEMORY[0x1E4FBC860]);
      sub_1A72B0944(v23);
      sub_1A73A67DC((uint64_t)"unknown user activity type", 26, 2);
      __break(1u);
    }
  }
}

void sub_1A736D4CC(uint64_t a1)
{
  id v3 = objc_msgSend(self, sel_defaultWorkspace);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F224A0]), sel_init);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v1;
    v10[4] = sub_1A736F2DC;
    uint64_t v10[5] = v6;
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 1107296256;
    void v10[2] = sub_1A74EB020;
    void v10[3] = &block_descriptor_4;
    uint64_t v7 = _Block_copy(v10);
    id v8 = v5;
    id v9 = v1;
    swift_release();
    objc_msgSend(v4, sel_openUserActivity_usingApplicationRecord_configuration_completionHandler_, v9, a1, v8, v7);
    _Block_release(v7);
  }
}

void sub_1A736D614(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A7571E90();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A75719C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v17 = (char *)&v26 - v16;
  id v18 = objc_msgSend(v2, sel_type);
  if (v18 != (id)3)
  {
    if (v18 == (id)2)
    {
      id v19 = objc_msgSend(v2, sel_userActivity);
      if (v19)
      {
        int64_t v20 = v19;
        sub_1A736E8BC(v19, a1);
      }
    }
    else if (v18 == (id)1)
    {
      id v21 = objc_msgSend(v2, sel_universalLink);
      if (v21)
      {
        uint64_t v22 = v21;
        sub_1A7571940();

        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v23(v10, v15, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
        {
          v23(v17, v10, v11);
          sub_1A736E5C0((uint64_t)v17, (uint64_t)a1);
          (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
      }
      sub_1A736F038((uint64_t)v10);
    }
    else
    {
      if (qword_1E96F0728 != -1) {
        swift_once();
      }
      uint64_t v24 = __swift_project_value_buffer(v4, (uint64_t)qword_1E96F2200);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v24, v4);
      uint64_t v25 = MEMORY[0x1E4FBC860];
      sub_1A72B0944(MEMORY[0x1E4FBC860]);
      sub_1A72B0944(v25);
      sub_1A73A67DC((uint64_t)"unknown user activity type", 26, 2);
      __break(1u);
    }
  }
}

void sub_1A736D9C4()
{
  type metadata accessor for IOSUniversalLinkAppIconBundleIDResolver();
  uint64_t v0 = swift_allocObject();
  id v1 = objc_allocWithZone(MEMORY[0x1E4F223C8]);
  id v2 = sub_1A73A55D0(0xD000000000000015, 0x80000001A75A07F0, 0);
  if (v2)
  {

    char v3 = 1;
  }
  else
  {
    char v3 = 0;
  }
  *(unsigned char *)(v0 + 16) = v3;
  qword_1E96F2218 = v0;
  unk_1E96F2220 = &off_1EFC99348;
}

void sub_1A736DA74(char a1, void *a2, void *a3)
{
  if ((a1 & 1) == 0)
  {
    if (qword_1E96F0728 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1A7571E90();
    __swift_project_value_buffer(v5, (uint64_t)qword_1E96F2200);
    id v6 = a3;
    id v7 = a2;
    id v8 = v6;
    id v9 = a2;
    oslog = sub_1A7571E80();
    os_log_type_t v10 = sub_1A7572FD0();
    if (os_log_type_enabled(oslog, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v19 = v13;
      *(_DWORD *)uint64_t v11 = 138412546;
      id v14 = v8;
      sub_1A7573250();
      *uint64_t v12 = v8;

      *(_WORD *)(v11 + 12) = 2080;
      if (a2)
      {
        swift_getErrorValue();
        uint64_t v15 = sub_1A7574040();
        unint64_t v17 = v16;
      }
      else
      {
        unint64_t v17 = 0xE300000000000000;
        uint64_t v15 = 7104878;
      }
      sub_1A72D1730(v15, v17, &v19);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A72A1000, oslog, v10, "LSApplicationWorkspace cannot open the NSUserActivity. {userActivity: %@, error: %s}", (uint8_t *)v11, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v13, -1, -1);
      MEMORY[0x1AD0CD330](v11, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1A736DD20(uint64_t a1)
{
  id v2 = v1;
  v40[11] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1A75719C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  id v14 = (char *)&v38 - v13;
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = (char *)&v38 - v15;
  unint64_t v17 = (void *)sub_1A75718E0();
  id v18 = objc_msgSend(v1, sel_URLOverrideForURL_, v17);

  if (v18)
  {
    sub_1A7571940();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, 1, 1, v4);
  }
  sub_1A736EFD0((uint64_t)v14, (uint64_t)v16);
  sub_1A736F23C((uint64_t)v16, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v19 = (void *)sub_1A75718E0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
  *(void *)(inited + 32) = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  *(void *)(inited + 40) = v21;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 48) = 1;
  sub_1A72B0944(inited);
  uint64_t v22 = (void *)sub_1A75723D0();
  swift_bridgeObjectRelease();
  v40[0] = 0;
  unsigned int v23 = objc_msgSend(v2, sel_openURL_withOptions_error_, v19, v22, v40);

  id v24 = v40[0];
  if (v23)
  {
    sub_1A736F038((uint64_t)v16);
  }
  else
  {
    uint64_t v25 = v24;
    uint64_t v26 = (void *)sub_1A7571850();

    swift_willThrow();
    sub_1A736F038((uint64_t)v16);
    if (qword_1E96F0728 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1A7571E90();
    __swift_project_value_buffer(v27, (uint64_t)qword_1E96F2200);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    id v28 = v26;
    id v29 = v26;
    float64_t v30 = sub_1A7571E80();
    os_log_type_t v31 = sub_1A7572FD0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v38 = (void *)swift_slowAlloc();
      v40[0] = v38;
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v33 = sub_1A7571890();
      uint64_t v39 = sub_1A72D1730(v33, v34, (uint64_t *)v40);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      *(_WORD *)(v32 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v35 = sub_1A7574040();
      uint64_t v39 = sub_1A72D1730(v35, v36, (uint64_t *)v40);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A72A1000, v30, v31, "Error launching URL via LSApplicationWorkspace {url: %s, error: %s}", (uint8_t *)v32, 0x16u);
      int64_t v37 = v38;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v37, -1, -1);
      MEMORY[0x1AD0CD330](v32, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

uint64_t sub_1A736E294()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1A736E2A4(int a1, id a2)
{
  id v2 = objc_msgSend(a2, sel_bundleIdentifier);
  if (!v2) {
    return 0;
  }
  char v3 = v2;
  uint64_t v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v4;
}

uint64_t sub_1A736E30C(int a1, id a2)
{
  uint64_t v3 = v2;
  id v4 = objc_msgSend(a2, sel_bundleIdentifier);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v8 = v7;

    uint64_t v9 = sub_1A7571980();
    if (!v10) {
      return v6;
    }
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = sub_1A7571980();
    if (!v10) {
      return v6;
    }
  }
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (v9 == 7103860 && v10 == 0xE300000000000000
    || (sub_1A7573DB0() & 1) != 0
    || v11 == 0x656D697465636166 && v12 == 0xEE006F696475612DLL
    || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v3 + 16)) {
      return 0xD000000000000015;
    }
    else {
      return 0xD000000000000012;
    }
  }
  if (v11 == 0x656D697465636166 && v12 == 0xE800000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    uint64_t v6 = 0xD000000000000012;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v6;
  }
  if (v11 == 1886680168 && v12 == 0xE400000000000000
    || (sub_1A7573DB0() & 1) != 0
    || v11 == 0x7370747468 && v12 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    if (v8) {
      return v6;
    }
    return 0xD000000000000016;
  }
  char v14 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0 && !v8) {
    return 0xD000000000000016;
  }
  return v6;
}

uint64_t sub_1A736E5AC()
{
  return MEMORY[0x1F4186488](v0, 17, 7);
}

uint64_t sub_1A736E5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A75719C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E96F0730 != -1) {
    swift_once();
  }
  uint64_t v8 = unk_1E96F2220;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, ObjectType, v8);
  if (!v11)
  {
    if (qword_1E96F0728 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1A7571E90();
    __swift_project_value_buffer(v12, (uint64_t)qword_1E96F2200);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    uint64_t v13 = sub_1A7571E80();
    os_log_type_t v14 = sub_1A7572FD0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v27 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v17 = sub_1A7571980();
      uint64_t v24 = v16;
      if (v18)
      {
        uint64_t v25 = v17;
        uint64_t v26 = v18;
        uint64_t v19 = sub_1A7572670();
        unint64_t v21 = v20;
      }
      else
      {
        unint64_t v21 = 0xE300000000000000;
        uint64_t v19 = 7104878;
      }
      uint64_t v25 = sub_1A72D1730(v19, v21, &v27);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl(&dword_1A72A1000, v13, v14, "Cannot resolve bundle ID for universal link {scheme: %s}", v15, 0xCu);
      uint64_t v22 = v24;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v22, -1, -1);
      MEMORY[0x1AD0CD330](v15, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  return v10;
}

uint64_t sub_1A736E8BC(void *a1, id a2)
{
  id v3 = objc_msgSend(a2, sel_bundleIdentifier);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  }
  else
  {
    if (qword_1E96F0728 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1A7571E90();
    __swift_project_value_buffer(v6, (uint64_t)qword_1E96F2200);
    id v7 = a1;
    uint64_t v8 = sub_1A7571E80();
    os_log_type_t v9 = sub_1A7572FD0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412290;
      id v12 = v7;
      sub_1A7573250();
      *uint64_t v11 = v7;

      _os_log_impl(&dword_1A72A1000, v8, v9, "LSApplicationRecord bundle ID is nil for user activity %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v11, -1, -1);
      MEMORY[0x1AD0CD330](v10, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  return v5;
}

id sub_1A736EAA0(void *a1, unsigned __int8 *a2, double a3)
{
  if (*a2 >= 3u)
  {
    if (qword_1E96F0728 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1A7571E90();
    __swift_project_value_buffer(v5, (uint64_t)qword_1E96F2200);
    uint64_t v6 = sub_1A7571E80();
    os_log_type_t v7 = sub_1A7572FE0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1A72A1000, v6, v7, "Unexpected macOS enum case encountered in UIKit code", v8, 2u);
      MEMORY[0x1AD0CD330](v8, -1, -1);
    }
  }
  id v9 = objc_msgSend(self, sel_imageDescriptorNamed_, *MEMORY[0x1E4F6F2B8]);
  objc_msgSend(v9, sel_setScale_, a3);
  objc_msgSend(v9, sel_setDrawBorder_, 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1A757DB80;
  *(void *)(v10 + 32) = v9;
  sub_1A7572A30();
  sub_1A736F2E4();
  id v11 = v9;
  id v12 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_prepareImagesForImageDescriptors_, v12);

  id v13 = objc_msgSend(a1, sel_CGImageForDescriptor_, v11);
  return v13;
}

id sub_1A736EC9C(uint64_t a1, unint64_t a2, char *a3, double a4)
{
  char v7 = *a3;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F6F248]);
  swift_bridgeObjectRetain();
  id v9 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_initWithBundleIdentifier_, v9);

  if (qword_1E96F0728 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1A7571E90();
  __swift_project_value_buffer(v11, (uint64_t)qword_1E96F2200);
  swift_bridgeObjectRetain_n();
  id v12 = v10;
  id v13 = sub_1A7571E80();
  os_log_type_t v14 = sub_1A7572FF0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v23 = a1;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = v25;
    *(_DWORD *)uint64_t v15 = 138413058;
    os_log_type_t type = v14;
    char v17 = v7;
    id v18 = v12;
    sub_1A7573250();
    void *v16 = v12;

    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A72D1730(v23, a2, &v26);
    char v7 = v17;
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 22) = 2080;
    uint64_t v19 = sub_1A7572670();
    sub_1A72D1730(v19, v20, &v26);
    sub_1A7573250();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2048;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v13, type, "resolved icon %@ for %s (format: %s, scale: %f)", (uint8_t *)v15, 0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v16, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v25, -1, -1);
    MEMORY[0x1AD0CD330](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  LOBYTE(v26) = v7;
  id v21 = sub_1A736EAA0(v12, (unsigned __int8 *)&v26, a4);

  return v21;
}

uint64_t sub_1A736EFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A736F038(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A736F09C()
{
  unint64_t result = qword_1E96F2228;
  if (!qword_1E96F2228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2228);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for REMApplicationIconFormat(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A736F1BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMApplicationIconFormat()
{
  return &type metadata for REMApplicationIconFormat;
}

uint64_t type metadata accessor for DefaultUniversalLinkAppIconBundleIDResolver()
{
  return self;
}

uint64_t type metadata accessor for IOSUniversalLinkAppIconBundleIDResolver()
{
  return self;
}

uint64_t sub_1A736F23C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A736F2A4()
{
  return swift_deallocObject();
}

void sub_1A736F2DC(char a1, void *a2)
{
  sub_1A736DA74(a1, a2, *(void **)(v2 + 16));
}

unint64_t sub_1A736F2E4()
{
  unint64_t result = qword_1E96F2230;
  if (!qword_1E96F2230)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E96F2230);
  }
  return result;
}

uint64_t UnfairLock.__allocating_init(options:)(_DWORD *a1)
{
  uint64_t v2 = swift_allocObject();
  LODWORD(a1) = *a1;
  int v3 = (_DWORD *)swift_slowAlloc();
  *(void *)(v2 + 16) = v3;
  *int v3 = 0;
  *(_DWORD *)(v2 + 24) = (a1 & 1) << 16;
  return v2;
}

Swift::Void __swiftcall UnfairLock.lock()()
{
}

Swift::Void __swiftcall UnfairLock.unlock()()
{
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
}

Swift::Void __swiftcall UnfairLock.assertOwner()()
{
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v0 + 16));
}

Swift::Void __swiftcall UnfairLock.assertNotOwner()()
{
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(v0 + 16));
}

uint64_t Lock.sync<A>(_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 8))(a3, a5);
  a1(v8);
  id v9 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 16);

  return v9(a3, a5);
}

ReminderKitInternal::UnfairLock::Options __swiftcall UnfairLock.Options.init(rawValue:)(ReminderKitInternal::UnfairLock::Options rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static UnfairLock.Options.dataSynchronization.getter(void *a1@<X8>)
{
  *a1 = 1;
}

uint64_t UnfairLock.Options.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t UnfairLock.init(options:)(int *a1)
{
  int v2 = *a1;
  int v3 = (_DWORD *)swift_slowAlloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = 0;
  *(_DWORD *)(v1 + 24) = (v2 & 1) << 16;
  return v1;
}

uint64_t UnfairLock.deinit()
{
  MEMORY[0x1AD0CD330](*(void *)(v0 + 16), -1, -1);
  return v0;
}

uint64_t UnfairLock.__deallocating_deinit()
{
  return sub_1A736F588(28);
}

uint64_t sub_1A736F4D0()
{
  return os_unfair_lock_lock_with_options();
}

void sub_1A736F4E0()
{
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)v0 + 16));
}

uint64_t MutexLock.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = swift_slowAlloc();
  *(void *)(v0 + 16) = v1;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  pthread_mutex_init((pthread_mutex_t *)v1, 0);
  return v0;
}

uint64_t MutexLock.init()()
{
  uint64_t v1 = swift_slowAlloc();
  *(void *)(v0 + 16) = v1;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  pthread_mutex_init((pthread_mutex_t *)v1, 0);
  return v0;
}

uint64_t MutexLock.__deallocating_deinit()
{
  return sub_1A736F588(24);
}

uint64_t sub_1A736F588(uint64_t a1)
{
  MEMORY[0x1AD0CD330](*(void *)(v1 + 16), -1, -1);

  return MEMORY[0x1F4186488](v1, a1, 7);
}

Swift::Void __swiftcall MutexLock.lock()()
{
  pthread_mutex_lock(*(pthread_mutex_t **)(v0 + 16));
}

Swift::Void __swiftcall MutexLock.unlock()()
{
  pthread_mutex_unlock(*(pthread_mutex_t **)(v0 + 16));
}

unint64_t sub_1A736F5E8()
{
  unint64_t result = qword_1E96F2238;
  if (!qword_1E96F2238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2238);
  }
  return result;
}

unint64_t sub_1A736F640()
{
  unint64_t result = qword_1E96F2240;
  if (!qword_1E96F2240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2240);
  }
  return result;
}

unint64_t sub_1A736F698()
{
  unint64_t result = qword_1EB703028;
  if (!qword_1EB703028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703028);
  }
  return result;
}

unint64_t sub_1A736F6F0()
{
  unint64_t result = qword_1EB703030;
  if (!qword_1EB703030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703030);
  }
  return result;
}

uint64_t sub_1A736F744()
{
  return pthread_mutex_lock(*(pthread_mutex_t **)(*(void *)v0 + 16));
}

uint64_t sub_1A736F750()
{
  return pthread_mutex_unlock(*(pthread_mutex_t **)(*(void *)v0 + 16));
}

uint64_t dispatch thunk of Lock.lock()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Lock.unlock()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for UnfairLock()
{
  return self;
}

uint64_t method lookup function for UnfairLock(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UnfairLock);
}

uint64_t dispatch thunk of UnfairLock.__allocating_init(options:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for UnfairLock.Options()
{
  return &type metadata for UnfairLock.Options;
}

uint64_t type metadata accessor for MutexLock()
{
  return self;
}

uint64_t method lookup function for MutexLock(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MutexLock);
}

uint64_t dispatch thunk of MutexLock.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1A736F838()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F2248);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F2248);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void NSFileManager.rem_createDirectoryIfNecessary(at:)()
{
  uint64_t v1 = v0;
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  char v11 = 0;
  sub_1A7571970();
  uint64_t v2 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  unsigned __int8 v3 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v2, &v11);

  if (v3)
  {
    if (v11) {
      return;
    }
    uint64_t v4 = self;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    sub_1A7571970();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    id v5 = (id)sub_1A75725E0();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v4, sel_internalErrorWithDebugDescription_, v5, 0x20746120656C6946, 0xE800000000000000);
  }
  else
  {
    char v7 = (void *)sub_1A75718E0();
    id v10 = 0;
    unsigned int v8 = objc_msgSend(v1, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v7, 1, 0, &v10);

    if (v8)
    {
      id v9 = v10;
      return;
    }
    id v5 = v10;
    sub_1A7571850();
  }

  swift_willThrow();
}

uint64_t sub_1A736FAE4(void *a1)
{
  uint64_t v2 = sub_1A75719C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571940();
  id v6 = a1;
  NSFileManager.rem_createDirectoryIfNecessary(at:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

  return 1;
}

id NSFileManager.rem_fileExists(at:)()
{
  sub_1A7571970();
  uint64_t v1 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v1, 0);

  return v2;
}

id sub_1A736FC9C(void *a1)
{
  uint64_t v2 = sub_1A75719C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571940();
  id v6 = a1;
  sub_1A7571970();
  char v7 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_fileExistsAtPath_isDirectory_, v7, 0);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8;
}

id NSFileManager.rem_fileExists(at:isDirectory:)(uint64_t a1, uint64_t a2)
{
  sub_1A7571970();
  uint64_t v4 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v2, sel_fileExistsAtPath_isDirectory_, v4, a2);

  return v5;
}

id sub_1A736FE30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1A75719C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571940();
  id v10 = a1;
  sub_1A7571970();
  char v11 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v10, sel_fileExistsAtPath_isDirectory_, v11, a4);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v12;
}

BOOL NSFileManager.rem_isEmptyDirectory(at:skipsHiddenFiles:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  v28[1] = *(id *)MEMORY[0x1E4F143B8];
  char v27 = 0;
  id v5 = (void *)sub_1A75718E0();
  unsigned int v6 = objc_msgSend(v2, sel_rem_fileExistsAtURL_isDirectory_, v5, &v27);

  BOOL result = 0;
  if (v6)
  {
    if (v27 == 1)
    {
      uint64_t v8 = (void *)sub_1A75718E0();
      if (a2) {
        uint64_t v9 = 4;
      }
      else {
        uint64_t v9 = 0;
      }
      v28[0] = 0;
      id v10 = objc_msgSend(v3, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v8, 0, v9, v28);

      id v11 = v28[0];
      if (v10)
      {
        sub_1A75719C0();
        uint64_t v12 = sub_1A7572A10();
        id v13 = v11;

        uint64_t v14 = *(void *)(v12 + 16);
        swift_bridgeObjectRelease();
        return v14 == 0;
      }
      id v15 = v28[0];
      uint64_t v16 = (void *)sub_1A7571850();

      swift_willThrow();
      if (qword_1E96F0738 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_1A7571E90();
      __swift_project_value_buffer(v17, (uint64_t)qword_1E96F2248);
      id v18 = v16;
      id v19 = v16;
      unint64_t v20 = sub_1A7571E80();
      os_log_type_t v21 = sub_1A7572FD0();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = (void *)swift_slowAlloc();
        v28[0] = v23;
        *(_DWORD *)uint64_t v22 = 136315138;
        swift_getErrorValue();
        uint64_t v24 = Error.rem_errorDescription.getter(v26);
        sub_1A72D1730(v24, v25, (uint64_t *)v28);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1A72A1000, v20, v21, "rem_isEmptyDirectory: contentsOfDirectory throws error: %s", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v23, -1, -1);
        MEMORY[0x1AD0CD330](v22, -1, -1);
      }
      else
      {
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_1A7370254(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = sub_1A75719C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571940();
  id v10 = a1;
  BOOL v11 = NSFileManager.rem_isEmptyDirectory(at:skipsHiddenFiles:)((uint64_t)v9, a4);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

void RDVectorDistanceCalculator.distance(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*v2)
  {
    if (*v2 == 1)
    {
      sub_1A73706F4(a1, a2);
      return;
    }
    swift_beginAccess();
    uint64_t v17 = *(void *)(a1 + 24);
    if (v17 < 0) {
      goto LABEL_50;
    }
    double v18 = 0.0;
    double v19 = 0.0;
    double v20 = 0.0;
    if (!v17)
    {
LABEL_42:
      double v55 = sqrt(v19) * sqrt(v20);
      double v56 = v18 / v55;
      if ((*(void *)&v55 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
        double v56 = 0.0;
      }
      acos(v56);
      return;
    }
    uint64_t v21 = a2 + 16;
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v22 = *(void *)(a1 + 16);
    uint64_t v23 = *(void *)(v22 + 16);
    if (v23)
    {
      uint64_t v24 = *(void *)v21;
      unint64_t v25 = *(void *)(*(void *)v21 + 16);
      if (!v25)
      {
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      uint64_t v26 = v22 + 32;
      double v27 = *(double *)(v22 + 32);
      uint64_t v28 = v24 + 32;
      double v29 = *(double *)(v24 + 32);
      double v19 = v27 * v27;
      double v20 = v29 * v29;
      double v18 = v27 * v29 + 0.0;
      if (v17 != 1)
      {
        unint64_t v30 = v25 - 1;
        if (v25 - 1 >= v23 - 1) {
          unint64_t v30 = v23 - 1;
        }
        if (v30 >= v17 - 2) {
          unint64_t v30 = v17 - 2;
        }
        unint64_t v31 = v30 + 1;
        if (v31 > 4)
        {
          uint64_t v41 = v31 & 3;
          if ((v31 & 3) == 0) {
            uint64_t v41 = 4;
          }
          unint64_t v42 = v31 - v41;
          unint64_t v32 = v42 + 1;
          unint64_t v43 = (float64x2_t *)(v22 + 56);
          uint64_t v44 = (float64x2_t *)(v24 + 56);
          do
          {
            float64x2_t v45 = v43[-1];
            float64x2_t v46 = v44[-1];
            float64x2_t v47 = vmulq_f64(v45, v45);
            float64x2_t v48 = vmulq_f64(*v43, *v43);
            float64x2_t v49 = vmulq_f64(v46, v46);
            float64x2_t v50 = vmulq_f64(*v44, *v44);
            float64x2_t v51 = vmulq_f64(v45, v46);
            float64x2_t v52 = vmulq_f64(*v43, *v44);
            double v18 = v18 + v51.f64[0] + v51.f64[1] + v52.f64[0] + v52.f64[1];
            double v19 = v19 + v47.f64[0] + v47.f64[1] + v48.f64[0] + v48.f64[1];
            double v20 = v20 + v49.f64[0] + v49.f64[1] + v50.f64[0] + v50.f64[1];
            v43 += 2;
            v44 += 2;
            v42 -= 4;
          }
          while (v42);
        }
        else
        {
          unint64_t v32 = 1;
        }
        while (v23 != v32)
        {
          if (v32 >= v25) {
            goto LABEL_48;
          }
          double v53 = *(double *)(v26 + 8 * v32);
          double v54 = *(double *)(v28 + 8 * v32);
          double v19 = v19 + v53 * v53;
          double v20 = v20 + v54 * v54;
          double v18 = v18 + v53 * v54;
          if (v17 == ++v32) {
            goto LABEL_42;
          }
        }
        goto LABEL_47;
      }
      goto LABEL_42;
    }
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 24);
  if (v5 < 0)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    return;
  }
  if (v5)
  {
    uint64_t v6 = a2 + 16;
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v7 = *(void *)(a1 + 16);
    uint64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      uint64_t v9 = *(void *)v6;
      unint64_t v10 = *(void *)(*(void *)v6 + 16);
      if (!v10)
      {
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      uint64_t v11 = v7 + 32;
      uint64_t v12 = v9 + 32;
      double v13 = (*(double *)(v7 + 32) - *(double *)(v9 + 32)) * (*(double *)(v7 + 32) - *(double *)(v9 + 32));
      if (v5 == 1) {
        return;
      }
      unint64_t v14 = v10 - 1;
      if (v10 - 1 >= v8 - 1) {
        unint64_t v14 = v8 - 1;
      }
      if (v14 >= v5 - 2) {
        unint64_t v14 = v5 - 2;
      }
      unint64_t v15 = v14 + 1;
      if (v15 > 4)
      {
        uint64_t v33 = v15 & 3;
        if ((v15 & 3) == 0) {
          uint64_t v33 = 4;
        }
        unint64_t v34 = v15 - v33;
        unint64_t v16 = v34 + 1;
        uint64_t v35 = (float64x2_t *)(v7 + 56);
        unint64_t v36 = (float64x2_t *)(v9 + 56);
        do
        {
          float64x2_t v37 = vsubq_f64(v35[-1], v36[-1]);
          float64x2_t v38 = vsubq_f64(*v35, *v36);
          float64x2_t v39 = vmulq_f64(v37, v37);
          float64x2_t v40 = vmulq_f64(v38, v38);
          double v13 = v13 + v39.f64[0] + v39.f64[1] + v40.f64[0] + v40.f64[1];
          v35 += 2;
          v36 += 2;
          v34 -= 4;
        }
        while (v34);
      }
      else
      {
        unint64_t v16 = 1;
      }
      while (v8 != v16)
      {
        if (v16 >= v10) {
          goto LABEL_46;
        }
        double v13 = v13
            + (*(double *)(v11 + 8 * v16) - *(double *)(v12 + 8 * v16))
            * (*(double *)(v11 + 8 * v16) - *(double *)(v12 + 8 * v16));
        if (v5 == ++v16) {
          return;
        }
      }
    }
    __break(1u);
    goto LABEL_46;
  }
}

uint64_t sub_1A73706F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t *)(a1 + 24);
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 24);
  if (v6 < 0) {
    goto LABEL_38;
  }
  if (v6)
  {
    uint64_t v7 = a1 + 16;
    uint64_t v8 = a2 + 16;
    swift_beginAccess();
    uint64_t result = swift_beginAccess();
    unint64_t v9 = 0;
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
    while (v9 < *(void *)(*(void *)v7 + 16))
    {
      if (v9 >= *(void *)(*(void *)v8 + 16)) {
        goto LABEL_35;
      }
      double v11 = *(double *)(*(void *)v7 + 8 * v9 + 32);
      double v12 = *(double *)(*(void *)v8 + 8 * v9 + 32);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1A72AC59C(0, v10[2] + 1, 1, v10);
        unint64_t v10 = (void *)result;
      }
      unint64_t v14 = v10[2];
      unint64_t v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        uint64_t result = (uint64_t)sub_1A72AC59C((void *)(v13 > 1), v14 + 1, 1, v10);
        unint64_t v10 = (void *)result;
      }
      ++v9;
      void v10[2] = v14 + 1;
      *(double *)&v10[v14 + 4] = v11 - v12;
      if (v6 == v9) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
LABEL_13:
  type metadata accessor for RDVector();
  *(void *)(swift_initStackObject() + 16) = v10;
  char v15 = sub_1A74D9EF8();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    uint64_t v16 = *v4;
    if (v16 < 0)
    {
LABEL_39:
      __break(1u);
      return result;
    }
    if (v16)
    {
      uint64_t v17 = (uint64_t *)(a2 + 16);
      swift_beginAccess();
      uint64_t result = swift_beginAccess();
      uint64_t v18 = *(void *)(a1 + 16);
      uint64_t v19 = *(void *)(v18 + 16);
      if (!v19)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v20 = *v17;
      unint64_t v21 = *(void *)(*v17 + 16);
      if (!v21)
      {
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      uint64_t v22 = v18 + 32;
      double v23 = *(double *)(v18 + 32);
      uint64_t v24 = v20 + 32;
      double v25 = *(double *)(v20 + 32);
      double v26 = v23 * v23;
      double v27 = v25 * v25;
      double v28 = v23 * v25 + 0.0;
      if (v16 != 1)
      {
        unint64_t v29 = v21 - 1;
        if (v21 - 1 >= v19 - 1) {
          unint64_t v29 = v19 - 1;
        }
        if (v29 >= v16 - 2) {
          unint64_t v29 = v16 - 2;
        }
        unint64_t v30 = v29 + 1;
        if (v30 > 4)
        {
          uint64_t v32 = v30 & 3;
          if ((v30 & 3) == 0) {
            uint64_t v32 = 4;
          }
          unint64_t v33 = v30 - v32;
          unint64_t v31 = v33 + 1;
          unint64_t v34 = (float64x2_t *)(v18 + 56);
          uint64_t v35 = (float64x2_t *)(v20 + 56);
          do
          {
            float64x2_t v36 = v34[-1];
            float64x2_t v37 = v35[-1];
            float64x2_t v38 = vmulq_f64(v36, v36);
            float64x2_t v39 = vmulq_f64(*v34, *v34);
            float64x2_t v40 = vmulq_f64(v37, v37);
            float64x2_t v41 = vmulq_f64(*v35, *v35);
            float64x2_t v42 = vmulq_f64(v36, v37);
            float64x2_t v43 = vmulq_f64(*v34, *v35);
            double v28 = v28 + v42.f64[0] + v42.f64[1] + v43.f64[0] + v43.f64[1];
            double v26 = v26 + v38.f64[0] + v38.f64[1] + v39.f64[0] + v39.f64[1];
            double v27 = v27 + v40.f64[0] + v40.f64[1] + v41.f64[0] + v41.f64[1];
            v34 += 2;
            v35 += 2;
            v33 -= 4;
          }
          while (v33);
        }
        else
        {
          unint64_t v31 = 1;
        }
        while (v19 != v31)
        {
          if (v31 >= v21) {
            goto LABEL_37;
          }
          double v44 = *(double *)(v22 + 8 * v31);
          double v45 = *(double *)(v24 + 8 * v31);
          double v26 = v26 + v44 * v44;
          double v27 = v27 + v45 * v45;
          double v28 = v28 + v44 * v45;
          if (v16 == ++v31) {
            return result;
          }
        }
        goto LABEL_36;
      }
    }
  }
  return result;
}

BOOL static RDVectorDistanceCalculator.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RDVectorDistanceCalculator.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t RDVectorDistanceCalculator.hashValue.getter()
{
  return sub_1A7574110();
}

unint64_t sub_1A7370AEC()
{
  unint64_t result = qword_1E96F2260;
  if (!qword_1E96F2260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2260);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RDVectorDistanceCalculator(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7370C0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RDVectorDistanceCalculator()
{
  return &type metadata for RDVectorDistanceCalculator;
}

__C::REMSortingStyle_optional __swiftcall REMSortingStyle.init(stringValue:)(Swift::String stringValue)
{
  object = stringValue._object;
  uint64_t countAndFlagsBits = stringValue._countAndFlagsBits;
  int v3 = (void *)*MEMORY[0x1E4F95030];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == stringValue._countAndFlagsBits
    && v4 == object)
  {
    goto LABEL_18;
  }
  char v6 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v6) {
    goto LABEL_19;
  }
  int v3 = (void *)*MEMORY[0x1E4F95048];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v7 == object) {
    goto LABEL_18;
  }
  char v9 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  int v3 = (void *)*MEMORY[0x1E4F95040];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v10 == object)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  char v12 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v12) {
    goto LABEL_19;
  }
  int v3 = (void *)*MEMORY[0x1E4F95038];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v13 == object) {
    goto LABEL_18;
  }
  char v17 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_19;
  }
  int v3 = (void *)*MEMORY[0x1E4F95058];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v18 == object) {
    goto LABEL_18;
  }
  char v19 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_19;
  }
  int v3 = (void *)*MEMORY[0x1E4F95050];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v20 == object) {
    goto LABEL_18;
  }
  char v21 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_19;
  }
  int v3 = (void *)*MEMORY[0x1E4F95028];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v22 == object) {
    goto LABEL_18;
  }
  char v23 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v23) {
    goto LABEL_19;
  }
  int v3 = (void *)*MEMORY[0x1E4F95020];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v24 == object) {
    goto LABEL_18;
  }
  char v25 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_19;
  }
  int v3 = (void *)*MEMORY[0x1E4F95060];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v26 == object) {
    goto LABEL_18;
  }
  char v27 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_19;
  }
  int v3 = (void *)*MEMORY[0x1E4F95068];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v28 == object) {
    goto LABEL_18;
  }
  char v29 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v29 & 1) == 0)
  {
    int v3 = 0;
    goto LABEL_21;
  }
LABEL_20:
  id v14 = v3;
LABEL_21:
  uint64_t v16 = v3;
  result.value._rawValue = v16;
  result.is_nil = v15;
  return result;
}

id REMSortingStyle.init(sortingStyle:)(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  switch(v1 >> 5)
  {
    case 1u:
      uint64_t v2 = (id *)MEMORY[0x1E4F95050];
      int v3 = (id *)MEMORY[0x1E4F95058];
      goto LABEL_6;
    case 2u:
      uint64_t v2 = (id *)MEMORY[0x1E4F95020];
      int v3 = (id *)MEMORY[0x1E4F95028];
      goto LABEL_6;
    case 3u:
      uint64_t v2 = (id *)MEMORY[0x1E4F95068];
      int v3 = (id *)MEMORY[0x1E4F95060];
      goto LABEL_6;
    case 4u:
      uint64_t v2 = (id *)MEMORY[0x1E4F95048];
      int v3 = (id *)MEMORY[0x1E4F95030];
      BOOL v4 = v1 == 128;
      goto LABEL_8;
    default:
      uint64_t v2 = (id *)MEMORY[0x1E4F95038];
      int v3 = (id *)MEMORY[0x1E4F95040];
LABEL_6:
      BOOL v4 = (v1 & 1) == 0;
LABEL_8:
      if (v4) {
        uint64_t v5 = v3;
      }
      else {
        uint64_t v5 = v2;
      }
      return *v5;
  }
}

uint64_t REMSortingStyle.dataViewSortingStyle.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v4 = v3;
  if (v2 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v4 == v5)
  {
    char v9 = 0x80;
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  char v7 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
    char v9 = 0x80;
    goto LABEL_9;
  }
  uint64_t v10 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v12 = v11;
  if (v10 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v12 == v13)
  {
    char v9 = -127;
    goto LABEL_8;
  }
  char v15 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v15)
  {
    char v9 = -127;
    goto LABEL_9;
  }
  uint64_t v16 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v18 = v17;
  if (v16 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v18 == v19)
  {
    char v9 = 0;
    goto LABEL_8;
  }
  char v20 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  char v9 = 0;
  if (v20) {
    goto LABEL_9;
  }
  uint64_t v21 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v23 = v22;
  if (v21 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v23 == v24)
  {
    char v9 = 1;
    goto LABEL_8;
  }
  char v25 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v25)
  {
    char v9 = 1;
    goto LABEL_9;
  }
  uint64_t v26 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v28 = v27;
  if (v26 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v28 == v29)
  {
    char v9 = 32;
    goto LABEL_8;
  }
  char v30 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v30)
  {
    char v9 = 32;
    goto LABEL_9;
  }
  uint64_t v31 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v33 = v32;
  if (v31 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v33 == v34)
  {
    char v9 = 33;
    goto LABEL_8;
  }
  char v35 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v35)
  {
    char v9 = 33;
    goto LABEL_9;
  }
  uint64_t v36 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v38 = v37;
  if (v36 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v38 == v39)
  {
    char v9 = 64;
    goto LABEL_8;
  }
  char v40 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v40)
  {
    char v9 = 64;
    goto LABEL_9;
  }
  uint64_t v41 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v43 = v42;
  if (v41 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v43 == v44)
  {
    char v9 = 65;
    goto LABEL_8;
  }
  char v45 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v45)
  {
    char v9 = 65;
    goto LABEL_9;
  }
  uint64_t v46 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v48 = v47;
  if (v46 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v48 == v49)
  {
    char v9 = 96;
    goto LABEL_8;
  }
  char v50 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v50)
  {
    char v9 = 96;
    goto LABEL_9;
  }
  uint64_t v51 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v53 = v52;
  if (v51 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v53 == v54)
  {
    char v9 = 97;
    goto LABEL_8;
  }
  char v55 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v55) {
    char v9 = 97;
  }
  else {
    char v9 = 0x80;
  }
LABEL_9:
  *a1 = v9;
  return result;
}

uint64_t sub_1A73714F8()
{
  return _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
}

uint64_t Locale.languageCodeIdentifier.getter()
{
  uint64_t v0 = sub_1A7571D10();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7029E8);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571D20();
  sub_1A7571CE0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v7 = sub_1A7571C20();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A72CB560((uint64_t)v6, &qword_1EB7029E8);
    return 0;
  }
  else
  {
    uint64_t v9 = sub_1A7571C10();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  return v9;
}

uint64_t sub_1A73716C8()
{
  uint64_t v0 = sub_1A7571D30();
  __swift_allocate_value_buffer(v0, qword_1E96F2268);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E96F2268);
  return sub_1A7571C00();
}

uint64_t static Locale.rem_unitTestDefaultLocale.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E96F0740 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A7571D30();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E96F2268);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

__C::NLLanguage __swiftcall Locale.Components.rem_language()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702960);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A7571CC0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7029E8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v0;
  sub_1A7571BD0();
  sub_1A7571C90();
  id v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v10, v4);
  uint64_t v15 = sub_1A7571C20();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
  {
    sub_1A72CB560((uint64_t)v13, &qword_1EB7029E8);
    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
  }
  else
  {
    uint64_t v17 = sub_1A7571C10();
    unint64_t v18 = v19;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  }
  uint64_t v28 = v17;
  unint64_t v29 = v18;
  sub_1A7571BD0();
  sub_1A7571CB0();
  v14(v8, v4);
  uint64_t v20 = sub_1A7571C70();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v3, 1, v20) == 1)
  {
    sub_1A72CB560((uint64_t)v3, &qword_1EB702960);
  }
  else
  {
    sub_1A7571C10();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v20);
    uint64_t v26 = 45;
    unint64_t v27 = 0xE100000000000000;
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = sub_1A75725E0();
  swift_bridgeObjectRelease();
  return (__C::NLLanguage)v22;
}

Swift::String __swiftcall Locale.Components.rem_languageAndScriptWithRegion()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701688);
  MEMORY[0x1F4188790](v1 - 8);
  char v35 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702960);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A7571CC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v33 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7029E8);
  MEMORY[0x1F4188790](v16 - 8);
  unint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v0;
  sub_1A7571BD0();
  sub_1A7571C90();
  unint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v36 = v6;
  v19(v15, v6);
  uint64_t v20 = sub_1A7571C20();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
  {
    sub_1A72CB560((uint64_t)v18, &qword_1EB7029E8);
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
  }
  else
  {
    uint64_t v22 = sub_1A7571C10();
    unint64_t v23 = v24;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
  }
  uint64_t v39 = v22;
  char v40 = (void *)v23;
  sub_1A7571BD0();
  sub_1A7571CB0();
  v19(v13, v36);
  uint64_t v25 = sub_1A7571C70();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v5, 1, v25) == 1)
  {
    sub_1A72CB560((uint64_t)v5, &qword_1EB702960);
  }
  else
  {
    sub_1A7571C10();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v25);
    uint64_t v37 = 45;
    unint64_t v38 = 0xE100000000000000;
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    swift_bridgeObjectRelease();
  }
  sub_1A7571BD0();
  uint64_t v27 = (uint64_t)v35;
  sub_1A7571CA0();
  v19(v10, v36);
  uint64_t v28 = sub_1A7571C50();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_1A72CB560(v27, &qword_1EB701688);
  }
  else
  {
    sub_1A7571C10();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    uint64_t v37 = 95;
    unint64_t v38 = 0xE100000000000000;
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = v39;
  uint64_t v31 = v40;
  result._object = v31;
  result._uint64_t countAndFlagsBits = v30;
  return result;
}

uint64_t sub_1A7372004()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F2280);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F2280);
  if (qword_1EB704BF8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F68);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t REMSmartListType.hasPredefinedObjectID.getter()
{
  uint64_t v0 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v2 = v1;
  if (v0 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v2 == v3) {
    goto LABEL_14;
  }
  char v5 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    uint64_t v7 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v9 = v8;
    if (v7 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v9 != v10)
    {
      char v12 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12) {
        return 1;
      }
      uint64_t v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v15 = v14;
      if (v13 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v15 != v16)
      {
        char v18 = sub_1A7573DB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18) {
          return 1;
        }
        uint64_t v19 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v21 = v20;
        if (v19 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v21 != v22)
        {
          char v23 = sub_1A7573DB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v23) {
            return 1;
          }
          uint64_t v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          uint64_t v26 = v25;
          if (v24 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v26 != v27)
          {
            char v28 = sub_1A7573DB0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v28) {
              return 1;
            }
            uint64_t v29 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
            uint64_t v31 = v30;
            if (v29 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v31 != v32)
            {
              char v33 = sub_1A7573DB0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v33) {
                return 1;
              }
              uint64_t v34 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
              uint64_t v36 = v35;
              if (v34 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v36 != v37)
              {
                char v38 = sub_1A7573DB0();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v38) {
                  return 1;
                }
                uint64_t v39 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
                uint64_t v41 = v40;
                if (v39 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v41 != v42)
                {
                  char v43 = sub_1A7573DB0();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v43) {
                    return 1;
                  }
                  uint64_t v44 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
                  uint64_t v46 = v45;
                  if (v44 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v46 != v47) {
                    sub_1A7573DB0();
                  }
                  uint64_t v6 = 0;
LABEL_15:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  return v6;
                }
              }
            }
          }
        }
      }
    }
LABEL_14:
    uint64_t v6 = 1;
    goto LABEL_15;
  }
  return 1;
}

uint64_t REMSmartListType.hasPredefinedManualOrderingObjectID.getter()
{
  uint64_t v0 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v2 = v1;
  if (v0 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v2 == v3) {
    goto LABEL_14;
  }
  char v5 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    uint64_t v7 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v9 = v8;
    if (v7 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v9 != v10)
    {
      char v12 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12) {
        return 1;
      }
      uint64_t v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v15 = v14;
      if (v13 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v15 != v16)
      {
        char v18 = sub_1A7573DB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18) {
          return 1;
        }
        uint64_t v19 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v21 = v20;
        if (v19 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v21 != v22)
        {
          char v23 = sub_1A7573DB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v23) {
            return 1;
          }
          uint64_t v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          uint64_t v26 = v25;
          if (v24 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v26 != v27)
          {
            char v28 = sub_1A7573DB0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v28) {
              return 1;
            }
            uint64_t v29 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
            uint64_t v31 = v30;
            if (v29 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v31 != v32)
            {
              char v33 = sub_1A7573DB0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v33) {
                return 1;
              }
              uint64_t v34 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
              uint64_t v36 = v35;
              if (v34 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v36 != v37)
              {
                char v38 = sub_1A7573DB0();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v38) {
                  return 1;
                }
                uint64_t v39 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
                uint64_t v41 = v40;
                if (v39 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v41 == v42) {
                  goto LABEL_32;
                }
                char v43 = sub_1A7573DB0();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v6 = 0;
                if (v43) {
                  return v6;
                }
                uint64_t v44 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
                uint64_t v46 = v45;
                if (v44 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v46 == v47)
                {
LABEL_32:
                  uint64_t v6 = 0;
                }
                else
                {
                  sub_1A7573DB0();
                  uint64_t v6 = 0;
                }
LABEL_15:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return v6;
              }
            }
          }
        }
      }
    }
LABEL_14:
    uint64_t v6 = 1;
    goto LABEL_15;
  }
  return 1;
}

uint64_t static REMSmartListType.manualOrderablePredefinedSmartListTypes.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7010F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A757E010;
  uint64_t v1 = (void *)*MEMORY[0x1E4F95018];
  uint64_t v2 = (void *)*MEMORY[0x1E4F95000];
  *(void *)(v0 + 32) = *MEMORY[0x1E4F95018];
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = (void *)*MEMORY[0x1E4F94FD8];
  uint64_t v4 = (void *)*MEMORY[0x1E4F94FF8];
  *(void *)(v0 + 48) = *MEMORY[0x1E4F94FD8];
  *(void *)(v0 + 56) = v4;
  char v5 = (void *)*MEMORY[0x1E4F94FE8];
  uint64_t v6 = (void *)*MEMORY[0x1E4F94FE0];
  *(void *)(v0 + 64) = *MEMORY[0x1E4F94FE8];
  *(void *)(v0 + 72) = v6;
  id v7 = v1;
  id v8 = v2;
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  id v12 = v6;
  return v0;
}

uint64_t REMSmartListType.supportsUserDefinedVisibility.getter(void *a1)
{
  uint64_t v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v4 = v3;
  if (v2 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v4 == v5) {
    goto LABEL_13;
  }
  char v7 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7) {
    return 1;
  }
  uint64_t v8 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v10 = v9;
  if (v8 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v10 == v11)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v13 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13) {
    return 1;
  }
  uint64_t v14 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v16 = v15;
  if (v14 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v16 == v17) {
    goto LABEL_13;
  }
  char v19 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19) {
    return 1;
  }
  uint64_t v20 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v22 = v21;
  if (v20 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v22 == v23) {
    goto LABEL_13;
  }
  char v24 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v24) {
    return 1;
  }
  uint64_t v25 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v27 = v26;
  if (v25 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v27 == v28) {
    goto LABEL_13;
  }
  char v29 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v29) {
    return 1;
  }
  uint64_t v30 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v32 = v31;
  if (v30 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v32 == v33) {
    goto LABEL_13;
  }
  char v34 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v34) {
    return 1;
  }
  uint64_t v35 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v37 = v36;
  if (v35 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v37 == v38) {
    goto LABEL_28;
  }
  char v39 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if ((v39 & 1) == 0)
  {
    uint64_t v40 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v42 = v41;
    if (v40 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v42 == v43) {
      goto LABEL_28;
    }
    char v44 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if (v44) {
      return result;
    }
    uint64_t v45 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v47 = v46;
    if (v45 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v47 == v48)
    {
LABEL_28:
      swift_bridgeObjectRelease_n();
      return 0;
    }
    char v49 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v49 & 1) == 0)
    {
      if (qword_1E96F0748 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_1A7571E90();
      __swift_project_value_buffer(v50, (uint64_t)qword_1E96F2280);
      id v51 = a1;
      uint64_t v52 = sub_1A7571E80();
      os_log_type_t v53 = sub_1A7572FE0();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        uint64_t v58 = v55;
        *(_DWORD *)uint64_t v54 = 136315138;
        uint64_t v56 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        sub_1A72D1730(v56, v57, &v58);
        sub_1A7573250();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v52, v53, "REMSmartListType.supportsUserDefinedVisibility: Unhandled smartListType {smartListType: %s}", v54, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v55, -1, -1);
        MEMORY[0x1AD0CD330](v54, -1, -1);
      }
      else
      {
      }
      return 0;
    }
  }
  return result;
}

void *_sSo16REMSmartListTypea19ReminderKitInternalE11stringValueABSgSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*MEMORY[0x1E4F95018];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v5 == a2) {
    goto LABEL_18;
  }
  char v7 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_19;
  }
  uint64_t v4 = (void *)*MEMORY[0x1E4F94FF8];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v8 == a2) {
    goto LABEL_18;
  }
  char v10 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v4 = (void *)*MEMORY[0x1E4F95000];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v11 == a2)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  char v13 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_19;
  }
  uint64_t v4 = (void *)*MEMORY[0x1E4F94FD8];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v14 == a2) {
    goto LABEL_18;
  }
  char v17 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_19;
  }
  uint64_t v4 = (void *)*MEMORY[0x1E4F94FE0];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v18 == a2) {
    goto LABEL_18;
  }
  char v19 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_19;
  }
  uint64_t v4 = (void *)*MEMORY[0x1E4F95008];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v20 == a2) {
    goto LABEL_18;
  }
  char v21 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_19;
  }
  uint64_t v4 = (void *)*MEMORY[0x1E4F94FF0];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v22 == a2) {
    goto LABEL_18;
  }
  char v23 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v23) {
    goto LABEL_19;
  }
  uint64_t v4 = (void *)*MEMORY[0x1E4F95010];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v24 == a2) {
    goto LABEL_18;
  }
  char v25 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_19;
  }
  uint64_t v4 = (void *)*MEMORY[0x1E4F94FE8];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v26 == a2) {
    goto LABEL_18;
  }
  char v27 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0) {
    return 0;
  }
LABEL_20:
  id v15 = v4;
  return v4;
}

id sub_1A7373150()
{
  id v0 = (id)sub_1A73733FC();

  return v0;
}

id REMOrderedIdentifierMap.IdentifiableContainer.remObjectID.getter()
{
  id v0 = (void *)sub_1A73733FC();

  return v0;
}

uint64_t REMOrderedIdentifierMap.IdentifiableContainer.nonIdentifiable.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 96));
}

char *REMOrderedIdentifierMap.IdentifiableContainer.__allocating_init(remObjectID:nonIdentifiable:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (char *)swift_allocObject();
  uint64_t v5 = *(void *)v4;
  *((void *)v4 + 2) = a1;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 32))(&v4[*(void *)(v5 + 96)], a2);
  return v4;
}

char *REMOrderedIdentifierMap.IdentifiableContainer.init(remObjectID:nonIdentifiable:)(uint64_t a1)
{
  uint64_t v2 = *(void *)v1;
  *((void *)v1 + 2) = a1;
  (*(void (**)(char *))(*(void *)(*(void *)(v2 + 80) - 8) + 32))(&v1[*(void *)(v2 + 96)]);
  return v1;
}

id *REMOrderedIdentifierMap.IdentifiableContainer.deinit()
{
  uint64_t v1 = *v0;

  (*(void (**)(char *))(*(void *)(v1[10] - 8) + 8))((char *)v0 + *((void *)*v0 + 12));
  return v0;
}

uint64_t REMOrderedIdentifierMap.IdentifiableContainer.__deallocating_deinit()
{
  REMOrderedIdentifierMap.IdentifiableContainer.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_1A73733FC()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1A7373404()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for REMOrderedIdentifierMap.IdentifiableContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for REMOrderedIdentifierMap.IdentifiableContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMOrderedIdentifierMap.IdentifiableContainer);
}

uint64_t dispatch thunk of REMOrderedIdentifierMap.IdentifiableContainer.__allocating_init(remObjectID:nonIdentifiable:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t Result.eraseToCodableError()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(unsigned char *))(v5 + 16))(&v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  long long v8 = *(_OWORD *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 32);
  sub_1A7373908();
  return sub_1A7373734((void (*)(char *))sub_1A7373728, a1, a2);
}

void sub_1A73735F0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  char v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  uint64_t v8 = sub_1A7573D60();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a2);
  }
  else
  {
    uint64_t v9 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10, v7, a2);
  }
  CodableError.init(_:)(v9, a3);
}

void sub_1A7373728(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1A73735F0(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1A7373734@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v10, v3, v7);
    a1(v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1A7574170();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a2 + 16) - 8) + 32))(a3, v3, *(void *)(a2 + 16));
    sub_1A7574170();
    return swift_storeEnumTagMultiPayload();
  }
}

unint64_t sub_1A7373908()
{
  unint64_t result = qword_1EB704AF8;
  if (!qword_1EB704AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704AF8);
  }
  return result;
}

uint64_t Result.get(replacingErrorWith:failureDescription:log:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v26[7] = a4;
  v26[9] = a3;
  v26[5] = a2;
  unsigned char v26[12] = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F22F8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = sub_1A7571E90();
  v26[13] = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  v26[14] = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26[6] = *(void *)(*(void *)(a5 + 24) - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v26[4] = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v26[8] = (char *)v26 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  char v23 = (char *)v26 - v22;
  MEMORY[0x1F4188790](v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v15, v6, a5);
  v26[10] = a5;
  v26[11] = a6;
  return sub_1A7373F9C(a5, (uint64_t)v23, a6);
}

uint64_t sub_1A7373F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t Result.zip<A>(_:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1A7374474((void (*)(unsigned char *))sub_1A7375CD8, a1);
}

uint64_t sub_1A73740FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  char v39 = a7;
  uint64_t v36 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  v34[1] = a5;
  uint64_t v35 = sub_1A7574170();
  v34[0] = *(void *)(v35 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v35);
  uint64_t v16 = (char *)v34 - v15;
  uint64_t v17 = *(void *)(a4 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v14);
  uint64_t v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)v34 - v21;
  uint64_t v37 = a3;
  uint64_t v38 = a6;
  uint64_t v23 = sub_1A7574170();
  MEMORY[0x1F4188790](v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))((char *)v34 - v24, a1, v23);
  uint64_t v26 = v40;
  sub_1A7373F9C(v23, (uint64_t)v22, a8);
  if (v26)
  {
    char v27 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v27(v20, v22, a4);
    uint64_t v28 = sub_1A7573D60();
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, a4);
    }
    else
    {
      uint64_t v29 = swift_allocError();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(v33, v20, a4);
    }
    *char v39 = v29;
  }
  else
  {
    uint64_t v31 = a8 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    uint64_t v32 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v34[0] + 16))(v16, v36, v35);
    return sub_1A7373F9C(v32, (uint64_t)&v41, v31);
  }
  return result;
}

uint64_t sub_1A7374474@<X0>(void (*a1)(unsigned char *)@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1A7574170();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v11[-v8];
  a1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(a2, v9, v6);
}

uint64_t Result.valueOrNil()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  (*(void (**)(unsigned char *))(v8 + 16))(&v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_1A7373F9C(a1, (uint64_t)v6, a2);
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 56))(a2, 0, 1);
}

uint64_t Result.failureOrNil()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
}

uint64_t Result<>.tryMap<A>(transform:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_1A73749C0((void (*)(char *))sub_1A7375D00, a1, a2);
}

uint64_t sub_1A73749C0@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, char *, void))(*(void *)(*(void *)(a2 + 24) - 8) + 32))(a3, v12, *(void *)(a2 + 24));
    sub_1A7574170();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    a1(v10);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t sub_1A7374BCC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A7374CD8(char a1)
{
  if (a1) {
    return 0x64616F6C796170;
  }
  else {
    return 0x54746E65746E6F63;
  }
}

uint64_t sub_1A7374D18(uint64_t a1)
{
  if (a1 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (a1) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A7374D30(char a1)
{
  return a1 & 1;
}

BOOL sub_1A7374D38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A7363EF8(*a1, *a2);
}

uint64_t sub_1A7374D64()
{
  return sub_1A7363F30();
}

uint64_t sub_1A7374D6C()
{
  return sub_1A7363F08();
}

uint64_t sub_1A7374D90()
{
  return sub_1A7574110();
}

uint64_t sub_1A7374DD0()
{
  return sub_1A7374CD8(*v0);
}

uint64_t sub_1A7374DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7374BCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A7374E08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A72AAA28();
  *a1 = result;
  return result;
}

uint64_t sub_1A7374E44(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A7374E98(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1A7374EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB570];

  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A7374F60(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB560];

  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1A7374FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB560];

  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A737503C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB560];

  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A73750AC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1A7374D18(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1A73750D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A7374D30(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1A7375104()
{
  return sub_1A75729E0();
}

uint64_t sub_1A7375178()
{
  return sub_1A7572990();
}

uint64_t Result<>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  uint64_t v45 = a5;
  uint64_t v43 = *(void *)(a3 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  char v49 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v46 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = v13;
  uint64_t v58 = v14;
  uint64_t v55 = v15;
  uint64_t v59 = v15;
  uint64_t v60 = v16;
  uint64_t v50 = v16;
  uint64_t v51 = v17;
  uint64_t v53 = v18;
  uint64_t v61 = v18;
  uint64_t v62 = v17;
  uint64_t v63 = v19;
  _s10CodingKeysOMa_0();
  swift_getWitnessTable();
  uint64_t v20 = sub_1A7573A80();
  uint64_t v47 = *(void *)(v20 - 8);
  uint64_t v48 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v41 - v21;
  uint64_t v54 = a3;
  uint64_t v52 = a4;
  uint64_t v23 = sub_1A7574170();
  uint64_t v44 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v41 - v24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v26 = v56;
  sub_1A7574190();
  if (!v26)
  {
    uint64_t v41 = v25;
    uint64_t v27 = v47;
    uint64_t v56 = v23;
    uint64_t v57 = a2;
    uint64_t v58 = v54;
    uint64_t v59 = v55;
    uint64_t v28 = v49;
    uint64_t v60 = v50;
    uint64_t v61 = v53;
    uint64_t v62 = v51;
    uint64_t v63 = v52;
    _s11ContentTypeOMa();
    LOBYTE(v57) = 0;
    swift_getWitnessTable();
    uint64_t v29 = v48;
    sub_1A7573A50();
    uint64_t v30 = v22;
    uint64_t v31 = v27;
    LOBYTE(v57) = 1;
    if (v64)
    {
      uint64_t v32 = v28;
      uint64_t v33 = v54;
      sub_1A7573A50();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v29);
      char v34 = v41;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v41, v32, v33);
    }
    else
    {
      uint64_t v35 = v46;
      uint64_t v36 = a2;
      sub_1A7573A50();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v29);
      char v34 = v41;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v35, v36);
    }
    uint64_t v37 = v44;
    uint64_t v38 = v45;
    uint64_t v39 = v56;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v38, v34, v39);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t Result<>.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v39 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v41 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = *(void *)(*(void *)(v6 + 16) - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v40 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 32);
  uint64_t v45 = v15;
  uint64_t v46 = v16;
  uint64_t v54 = v16;
  uint64_t v55 = v17;
  uint64_t v49 = v17;
  uint64_t v43 = v18;
  uint64_t v44 = v19;
  uint64_t v56 = v18;
  uint64_t v57 = v15;
  uint64_t v58 = v19;
  uint64_t v59 = v20;
  uint64_t v47 = v20;
  uint64_t v42 = v14;
  uint64_t v60 = v14;
  _s10CodingKeysOMa_0();
  swift_getWitnessTable();
  uint64_t v21 = sub_1A7573B80();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v51 = v21;
  uint64_t v52 = v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v38 - v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v50 = v24;
  sub_1A75741B0();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v53, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = v39;
    uint64_t v26 = v41;
    uint64_t v27 = v49;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v41, v12, v49);
    __int16 v61 = 256;
    uint64_t v54 = v46;
    uint64_t v55 = v27;
    uint64_t v56 = v43;
    uint64_t v57 = v45;
    uint64_t v58 = v44;
    uint64_t v59 = v47;
    uint64_t v60 = v42;
    _s11ContentTypeOMa();
    swift_getWitnessTable();
    uint64_t v28 = v50;
    uint64_t v29 = v51;
    uint64_t v30 = v48;
    sub_1A7573B60();
    if (!v30)
    {
      LOBYTE(v54) = 1;
      sub_1A7573B60();
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v28, v29);
  }
  else
  {
    uint64_t v32 = v38;
    uint64_t v33 = v40;
    uint64_t v34 = v46;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v40, v12, v46);
    __int16 v61 = 0;
    uint64_t v54 = v34;
    uint64_t v55 = v49;
    uint64_t v56 = v43;
    uint64_t v57 = v45;
    uint64_t v58 = v44;
    uint64_t v59 = v47;
    uint64_t v60 = v42;
    _s11ContentTypeOMa();
    swift_getWitnessTable();
    uint64_t v35 = v50;
    uint64_t v36 = v51;
    uint64_t v37 = v48;
    sub_1A7573B60();
    if (!v37)
    {
      LOBYTE(v54) = 1;
      sub_1A7573B60();
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v35, v36);
  }
}

uint64_t sub_1A7375BC0@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return Result<>.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1A7375BEC(void *a1, uint64_t a2)
{
  return Result<>.encode(to:)(a1, a2);
}

uint64_t sub_1A7375C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F22F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A7375C78(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F22F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A7375CD8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A73740FC(v2[6], v2[7], v2[2], v2[3], v2[4], v2[5], a1, a2);
}

uint64_t sub_1A7375D00@<X0>(uint64_t a1@<X8>)
{
  return sub_1A7374474((void (*)(unsigned char *))sub_1A7375F24, a1);
}

uint64_t _s10CodingKeysOMa_0()
{
  return swift_getGenericMetadata();
}

uint64_t _s11ContentTypeOMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1A7375DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 56);
}

unsigned char *sub_1A7375DC0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7375E8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1A7375EB4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A7375ED0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A7375EEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A7375F08()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A7375F24(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 32))(*(void *)(v1 + 48));
  if (v2) {
    *a1 = v2;
  }
  return result;
}

uint64_t REMTemplate.publicLinkStatus.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A7571B60();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v23 - v12;
  id v14 = objc_msgSend(v2, sel_mostRecentPublicLinkUpdateRequestDate);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_6;
  }
  uint64_t v15 = v14;
  sub_1A7571B20();

  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v6, v11, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_6:
    uint64_t result = sub_1A731D4F8((uint64_t)v6);
    uint64_t v18 = 0;
    char v22 = 0;
    goto LABEL_7;
  }
  v16(v13, v6, v7);
  id v17 = objc_msgSend(v2, sel_publicLink);
  if (v17)
  {
    uint64_t v18 = (uint64_t)v17;
    id v19 = objc_msgSend(v17, sel_lastModifiedDate);
    sub_1A7571B20();

    LOBYTE(v19) = sub_1A7571AC0();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
    v20(v11, v7);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v20)(v13, v7);
    char v22 = v19 & 1;
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    char v22 = 0;
    uint64_t v18 = 1;
  }
LABEL_7:
  *(void *)a1 = v18;
  *(unsigned char *)(a1 + 8) = v22;
  return result;
}

uint64_t _sSo11REMTemplateC19ReminderKitInternalE16PublicLinkStatusO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  id v4 = *(id *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  if (!*(void *)a1)
  {
    if (!v4)
    {
      sub_1A73765C8(0);
      sub_1A73765C8(0);
      char v6 = 1;
      return v6 & 1;
    }
    goto LABEL_8;
  }
  if (v2 == (void *)1)
  {
    if (v4 == (id)1)
    {
      char v6 = 1;
      sub_1A73765C8((id)1);
      sub_1A73765C8((id)1);
      return v6 & 1;
    }
LABEL_8:
    sub_1A73765B8(*(id *)a2);
    sub_1A73765B8(v2);
    sub_1A73765C8(v2);
    sub_1A73765C8(v4);
    char v6 = 0;
    return v6 & 1;
  }
  if ((unint64_t)v4 < 2) {
    goto LABEL_8;
  }
  sub_1A73765D8();
  sub_1A73765B8(v4);
  sub_1A73765B8(v2);
  char v7 = sub_1A7573190();
  sub_1A73765C8(v2);
  sub_1A73765C8(v4);
  if (v7) {
    char v6 = ((v3 & 1) == 0) ^ v5;
  }
  else {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t _s16PublicLinkStatusOwCP(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  }
  else
  {
    *(void *)a1 = v3;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    id v4 = v3;
  }
  return a1;
}

void _s16PublicLinkStatusOwxx(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

uint64_t _s16PublicLinkStatusOwca(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  char v5 = *(void **)a2;
  if (*(void *)a1 < 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      id v7 = v5;
      return a1;
    }
LABEL_7:
    uint64_t v8 = *(void **)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    *(void *)a1 = v8;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    goto LABEL_7;
  }
  *(void *)a1 = v5;
  id v6 = v5;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t _s16PublicLinkStatusOwta(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {

LABEL_5:
    *(void *)a1 = *(void *)a2;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;

LABEL_6:
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t _s16PublicLinkStatusOwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 9)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s16PublicLinkStatusOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1A7376588(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    *(unsigned char *)(result + 8) = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for REMTemplate.PublicLinkStatus()
{
  return &type metadata for REMTemplate.PublicLinkStatus;
}

id sub_1A73765B8(id result)
{
  if ((unint64_t)result >= 2) {
    return result;
  }
  return result;
}

void sub_1A73765C8(id a1)
{
  if ((unint64_t)a1 >= 2) {
}
  }

unint64_t sub_1A73765D8()
{
  unint64_t result = qword_1EB7054C0;
  if (!qword_1EB7054C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB7054C0);
  }
  return result;
}

uint64_t Collection<>.contains(hashtagOfType:)()
{
  return sub_1A7572940() & 1;
}

BOOL sub_1A7376674(id *a1)
{
  id v2 = *(id *)(v1 + 16);
  return objc_msgSend(*a1, sel_type) == v2;
}

uint64_t sub_1A73766B4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_1A75738D0())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)MEMORY[0x1AD0CB800](0, a2);
LABEL_5:
      id v6 = v5;
      type metadata accessor for REMObjectID_Codable();
      char v7 = sub_1A7573190();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = sub_1A7573190();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      MEMORY[0x1AD0CB800](v9, a2);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = sub_1A7573190();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A737682C()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F2300);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F2300);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

BOOL static REMCustomSmartListFilterDescriptor.Operation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t REMCustomSmartListFilterDescriptor.Operation.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t REMCustomSmartListFilterDescriptor.Operation.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterHashtags.hash(into:)()
{
  uint64_t v1 = *v0;
  if (*v0 && v1 != 1)
  {
    uint64_t v2 = v0[1];
    sub_1A75740D0();
    sub_1A75740D0();
    uint64_t v3 = *(void *)(v1 + 16);
    if (v3)
    {
      uint64_t v4 = v1 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1A75726F0();
        swift_bridgeObjectRelease();
        v4 += 16;
        --v3;
      }
      while (v3);
    }
    sub_1A75740D0();
    uint64_t v5 = *(void *)(v2 + 16);
    if (v5)
    {
      uint64_t v6 = v2 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1A75726F0();
        swift_bridgeObjectRelease();
        v6 += 16;
        --v5;
      }
      while (v5);
    }
  }
  return sub_1A75740D0();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterHashtags.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t sub_1A7376AD4()
{
  return sub_1A7574110();
}

uint64_t sub_1A7376B2C()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange::Direction_optional __swiftcall REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange::Direction_optional)rawValue;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.rawValue.getter()
{
  return *v0;
}

void *sub_1A7376BA4@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_1A7376BC4(void *a1@<X8>)
{
  *a1 = *v1;
}

ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange::Units_optional __swiftcall REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange::Units_optional)rawValue;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.rawValue.getter()
{
  return *v0;
}

ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange::Units_optional sub_1A7376BEC(Swift::Int *a1)
{
  return REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.init(rawValue:)(*a1);
}

void REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.direction.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.magnitude.getter()
{
  return *(void *)(v0 + 8);
}

void REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.units.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.includePastDue.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange __swiftcall REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)(ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange::Direction direction, Swift::Int magnitude, ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange::Units units, Swift::Bool includePastDue)
{
  char v5 = *(unsigned char *)units;
  *(unsigned char *)uint64_t v4 = *(unsigned char *)direction;
  *(void *)(v4 + 8) = magnitude;
  *(unsigned char *)(v4 + 16) = v5;
  *(unsigned char *)(v4 + 17) = includePastDue;
  result.magnitude = magnitude;
  result.units = units;
  result.direction = direction;
  return result;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.hash(into:)()
{
  return sub_1A75740E0();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t sub_1A7376D24()
{
  return sub_1A7574110();
}

uint64_t sub_1A7376DAC()
{
  return sub_1A75740E0();
}

uint64_t sub_1A7376E0C()
{
  return sub_1A7574110();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.hash(into:)()
{
  uint64_t v1 = sub_1A7571B60();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7383624(v0, (uint64_t)v10, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A734E5D8((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_1EB7058C8);
      sub_1A75740D0();
      sub_1A73836EC(&qword_1E96F2330, MEMORY[0x1E4F27928]);
      sub_1A7572520();
      sub_1A7572520();
      uint64_t result = sub_1A72CB560((uint64_t)v7, (uint64_t *)&unk_1EB7058C8);
      break;
    case 2u:
      sub_1A75740D0();
      sub_1A75740D0();
      sub_1A75740D0();
      sub_1A75740D0();
      uint64_t result = sub_1A75740E0();
      break;
    case 3u:
    case 4u:
    case 5u:
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v10, v1);
      sub_1A75740D0();
      sub_1A73836EC(&qword_1E96F2330, MEMORY[0x1E4F27928]);
      sub_1A7572520();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      break;
    case 6u:
    case 7u:
      uint64_t result = sub_1A75740D0();
      break;
    default:
      sub_1A75740D0();
      uint64_t result = sub_1A75740E0();
      break;
  }
  return result;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.hashValue.getter()
{
  return sub_1A737B8C4((void (*)(unsigned char *))REMCustomSmartListFilterDescriptor.FilterDate.hash(into:));
}

uint64_t sub_1A7377260(uint64_t a1, uint64_t a2)
{
  return sub_1A737B924(a1, a2, (void (*)(unsigned char *))REMCustomSmartListFilterDescriptor.FilterDate.hash(into:));
}

uint64_t sub_1A737727C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A737B988(a1, a2, a3, (void (*)(unsigned char *))REMCustomSmartListFilterDescriptor.FilterDate.hash(into:));
}

uint64_t REMCustomSmartListFilterDescriptor.FilterTime.matches(_:)(uint64_t a1)
{
  uint64_t v3 = sub_1A7571DE0();
  uint64_t v28 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A7571E00();
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A7571B60();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2338);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v17 = *v1;
  uint64_t v18 = (uint64_t)&v16[*(int *)(v14 + 56)];
  unsigned char *v16 = v17;
  sub_1A7383624(a1, v18, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v18, 1, v9);
  if (v17 == 5)
  {
    if (result != 1)
    {
      sub_1A7383734(v18, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType);
      return 0;
    }
  }
  else if (result == 1)
  {
    return 0;
  }
  else if (v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, v18, v9);
    sub_1A7571DC0();
    uint64_t v20 = v28;
    (*(void (**)(char *, void, uint64_t))(v28 + 104))(v5, *MEMORY[0x1E4F27C10], v3);
    uint64_t v26 = sub_1A7571DF0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v6);
    char v30 = v17;
    sub_1A7377644();
    uint64_t v22 = v21;
    char v29 = v17;
    sub_1A73776F8();
    uint64_t v24 = v23;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (v22 >= v24) {
      return v26 >= v22 || v26 < v24;
    }
    else {
      return v26 >= v22 && v26 < v24;
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v9);
    return 1;
  }
  return result;
}

void sub_1A7377644()
{
  switch(*v0)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      REMTimeOfDay.startHour.getter();
      break;
    default:
      return;
  }
}

void sub_1A73776F8()
{
  switch(*v0)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      REMTimeOfDay.endHour.getter();
      break;
    default:
      return;
  }
}

uint64_t REMCustomSmartListFilterDescriptor.FilterTime.matches(_:)(void *a1)
{
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v6 = *v1;
  if (objc_msgSend(a1, sel_isAllDay))
  {
    v12[14] = v6;
    uint64_t v7 = sub_1A7571B60();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  }
  else
  {
    v12[15] = v6;
    id v8 = objc_msgSend(a1, sel_date);
    sub_1A7571B20();

    uint64_t v9 = sub_1A7571B60();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 0, 1, v9);
  }
  char v10 = REMCustomSmartListFilterDescriptor.FilterTime.matches(_:)((uint64_t)v5);
  sub_1A7383734((uint64_t)v5, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType);
  return v10 & 1;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterTime.hash(into:)()
{
  return sub_1A75740D0();
}

BOOL static REMCustomSmartListFilterDescriptor.FilterTime.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterTime.hashValue.getter()
{
  return sub_1A7574110();
}

BOOL REMCustomSmartListFilterDescriptor.FilterLocation.matches(_:)(void *a1)
{
  if (!*(unsigned char *)(v1 + 48)) {
    return 0;
  }
  double v2 = *(double *)(v1 + 16);
  double v3 = *(double *)(v1 + 24);
  double v4 = *(double *)(v1 + 32);
  unint64_t v5 = *(void *)(v1 + 40);
  if (*(unsigned char *)(v1 + 48) == 1)
  {
    if (objc_msgSend(a1, sel_proximity) == (id)v5)
    {
      double v7 = v2;
      id v8 = objc_allocWithZone(MEMORY[0x1E4F1E5A8]);
      uint64_t v9 = (void *)sub_1A75725E0();
      id v10 = objc_msgSend(v8, sel_initWithCenter_radius_identifier_, v9, v7, v3, v4);

      id v11 = objc_msgSend(a1, sel_structuredLocation);
      id v12 = REMStructuredLocation.clCircularRegion.getter();

      LOBYTE(v11) = CLCircularRegion.overlaps(_:)((CLCircularRegion)v10);
      return v11 & 1;
    }
    return 0;
  }
  return (*(void *)(v1 + 8) | *(void *)v1 | *(void *)&v2 | *(void *)&v3 | *(void *)&v4 | v5) == 0;
}

{
  int8x16_t *v1;
  unint64_t v2;
  int8x16_t v5;

  double v2 = v1->i64[0];
  if (v1[3].i8[0])
  {
    if (v1[3].i8[0] == 1) {
      return 0;
    }
    unint64_t v5 = vorrq_s8(v1[1], v1[2]);
    return (*(void *)&vorr_s8(*(int8x8_t *)v5.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v5, v5, 8uLL)) | v1->i64[1] | v2) == 0;
  }
  else
  {
    return objc_msgSend(a1, sel_event) == (id)v2;
  }
}

Swift::Bool __swiftcall REMCustomSmartListFilterDescriptor.FilterLocation.matches(_:)(Swift::OpaquePointer_optional a1)
{
  uint64_t v2 = *(void *)(v1 + 8);
  double v3 = *(double *)(v1 + 16);
  double v38 = *(double *)(v1 + 32);
  double v39 = *(double *)(v1 + 24);
  unint64_t v40 = *(void *)(v1 + 40);
  unint64_t v41 = *(void *)v1;
  int v4 = *(unsigned __int8 *)(v1 + 48);
  if (!a1.value._rawValue)
  {
    id v12 = 0;
    uint64_t v13 = 0;
    if (v4) {
      goto LABEL_38;
    }
LABEL_11:
    if (v12)
    {
      id v14 = objc_msgSend(v12, sel_event);

      return v14 == (id)v41;
    }
    goto LABEL_45;
  }
  unint64_t rawValue = (unint64_t)a1.value._rawValue;
  uint64_t v37 = *(void *)(v1 + 8);
  uint64_t v6 = (uint64_t)a1.value._rawValue & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = (unint64_t)a1.value._rawValue >> 62;
  if ((unint64_t)a1.value._rawValue >> 62) {
    goto LABEL_59;
  }
  uint64_t v8 = *(void *)(((uint64_t)a1.value._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v8) {
    goto LABEL_60;
  }
  while (1)
  {
    double v36 = v3;
    if ((rawValue & 0xC000000000000001) == 0) {
      break;
    }
    uint64_t v9 = 0;
    double v3 = COERCE_DOUBLE(0x1E4F94000uLL);
    while (1)
    {
      MEMORY[0x1AD0CB800](v9, rawValue);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      self;
      uint64_t v11 = swift_dynamicCastObjCClass();
      if (v11)
      {
        uint64_t v13 = (void *)v11;
        goto LABEL_20;
      }
      swift_unknownObjectRelease();
      ++v9;
      if (v10 == v8) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    while (1)
    {
      __break(1u);
LABEL_59:
      swift_bridgeObjectRetain_n();
      uint64_t v8 = sub_1A75738D0();
      if (v8) {
        break;
      }
LABEL_60:
      swift_bridgeObjectRelease_n();
      uint64_t v13 = 0;
      if (!v7) {
        goto LABEL_22;
      }
LABEL_61:
      swift_bridgeObjectRetain_n();
      uint64_t v21 = sub_1A75738D0();
      if (!v21) {
        goto LABEL_33;
      }
LABEL_23:
      if ((rawValue & 0xC000000000000001) != 0)
      {
        uint64_t v22 = 0;
        unint64_t v7 = 0x1E4F94000uLL;
        while (1)
        {
          uint64_t v23 = MEMORY[0x1AD0CB800](v22, rawValue);
          uint64_t v24 = v22 + 1;
          if (__OFADD__(v22, 1)) {
            goto LABEL_56;
          }
          uint64_t v6 = v23;
          self;
          uint64_t v25 = swift_dynamicCastObjCClass();
          if (v25)
          {
            id v12 = (void *)v25;
            goto LABEL_36;
          }
          swift_unknownObjectRelease();
          ++v22;
          if (v24 == v21) {
            goto LABEL_33;
          }
        }
      }
      uint64_t v6 = 0;
      unint64_t v7 = 0x1E4F94000uLL;
      while (1)
      {
        uint64_t v26 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          break;
        }
        uint64_t v27 = *(void **)(rawValue + 8 * v6 + 32);
        self;
        uint64_t v28 = swift_dynamicCastObjCClass();
        if (v28)
        {
          id v12 = (void *)v28;
          id v29 = v27;
LABEL_36:
          swift_bridgeObjectRelease_n();
          goto LABEL_37;
        }
        ++v6;
        if (v26 == v21) {
          goto LABEL_33;
        }
      }
    }
  }
  uint64_t v16 = 0;
  double v3 = COERCE_DOUBLE(0x1E4F94000uLL);
  while (1)
  {
    uint64_t v17 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_57;
    }
    uint64_t v18 = *(void **)(rawValue + 8 * v16 + 32);
    self;
    uint64_t v19 = swift_dynamicCastObjCClass();
    if (v19) {
      break;
    }
    ++v16;
    if (v17 == v8)
    {
LABEL_17:
      swift_bridgeObjectRelease_n();
      uint64_t v13 = 0;
      goto LABEL_21;
    }
  }
  uint64_t v13 = (void *)v19;
  id v20 = v18;
LABEL_20:
  swift_bridgeObjectRelease_n();
LABEL_21:
  double v3 = v36;
  if (v7) {
    goto LABEL_61;
  }
LABEL_22:
  uint64_t v21 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain_n();
  if (v21) {
    goto LABEL_23;
  }
LABEL_33:
  swift_bridgeObjectRelease_n();
  id v12 = 0;
LABEL_37:
  uint64_t v2 = v37;
  if (!v4) {
    goto LABEL_11;
  }
LABEL_38:
  if (v4 == 1)
  {
    if (v13)
    {
      id v30 = v13;
      if (objc_msgSend(v30, sel_proximity) == (id)v40)
      {
        id v31 = objc_allocWithZone(MEMORY[0x1E4F1E5A8]);
        uint64_t v32 = (void *)sub_1A75725E0();
        id v33 = objc_msgSend(v31, sel_initWithCenter_radius_identifier_, v32, v3, v39, v38);

        id v34 = objc_msgSend(v30, sel_structuredLocation);
        id v35 = REMStructuredLocation.clCircularRegion.getter();

        LOBYTE(v34) = CLCircularRegion.overlaps(_:)((CLCircularRegion)v33);
        return v34 & 1;
      }
    }
    goto LABEL_50;
  }
  if (*(void *)&v3 | v2 | v41 | *(void *)&v39 | *(void *)&v38 | v40)
  {
    if (v13)
    {

LABEL_45:
      return 0;
    }
    if (v12)
    {
LABEL_50:

      return 0;
    }
  }
  else if (v13)
  {
  }
  else
  {
    if (!v12) {
      return 0;
    }
  }
  return 1;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterLocation.hash(into:)()
{
  if (*(unsigned char *)(v0 + 48))
  {
    if (*(unsigned char *)(v0 + 48) == 1)
    {
      sub_1A75740D0();
      sub_1A75726F0();
      sub_1A7574100();
      sub_1A7574100();
      sub_1A7574100();
    }
  }
  else
  {
    sub_1A75740D0();
  }
  return sub_1A75740D0();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterLocation.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t sub_1A73780BC()
{
  return sub_1A7574110();
}

uint64_t sub_1A737811C()
{
  return sub_1A7574110();
}

uint64_t static REMCustomSmartListFilterDescriptor.FilterLists.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_1A72DDC34(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_1A72DDC34(v2, v3);
}

void REMCustomSmartListFilterDescriptor.FilterLists.hash(into:)(uint64_t a1)
{
  unint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  sub_1A75740D0();
  sub_1A7381C0C(a1, v3);

  sub_1A7381C0C(a1, v4);
}

uint64_t REMCustomSmartListFilterDescriptor.FilterLists.hashValue.getter()
{
  unint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1A75740C0();
  sub_1A75740D0();
  sub_1A7381C0C((uint64_t)v4, v1);
  sub_1A7381C0C((uint64_t)v4, v2);
  return sub_1A7574110();
}

uint64_t sub_1A7378298(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_1A72DDC34(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_1A72DDC34(v2, v3);
}

uint64_t sub_1A73782F4()
{
  unint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1A75740C0();
  sub_1A75740D0();
  sub_1A7381C0C((uint64_t)v4, v1);
  sub_1A7381C0C((uint64_t)v4, v2);
  return sub_1A7574110();
}

void sub_1A737835C(uint64_t a1)
{
  unint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  sub_1A75740D0();
  sub_1A7381C0C(a1, v3);

  sub_1A7381C0C(a1, v4);
}

uint64_t sub_1A73783B8()
{
  unint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1A75740C0();
  sub_1A75740D0();
  sub_1A7381C0C((uint64_t)v4, v1);
  sub_1A7381C0C((uint64_t)v4, v2);
  return sub_1A7574110();
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicateType.rawValue.getter()
{
  return *(void *)v0;
}

ReminderKitInternal::REMCustomSmartListFilterDescriptor::PostFetchPredicateType __swiftcall REMCustomSmartListFilterDescriptor.PostFetchPredicateType.init(rawValue:)(ReminderKitInternal::REMCustomSmartListFilterDescriptor::PostFetchPredicateType rawValue)
{
  v1->unint64_t rawValue = rawValue.rawValue;
  return rawValue;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.hashtags.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.date.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.partOfDay.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.priorities.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.flagged.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.location.getter(void *a1@<X8>)
{
  *a1 = 32;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.lists.getter(void *a1@<X8>)
{
  *a1 = 64;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.completed.getter(void *a1@<X8>)
{
  *a1 = 128;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.account.getter(void *a1@<X8>)
{
  *a1 = 256;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.and.getter(void *a1@<X8>)
{
  *a1 = 512;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.or.getter(void *a1@<X8>)
{
  *a1 = 1024;
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicateType.description.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7003C0);
  uint64_t v1 = sub_1A7572670();
  sub_1A7572740();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  return v1;
}

void REMCustomSmartListFilterDescriptor.PostFetchPredicate.MatchingObjects.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  if (*(unsigned char *)(v1 + 8) && *(unsigned char *)(v1 + 8) != 1)
  {
    sub_1A75740D0();
  }
  else
  {
    sub_1A75740D0();
    sub_1A735FA20(a1, v3);
  }
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.MatchingObjects.hashValue.getter()
{
  uint64_t v1 = *(void *)v0;
  unsigned int v2 = *(unsigned __int8 *)(v0 + 8);
  sub_1A75740C0();
  sub_1A75740D0();
  if (v2 <= 1) {
    sub_1A735FA20((uint64_t)v4, v1);
  }
  return sub_1A7574110();
}

uint64_t sub_1A73788BC()
{
  uint64_t v1 = *(void *)v0;
  unsigned int v2 = *(unsigned __int8 *)(v0 + 8);
  sub_1A75740C0();
  sub_1A75740D0();
  if (v2 <= 1) {
    sub_1A735FA20((uint64_t)v4, v1);
  }
  return sub_1A7574110();
}

void sub_1A737893C(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  if (*(unsigned char *)(v1 + 8) && *(unsigned char *)(v1 + 8) != 1)
  {
    sub_1A75740D0();
  }
  else
  {
    sub_1A75740D0();
    sub_1A735FA20(a1, v3);
  }
}

uint64_t sub_1A73789C0()
{
  uint64_t v1 = *(void *)v0;
  unsigned int v2 = *(unsigned __int8 *)(v0 + 8);
  sub_1A75740C0();
  sub_1A75740D0();
  if (v2 <= 1) {
    sub_1A735FA20((uint64_t)v4, v1);
  }
  return sub_1A7574110();
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A72BF1E8(v1, a1, &qword_1EB704C40);
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.listIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A737F624(type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder, &qword_1EB704C40, a1);
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.accountIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
  return sub_1A72BF1E8(v1 + *(int *)(v3 + 24), a1, &qword_1EB704C40);
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.displayDateDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
  return sub_1A72BF1E8(v1 + *(int *)(v3 + 28), a1, &qword_1EB704C60);
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.displayDateIsAllDay.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0)
                                     + 32));
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.alarmTriggers.getter()
{
  type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);

  return swift_bridgeObjectRetain();
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.priority.getter()
{
  return *(void *)(v0
                   + *(int *)(type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0)
                            + 40));
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.flagged.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0)
                                     + 44));
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.completed.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0)
                                     + 48));
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.init(identifier:listIdentifier:accountIdentifier:displayDateDate:displayDateIsAllDay:alarmTriggers:priority:flagged:completed:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11)
{
  sub_1A734E5D8(a1, a9, &qword_1EB704C40);
  uint64_t v17 = (int *)type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
  sub_1A734E5D8(a2, a9 + v17[5], &qword_1EB704C40);
  sub_1A734E5D8(a3, a9 + v17[6], &qword_1EB704C40);
  uint64_t result = sub_1A734E5D8(a4, a9 + v17[7], &qword_1EB704C60);
  *(unsigned char *)(a9 + v17[8]) = a5;
  *(void *)(a9 + v17[9]) = a6;
  uint64_t v19 = a9 + v17[10];
  *(void *)uint64_t v19 = a7;
  *(unsigned char *)(v19 + 8) = a8 & 1;
  *(unsigned char *)(a9 + v17[11]) = a10;
  *(unsigned char *)(a9 + v17[12]) = a11;
  return result;
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.evaluate(with:)(uint64_t a1)
{
  uint64_t v252 = a1;
  uint64_t v241 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1D60);
  MEMORY[0x1F4188790](v241);
  v242 = (char *)&v212 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v227 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB703D70);
  uint64_t v2 = MEMORY[0x1F4188790](v227);
  v218 = (char *)&v212 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  v217 = (char *)&v212 - v4;
  uint64_t v222 = sub_1A7571E00();
  uint64_t v221 = *(void *)(v222 - 8);
  MEMORY[0x1F4188790](v222);
  v220 = (char *)&v212 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2348);
  MEMORY[0x1F4188790](v6 - 8);
  v232 = (char *)&v212 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
  uint64_t v231 = *(void *)(v234 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v234);
  uint64_t v225 = (uint64_t)&v212 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v216 = (uint64_t)&v212 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v215 = (uint64_t)&v212 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  v213 = (char *)&v212 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v214 = (uint64_t)&v212 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v228 = (uint64_t)&v212 - v18;
  uint64_t v244 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  uint64_t v19 = MEMORY[0x1F4188790](v244);
  uint64_t v224 = (uint64_t)&v212 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v240 = (uint64_t)&v212 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v243 = (uint64_t)&v212 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  uint64_t v239 = (uint64_t)&v212 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v233 = (uint64_t)&v212 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v245 = (uint64_t)&v212 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v246 = (uint64_t)&v212 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v230 = (uint64_t)&v212 - v34;
  MEMORY[0x1F4188790](v33);
  uint64_t v229 = (uint64_t)&v212 - v35;
  uint64_t v36 = sub_1A7571BC0();
  v250 = *(void (**)(uint64_t, uint64_t))(v36 - 8);
  v251 = (void (*)(void, void, void))v36;
  uint64_t v37 = MEMORY[0x1F4188790](v36);
  v238 = (char *)&v212 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  v237 = (char *)&v212 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  v247 = (char *)&v212 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  v226 = (char *)&v212 - v44;
  MEMORY[0x1F4188790](v43);
  uint64_t v46 = (char *)&v212 - v45;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v48 = MEMORY[0x1F4188790](v47 - 8);
  uint64_t v50 = (char *)&v212 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = MEMORY[0x1F4188790](v48);
  uint64_t v53 = (char *)&v212 - v52;
  uint64_t v54 = MEMORY[0x1F4188790](v51);
  uint64_t v56 = (char *)&v212 - v55;
  MEMORY[0x1F4188790](v54);
  uint64_t v58 = (char *)&v212 - v57;
  uint64_t v59 = sub_1A7571B60();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v248 = v59;
  uint64_t v249 = v60;
  uint64_t v61 = MEMORY[0x1F4188790](v59);
  v223 = (char *)&v212 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = MEMORY[0x1F4188790](v61);
  uint64_t v219 = (uint64_t)&v212 - v64;
  uint64_t v65 = MEMORY[0x1F4188790](v63);
  v235 = (char *)&v212 - v66;
  uint64_t v67 = MEMORY[0x1F4188790](v65);
  v236 = (char *)&v212 - v68;
  MEMORY[0x1F4188790](v67);
  uint64_t v70 = (char *)&v212 - v69;
  uint64_t v71 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType(0);
  MEMORY[0x1F4188790](v71 - 8);
  uint64_t v73 = (char *)&v212 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  uint64_t v75 = *(void *)(Predicate - 8);
  MEMORY[0x1F4188790](Predicate);
  uint64_t v77 = (char *)&v212 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7383624((uint64_t)v253, (uint64_t)v77, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v84 = *(void *)v77;
      uint64_t v85 = *((void *)v77 + 1);
      uint64_t v86 = *((void *)v77 + 2);
      uint64_t v87 = *((void *)v77 + 3);
      uint64_t v88 = *((void *)v77 + 4);
      uint64_t v89 = *((void *)v77 + 5);
      char v90 = v77[48];
      uint64_t v254 = v84;
      uint64_t v255 = v85;
      uint64_t v256 = v86;
      uint64_t v257 = v87;
      uint64_t v258 = v88;
      uint64_t v259 = v89;
      char v260 = v90;
      v263.value._unint64_t rawValue = *(void **)(v252
                                      + *(int *)(type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0)
                                               + 36));
      char v91 = REMCustomSmartListFilterDescriptor.FilterLocation.matches(_:)(v263);
      sub_1A7383794(v84, v85, v86, v87, v88, v89, v90);
      return v91 & 1;
    case 2u:
      uint64_t v92 = *(void *)v77;
      if (v77[8])
      {
        if (v77[8] != 1) {
          goto LABEL_70;
        }
        if ((v92 & 0xC000000000000001) != 0) {
          uint64_t v93 = sub_1A7573400();
        }
        else {
          uint64_t v93 = *(void *)(v92 + 16);
        }
        uint64_t v161 = v250;
        uint64_t v160 = v251;
        uint64_t v162 = v230;
        if (v93)
        {
          sub_1A72BF1E8(v252, v230, &qword_1EB704C40);
          if ((*((unsigned int (**)(uint64_t, uint64_t, void))v161 + 6))(v162, 1, v160) != 1)
          {
            uint64_t v163 = v226;
            (*((void (**)(uint64_t, uint64_t, void))v161 + 4))(v226, v162, v160);
            uint64_t v164 = self;
            uint64_t v165 = sub_1A7571B90();
            id v166 = objc_msgSend(v164, sel_objectIDWithUUID_, v165);

            LOBYTE(v165) = sub_1A72DB6F4(v166, v92);
            swift_bridgeObjectRelease();
            (*((void (**)(char *, void (*)(void, void, void)))v161 + 1))(v163, v160);

            char v91 = v165 ^ 1;
            return v91 & 1;
          }
          goto LABEL_68;
        }
LABEL_69:
        swift_bridgeObjectRelease();
        goto LABEL_70;
      }
      if ((v92 & 0xC000000000000001) != 0) {
        uint64_t v146 = sub_1A7573400();
      }
      else {
        uint64_t v146 = *(void *)(v92 + 16);
      }
      v170 = v250;
      uint64_t v169 = v251;
      uint64_t v162 = v229;
      if (!v146)
      {
LABEL_35:
        swift_bridgeObjectRelease();
        char v91 = 0;
        return v91 & 1;
      }
      sub_1A72BF1E8(v252, v229, &qword_1EB704C40);
      if ((*((unsigned int (**)(uint64_t, uint64_t, void))v170 + 6))(v162, 1, v169) == 1)
      {
LABEL_68:
        swift_bridgeObjectRelease();
        uint64_t v82 = &qword_1EB704C40;
        uint64_t v83 = v162;
        goto LABEL_49;
      }
      (*((void (**)(uint64_t, uint64_t, void))v170 + 4))(v46, v162, v169);
      unint64_t v172 = self;
      v173 = (void *)sub_1A7571B90();
      id v174 = objc_msgSend(v172, sel_objectIDWithUUID_, v173);

      char v91 = sub_1A72DB6F4(v174, v92);
      swift_bridgeObjectRelease();
      (*((void (**)(char *, void (*)(void, void, void)))v170 + 1))(v46, v169);

      return v91 & 1;
    case 3u:
      unint64_t v95 = *(void *)v77;
      unint64_t v94 = *((void *)v77 + 1);
      uint64_t v96 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
      uint64_t v97 = v239;
      sub_1A72BF1E8(v252 + *(int *)(v96 + 20), v239, &qword_1EB704C40);
      uint64_t v98 = v250;
      uint64_t v99 = v251;
      if ((*((unsigned int (**)(uint64_t, uint64_t, void))v250 + 6))(v97, 1, v251) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v100 = v97;
        goto LABEL_22;
      }
      (*((void (**)(uint64_t, uint64_t, void))v98 + 4))(v238, v97, v99);
      unint64_t v128 = self;
      uint64_t v129 = (void *)sub_1A7571B90();
      id v130 = objc_msgSend(v128, sel_objectIDWithUUID_, v129);

      if (v95 >> 62)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (sub_1A75738D0()) {
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v131 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v131)
        {
LABEL_39:
          swift_bridgeObjectRelease();
          long long v132 = (objc_class *)type metadata accessor for REMObjectID_Codable();
          uint64_t v133 = (unsigned int (*)(uint64_t, uint64_t, void))objc_allocWithZone(v132);
          id v134 = v130;
          id v135 = objc_msgSend(v134, sel_uuid);
          uint64_t v136 = v237;
          sub_1A7571BB0();

          unint64_t v137 = (void *)sub_1A7571B90();
          uint64_t v138 = (unsigned int (*)(uint64_t, uint64_t, void))*((void *)v98 + 1);
          ((void (*)(char *, void (*)(void, void, void)))v138)(v136, v99);
          id v139 = objc_msgSend(v134, sel_entityName);
          if (!v139)
          {
            _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
            v253 = v133;
            id v139 = (id)sub_1A75725E0();
            uint64_t v133 = v253;
            swift_bridgeObjectRelease();
          }
          v262.receiver = v133;
          v262.super_class = v132;
          id v140 = objc_msgSendSuper2(&v262, sel_initWithUUID_entityName_, v137, v139);

          char v91 = sub_1A73766B4((uint64_t)v140, v95);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          ((void (*)(char *, void (*)(void, void, void)))v138)(v238, v99);
          swift_bridgeObjectRelease();
          return v91 & 1;
        }
      }
      swift_bridgeObjectRelease();
      if (v94 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v211 = sub_1A75738D0();
        swift_bridgeObjectRelease();
        if (v211) {
          goto LABEL_90;
        }
      }
      else if (*(void *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_90:
        v201 = (objc_class *)type metadata accessor for REMObjectID_Codable();
        v202 = (unsigned int (*)(uint64_t, uint64_t, void))objc_allocWithZone(v201);
        id v203 = v130;
        id v204 = objc_msgSend(v203, sel_uuid);
        v205 = v237;
        sub_1A7571BB0();

        v206 = (void *)sub_1A7571B90();
        v207 = (unsigned int (*)(uint64_t, uint64_t, void))*((void *)v98 + 1);
        ((void (*)(char *, void (*)(void, void, void)))v207)(v205, v99);
        id v208 = objc_msgSend(v203, sel_entityName);
        if (!v208)
        {
          _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v253 = v202;
          id v208 = (id)sub_1A75725E0();
          v202 = v253;
          swift_bridgeObjectRelease();
        }
        v261.receiver = v202;
        v261.super_class = v201;
        id v209 = objc_msgSendSuper2(&v261, sel_initWithUUID_entityName_, v206, v208);

        char v210 = sub_1A73766B4((uint64_t)v209, v94);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        ((void (*)(char *, void (*)(void, void, void)))v207)(v238, v99);
        swift_bridgeObjectRelease();
        char v91 = v210 ^ 1;
        return v91 & 1;
      }
      (*((void (**)(char *, void (*)(void, void, void)))v98 + 1))(v238, v99);
      swift_bridgeObjectRelease();

      goto LABEL_29;
    case 4u:
      uint64_t v101 = v243;
      sub_1A73837CC((uint64_t)v77, v243, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      uint64_t v102 = v240;
      sub_1A7383624(v101, v240, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v104 = v252;
      uint64_t v105 = v248;
      switch(EnumCaseMultiPayload)
      {
        case 1:
        case 3:
        case 4:
        case 5:
          sub_1A7383734(v102, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
          goto LABEL_14;
        case 6:
          sub_1A7383734(v101, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
          uint64_t v167 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
          sub_1A72BF1E8(v104 + *(int *)(v167 + 28), (uint64_t)v56, &qword_1EB704C60);
          char v91 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v249 + 48))(v56, 1, v105) != 1;
          sub_1A72CB560((uint64_t)v56, &qword_1EB704C60);
          return v91 & 1;
        case 7:
          sub_1A7383734(v101, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
          uint64_t v168 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
          uint64_t v149 = &qword_1EB704C60;
          sub_1A72BF1E8(v104 + *(int *)(v168 + 28), (uint64_t)v50, &qword_1EB704C60);
          char v91 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v249 + 48))(v50, 1, v105) == 1;
          uint64_t v150 = (uint64_t)v50;
          goto LABEL_64;
        default:
LABEL_14:
          uint64_t v106 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
          sub_1A72BF1E8(v104 + *(int *)(v106 + 28), (uint64_t)v53, &qword_1EB704C60);
          uint64_t v107 = v249;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v249 + 48))(v53, 1, v105) == 1)
          {
            sub_1A7383734(v101, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
            uint64_t v82 = &qword_1EB704C60;
            goto LABEL_48;
          }
          int64_t v143 = v236;
          v251 = *(void (**)(void, void, void))(v107 + 32);
          v251(v236, v53, v105);
          uint64_t v144 = (uint64_t)v235;
          sub_1A7571B50();
          uint64_t v53 = v232;
          REMCustomSmartListFilterDescriptor.FilterDate.closedRange(now:)(v144, (uint64_t)v232);
          uint64_t v145 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
          v253 = (unsigned int (*)(uint64_t, uint64_t, void))(v107 + 8);
          v145(v144, v105);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v231 + 48))(v53, 1, v234) == 1)
          {
            v145((uint64_t)v143, v105);
            sub_1A7383734(v101, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
            uint64_t v82 = &qword_1E96F2348;
            goto LABEL_48;
          }
          uint64_t v151 = (uint64_t)v53;
          uint64_t v152 = v228;
          sub_1A734E5D8(v151, v228, (uint64_t *)&unk_1EB7058C8);
          char v153 = *(unsigned char *)(v104 + *(int *)(v106 + 32));
          v250 = v145;
          if (v153)
          {
            uint64_t v175 = v224;
            sub_1A7383624(v101, v224, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
            int v176 = 1 << swift_getEnumCaseMultiPayload();
            if ((v176 & 0x3A) != 0)
            {
              sub_1A7383734(v175, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
            }
            else if ((v176 & 0xC1) == 0 && !*(unsigned char *)(v175 + 16))
            {
              sub_1A72CB560(v228, (uint64_t *)&unk_1EB7058C8);
              v145((uint64_t)v236, v105);
              sub_1A7383734(v101, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
              char v91 = 0;
              return v91 & 1;
            }
            v178 = v220;
            sub_1A7571DC0();
            uint64_t v179 = (uint64_t)v236;
            sub_1A7571D40();
            v180 = *(void (**)(char *, uint64_t))(v221 + 8);
            uint64_t v181 = v222;
            v180(v178, v222);
            sub_1A7571DC0();
            uint64_t v182 = v219;
            Calendar.endOfDay(for:)(v179, v219);
            uint64_t v183 = v181;
            v184 = v235;
            v180(v178, v183);
            uint64_t v185 = v182;
            uint64_t v252 = sub_1A73836EC((unint64_t *)&qword_1EB7057C8, MEMORY[0x1E4F27928]);
            if ((sub_1A75725A0() & 1) == 0)
            {
              __break(1u);
              JUMPOUT(0x1A737AAB0);
            }
            uint64_t v186 = v227;
            v187 = v217;
            v188 = &v217[*(int *)(v227 + 48)];
            v189 = (void (*)(char *, uint64_t, uint64_t))v251;
            v251(v217, v184, v105);
            v247 = v188;
            v189(v188, v185, v105);
            v190 = v218;
            v191 = &v218[*(int *)(v186 + 48)];
            uint64_t v192 = v105;
            v193 = *(void (**)(char *, char *, uint64_t))(v249 + 16);
            v193(v218, v187, v192);
            v193(v191, v188, v192);
            uint64_t v194 = (uint64_t)v213;
            v189(v213, (uint64_t)v190, v192);
            v195 = (void (*)(char *, uint64_t))v250;
            v250((uint64_t)v191, v192);
            v196 = &v190[*(int *)(v227 + 48)];
            v189(v190, (uint64_t)v187, v192);
            v189(v196, (uint64_t)v247, v192);
            v189((char *)(v194 + *(int *)(v234 + 36)), (uint64_t)v196, v192);
            v195(v190, v192);
            uint64_t v197 = v214;
            sub_1A734E5D8(v194, v214, (uint64_t *)&unk_1EB7058C8);
            uint64_t v198 = v228;
            LOBYTE(v190) = sub_1A7572580();
            uint64_t v199 = v215;
            sub_1A72BF1E8(v198, v215, (uint64_t *)&unk_1EB7058C8);
            uint64_t v200 = v216;
            sub_1A72BF1E8(v197, v216, (uint64_t *)&unk_1EB7058C8);
            if (v190) {
              char v91 = 0;
            }
            else {
              char v91 = sub_1A7572580() ^ 1;
            }
            sub_1A72CB560(v200, (uint64_t *)&unk_1EB7058C8);
            sub_1A72CB560(v199, (uint64_t *)&unk_1EB7058C8);
            sub_1A72CB560(v197, (uint64_t *)&unk_1EB7058C8);
            sub_1A72CB560(v198, (uint64_t *)&unk_1EB7058C8);
            v250((uint64_t)v236, v192);
          }
          else
          {
            sub_1A73836EC((unint64_t *)&qword_1EB7057C8, MEMORY[0x1E4F27928]);
            uint64_t v154 = v236;
            char v155 = sub_1A7572590();
            unint64_t v156 = v223;
            (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v223, v154, v105);
            uint64_t v157 = v152;
            uint64_t v158 = v225;
            sub_1A72BF1E8(v152, v225, (uint64_t *)&unk_1EB7058C8);
            if (v155)
            {
              uint64_t v159 = v156;
              char v91 = sub_1A75725A0();
            }
            else
            {
              uint64_t v159 = v156;
              char v91 = 0;
            }
            v177 = (void (*)(char *, uint64_t))v250;
            sub_1A72CB560(v158, (uint64_t *)&unk_1EB7058C8);
            v177(v159, v105);
            sub_1A72CB560(v157, (uint64_t *)&unk_1EB7058C8);
            v177(v154, v105);
          }
          sub_1A7383734(v101, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
          return v91 & 1;
      }
    case 5u:
      uint64_t v108 = *(void *)v77;
      uint64_t v109 = v252
           + *(int *)(type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0)
                    + 40);
      if (*(unsigned char *)(v109 + 8)) {
        goto LABEL_35;
      }
      char v91 = sub_1A72DB854(*(void *)v109, v108);
      swift_bridgeObjectRelease();
      return v91 & 1;
    case 6u:
      char v110 = *v77;
      char v91 = v110 ^ ((*(unsigned char *)(v252
                              + *(int *)(type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0)
                                       + 44)) & 1) == 0);
      return v91 & 1;
    case 7u:
      char v112 = v250;
      uint64_t v111 = v251;
      uint64_t v113 = v247;
      v253 = (unsigned int (*)(uint64_t, uint64_t, void))*((void *)v250 + 4);
      v253((uint64_t)v247, (uint64_t)v77, v251);
      uint64_t v114 = v246;
      (*((void (**)(uint64_t, uint64_t, void))v112 + 2))(v246, v113, v111);
      (*((void (**)(uint64_t, void, uint64_t, void (*)(void, void, void)))v112 + 7))(v114, 0, 1, v111);
      uint64_t v115 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
      uint64_t v116 = v245;
      sub_1A72BF1E8(v252 + *(int *)(v115 + 24), v245, &qword_1EB704C40);
      uint64_t v53 = v242;
      uint64_t v117 = (uint64_t)&v242[*(int *)(v241 + 48)];
      sub_1A72BF1E8(v114, (uint64_t)v242, &qword_1EB704C40);
      sub_1A72BF1E8(v116, v117, &qword_1EB704C40);
      uint64_t v118 = (unsigned int (*)(uint64_t, uint64_t, void))*((void *)v112 + 6);
      if (v118((uint64_t)v53, 1, v111) != 1)
      {
        uint64_t v141 = v233;
        sub_1A72BF1E8((uint64_t)v53, v233, &qword_1EB704C40);
        if (v118(v117, 1, v111) != 1)
        {
          uint64_t v147 = v237;
          v253((uint64_t)v237, v117, v111);
          sub_1A73836EC((unint64_t *)&qword_1EB701410, MEMORY[0x1E4F27990]);
          char v91 = sub_1A75725C0();
          char v148 = (unsigned int (*)(uint64_t, uint64_t, void))*((void *)v112 + 1);
          ((void (*)(char *, void (*)(void, void, void)))v148)(v147, v111);
          uint64_t v149 = &qword_1EB704C40;
          sub_1A72CB560(v245, &qword_1EB704C40);
          sub_1A72CB560(v246, &qword_1EB704C40);
          ((void (*)(char *, void (*)(void, void, void)))v148)(v247, v111);
          ((void (*)(uint64_t, void (*)(void, void, void)))v148)(v141, v111);
          uint64_t v150 = (uint64_t)v53;
LABEL_64:
          sub_1A72CB560(v150, v149);
          return v91 & 1;
        }
        sub_1A72CB560(v245, &qword_1EB704C40);
        sub_1A72CB560(v246, &qword_1EB704C40);
        uint64_t v142 = (unsigned int (*)(uint64_t, uint64_t, void))*((void *)v112 + 1);
        ((void (*)(char *, void (*)(void, void, void)))v142)(v247, v111);
        ((void (*)(uint64_t, void (*)(void, void, void)))v142)(v141, v111);
        goto LABEL_44;
      }
      sub_1A72CB560(v116, &qword_1EB704C40);
      sub_1A72CB560(v114, &qword_1EB704C40);
      (*((void (**)(char *, void (*)(void, void, void)))v112 + 1))(v247, v111);
      if (v118(v117, 1, v111) != 1)
      {
LABEL_44:
        uint64_t v82 = &qword_1E96F1D60;
LABEL_48:
        uint64_t v83 = (uint64_t)v53;
        goto LABEL_49;
      }
      uint64_t v100 = (uint64_t)v53;
LABEL_22:
      sub_1A72CB560(v100, &qword_1EB704C40);
LABEL_70:
      char v91 = 1;
      return v91 & 1;
    case 8u:
      int v119 = *(unsigned __int8 *)(v252
                                + *(int *)(type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0)
                                         + 48));
      if (v119 == 2) {
        char v91 = 0;
      }
      else {
        char v91 = ((v119 & 1) == 0) ^ *v77;
      }
      return v91 & 1;
    case 9u:
      uint64_t v120 = *(void *)(*(void *)v77 + 16);
      if (!v120) {
        goto LABEL_69;
      }
      unint64_t v121 = *(void *)v77
           + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
      uint64_t v122 = *(void *)(v75 + 72);
      swift_bridgeObjectRetain();
      uint64_t v123 = v252;
      while ((REMCustomSmartListFilterDescriptor.PostFetchPredicate.evaluate(with:)(v123) & 1) != 0)
      {
        v121 += v122;
        if (!--v120) {
          goto LABEL_29;
        }
      }
      goto LABEL_34;
    case 0xAu:
      uint64_t v124 = *(void *)(*(void *)v77 + 16);
      if (!v124) {
        goto LABEL_35;
      }
      unint64_t v125 = *(void *)v77
           + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
      uint64_t v126 = *(void *)(v75 + 72);
      swift_bridgeObjectRetain();
      uint64_t v127 = v252;
      do
      {
        if (REMCustomSmartListFilterDescriptor.PostFetchPredicate.evaluate(with:)(v127))
        {
LABEL_29:
          swift_bridgeObjectRelease_n();
          goto LABEL_70;
        }
        v125 += v126;
        --v124;
      }
      while (v124);
LABEL_34:
      swift_bridgeObjectRelease_n();
      char v91 = 0;
      return v91 & 1;
    default:
      char v78 = *v77;
      uint64_t v79 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
      if (*(unsigned char *)(v252 + *(int *)(v79 + 32)))
      {
        LOBYTE(v254) = v78;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v249 + 56))(v73, 1, 1, v248);
        char v91 = REMCustomSmartListFilterDescriptor.FilterTime.matches(_:)((uint64_t)v73);
        sub_1A7383734((uint64_t)v73, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType);
      }
      else
      {
        sub_1A72BF1E8(v252 + *(int *)(v79 + 28), (uint64_t)v58, &qword_1EB704C60);
        uint64_t v80 = v248;
        uint64_t v81 = v249;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v249 + 48))(v58, 1, v248) == 1)
        {
          uint64_t v82 = &qword_1EB704C60;
          uint64_t v83 = (uint64_t)v58;
LABEL_49:
          sub_1A72CB560(v83, v82);
          char v91 = 0;
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v70, v58, v80);
          LOBYTE(v254) = v78;
          (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v73, v70, v80);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v73, 0, 1, v80);
          char v91 = REMCustomSmartListFilterDescriptor.FilterTime.matches(_:)((uint64_t)v73);
          sub_1A7383734((uint64_t)v73, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType);
          (*(void (**)(char *, uint64_t))(v81 + 8))(v70, v80);
        }
      }
      return v91 & 1;
  }
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.closedRange(now:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB703D70);
  uint64_t v3 = MEMORY[0x1F4188790](v54);
  uint64_t v52 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v51 = (char *)&v49 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v50 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v49 - v12;
  uint64_t v14 = sub_1A7571B60();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v53 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v49 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2350);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  REMCustomSmartListFilterDescriptor.FilterDate.range(now:)(a1, (uint64_t)v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_1A72CB560((uint64_t)v22, (uint64_t *)&unk_1E96F2350);
    uint64_t v27 = 1;
    uint64_t v29 = v56;
    uint64_t v28 = v57;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v28, v27, 1, v29);
  }
  sub_1A73837CC((uint64_t)v22, (uint64_t)v26, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange);
  sub_1A72BF1E8((uint64_t)v26, (uint64_t)v13, &qword_1EB704C60);
  uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v31 = v15;
  if (v30(v13, 1, v14) == 1)
  {
    uint64_t v32 = v19;
    sub_1A7571A70();
    sub_1A72CB560((uint64_t)v13, &qword_1EB704C60);
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v32 = v19;
    v33(v19, v13, v14);
  }
  sub_1A72BF1E8((uint64_t)&v26[*(int *)(v23 + 20)], (uint64_t)v11, &qword_1EB704C60);
  unsigned int v34 = v30(v11, 1, v14);
  uint64_t v35 = v53;
  if (v34 == 1)
  {
    sub_1A7571A80();
    sub_1A72CB560((uint64_t)v11, &qword_1EB704C60);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v53, v11, v14);
  }
  sub_1A73836EC((unint64_t *)&qword_1EB7057C8, MEMORY[0x1E4F27928]);
  char v36 = sub_1A75725A0();
  uint64_t result = sub_1A7383734((uint64_t)v26, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange);
  if (v36)
  {
    uint64_t v38 = v51;
    uint64_t v39 = v54;
    uint64_t v40 = &v51[*(int *)(v54 + 48)];
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    v41(v51, v32, v14);
    uint64_t v42 = v40;
    v41(v40, v35, v14);
    uint64_t v43 = v31;
    uint64_t v44 = v52;
    uint64_t v45 = &v52[*(int *)(v39 + 48)];
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
    v46(v52, v38, v14);
    v46(v45, v42, v14);
    uint64_t v47 = (uint64_t)v50;
    v41(v50, v44, v14);
    uint64_t v58 = *(void (**)(char *, uint64_t))(v43 + 8);
    v58(v45, v14);
    uint64_t v48 = &v44[*(int *)(v54 + 48)];
    v41(v44, v38, v14);
    v41(v48, v42, v14);
    uint64_t v29 = v56;
    v41((char *)(v47 + *(int *)(v56 + 36)), v48, v14);
    v58(v44, v14);
    uint64_t v28 = v57;
    sub_1A734E5D8(v47, v57, (uint64_t *)&unk_1EB7058C8);
    uint64_t v27 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v28, v27, 1, v29);
  }
  __break(1u);
  return result;
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.postFetchPredicateType.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  MEMORY[0x1F4188790](Predicate);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7383624(v2, (uint64_t)v6, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t result = sub_1A7383794(*(void *)v6, *((void *)v6 + 1), *((void *)v6 + 2), *((void *)v6 + 3), *((void *)v6 + 4), *((void *)v6 + 5), v6[48]);
      uint64_t v8 = 32;
      goto LABEL_14;
    case 2:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v8 = 1;
      goto LABEL_14;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v8 = 64;
      goto LABEL_14;
    case 4:
      uint64_t v9 = 2;
      goto LABEL_10;
    case 5:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v8 = 8;
      goto LABEL_14;
    case 6:
      uint64_t v8 = 16;
      goto LABEL_14;
    case 7:
      uint64_t v9 = 256;
LABEL_10:
      *a1 = v9;
      return sub_1A7383734((uint64_t)v6, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
    case 8:
      uint64_t v8 = 128;
      goto LABEL_14;
    case 9:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v8 = 512;
      goto LABEL_14;
    case 10:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v8 = 1024;
      goto LABEL_14;
    default:
      uint64_t v8 = 4;
LABEL_14:
      *a1 = v8;
      return result;
  }
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.hash(into:)(uint64_t a1)
{
  uint64_t v3 = sub_1A7571BC0();
  v41[0] = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  uint64_t v10 = *(void *)(Predicate - 8);
  uint64_t v11 = MEMORY[0x1F4188790](Predicate);
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)v41 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v41 - v17;
  sub_1A7383624(v1, (uint64_t)v41 - v17, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v20 = *(void *)v18;
      uint64_t v21 = *((void *)v18 + 1);
      uint64_t v22 = *((void *)v18 + 2);
      uint64_t v23 = *((void *)v18 + 3);
      uint64_t v24 = *((void *)v18 + 4);
      uint64_t v25 = *((void *)v18 + 5);
      char v26 = v18[48];
      sub_1A75740D0();
      v41[1] = v20;
      v41[2] = v21;
      v41[3] = v22;
      v41[4] = v23;
      v41[5] = v24;
      v41[6] = v25;
      char v42 = v26;
      REMCustomSmartListFilterDescriptor.FilterLocation.hash(into:)();
      return sub_1A7383794(v20, v21, v22, v23, v24, v25, v26);
    case 2u:
      uint64_t v27 = *(void *)v18;
      unsigned int v28 = v18[8];
      sub_1A75740D0();
      if (v28 <= 1)
      {
        sub_1A75740D0();
        sub_1A735FA20(a1, v27);
        goto LABEL_18;
      }
      return sub_1A75740D0();
    case 3u:
      unint64_t v29 = *(void *)v18;
      unint64_t v30 = *((void *)v18 + 1);
      sub_1A75740D0();
      sub_1A75740D0();
      sub_1A7381C0C(a1, v29);
      sub_1A7381C0C(a1, v30);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 4u:
      sub_1A73837CC((uint64_t)v18, (uint64_t)v8, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      sub_1A75740D0();
      REMCustomSmartListFilterDescriptor.FilterDate.hash(into:)();
      return sub_1A7383734((uint64_t)v8, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
    case 5u:
      uint64_t v36 = *(void *)v18;
      sub_1A75740D0();
      sub_1A735F8B4(a1, v36);
      goto LABEL_18;
    case 6u:
    case 8u:
      sub_1A75740D0();
      return sub_1A75740E0();
    case 7u:
      uint64_t v31 = v41[0];
      (*(void (**)(char *, char *, uint64_t))(v41[0] + 32))(v5, v18, v3);
      sub_1A75740D0();
      sub_1A73836EC((unint64_t *)&qword_1EB701400, MEMORY[0x1E4F27990]);
      sub_1A7572520();
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v5, v3);
    case 9u:
      uint64_t v32 = *(void *)v18;
      sub_1A75740D0();
      sub_1A75740D0();
      uint64_t v33 = *(void *)(v32 + 16);
      if (v33)
      {
        uint64_t v34 = v32 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
        uint64_t v35 = *(void *)(v10 + 72);
        do
        {
          sub_1A7383624(v34, (uint64_t)v16, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
          REMCustomSmartListFilterDescriptor.PostFetchPredicate.hash(into:)(a1);
          sub_1A7383734((uint64_t)v16, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
          v34 += v35;
          --v33;
        }
        while (v33);
      }
      goto LABEL_18;
    case 0xAu:
      uint64_t v37 = *(void *)v18;
      sub_1A75740D0();
      sub_1A75740D0();
      uint64_t v38 = *(void *)(v37 + 16);
      if (v38)
      {
        uint64_t v39 = v37 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
        uint64_t v40 = *(void *)(v10 + 72);
        do
        {
          sub_1A7383624(v39, (uint64_t)v13, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
          REMCustomSmartListFilterDescriptor.PostFetchPredicate.hash(into:)(a1);
          sub_1A7383734((uint64_t)v13, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
          v39 += v40;
          --v38;
        }
        while (v38);
      }
LABEL_18:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      sub_1A75740D0();
      uint64_t result = sub_1A75740D0();
      break;
  }
  return result;
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.hashValue.getter()
{
  return sub_1A737B8C4((void (*)(unsigned char *))REMCustomSmartListFilterDescriptor.PostFetchPredicate.hash(into:));
}

uint64_t sub_1A737B8C4(void (*a1)(unsigned char *))
{
  sub_1A75740C0();
  a1(v3);
  return sub_1A7574110();
}

uint64_t sub_1A737B90C(uint64_t a1, uint64_t a2)
{
  return sub_1A737B924(a1, a2, (void (*)(unsigned char *))REMCustomSmartListFilterDescriptor.PostFetchPredicate.hash(into:));
}

uint64_t sub_1A737B924(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  sub_1A75740C0();
  a3(v5);
  return sub_1A7574110();
}

uint64_t sub_1A737B970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A737B988(a1, a2, a3, (void (*)(unsigned char *))REMCustomSmartListFilterDescriptor.PostFetchPredicate.hash(into:));
}

uint64_t sub_1A737B988(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_1A75740C0();
  a4(v6);
  return sub_1A7574110();
}

void REMCustomSmartListFilterDescriptor.operation.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
}

unint64_t REMCustomSmartListFilterDescriptor.hashtags.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags;
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(v2 + 16);
  return sub_1A7383834(v3);
}

uint64_t REMCustomSmartListFilterDescriptor.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A72BF1E8(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, a1, (uint64_t *)&unk_1E96F2370);
}

void REMCustomSmartListFilterDescriptor.time.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
}

uint64_t REMCustomSmartListFilterDescriptor.priorities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMCustomSmartListFilterDescriptor.flagged.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
}

uint64_t REMCustomSmartListFilterDescriptor.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v9 = *(unsigned char *)(v2 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  return sub_1A7383844(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t REMCustomSmartListFilterDescriptor.lists.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
  *a1 = v2;
  a1[1] = v3;
  return sub_1A7383870(v2);
}

id REMCustomSmartListFilterDescriptor.__allocating_init(operation:hashtags:date:time:priorities:flagged:location:lists:)(char *a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5, char a6, long long *a7, uint64_t *a8)
{
  id v17 = objc_allocWithZone(v8);
  return REMCustomSmartListFilterDescriptor.init(operation:hashtags:date:time:priorities:flagged:location:lists:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

id REMCustomSmartListFilterDescriptor.init(operation:hashtags:date:time:priorities:flagged:location:lists:)(char *a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5, char a6, long long *a7, uint64_t *a8)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  char v16 = *a1;
  char v17 = *(unsigned char *)(a2 + 16);
  LOBYTE(a4) = *a4;
  long long v27 = a7[1];
  long long v28 = *a7;
  uint64_t v18 = *((void *)a7 + 4);
  uint64_t v19 = *((void *)a7 + 5);
  LOBYTE(a7) = *((unsigned char *)a7 + 48);
  uint64_t v21 = *a8;
  uint64_t v20 = a8[1];
  v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v16;
  uint64_t v22 = &v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  *(_OWORD *)uint64_t v22 = *(_OWORD *)a2;
  v22[16] = v17;
  sub_1A72BF1E8(a3, (uint64_t)&v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1E96F2370);
  v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = (_BYTE)a4;
  *(void *)&v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = a5;
  v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = a6;
  uint64_t v23 = &v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  *(_OWORD *)uint64_t v23 = v28;
  *((_OWORD *)v23 + 1) = v27;
  *((void *)v23 + 4) = v18;
  *((void *)v23 + 5) = v19;
  unsigned char v23[48] = (char)a7;
  uint64_t v24 = &v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  *uint64_t v24 = v21;
  v24[1] = v20;
  v31.receiver = v8;
  v31.super_class = ObjectType;
  id v25 = objc_msgSendSuper2(&v31, sel_init);
  sub_1A72CB560(a3, (uint64_t *)&unk_1E96F2370);
  return v25;
}

id REMCustomSmartListFilterDescriptor.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id REMCustomSmartListFilterDescriptor.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = objc_allocWithZone(ObjectType);
  v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = 0;
  uint64_t v6 = &v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  *(_OWORD *)uint64_t v6 = xmmword_1A7578D90;
  v6[16] = 0;
  sub_1A72BF1E8((uint64_t)v3, (uint64_t)&v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1E96F2370);
  v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = 6;
  *(void *)&v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = 0;
  v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = 2;
  uint64_t v7 = &v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_OWORD *)v7 + 2) = 0u;
  v7[48] = -1;
  uint64_t v8 = &v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  void *v8 = 0;
  v8[1] = 0;
  v11.receiver = v5;
  v11.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  sub_1A72CB560((uint64_t)v3, (uint64_t *)&unk_1E96F2370);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v9;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:operation:)(void *a1, unsigned __int8 *a2)
{
  id v3 = sub_1A7383B48((uint64_t)a1, a2);

  return v3;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:hashtags:)(void *a1, uint64_t *a2)
{
  id v3 = sub_1A7383DC4((uint64_t)a1, a2);

  return v3;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:date:)(void *a1, uint64_t a2)
{
  id v3 = sub_1A7384020((uint64_t)a1, a2);

  return v3;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:time:)(void *a1, unsigned __int8 *a2)
{
  id v3 = sub_1A73842B4((uint64_t)a1, a2);

  return v3;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:priorities:)(void *a1, uint64_t a2)
{
  id v3 = sub_1A7384524((uint64_t)a1, a2);

  return v3;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:flagged:)(void *a1, int a2)
{
  id v3 = sub_1A7384784((uint64_t)a1, a2);

  return v3;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:location:)(void *a1, long long *a2)
{
  id v3 = sub_1A73849F0((uint64_t)a1, a2);

  return v3;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:lists:)(unsigned char *a1, uint64_t *a2)
{
  id v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a2;
  uint64_t v40 = a2[1];
  uint64_t v41 = v9;
  int v37 = a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation];
  uint64_t v10 = *(void *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8];
  unint64_t v30 = *(void *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  unint64_t v11 = v30;
  uint64_t v36 = v10;
  unsigned __int8 v12 = a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16];
  int v29 = v12;
  uint64_t v38 = v8;
  sub_1A72BF1E8((uint64_t)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t)v8, (uint64_t *)&unk_1E96F2370);
  int v35 = a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time];
  uint64_t v34 = *(void *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities];
  int v33 = a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged];
  uint64_t v13 = *(void *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8];
  uint64_t v28 = *(void *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  uint64_t v14 = v28;
  uint64_t v15 = *(void *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24];
  uint64_t v31 = *(void *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16];
  uint64_t v32 = v13;
  uint64_t v16 = *(void *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32];
  uint64_t v17 = *(void *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40];
  char v18 = a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48];
  uint64_t v19 = objc_allocWithZone(v3);
  v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v37;
  uint64_t v20 = &v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  *(void *)uint64_t v20 = v11;
  *((void *)v20 + 1) = v36;
  v20[16] = v12;
  sub_1A72BF1E8((uint64_t)v8, (uint64_t)&v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1E96F2370);
  v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v35;
  *(void *)&v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v34;
  v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v33;
  uint64_t v21 = &v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  *(void *)uint64_t v21 = v14;
  uint64_t v22 = v31;
  uint64_t v23 = v32;
  *((void *)v21 + 1) = v32;
  *((void *)v21 + 2) = v22;
  *((void *)v21 + 3) = v15;
  *((void *)v21 + 4) = v16;
  *((void *)v21 + 5) = v17;
  v21[48] = v18;
  uint64_t v24 = &v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  uint64_t v25 = v40;
  *uint64_t v24 = v41;
  v24[1] = v25;
  sub_1A7383834(v30);
  swift_bridgeObjectRetain();
  sub_1A7383844(v28, v23, v22, v15, v16, v17, v18);
  v42.receiver = v19;
  v42.super_class = v39;
  id v26 = objc_msgSendSuper2(&v42, sel_init);
  sub_1A72CB560((uint64_t)v38, (uint64_t *)&unk_1E96F2370);

  return v26;
}

Swift::Void __swiftcall REMCustomSmartListFilterDescriptor.encode(with:)(NSCoder with)
{
  void v18[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
  BOOL v4 = v2 != *MEMORY[0x1E4F95118] && v2 == *MEMORY[0x1E4F95108];
  LOBYTE(v18[0]) = v4;
  sub_1A73B4DA8((unsigned __int8 *)v18);
  uint64_t v5 = self;
  uint64_t v6 = (void *)sub_1A75723D0();
  swift_bridgeObjectRelease();
  v18[0] = 0;
  id v7 = objc_msgSend(v5, sel_dataWithJSONObject_options_error_, v6, 0, v18);

  id v8 = v18[0];
  if (v7)
  {
    uint64_t v9 = sub_1A7571A20();
    unint64_t v11 = v10;

    unsigned __int8 v12 = (void *)sub_1A7571A00();
    uint64_t v13 = (void *)sub_1A75725E0();
    [(objc_class *)with.super.isa encodeObject:v12 forKey:v13];

    uint64_t v14 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
    uint64_t v15 = (void *)sub_1A75725E0();
    [(objc_class *)with.super.isa encodeInteger:v14 forKey:v15];

    sub_1A72E3460(v9, v11);
  }
  else
  {
    uint64_t v16 = v8;
    uint64_t v17 = (void *)sub_1A7571850();

    swift_willThrow();
  }
}

char *REMCustomSmartListFilterDescriptor.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return REMCustomSmartListFilterDescriptor.init(coder:)(a1);
}

char *REMCustomSmartListFilterDescriptor.init(coder:)(void *a1)
{
  sub_1A72BEFEC(0, &qword_1EB704BC8);
  id v3 = v1;
  uint64_t v4 = sub_1A7573120();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = sub_1A7571A20();
    unint64_t v8 = v7;

    uint64_t v9 = (void *)sub_1A75725E0();
    id v10 = objc_msgSend(a1, sel_decodeIntegerForKey_, v9);

    swift_getObjectType();
    BOOL v12 = v10 != (id)*MEMORY[0x1E4F95118] && v10 == (id)*MEMORY[0x1E4F95108];
    BOOL v15 = v12;
    uint64_t v13 = sub_1A73B9D80(v6, v8, (unsigned __int8 *)&v15);

    swift_deallocPartialClassInstance();
  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v13;
}

uint64_t static REMCustomSmartListFilterDescriptor.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMCustomSmartListFilterDescriptor.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2380);
  MEMORY[0x1F4188790](v10);
  BOOL v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A72BF1E8(a1, (uint64_t)&v83, &qword_1EB705938);
  if (!v86)
  {
    sub_1A72CB560((uint64_t)&v83, &qword_1EB705938);
    goto LABEL_41;
  }
  if (swift_dynamicCast())
  {
    if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation) != v76[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation])
    {

      goto LABEL_41;
    }
    unint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
    uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
    int v15 = *(unsigned __int8 *)(v1
                             + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags
                             + 16);
    uint64_t v75 = (char *)v76;
    uint64_t v17 = *(unsigned __int8 **)&v76[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
    uint64_t v16 = *(void *)&v76[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8];
    unsigned __int8 v18 = v76[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16];
    if (v14 == 2)
    {
      LODWORD(v74) = v15;
      if (v17 == (unsigned __int8 *)2) {
        goto LABEL_14;
      }
    }
    else
    {
      unint64_t v83 = v14;
      uint64_t v84 = v13;
      LOBYTE(v85) = v15;
      if (v17 != (unsigned __int8 *)2)
      {
        uint64_t v76 = v17;
        uint64_t v77 = v16;
        LOBYTE(v78) = v18;
        sub_1A7383834(v14);
        sub_1A7383834(v14);
        LODWORD(v74) = _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G8HashtagsO2eeoiySbAE_AEtFZ_0(&v83, (unint64_t *)&v76);
        sub_1A7360E88(v83);
        sub_1A7384C20(v14);
        if ((v74 & 1) == 0) {
          goto LABEL_12;
        }
LABEL_14:
        uint64_t v20 = (unsigned __int8 *)v75;
        uint64_t v21 = &v75[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date];
        uint64_t v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
        sub_1A72BF1E8(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v12, (uint64_t *)&unk_1E96F2370);
        sub_1A72BF1E8((uint64_t)v21, v22, (uint64_t *)&unk_1E96F2370);
        uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
        if (v23((uint64_t)v12, 1, v3) == 1)
        {
          if (v23(v22, 1, v3) == 1)
          {
            sub_1A72CB560((uint64_t)v12, (uint64_t *)&unk_1E96F2370);
LABEL_21:
            int v25 = *(unsigned __int8 *)(v1
                                     + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
            int v26 = v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time];
            if (v25 == 6)
            {
              if (v26 != 6) {
                goto LABEL_40;
              }
            }
            else if (v26 == 6 || v25 != v26)
            {
              goto LABEL_40;
            }
            long long v27 = *(void **)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
            uint64_t v28 = *(void **)&v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities];
            if (v27)
            {
              if (!v28 || !sub_1A72DE5A0(v27, v28)) {
                goto LABEL_40;
              }
LABEL_31:
              int v29 = *(unsigned __int8 *)(v1
                                       + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
              int v30 = v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged];
              if (v29 == 2)
              {
                if (v30 != 2) {
                  goto LABEL_40;
                }
              }
              else if (v30 == 2 || ((((v29 & 1) == 0) ^ v30) & 1) == 0)
              {
                goto LABEL_40;
              }
              uint64_t v31 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
              uint64_t v32 = *(void *)(v1
                              + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                              + 8);
              uint64_t v34 = *(void *)(v1
                              + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                              + 16);
              uint64_t v33 = *(void *)(v1
                              + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                              + 24);
              uint64_t v36 = *(void *)(v1
                              + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                              + 32);
              uint64_t v35 = *(void *)(v1
                              + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                              + 40);
              int v37 = *(unsigned __int8 *)(v1
                                       + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                                       + 48);
              uint64_t v38 = &v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
              uint64_t v40 = *(unsigned __int8 **)&v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
              uint64_t v39 = *(void *)&v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                                  + 8];
              uint64_t v42 = *(void *)&v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                                  + 16];
              uint64_t v41 = *(void *)&v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                                  + 24];
              uint64_t v44 = *(void *)&v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                                  + 32];
              uint64_t v43 = *((void *)v38 + 5);
              int v45 = v38[48];
              if (v37 == 255)
              {
                uint64_t v73 = *(void *)(v1
                                + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                                + 40);
                uint64_t v74 = v31;
                uint64_t v69 = v32;
                uint64_t v70 = v34;
                uint64_t v71 = v33;
                uint64_t v72 = v36;
                if (v45 == 255) {
                  goto LABEL_44;
                }
              }
              else
              {
                unint64_t v83 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
                uint64_t v84 = v32;
                uint64_t v85 = v34;
                uint64_t v86 = v33;
                uint64_t v87 = v36;
                uint64_t v88 = v35;
                char v89 = v37;
                if (v45 != 255)
                {
                  uint64_t v76 = v40;
                  uint64_t v77 = v39;
                  uint64_t v78 = v42;
                  uint64_t v79 = v41;
                  uint64_t v80 = v44;
                  uint64_t v81 = v43;
                  char v82 = v45;
                  uint64_t v46 = v31;
                  uint64_t v47 = v34;
                  uint64_t v48 = v34;
                  uint64_t v49 = v36;
                  uint64_t v50 = v35;
                  sub_1A7383844(v31, v32, v48, v33, v36, v35, v37);
                  sub_1A7383844(v46, v32, v47, v33, v36, v50, v37);
                  char v51 = _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G8LocationO2eeoiySbAE_AEtFZ_0((uint64_t)&v83, (uint64_t)&v76);
                  sub_1A7383794(v83, v84, v85, v86, v87, v88, v89);
                  sub_1A7384C44(v46, v32, v47, v33, v49, v50, v37);
                  if (v51)
                  {
LABEL_44:
                    uint64_t v54 = v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists;
                    uint64_t v56 = *(void *)(v1
                                    + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
                    uint64_t v55 = *(void *)(v54 + 8);
                    id v57 = v75;
                    uint64_t v59 = *(void *)&v75[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
                    uint64_t v58 = *(void *)&v75[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists
                                        + 8];
                    if (v56)
                    {
                      if (v59)
                      {
                        sub_1A7383870(v56);
                        sub_1A7383870(v59);
                        sub_1A7383870(v56);
                        if (sub_1A72DDC34(v56, v59))
                        {
                          char v52 = sub_1A72DDC34(v55, v58);

                          sub_1A7384C58(v59);
                          sub_1A7384C58(v56);
                          sub_1A7384C58(v56);
                          return v52 & 1;
                        }

                        sub_1A7384C58(v59);
                        sub_1A7384C58(v56);
                        sub_1A7384C58(v56);
                        goto LABEL_41;
                      }
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      sub_1A7383870(*(void *)&v75[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists]);

                      if (!v59)
                      {
                        char v52 = 1;
                        return v52 & 1;
                      }
                    }
                    sub_1A7384C58(v56);
                    sub_1A7384C58(v59);
                    goto LABEL_41;
                  }
LABEL_12:

                  goto LABEL_41;
                }
                uint64_t v74 = v31;
                uint64_t v66 = v40;
                uint64_t v67 = v39;
                uint64_t v65 = v42;
                uint64_t v68 = v43;
                uint64_t v60 = v35;
                sub_1A7383858(v31, v32, v34, v33, v36, v35, v37);
                uint64_t v61 = v74;
                sub_1A7383858(v74, v32, v34, v33, v36, v60, v37);
                uint64_t v69 = v32;
                uint64_t v70 = v34;
                uint64_t v71 = v33;
                uint64_t v72 = v36;
                uint64_t v73 = v60;
                sub_1A7383794(v61, v32, v34, v33, v36, v60, v37);
                uint64_t v40 = v66;
                uint64_t v39 = v67;
                uint64_t v42 = v65;
                uint64_t v43 = v68;
              }
              uint64_t v62 = (uint64_t)v40;
              uint64_t v63 = v39;
              uint64_t v64 = v43;
              sub_1A7383844((uint64_t)v40, v39, v42, v41, v44, v43, v45);
              sub_1A7384C44(v74, v69, v70, v71, v72, v73, v37);
              sub_1A7384C44(v62, v63, v42, v41, v44, v64, v45);
              goto LABEL_12;
            }
            if (!v28) {
              goto LABEL_31;
            }
LABEL_40:

            goto LABEL_41;
          }
        }
        else
        {
          sub_1A72BF1E8((uint64_t)v12, (uint64_t)v9, (uint64_t *)&unk_1E96F2370);
          if (v23(v22, 1, v3) != 1)
          {
            sub_1A73837CC(v22, (uint64_t)v6, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
            char v24 = _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G4DateO2eeoiySbAE_AEtFZ_0((uint64_t)v9, (uint64_t)v6);
            sub_1A7383734((uint64_t)v6, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
            sub_1A7383734((uint64_t)v9, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
            sub_1A72CB560((uint64_t)v12, (uint64_t *)&unk_1E96F2370);
            if ((v24 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_21;
          }
          sub_1A7383734((uint64_t)v9, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
        }
        sub_1A72CB560((uint64_t)v12, (uint64_t *)&unk_1E96F2380);
        goto LABEL_40;
      }
      int v19 = v15;
      sub_1A735D3B8(v14);
      sub_1A735D3B8(v14);
      LODWORD(v74) = v19;
      sub_1A7360E88(v14);
    }
    sub_1A7383834((unint64_t)v17);
    sub_1A7384C20(v14);
    sub_1A7384C20((unint64_t)v17);
    goto LABEL_12;
  }
LABEL_41:
  char v52 = 0;
  return v52 & 1;
}

uint64_t REMCustomSmartListFilterDescriptor.description.getter()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26[0] = ObjectType;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2390);
  v26[0] = sub_1A7572670();
  v26[1] = v6;
  sub_1A7572740();
  uint64_t v8 = v26[0];
  uint64_t v7 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A7572740();
  v25[15] = *(unsigned char *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
  sub_1A7573760();
  sub_1A7572740();
  v26[0] = v8;
  v26[1] = v7;
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v26[0];
  uint64_t v10 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A7573560();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000012;
  v26[1] = 0x80000001A75A09A0;
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  v26[0] = v9;
  v26[1] = v10;
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v26[0];
  uint64_t v11 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A7573560();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "hasDateFilter:");
  HIBYTE(v26[1]) = -18;
  sub_1A72BF1E8(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v5, (uint64_t *)&unk_1E96F2370);
  uint64_t v13 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v5, 1, v13);
  sub_1A72CB560((uint64_t)v5, (uint64_t *)&unk_1E96F2370);
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  v26[0] = v12;
  v26[1] = v11;
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v26[0];
  uint64_t v14 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A7573560();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "hasTimeFilter:");
  HIBYTE(v26[1]) = -18;
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  v26[0] = v15;
  v26[1] = v14;
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v26[0];
  uint64_t v16 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A7573560();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000014;
  v26[1] = 0x80000001A75A09C0;
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  v26[0] = v17;
  v26[1] = v16;
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v26[0];
  uint64_t v18 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A7573560();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000011;
  v26[1] = 0x80000001A75A09E0;
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  v26[0] = v19;
  v26[1] = v18;
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v26[0];
  uint64_t v20 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A7573560();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000012;
  v26[1] = 0x80000001A75A0A00;
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  v26[0] = v21;
  v26[1] = v20;
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = v26[0];
  uint64_t v22 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A7573560();
  swift_bridgeObjectRelease();
  v26[0] = 0x737473694C736168;
  v26[1] = 0xEF3A7265746C6946;
  sub_1A7572740();
  swift_bridgeObjectRelease();
  v26[0] = v23;
  v26[1] = v22;
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  return v26[0];
}

uint64_t REMCustomSmartListFilterDescriptor.isEmpty.getter()
{
  Class ObjectType = (Class)swift_getObjectType();
  v2[0] = objc_msgSend(objc_allocWithZone(ObjectType), sel_init);
  char v0 = REMCustomSmartListFilterDescriptor.isEqual(_:)((uint64_t)v2);
  sub_1A72CB560((uint64_t)v2, &qword_1EB705938);
  return v0 & 1;
}

uint64_t REMCustomSmartListFilterDescriptor.enabledFilterCount.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42[3] = xmmword_1A757E3C0;
  unint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  if (v4 == 2)
  {
    unint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v44 = 0;
  }
  else
  {
    LOBYTE(v44) = *(unsigned char *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16);
    uint64_t v8 = &type metadata for REMCustomSmartListFilterDescriptor.FilterHashtags;
    unint64_t v6 = v4;
    uint64_t v7 = v5;
  }
  v43[0] = v6;
  v43[1] = v7;
  int v45 = v8;
  sub_1A72BF1E8(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v3, (uint64_t *)&unk_1E96F2370);
  uint64_t v9 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v3, 1, v9) == 1)
  {
    sub_1A7383834(v4);
    sub_1A72CB560((uint64_t)v3, (uint64_t *)&unk_1E96F2370);
    long long v46 = 0u;
    long long v47 = 0u;
  }
  else
  {
    *((void *)&v47 + 1) = v9;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v46);
    sub_1A73837CC((uint64_t)v3, (uint64_t)boxed_opaque_existential_0, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
    sub_1A7383834(v4);
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time) == 6)
  {
    uint64_t v11 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
  }
  else
  {
    LOBYTE(v48) = *(unsigned char *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
    uint64_t v11 = &type metadata for REMCustomSmartListFilterDescriptor.FilterTime;
  }
  char v51 = v11;
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  if (v12)
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2398);
    uint64_t v14 = v12;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v13 = 0;
    uint64_t v53 = 0;
    uint64_t v54 = 0;
  }
  uint64_t v52 = v14;
  uint64_t v55 = v13;
  int v15 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  v38[1] = v12;
  if (v15 == 2)
  {
    uint64_t v16 = 0;
    uint64_t v56 = 0;
    uint64_t v57 = 0;
    uint64_t v58 = 0;
  }
  else
  {
    LOBYTE(v56) = v15 & 1;
    uint64_t v16 = MEMORY[0x1E4FBB390];
  }
  uint64_t v59 = v16;
  uint64_t v17 = *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  uint64_t v18 = *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  uint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  uint64_t v20 = *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  uint64_t v22 = *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  uint64_t v21 = *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  int v23 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  if (v23 == 255)
  {
    uint64_t v24 = 0;
    int v25 = 0;
    uint64_t v61 = 0;
    uint64_t v62 = 0;
  }
  else
  {
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v17;
    *(void *)(v24 + 24) = v18;
    *(void *)(v24 + 32) = v19;
    *(void *)(v24 + 40) = v20;
    *(void *)(v24 + 48) = v22;
    *(void *)(v24 + 56) = v21;
    int v25 = &type metadata for REMCustomSmartListFilterDescriptor.FilterLocation;
    *(unsigned char *)(v24 + 64) = v23;
  }
  v38[2] = v43;
  uint64_t v60 = v24;
  uint64_t v63 = v25;
  uint64_t v26 = v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists;
  uint64_t v27 = *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  uint64_t v28 = *(void *)(v26 + 8);
  if (v27)
  {
    int v29 = &type metadata for REMCustomSmartListFilterDescriptor.FilterLists;
    uint64_t v30 = v27;
    uint64_t v31 = v28;
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    int v29 = 0;
    uint64_t v66 = 0;
  }
  uint64_t v64 = v30;
  uint64_t v65 = v31;
  uint64_t v67 = v29;
  swift_bridgeObjectRetain();
  sub_1A7383844(v17, v18, v19, v20, v22, v21, v23);
  sub_1A7383870(v27);
  uint64_t v32 = (void *)MEMORY[0x1E4FBC860];
  for (uint64_t i = 2; i != 16; i += 2)
  {
    sub_1A72BF1E8((uint64_t)&v42[i + 2], (uint64_t)v42, &qword_1EB705938);
    sub_1A734E5D8((uint64_t)v42, (uint64_t)&v39, &qword_1EB705938);
    if (v40)
    {
      sub_1A72BEE44(&v39, v41);
      sub_1A72BEE44(v41, &v39);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v32 = sub_1A72AC8F0(0, v32[2] + 1, 1, v32);
      }
      unint64_t v35 = v32[2];
      unint64_t v34 = v32[3];
      if (v35 >= v34 >> 1) {
        uint64_t v32 = sub_1A72AC8F0((void *)(v34 > 1), v35 + 1, 1, v32);
      }
      uint64_t v32[2] = v35 + 1;
      sub_1A72BEE44(&v39, &v32[4 * v35 + 4]);
    }
    else
    {
      sub_1A72CB560((uint64_t)&v39, &qword_1EB705938);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705938);
  swift_arrayDestroy();
  uint64_t v36 = v32[2];
  swift_bridgeObjectRelease();
  return v36;
}

unint64_t REMCustomSmartListFilterDescriptor.postFetchPredicates(for:reminderIDsWithMatchingHashtagsProvider:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v87 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  uint64_t v93 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v86 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Predicate = (unsigned char *)type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  uint64_t v11 = *((void *)Predicate - 1);
  uint64_t v12 = MEMORY[0x1F4188790](Predicate);
  unint64_t v94 = (uint64_t *)((char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v88 = (uint64_t *)((char *)&v86 - v15);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v86 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v92 = (char *)&v86 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v91 = (uint64_t)&v86 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  int v25 = (char *)&v86 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (uint64_t *)((char *)&v86 - v26);
  BOOL v28 = sub_1A72DB854(8, a1);
  uint64_t v95 = a1;
  if (v28)
  {
    char v90 = v18;
    if (*(void *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities))
    {
      uint64_t v89 = v11;
      uint64_t v29 = swift_bridgeObjectRetain();
      uint64_t v30 = sub_1A72E745C(v29);
      swift_bridgeObjectRelease();
      *uint64_t v27 = v30;
      uint64_t v31 = Predicate;
      swift_storeEnumTagMultiPayload();
      unint64_t v32 = sub_1A72AD0E8(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v34 = *(void *)(v32 + 16);
      unint64_t v33 = *(void *)(v32 + 24);
      if (v34 >= v33 >> 1) {
        unint64_t v32 = sub_1A72AD0E8(v33 > 1, v34 + 1, 1, v32);
      }
      *(void *)(v32 + 16) = v34 + 1;
      uint64_t v11 = v89;
      sub_1A73837CC((uint64_t)v27, v32+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v89 + 72) * v34, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      uint64_t Predicate = v31;
      a1 = v95;
    }
    else
    {
      unint64_t v32 = MEMORY[0x1E4FBC860];
    }
    uint64_t v18 = v90;
  }
  else
  {
    unint64_t v32 = MEMORY[0x1E4FBC860];
  }
  if (sub_1A72DB854(16, a1))
  {
    int v35 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
    if (v35 != 2)
    {
      char v90 = v18;
      uint64_t v36 = v8;
      unsigned char *v25 = v35 & 1;
      swift_storeEnumTagMultiPayload();
      int v37 = Predicate;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v32 = sub_1A72AD0E8(0, *(void *)(v32 + 16) + 1, 1, v32);
      }
      unint64_t v39 = *(void *)(v32 + 16);
      unint64_t v38 = *(void *)(v32 + 24);
      if (v39 >= v38 >> 1) {
        unint64_t v32 = sub_1A72AD0E8(v38 > 1, v39 + 1, 1, v32);
      }
      *(void *)(v32 + 16) = v39 + 1;
      sub_1A73837CC((uint64_t)v25, v32+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v39, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      uint64_t Predicate = v37;
      uint64_t v8 = v36;
      uint64_t v18 = v90;
    }
  }
  if (sub_1A72DB854(2, a1))
  {
    sub_1A72BF1E8(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v7, (uint64_t *)&unk_1E96F2370);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v7, 1, v8) == 1)
    {
      sub_1A72CB560((uint64_t)v7, (uint64_t *)&unk_1E96F2370);
    }
    else
    {
      uint64_t v40 = (uint64_t)v7;
      uint64_t v41 = v86;
      sub_1A73837CC(v40, v86, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      sub_1A7383624(v41, v91, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      swift_storeEnumTagMultiPayload();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v32 = sub_1A72AD0E8(0, *(void *)(v32 + 16) + 1, 1, v32);
      }
      unint64_t v43 = *(void *)(v32 + 16);
      unint64_t v42 = *(void *)(v32 + 24);
      if (v43 >= v42 >> 1) {
        unint64_t v32 = sub_1A72AD0E8(v42 > 1, v43 + 1, 1, v32);
      }
      *(void *)(v32 + 16) = v43 + 1;
      sub_1A73837CC(v91, v32+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v43, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      sub_1A7383734(v41, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
    }
  }
  if (sub_1A72DB854(4, a1))
  {
    int v44 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
    if (v44 != 6)
    {
      *uint64_t v92 = v44;
      swift_storeEnumTagMultiPayload();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v32 = sub_1A72AD0E8(0, *(void *)(v32 + 16) + 1, 1, v32);
      }
      unint64_t v46 = *(void *)(v32 + 16);
      unint64_t v45 = *(void *)(v32 + 24);
      if (v46 >= v45 >> 1) {
        unint64_t v32 = sub_1A72AD0E8(v45 > 1, v46 + 1, 1, v32);
      }
      *(void *)(v32 + 16) = v46 + 1;
      sub_1A73837CC((uint64_t)v92, v32+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v46, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
    }
  }
  if (sub_1A72DB854(32, a1))
  {
    long long v47 = (uint64_t *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
    int v48 = *(unsigned __int8 *)(v3
                             + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                             + 48);
    if (v48 != 255)
    {
      uint64_t v89 = v11;
      uint64_t v93 = v3;
      uint64_t v50 = v47[4];
      uint64_t v49 = v47[5];
      char v51 = Predicate;
      uint64_t v53 = v47[2];
      uint64_t v52 = v47[3];
      uint64_t v55 = *v47;
      uint64_t v54 = v47[1];
      *(void *)uint64_t v18 = *v47;
      *((void *)v18 + 1) = v54;
      *((void *)v18 + 2) = v53;
      *((void *)v18 + 3) = v52;
      *((void *)v18 + 4) = v50;
      *((void *)v18 + 5) = v49;
      v18[48] = v48;
      uint64_t v56 = v51;
      swift_storeEnumTagMultiPayload();
      sub_1A7383858(v55, v54, v53, v52, v50, v49, v48);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v32 = sub_1A72AD0E8(0, *(void *)(v32 + 16) + 1, 1, v32);
      }
      unint64_t v58 = *(void *)(v32 + 16);
      unint64_t v57 = *(void *)(v32 + 24);
      uint64_t v3 = v93;
      uint64_t Predicate = v56;
      a1 = v95;
      if (v58 >= v57 >> 1) {
        unint64_t v32 = sub_1A72AD0E8(v57 > 1, v58 + 1, 1, v32);
      }
      uint64_t v11 = v89;
      *(void *)(v32 + 16) = v58 + 1;
      sub_1A73837CC((uint64_t)v18, v32+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v58, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
    }
  }
  if (sub_1A72DB854(1, a1))
  {
    uint64_t v59 = *(void *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
    if (v59)
    {
      if (v59 == 1)
      {
        uint64_t v63 = v87[3];
        uint64_t v64 = v87[4];
        __swift_project_boxed_opaque_existential_1(v87, v63);
        uint64_t v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 16))(v63, v64);
        uint64_t v72 = sub_1A737EE5C(v65);
        swift_bridgeObjectRelease();
        char v73 = 0;
      }
      else
      {
        if (v59 == 2)
        {
          a1 = v95;
          goto LABEL_51;
        }
        uint64_t v92 = Predicate;
        uint64_t v93 = v3;
        int v66 = *(unsigned char *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16) & 1;
        uint64_t v67 = v87[3];
        uint64_t v68 = v87[4];
        __swift_project_boxed_opaque_existential_1(v87, v67);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v69 = sub_1A72E6AB4(v59);
        swift_bridgeObjectRelease();
        uint64_t v70 = swift_bridgeObjectRetain();
        uint64_t v71 = sub_1A72E6AB4(v70);
        swift_bridgeObjectRelease();
        LODWORD(v91) = v66;
        LOBYTE(v96[0]) = v66;
        uint64_t v74 = (*(uint64_t (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(v68 + 8))(v69, v71, v96, v67, v68);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v72 = sub_1A737EE5C(v74);
        swift_bridgeObjectRelease();
        char v73 = 0;
        uint64_t v3 = v93;
      }
    }
    else
    {
      uint64_t v60 = v87[3];
      uint64_t v61 = v87[4];
      __swift_project_boxed_opaque_existential_1(v87, v60);
      uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 16))(v60, v61);
      uint64_t v72 = sub_1A737EE5C(v62);
      swift_bridgeObjectRelease();
      char v73 = 1;
    }
    a1 = v95;
    uint64_t v75 = (uint64_t)v88;
    *uint64_t v88 = v72;
    *(unsigned char *)(v75 + 8) = v73;
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v32 = sub_1A72AD0E8(0, *(void *)(v32 + 16) + 1, 1, v32);
    }
    unint64_t v77 = *(void *)(v32 + 16);
    unint64_t v76 = *(void *)(v32 + 24);
    if (v77 >= v76 >> 1) {
      unint64_t v32 = sub_1A72AD0E8(v76 > 1, v77 + 1, 1, v32);
    }
    *(void *)(v32 + 16) = v77 + 1;
    sub_1A73837CC(v75, v32+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v77, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
  }
LABEL_51:
  if (sub_1A72DB854(64, a1))
  {
    uint64_t v78 = *(void *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
    if (v78)
    {
      uint64_t v79 = *(void *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
      uint64_t v80 = v94;
      *unint64_t v94 = v78;
      v80[1] = v79;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v32 = sub_1A72AD0E8(0, *(void *)(v32 + 16) + 1, 1, v32);
      }
      unint64_t v82 = *(void *)(v32 + 16);
      unint64_t v81 = *(void *)(v32 + 24);
      if (v82 >= v81 >> 1) {
        unint64_t v32 = sub_1A72AD0E8(v81 > 1, v82 + 1, 1, v32);
      }
      *(void *)(v32 + 16) = v82 + 1;
      sub_1A73837CC((uint64_t)v94, v32+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v82, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
    }
  }
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation) == 1
    && *(void *)(v32 + 16) >= 2uLL)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F23A0);
    unint64_t v83 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = xmmword_1A75785A0;
    *(void *)(v84 + v83) = v32;
    swift_storeEnumTagMultiPayload();
    return v84;
  }
  return v32;
}

uint64_t sub_1A737EE5C(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1A7573400()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = MEMORY[0x1E4FBC870];
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v29 = v1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2460);
  uint64_t v3 = sub_1A7573510();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A75733C0();
  type metadata accessor for REMObjectID_Codable();
  sub_1A73836EC((unint64_t *)&qword_1E96F1528, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
  uint64_t result = sub_1A7572CD0();
  uint64_t v1 = v31;
  uint64_t v29 = v32;
  uint64_t v5 = v33;
  uint64_t v6 = v34;
  unint64_t v7 = v35;
LABEL_11:
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v12 = v3 + 56;
  while (v1 < 0)
  {
    if (!sub_1A7573440()) {
      goto LABEL_45;
    }
    type metadata accessor for REMObjectID_Codable();
    swift_dynamicCast();
    uint64_t v16 = v30;
LABEL_36:
    uint64_t result = sub_1A7573180();
    uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v3 + 48) + 8 * v13) = v16;
    ++*(void *)(v3 + 16);
  }
  if (v7)
  {
    unint64_t v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v15 = v14 | (v6 << 6);
LABEL_35:
    uint64_t v16 = *(void **)(*(void *)(v1 + 48) + 8 * v15);
    uint64_t v30 = v16;
    id v21 = v16;
    goto LABEL_36;
  }
  int64_t v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v11) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v29 + 8 * v17);
    uint64_t v19 = v6 + 1;
    if (!v18)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_45;
      }
      unint64_t v18 = *(void *)(v29 + 8 * v19);
      if (!v18)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_45;
        }
        unint64_t v18 = *(void *)(v29 + 8 * v19);
        if (!v18)
        {
          uint64_t v19 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v29 + 8 * v19);
          if (!v18)
          {
            uint64_t v19 = v6 + 5;
            if (v6 + 5 >= v11) {
              goto LABEL_45;
            }
            unint64_t v18 = *(void *)(v29 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v6 + 6;
              while (v11 != v20)
              {
                unint64_t v18 = *(void *)(v29 + 8 * v20++);
                if (v18)
                {
                  uint64_t v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_1A72D99A4();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v19 << 6);
    uint64_t v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1A737F20C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2450);
    uint64_t v2 = sub_1A7573510();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC870];
  }
  uint64_t v3 = a1 + 56;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(63 - v4) >> 6;
  uint64_t v8 = v2 + 56;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v13 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_28;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v7) {
      goto LABEL_37;
    }
    unint64_t v16 = *(void *)(v3 + 8 * v15);
    int64_t v17 = v10 + 1;
    if (!v16)
    {
      int64_t v17 = v10 + 2;
      if (v10 + 2 >= v7) {
        goto LABEL_37;
      }
      unint64_t v16 = *(void *)(v3 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v10 + 3;
        if (v10 + 3 >= v7) {
          goto LABEL_37;
        }
        unint64_t v16 = *(void *)(v3 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v10 + 4;
          if (v10 + 4 >= v7) {
            goto LABEL_37;
          }
          unint64_t v16 = *(void *)(v3 + 8 * v17);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    int64_t v10 = v17;
LABEL_28:
    uint64_t v19 = *(void **)(*(void *)(a1 + 48) + 8 * v14);
    type metadata accessor for Dataclass(0);
    id v20 = v19;
    swift_dynamicCast();
    uint64_t result = sub_1A7573470();
    uint64_t v21 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v8 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v2 + 48) + 40 * v11;
    *(_OWORD *)uint64_t v12 = v28;
    *(_OWORD *)(v12 + 16) = v29;
    *(void *)(v12 + 32) = v30;
    ++*(void *)(v2 + 16);
  }
  int64_t v18 = v10 + 5;
  if (v10 + 5 >= v7)
  {
LABEL_37:
    swift_release();
    sub_1A72D99A4();
    return v2;
  }
  unint64_t v16 = *(void *)(v3 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v10 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v7) {
      goto LABEL_37;
    }
    unint64_t v16 = *(void *)(v3 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

id REMCustomSmartListFilterDescriptor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange.lowerBound.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A72BF1E8(v1, a1, &qword_1EB704C60);
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange.upperBound.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A737F624(type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange, &qword_1EB704C60, a1);
}

uint64_t sub_1A737F624@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a1(0);
  return sub_1A72BF1E8(v3 + *(int *)(v6 + 20), a3, a2);
}

BOOL REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange.contains(_:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  int64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_1A7571B60();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v20 - v13;
  sub_1A72BF1E8(v1, (uint64_t)v7, &qword_1EB704C60);
  int64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v15(v7, 1, v8) == 1)
  {
    sub_1A72CB560((uint64_t)v7, &qword_1EB704C60);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    char v16 = sub_1A7571AD0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    if (v16) {
      return 0;
    }
  }
  uint64_t v17 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
  sub_1A72BF1E8(v1 + *(int *)(v17 + 20), (uint64_t)v5, &qword_1EB704C60);
  if (v15(v5, 1, v8) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v5, v8);
    char v18 = sub_1A7571AC0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return (v18 & 1) == 0;
  }
  sub_1A72CB560((uint64_t)v5, &qword_1EB704C60);
  return 1;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.range(now:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v161 = a1;
  uint64_t v169 = (char *)a2;
  uint64_t v3 = sub_1A7571B60();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v166 = v3;
  uint64_t v167 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  int64_t v7 = (char *)&v154 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v163 = (char **)((char *)&v154 - v9);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v154 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v157 = (char *)&v154 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v158 = (char *)&v154 - v15;
  uint64_t v16 = sub_1A7571DE0();
  uint64_t v159 = *(void *)(v16 - 8);
  uint64_t v160 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v162 = (char *)&v154 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v154 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  unint64_t v156 = (char *)&v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  char v155 = (char *)&v154 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v154 = (char *)&v154 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v154 - v29;
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  uint64_t v164 = (uint64_t)&v154 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v165 = (char **)((char *)&v154 - v34);
  MEMORY[0x1F4188790](v33);
  uint64_t v36 = (char *)&v154 - v35;
  uint64_t v37 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1F4188790](v37);
  unint64_t v39 = (unsigned __int8 *)&v154 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_1A7571E00();
  uint64_t v168 = *(void *)(v170 - 8);
  uint64_t v40 = MEMORY[0x1F4188790](v170);
  unint64_t v42 = (char *)&v154 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v40);
  uint64_t v171 = (char *)&v154 - v43;
  sub_1A7571DC0();
  sub_1A7383624(v2, (uint64_t)v39, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A734E5D8((uint64_t)v39, (uint64_t)v20, (uint64_t *)&unk_1EB7058C8);
      sub_1A7571DC0();
      uint64_t v50 = (void (*)(void, void, void))v165;
      sub_1A7571D40();
      char v51 = *(void (**)(char *, uint64_t))(v168 + 8);
      uint64_t v52 = v170;
      v51(v42, v170);
      uint64_t v53 = v166;
      uint64_t v168 = *(void *)(v167 + 56);
      ((void (*)(void (*)(void, void, void), void, uint64_t, uint64_t))v168)(v50, 0, 1, v166);
      uint64_t v54 = (uint64_t)&v20[*(int *)(v18 + 36)];
      sub_1A7571DC0();
      uint64_t v55 = v164;
      Calendar.endOfDay(for:)(v54, v164);
      v51(v42, v52);
      sub_1A72CB560((uint64_t)v20, (uint64_t *)&unk_1EB7058C8);
      v51(v171, v52);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v168)(v55, 0, 1, v53);
      uint64_t v56 = (uint64_t)v169;
      sub_1A734E5D8((uint64_t)v50, (uint64_t)v169, &qword_1EB704C60);
      uint64_t v57 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
      uint64_t v58 = v56 + *(int *)(v57 + 20);
      uint64_t v59 = v55;
      goto LABEL_40;
    case 2u:
      int v60 = *v39;
      uint64_t v61 = *((void *)v39 + 1);
      uint64_t v62 = (char)v39[16];
      int v63 = v39[17];
      uint64_t v64 = qword_1A757EEA0[v62];
      (*(void (**)(char *, void, uint64_t))(v159 + 104))(v162, **((unsigned int **)&unk_1E5CC8FF0 + v62), v160);
      if ((unsigned __int128)(v61 * (__int128)v64) >> 64 != (v61 * v64) >> 63)
      {
        __break(1u);
        goto LABEL_44;
      }
      LODWORD(v163) = v63;
      uint64_t v65 = 1;
      if (!v60) {
        uint64_t v65 = -1;
      }
      uint64_t v66 = v166;
      uint64_t v67 = v167;
      uint64_t v68 = v161;
      if ((unsigned __int128)(v61 * v64 * (__int128)v65) >> 64 != (v61 * v64 * v65) >> 63)
      {
LABEL_44:
        __break(1u);
        JUMPOUT(0x1A7380D1CLL);
      }
      int v69 = v62;
      sub_1A7571DA0();
      uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
      uint64_t v71 = v157;
      v70(v157, v68, v66);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v30, 1, v66) == 1)
      {
        uint64_t v72 = *(void (**)(uint64_t, char *, uint64_t))(v67 + 32);
        v72((uint64_t)v158, v71, v66);
        sub_1A72CB560((uint64_t)v30, &qword_1EB704C60);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v67 + 8))(v71, v66);
        uint64_t v72 = *(void (**)(uint64_t, char *, uint64_t))(v67 + 32);
        v72((uint64_t)v158, v30, v66);
      }
      uint64_t v105 = v170;
      if ((v69 - 2) < 3)
      {
        if (v60)
        {
          uint64_t v106 = v167;
          if (v163)
          {
            uint64_t v107 = (uint64_t)v156;
            uint64_t v108 = v166;
            uint64_t v163 = *(char ***)(v167 + 56);
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v163)(v156, 1, 1, v166);
            uint64_t v109 = v168;
          }
          else
          {
            sub_1A7571DC0();
            uint64_t v107 = (uint64_t)v156;
            sub_1A7571D40();
            uint64_t v109 = v168;
            (*(void (**)(char *, uint64_t))(v168 + 8))(v42, v105);
            uint64_t v108 = v166;
            uint64_t v163 = *(char ***)(v106 + 56);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v163)(v107, 0, 1, v166);
          }
          uint64_t v126 = (void (*)(void, void, void))v165;
          sub_1A72BF1E8(v107, (uint64_t)v165, &qword_1EB704C60);
          sub_1A7571DC0();
          uint64_t v127 = v164;
          uint64_t v128 = (uint64_t)v158;
          Calendar.endOfDay(for:)((uint64_t)v158, v164);
          uint64_t v129 = *(void (**)(char *, uint64_t))(v109 + 8);
          id v130 = v42;
          uint64_t v131 = v170;
          v129(v130, v170);
          sub_1A72CB560(v107, &qword_1EB704C60);
          (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v128, v108);
          (*(void (**)(char *, uint64_t))(v159 + 8))(v162, v160);
          v129(v171, v131);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v163)(v127, 0, 1, v108);
          uint64_t v56 = (uint64_t)v169;
          sub_1A734E5D8((uint64_t)v126, (uint64_t)v169, &qword_1EB704C60);
          uint64_t v57 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
          uint64_t v58 = v56 + *(int *)(v57 + 20);
          uint64_t v59 = v127;
        }
        else
        {
          sub_1A7571DC0();
          uint64_t v113 = (void (*)(void, void, void))v165;
          uint64_t v114 = (uint64_t)v158;
          uint64_t v115 = v105;
          sub_1A7571D40();
          uint64_t v116 = *(void (**)(char *, uint64_t))(v168 + 8);
          v116(v42, v115);
          uint64_t v118 = v166;
          uint64_t v117 = v167;
          uint64_t v168 = *(void *)(v167 + 56);
          ((void (*)(void (*)(void, void, void), void, uint64_t, uint64_t))v168)(v113, 0, 1, v166);
          sub_1A7571DC0();
          uint64_t v119 = v164;
          Calendar.endOfDay(for:)(v161, v164);
          v116(v42, v115);
          (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v114, v118);
          (*(void (**)(char *, uint64_t))(v159 + 8))(v162, v160);
          v116(v171, v115);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v168)(v119, 0, 1, v118);
          uint64_t v56 = (uint64_t)v169;
          sub_1A734E5D8((uint64_t)v165, (uint64_t)v169, &qword_1EB704C60);
          uint64_t v57 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
          uint64_t v58 = v56 + *(int *)(v57 + 20);
          uint64_t v59 = v119;
        }
LABEL_40:
        sub_1A734E5D8(v59, v58, &qword_1EB704C60);
        unint64_t v83 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56);
        uint64_t v84 = v56;
        uint64_t v104 = v57;
        return v83(v84, 0, 1, v104);
      }
      if (v69)
      {
        if (v60)
        {
          uint64_t v120 = v167;
          if (v163)
          {
            unint64_t v121 = *(char ***)(v167 + 56);
            uint64_t v122 = (uint64_t)v155;
            uint64_t v123 = v155;
            uint64_t v124 = 1;
            uint64_t v125 = v166;
          }
          else
          {
            uint64_t v122 = (uint64_t)v155;
            uint64_t v146 = v68;
            uint64_t v125 = v166;
            v70(v155, v146, v166);
            unint64_t v121 = *(char ***)(v120 + 56);
            uint64_t v123 = (char *)v122;
            uint64_t v124 = 0;
          }
          uint64_t v163 = v121;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v121)(v123, v124, 1, v125);
          uint64_t v147 = (void (*)(void, void, void))v165;
          sub_1A72BF1E8(v122, (uint64_t)v165, &qword_1EB704C60);
          sub_1A7571DC0();
          uint64_t v148 = v164;
          uint64_t v149 = (uint64_t)v158;
          uint64_t v150 = v122;
          Calendar.endOfDay(for:)((uint64_t)v158, v164);
          uint64_t v151 = *(void (**)(char *, uint64_t))(v168 + 8);
          uint64_t v152 = v42;
          uint64_t v153 = v170;
          v151(v152, v170);
          sub_1A72CB560(v150, &qword_1EB704C60);
          (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v149, v125);
          (*(void (**)(char *, uint64_t))(v159 + 8))(v162, v160);
          v151(v171, v153);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v163)(v148, 0, 1, v125);
          uint64_t v56 = (uint64_t)v169;
          sub_1A734E5D8((uint64_t)v147, (uint64_t)v169, &qword_1EB704C60);
          uint64_t v57 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
          uint64_t v58 = v56 + *(int *)(v57 + 20);
          uint64_t v59 = v148;
          goto LABEL_40;
        }
        sub_1A7571DC0();
        uint64_t v136 = (void (*)(void, void, void))v165;
        uint64_t v137 = (uint64_t)v158;
        uint64_t v138 = v105;
        sub_1A7571D40();
        id v139 = *(void (**)(char *, uint64_t))(v168 + 8);
        v139(v42, v138);
        uint64_t v141 = v166;
        uint64_t v140 = v167;
        (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v137, v166);
        (*(void (**)(char *, uint64_t))(v159 + 8))(v162, v160);
        v139(v171, v138);
        uint64_t v142 = *(void (**)(void (*)(void, void, void), void, uint64_t, uint64_t))(v140 + 56);
        v142(v136, 0, 1, v141);
        uint64_t v81 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
        uint64_t v80 = (uint64_t)v169;
        int64_t v143 = &v169[*(int *)(v81 + 20)];
        v70(v143, v68, v141);
        v142((void (*)(void, void, void))v143, 0, 1, v141);
        sub_1A734E5D8((uint64_t)v136, v80, &qword_1EB704C60);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v159 + 8))(v162, v160);
        (*(void (**)(char *, uint64_t))(v168 + 8))(v171, v105);
        if (v60)
        {
          uint64_t v110 = v166;
          if (v163)
          {
            uint64_t v111 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v167 + 56);
            uint64_t v112 = (uint64_t)v154;
            v111(v154, 1, 1, v166);
          }
          else
          {
            uint64_t v112 = (uint64_t)v154;
            v70(v154, v68, v166);
            uint64_t v111 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v167 + 56);
            v111((char *)v112, 0, 1, v110);
          }
          uint64_t v144 = (uint64_t)v169;
          sub_1A734E5D8(v112, (uint64_t)v169, &qword_1EB704C60);
          uint64_t v81 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
          uint64_t v145 = v144 + *(int *)(v81 + 20);
          v72(v145, v158, v110);
          v111((char *)v145, 0, 1, v110);
          unint64_t v83 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56);
          uint64_t v84 = v144;
          goto LABEL_18;
        }
        uint64_t v133 = v166;
        uint64_t v132 = v167;
        uint64_t v80 = (uint64_t)v169;
        v72((uint64_t)v169, v158, v166);
        id v134 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v132 + 56);
        v134(v80, 0, 1, v133);
        uint64_t v81 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
        uint64_t v135 = v80 + *(int *)(v81 + 20);
        v70((char *)v135, v68, v133);
        v134(v135, 0, 1, v133);
      }
LABEL_13:
      unint64_t v83 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56);
      uint64_t v84 = v80;
LABEL_18:
      uint64_t v104 = v81;
      return v83(v84, 0, 1, v104);
    case 3u:
      uint64_t v73 = v166;
      uint64_t v74 = v167;
      uint64_t v165 = *(char ***)(v167 + 32);
      ((void (*)(char *, unsigned __int8 *, uint64_t))v165)(v12, v39, v166);
      Calendar.beginningOfPreviousDay(_:)((uint64_t)v12, (uint64_t)v7);
      sub_1A7571DC0();
      Calendar.endOfDay(for:)((uint64_t)v7, (uint64_t)v163);
      uint64_t v75 = *(void (**)(char *, uint64_t))(v168 + 8);
      unint64_t v76 = v42;
      uint64_t v77 = v170;
      v75(v76, v170);
      uint64_t v78 = *(void (**)(char *, uint64_t))(v74 + 8);
      v78(v7, v73);
      v78(v12, v73);
      v75(v171, v77);
      uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56);
      uint64_t v80 = (uint64_t)v169;
      v79((uint64_t)v169, 1, 1, v73);
      uint64_t v81 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
      uint64_t v82 = v80 + *(int *)(v81 + 20);
      ((void (*)(uint64_t, char **, uint64_t))v165)(v82, v163, v73);
      v79(v82, 0, 1, v73);
      goto LABEL_13;
    case 4u:
      uint64_t v85 = v167;
      uint64_t v86 = v39;
      uint64_t v87 = v166;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v167 + 32))(v12, v86, v166);
      sub_1A7571DC0();
      uint64_t v88 = (void (*)(void, void, void))v165;
      sub_1A7571D40();
      uint64_t v89 = *(void (**)(char *, uint64_t))(v168 + 8);
      uint64_t v90 = v170;
      v89(v42, v170);
      uint64_t v168 = *(void *)(v85 + 56);
      ((void (*)(void (*)(void, void, void), void, uint64_t, uint64_t))v168)(v88, 0, 1, v87);
      sub_1A7571DC0();
      uint64_t v91 = v164;
      Calendar.endOfDay(for:)((uint64_t)v12, v164);
      v89(v42, v90);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v12, v87);
      v89(v171, v90);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v168)(v91, 0, 1, v87);
      uint64_t v56 = (uint64_t)v169;
      sub_1A734E5D8((uint64_t)v165, (uint64_t)v169, &qword_1EB704C60);
      uint64_t v57 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
      uint64_t v58 = v56 + *(int *)(v57 + 20);
      uint64_t v59 = v91;
      goto LABEL_40;
    case 5u:
      uint64_t v92 = v167;
      uint64_t v93 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v167 + 32);
      unint64_t v94 = v39;
      uint64_t v95 = v166;
      v93(v12, v94, v166);
      uint64_t v96 = (unsigned __int8 *)v163;
      uint64_t v97 = v171;
      Calendar.beginningOfNextDay(_:)((uint64_t)v12, (uint64_t)v163);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v12, v95);
      (*(void (**)(char *, uint64_t))(v168 + 8))(v97, v170);
      uint64_t v98 = (uint64_t)v169;
      v93(v169, v96, v95);
      uint64_t v99 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56);
      v99(v98, 0, 1, v95);
      uint64_t v81 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
      v99(v98 + *(int *)(v81 + 20), 1, 1, v95);
      unint64_t v83 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56);
      uint64_t v84 = v98;
      goto LABEL_18;
    case 6u:
    case 7u:
      (*(void (**)(char *, uint64_t))(v168 + 8))(v171, v170);
      uint64_t v44 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v169, 1, 1, v44);
    default:
      if (*v39 == 1)
      {
        uint64_t v46 = v166;
        uint64_t v167 = *(void *)(v167 + 56);
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v167)(v36, 1, 1, v166);
        uint64_t v47 = v168;
        uint64_t v48 = v170;
        uint64_t v49 = v161;
      }
      else
      {
        sub_1A7571DC0();
        uint64_t v49 = v161;
        sub_1A7571D40();
        uint64_t v47 = v168;
        uint64_t v48 = v170;
        (*(void (**)(char *, uint64_t))(v168 + 8))(v42, v170);
        uint64_t v46 = v166;
        uint64_t v167 = *(void *)(v167 + 56);
        ((void (*)(char *, void, uint64_t, uint64_t))v167)(v36, 0, 1, v166);
      }
      uint64_t v100 = (void (*)(void, void, void))v165;
      sub_1A72BF1E8((uint64_t)v36, (uint64_t)v165, &qword_1EB704C60);
      sub_1A7571DC0();
      uint64_t v101 = v164;
      Calendar.endOfDay(for:)(v49, v164);
      uint64_t v102 = *(void (**)(char *, uint64_t))(v47 + 8);
      v102(v42, v48);
      sub_1A72CB560((uint64_t)v36, &qword_1EB704C60);
      v102(v171, v48);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v167)(v101, 0, 1, v46);
      uint64_t v103 = (uint64_t)v169;
      sub_1A734E5D8((uint64_t)v100, (uint64_t)v169, &qword_1EB704C60);
      uint64_t v81 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
      sub_1A734E5D8(v101, v103 + *(int *)(v81 + 20), &qword_1EB704C60);
      unint64_t v83 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56);
      uint64_t v84 = v103;
      goto LABEL_18;
  }
}

ReminderKitInternal::REMCustomSmartListFilterDescriptor::Operation __swiftcall REMCustomSmartListFilterDescriptor.Operation.init(hashtagLabelSpecifierOperation:)(ReminderKitInternal::REMCustomSmartListFilterDescriptor::Operation hashtagLabelSpecifierOperation)
{
  *uint64_t v1 = (*(unsigned char *)hashtagLabelSpecifierOperation & 1) == 0;
  return hashtagLabelSpecifierOperation;
}

unint64_t REMCustomSmartListFilterDescriptor.FilterHashtags.init(hashtagLabelSpecifier:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = *(void *)result;
  if (*(void *)result)
  {
    if (v3 == 1)
    {
      uint64_t v4 = 0;
      unint64_t v3 = 0;
      BOOL v5 = 0;
    }
    else
    {
      uint64_t v6 = *(void *)(result + 8);
      char v7 = *(unsigned char *)(result + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v4 = (uint64_t)sub_1A72D1F58(v3);
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_1A72D1F58(v6);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1A7360E88(v3);
      BOOL v5 = (v7 & 1) == 0;
      unint64_t v3 = (unint64_t)v8;
    }
  }
  else
  {
    BOOL v5 = 0;
    uint64_t v4 = 1;
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = v5;
  return result;
}

uint64_t Sequence<>.evaluate(with:)()
{
  return sub_1A75728A0() & 1;
}

uint64_t sub_1A7380E64(uint64_t a1)
{
  uint64_t Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  uint64_t v3 = MEMORY[0x1F4188790](Predicate);
  BOOL v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (uint64_t *)((char *)&v19 - v7);
  MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t result = MEMORY[0x1E4FBC870];
  uint64_t v20 = MEMORY[0x1E4FBC870];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v15 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    while (2)
    {
      sub_1A7383624(v14, (uint64_t)v11, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      sub_1A7383624((uint64_t)v11, (uint64_t)v8, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1A7383794(*v8, v8[1], v8[2], v8[3], v8[4], v8[5], *((unsigned char *)v8 + 48));
          goto LABEL_12;
        case 2u:
        case 5u:
          goto LABEL_11;
        case 3u:
          swift_bridgeObjectRelease();
LABEL_11:
          swift_bridgeObjectRelease();
          goto LABEL_12;
        case 4u:
        case 7u:
          sub_1A7383734((uint64_t)v8, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
          goto LABEL_12;
        case 9u:
        case 0xAu:
          uint64_t v17 = sub_1A7380E64(*v8);
          swift_bridgeObjectRelease();
          sub_1A738B1F8(v17);
          goto LABEL_5;
        default:
LABEL_12:
          sub_1A7383624((uint64_t)v11, (uint64_t)v5, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v16 = 4;
          switch(EnumCaseMultiPayload)
          {
            case 1:
              sub_1A7383794(*(void *)v5, *((void *)v5 + 1), *((void *)v5 + 2), *((void *)v5 + 3), *((void *)v5 + 4), *((void *)v5 + 5), v5[48]);
              uint64_t v16 = 32;
              break;
            case 2:
              swift_bridgeObjectRelease();
              uint64_t v16 = 1;
              break;
            case 3:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v16 = 64;
              break;
            case 4:
              sub_1A7383734((uint64_t)v5, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
              uint64_t v16 = 2;
              break;
            case 5:
              swift_bridgeObjectRelease();
              uint64_t v16 = 8;
              break;
            case 6:
              uint64_t v16 = 16;
              break;
            case 7:
              sub_1A7383734((uint64_t)v5, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
              uint64_t v16 = 256;
              break;
            case 8:
              uint64_t v16 = 128;
              break;
            case 9:
              swift_bridgeObjectRelease();
              uint64_t v16 = 512;
              break;
            case 10:
              swift_bridgeObjectRelease();
              uint64_t v16 = 1024;
              break;
            default:
              break;
          }
          sub_1A72E0068(&v19, v16);
LABEL_5:
          sub_1A7383734((uint64_t)v11, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
          v14 += v15;
          if (--v13) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t result = v20;
          break;
      }
      break;
    }
  }
  return result;
}

uint64_t Sequence<>.postFetchPredicateTypes.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700FE8);
  sub_1A7572900();
  return v1;
}

uint64_t sub_1A73812AC(uint64_t a1, uint64_t a2)
{
  uint64_t Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  MEMORY[0x1F4188790](Predicate);
  BOOL v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7383624(a2, (uint64_t)v5, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A7383794(*(void *)v5, *((void *)v5 + 1), *((void *)v5 + 2), *((void *)v5 + 3), *((void *)v5 + 4), *((void *)v5 + 5), v5[48]);
      goto LABEL_7;
    case 2u:
    case 5u:
      goto LABEL_6;
    case 3u:
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 4u:
    case 7u:
      sub_1A7383734((uint64_t)v5, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      goto LABEL_7;
    case 9u:
    case 0xAu:
      uint64_t v6 = sub_1A7380E64(*(void *)v5);
      swift_bridgeObjectRelease();
      return sub_1A738B1F8(v6);
    default:
LABEL_7:
      REMCustomSmartListFilterDescriptor.PostFetchPredicate.postFetchPredicateType.getter(&v9);
      return sub_1A72E0068(&v10, v9);
  }
}

uint64_t sub_1A7381448()
{
  uint64_t result = sub_1A72E7508((uint64_t)&unk_1EFC90548);
  qword_1E96F2318 = result;
  return result;
}

uint64_t static Set<>.typesIndescribableByNSPredicate.getter()
{
  return sub_1A73814E0(&qword_1E96F0758);
}

uint64_t sub_1A7381494()
{
  uint64_t result = sub_1A72E7508((uint64_t)&unk_1EFC90588);
  qword_1E96F2320 = result;
  return result;
}

uint64_t static Set<>.typesSupportedByCustomSmartList.getter()
{
  return sub_1A73814E0(&qword_1E96F0760);
}

uint64_t sub_1A73814E0(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

id REMCustomSmartListFilterDescriptor.FilterLists.alternateTargetList(for:defaultListID:)(void *a1, void *a2)
{
  uint64_t v6 = *v2;
  unint64_t v5 = v2[1];
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    if (!(v5 >> 62))
    {
      if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        return 0;
      }
      return sub_1A7381668(a1, v5, a2);
    }
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (!v10) {
      return 0;
    }
    return sub_1A7381668(a1, v5, a2);
  }
  swift_bridgeObjectRetain();
  if (!sub_1A75738D0()) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v8 = (id)MEMORY[0x1AD0CB800](0, v6);
    goto LABEL_6;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_13;
  }
  id v8 = *(id *)(v6 + 32);
LABEL_6:
  id v9 = v8;
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_1A7381668(void *a1, unint64_t a2, void *a3)
{
  v58[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1A7571BC0();
  unint64_t v54 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v55 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = v8;
  if (a3)
  {
    uint64_t v10 = v7;
    uint64_t v11 = (objc_class *)type metadata accessor for REMObjectID_Codable();
    id v12 = objc_allocWithZone(v11);
    id v13 = a3;
    id v14 = objc_msgSend(v13, sel_uuid);
    uint64_t v15 = v55;
    sub_1A7571BB0();

    uint64_t v16 = (void *)sub_1A7571B90();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v15, v10);
    id v17 = objc_msgSend(v13, sel_entityName);
    if (!v17)
    {
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      id v17 = (id)sub_1A75725E0();
      swift_bridgeObjectRelease();
    }
    v56.receiver = v12;
    v56.super_class = v11;
    id v18 = objc_msgSendSuper2(&v56, sel_initWithUUID_entityName_, v16, v17);

    char v19 = sub_1A73766B4((uint64_t)v18, a2);
    uint64_t v7 = v51;
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  id v20 = objc_msgSend(a1, sel_customContext);
  if (!v20)
  {
LABEL_27:
    uint64_t v40 = self;
    uint64_t v46 = (void *)sub_1A75725E0();
    objc_msgSend(v40, sel_internalErrorWithDebugDescription_, v46);

    swift_willThrow();
    return v40;
  }
  uint64_t v21 = v20;
  id v22 = objc_msgSend(v20, sel_account);

  v58[0] = 0;
  id v23 = objc_msgSend(v22, sel_fetchListsAndSublistsWithError_, v58);

  id v24 = v58[0];
  if (!v23)
  {
    id v43 = v58[0];
    uint64_t v44 = (void *)sub_1A7571850();

    swift_willThrow();
    goto LABEL_27;
  }
  sub_1A72BEFEC(0, &qword_1E96F1940);
  unint64_t v25 = sub_1A7572A10();
  id v26 = v24;

  if (!(v25 >> 62))
  {
    uint64_t v27 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v27)
    {
      unint64_t v49 = a2;
      uint64_t v50 = v3;
      v58[0] = (id)MEMORY[0x1E4FBC860];
      sub_1A75736F0();
      goto LABEL_10;
    }
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_1A75738D0();
  swift_bridgeObjectRelease();
  if (!v45)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  unint64_t v49 = a2;
  uint64_t v50 = v3;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1A75738D0();
  swift_bridgeObjectRelease();
  if (!v27)
  {
    swift_bridgeObjectRelease();
    id v41 = (id)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  v58[0] = (id)MEMORY[0x1E4FBC860];
  sub_1A75736F0();
  if (v27 < 0)
  {
    __break(1u);
    goto LABEL_26;
  }
LABEL_10:
  uint64_t v28 = 0;
  unint64_t v52 = v25 & 0xC000000000000001;
  uint64_t v53 = v27;
  uint64_t v29 = (void (**)(char *, uint64_t))(v54 + 8);
  unint64_t v54 = v25;
  do
  {
    if (v52) {
      id v30 = (id)MEMORY[0x1AD0CB800](v28, v25);
    }
    else {
      id v30 = *(id *)(v25 + 8 * v28 + 32);
    }
    uint64_t v31 = v30;
    id v32 = objc_msgSend(v30, sel_objectID);
    uint64_t v33 = (objc_class *)type metadata accessor for REMObjectID_Codable();
    id v34 = objc_allocWithZone(v33);
    id v35 = v32;
    id v36 = objc_msgSend(v35, sel_uuid);
    uint64_t v37 = v55;
    sub_1A7571BB0();

    uint64_t v38 = (void *)sub_1A7571B90();
    (*v29)(v37, v7);
    id v39 = objc_msgSend(v35, sel_entityName);
    if (!v39)
    {
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      id v39 = (id)sub_1A75725E0();
      uint64_t v7 = v51;
      swift_bridgeObjectRelease();
    }
    ++v28;
    v57.receiver = v34;
    v57.super_class = v33;
    objc_msgSendSuper2(&v57, sel_initWithUUID_entityName_, v38, v39);

    sub_1A75736C0();
    sub_1A7573700();
    sub_1A7573710();
    sub_1A75736D0();
    unint64_t v25 = v54;
  }
  while (v53 != v28);
  id v41 = v58[0];
  swift_bridgeObjectRelease();
LABEL_19:
  unint64_t v42 = v49;
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_1A73838B0((unint64_t)v41, v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v40) {
    goto LABEL_27;
  }
  return v40;
}

void sub_1A7381C0C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1A75738D0();
    swift_bridgeObjectRelease();
    sub_1A75740D0();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (!v3) {
      return;
    }
  }
  else
  {
    sub_1A75740D0();
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      MEMORY[0x1AD0CB800](i, a2);
      sub_1A75731A0();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    unint64_t v5 = (void **)(a2 + 32);
    do
    {
      uint64_t v6 = *v5++;
      id v7 = v6;
      sub_1A75731A0();

      --v3;
    }
    while (v3);
  }
}

uint64_t _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G4DateO13RelativeRangeV2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = (*((void *)a1 + 1) == *((void *)a2 + 1)) & ~(*a1 ^ *a2);
  if (a1[16] != a2[16]) {
    int v2 = 0;
  }
  return v2 & (a2[17] ^ a1[17] ^ 1u);
}

BOOL _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G8HashtagsO2eeoiySbAE_AEtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  int v2 = (void *)a1[1];
  unsigned __int8 v4 = *((unsigned char *)a1 + 16);
  unint64_t v6 = *a2;
  unint64_t v5 = (void *)a2[1];
  unsigned __int8 v7 = *((unsigned char *)a2 + 16);
  if (!*a1)
  {
    if (!v6)
    {
      sub_1A7360E88(0);
      sub_1A7360E88(0);
      return 1;
    }
    goto LABEL_12;
  }
  if (v3 == 1)
  {
    if (v6 == 1)
    {
      sub_1A7360E88(1uLL);
      sub_1A7360E88(1uLL);
      return v6;
    }
LABEL_12:
    sub_1A735D3B8(v6);
    sub_1A735D3B8(v3);
    sub_1A7360E88(v3);
    sub_1A7360E88(v6);
    return 0;
  }
  if (v6 < 2 || (sub_1A72DDEA4((void *)*a1, (void *)*a2) & 1) == 0) {
    goto LABEL_12;
  }
  char v8 = sub_1A72DDEA4(v2, v5);
  sub_1A735D3B8(v6);
  sub_1A735D3B8(v3);
  sub_1A7360E88(v3);
  sub_1A7360E88(v6);
  return (v8 & 1) != 0 && ((v7 ^ v4) & 1) == 0;
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(uint64_t a1)
{
  return sub_1A72E1CD8(a1, qword_1EB704408);
}

uint64_t _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G8LocationO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v7 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v8 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(uint64_t *)(a2 + 16);
  uint64_t v11 = *(uint64_t *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  int v14 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v52 = *(void *)(a1 + 16);
  uint64_t v53 = v6;
  if (!*(unsigned char *)(a1 + 48))
  {
    uint64_t v50 = *(void *)a1;
    uint64_t v51 = *(void *)(a1 + 8);
    if (!*(unsigned char *)(a2 + 48))
    {
      uint64_t v27 = *(void *)a2;
      sub_1A7383794(v3, v51, v52, v4, v6, v5, 0);
      sub_1A7383794(v27, v9, v10, v11, v13, v12, 0);
      return v3 == v27;
    }
LABEL_17:
    uint64_t v34 = v9;
    uint64_t v35 = v9;
    uint64_t v36 = v8;
    uint64_t v37 = v4;
    uint64_t v38 = v13;
    uint64_t v39 = v13;
    uint64_t v40 = v5;
    sub_1A7383858(v8, v34, v10, v11, v38, v12, v14);
    sub_1A7383794(v50, v51, v52, v37, v53, v40, v7);
    sub_1A7383794(v36, v35, v10, v11, v39, v12, v14);
    return 0;
  }
  if (v7 != 1)
  {
    uint64_t v50 = *(void *)a1;
    uint64_t v51 = *(void *)(a1 + 8);
    if (*(void *)(a1 + 16) | v2 | v3 | v4 | v6 | v5)
    {
      if (v14 == 2 && v8 == 1 && !(v10 | v9 | v11 | v13 | v12))
      {
        uint64_t v26 = 1;
        sub_1A7383794(1, 0, 0, v4, v6, v5, 2);
        sub_1A7383794(1, 0, 0, v11, v13, v12, 2);
        return v26;
      }
    }
    else if (v14 == 2 && !(v10 | v9 | v8 | v11 | v13 | v12))
    {
      sub_1A7383794(0, 0, 0, v4, v6, v5, 2);
      sub_1A7383794(0, 0, 0, v11, v13, v12, 2);
      return 1;
    }
    goto LABEL_17;
  }
  if (v14 != 1)
  {
    uint64_t v50 = *(void *)a1;
    uint64_t v51 = *(void *)(a1 + 8);
    uint64_t v28 = *(void *)(a2 + 24);
    uint64_t v29 = *(void *)(a2 + 32);
    uint64_t v30 = *(void *)(a1 + 40);
    uint64_t v31 = *(void *)(a1 + 24);
    uint64_t v32 = *(void *)(a2 + 8);
    uint64_t v33 = *(void *)a2;
    swift_bridgeObjectRetain();
    uint64_t v8 = v33;
    uint64_t v9 = v32;
    uint64_t v4 = v31;
    uint64_t v5 = v30;
    uint64_t v13 = v29;
    uint64_t v11 = v28;
    goto LABEL_17;
  }
  double v15 = *(double *)(a1 + 16);
  double v16 = *(double *)(a1 + 24);
  double v17 = *(double *)(a1 + 32);
  double v18 = *(double *)(a2 + 32);
  if (v3 == v8 && v2 == v9)
  {
    uint64_t v19 = *(void *)(a1 + 16);
    uint64_t v20 = *(void *)(a1 + 24);
    uint64_t v21 = *(void *)(a1 + 40);
    sub_1A7383858(v3, v2, v10, v11, v13, v12, 1);
    sub_1A7383858(v3, v2, v19, v20, v6, v21, 1);
    uint64_t v22 = v20;
    uint64_t v23 = v13;
    uint64_t v24 = v21;
    sub_1A7383794(v3, v2, v19, v22, v6, v21, 1);
    uint64_t v25 = v12;
    sub_1A7383794(v3, v2, v10, v11, v23, v12, 1);
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v42 = *(void *)a2;
    uint64_t v48 = *(void *)a2;
    uint64_t v43 = *(void *)(a1 + 24);
    uint64_t v44 = *(void *)(a1 + 40);
    char v49 = sub_1A7573DB0();
    sub_1A7383858(v42, v9, v10, v11, v13, v12, 1);
    sub_1A7383858(v3, v2, v52, v43, v53, v44, 1);
    uint64_t v45 = v3;
    uint64_t v46 = v13;
    uint64_t v24 = v44;
    sub_1A7383794(v45, v2, v52, v43, v53, v44, 1);
    uint64_t v47 = v9;
    uint64_t v25 = v12;
    sub_1A7383794(v48, v47, v10, v11, v46, v12, 1);
    uint64_t v26 = 0;
    if ((v49 & 1) == 0) {
      return v26;
    }
  }
  if (v15 == *(double *)&v10 && v16 == *(double *)&v11 && v17 == v18) {
    return v24 == v25;
  }
  return v26;
}

uint64_t _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC18PostFetchPredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a2;
  int v3 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 8) != 1)
    {
      if (v3 != 2 || v2 != 0) {
        goto LABEL_11;
      }
      swift_bridgeObjectRelease();
      char v5 = 1;
LABEL_13:
      swift_bridgeObjectRelease();
      return v5 & 1;
    }
    if (v3 != 1) {
      goto LABEL_11;
    }
LABEL_6:
    swift_bridgeObjectRetain();
    uint64_t v4 = swift_bridgeObjectRetain();
    char v5 = sub_1A72DCE24(v4, v2);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (!*(unsigned char *)(a2 + 8)) {
    goto LABEL_6;
  }
LABEL_11:
  char v5 = 0;
  return v5 & 1;
}

uint64_t _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC18PostFetchPredicateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v93 = (char *)a1;
  unint64_t v94 = a2;
  uint64_t v87 = sub_1A7571BC0();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v84 = (char *)&v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v85 = (uint64_t)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  uint64_t v6 = MEMORY[0x1F4188790](Predicate);
  uint64_t v89 = (uint64_t *)((char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v92 = (uint64_t *)((char *)&v84 - v9);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v88 = (char *)&v84 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v90 = (uint64_t)&v84 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  double v16 = (char *)&v84 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (uint64_t *)((char *)&v84 - v18);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v91 = (uint64_t)&v84 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (uint64_t *)((char *)&v84 - v23);
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  uint64_t v27 = (char *)&v84 - v26;
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  uint64_t v30 = (char *)&v84 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (unsigned __int8 *)&v84 - v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2470);
  uint64_t v34 = MEMORY[0x1F4188790](v33 - 8);
  uint64_t v36 = (char *)&v84 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = (uint64_t)&v36[*(int *)(v34 + 56)];
  sub_1A7383624((uint64_t)v93, (uint64_t)v36, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
  uint64_t v38 = (uint64_t)v94;
  unint64_t v94 = (uint64_t *)v37;
  sub_1A7383624(v38, v37, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A7383624((uint64_t)v36, (uint64_t)v30, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      uint64_t v53 = *(void *)v30;
      uint64_t v52 = *((void *)v30 + 1);
      uint64_t v55 = *((void *)v30 + 2);
      uint64_t v54 = *((void *)v30 + 3);
      uint64_t v57 = *((void *)v30 + 4);
      uint64_t v56 = *((void *)v30 + 5);
      char v58 = v30[48];
      uint64_t v59 = v94;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_1A7383794(v53, v52, v55, v54, v57, v56, v58);
        goto LABEL_35;
      }
      uint64_t v93 = v36;
      uint64_t v60 = *v59;
      uint64_t v61 = v59[1];
      uint64_t v62 = v59[2];
      uint64_t v91 = v59[3];
      uint64_t v92 = (uint64_t *)v62;
      uint64_t v63 = v59[4];
      uint64_t v89 = (uint64_t *)v59[5];
      uint64_t v90 = v63;
      LODWORD(v94) = *((unsigned __int8 *)v59 + 48);
      uint64_t v102 = v53;
      uint64_t v103 = v52;
      uint64_t v104 = v55;
      uint64_t v105 = v54;
      uint64_t v106 = v57;
      uint64_t v107 = v56;
      char v108 = v58;
      uint64_t v95 = v60;
      uint64_t v96 = v61;
      uint64_t v97 = v62;
      uint64_t v98 = v91;
      uint64_t v99 = v63;
      uint64_t v100 = (uint64_t)v89;
      char v101 = (char)v94;
      char PredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0 = _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G8LocationO2eeoiySbAE_AEtFZ_0((uint64_t)&v102, (uint64_t)&v95);
      sub_1A7383794(v60, v61, (uint64_t)v92, v91, v90, (uint64_t)v89, (char)v94);
      sub_1A7383794(v53, v52, v55, v54, v57, v56, v58);
      sub_1A7383734((uint64_t)v93, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      return PredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0 & 1;
    case 2u:
      sub_1A7383624((uint64_t)v36, (uint64_t)v27, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      uint64_t v41 = *(void *)v27;
      uint64_t v42 = v94;
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_34;
      }
      char v43 = v27[8];
      uint64_t v44 = *v42;
      char v45 = *((unsigned char *)v42 + 8);
      uint64_t v102 = v41;
      LOBYTE(v103) = v43;
      uint64_t v95 = v44;
      LOBYTE(v96) = v45;
      char PredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0 = _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC18PostFetchPredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0((uint64_t)&v102, (uint64_t)&v95);
      swift_bridgeObjectRelease();
      goto LABEL_28;
    case 3u:
      sub_1A7383624((uint64_t)v36, (uint64_t)v24, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      uint64_t v64 = *v24;
      uint64_t v65 = v24[1];
      uint64_t v66 = v94;
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        swift_bridgeObjectRelease();
LABEL_34:
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
      uint64_t v67 = v66[1];
      if (sub_1A72DDC34(v64, *v66))
      {
        char v68 = sub_1A72DDC34(v65, v67);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v68)
        {
          sub_1A7383734((uint64_t)v36, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
          char PredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0 = 1;
          return PredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0 & 1;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1A7383734((uint64_t)v36, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      goto LABEL_36;
    case 4u:
      uint64_t v46 = v91;
      sub_1A7383624((uint64_t)v36, v91, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      uint64_t v47 = (uint64_t)v94;
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v48 = v85;
        sub_1A73837CC(v47, v85, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
        char PredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0 = _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G4DateO2eeoiySbAE_AEtFZ_0(v46, v48);
        sub_1A7383734(v48, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
        sub_1A7383734(v46, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
        goto LABEL_29;
      }
      sub_1A7383734(v46, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      goto LABEL_35;
    case 5u:
      sub_1A7383624((uint64_t)v36, (uint64_t)v19, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      uint64_t v69 = *v19;
      uint64_t v70 = v94;
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_34;
      }
      char v71 = sub_1A72DD120(v69, *v70);
      goto LABEL_27;
    case 6u:
      sub_1A7383624((uint64_t)v36, (uint64_t)v16, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      uint64_t v72 = v94;
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_35;
      }
      char v73 = *v16;
      goto LABEL_24;
    case 7u:
      uint64_t v74 = v90;
      sub_1A7383624((uint64_t)v36, v90, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      uint64_t v75 = v94;
      if (swift_getEnumCaseMultiPayload() == 7)
      {
        uint64_t v76 = v86;
        uint64_t v77 = v84;
        uint64_t v78 = v87;
        (*(void (**)(char *, uint64_t *, uint64_t))(v86 + 32))(v84, v75, v87);
        char PredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0 = sub_1A7571BA0();
        uint64_t v79 = *(void (**)(char *, uint64_t))(v76 + 8);
        v79(v77, v78);
        v79((char *)v74, v78);
LABEL_29:
        sub_1A7383734((uint64_t)v36, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v74, v87);
LABEL_35:
        sub_1A72CB560((uint64_t)v36, &qword_1E96F2470);
LABEL_36:
        char PredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0 = 0;
      }
      return PredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0 & 1;
    case 8u:
      uint64_t v80 = v88;
      sub_1A7383624((uint64_t)v36, (uint64_t)v88, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      uint64_t v72 = v94;
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_35;
      }
      char v73 = *v80;
LABEL_24:
      char v81 = v73 ^ *(unsigned char *)v72;
      sub_1A7383734((uint64_t)v36, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      char PredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0 = v81 ^ 1;
      return PredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0 & 1;
    case 9u:
      char v49 = v92;
      sub_1A7383624((uint64_t)v36, (uint64_t)v92, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      uint64_t v50 = *v49;
      uint64_t v51 = v94;
      if (swift_getEnumCaseMultiPayload() != 9) {
        goto LABEL_34;
      }
      goto LABEL_26;
    case 0xAu:
      uint64_t v82 = v89;
      sub_1A7383624((uint64_t)v36, (uint64_t)v89, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      uint64_t v50 = *v82;
      uint64_t v51 = v94;
      if (swift_getEnumCaseMultiPayload() != 10) {
        goto LABEL_34;
      }
LABEL_26:
      char v71 = sub_1A72DDAD4(v50, *v51);
LABEL_27:
      char PredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0 = v71;
      swift_bridgeObjectRelease();
LABEL_28:
      swift_bridgeObjectRelease();
      goto LABEL_29;
    default:
      sub_1A7383624((uint64_t)v36, (uint64_t)v32, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      uint64_t v39 = v94;
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_35;
      }
      char PredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0 = *v32 == *(unsigned __int8 *)v39;
      goto LABEL_29;
  }
}

uint64_t _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G4DateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  uint64_t v2 = sub_1A7571B60();
  uint64_t v65 = *(void *)(v2 - 8);
  uint64_t v66 = v2;
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v59 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v64 = (char *)&v57 - v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v63 = (char *)&v57 - v7;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
  uint64_t v8 = MEMORY[0x1F4188790](v58);
  uint64_t v60 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v61 = (uint64_t)&v57 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v62 = (uint64_t)&v57 - v12;
  uint64_t v13 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  double v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v57 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v57 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v25 = (char *)&v57 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  uint64_t v28 = (char *)&v57 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v57 - v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2478);
  uint64_t v32 = MEMORY[0x1F4188790](v31 - 8);
  uint64_t v34 = (char *)&v57 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = (uint64_t)&v34[*(int *)(v32 + 56)];
  sub_1A7383624(v67, (uint64_t)v34, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
  sub_1A7383624(v68, v35, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A7383624((uint64_t)v34, (uint64_t)v28, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_1A72CB560((uint64_t)v28, (uint64_t *)&unk_1EB7058C8);
        goto LABEL_27;
      }
      uint64_t v47 = v62;
      sub_1A734E5D8(v35, v62, (uint64_t *)&unk_1EB7058C8);
      sub_1A73836EC((unint64_t *)&unk_1E96F2480, MEMORY[0x1E4F27928]);
      char v48 = sub_1A75725C0();
      uint64_t v49 = v61;
      sub_1A72BF1E8((uint64_t)v28, v61, (uint64_t *)&unk_1EB7058C8);
      uint64_t v50 = v60;
      sub_1A72BF1E8(v47, v60, (uint64_t *)&unk_1EB7058C8);
      if (v48)
      {
        char v51 = sub_1A75725C0();
        sub_1A72CB560(v50, (uint64_t *)&unk_1EB7058C8);
        sub_1A72CB560(v49, (uint64_t *)&unk_1EB7058C8);
        sub_1A72CB560(v47, (uint64_t *)&unk_1EB7058C8);
        sub_1A72CB560((uint64_t)v28, (uint64_t *)&unk_1EB7058C8);
        if (v51) {
          goto LABEL_22;
        }
      }
      else
      {
        sub_1A72CB560(v50, (uint64_t *)&unk_1EB7058C8);
        sub_1A72CB560(v49, (uint64_t *)&unk_1EB7058C8);
        sub_1A72CB560(v47, (uint64_t *)&unk_1EB7058C8);
        sub_1A72CB560((uint64_t)v28, (uint64_t *)&unk_1EB7058C8);
      }
      sub_1A7383734((uint64_t)v34, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      goto LABEL_28;
    case 2u:
      sub_1A7383624((uint64_t)v34, (uint64_t)v25, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_27;
      }
      char v36 = *v25 ^ *(unsigned char *)v35 | (*((void *)v25 + 1) != *(void *)(v35 + 8)) | (v25[16] != *(unsigned char *)(v35 + 16)) | v25[17] ^ *(unsigned char *)(v35 + 17);
      goto LABEL_6;
    case 3u:
      sub_1A7383624((uint64_t)v34, (uint64_t)v22, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v38 = v65;
        uint64_t v39 = v63;
        uint64_t v40 = v35;
        uint64_t v41 = v66;
        (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v63, v40, v66);
        char v37 = sub_1A7571B10();
        uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
        v42(v39, v41);
        char v43 = v22;
        goto LABEL_11;
      }
      (*(void (**)(char *, uint64_t))(v65 + 8))(v22, v66);
      goto LABEL_27;
    case 4u:
      sub_1A7383624((uint64_t)v34, (uint64_t)v19, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        (*(void (**)(char *, uint64_t))(v65 + 8))(v19, v66);
        goto LABEL_27;
      }
      char v45 = v64;
      uint64_t v44 = v65;
      uint64_t v46 = v35;
      uint64_t v41 = v66;
      (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v64, v46, v66);
      char v37 = sub_1A7571B10();
      uint64_t v42 = *(void (**)(char *, uint64_t))(v44 + 8);
      v42(v45, v41);
      char v43 = v19;
LABEL_11:
      v42(v43, v41);
      goto LABEL_20;
    case 5u:
      sub_1A7383624((uint64_t)v34, (uint64_t)v16, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v53 = v65;
        uint64_t v52 = v66;
        uint64_t v54 = v59;
        (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v59, v35, v66);
        char v37 = sub_1A7571B10();
        uint64_t v55 = *(void (**)(char *, uint64_t))(v53 + 8);
        v55(v54, v52);
        v55(v16, v52);
LABEL_20:
        sub_1A7383734((uint64_t)v34, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v65 + 8))(v16, v66);
LABEL_27:
        sub_1A72CB560((uint64_t)v34, &qword_1E96F2478);
LABEL_28:
        char v37 = 0;
      }
      return v37 & 1;
    case 6u:
      if (swift_getEnumCaseMultiPayload() == 6) {
        goto LABEL_22;
      }
      goto LABEL_27;
    case 7u:
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_27;
      }
LABEL_22:
      sub_1A7383734((uint64_t)v34, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      char v37 = 1;
      return v37 & 1;
    default:
      sub_1A7383624((uint64_t)v34, (uint64_t)v30, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_27;
      }
      char v36 = *v30 ^ *(unsigned char *)v35;
LABEL_6:
      sub_1A7383734((uint64_t)v34, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      char v37 = v36 ^ 1;
      return v37 & 1;
  }
}

uint64_t sub_1A7383624(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2428);
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(uint64_t a1)
{
  return sub_1A72E1CD8(a1, qword_1EB700248);
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(uint64_t a1)
{
  return sub_1A72E1CD8(a1, qword_1EB700308);
}

uint64_t sub_1A73836EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A7383734(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A7383794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(uint64_t a1)
{
  return sub_1A72E1CD8(a1, qword_1E96F2438);
}

uint64_t sub_1A73837CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1A7383834(unint64_t result)
{
  if (result != 2) {
    return sub_1A735D3B8(result);
  }
  return result;
}

uint64_t sub_1A7383844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != -1) {
    return sub_1A7383858(a1, a2, a3, a4, a5, a6, a7);
  }
  return a1;
}

uint64_t sub_1A7383858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A7383870(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1A73838B0(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_37;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1A75738D0())
  {
    uint64_t v5 = 0;
    uint64_t v20 = v3 + 32;
    uint64_t v21 = v3;
    unint64_t v23 = a2 & 0xC000000000000001;
    unint64_t v22 = v3 & 0xC000000000000001;
    uint64_t v19 = v4;
LABEL_4:
    while (1)
    {
      id v6 = v22 ? (id)MEMORY[0x1AD0CB800](v5, v3) : *(id *)(v20 + 8 * v5);
      uint64_t v7 = v6;
      if (__OFADD__(v5++, 1)) {
        break;
      }
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_1A75738D0();
        if (!v9) {
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v9) {
          goto LABEL_32;
        }
      }
      if (v23) {
        id v10 = (id)MEMORY[0x1AD0CB800](0, a2);
      }
      else {
        id v10 = *(id *)(a2 + 32);
      }
      uint64_t v11 = v10;
      type metadata accessor for REMObjectID_Codable();
      char v12 = sub_1A7573190();

      if ((v12 & 1) == 0)
      {
        if (v9 == 1)
        {
LABEL_32:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7;
        }
        if (v23)
        {
          uint64_t v13 = 1;
          while (1)
          {
            MEMORY[0x1AD0CB800](v13, a2);
            uint64_t v3 = v13 + 1;
            if (__OFADD__(v13, 1)) {
              break;
            }
            char v14 = sub_1A7573190();
            swift_unknownObjectRelease();
            if (v14) {
              goto LABEL_29;
            }
            ++v13;
            if (v3 == v9) {
              goto LABEL_32;
            }
          }
          __break(1u);
        }
        else
        {
          uint64_t v15 = 5;
          while (1)
          {
            uint64_t v3 = v15 - 3;
            if (__OFADD__(v15 - 4, 1)) {
              break;
            }
            id v16 = *(id *)(a2 + 8 * v15);
            char v17 = sub_1A7573190();

            if (v17)
            {
LABEL_29:

              swift_bridgeObjectRelease();
              uint64_t v3 = v21;
              uint64_t v4 = v19;
              if (v5 != v19) {
                goto LABEL_4;
              }
              goto LABEL_38;
            }
            ++v15;
            if (v3 == v9) {
              goto LABEL_32;
            }
          }
        }
        __break(1u);
        break;
      }

      swift_bridgeObjectRelease();
      if (v5 == v4) {
        goto LABEL_38;
      }
    }
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
  }
LABEL_38:
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1A7383B48(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v4 - 8);
  int v33 = *a2;
  unint64_t v36 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  uint64_t v38 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  int v37 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v6;
  sub_1A72BF1E8(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v6, (uint64_t *)&unk_1E96F2370);
  int v7 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  int v31 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  int v32 = v7;
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  uint64_t v28 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  uint64_t v29 = v9;
  uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  uint64_t v13 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  uint64_t v14 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
  uint64_t v27 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  uint64_t v15 = v27;
  uint64_t v30 = v14;
  char v16 = *(unsigned char *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  Class v35 = (Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  char v17 = objc_allocWithZone(v35);
  v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v33;
  uint64_t v18 = &v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  uint64_t v19 = v38;
  *(void *)uint64_t v18 = v36;
  *((void *)v18 + 1) = v19;
  v18[16] = v37;
  sub_1A72BF1E8((uint64_t)v6, (uint64_t)&v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1E96F2370);
  v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v32;
  *(void *)&v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v8;
  v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v31;
  uint64_t v20 = &v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  uint64_t v21 = v28;
  uint64_t v22 = v29;
  *(void *)uint64_t v20 = v29;
  *((void *)v20 + 1) = v10;
  *((void *)v20 + 2) = v11;
  *((void *)v20 + 3) = v21;
  *((void *)v20 + 4) = v12;
  *((void *)v20 + 5) = v13;
  v20[48] = v16;
  unint64_t v23 = (uint64_t *)&v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  *unint64_t v23 = v15;
  v23[1] = v30;
  sub_1A7383834(v36);
  swift_bridgeObjectRetain();
  sub_1A7383844(v22, v10, v11, v21, v12, v13, v16);
  sub_1A7383870(v27);
  v39.receiver = v17;
  v39.super_class = v35;
  id v24 = objc_msgSendSuper2(&v39, sel_init);
  sub_1A72CB560((uint64_t)v34, (uint64_t *)&unk_1E96F2370);
  return v24;
}

id sub_1A7383DC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a2;
  uint64_t v31 = a2[1];
  uint64_t v32 = v7;
  int v30 = *((unsigned __int8 *)a2 + 16);
  HIDWORD(v24) = *(unsigned __int8 *)(a1
                                    + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
  uint64_t v29 = v6;
  sub_1A72BF1E8(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v6, (uint64_t *)&unk_1E96F2370);
  int v28 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
  uint64_t v27 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  int v26 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  uint64_t v13 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  uint64_t v14 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  uint64_t v25 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
  LOBYTE(a1) = *(unsigned char *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  Class v33 = (Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  uint64_t v15 = objc_allocWithZone(v33);
  v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = BYTE4(v24);
  char v16 = &v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  uint64_t v17 = v31;
  *(void *)char v16 = v32;
  *((void *)v16 + 1) = v17;
  unsigned char v16[16] = v30;
  sub_1A72BF1E8((uint64_t)v6, (uint64_t)&v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1E96F2370);
  v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v28;
  *(void *)&v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v27;
  v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v26;
  uint64_t v18 = &v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  *(void *)uint64_t v18 = v8;
  *((void *)v18 + 1) = v9;
  *((void *)v18 + 2) = v10;
  *((void *)v18 + 3) = v11;
  *((void *)v18 + 4) = v12;
  *((void *)v18 + 5) = v13;
  uint64_t v19 = v13;
  v18[48] = a1;
  uint64_t v20 = (uint64_t *)&v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  uint64_t v21 = v25;
  uint64_t *v20 = v14;
  v20[1] = v21;
  swift_bridgeObjectRetain();
  sub_1A7383844(v8, v9, v10, v11, v12, v19, a1);
  sub_1A7383870(v14);
  v34.receiver = v15;
  v34.super_class = v33;
  id v22 = objc_msgSendSuper2(&v34, sel_init);
  sub_1A72CB560((uint64_t)v29, (uint64_t *)&unk_1E96F2370);
  return v22;
}

id sub_1A7384020(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v4 - 8);
  int v31 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
  unint64_t v36 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  uint64_t v38 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  int v37 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16);
  uint64_t v6 = a2;
  uint64_t v7 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class v33 = v7;
  sub_1A72BF1E8(v6, (uint64_t)v7, (uint64_t *)&unk_1E96F2370);
  int v32 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  int v30 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  uint64_t v27 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  uint64_t v28 = v9;
  uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  uint64_t v13 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  uint64_t v14 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
  uint64_t v26 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  uint64_t v15 = v26;
  uint64_t v29 = v14;
  char v16 = *(unsigned char *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  Class v34 = (Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  uint64_t v17 = objc_allocWithZone(v34);
  v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v31;
  uint64_t v18 = &v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  uint64_t v19 = v38;
  *(void *)uint64_t v18 = v36;
  *((void *)v18 + 1) = v19;
  v18[16] = v37;
  sub_1A72BF1E8((uint64_t)v7, (uint64_t)&v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1E96F2370);
  v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v32;
  *(void *)&v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v8;
  v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v30;
  uint64_t v20 = &v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  uint64_t v21 = v27;
  uint64_t v22 = v28;
  *(void *)uint64_t v20 = v28;
  *((void *)v20 + 1) = v10;
  *((void *)v20 + 2) = v11;
  *((void *)v20 + 3) = v21;
  *((void *)v20 + 4) = v12;
  *((void *)v20 + 5) = v13;
  v20[48] = v16;
  unint64_t v23 = (uint64_t *)&v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  *unint64_t v23 = v15;
  v23[1] = v29;
  sub_1A7383834(v36);
  swift_bridgeObjectRetain();
  sub_1A7383844(v22, v10, v11, v21, v12, v13, v16);
  sub_1A7383870(v26);
  v39.receiver = v17;
  v39.super_class = v34;
  id v24 = objc_msgSendSuper2(&v39, sel_init);
  sub_1A72CB560((uint64_t)v33, (uint64_t *)&unk_1E96F2370);
  sub_1A72CB560(v35, (uint64_t *)&unk_1E96F2370);
  return v24;
}

id sub_1A73842B4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v31 = *a2;
  int v28 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
  unint64_t v32 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  uint64_t v34 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  int v33 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16);
  uint64_t v29 = v6;
  sub_1A72BF1E8(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v6, (uint64_t *)&unk_1E96F2370);
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  int v27 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  uint64_t v13 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  uint64_t v14 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
  uint64_t v35 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  uint64_t v25 = v8;
  uint64_t v26 = v14;
  char v15 = *(unsigned char *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  Class v30 = (Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  char v16 = objc_allocWithZone(v30);
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v28;
  uint64_t v17 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  uint64_t v18 = v34;
  *(void *)uint64_t v17 = v32;
  *((void *)v17 + 1) = v18;
  v17[16] = v33;
  sub_1A72BF1E8((uint64_t)v6, (uint64_t)&v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1E96F2370);
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v31;
  *(void *)&v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v7;
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v27;
  uint64_t v19 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  uint64_t v20 = v25;
  uint64_t v21 = v26;
  *(void *)uint64_t v19 = v25;
  *((void *)v19 + 1) = v9;
  *((void *)v19 + 2) = v11;
  *((void *)v19 + 3) = v10;
  *((void *)v19 + 4) = v12;
  *((void *)v19 + 5) = v13;
  v19[48] = v15;
  uint64_t v22 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  *uint64_t v22 = v35;
  v22[1] = v21;
  sub_1A7383834(v32);
  swift_bridgeObjectRetain();
  sub_1A7383844(v20, v9, v11, v10, v12, v13, v15);
  sub_1A7383870(v35);
  v36.receiver = v16;
  v36.super_class = v30;
  id v23 = objc_msgSendSuper2(&v36, sel_init);
  sub_1A72CB560((uint64_t)v29, (uint64_t *)&unk_1E96F2370);
  return v23;
}

id sub_1A7384524(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v31 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
  unint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  uint64_t v35 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  unint64_t v36 = v6;
  char v7 = *(unsigned char *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16);
  unint64_t v32 = v5;
  sub_1A72BF1E8(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v5, (uint64_t *)&unk_1E96F2370);
  int v26 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
  int v30 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  uint64_t v27 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  uint64_t v28 = v8;
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  uint64_t v13 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
  uint64_t v29 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  unsigned __int8 v14 = *(unsigned char *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  int v25 = v14;
  Class v33 = (Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  char v15 = objc_allocWithZone(v33);
  v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v31;
  char v16 = &v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  uint64_t v17 = v35;
  *(void *)char v16 = v36;
  *((void *)v16 + 1) = v17;
  unsigned char v16[16] = v7;
  sub_1A72BF1E8((uint64_t)v5, (uint64_t)&v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1E96F2370);
  v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v26;
  *(void *)&v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v34;
  v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v30;
  uint64_t v18 = &v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  uint64_t v20 = v27;
  uint64_t v19 = v28;
  *(void *)uint64_t v18 = v9;
  *((void *)v18 + 1) = v19;
  *((void *)v18 + 2) = v10;
  *((void *)v18 + 3) = v20;
  *((void *)v18 + 4) = v11;
  *((void *)v18 + 5) = v12;
  v18[48] = v14;
  uint64_t v21 = (uint64_t *)&v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  uint64_t v22 = v29;
  *uint64_t v21 = v29;
  v21[1] = v13;
  sub_1A7383834(v36);
  sub_1A7383844(v9, v19, v10, v20, v11, v12, v25);
  sub_1A7383870(v22);
  v37.receiver = v15;
  v37.super_class = v33;
  id v23 = objc_msgSendSuper2(&v37, sel_init);
  sub_1A72CB560((uint64_t)v32, (uint64_t *)&unk_1E96F2370);
  return v23;
}

id sub_1A7384784(uint64_t a1, int a2)
{
  int v40 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v37 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  unint64_t v30 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  unint64_t v6 = v30;
  unsigned __int8 v8 = *(unsigned char *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16);
  int v29 = v8;
  uint64_t v38 = v5;
  sub_1A72BF1E8(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v5, (uint64_t *)&unk_1E96F2370);
  int v31 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  uint64_t v33 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  uint64_t v34 = v12;
  uint64_t v13 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  uint64_t v32 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  uint64_t v28 = v13;
  uint64_t v14 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  uint64_t v35 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
  uint64_t v36 = v14;
  unsigned __int8 v15 = *(unsigned char *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  HIDWORD(v27) = v15;
  Class v39 = (Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  char v16 = objc_allocWithZone(v39);
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v37;
  uint64_t v17 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  *(void *)uint64_t v17 = v6;
  *((void *)v17 + 1) = v7;
  v17[16] = v8;
  sub_1A72BF1E8((uint64_t)v5, (uint64_t)&v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1E96F2370);
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v31;
  *(void *)&v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v9;
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v40;
  uint64_t v18 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  *(void *)uint64_t v18 = v11;
  *((void *)v18 + 1) = v10;
  uint64_t v19 = v33;
  uint64_t v20 = v34;
  *((void *)v18 + 2) = v34;
  *((void *)v18 + 3) = v19;
  uint64_t v21 = v32;
  *((void *)v18 + 4) = v32;
  *((void *)v18 + 5) = v13;
  v18[48] = v15;
  uint64_t v22 = (uint64_t *)&v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  uint64_t v24 = v35;
  uint64_t v23 = v36;
  *uint64_t v22 = v36;
  v22[1] = v24;
  sub_1A7383834(v30);
  swift_bridgeObjectRetain();
  sub_1A7383844(v11, v10, v20, v19, v21, v28, SBYTE4(v27));
  sub_1A7383870(v23);
  v41.receiver = v16;
  v41.super_class = v39;
  id v25 = objc_msgSendSuper2(&v41, sel_init);
  sub_1A72CB560((uint64_t)v38, (uint64_t *)&unk_1E96F2370);
  return v25;
}

id sub_1A73849F0(uint64_t a1, long long *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *a2;
  long long v31 = a2[1];
  long long v32 = v7;
  uint64_t v8 = *((void *)a2 + 4);
  uint64_t v29 = *((void *)a2 + 5);
  uint64_t v30 = v8;
  LODWORD(v8) = *((unsigned __int8 *)a2 + 48);
  int v27 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
  int v28 = v8;
  unint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  char v11 = *(unsigned char *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16);
  sub_1A72BF1E8(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v6, (uint64_t *)&unk_1E96F2370);
  HIDWORD(v26) = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
  uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  char v13 = *(unsigned char *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  uint64_t v14 = a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists;
  uint64_t v15 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  uint64_t v16 = *(void *)(v14 + 8);
  uint64_t v17 = (objc_class *)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  uint64_t v18 = objc_allocWithZone(v17);
  v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v27;
  uint64_t v19 = &v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  *(void *)uint64_t v19 = v9;
  *((void *)v19 + 1) = v10;
  v19[16] = v11;
  sub_1A72BF1E8((uint64_t)v6, (uint64_t)&v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1E96F2370);
  v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = BYTE4(v26);
  *(void *)&v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v12;
  v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v13;
  uint64_t v20 = &v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  long long v21 = v31;
  *(_OWORD *)uint64_t v20 = v32;
  *((_OWORD *)v20 + 1) = v21;
  uint64_t v22 = v29;
  *((void *)v20 + 4) = v30;
  *((void *)v20 + 5) = v22;
  v20[48] = v28;
  uint64_t v23 = (uint64_t *)&v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  *uint64_t v23 = v15;
  v23[1] = v16;
  sub_1A7383834(v9);
  swift_bridgeObjectRetain();
  sub_1A7383870(v15);
  v33.receiver = v18;
  v33.super_class = v17;
  id v24 = objc_msgSendSuper2(&v33, sel_init);
  sub_1A72CB560((uint64_t)v6, (uint64_t *)&unk_1E96F2370);
  return v24;
}

unint64_t sub_1A7384C20(unint64_t result)
{
  if (result != 2) {
    return sub_1A7360E88(result);
  }
  return result;
}

uint64_t sub_1A7384C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != -1) {
    return sub_1A7383794(a1, a2, a3, a4, a5, a6, a7);
  }
  return a1;
}

uint64_t sub_1A7384C58(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A7384C98()
{
  sub_1A7383794(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));

  return swift_deallocObject();
}

uint64_t sub_1A7384CDC()
{
  return REMCustomSmartListFilterDescriptor.PostFetchPredicate.evaluate(with:)(*(void *)(v0 + 16)) & 1;
}

unint64_t sub_1A7384D18()
{
  unint64_t result = qword_1E96F23B0;
  if (!qword_1E96F23B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F23B0);
  }
  return result;
}

unint64_t sub_1A7384D70()
{
  unint64_t result = qword_1E96F23B8;
  if (!qword_1E96F23B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F23B8);
  }
  return result;
}

unint64_t sub_1A7384DC8()
{
  unint64_t result = qword_1E96F23C0;
  if (!qword_1E96F23C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F23C0);
  }
  return result;
}

unint64_t sub_1A7384E20()
{
  unint64_t result = qword_1E96F23C8;
  if (!qword_1E96F23C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F23C8);
  }
  return result;
}

unint64_t sub_1A7384E78()
{
  unint64_t result = qword_1E96F23D0;
  if (!qword_1E96F23D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F23D0);
  }
  return result;
}

uint64_t sub_1A7384ECC()
{
  return sub_1A73836EC(&qword_1E96F23D8, (void (*)(uint64_t))type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
}

unint64_t sub_1A7384F18()
{
  unint64_t result = qword_1E96F23E0;
  if (!qword_1E96F23E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F23E0);
  }
  return result;
}

unint64_t sub_1A7384F70()
{
  unint64_t result = qword_1E96F23E8;
  if (!qword_1E96F23E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F23E8);
  }
  return result;
}

unint64_t sub_1A7384FC8()
{
  unint64_t result = qword_1E96F23F0;
  if (!qword_1E96F23F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F23F0);
  }
  return result;
}

unint64_t sub_1A7385020()
{
  unint64_t result = qword_1E96F23F8;
  if (!qword_1E96F23F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F23F8);
  }
  return result;
}

unint64_t sub_1A7385078()
{
  unint64_t result = qword_1E96F2400;
  if (!qword_1E96F2400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2400);
  }
  return result;
}

unint64_t sub_1A73850D0()
{
  unint64_t result = qword_1EB7003B8;
  if (!qword_1EB7003B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7003B8);
  }
  return result;
}

unint64_t sub_1A7385128()
{
  unint64_t result = qword_1E96F2410;
  if (!qword_1E96F2410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2410);
  }
  return result;
}

unint64_t sub_1A7385180()
{
  unint64_t result = qword_1E96F2418;
  if (!qword_1E96F2418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2418);
  }
  return result;
}

uint64_t sub_1A73851D4()
{
  return sub_1A73836EC(&qword_1EB700300, (void (*)(uint64_t))type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
}

uint64_t sub_1A738521C()
{
  return type metadata accessor for REMCustomSmartListFilterDescriptor(0);
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor(uint64_t a1)
{
  return sub_1A72E1CD8(a1, qword_1EB704240);
}

void sub_1A7385244()
{
  sub_1A738A240(319, &qword_1EB704450, (void (*)(uint64_t))type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for REMCustomSmartListFilterDescriptor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMCustomSmartListFilterDescriptor);
}

uint64_t dispatch thunk of REMCustomSmartListFilterDescriptor.__allocating_init(operation:hashtags:date:time:priorities:flagged:location:lists:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.Operation()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.Operation;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.FilterHashtags;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMCustomSmartListFilterDescriptor.FilterDate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = sub_1A7571B60();
        uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
        v8(a1, a2, v7);
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
        v8((uint64_t *)((char *)a1 + *(int *)(v9 + 36)), (uint64_t *)((char *)a2 + *(int *)(v9 + 36)), v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
      case 5u:
        uint64_t v12 = sub_1A7571B60();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for REMCustomSmartListFilterDescriptor.FilterDate(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v7 = sub_1A7571B60();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v7 - 8), a1, v7);
      uint64_t v6 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8) + 36);
      uint64_t v5 = v7;
      uint64_t v4 = v8;
      goto LABEL_4;
    case 3:
    case 4:
    case 5:
      uint64_t v3 = sub_1A7571B60();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t v5 = v3;
      uint64_t v6 = a1;
LABEL_4:
      uint64_t result = v4(v6, v5);
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for REMCustomSmartListFilterDescriptor.FilterDate(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = sub_1A7571B60();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
      v7(&a1[*(int *)(v8 + 36)], &a2[*(int *)(v8 + 36)], v6);
      goto LABEL_5;
    case 3u:
    case 4u:
    case 5u:
      uint64_t v9 = sub_1A7571B60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for REMCustomSmartListFilterDescriptor.FilterDate(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A7383734((uint64_t)a1, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = sub_1A7571B60();
        uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
        v7(a1, a2, v6);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
        v7(&a1[*(int *)(v8 + 36)], &a2[*(int *)(v8 + 36)], v6);
        goto LABEL_6;
      case 3u:
      case 4u:
      case 5u:
        uint64_t v9 = sub_1A7571B60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for REMCustomSmartListFilterDescriptor.FilterDate(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = sub_1A7571B60();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
      v7(&a1[*(int *)(v8 + 36)], &a2[*(int *)(v8 + 36)], v6);
      goto LABEL_5;
    case 3u:
    case 4u:
    case 5u:
      uint64_t v9 = sub_1A7571B60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for REMCustomSmartListFilterDescriptor.FilterDate(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A7383734((uint64_t)a1, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = sub_1A7571B60();
        uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
        v7(a1, a2, v6);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
        v7(&a1[*(int *)(v8 + 36)], &a2[*(int *)(v8 + 36)], v6);
        goto LABEL_6;
      case 3u:
      case 4u:
      case 5u:
        uint64_t v9 = sub_1A7571B60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1A7385F70()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_1A7385F80()
{
  sub_1A738605C();
  if (v0 <= 0x3F)
  {
    sub_1A7571B60();
    if (v1 <= 0x3F) {
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_1A738605C()
{
  if (!qword_1EB7058D8)
  {
    sub_1A7571B60();
    sub_1A73836EC((unint64_t *)&qword_1EB7057C8, MEMORY[0x1E4F27928]);
    unint64_t v0 = sub_1A75725B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB7058D8);
    }
  }
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[18]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange;
}

unsigned char *_s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC9OperationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7386268);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction;
}

unsigned char *storeEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A738636CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributeOutput.Pipeline(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterTime(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7386500);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.FilterTime;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMCustomSmartListFilterDescriptor.FilterTime.DateType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1A7571B60();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for REMCustomSmartListFilterDescriptor.FilterTime.DateType(uint64_t a1)
{
  uint64_t v2 = sub_1A7571B60();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for REMCustomSmartListFilterDescriptor.FilterTime.DateType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for REMCustomSmartListFilterDescriptor.FilterTime.DateType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for REMCustomSmartListFilterDescriptor.FilterTime.DateType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for REMCustomSmartListFilterDescriptor.FilterTime.DateType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterTime.DateType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A7386C70);
}

uint64_t sub_1A7386C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571B60();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterTime.DateType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A7386CF0);
}

uint64_t sub_1A7386CF0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1A7571B60();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1A7386D70(uint64_t a1)
{
  uint64_t v2 = sub_1A7571B60();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_1A7386DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571B60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t sub_1A7386E48()
{
  uint64_t result = sub_1A7571B60();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t destroy for REMCustomSmartListFilterDescriptor.FilterLocation(uint64_t a1)
{
  return sub_1A7383794(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t initializeWithCopy for REMCustomSmartListFilterDescriptor.FilterLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1A7383858(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for REMCustomSmartListFilterDescriptor.FilterLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1A7383858(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_1A7383794(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for REMCustomSmartListFilterDescriptor.FilterLocation(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1A7383794(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterLocation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A73870F4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 1u) {
    return *(unsigned __int8 *)(a1 + 48);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1A738710C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.FilterLocation;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.FilterLists;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicateType()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.PostFetchPredicateType;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMCustomSmartListFilterDescriptor.PostFetchPredicate(uint64_t *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = *(void *)a2;
        uint64_t v8 = *((void *)a2 + 1);
        uint64_t v9 = *((void *)a2 + 2);
        uint64_t v10 = *((void *)a2 + 3);
        uint64_t v11 = *((void *)a2 + 4);
        uint64_t v12 = *((void *)a2 + 5);
        char v13 = a2[48];
        sub_1A7383858(v7, v8, v9, v10, v11, v12, v13);
        *a1 = v7;
        a1[1] = v8;
        a1[2] = v9;
        a1[3] = v10;
        a1[4] = v11;
        a1[5] = v12;
        *((unsigned char *)a1 + 48) = v13;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        char v16 = a2[8];
        *a1 = *(void *)a2;
        *((unsigned char *)a1 + 8) = v16;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v17 = *(void *)a2;
        uint64_t v18 = *((void *)a2 + 1);
        *a1 = v17;
        a1[1] = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v19 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v20 = sub_1A7571B60();
            long long v21 = *(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
            v21(a1, a2, v20);
            uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
            v21((uint64_t *)((char *)a1 + *(int *)(v22 + 36)), &a2[*(int *)(v22 + 36)], v20);
            goto LABEL_15;
          case 3u:
          case 4u:
          case 5u:
            uint64_t v24 = sub_1A7571B60();
            (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
LABEL_15:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
            break;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
      case 9u:
      case 0xAu:
        *a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v23 = sub_1A7571BC0();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for REMCustomSmartListFilterDescriptor.PostFetchPredicate(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v3 = *(void *)a1;
      uint64_t v4 = *(void *)(a1 + 8);
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v8 = *(void *)(a1 + 40);
      char v9 = *(unsigned char *)(a1 + 48);
      uint64_t result = sub_1A7383794(v3, v4, v5, v6, v7, v8, v9);
      break;
    case 2:
    case 5:
    case 9:
    case 10:
      goto LABEL_3;
    case 3:
      swift_bridgeObjectRelease();
LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 4:
      type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 1:
          uint64_t v14 = sub_1A7571B60();
          uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
          ((void (*)(void *__return_ptr, uint64_t, uint64_t))v15)((void *)(v14 - 8), a1, v14);
          uint64_t v13 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8) + 36);
          uint64_t v12 = v14;
          uint64_t v11 = v15;
          goto LABEL_13;
        case 3:
        case 4:
        case 5:
          uint64_t v10 = sub_1A7571B60();
          goto LABEL_12;
        default:
          return result;
      }
    case 7:
      uint64_t v10 = sub_1A7571BC0();
LABEL_12:
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      uint64_t v12 = v10;
      uint64_t v13 = a1;
LABEL_13:
      uint64_t result = v11(v13, v12);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for REMCustomSmartListFilterDescriptor.PostFetchPredicate(uint64_t *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = *(void *)a2;
      uint64_t v7 = *((void *)a2 + 1);
      uint64_t v8 = *((void *)a2 + 2);
      uint64_t v9 = *((void *)a2 + 3);
      uint64_t v10 = *((void *)a2 + 4);
      uint64_t v11 = *((void *)a2 + 5);
      char v12 = a2[48];
      sub_1A7383858(v6, v7, v8, v9, v10, v11, v12);
      *a1 = v6;
      a1[1] = v7;
      a1[2] = v8;
      a1[3] = v9;
      a1[4] = v10;
      a1[5] = v11;
      *((unsigned char *)a1 + 48) = v12;
      goto LABEL_13;
    case 2u:
      char v13 = a2[8];
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + 8) = v13;
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 3u:
      uint64_t v14 = *(void *)a2;
      uint64_t v15 = *((void *)a2 + 1);
      *a1 = v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 4u:
      uint64_t v16 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v17 = sub_1A7571B60();
          uint64_t v18 = *(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
          v18(a1, a2, v17);
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
          v18((uint64_t *)((char *)a1 + *(int *)(v19 + 36)), &a2[*(int *)(v19 + 36)], v17);
          goto LABEL_12;
        case 3u:
        case 4u:
        case 5u:
          uint64_t v21 = sub_1A7571B60();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
          break;
      }
      goto LABEL_13;
    case 5u:
    case 9u:
    case 0xAu:
      *a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 7u:
      uint64_t v20 = sub_1A7571BC0();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for REMCustomSmartListFilterDescriptor.PostFetchPredicate(uint64_t *a1, char *a2, uint64_t a3)
{
  if (a1 != (uint64_t *)a2)
  {
    sub_1A7383734((uint64_t)a1, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = *(void *)a2;
        uint64_t v7 = *((void *)a2 + 1);
        uint64_t v8 = *((void *)a2 + 2);
        uint64_t v9 = *((void *)a2 + 3);
        uint64_t v10 = *((void *)a2 + 4);
        uint64_t v11 = *((void *)a2 + 5);
        char v12 = a2[48];
        sub_1A7383858(v6, v7, v8, v9, v10, v11, v12);
        *a1 = v6;
        a1[1] = v7;
        a1[2] = v8;
        a1[3] = v9;
        a1[4] = v10;
        a1[5] = v11;
        *((unsigned char *)a1 + 48) = v12;
        goto LABEL_14;
      case 2u:
        char v13 = a2[8];
        *a1 = *(void *)a2;
        *((unsigned char *)a1 + 8) = v13;
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 3u:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 4u:
        uint64_t v14 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v15 = sub_1A7571B60();
            uint64_t v16 = *(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
            v16(a1, a2, v15);
            uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
            v16((uint64_t *)((char *)a1 + *(int *)(v17 + 36)), &a2[*(int *)(v17 + 36)], v15);
            goto LABEL_13;
          case 3u:
          case 4u:
          case 5u:
            uint64_t v19 = sub_1A7571B60();
            (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
            break;
        }
        goto LABEL_14;
      case 5u:
      case 9u:
      case 0xAu:
        *a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 7u:
        uint64_t v18 = sub_1A7571BC0();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for REMCustomSmartListFilterDescriptor.PostFetchPredicate(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 7)
  {
    uint64_t v11 = sub_1A7571BC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
LABEL_10:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (EnumCaseMultiPayload == 4)
  {
    uint64_t v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = sub_1A7571B60();
        uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
        v9(a1, a2, v8);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
        v9(&a1[*(int *)(v10 + 36)], &a2[*(int *)(v10 + 36)], v8);
        goto LABEL_9;
      case 3u:
      case 4u:
      case 5u:
        uint64_t v12 = sub_1A7571B60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
    goto LABEL_10;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for REMCustomSmartListFilterDescriptor.PostFetchPredicate(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A7383734((uint64_t)a1, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 7)
    {
      uint64_t v11 = sub_1A7571BC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload == 4)
    {
      uint64_t v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v8 = sub_1A7571B60();
          uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
          v9(a1, a2, v8);
          uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
          v9(&a1[*(int *)(v10 + 36)], &a2[*(int *)(v10 + 36)], v8);
          goto LABEL_10;
        case 3u:
        case 4u:
        case 5u:
          uint64_t v12 = sub_1A7571B60();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
LABEL_10:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_11;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSearchCriterion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for REMSearchCriterion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1A73885A0()
{
  uint64_t result = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1A7571BC0();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for REMPCASolver.ComponentOption(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMPCASolver.ComponentOption(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A738873C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1A7388754(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.MatchingObjects()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.PostFetchPredicate.MatchingObjects;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A7571BC0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    char v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1, v7))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_1A7571B60();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    uint64_t v26 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(uint64_t *)((char *)a1 + v26) = *(uint64_t *)((char *)a2 + v26);
    uint64_t v27 = a3[10];
    uint64_t v28 = a3[11];
    uint64_t v29 = (char *)a1 + v27;
    uint64_t v30 = (char *)a2 + v27;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
    *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1A7571BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v7 = a1 + a2[5];
  if (!v6(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v8 = a1 + a2[6];
  if (!v6(v8, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  }
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_1A7571B60();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1A7571BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_1A7571B60();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  uint64_t v25 = a3[10];
  uint64_t v26 = a3[11];
  uint64_t v27 = &a1[v25];
  uint64_t v28 = &a2[v25];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  a1[v26] = a2[v26];
  a1[a3[12]] = a2[a3[12]];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1A7571BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
LABEL_19:
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_1A7571B60();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_24;
  }
  if (v31)
  {
LABEL_24:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_25:
  a1[a3[8]] = a2[a3[8]];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[10];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = *(void *)v35;
  v34[8] = v35[8];
  *(void *)uint64_t v34 = v36;
  a1[a3[11]] = a2[a3[11]];
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

char *initializeWithTake for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1A7571BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_1A7571B60();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  uint64_t v25 = a3[10];
  uint64_t v26 = a3[11];
  uint64_t v27 = &a1[v25];
  uint64_t v28 = &a2[v25];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  a1[v26] = a2[v26];
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

char *assignWithTake for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1A7571BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
LABEL_19:
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_1A7571B60();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_24;
  }
  if (v31)
  {
LABEL_24:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_25:
  uint64_t v33 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(void *)&a1[v33] = *(void *)&a2[v33];
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[10];
  uint64_t v35 = a3[11];
  uint64_t v36 = &a1[v34];
  int v37 = &a2[v34];
  *(void *)uint64_t v36 = *(void *)v37;
  v36[8] = v37[8];
  a1[v35] = a2[v35];
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

uint64_t getEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A7389EC8);
}

uint64_t sub_1A7389EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 36));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A738A004);
}

uint64_t sub_1A738A004(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 36)) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 28);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1A738A11C()
{
  sub_1A738A240(319, (unint64_t *)&qword_1EB704540, MEMORY[0x1E4F27990]);
  if (v0 <= 0x3F)
  {
    sub_1A738A240(319, (unint64_t *)&qword_1EB704AF0, MEMORY[0x1E4F27928]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1A738A240(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1A7573210();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A7571B60();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)v14, 1, v7))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571B60();
  uint64_t v9 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v6, 1, v4);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v6, v4);
  }
  return result;
}

char *initializeWithCopy for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

char *initializeWithTake for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571B60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A738AE5C);
}

uint64_t sub_1A738AE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A738AEE0);
}

uint64_t sub_1A738AEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_1A738AF54()
{
  sub_1A738A240(319, (unint64_t *)&qword_1EB704AF0, MEMORY[0x1E4F27928]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t dispatch thunk of ReminderIDsWithMatchingHashtagsProviding.fetchReminderIDs(include:exclude:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ReminderIDsWithMatchingHashtagsProviding.fetchAllTaggedReminderIDs()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A738B04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7572BF0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A7572BE0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1A72CB560(a1, &qword_1E96F1228);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A7572B90();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1A738B1F8(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_1A72E0068(&v13, *(void *)(*(void *)(v1 + 48) + 8 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_1A738B354(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    int64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_1A72DF384(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_1A738B4D4()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1EB701A70);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB701A70);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

unint64_t REMTrialNamespace.name.getter()
{
  return 0xD000000000000011;
}

uint64_t static REMTrialNamespace.== infix(_:_:)()
{
  return 1;
}

uint64_t REMTrialNamespace.hash(into:)()
{
  return sub_1A75740D0();
}

void *static REMTrialNamespace.allCases.getter()
{
  return &unk_1EFC905E0;
}

uint64_t REMTrialNamespace.hashValue.getter()
{
  return sub_1A7574110();
}

void sub_1A738B638(void *a1@<X8>)
{
  *a1 = &unk_1EFC8F9D0;
}

uint64_t sub_1A738B648()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  __swift_allocate_value_buffer(v0, qword_1EB701348);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB701348);
  uint64_t v2 = sub_1A75719C0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t static REMTrialClient.debug_assetFixtureURL.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB701690 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB701348);
  swift_beginAccess();
  return sub_1A736F23C(v3, a1);
}

uint64_t static REMTrialClient.debug_assetFixtureURL.setter(uint64_t a1)
{
  if (qword_1EB701690 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB701348);
  swift_beginAccess();
  sub_1A738B820(a1, v3);
  swift_endAccess();
  return sub_1A72CB560(a1, &qword_1EB704C30);
}

uint64_t sub_1A738B820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static REMTrialClient.debug_assetFixtureURL.modify())()
{
  if (qword_1EB701690 != -1) {
    swift_once();
  }
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB701348);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t REMTrialClient.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(_DWORD *)(v0 + 24) = 304;
  *(void *)(v0 + 16) = objc_msgSend(self, sel_clientWithIdentifier_, 304);
  return v0;
}

uint64_t REMTrialClient.init()()
{
  *(_DWORD *)(v0 + 24) = 304;
  *(void *)(v0 + 16) = objc_msgSend(self, sel_clientWithIdentifier_, 304);
  return v0;
}

uint64_t sub_1A738B9E8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_1A75725E0();
  LODWORD(v1) = objc_msgSend(v1, sel_compatibilityVersionWithNamespaceName_, v2);

  return v1;
}

uint64_t sub_1A738BA5C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB701690 != -1) {
    swift_once();
  }
  uint64_t v4 = 0x6C6F725F6C6C756ELL;
  uint64_t v5 = __swift_project_value_buffer(v1, (uint64_t)qword_1EB701348);
  swift_beginAccess();
  sub_1A736F23C(v5, (uint64_t)v3);
  uint64_t v6 = sub_1A75719C0();
  LODWORD(v5) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v3, 1, v6);
  sub_1A72CB560((uint64_t)v3, &qword_1EB704C30);
  if (v5 == 1)
  {
    int64_t v7 = *(void **)(v0 + 16);
    unint64_t v8 = (void *)sub_1A75725E0();
    id v9 = objc_msgSend(v7, sel_rolloutIdentifiersWithNamespaceName_, v8);

    if (v9)
    {
      id v10 = objc_msgSend(v9, sel_rampId);
      if (v10)
      {
        uint64_t v11 = v10;
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

        id v12 = objc_msgSend(v9, sel_rolloutId);
        uint64_t v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v15 = v14;

        uint64_t v22 = v13;
        uint64_t v23 = v15;
        sub_1A7572740();
        sub_1A7572740();

        swift_bridgeObjectRelease();
      }
      else
      {
        id v16 = objc_msgSend(v9, sel_rolloutId);
        uint64_t v17 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v19 = v18;

        uint64_t v22 = v17;
        uint64_t v23 = v19;
        sub_1A7572740();
      }
      return v22;
    }
  }
  return v4;
}

void sub_1A738BCE8(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1228);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    sub_1A738C89C(&v19);
    if (!v4)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1A738E84C(MEMORY[0x1E4FBC870], a1);
      swift_bridgeObjectRelease_n();
      uint64_t v12 = swift_bridgeObjectRetain();
      uint64_t v13 = sub_1A72D1F58(v12);
      swift_bridgeObjectRelease();
      uint64_t v14 = (void *)swift_allocObject();
      void v14[2] = v13;
      void v14[3] = a2;
      v14[4] = a3;
      v14[5] = v11;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1A738EA74((uint64_t)a2);
      sub_1A738DC58((uint64_t)v13, sub_1A738EA68, (uint64_t)v14);
      swift_release();
      swift_release();
      sub_1A738D730(v11);
      char v16 = v15;
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        uint64_t v17 = sub_1A7572BF0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
        uint64_t v18 = (void *)swift_allocObject();
        void v18[2] = 0;
        id v18[3] = 0;
        id v18[4] = v3;
        swift_retain();
        sub_1A738B04C((uint64_t)v10, (uint64_t)&unk_1E96F2498, (uint64_t)v18);
        swift_release();
      }
    }
  }
  else if (a2)
  {
    a2(MEMORY[0x1E4FBC870]);
  }
}

void sub_1A738BF1C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = (void *)a2[1];
  v4._uint64_t countAndFlagsBits = *a2;
  v4._object = v2;
  REMGroceryLocaleMapping.localeSetting(for:)(&v21, v4);
  if (v5)
  {
    if (qword_1EB701A88 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1A7571E90();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB701A70);
    swift_bridgeObjectRetain();
    id v7 = v5;
    swift_bridgeObjectRetain();
    id v8 = v5;
    uint64_t v9 = sub_1A7571E80();
    os_log_type_t v10 = sub_1A7572FD0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      v21.base._uint64_t countAndFlagsBits = v12;
      *(_DWORD *)uint64_t v11 = 136315394;
      swift_bridgeObjectRetain();
      sub_1A72D1730(v3, (unint64_t)v2, &v21.base._countAndFlagsBits);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v11 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v13 = Error.rem_errorDescription.getter(v20);
      sub_1A72D1730(v13, v14, &v21.base._countAndFlagsBits);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A72A1000, v9, v10, "Required LocaleId not found for %s with error: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v12, -1, -1);
      MEMORY[0x1AD0CD330](v11, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    Swift::String base = v21.base;
    uint64_t countAndFlagsBits = v21.meta._countAndFlagsBits;
    object = v21.meta._object;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A7578D60;
    *(Swift::String *)(inited + 32) = base;
    *(void *)(inited + 48) = countAndFlagsBits;
    *(void *)(inited + 56) = object;
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1A72E6AB4(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    sub_1A738B354(v18);
  }
}

void sub_1A738C208(char a1, void *a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  if (!a2)
  {
    if ((a1 & 1) == 0)
    {
      if (qword_1EB701A88 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_1A7571E90();
      __swift_project_value_buffer(v23, (uint64_t)qword_1EB701A70);
      swift_bridgeObjectRetain_n();
      uint64_t v24 = sub_1A7571E80();
      os_log_type_t v25 = sub_1A7572FD0();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        uint64_t v35 = v27;
        *(_DWORD *)uint64_t v26 = 136446210;
        uint64_t v28 = swift_bridgeObjectRetain();
        uint64_t v29 = MEMORY[0x1AD0CAC20](v28, MEMORY[0x1E4FBB1A0]);
        unint64_t v31 = v30;
        swift_bridgeObjectRelease();
        sub_1A72D1730(v29, v31, &v35);
        sub_1A7573250();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v24, v25, "Failed to download for grocery with factors: '%{public}s'", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v27, -1, -1);
        MEMORY[0x1AD0CD330](v26, -1, -1);

        if (!a4) {
          return;
        }
      }
      else
      {

        swift_bridgeObjectRelease_n();
        if (!a4) {
          return;
        }
      }
      goto LABEL_15;
    }
LABEL_14:
    if (!a4) {
      return;
    }
    goto LABEL_15;
  }
  if (qword_1EB701A88 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1A7571E90();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB701A70);
  swift_bridgeObjectRetain();
  id v10 = a2;
  swift_bridgeObjectRetain();
  id v11 = a2;
  uint64_t v12 = sub_1A7571E80();
  os_log_type_t v13 = sub_1A7572FD0();
  if (!os_log_type_enabled(v12, v13))
  {
    swift_bridgeObjectRelease_n();

    goto LABEL_14;
  }
  uint64_t v14 = swift_slowAlloc();
  uint64_t v32 = swift_slowAlloc();
  uint64_t v35 = v32;
  *(_DWORD *)uint64_t v14 = 136446466;
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v33 = a6;
  uint64_t v16 = MEMORY[0x1AD0CAC20](v15, MEMORY[0x1E4FBB1A0]);
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  sub_1A72D1730(v16, v18, &v35);
  sub_1A7573250();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v14 + 12) = 2080;
  swift_getErrorValue();
  id v19 = a2;
  uint64_t v20 = Error.rem_errorDescription.getter(v34);
  unint64_t v22 = v21;

  sub_1A72D1730(v20, v22, &v35);
  a6 = v33;
  sub_1A7573250();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_1A72A1000, v12, v13, "Failed to download for grocery with factors: '%{public}s', error: %s", (uint8_t *)v14, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1AD0CD330](v32, -1, -1);
  MEMORY[0x1AD0CD330](v14, -1, -1);

  if (!a4) {
    return;
  }
LABEL_15:
  a4(a6);
}

uint64_t sub_1A738C668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x1F4188298](sub_1A738C688, 0, 0);
}

uint64_t sub_1A738C688()
{
  sub_1A738DB50();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1A738C89C(void *a1@<X8>)
{
  uint64_t v3 = sub_1A75719C0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  id v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v10 - v8;
  sub_1A738DDD4((uint64_t)&v10 - v8);
  if (!v1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    REMGroceryLocaleMapping.init(url:)((uint64_t)v7, a1);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

void sub_1A738CA90(char a1, void *a2)
{
  if (a2)
  {
    if (qword_1EB701A88 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1A7571E90();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB701A70);
    id v4 = a2;
    id v5 = a2;
    oslog = sub_1A7571E80();
    os_log_type_t v6 = sub_1A7572FD0();
    if (os_log_type_enabled(oslog, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v18 = v8;
      *(_DWORD *)id v7 = 136315138;
      swift_getErrorValue();
      id v9 = a2;
      uint64_t v10 = Error.rem_errorDescription.getter(v17);
      unint64_t v12 = v11;

      sub_1A72D1730(v10, v12, &v18);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A72A1000, oslog, v6, "Failed to download locale_mapping for grocery with error: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v8, -1, -1);
      MEMORY[0x1AD0CD330](v7, -1, -1);

      return;
    }
  }
  else
  {
    if (a1) {
      return;
    }
    if (qword_1EB701A88 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1A7571E90();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB701A70);
    oslog = sub_1A7571E80();
    os_log_type_t v14 = sub_1A7572FD0();
    if (os_log_type_enabled(oslog, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_1A72A1000, oslog, v14, "Failed to download locale_mapping for grocery", v15, 2u);
      MEMORY[0x1AD0CD330](v15, -1, -1);
    }
  }
}

void sub_1A738CD74(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v74 = a1;
  uint64_t v75 = a2;
  uint64_t v72 = a3;
  uint64_t v70 = sub_1A7571880();
  uint64_t v68 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v69 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A75719C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v66 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  char v71 = (char *)&v64 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v64 - v11;
  MEMORY[0x1F4188790](v10);
  os_log_type_t v14 = (char *)&v64 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v67 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v64 - v19;
  MEMORY[0x1F4188790](v18);
  unint64_t v22 = (char *)&v64 - v21;
  if (qword_1EB701690 != -1) {
    swift_once();
  }
  uint64_t v23 = __swift_project_value_buffer(v15, (uint64_t)qword_1EB701348);
  swift_beginAccess();
  sub_1A736F23C(v23, (uint64_t)v22);
  uint64_t v73 = v5;
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v25 = v24(v22, 1, v4);
  sub_1A72CB560((uint64_t)v22, &qword_1EB704C30);
  if (v25 != 1)
  {
    sub_1A736F23C(v23, (uint64_t)v20);
    if (v24(v20, 1, v4) != 1)
    {
      uint64_t v39 = v73;
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v12, v20, v4);
      sub_1A7571900();
      int v40 = *(void (**)(char *, uint64_t))(v39 + 8);
      v40(v12, v4);
      objc_super v41 = v71;
      sub_1A7571900();
      sub_1A7571900();
      v40(v41, v4);
      v40(v14, v4);
      return;
    }
    sub_1A72CB560((uint64_t)v20, &qword_1EB704C30);
    int v37 = self;
    uint64_t v38 = (void *)sub_1A75725E0();
    objc_msgSend(v37, sel_internalErrorWithDebugDescription_, v38);

    goto LABEL_19;
  }
  sub_1A738EB70();
  id v26 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_daemonUserDefaults);
  id v27 = objc_msgSend(v26, sel_trialAssetsDirectoryDebugOverride);

  if (!v27)
  {
    uint64_t v42 = *(void **)(v65 + 16);
    char v43 = (void *)sub_1A75725E0();
    uint64_t v44 = (void *)sub_1A75725E0();
    id v45 = objc_msgSend(v42, sel_levelForFactor_withNamespaceName_, v43, v44);

    if (v45)
    {
      id v46 = objc_msgSend(v45, sel_directoryValue);
      if (v46)
      {
        uint64_t v47 = v46;
        id v48 = objc_msgSend(v46, sel_path);

        if (v48)
        {
          uint64_t v66 = (char *)_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

          uint64_t v49 = v73;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v67, 1, 1, v4);
          (*(void (**)(char *, void, uint64_t))(v68 + 104))(v69, *MEMORY[0x1E4F276C0], v70);
          uint64_t v50 = v71;
          sub_1A75719A0();
          sub_1A7571910();

          (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v4);
        }
        else
        {
          uint64_t v76 = 0;
          unint64_t v77 = 0xE000000000000000;
          sub_1A7573560();
          swift_bridgeObjectRelease();
          uint64_t v76 = 0x203A726F74636146;
          unint64_t v77 = 0xE800000000000000;
          sub_1A7572740();
          sub_1A7572740();
          sub_1A7572740();
          uint64_t v61 = v76;
          unint64_t v62 = v77;
          sub_1A738EBB0();
          swift_allocError();
          *(void *)uint64_t v63 = v61;
          *(void *)(v63 + 8) = v62;
          *(unsigned char *)(v63 + 16) = 2;
          swift_willThrow();
        }
      }
      else
      {
        __break(1u);
      }
      return;
    }
    uint64_t v76 = 0;
    unint64_t v77 = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    uint64_t v76 = 0x203A726F74636146;
    unint64_t v77 = 0xE800000000000000;
    sub_1A7572740();
    sub_1A7572740();
    sub_1A7572740();
    uint64_t v58 = v76;
    unint64_t v59 = v77;
    sub_1A738EBB0();
    swift_allocError();
    *(void *)uint64_t v60 = v58;
    *(void *)(v60 + 8) = v59;
    *(unsigned char *)(v60 + 16) = 1;
LABEL_19:
    swift_willThrow();
    return;
  }
  uint64_t v28 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  unint64_t v30 = v29;

  if (qword_1EB701A88 != -1) {
    swift_once();
  }
  uint64_t v65 = v4;
  uint64_t v31 = sub_1A7571E90();
  __swift_project_value_buffer(v31, (uint64_t)qword_1EB701A70);
  swift_bridgeObjectRetain_n();
  uint64_t v32 = sub_1A7571E80();
  os_log_type_t v33 = sub_1A7572FC0();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v64 = v28;
  if (v34)
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v76 = v36;
    *(_DWORD *)uint64_t v35 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v78 = sub_1A72D1730(v28, v30, &v76);
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A72A1000, v32, v33, "REMTrialClient.groceryDirectoryURL, overrided assets dir: %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v36, -1, -1);
    MEMORY[0x1AD0CD330](v35, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v52 = v69;
  uint64_t v51 = v70;
  uint64_t v53 = v73;
  uint64_t v54 = v65;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v67, 1, 1, v65);
  (*(void (**)(char *, void, uint64_t))(v68 + 104))(v52, *MEMORY[0x1E4F276C0], v51);
  uint64_t v55 = v66;
  sub_1A75719A0();
  uint64_t v56 = v71;
  sub_1A7571910();
  uint64_t v57 = *(void (**)(char *, uint64_t))(v53 + 8);
  v57(v55, v54);
  sub_1A7571910();
  v57(v56, v54);
}

void sub_1A738D730(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  int64_t v37 = v8;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v38 = v9;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_21;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v12 >= v8) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    int64_t v14 = v9 + 1;
    if (!v13)
    {
      int64_t v14 = v9 + 2;
      if (v9 + 2 >= v8) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v9 + 3;
        if (v9 + 3 >= v8) {
          goto LABEL_31;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v14);
        if (!v13) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v13 - 1) & v13;
    int64_t v38 = v14;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_21:
    uint64_t v16 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v17 = *v16;
    unint64_t v18 = v16[1];
    uint64_t v19 = *(void **)(v2 + 16);
    swift_bridgeObjectRetain();
    uint64_t v20 = (void *)sub_1A75725E0();
    uint64_t v21 = (void *)sub_1A75725E0();
    id v22 = objc_msgSend(v19, sel_levelForFactor_withNamespaceName_, v20, v21);

    if (!v22) {
      goto LABEL_26;
    }
    id v23 = objc_msgSend(v22, sel_directoryValue);

    if (!v23) {
      goto LABEL_34;
    }
    id v24 = objc_msgSend(v23, sel_path);

    if (v24)
    {
      swift_bridgeObjectRelease();
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      id v25 = objc_msgSend(self, sel_defaultManager);
      id v26 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      unsigned __int8 v27 = objc_msgSend(v25, sel_fileExistsAtPath_, v26);

      int64_t v9 = v38;
      if ((v27 & 1) == 0)
      {
LABEL_31:
        swift_release();
        return;
      }
    }
    else
    {
LABEL_26:
      if (qword_1EB701A88 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_1A7571E90();
      __swift_project_value_buffer(v28, (uint64_t)qword_1EB701A70);
      swift_bridgeObjectRetain();
      unint64_t v29 = sub_1A7571E80();
      os_log_type_t v30 = sub_1A7572FD0();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = swift_slowAlloc();
        uint64_t v32 = v3;
        uint64_t v33 = v4;
        uint64_t v34 = v2;
        uint64_t v35 = swift_slowAlloc();
        uint64_t v39 = v35;
        *(_DWORD *)uint64_t v31 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v31 + 4) = sub_1A72D1730(v17, v18, &v39);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A72A1000, v29, v30, "REMTrialClient: Failed to find path for the factor, ignore the factor: %s", (uint8_t *)v31, 0xCu);
        swift_arrayDestroy();
        uint64_t v36 = v35;
        uint64_t v2 = v34;
        uint64_t v4 = v33;
        uint64_t v3 = v32;
        int64_t v8 = v37;
        MEMORY[0x1AD0CD330](v36, -1, -1);
        MEMORY[0x1AD0CD330](v31, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      int64_t v9 = v38;
    }
  }
  uint64_t v15 = v9 + 4;
  if (v9 + 4 >= v8) {
    goto LABEL_31;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v9 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v8) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

id sub_1A738DB50()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1A74FA014((uint64_t)&unk_1EFC90638);
  swift_arrayDestroy();
  uint64_t v2 = (void *)sub_1A7572C60();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  unsigned int v3 = objc_msgSend(v1, sel_immediateDownloadForNamespaceNames_allowExpensiveNetworking_error_, v2, 0, v6);

  if (v3) {
    return v6[0];
  }
  id v5 = v6[0];
  sub_1A7571850();

  return (id)swift_willThrow();
}

void sub_1A738DC58(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)(v3 + 16);
  unint64_t v7 = (void *)sub_1A7572A00();
  int64_t v8 = (void *)sub_1A75725E0();
  if (qword_1EB704278 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1EB703430;
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB00D8]), sel_initWithAllowsCellular_discretionaryBehavior_, 0, 0);
  if (a2)
  {
    v11[4] = a2;
    v11[5] = a3;
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 1107296256;
    uint64_t v11[2] = sub_1A74EB020;
    void v11[3] = &block_descriptor_5;
    a2 = _Block_copy(v11);
    swift_retain();
    swift_release();
  }
  objc_msgSend(v6, sel_downloadLevelsForFactors_withNamespace_queue_options_progress_completion_, v7, v8, v9, v10, 0, a2);
  _Block_release(a2);
}

void sub_1A738DDD4(uint64_t a1@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v1 = sub_1A7571880();
  uint64_t v59 = *(void *)(v1 - 8);
  uint64_t v60 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v58 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1A75719C0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v57 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v53 - v8;
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)&v53 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v56 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v53 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v53 - v18;
  if (qword_1EB701690 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v12, (uint64_t)qword_1EB701348);
  swift_beginAccess();
  sub_1A736F23C(v20, (uint64_t)v19);
  uint64_t v61 = v4;
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  int v22 = v21(v19, 1, v3);
  sub_1A72CB560((uint64_t)v19, &qword_1EB704C30);
  if (v22 != 1)
  {
    sub_1A736F23C(v20, (uint64_t)v17);
    if (v21(v17, 1, v3) != 1)
    {
      uint64_t v36 = v61;
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v9, v17, v3);
      sub_1A7571900();
      int64_t v37 = *(void (**)(char *, uint64_t))(v36 + 8);
      v37(v9, v3);
      sub_1A7571900();
      v37(v11, v3);
      return;
    }
    sub_1A72CB560((uint64_t)v17, &qword_1EB704C30);
    uint64_t v34 = self;
    uint64_t v35 = (void *)sub_1A75725E0();
    objc_msgSend(v34, sel_internalErrorWithDebugDescription_, v35);

    goto LABEL_19;
  }
  uint64_t v54 = v3;
  sub_1A738EB70();
  id v23 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_daemonUserDefaults);
  id v24 = objc_msgSend(v23, sel_trialAssetsDirectoryDebugOverride);

  if (!v24)
  {
    int64_t v38 = *(void **)(v55 + 16);
    uint64_t v39 = (void *)sub_1A75725E0();
    int v40 = (void *)sub_1A75725E0();
    id v41 = objc_msgSend(v38, sel_levelForFactor_withNamespaceName_, v39, v40);

    if (v41)
    {
      id v42 = objc_msgSend(v41, sel_fileValue);
      if (v42)
      {
        char v43 = v42;
        id v44 = objc_msgSend(v42, sel_path);

        if (v44)
        {
          _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

          sub_1A75718C0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v63 = 0;
          unint64_t v64 = 0xE000000000000000;
          sub_1A7573560();
          swift_bridgeObjectRelease();
          sub_1A738EBB0();
          swift_allocError();
          *(void *)uint64_t v52 = 0xD000000000000035;
          *(void *)(v52 + 8) = 0x80000001A75A0BA0;
          *(unsigned char *)(v52 + 16) = 2;
          swift_willThrow();
        }
      }
      else
      {
        __break(1u);
      }
      return;
    }
    uint64_t v63 = 0;
    unint64_t v64 = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    sub_1A738EBB0();
    swift_allocError();
    *(void *)uint64_t v51 = 0xD000000000000035;
    *(void *)(v51 + 8) = 0x80000001A75A0BA0;
    *(unsigned char *)(v51 + 16) = 1;
LABEL_19:
    swift_willThrow();
    return;
  }
  uint64_t v25 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  unint64_t v27 = v26;

  if (qword_1EB701A88 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1A7571E90();
  __swift_project_value_buffer(v28, (uint64_t)qword_1EB701A70);
  swift_bridgeObjectRetain_n();
  unint64_t v29 = sub_1A7571E80();
  os_log_type_t v30 = sub_1A7572FC0();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v55 = v25;
  if (v31)
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v63 = v33;
    *(_DWORD *)uint64_t v32 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_1A72D1730(v25, v27, &v63);
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A72A1000, v29, v30, "REMTrialClient.groceryLocaleMappingFileURL, overrided assets dir: %s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v33, -1, -1);
    MEMORY[0x1AD0CD330](v32, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v45 = v54;
  uint64_t v47 = v60;
  uint64_t v46 = v61;
  uint64_t v49 = v58;
  uint64_t v48 = v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v56, 1, 1, v54);
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v49, *MEMORY[0x1E4F276C0], v47);
  uint64_t v50 = v57;
  sub_1A75719A0();
  sub_1A7571910();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v50, v45);
}

uint64_t REMTrialClient.deinit()
{
  return v0;
}

uint64_t REMTrialClient.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 28, 7);
}

uint64_t sub_1A738E678(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A738E754;
  return v6(a1);
}

uint64_t sub_1A738E754()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A738E84C(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = a2 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v17 = v16[1];
    v18[0] = *v16;
    v18[1] = v17;
    swift_bridgeObjectRetain();
    sub_1A738BF1C((uint64_t)&v19, v18);
    if (v2)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v10 >= v8) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    if (!v14) {
      break;
    }
LABEL_17:
    unint64_t v7 = (v14 - 1) & v14;
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v8) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v10 + 2;
  if (v10 + 2 >= v8) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v10 + 3;
  if (v10 + 3 >= v8) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v10 + 4;
  if (v10 + 4 >= v8)
  {
LABEL_26:
    swift_release();
    return v19;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_16:
    int64_t v10 = v15;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A738EA18()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1A738EA68(char a1, void *a2)
{
  sub_1A738C208(a1, a2, *(void *)(v2 + 16), *(void (**)(uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1A738EA74(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1A738EA84()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A738EAC4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A72C8E18;
  v3[3] = v2;
  return MEMORY[0x1F4188298](sub_1A738C688, 0, 0);
}

unint64_t sub_1A738EB70()
{
  unint64_t result = qword_1EB7029D0;
  if (!qword_1EB7029D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB7029D0);
  }
  return result;
}

unint64_t sub_1A738EBB0()
{
  unint64_t result = qword_1E96F24A0;
  if (!qword_1E96F24A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F24A0);
  }
  return result;
}

unint64_t sub_1A738EC08()
{
  unint64_t result = qword_1E96F24A8;
  if (!qword_1E96F24A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F24A8);
  }
  return result;
}

unint64_t sub_1A738EC60()
{
  unint64_t result = qword_1E96F24B0;
  if (!qword_1E96F24B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F24B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F24B0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for REMTrialNamespace(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A738ED58);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTrialNamespace()
{
  return &type metadata for REMTrialNamespace;
}

uint64_t type metadata accessor for REMTrialClient()
{
  return self;
}

uint64_t method lookup function for REMTrialClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMTrialClient);
}

uint64_t dispatch thunk of REMTrialClient.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of REMTrialClient.version(for:)()
{
  unint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 104))();
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

uint64_t dispatch thunk of REMTrialClient.deploymentId(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of REMTrialClient.requestGroceryModelAssetsForLocales(withLocaleIdentifiers:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of REMTrialClient.loadGroceryLocaleMapping()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of REMTrialClient.groceryDirectoryURL(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t sub_1A738EF10(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for REMTrialClientError(uint64_t a1)
{
  return sub_1A738EF38(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1A738EF38(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19ReminderKitInternal19REMTrialClientErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A738EF10(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMTrialClientError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A738EF10(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A738EF38(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMTrialClientError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A738EF38(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for REMTrialClientError()
{
  return &type metadata for REMTrialClientError;
}

uint64_t sub_1A738F04C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A738F084(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A72C8E18;
  unsigned __int8 v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E96F24C0 + dword_1E96F24C0);
  return v6(a1, v4);
}

uint64_t sub_1A738F13C(uint64_t a1)
{
  uint64_t v76 = sub_1A7571500();
  uint64_t v67 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v75 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v74 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v7 = sub_1A7573400();
  }
  else {
    uint64_t v7 = *(void *)(a1 + 16);
  }
  uint64_t v88 = MEMORY[0x1E4FBC860];
  sub_1A72D2D00(0, v7 & ~(v7 >> 63), 0);
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1A75733C0();
    sub_1A72BEFEC(0, &qword_1E96F2670);
    sub_1A73A4C24();
    uint64_t result = sub_1A7572CD0();
    a1 = v83;
    uint64_t v71 = v84;
    uint64_t v9 = v85;
    unint64_t v6 = v86;
    unint64_t v10 = v87;
    if ((v7 & 0x8000000000000000) == 0) {
      goto LABEL_6;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v36 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v37 = *(void *)(a1 + 56);
  uint64_t v71 = a1 + 56;
  uint64_t v38 = ~v36;
  uint64_t v39 = -v36;
  if (v39 < 64) {
    uint64_t v40 = ~(-1 << v39);
  }
  else {
    uint64_t v40 = -1;
  }
  unint64_t v10 = v40 & v37;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = v38;
  if (v7 < 0) {
    goto LABEL_42;
  }
LABEL_6:
  uint64_t v1 = MEMORY[0x1E4FBC838];
  uint64_t v66 = v9;
  if (v7)
  {
    unint64_t v72 = v6;
    uint64_t v11 = 0;
    uint64_t v73 = (void (**)(char *, uint64_t))(v67 + 8);
    uint64_t v69 = a1 & 0x7FFFFFFFFFFFFFFFLL;
    int64_t v70 = (unint64_t)(v9 + 64) >> 6;
    int64_t v65 = v70 - 1;
    uint64_t v68 = MEMORY[0x1E4FBC838] + 8;
    uint64_t v77 = a1;
    do
    {
      if (v11 == v7)
      {
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
        return result;
      }
      if (a1 < 0)
      {
        uint64_t result = sub_1A7573440();
        if (!result) {
          goto LABEL_77;
        }
        uint64_t v79 = result;
        sub_1A72BEFEC(0, &qword_1E96F2670);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        unint64_t v14 = v81;
        uint64_t result = swift_unknownObjectRelease();
      }
      else
      {
        if (v10)
        {
          unint64_t v12 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          unint64_t v13 = v12 | (v72 << 6);
        }
        else
        {
          int64_t v15 = v72 + 1;
          if (__OFADD__(v72, 1)) {
            goto LABEL_75;
          }
          if (v15 >= v70) {
            goto LABEL_77;
          }
          unint64_t v16 = *(void *)(v71 + 8 * v15);
          unint64_t v17 = v72 + 1;
          if (!v16)
          {
            unint64_t v17 = v72 + 2;
            if ((uint64_t)(v72 + 2) >= v70) {
              goto LABEL_77;
            }
            unint64_t v16 = *(void *)(v71 + 8 * v17);
            if (!v16)
            {
              unint64_t v17 = v72 + 3;
              if ((uint64_t)(v72 + 3) >= v70) {
                goto LABEL_77;
              }
              unint64_t v16 = *(void *)(v71 + 8 * v17);
              if (!v16)
              {
                unint64_t v17 = v72 + 4;
                if ((uint64_t)(v72 + 4) >= v70) {
                  goto LABEL_77;
                }
                unint64_t v16 = *(void *)(v71 + 8 * v17);
                if (!v16)
                {
                  unint64_t v17 = v72 + 5;
                  if ((uint64_t)(v72 + 5) >= v70) {
                    goto LABEL_77;
                  }
                  unint64_t v16 = *(void *)(v71 + 8 * v17);
                  if (!v16)
                  {
                    unint64_t v18 = v72 + 6;
                    do
                    {
                      if (v70 == v18) {
                        goto LABEL_77;
                      }
                      unint64_t v16 = *(void *)(v71 + 8 * v18++);
                    }
                    while (!v16);
                    unint64_t v17 = v18 - 1;
                  }
                }
              }
            }
          }
          unint64_t v10 = (v16 - 1) & v16;
          unint64_t v13 = __clz(__rbit64(v16)) + (v17 << 6);
          unint64_t v72 = v17;
        }
        uint64_t result = (uint64_t)*(id *)(*(void *)(a1 + 48) + 8 * v13);
        unint64_t v14 = (void *)result;
      }
      if (!v14) {
        goto LABEL_77;
      }
      uint64_t v19 = v7;
      uint64_t v78 = (void (**)(char *, uint64_t))v10;
      id v20 = objc_msgSend(v14, sel_name);
      uint64_t v21 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v23 = v22;

      uint64_t v24 = (uint64_t)v74;
      sub_1A7571C80();
      uint64_t v25 = sub_1A7571D30();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
      char v81 = (void *)v21;
      uint64_t v82 = v23;
      sub_1A72DF534();
      uint64_t v79 = sub_1A7573310();
      uint64_t v80 = v26;
      unint64_t v27 = v75;
      sub_1A75714D0();
      uint64_t v28 = sub_1A75732B0();
      uint64_t v30 = v29;
      (*v73)(v27, v76);
      swift_bridgeObjectRelease();
      sub_1A72CB560(v24, &qword_1EB6FFDE8);

      swift_bridgeObjectRelease();
      uint64_t v31 = v88;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1A72D2D00(0, *(void *)(v31 + 16) + 1, 1);
        uint64_t v31 = v88;
      }
      uint64_t v7 = v19;
      uint64_t v1 = MEMORY[0x1E4FBC838];
      unint64_t v33 = *(void *)(v31 + 16);
      unint64_t v32 = *(void *)(v31 + 24);
      if (v33 >= v32 >> 1)
      {
        uint64_t result = sub_1A72D2D00(v32 > 1, v33 + 1, 1);
        uint64_t v31 = v88;
      }
      ++v11;
      *(void *)(v31 + 16) = v33 + 1;
      uint64_t v34 = v31 + 16 * v33;
      *(void *)(v34 + 32) = v28;
      *(void *)(v34 + 40) = v30;
      a1 = v77;
      unint64_t v10 = (unint64_t)v78;
    }
    while (v11 != v7);
    unint64_t v6 = v72;
    int64_t v35 = v65;
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v69 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v70 = (unint64_t)(v9 + 64) >> 6;
  int64_t v35 = v70 - 1;
LABEL_44:
  uint64_t v77 = a1;
  uint64_t v78 = (void (**)(char *, uint64_t))(v67 + 8);
  uint64_t v68 = v71 + 48;
  unint64_t v72 = v35 - 5;
  uint64_t v73 = (void (**)(char *, uint64_t))(v1 + 8);
  if (a1 < 0) {
    goto LABEL_47;
  }
  while (1)
  {
    if (v10)
    {
      uint64_t v41 = (v10 - 1) & v10;
      unint64_t v42 = __clz(__rbit64(v10)) | (v6 << 6);
      unint64_t v43 = v6;
      goto LABEL_66;
    }
    int64_t v46 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_76;
    }
    if (v46 >= v70) {
      goto LABEL_73;
    }
    unint64_t v47 = *(void *)(v71 + 8 * v46);
    unint64_t v43 = v6 + 1;
    if (!v47)
    {
      unint64_t v43 = v6 + 2;
      if ((uint64_t)(v6 + 2) >= v70) {
        goto LABEL_73;
      }
      unint64_t v47 = *(void *)(v71 + 8 * v43);
      if (!v47)
      {
        unint64_t v43 = v6 + 3;
        if ((uint64_t)(v6 + 3) >= v70) {
          goto LABEL_73;
        }
        unint64_t v47 = *(void *)(v71 + 8 * v43);
        if (!v47)
        {
          unint64_t v43 = v6 + 4;
          if ((uint64_t)(v6 + 4) >= v70) {
            goto LABEL_73;
          }
          unint64_t v47 = *(void *)(v71 + 8 * v43);
          if (!v47)
          {
            unint64_t v43 = v6 + 5;
            if ((uint64_t)(v6 + 5) >= v70) {
              goto LABEL_73;
            }
            unint64_t v47 = *(void *)(v71 + 8 * v43);
            if (!v47) {
              break;
            }
          }
        }
      }
    }
LABEL_65:
    uint64_t v41 = (v47 - 1) & v47;
    unint64_t v42 = __clz(__rbit64(v47)) + (v43 << 6);
LABEL_66:
    id v45 = *(id *)(*(void *)(a1 + 48) + 8 * v42);
    if (!v45) {
      goto LABEL_73;
    }
    while (1)
    {
      id v49 = objc_msgSend(v45, sel_name);
      uint64_t v50 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v52 = v51;

      uint64_t v53 = (uint64_t)v74;
      sub_1A7571C80();
      uint64_t v54 = sub_1A7571D30();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 1, v54);
      char v81 = (void *)v50;
      uint64_t v82 = v52;
      sub_1A72DF534();
      uint64_t v79 = sub_1A7573310();
      uint64_t v80 = v55;
      uint64_t v56 = v75;
      sub_1A75714D0();
      uint64_t v57 = sub_1A75732B0();
      uint64_t v59 = v58;
      (*v78)(v56, v76);
      swift_bridgeObjectRelease();
      sub_1A72CB560(v53, &qword_1EB6FFDE8);

      swift_bridgeObjectRelease();
      uint64_t v60 = v88;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1A72D2D00(0, *(void *)(v60 + 16) + 1, 1);
        uint64_t v60 = v88;
      }
      unint64_t v62 = *(void *)(v60 + 16);
      unint64_t v61 = *(void *)(v60 + 24);
      if (v62 >= v61 >> 1)
      {
        uint64_t result = sub_1A72D2D00(v61 > 1, v62 + 1, 1);
        uint64_t v60 = v88;
      }
      *(void *)(v60 + 16) = v62 + 1;
      uint64_t v63 = v60 + 16 * v62;
      *(void *)(v63 + 32) = v57;
      *(void *)(v63 + 40) = v59;
      unint64_t v6 = v43;
      unint64_t v10 = v41;
      a1 = v77;
      if ((v77 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_47:
      uint64_t v44 = sub_1A7573440();
      if (v44)
      {
        uint64_t v79 = v44;
        sub_1A72BEFEC(0, &qword_1E96F2670);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v45 = v81;
        swift_unknownObjectRelease();
        unint64_t v43 = v6;
        uint64_t v41 = v10;
        if (v45) {
          continue;
        }
      }
      goto LABEL_73;
    }
  }
  unint64_t v48 = v6;
  while (v72 != v48)
  {
    unint64_t v47 = *(void *)(v68 + 8 * v48++);
    if (v47)
    {
      unint64_t v43 = v48 + 5;
      goto LABEL_65;
    }
  }
LABEL_73:
  sub_1A72D99A4();
  return v88;
}

ReminderKitInternal::REMSuggestedAttributeOutput::Source __swiftcall REMSuggestedAttributeOutput.Source.init(pipeline:)(ReminderKitInternal::REMSuggestedAttributeOutput::Pipeline pipeline)
{
  uint64_t v2 = v1;
  char v3 = *(unsigned char *)pipeline;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
  *(unsigned char *)(inited + 32) = v3;
  *(void *)(inited + 40) = MEMORY[0x1E4FBC870];
  result.predictors._unint64_t rawValue = (void *)sub_1A72B0BB8(inited);
  v2->predictors._unint64_t rawValue = result.predictors._rawValue;
  return result;
}

uint64_t REMSuggestedList.__allocating_init(stringLiteral:)()
{
  uint64_t v0 = sub_1A7571BC0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  char v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  sub_1A7571B70();
  swift_bridgeObjectRelease();
  sub_1A72BF1E8((uint64_t)v9, (uint64_t)v7, &qword_1EB704C40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
  {
    sub_1A72CB560((uint64_t)v9, &qword_1EB704C40);
    sub_1A72CB560((uint64_t)v7, &qword_1EB704C40);
    unint64_t v10 = 0xE500000000000000;
    uint64_t v11 = 0x296C696E28;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v7, v0);
    uint64_t v11 = sub_1A7571B80();
    unint64_t v10 = v12;
    sub_1A72CB560((uint64_t)v9, &qword_1EB704C40);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v11;
  *(void *)(result + 24) = v10;
  return result;
}

uint64_t sub_1A738FCB0()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F24D0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F24D0);
  if (qword_1EB7042A8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F18);
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t static REMSuggestedWeekDay.nilValue.getter()
{
  return 0;
}

uint64_t REMSuggestedWeekDay.CodingKeys.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7392584(a1);
}

uint64_t REMSuggestedWeekDay.CodingKeys.init(stringValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7392584(a1);
}

uint64_t REMSuggestedWeekDay.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedWeekDay.CodingKeys.rawValue.getter()
{
  return 0x64497373616C63;
}

uint64_t REMSuggestedWeekDay.CodingKeys.stringValue.getter()
{
  return 0x64497373616C63;
}

uint64_t sub_1A738FDD4()
{
  return sub_1A7398D34();
}

uint64_t sub_1A738FDEC()
{
  return sub_1A75726F0();
}

uint64_t sub_1A738FE04()
{
  return sub_1A7398DBC();
}

uint64_t sub_1A738FE1C@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398E14(a1);
}

uint64_t sub_1A738FE28()
{
  return 0x64497373616C63;
}

uint64_t sub_1A738FE40@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398EAC(a1);
}

uint64_t sub_1A738FE4C(uint64_t a1)
{
  unint64_t v2 = sub_1A739EE1C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A738FE88(uint64_t a1)
{
  unint64_t v2 = sub_1A739EE1C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedWeekDay.__allocating_init(_:)()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_1A7573BC0();
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t REMSuggestedWeekDay.init(_:)()
{
  *(void *)(v0 + 16) = sub_1A7573BC0();
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t REMSuggestedWeekDay.__allocating_init(stringLiteral:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  REMSuggestedWeekDay.init(stringLiteral:)(a1, a2);
  return v4;
}

uint64_t REMSuggestedWeekDay.init(stringLiteral:)(uint64_t result, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = HIBYTE(a2) & 0xF;
  uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
LABEL_47:
    v27[0] = v21;
    *(void *)(v3 + 16) = sub_1A7573BC0();
    *(void *)(v3 + 24) = v22;
    return v3;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (uint64_t)sub_1A7492928(result, a2, 10);
    char v11 = v26;
LABEL_44:
    swift_bridgeObjectRelease();
    if (v11) {
      uint64_t v21 = 0;
    }
    else {
      uint64_t v21 = v9;
    }
    goto LABEL_47;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)sub_1A7573680();
    }
    uint64_t v9 = (uint64_t)sub_1A749267C(v8, v6, 10);
    char v11 = v10 & 1;
    goto LABEL_44;
  }
  v27[0] = result;
  v27[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v5) {
      goto LABEL_58;
    }
    if (v5 == 1 || (BYTE1(result) - 48) > 9u) {
      goto LABEL_31;
    }
    uint64_t v9 = (BYTE1(result) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(result) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v9 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      uint64_t v12 = v5 - 3;
      if (v12)
      {
        unint64_t v13 = (unsigned __int8 *)v27 + 3;
        while (1)
        {
          unsigned int v14 = *v13 - 48;
          if (v14 > 9) {
            goto LABEL_31;
          }
          uint64_t v15 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            goto LABEL_31;
          }
          uint64_t v9 = v15 + v14;
          if (__OFADD__(v15, v14)) {
            goto LABEL_31;
          }
          char v11 = 0;
          ++v13;
          if (!--v12) {
            goto LABEL_44;
          }
        }
      }
    }
LABEL_43:
    char v11 = 0;
    goto LABEL_44;
  }
  if (result != 45)
  {
    if (!v5 || (result - 48) > 9u) {
      goto LABEL_31;
    }
    uint64_t v9 = (result - 48);
    if (v5 != 1)
    {
      if ((BYTE1(result) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v9 = 10 * (result - 48) + (BYTE1(result) - 48);
      uint64_t v16 = v5 - 2;
      if (v16)
      {
        unint64_t v17 = (unsigned __int8 *)v27 + 2;
        while (1)
        {
          unsigned int v18 = *v17 - 48;
          if (v18 > 9) {
            goto LABEL_31;
          }
          uint64_t v19 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            goto LABEL_31;
          }
          uint64_t v9 = v19 + v18;
          if (__OFADD__(v19, v18)) {
            goto LABEL_31;
          }
          char v11 = 0;
          ++v17;
          if (!--v16) {
            goto LABEL_44;
          }
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v5 == 2)
      {
        char v11 = 0;
        uint64_t v9 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        uint64_t v9 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        uint64_t v20 = v5 - 3;
        if (!v20) {
          goto LABEL_43;
        }
        uint64_t v23 = (unsigned __int8 *)v27 + 3;
        while (1)
        {
          unsigned int v24 = *v23 - 48;
          if (v24 > 9) {
            break;
          }
          uint64_t v25 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            break;
          }
          uint64_t v9 = v25 - v24;
          if (__OFSUB__(v25, v24)) {
            break;
          }
          char v11 = 0;
          ++v23;
          if (!--v20) {
            goto LABEL_44;
          }
        }
      }
    }
LABEL_31:
    uint64_t v9 = 0;
    char v11 = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

uint64_t REMSuggestedWeekDay.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2 = sub_1A7571E00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A75717A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A72BF1E8(a1, (uint64_t)v8, &qword_1EB6FFDE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_1A7571DC0();
    uint64_t v15 = DateComponents.dayOfWeek(with:)((uint64_t)v5);
    char v17 = v16;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v17)
    {
      uint64_t v13 = swift_allocObject();
    }
    else
    {
      uint64_t v13 = swift_allocObject();
      if ((unint64_t)(v15 - 8) > 0xFFFFFFFFFFFFFFF8) {
        goto LABEL_8;
      }
    }
    uint64_t v15 = 0;
LABEL_8:
    uint64_t v21 = v15;
    *(void *)(v13 + 16) = sub_1A7573BC0();
    *(void *)(v13 + 24) = v18;
    sub_1A72CB560(a1, &qword_1EB6FFDE0);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return v13;
  }
  sub_1A72CB560((uint64_t)v8, &qword_1EB6FFDE0);
  uint64_t v13 = swift_allocObject();
  uint64_t v21 = 0;
  *(void *)(v13 + 16) = sub_1A7573BC0();
  *(void *)(v13 + 24) = v14;
  sub_1A72CB560(a1, &qword_1EB6FFDE0);
  return v13;
}

uint64_t REMSuggestedWeekDay.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  REMSuggestedWeekDay.init(from:)(a1);
  return v2;
}

void *REMSuggestedWeekDay.init(from:)(void *a1)
{
  return sub_1A7392B5C(a1, &qword_1EB704078, (void (*)(void))sub_1A739EE1C);
}

void REMSuggestedWeekDay.value.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = HIBYTE(v1) & 0xF;
  uint64_t v4 = v2 & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(v1) & 0xF;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return;
  }
  if ((v1 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A7492928(v2, v1, 10);
    swift_bridgeObjectRelease();
    return;
  }
  if ((v1 & 0x2000000000000000) == 0)
  {
    if ((v2 & 0x1000000000000000) != 0) {
      uint64_t v6 = (unsigned __int8 *)((v1 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v6 = (unsigned __int8 *)sub_1A7573680();
    }
    sub_1A749267C(v6, v4, 10);
    return;
  }
  v22[0] = *(void *)(v0 + 16);
  v22[1] = v1 & 0xFFFFFFFFFFFFFFLL;
  if (v2 == 43)
  {
    if (!v3) {
      goto LABEL_54;
    }
    if (v3 != 1 && (BYTE1(v2) - 48) <= 9u && v3 != 2 && (BYTE2(v2) - 48) <= 9u)
    {
      uint64_t v7 = 10 * (BYTE1(v2) - 48) + (BYTE2(v2) - 48);
      uint64_t v8 = v3 - 3;
      if (v8)
      {
        uint64_t v9 = (unsigned __int8 *)v22 + 3;
        do
        {
          unsigned int v10 = *v9 - 48;
          if (v10 > 9) {
            break;
          }
          uint64_t v11 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            break;
          }
          uint64_t v7 = v11 + v10;
          if (__OFADD__(v11, v10)) {
            break;
          }
          ++v9;
          --v8;
        }
        while (v8);
      }
    }
  }
  else
  {
    if (v2 == 45)
    {
      if (v3)
      {
        if (v3 != 1 && (BYTE1(v2) - 48) <= 9u && v3 != 2 && (BYTE2(v2) - 48) <= 9u)
        {
          uint64_t v17 = -10 * (BYTE1(v2) - 48) - (BYTE2(v2) - 48);
          uint64_t v18 = v3 - 3;
          if (v18)
          {
            uint64_t v19 = (unsigned __int8 *)v22 + 3;
            do
            {
              unsigned int v20 = *v19 - 48;
              if (v20 > 9) {
                break;
              }
              uint64_t v21 = 10 * v17;
              if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63) {
                break;
              }
              uint64_t v17 = v21 - v20;
              if (__OFSUB__(v21, v20)) {
                break;
              }
              ++v19;
              --v18;
            }
            while (v18);
          }
        }
        return;
      }
      __break(1u);
LABEL_54:
      __break(1u);
      return;
    }
    if (v3)
    {
      if ((v2 - 48) <= 9u && v3 != 1 && (BYTE1(v2) - 48) <= 9u)
      {
        uint64_t v12 = 10 * (v2 - 48) + (BYTE1(v2) - 48);
        uint64_t v13 = v3 - 2;
        if (v13)
        {
          uint64_t v14 = (unsigned __int8 *)v22 + 2;
          do
          {
            unsigned int v15 = *v14 - 48;
            if (v15 > 9) {
              break;
            }
            uint64_t v16 = 10 * v12;
            if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63) {
              break;
            }
            uint64_t v12 = v16 + v15;
            if (__OFADD__(v16, v15)) {
              break;
            }
            ++v14;
            --v13;
          }
          while (v13);
        }
      }
    }
  }
}

BOOL REMSuggestedWeekDay.isNil.getter()
{
  REMSuggestedWeekDay.value.getter();
  return v0 == 0;
}

uint64_t REMSuggestedWeekDay.description.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = HIBYTE(v1) & 0xF;
  uint64_t v4 = v2 & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(v1) & 0xF;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return 0x296C696E28;
  }
  if ((v1 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t)sub_1A7492928(v2, v1, 10);
    char v24 = v23;
    swift_bridgeObjectRelease();
    if (v24) {
      return 0x296C696E28;
    }
    goto LABEL_38;
  }
  if ((v1 & 0x2000000000000000) == 0)
  {
    if ((v2 & 0x1000000000000000) != 0) {
      uint64_t v6 = (unsigned __int8 *)((v1 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v6 = (unsigned __int8 *)sub_1A7573680();
    }
    uint64_t v7 = sub_1A749267C(v6, v4, 10);
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = (uint64_t)v7;
      goto LABEL_38;
    }
    return 0x296C696E28;
  }
  v25[0] = *(void *)(v0 + 16);
  v25[1] = v1 & 0xFFFFFFFFFFFFFFLL;
  if (v2 != 43)
  {
    if (v2 != 45)
    {
      if (!v3 || (v2 - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v9 = (v2 - 48);
      if (v3 != 1)
      {
        if ((BYTE1(v2) - 48) > 9u) {
          goto LABEL_34;
        }
        uint64_t v9 = 10 * (v2 - 48) + (BYTE1(v2) - 48);
        if (v3 != 2)
        {
          if ((BYTE2(v2) - 48) > 9u) {
            goto LABEL_34;
          }
          uint64_t v9 = 10 * v9 + (BYTE2(v2) - 48);
          uint64_t v15 = v3 - 3;
          if (v3 != 3)
          {
            uint64_t v16 = (unsigned __int8 *)v25 + 3;
            while (1)
            {
              unsigned int v17 = *v16 - 48;
              if (v17 > 9) {
                goto LABEL_34;
              }
              uint64_t v18 = 10 * v9;
              if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
                goto LABEL_34;
              }
              uint64_t v9 = v18 + v17;
              if (__OFADD__(v18, v17)) {
                goto LABEL_34;
              }
              LOBYTE(v3) = 0;
              ++v16;
              if (!--v15) {
                goto LABEL_37;
              }
            }
          }
        }
      }
      goto LABEL_36;
    }
    if (v3)
    {
      if (v3 != 1)
      {
        if ((BYTE1(v2) - 48) > 9u) {
          goto LABEL_34;
        }
        if (v3 == 2)
        {
          LOBYTE(v3) = 0;
          uint64_t v9 = -(uint64_t)(BYTE1(v2) - 48);
          goto LABEL_37;
        }
        if ((BYTE2(v2) - 48) > 9u) {
          goto LABEL_34;
        }
        uint64_t v9 = -10 * (BYTE1(v2) - 48) - (BYTE2(v2) - 48);
        if (v3 != 3)
        {
          if ((BYTE3(v2) - 48) <= 9u)
          {
            uint64_t v9 = 10 * (int)v9 - (BYTE3(v2) - 48);
            uint64_t v19 = v3 - 4;
            if (v3 != 4)
            {
              unsigned int v20 = (unsigned __int8 *)v25 + 4;
              while (1)
              {
                unsigned int v21 = *v20 - 48;
                if (v21 > 9) {
                  goto LABEL_34;
                }
                uint64_t v22 = 10 * v9;
                if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v9 = v22 - v21;
                if (__OFSUB__(v22, v21)) {
                  goto LABEL_34;
                }
                LOBYTE(v3) = 0;
                ++v20;
                if (!--v19) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v9 = 0;
          LOBYTE(v3) = 1;
          goto LABEL_37;
        }
LABEL_36:
        LOBYTE(v3) = 0;
        goto LABEL_37;
      }
      goto LABEL_69;
    }
    __break(1u);
LABEL_71:
    __break(1u);
    JUMPOUT(0x1A7390D54);
  }
  if (!v3) {
    goto LABEL_71;
  }
  if (v3 != 1)
  {
    if ((BYTE1(v2) - 48) > 9u) {
      goto LABEL_34;
    }
    uint64_t v9 = (BYTE1(v2) - 48);
    if (v3 != 2)
    {
      if ((BYTE2(v2) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v9 = 10 * (BYTE1(v2) - 48) + (BYTE2(v2) - 48);
      if (v3 != 3)
      {
        if ((BYTE3(v2) - 48) > 9u) {
          goto LABEL_34;
        }
        uint64_t v9 = 10 * v9 + (BYTE3(v2) - 48);
        uint64_t v10 = v3 - 4;
        if (v3 != 4)
        {
          uint64_t v11 = (unsigned __int8 *)v25 + 4;
          while (1)
          {
            unsigned int v12 = *v11 - 48;
            if (v12 > 9) {
              goto LABEL_34;
            }
            uint64_t v13 = 10 * v9;
            if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
              goto LABEL_34;
            }
            uint64_t v9 = v13 + v12;
            if (__OFADD__(v13, v12)) {
              goto LABEL_34;
            }
            LOBYTE(v3) = 0;
            ++v11;
            if (!--v10) {
              goto LABEL_37;
            }
          }
        }
      }
    }
    goto LABEL_36;
  }
LABEL_69:
  uint64_t v9 = 0;
LABEL_37:
  if (v3) {
    return 0x296C696E28;
  }
LABEL_38:
  uint64_t result = 0x7961646E7553;
  switch(v9)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 0x7961646E6F4DLL;
      break;
    case 3:
      uint64_t result = 0x79616473657554;
      break;
    case 4:
      uint64_t result = 0x616473656E646557;
      break;
    case 5:
      uint64_t result = 0x7961647372756854;
      break;
    case 6:
      uint64_t result = 0x796164697246;
      break;
    case 7:
      uint64_t result = 0x7961647275746153;
      break;
    default:
      return 0x296C696E28;
  }
  return result;
}

void REMSuggestedWeekDay.__allocating_init(_:)()
{
}

void REMSuggestedWeekDay.init(_:)()
{
}

uint64_t static REMSuggestedList.defaultValue.getter()
{
  return swift_initStaticObject();
}

uint64_t REMSuggestedList.CodingKeys.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7392584(a1);
}

uint64_t REMSuggestedList.CodingKeys.init(stringValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7392584(a1);
}

void REMSuggestedList.CodingKeys.init(intValue:)(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t REMSuggestedList.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedList.CodingKeys.rawValue.getter()
{
  return 0x64497373616C63;
}

uint64_t REMSuggestedList.CodingKeys.stringValue.getter()
{
  return 0x64497373616C63;
}

uint64_t sub_1A7390E30@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398E14(a1);
}

void sub_1A7390E3C(void *a1@<X8>)
{
  *a1 = 0x64497373616C63;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1A7390E58@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398EAC(a1);
}

uint64_t sub_1A7390E64(uint64_t a1)
{
  unint64_t v2 = sub_1A73A4B28();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7390EA0(uint64_t a1)
{
  unint64_t v2 = sub_1A73A4B28();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedList.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMSuggestedList.listIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMSuggestedList.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = sub_1A7571BC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v18 - v10;
  id v12 = objc_msgSend(a1, sel_objectID);
  id v13 = objc_msgSend(v12, sel_uuid);

  sub_1A7571BB0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  sub_1A72BF1E8((uint64_t)v11, (uint64_t)v9, &qword_1EB704C40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    sub_1A72CB560((uint64_t)v11, &qword_1EB704C40);
    sub_1A72CB560((uint64_t)v9, &qword_1EB704C40);
    unint64_t v14 = 0xE500000000000000;
    uint64_t v15 = 0x296C696E28;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    uint64_t v15 = sub_1A7571B80();
    unint64_t v14 = v16;
    sub_1A72CB560((uint64_t)v11, &qword_1EB704C40);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v15;
  *(void *)(result + 24) = v14;
  return result;
}

uint64_t sub_1A73911B0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704070);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73A4B28();
  sub_1A7574190();
  if (!v2)
  {
    uint64_t v10 = sub_1A7573A00();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v10;
    *(void *)(v3 + 24) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t REMSuggestedList.isValid.getter()
{
  if (*(void *)(v0 + 16) == *(void *)aNil && *(void *)(v0 + 24) == unk_1E96F0978) {
    char v2 = 0;
  }
  else {
    char v2 = sub_1A7573DB0() ^ 1;
  }
  return v2 & 1;
}

void REMSuggestedList.__allocating_init(_:)()
{
}

void REMSuggestedList.init(_:)()
{
}

uint64_t REMSuggestedList.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

void *sub_1A73913F8()
{
  type metadata accessor for REMSuggestedContact();
  uint64_t result = (void *)swift_allocObject();
  result[4] = 0;
  result[5] = 0xE000000000000000;
  result[2] = 0x296C696E28;
  result[3] = 0xE500000000000000;
  qword_1EB6FFDD8 = (uint64_t)result;
  return result;
}

void *REMSuggestedContact.__allocating_init(stringLiteral:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = (void *)swift_allocObject();
  if (a1 == 0x296C696E28 && a2 == 0xE500000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    v4[4] = 0;
    v4[5] = 0xE000000000000000;
  }
  else
  {
    id v5 = _sSo24REMContactRepresentationC19ReminderKitInternalE5parse4fromABSgSS_tFZ_0(a1, a2);
    if (v5)
    {
      uint64_t v6 = v5;
      REMContactRepresentation.quickName.getter();
      uint64_t v8 = v7;
      unint64_t v10 = v9;
      swift_retain();
    }
    else
    {
      swift_retain();
      uint64_t v8 = 0;
      unint64_t v10 = 0xE000000000000000;
    }
    v4[4] = v8;
    v4[5] = v10;
    swift_release();
  }
  v4[2] = a1;
  v4[3] = a2;
  return v4;
}

uint64_t static REMSuggestedContact.defaultValue.getter()
{
  if (qword_1EB6FFE00 != -1) {
    swift_once();
  }

  return swift_retain();
}

ReminderKitInternal::REMSuggestedContact::CodingKeys_optional __swiftcall REMSuggestedContact.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  uint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *char v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedContact::CodingKeys_optional __swiftcall REMSuggestedContact.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  char v2 = v1;
  uint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  if (v3)
  {
    if (v3 == 1) {
      char v5 = 1;
    }
    else {
      char v5 = 2;
    }
  }
  else
  {
    char v5 = 0;
  }
  *char v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedContact::CodingKeys_optional __swiftcall REMSuggestedContact.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  *uint64_t v1 = 2;
  return (ReminderKitInternal::REMSuggestedContact::CodingKeys_optional)intValue;
}

uint64_t REMSuggestedContact.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedContact.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 0x64497373616C63;
  }
}

uint64_t REMSuggestedContact.CodingKeys.stringValue.getter()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 0x64497373616C63;
  }
}

uint64_t sub_1A73916E0(char *a1, char *a2)
{
  return sub_1A7544458(*a1, *a2);
}

uint64_t sub_1A73916EC()
{
  return sub_1A7574110();
}

uint64_t sub_1A7391768()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A73917D0()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMSuggestedContact::CodingKeys_optional sub_1A7391848(Swift::String *a1)
{
  return REMSuggestedContact.CodingKeys.init(rawValue:)(*a1);
}

void sub_1A7391854(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701667182;
  if (!*v1) {
    uint64_t v2 = 0x64497373616C63;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A739188C()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 0x64497373616C63;
  }
}

uint64_t sub_1A73918C4(uint64_t a1)
{
  unint64_t v2 = sub_1A73A4AD4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7391900(uint64_t a1)
{
  unint64_t v2 = sub_1A73A4AD4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedContact.shortDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

Swift::String *REMSuggestedContact.__allocating_init(_:)(void *a1)
{
  swift_allocObject();
  unint64_t v2 = sub_1A739F674(a1);

  return v2;
}

Swift::String *REMSuggestedContact.init(_:)(void *a1)
{
  unint64_t v2 = sub_1A739F674(a1);

  return v2;
}

void REMContactRepresentation.quickName.getter()
{
  id v1 = objc_msgSend(v0, sel_phones);
  uint64_t v2 = sub_1A7572A10();

  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRelease();
  if (v3)
  {
    id v4 = objc_msgSend(v0, sel_phones);
    uint64_t v5 = sub_1A7572A10();

    if (*(void *)(v5 + 16)) {
      goto LABEL_6;
    }
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  id v6 = objc_msgSend(v0, sel_emails);
  uint64_t v7 = sub_1A7572A10();

  uint64_t v8 = *(void *)(v7 + 16);
  swift_bridgeObjectRelease();
  if (v8)
  {
    id v9 = objc_msgSend(v0, sel_emails);
    uint64_t v10 = sub_1A7572A10();

    if (*(void *)(v10 + 16))
    {
LABEL_6:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_9;
  }
}

Swift::String __swiftcall REMContactRepresentation.parsableString()()
{
  id v1 = v0;
  v39[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1A7572660();
  MEMORY[0x1F4188790](v2 - 8);
  id v3 = objc_msgSend(v0, sel_phones);
  uint64_t v4 = sub_1A7572A10();

  uint64_t v5 = *(void *)(v4 + 16);
  swift_bridgeObjectRelease();
  id v6 = (void *)MEMORY[0x1E4FBC868];
  if (v5)
  {
    id v7 = objc_msgSend(v1, sel_phones);
    uint64_t v8 = sub_1A7572A10();

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v39[0] = v6;
    sub_1A72D6A40(v8, 0x73656E6F6870, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  id v10 = objc_msgSend(v1, sel_emails);
  uint64_t v11 = sub_1A7572A10();

  uint64_t v12 = *(void *)(v11 + 16);
  swift_bridgeObjectRelease();
  if (v12)
  {
    id v13 = objc_msgSend(v1, sel_emails);
    uint64_t v14 = sub_1A7572A10();

    char v15 = swift_isUniquelyReferenced_nonNull_native();
    v39[0] = v6;
    sub_1A72D6A40(v14, 0x6C69616D65, 0xE500000000000000, v15);
    swift_bridgeObjectRelease();
  }
  if (!v6[2])
  {
    uint64_t v25 = 7104878;
    swift_bridgeObjectRelease();
LABEL_17:
    unint64_t v26 = 0xE300000000000000;
    goto LABEL_18;
  }
  unint64_t v16 = self;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  unsigned int v17 = (void *)sub_1A75723D0();
  swift_bridgeObjectRelease();
  v39[0] = 0;
  id v18 = objc_msgSend(v16, sel_dataWithJSONObject_options_error_, v17, 0, v39);

  id v19 = v39[0];
  if (!v18)
  {
    unint64_t v27 = v19;
    uint64_t v28 = (void *)sub_1A7571850();

    swift_willThrow();
    if (qword_1E96F0768 != -1) {
      swift_once();
    }
    uint64_t v25 = 7104878;
    uint64_t v29 = sub_1A7571E90();
    __swift_project_value_buffer(v29, (uint64_t)qword_1E96F24D0);
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1A7571E80();
    os_log_type_t v31 = sub_1A7572FD0();
    if (os_log_type_enabled(v30, v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      unint64_t v33 = (void *)swift_slowAlloc();
      v39[0] = v33;
      *(_DWORD *)unint64_t v32 = 136315138;
      uint64_t v34 = sub_1A7572400();
      sub_1A72D1730(v34, v35, (uint64_t *)v39);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v30, v31, "Failed to convert contact {%s} to string", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v33, -1, -1);
      MEMORY[0x1AD0CD330](v32, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1A7571A20();
  unint64_t v22 = v21;

  sub_1A7572650();
  uint64_t v23 = sub_1A7572630();
  if (!v24)
  {
    uint64_t v25 = 7104878;
    sub_1A72E3460(v20, v22);
    goto LABEL_17;
  }
  uint64_t v25 = v23;
  unint64_t v26 = v24;
  sub_1A72E3460(v20, v22);
LABEL_18:
  uint64_t v36 = v25;
  uint64_t v37 = (void *)v26;
  result._object = v37;
  result._uint64_t countAndFlagsBits = v36;
  return result;
}

uint64_t sub_1A739205C(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1A73920AC(a1);
  return v2;
}

void *sub_1A73920AC(void *a1)
{
  id v3 = v1;
  uint64_t v18 = *v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7003F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73A4AD4();
  swift_retain();
  sub_1A7574190();
  if (v2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v6;
    char v20 = 0;
    uint64_t v10 = sub_1A7573A00();
    uint64_t v13 = v12;
    uint64_t v18 = v10;
    char v19 = 1;
    uint64_t v14 = sub_1A7573A00();
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    v3[4] = v14;
    v3[5] = v16;
    swift_release();
    v3[2] = v18;
    v3[3] = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

void *REMSuggestedContact.init(stringLiteral:)(uint64_t a1, unint64_t a2)
{
  id v3 = sub_1A739F5A0(a1, a2, v2);
  swift_release();
  return v3;
}

uint64_t REMSuggestedContact.isValid.getter()
{
  if (*(void *)(v0 + 16) == 0x296C696E28 && *(void *)(v0 + 24) == 0xE500000000000000) {
    char v2 = 0;
  }
  else {
    char v2 = sub_1A7573DB0() ^ 1;
  }
  return v2 & 1;
}

id REMSuggestedContact.contactRepresentation.getter()
{
  return _sSo24REMContactRepresentationC19ReminderKitInternalE5parse4fromABSgSS_tFZ_0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void REMSuggestedContact.__allocating_init(_:)()
{
}

void REMSuggestedContact.init(_:)()
{
}

uint64_t sub_1A73923D8()
{
  return swift_bridgeObjectRelease();
}

uint64_t REMSuggestedContact.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMSuggestedContact.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 48, 7);
}

uint64_t REMSuggestedLocation.LocationValue.description.getter()
{
  uint64_t v1 = *v0;
  if (!*((unsigned char *)v0 + 8))
  {
    uint64_t v2 = 0x682E657669727261;
    uint64_t v3 = 1701670760;
    uint64_t v4 = 1701670760;
    if (v1 == 2) {
      uint64_t v4 = 0x6F682E657661656CLL;
    }
    goto LABEL_7;
  }
  if (*((unsigned char *)v0 + 8) == 1)
  {
    uint64_t v2 = 0x772E657669727261;
    uint64_t v3 = 1802661751;
    uint64_t v4 = 1802661751;
    if (v1 == 2) {
      uint64_t v4 = 0x6F772E657661656CLL;
    }
LABEL_7:
    if (v1 != 1) {
      uint64_t v2 = v4;
    }
    if (v1) {
      return v2;
    }
    else {
      return v3;
    }
  }
  uint64_t v6 = 7496035;
  if (v1 != 1) {
    uint64_t v6 = 0x726568746FLL;
  }
  if (v1) {
    return v6;
  }
  else {
    return 0x296C696E28;
  }
}

uint64_t REMSuggestedLocation.CodingKeys.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7392584(a1);
}

uint64_t sub_1A7392584@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t REMSuggestedLocation.CodingKeys.init(stringValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7392584(a1);
}

uint64_t REMSuggestedLocation.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedLocation.CodingKeys.rawValue.getter()
{
  return 0x64497373616C63;
}

uint64_t REMSuggestedLocation.CodingKeys.stringValue.getter()
{
  return 0x64497373616C63;
}

uint64_t sub_1A7392620@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398E14(a1);
}

uint64_t sub_1A739262C@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398EAC(a1);
}

uint64_t sub_1A7392638(uint64_t a1)
{
  unint64_t v2 = sub_1A73A4A80();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7392674(uint64_t a1)
{
  unint64_t v2 = sub_1A73A4A80();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedLocation.__allocating_init(_:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (!*((unsigned char *)a1 + 8))
  {
    unint64_t v2 = 0xEB00000000656D6FLL;
    uint64_t v3 = 0x682E657669727261;
    uint64_t v4 = 1701670760;
    uint64_t v7 = 0x6F682E657661656CLL;
    unint64_t v8 = 0xEA0000000000656DLL;
    if (v1 != 2)
    {
      uint64_t v7 = 1701670760;
      unint64_t v8 = 0xE400000000000000;
    }
    if (v1 != 1)
    {
      uint64_t v3 = v7;
      unint64_t v2 = v8;
    }
    goto LABEL_11;
  }
  if (*((unsigned char *)a1 + 8) == 1)
  {
    unint64_t v2 = 0xEB000000006B726FLL;
    uint64_t v3 = 0x772E657669727261;
    uint64_t v4 = 1802661751;
    unint64_t v5 = 0xEA00000000006B72;
    uint64_t v6 = 0x6F772E657661656CLL;
    if (v1 != 2)
    {
      uint64_t v6 = 1802661751;
      unint64_t v5 = 0xE400000000000000;
    }
    if (v1 != 1)
    {
      uint64_t v3 = v6;
      unint64_t v2 = v5;
    }
LABEL_11:
    if (v1) {
      uint64_t v9 = v3;
    }
    else {
      uint64_t v9 = v4;
    }
    if (v1) {
      unint64_t v10 = v2;
    }
    else {
      unint64_t v10 = 0xE400000000000000;
    }
    goto LABEL_25;
  }
  unint64_t v11 = 0xE300000000000000;
  uint64_t v12 = 7496035;
  if (v1 != 1)
  {
    uint64_t v12 = 0x726568746FLL;
    unint64_t v11 = 0xE500000000000000;
  }
  if (v1) {
    uint64_t v9 = v12;
  }
  else {
    uint64_t v9 = 0x296C696E28;
  }
  if (v1) {
    unint64_t v10 = v11;
  }
  else {
    unint64_t v10 = 0xE500000000000000;
  }
LABEL_25:
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v9;
  *(void *)(result + 24) = v10;
  return result;
}

uint64_t REMSuggestedLocation.__allocating_init(stringLiteral:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t REMSuggestedLocation.init(stringLiteral:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t String.containsNameOfHomeLocation.getter()
{
  return sub_1A7392888();
}

uint64_t String.containsNameOfWorkLocation.getter()
{
  return sub_1A7392888();
}

uint64_t sub_1A7392888()
{
  return sub_1A75732F0() & 1;
}

uint64_t static REMSuggestedLocation.expectedLocation(of:)(void *a1)
{
  id v1 = objc_msgSend(a1, sel_alarms);
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1A72BEFEC(0, &qword_1E96F24E8);
    unint64_t v3 = sub_1A7572A10();

    uint64_t v4 = _s19ReminderKitInternal20REMSuggestedLocationC08expectedE02ofACSaySo8REMAlarmCG_tFZ_0(v3);
    swift_bridgeObjectRelease();
    return v4;
  }
  else
  {
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0x296C696E28;
    *(void *)(result + 24) = 0xE500000000000000;
  }
  return result;
}

uint64_t REMSuggestedLocation.isSpecificLocation.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  sub_1A72DF534();
  if ((sub_1A7573320() & 1) != 0 || (sub_1A7573320() & 1) != 0 || v1 == 7496035 && v2 == 0xE300000000000000) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1A7573DB0();
  }
  return v3 & 1;
}

uint64_t REMSuggestedLocation.isHome.getter()
{
  return sub_1A7392A8C();
}

uint64_t REMSuggestedLocation.isWork.getter()
{
  return sub_1A7392A8C();
}

uint64_t sub_1A7392A8C()
{
  return sub_1A7573320() & 1;
}

uint64_t sub_1A7392AE8(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1A7392B5C(a1, &qword_1EB704080, (void (*)(void))sub_1A73A4A80);
  return v2;
}

void *sub_1A7392B5C(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v6 = v3;
  uint64_t v19 = *v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v17 = *(void *)(v8 - 8);
  uint64_t v18 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A7574190();
  if (v4)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v12 = v17;
    uint64_t v11 = v18;
    uint64_t v14 = sub_1A7573A00();
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    id v6[2] = v14;
    v6[3] = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v6;
}

void REMSuggestedLocation.__allocating_init(_:)()
{
}

void REMSuggestedLocation.init(_:)()
{
}

void sub_1A7392D68()
{
}

uint64_t _s19ReminderKitInternal19REMSuggestedWeekDayCfD_0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t sub_1A7392DD0()
{
  id v1 = objc_msgSend(*v0, sel_name);
  uint64_t v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v2;
}

uint64_t Sequence<>.canonicalTagSet.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11[2] = a1;
  void v11[3] = a2;
  v11[4] = a3;
  uint64_t v8 = sub_1A72D9A0C((void (*)(char *, char *))sub_1A739FE70, (uint64_t)v11, a1, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], a2, MEMORY[0x1E4FBC278], a8);
  uint64_t v9 = sub_1A72E6AB4(v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1A7392EB8@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  unint64_t v22 = a2;
  uint64_t v21 = sub_1A7571500();
  uint64_t v3 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  unint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = v9(AssociatedTypeWitness, a1);
  uint64_t v13 = v12;
  sub_1A7571C80();
  uint64_t v14 = sub_1A7571D30();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 0, 1, v14);
  uint64_t v25 = v11;
  uint64_t v26 = v13;
  sub_1A72DF534();
  uint64_t v23 = sub_1A7573310();
  uint64_t v24 = v15;
  sub_1A75714D0();
  uint64_t v16 = sub_1A75732B0();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  swift_bridgeObjectRelease();
  sub_1A72CB560((uint64_t)v8, &qword_1EB6FFDE8);
  uint64_t result = swift_bridgeObjectRelease();
  char v20 = v22;
  *unint64_t v22 = v16;
  v20[1] = v18;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional __swiftcall REMSuggestedAttributeInput.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 12;
  if (v3 < 0xC) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional __swiftcall REMSuggestedAttributeInput.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  result.value = REMSuggestedAttributeInput.CodingKeys.init(rawValue:)(stringValue).value;
  *uint64_t v2 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional __swiftcall REMSuggestedAttributeInput.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  *id v1 = 12;
  return (ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributeInput.CodingKeys.allCases.getter()
{
  return &unk_1EFC8FAC0;
}

uint64_t REMSuggestedAttributeInput.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributeInput.CodingKeys.rawValue.getter()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7265646E696D6572;
      break;
    case 2:
      unsigned int v2 = 1634038371;
      goto LABEL_8;
    case 3:
      uint64_t result = 1953720684;
      break;
    case 4:
      uint64_t result = 0x664F796144657564;
      break;
    case 5:
      uint64_t result = 0x5465746144657564;
      break;
    case 6:
      unsigned int v2 = 1633906540;
LABEL_8:
      uint64_t result = v2 | 0x6E6F697400000000;
      break;
    case 7:
      uint64_t result = 0x64656767616C66;
      break;
    case 8:
      uint64_t result = 0x797469726F697270;
      break;
    case 9:
      uint64_t result = 1936154996;
      break;
    case 0xA:
      uint64_t result = 0x746361746E6F63;
      break;
    case 0xB:
      uint64_t result = 0x6E65727275636572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t REMSuggestedAttributeInput.CodingKeys.stringValue.getter()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7265646E696D6572;
      break;
    case 2:
      unsigned int v2 = 1634038371;
      goto LABEL_8;
    case 3:
      uint64_t result = 1953720684;
      break;
    case 4:
      uint64_t result = 0x664F796144657564;
      break;
    case 5:
      uint64_t result = 0x5465746144657564;
      break;
    case 6:
      unsigned int v2 = 1633906540;
LABEL_8:
      uint64_t result = v2 | 0x6E6F697400000000;
      break;
    case 7:
      uint64_t result = 0x64656767616C66;
      break;
    case 8:
      uint64_t result = 0x797469726F697270;
      break;
    case 9:
      uint64_t result = 1936154996;
      break;
    case 0xA:
      uint64_t result = 0x746361746E6F63;
      break;
    case 0xB:
      uint64_t result = 0x6E65727275636572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A7393498(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A7542F7C(*a1, *a2);
}

uint64_t sub_1A73934A4()
{
  return sub_1A7574110();
}

uint64_t sub_1A739350C()
{
  REMSuggestedAttributeInput.CodingKeys.rawValue.getter();
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7393570()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional sub_1A73935D4(Swift::String *a1)
{
  return REMSuggestedAttributeInput.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A73935E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = REMSuggestedAttributeInput.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional sub_1A739360C@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.value = REMSuggestedAttributeInput.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A7393644(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

void sub_1A7393650(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FAC0;
}

uint64_t sub_1A7393660(uint64_t a1)
{
  unint64_t v2 = sub_1A73A0BE4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A739369C(uint64_t a1)
{
  unint64_t v2 = sub_1A73A0BE4();

  return MEMORY[0x1F41862B0](a1, v2);
}

id REMSuggestedAttributeInput.reminderID.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t REMSuggestedAttributeInput.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_creationDate;
  uint64_t v4 = sub_1A7571B60();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t REMSuggestedAttributeInput.list.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInput.dueDayOfWeek.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInput.dueDateTime.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDateTime);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMSuggestedAttributeInput.location.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInput.flagged.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_flagged);
}

uint64_t REMSuggestedAttributeInput.priority.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_priority);
}

uint64_t REMSuggestedAttributeInput.tags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributeInput.contact.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInput.recurrence.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributeInput.__allocating_init(reminder:)(void *a1)
{
  swift_allocObject();
  uint64_t v2 = sub_1A739FEA8(a1);

  return v2;
}

uint64_t REMSuggestedAttributeInput.init(reminder:)(void *a1)
{
  uint64_t v2 = sub_1A739FEA8(a1);

  return v2;
}

uint64_t REMSuggestedAttributeInput.__allocating_init(reminderTitle:reminderID:list:creationDate:dueDayOfWeek:dueDateTime:location:flagged:priority:tags:contact:recurrence:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v19 = swift_allocObject();
  REMSuggestedAttributeInput.init(reminderTitle:reminderID:list:creationDate:dueDayOfWeek:dueDateTime:location:flagged:priority:tags:contact:recurrence:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 1, a13, a14, a15);
  return v19;
}

char *REMSuggestedAttributeInput.init(reminderTitle:reminderID:list:creationDate:dueDayOfWeek:dueDateTime:location:flagged:priority:tags:contact:recurrence:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16 = v15;
  uint64_t v57 = a7;
  unint64_t v58 = a8;
  uint64_t v60 = a6;
  uint64_t v61 = a5;
  id v54 = a3;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v20 - 8);
  unint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1A7571B60();
  uint64_t v23 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v56 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1A7571BC0();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v16 + 2) = a1;
  *((void *)v16 + 3) = a2;
  *(void *)&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_list] = a4;
  uint64_t v29 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  id v30 = objc_allocWithZone(v29);
  uint64_t v59 = a4;
  swift_retain();
  id v31 = v54;
  id v32 = objc_msgSend(v31, sel_uuid);
  sub_1A7571BB0();

  unint64_t v33 = (void *)sub_1A7571B90();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  id v34 = objc_msgSend(v31, sel_entityName);
  if (!v34)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    id v34 = (id)sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  v63.receiver = v30;
  v63.super_class = v29;
  id v35 = objc_msgSendSuper2(&v63, sel_initWithUUID_entityName_, v33, v34);

  *((void *)v16 + 4) = v35;
  sub_1A72BF1E8(v61, (uint64_t)v22, &qword_1EB704C60);
  uint64_t v36 = v55;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, v55) == 1)
  {
    uint64_t v37 = v56;
    sub_1A7571B50();
    sub_1A72CB560((uint64_t)v22, &qword_1EB704C60);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  }
  else
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    uint64_t v37 = v56;
    v38(v56, v22, v36);
  }
  uint64_t v39 = v60;
  v38(&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_creationDate], v37, v36);
  uint64_t v40 = v57;
  if (!v58) {
    uint64_t v40 = 0;
  }
  unint64_t v41 = 0xE000000000000000;
  if (v58) {
    unint64_t v41 = v58;
  }
  unint64_t v42 = &v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDateTime];
  *(void *)unint64_t v42 = v40;
  *((void *)v42 + 1) = v41;
  if (v39)
  {
    uint64_t v43 = v39;
  }
  else
  {
    type metadata accessor for REMSuggestedWeekDay();
    uint64_t v43 = swift_allocObject();
    uint64_t v62 = 0;
    *(void *)(v43 + 16) = sub_1A7573BC0();
    *(void *)(v43 + 24) = v44;
  }
  uint64_t v45 = a14;
  *(void *)&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDayOfWeek] = v43;
  if (a9)
  {
    uint64_t v46 = a9;
  }
  else
  {
    type metadata accessor for REMSuggestedLocation();
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = 0x296C696E28;
    *(void *)(v46 + 24) = 0xE500000000000000;
  }
  uint64_t v47 = a15;
  *(void *)&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_location] = v46;
  v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_flagged] = a10 & 1;
  if (a12) {
    a11 = 0;
  }
  *(void *)&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_priority] = a11;
  uint64_t v49 = MEMORY[0x1E4FBC870];
  if (a13) {
    uint64_t v50 = a13;
  }
  else {
    uint64_t v50 = MEMORY[0x1E4FBC870];
  }
  *(void *)&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_tags] = v50;
  if (a14)
  {
    swift_retain();
  }
  else
  {
    uint64_t v51 = qword_1EB6FFE00;
    swift_retain();
    swift_retain();
    if (v51 != -1) {
      swift_once();
    }
    uint64_t v45 = qword_1EB6FFDD8;
  }
  swift_retain();
  *(void *)&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_contact] = v45;

  swift_release();
  swift_release();
  swift_release();
  if (!a15) {
    uint64_t v47 = v49;
  }
  sub_1A72CB560(v61, &qword_1EB704C60);
  *(void *)&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_recurrence] = v47;
  return v16;
}

uint64_t REMSuggestedAttributeInput.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  REMSuggestedAttributeInput.init(from:)(a1);
  return v2;
}

uint64_t REMSuggestedAttributeInput.init(from:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A7571B60();
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704088);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73A0BE4();
  id v30 = v9;
  uint64_t v10 = v31;
  sub_1A7574190();
  if (v10)
  {
    swift_deallocPartialClassInstance();
    uint64_t v23 = (uint64_t)a1;
  }
  else
  {
    uint64_t v31 = v1;
    uint64_t v25 = v4;
    uint64_t v26 = a1;
    LOBYTE(v33) = 0;
    uint64_t v11 = sub_1A7573A00();
    uint64_t v12 = v31;
    *(void *)(v31 + 16) = v11;
    *(void *)(v12 + 24) = v13;
    type metadata accessor for REMObjectID_Codable();
    char v32 = 1;
    sub_1A73A0C38(&qword_1EB705A50, 255, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    sub_1A7573A50();
    *(void *)(v12 + 32) = v33;
    LOBYTE(v33) = 2;
    sub_1A73A0C38((unint64_t *)&unk_1EB704AE0, 255, MEMORY[0x1E4F27928]);
    uint64_t v14 = v25;
    sub_1A7573A50();
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v12 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_creationDate, v6, v14);
    type metadata accessor for REMSuggestedList();
    char v32 = 3;
    sub_1A73A0C38(&qword_1EB703E20, v15, (void (*)(uint64_t))type metadata accessor for REMSuggestedList);
    v24[1] = 0;
    sub_1A7573A50();
    *(void *)(v12 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_list) = v33;
    LOBYTE(v33) = 5;
    uint64_t v16 = sub_1A7573A00();
    uint64_t v17 = (uint64_t *)(v12 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDateTime);
    *uint64_t v17 = v16;
    v17[1] = v18;
    type metadata accessor for REMSuggestedWeekDay();
    char v32 = 4;
    sub_1A73A0C38(&qword_1EB703F40, v19, (void (*)(uint64_t))type metadata accessor for REMSuggestedWeekDay);
    sub_1A7573A50();
    *(void *)(v12 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDayOfWeek) = v33;
    type metadata accessor for REMSuggestedLocation();
    char v32 = 6;
    sub_1A73A0C38(&qword_1EB703F68, v20, (void (*)(uint64_t))type metadata accessor for REMSuggestedLocation);
    sub_1A7573A50();
    *(void *)(v12 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_location) = v33;
    LOBYTE(v33) = 7;
    *(unsigned char *)(v12 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_flagged) = sub_1A7573A10() & 1;
    LOBYTE(v33) = 8;
    *(void *)(v12 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_priority) = sub_1A7573A40();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
    char v32 = 9;
    sub_1A7360318(&qword_1EB704C68);
    sub_1A7573A50();
    *(void *)(v31 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_tags) = v33;
    type metadata accessor for REMSuggestedContact();
    char v32 = 10;
    sub_1A73A0C38(&qword_1EB700210, v22, (void (*)(uint64_t))type metadata accessor for REMSuggestedContact);
    sub_1A7573A50();
    *(void *)(v31 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_contact) = v33;
    char v32 = 11;
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v29);
    uint64_t v2 = v31;
    *(void *)(v31 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_recurrence) = v33;
    uint64_t v23 = (uint64_t)v26;
  }
  __swift_destroy_boxed_opaque_existential_1(v23);
  return v2;
}

uint64_t REMSuggestedAttributeInput.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A7571BC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_1A7573560();
  sub_1A7572740();
  id v6 = objc_msgSend(*(id *)(v0 + 32), sel_uuid);
  sub_1A7571BB0();

  sub_1A7571B80();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  sub_1A7571A60();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  swift_retain();
  REMSuggestedWeekDay.description.getter();
  sub_1A7572740();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  v8[1] = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_priority);
  sub_1A7573BC0();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  sub_1A7572C90();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  sub_1A7572C90();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  return v9;
}

uint64_t REMSuggestedAttributeInput.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703D00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73A0BE4();
  sub_1A75741B0();
  LOBYTE(v15) = 0;
  sub_1A7573B10();
  if (!v2)
  {
    uint64_t v15 = *(void *)(v3 + 32);
    HIBYTE(v14) = 1;
    type metadata accessor for REMObjectID_Codable();
    sub_1A73A0C38(&qword_1EB704E40, 255, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    sub_1A7573B60();
    LOBYTE(v15) = 2;
    sub_1A7571B60();
    sub_1A73A0C38(&qword_1EB704C38, 255, MEMORY[0x1E4F27928]);
    sub_1A7573B60();
    uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_list);
    HIBYTE(v14) = 3;
    type metadata accessor for REMSuggestedList();
    sub_1A73A0C38(&qword_1EB7035D0, v9, (void (*)(uint64_t))type metadata accessor for REMSuggestedList);
    sub_1A7573B60();
    LOBYTE(v15) = 5;
    sub_1A7573B10();
    uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDayOfWeek);
    HIBYTE(v14) = 4;
    type metadata accessor for REMSuggestedWeekDay();
    sub_1A73A0C38(&qword_1EB703690, v10, (void (*)(uint64_t))type metadata accessor for REMSuggestedWeekDay);
    sub_1A7573B60();
    uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_location);
    HIBYTE(v14) = 6;
    type metadata accessor for REMSuggestedLocation();
    sub_1A73A0C38(&qword_1EB7036A0, v11, (void (*)(uint64_t))type metadata accessor for REMSuggestedLocation);
    sub_1A7573B60();
    LOBYTE(v15) = 7;
    sub_1A7573B20();
    LOBYTE(v15) = 8;
    sub_1A7573B50();
    uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_tags);
    HIBYTE(v14) = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
    sub_1A7360318(&qword_1EB704C00);
    sub_1A7573B60();
    uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_contact);
    HIBYTE(v14) = 10;
    type metadata accessor for REMSuggestedContact();
    sub_1A73A0C38(qword_1EB6FFE08, v12, (void (*)(uint64_t))type metadata accessor for REMSuggestedContact);
    sub_1A7573B60();
    uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_recurrence);
    HIBYTE(v14) = 11;
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMSuggestedAttributeInput.deinit()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_creationDate;
  uint64_t v2 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMSuggestedAttributeInput.__deallocating_deinit()
{
  return sub_1A7396638((void (*)(void))REMSuggestedAttributeInput.deinit);
}

uint64_t sub_1A73953E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = REMSuggestedAttributeInput.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1A739543C(void *a1)
{
  return REMSuggestedAttributeInput.encode(to:)(a1);
}

uint64_t sub_1A7395464()
{
  return REMSuggestedAttributeInput.description.getter();
}

uint64_t sub_1A7395488(uint64_t *a1, uint64_t *a2)
{
  return _s19ReminderKitInternal26REMSuggestedAttributeInputC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1A7395494(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A73954F4()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A7395540(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A7395594())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A73955E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1A7395854(&OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_reminderIdentifier, MEMORY[0x1E4F27990], a1);
}

uint64_t sub_1A7395608(uint64_t a1)
{
  return sub_1A7395904(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_reminderIdentifier, MEMORY[0x1E4F27990]);
}

uint64_t (*sub_1A7395628())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A7395684@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a1 + *a2;
  swift_beginAccess();
  uint64_t v7 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a4, v6, v7);
}

uint64_t sub_1A7395718(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void *a6)
{
  uint64_t v9 = a5(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - v11, a1, v9);
  uint64_t v13 = *a2 + *a6;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v13, v12, v9);
  return swift_endAccess();
}

uint64_t sub_1A7395834@<X0>(uint64_t a1@<X8>)
{
  return sub_1A7395854(&OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate, MEMORY[0x1E4F27928], a1);
}

uint64_t sub_1A7395854@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *a1;
  swift_beginAccess();
  uint64_t v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t sub_1A73958E4(uint64_t a1)
{
  return sub_1A7395904(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate, MEMORY[0x1E4F27928]);
}

uint64_t sub_1A7395904(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *a2;
  swift_beginAccess();
  uint64_t v7 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v6, a1, v7);
  return swift_endAccess();
}

uint64_t (*sub_1A739599C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A73959F8()
{
  return sub_1A7395FEC();
}

uint64_t sub_1A7395A04(uint64_t a1)
{
  return sub_1A739618C(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_list, MEMORY[0x1E4FBC8D0]);
}

uint64_t (*sub_1A7395A24())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A7395A80(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_listName);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7395AEC()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_listName);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1A7395B44(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_listName);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A7395BA4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A7395C00()
{
  return sub_1A7395FEC();
}

uint64_t sub_1A7395C0C(uint64_t a1)
{
  return sub_1A739618C(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_dueDayOfWeek, MEMORY[0x1E4FBC8D0]);
}

uint64_t (*sub_1A7395C2C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A7395C88()
{
  return sub_1A7395FEC();
}

uint64_t sub_1A7395C94(uint64_t a1)
{
  return sub_1A739618C(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_location, MEMORY[0x1E4FBC8D0]);
}

uint64_t (*sub_1A7395CB4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A7395D10()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_flagged);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1A7395D58(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_flagged);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1A7395DA4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A7395E00()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_priority;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1A7395E48(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_priority);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1A7395E94())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A7395EF0()
{
  return sub_1A7396124();
}

uint64_t sub_1A7395EFC(uint64_t a1)
{
  return sub_1A739618C(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_tags, MEMORY[0x1E4FBC898]);
}

uint64_t (*sub_1A7395F1C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A7395F78(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)(*a2 + *a5);
  swift_beginAccess();
  *uint64_t v6 = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1A7395FE0()
{
  return sub_1A7395FEC();
}

uint64_t sub_1A7395FEC()
{
  return swift_retain();
}

uint64_t sub_1A7396034(uint64_t a1)
{
  return sub_1A739618C(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_contact, MEMORY[0x1E4FBC8D0]);
}

uint64_t (*sub_1A7396054())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A73960B0(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)(*a2 + *a5);
  swift_beginAccess();
  *uint64_t v6 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7396118()
{
  return sub_1A7396124();
}

uint64_t sub_1A7396124()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A739616C(uint64_t a1)
{
  return sub_1A739618C(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_recurrences, MEMORY[0x1E4FBC898]);
}

uint64_t sub_1A739618C(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = (uint64_t *)(v3 + *a2);
  swift_beginAccess();
  uint64_t v7 = *v6;
  *uint64_t v6 = a1;
  return a3(v7);
}

uint64_t (*sub_1A73961EC())()
{
  return j__swift_endAccess;
}

uint64_t REMSuggestedAttributeReminderDataSource.__allocating_init(title:reminderIdentifier:creationDate:list:listName:dueDayOfWeek:location:flagged:priority:tags:contact:recurrences:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v19 = swift_allocObject();
  REMSuggestedAttributeReminderDataSource.init(title:reminderIdentifier:creationDate:list:listName:dueDayOfWeek:location:flagged:priority:tags:contact:recurrences:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return v19;
}

uint64_t REMSuggestedAttributeReminderDataSource.init(title:reminderIdentifier:creationDate:list:listName:dueDayOfWeek:location:flagged:priority:tags:contact:recurrences:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v20 = v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_reminderIdentifier;
  uint64_t v21 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a3, v21);
  uint64_t v22 = v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate;
  uint64_t v23 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v22, a4, v23);
  *(void *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_list) = a5;
  uint64_t v24 = (void *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_listName);
  *uint64_t v24 = a6;
  v24[1] = a7;
  *(void *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_dueDayOfWeek) = a8;
  *(void *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_location) = a9;
  *(unsigned char *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_flagged) = a10;
  *(void *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_priority) = a11;
  *(void *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_tags) = a12;
  *(void *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_contact) = a13;
  *(void *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_recurrences) = a14;
  return v14;
}

uint64_t sub_1A73964A0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_list;
  swift_beginAccess();
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t REMSuggestedAttributeReminderDataSource.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_reminderIdentifier;
  uint64_t v2 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate;
  uint64_t v4 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMSuggestedAttributeReminderDataSource.__deallocating_deinit()
{
  return sub_1A7396638((void (*)(void))REMSuggestedAttributeReminderDataSource.deinit);
}

uint64_t sub_1A7396638(void (*a1)(void))
{
  a1();
  uint64_t v2 = *(unsigned int *)(*(void *)v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(*(void *)v1 + 52);

  return MEMORY[0x1F4186488](v1, v2, v3);
}

uint64_t REMSuggestedAttributeInputDataFrame.index.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributeInputDataFrame.title.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.reminderID.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.creationDate.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.list.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.dueDayOfWeek.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.location.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.flagged.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.priority.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.tags.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.recurrences.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.contact.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.size.getter()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t REMSuggestedAttributeInputDataFrame.init(reminderDataSourceArray:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v201 = sub_1A7571B60();
  unint64_t v209 = *(void *)(v201 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v201);
  uint64_t v198 = (char *)&v195 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v195 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v197 = (char *)&v195 - v11;
  uint64_t v12 = (void *)sub_1A7571BC0();
  unint64_t v13 = *(v12 - 1);
  MEMORY[0x1F4188790](v12);
  uint64_t v211 = (char *)&v195 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    int64_t v16 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (v16 < 0)
    {
      __break(1u);
      goto LABEL_117;
    }
  }
  else
  {
    int64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = sub_1A72D262C(0, v16);
  sub_1A7398264((uint64_t)v17, &v229);
  long long v199 = v229;
  if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  char v210 = v12;
  uint64_t v200 = (_OWORD *)a2;
  v202 = v10;
  unint64_t v204 = v13;
  if (v18)
  {
    uint64_t v228 = MEMORY[0x1E4FBC860];
    int64_t v205 = v18 & ~(v18 >> 63);
    uint64_t result = sub_1A72D2D00(0, v205, 0);
    if (v18 < 0) {
      goto LABEL_128;
    }
    uint64_t v20 = v228;
    unint64_t v212 = a1 & 0xC000000000000001;
    unint64_t v215 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v21 = 0;
      do
      {
        uint64_t v22 = MEMORY[0x1AD0CB800](v21, a1);
        swift_beginAccess();
        uint64_t v24 = *(void *)(v22 + 16);
        uint64_t v23 = *(void *)(v22 + 24);
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        uint64_t v228 = v20;
        unint64_t v26 = *(void *)(v20 + 16);
        unint64_t v25 = *(void *)(v20 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1A72D2D00(v25 > 1, v26 + 1, 1);
          uint64_t v20 = v228;
        }
        ++v21;
        *(void *)(v20 + 16) = v26 + 1;
        uint64_t v27 = v20 + 16 * v26;
        *(void *)(v27 + 32) = v24;
        *(void *)(v27 + 40) = v23;
      }
      while (v18 != v21);
    }
    else
    {
      uint64_t v29 = (uint64_t *)(a1 + 32);
      uint64_t v30 = v18;
      do
      {
        uint64_t v31 = *v29;
        swift_beginAccess();
        uint64_t v33 = *(void *)(v31 + 16);
        uint64_t v32 = *(void *)(v31 + 24);
        uint64_t v228 = v20;
        unint64_t v35 = *(void *)(v20 + 16);
        unint64_t v34 = *(void *)(v20 + 24);
        swift_bridgeObjectRetain();
        if (v35 >= v34 >> 1)
        {
          sub_1A72D2D00(v34 > 1, v35 + 1, 1);
          uint64_t v20 = v228;
        }
        *(void *)(v20 + 16) = v35 + 1;
        uint64_t v36 = v20 + 16 * v35;
        *(void *)(v36 + 32) = v33;
        *(void *)(v36 + 40) = v32;
        ++v29;
        --v30;
      }
      while (v30);
    }
    uint64_t v196 = v20;
    v226 = (void *)MEMORY[0x1E4FBC860];
    sub_1A75736F0();
    uint64_t v37 = self;
    uint64_t v38 = 0;
    id v203 = (void *)(a1 + 32);
    v207 = (void (**)(char *, uint64_t, void *))(v204 + 16);
    id v208 = v37;
    v206 = (void (**)(char *, void *))(v204 + 8);
    unint64_t v214 = a1;
    uint64_t v39 = v210;
    do
    {
      if (v212) {
        uint64_t v41 = MEMORY[0x1AD0CB800](v38, a1);
      }
      else {
        uint64_t v41 = swift_retain();
      }
      unint64_t v213 = v41;
      uint64_t v42 = v41 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_reminderIdentifier;
      swift_beginAccess();
      uint64_t v43 = v211;
      (*v207)(v211, v42, v39);
      uint64_t v44 = (void *)sub_1A7571B90();
      uint64_t v45 = *v206;
      (*v206)(v43, v39);
      id v46 = objc_msgSend(v208, sel_objectIDWithUUID_, v44);

      uint64_t v47 = (objc_class *)type metadata accessor for REMObjectID_Codable();
      id v48 = objc_allocWithZone(v47);
      id v49 = v46;
      id v50 = objc_msgSend(v49, sel_uuid);
      sub_1A7571BB0();

      uint64_t v51 = (void *)sub_1A7571B90();
      v45(v43, v39);
      id v52 = objc_msgSend(v49, sel_entityName);
      if (!v52)
      {
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        id v52 = (id)sub_1A75725E0();
        swift_bridgeObjectRelease();
      }
      ++v38;
      v227.receiver = v48;
      v227.super_class = v47;
      objc_msgSendSuper2(&v227, sel_initWithUUID_entityName_, v51, v52);
      swift_release();

      sub_1A75736C0();
      sub_1A7573700();
      sub_1A7573710();
      sub_1A75736D0();
      a1 = v214;
      unint64_t v40 = v215;
    }
    while (v215 != v38);
    id v208 = v226;
    uint64_t v225 = MEMORY[0x1E4FBC860];
    sub_1A72D2E08(0, v205, 0);
    uint64_t v53 = v225;
    id v54 = (void (**)(char *, uint64_t, uint64_t))(v209 + 16);
    unint64_t v213 = v209 + 32;
    uint64_t v55 = v198;
    if (v212)
    {
      uint64_t v56 = 0;
      uint64_t v57 = v201;
      unint64_t v58 = v197;
      do
      {
        uint64_t v59 = MEMORY[0x1AD0CB800](v56, v214)
            + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate;
        swift_beginAccess();
        (*v54)(v58, v59, v57);
        swift_unknownObjectRelease();
        uint64_t v225 = v53;
        unint64_t v61 = *(void *)(v53 + 16);
        unint64_t v60 = *(void *)(v53 + 24);
        if (v61 >= v60 >> 1)
        {
          sub_1A72D2E08(v60 > 1, v61 + 1, 1);
          uint64_t v53 = v225;
        }
        ++v56;
        *(void *)(v53 + 16) = v61 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v209 + 32))(v53+ ((*(unsigned __int8 *)(v209 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v209 + 80))+ *(void *)(v209 + 72) * v61, v58, v57);
      }
      while (v40 != v56);
    }
    else
    {
      uint64_t v62 = v203;
      unint64_t v63 = v40;
      uint64_t v64 = v201;
      do
      {
        uint64_t v65 = *v62 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate;
        swift_beginAccess();
        (*v54)(v55, v65, v64);
        uint64_t v225 = v53;
        unint64_t v67 = *(void *)(v53 + 16);
        unint64_t v66 = *(void *)(v53 + 24);
        if (v67 >= v66 >> 1)
        {
          sub_1A72D2E08(v66 > 1, v67 + 1, 1);
          uint64_t v64 = v201;
          uint64_t v53 = v225;
        }
        *(void *)(v53 + 16) = v67 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v209 + 32))(v53+ ((*(unsigned __int8 *)(v209 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v209 + 80))+ *(void *)(v209 + 72) * v67, v55, v64);
        ++v62;
        --v63;
        unint64_t v40 = v215;
      }
      while (v63);
    }
    unint64_t v213 = v53;
    uint64_t v224 = (void (**)(char *, uint64_t, void *))MEMORY[0x1E4FBC860];
    sub_1A75736F0();
    if (v212)
    {
      uint64_t v68 = 0;
      unint64_t v69 = v214;
      do
      {
        uint64_t v70 = v68 + 1;
        MEMORY[0x1AD0CB800]();
        swift_beginAccess();
        swift_retain();
        swift_unknownObjectRelease();
        sub_1A75736C0();
        sub_1A7573700();
        sub_1A7573710();
        sub_1A75736D0();
        uint64_t v68 = v70;
      }
      while (v40 != v70);
    }
    else
    {
      uint64_t v71 = v203;
      unint64_t v72 = v40;
      unint64_t v69 = v214;
      do
      {
        ++v71;
        swift_beginAccess();
        swift_retain();
        sub_1A75736C0();
        sub_1A7573700();
        sub_1A7573710();
        sub_1A75736D0();
        --v72;
      }
      while (v72);
    }
    v207 = v224;
    unint64_t v223 = MEMORY[0x1E4FBC860];
    sub_1A75736F0();
    if (v212)
    {
      uint64_t v73 = 0;
      do
      {
        uint64_t v74 = v73 + 1;
        MEMORY[0x1AD0CB800]();
        swift_beginAccess();
        swift_retain();
        swift_unknownObjectRelease();
        sub_1A75736C0();
        sub_1A7573700();
        sub_1A7573710();
        sub_1A75736D0();
        uint64_t v73 = v74;
      }
      while (v40 != v74);
    }
    else
    {
      uint64_t v75 = v203;
      unint64_t v76 = v40;
      do
      {
        ++v75;
        swift_beginAccess();
        swift_retain();
        sub_1A75736C0();
        sub_1A7573700();
        sub_1A7573710();
        sub_1A75736D0();
        --v76;
      }
      while (v76);
    }
    unint64_t v209 = v223;
    uint64_t v222 = (void (**)(char *, void *))MEMORY[0x1E4FBC860];
    sub_1A75736F0();
    if (v212)
    {
      uint64_t v77 = 0;
      do
      {
        uint64_t v78 = v77 + 1;
        MEMORY[0x1AD0CB800]();
        swift_beginAccess();
        swift_retain();
        swift_unknownObjectRelease();
        sub_1A75736C0();
        sub_1A7573700();
        sub_1A7573710();
        sub_1A75736D0();
        uint64_t v77 = v78;
      }
      while (v40 != v78);
    }
    else
    {
      uint64_t v79 = v203;
      unint64_t v80 = v40;
      do
      {
        ++v79;
        swift_beginAccess();
        swift_retain();
        sub_1A75736C0();
        sub_1A7573700();
        sub_1A7573710();
        sub_1A75736D0();
        --v80;
      }
      while (v80);
    }
    v206 = v222;
    uint64_t v221 = MEMORY[0x1E4FBC860];
    sub_1A72D2DE8(0, v205, 0);
    uint64_t v81 = v221;
    if (v212)
    {
      uint64_t v82 = 0;
      do
      {
        uint64_t v83 = (char *)(MEMORY[0x1AD0CB800](v82, v69)
                     + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_flagged);
        swift_beginAccess();
        char v84 = *v83;
        swift_unknownObjectRelease();
        uint64_t v221 = v81;
        unint64_t v86 = *(void *)(v81 + 16);
        unint64_t v85 = *(void *)(v81 + 24);
        if (v86 >= v85 >> 1)
        {
          sub_1A72D2DE8(v85 > 1, v86 + 1, 1);
          uint64_t v81 = v221;
        }
        ++v82;
        *(void *)(v81 + 16) = v86 + 1;
        *(unsigned char *)(v81 + v86 + 32) = v84;
      }
      while (v40 != v82);
    }
    else
    {
      unint64_t v87 = v203;
      unint64_t v88 = v40;
      do
      {
        uint64_t v89 = (char *)(*v87 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_flagged);
        swift_beginAccess();
        char v90 = *v89;
        uint64_t v221 = v81;
        uint64_t v91 = v81;
        unint64_t v92 = *(void *)(v81 + 16);
        unint64_t v93 = *(void *)(v91 + 24);
        if (v92 >= v93 >> 1)
        {
          sub_1A72D2DE8(v93 > 1, v92 + 1, 1);
          uint64_t v91 = v221;
        }
        *(void *)(v91 + 16) = v92 + 1;
        *(unsigned char *)(v91 + v92 + 32) = v90;
        ++v87;
        --v88;
        uint64_t v81 = v91;
      }
      while (v88);
    }
    uint64_t v201 = v81;
    uint64_t v220 = MEMORY[0x1E4FBC860];
    sub_1A72D2DC0(0, v205, 0);
    a2 = v220;
    if (v212)
    {
      uint64_t v94 = 0;
      do
      {
        uint64_t v95 = (uint64_t *)(MEMORY[0x1AD0CB800](v94, v69)
                        + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_priority);
        swift_beginAccess();
        uint64_t v96 = *v95;
        swift_unknownObjectRelease();
        uint64_t v220 = a2;
        unint64_t v98 = *(void *)(a2 + 16);
        unint64_t v97 = *(void *)(a2 + 24);
        if (v98 >= v97 >> 1)
        {
          sub_1A72D2DC0(v97 > 1, v98 + 1, 1);
          a2 = v220;
        }
        ++v94;
        *(void *)(a2 + 16) = v98 + 1;
        *(void *)(a2 + 8 * v98 + 32) = v96;
      }
      while (v40 != v94);
    }
    else
    {
      uint64_t v99 = v203;
      unint64_t v100 = v40;
      do
      {
        char v101 = (uint64_t *)(*v99 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_priority);
        swift_beginAccess();
        uint64_t v102 = *v101;
        uint64_t v220 = a2;
        unint64_t v104 = *(void *)(a2 + 16);
        unint64_t v103 = *(void *)(a2 + 24);
        if (v104 >= v103 >> 1)
        {
          sub_1A72D2DC0(v103 > 1, v104 + 1, 1);
          a2 = v220;
        }
        *(void *)(a2 + 16) = v104 + 1;
        *(void *)(a2 + 8 * v104 + 32) = v102;
        ++v99;
        --v100;
        unint64_t v40 = v215;
      }
      while (v100);
    }
    uint64_t v219 = (char *)MEMORY[0x1E4FBC860];
    sub_1A72D2DA0(0, v205, 0);
    uint64_t v10 = v219;
    if (v212)
    {
      uint64_t v105 = 0;
      do
      {
        uint64_t v106 = (uint64_t *)(MEMORY[0x1AD0CB800](v105, v214)
                         + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_tags);
        swift_beginAccess();
        uint64_t v107 = *v106;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        uint64_t v219 = v10;
        unint64_t v109 = *((void *)v10 + 2);
        unint64_t v108 = *((void *)v10 + 3);
        if (v109 >= v108 >> 1)
        {
          sub_1A72D2DA0(v108 > 1, v109 + 1, 1);
          uint64_t v10 = v219;
        }
        ++v105;
        *((void *)v10 + 2) = v109 + 1;
        *(void *)&v10[8 * v109 + 32] = v107;
      }
      while (v215 != v105);
    }
    else
    {
      uint64_t v110 = v203;
      do
      {
        uint64_t v111 = (uint64_t *)(*v110 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_tags);
        swift_beginAccess();
        uint64_t v112 = *v111;
        uint64_t v219 = v10;
        unint64_t v114 = *((void *)v10 + 2);
        unint64_t v113 = *((void *)v10 + 3);
        swift_bridgeObjectRetain();
        if (v114 >= v113 >> 1)
        {
          sub_1A72D2DA0(v113 > 1, v114 + 1, 1);
          uint64_t v10 = v219;
        }
        *((void *)v10 + 2) = v114 + 1;
        *(void *)&v10[8 * v114 + 32] = v112;
        ++v110;
        --v40;
      }
      while (v40);
    }
    v218 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v115 = v215;
    sub_1A75736F0();
    if (v212)
    {
      uint64_t v116 = 0;
      unint64_t v117 = v214;
      do
      {
        uint64_t v118 = v116 + 1;
        MEMORY[0x1AD0CB800]();
        swift_beginAccess();
        swift_retain();
        swift_unknownObjectRelease();
        sub_1A75736C0();
        sub_1A7573700();
        sub_1A7573710();
        sub_1A75736D0();
        uint64_t v116 = v118;
      }
      while (v215 != v118);
    }
    else
    {
      unint64_t v117 = v214;
      uint64_t v119 = v203;
      do
      {
        ++v119;
        swift_beginAccess();
        swift_retain();
        sub_1A75736C0();
        sub_1A7573700();
        sub_1A7573710();
        sub_1A75736D0();
        --v115;
      }
      while (v115);
    }
    id v203 = v218;
    *(void *)&long long v217 = MEMORY[0x1E4FBC860];
    sub_1A72D2DA0(0, v205, 0);
    uint64_t v2 = v217;
    if (v212)
    {
      uint64_t v120 = 0;
      do
      {
        unint64_t v121 = (uint64_t *)(MEMORY[0x1AD0CB800](v120, v117)
                         + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_recurrences);
        swift_beginAccess();
        uint64_t v122 = *v121;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        *(void *)&long long v217 = v2;
        unint64_t v124 = *(void *)(v2 + 16);
        unint64_t v123 = *(void *)(v2 + 24);
        if (v124 >= v123 >> 1)
        {
          sub_1A72D2DA0(v123 > 1, v124 + 1, 1);
          uint64_t v2 = v217;
        }
        ++v120;
        *(void *)(v2 + 16) = v124 + 1;
        *(void *)(v2 + 8 * v124 + 32) = v122;
        unint64_t v117 = v214;
      }
      while (v215 != v120);
    }
    else
    {
      uint64_t v125 = 0;
      do
      {
        uint64_t v126 = (uint64_t *)(*(void *)(v117 + 8 * v125 + 32)
                         + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_recurrences);
        swift_beginAccess();
        uint64_t v127 = *v126;
        *(void *)&long long v217 = v2;
        unint64_t v129 = *(void *)(v2 + 16);
        unint64_t v128 = *(void *)(v2 + 24);
        swift_bridgeObjectRetain();
        if (v129 >= v128 >> 1)
        {
          sub_1A72D2DA0(v128 > 1, v129 + 1, 1);
          uint64_t v2 = v217;
        }
        ++v125;
        *(void *)(v2 + 16) = v129 + 1;
        *(void *)(v2 + 8 * v129 + 32) = v127;
        unint64_t v117 = v214;
      }
      while (v215 != v125);
    }
    swift_bridgeObjectRelease();
    uint64_t v28 = v196;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = MEMORY[0x1E4FBC860];
    id v203 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
    a2 = MEMORY[0x1E4FBC860];
    uint64_t v201 = MEMORY[0x1E4FBC860];
    v206 = (void (**)(char *, void *))MEMORY[0x1E4FBC860];
    v207 = (void (**)(char *, uint64_t, void *))MEMORY[0x1E4FBC860];
    id v208 = (id)MEMORY[0x1E4FBC860];
    unint64_t v209 = MEMORY[0x1E4FBC860];
    unint64_t v213 = MEMORY[0x1E4FBC860];
    uint64_t v28 = MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F24F0);
  uint64_t v130 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F24F8);
  swift_allocObject();
  uint64_t v131 = swift_bridgeObjectRetain();
  uint64_t v132 = sub_1A73A0CC8(v131, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(v130 + 16) = v132;
  int64_t v133 = *(void *)(v28 + 16);
  swift_bridgeObjectRelease();
  id v134 = sub_1A72D262C(0, v133);
  sub_1A7398264((uint64_t)v134, &v217);
  *(_OWORD *)(v130 + 32) = v217;
  unint64_t v214 = v130;
  *(unsigned char *)(v130 + 24) = 1;
  id v135 = objc_msgSend(self, sel_newObjectID);
  uint64_t v136 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  id v137 = objc_allocWithZone(v136);
  unint64_t v13 = (unint64_t)v135;
  id v138 = objc_msgSend((id)v13, sel_uuid);
  id v139 = v211;
  sub_1A7571BB0();

  uint64_t v140 = (void *)sub_1A7571B90();
  (*(void (**)(char *, void *))(v204 + 8))(v139, v210);
  a1 = (unint64_t)objc_msgSend((id)v13, sel_entityName);
  if (!a1)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    a1 = sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  v216.receiver = v137;
  v216.super_class = v136;
  id v141 = objc_msgSendSuper2(&v216, sel_initWithUUID_entityName_, v140, a1);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2500);
  uint64_t v3 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2508);
  swift_allocObject();
  uint64_t v12 = v141;
  unint64_t v15 = (unint64_t)v208;
  unint64_t v142 = swift_bridgeObjectRetain();
  uint64_t v143 = sub_1A73A0E98(v142, (unint64_t)v12);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 16) = v143;
  if (!(v15 >> 62))
  {
    int64_t v144 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    goto LABEL_105;
  }
LABEL_117:
  swift_bridgeObjectRetain();
  int64_t v144 = sub_1A75738D0();
  swift_bridgeObjectRelease_n();
  if (v144 < 0)
  {
    __break(1u);
    goto LABEL_119;
  }
LABEL_105:
  unint64_t v13 = v209;
  uint64_t v145 = sub_1A72D262C(0, v144);
  sub_1A7398264((uint64_t)v145, &v217);

  *(_OWORD *)(v3 + 32) = v217;
  *(unsigned char *)(v3 + 24) = 1;
  uint64_t v146 = (uint64_t)v202;
  sub_1A7571B50();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2510);
  swift_allocObject();
  unint64_t v213 = sub_1A739D360(v213, v146);
  type metadata accessor for REMSuggestedList();
  uint64_t inited = swift_initStaticObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2518);
  a1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2520);
  unint64_t v15 = swift_allocObject();
  unint64_t v148 = (unint64_t)v207;
  unint64_t v149 = swift_bridgeObjectRetain();
  uint64_t v150 = sub_1A73A1D90(v149, inited, (void (*)(void))sub_1A72B6870, (unint64_t)sub_1A72BC568);
  swift_bridgeObjectRelease();
  unint64_t v215 = a1;
  *(void *)(a1 + 16) = v150;
  if (!(v148 >> 62))
  {
    int64_t v151 = *(void *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    goto LABEL_107;
  }
LABEL_119:
  swift_bridgeObjectRetain();
  int64_t v151 = sub_1A75738D0();
  swift_bridgeObjectRelease_n();
  if (v151 < 0)
  {
    __break(1u);
    goto LABEL_121;
  }
LABEL_107:
  unint64_t v15 = (unint64_t)v206;
  uint64_t v152 = sub_1A72D262C(0, v151);
  sub_1A7398264((uint64_t)v152, &v217);
  unint64_t v153 = v215;
  *(_OWORD *)(v215 + 32) = v217;
  *(unsigned char *)(v153 + 24) = 1;
  type metadata accessor for REMSuggestedWeekDay();
  uint64_t v154 = swift_allocObject();
  *(void *)&long long v217 = 0;
  *(void *)(v154 + 16) = sub_1A7573BC0();
  *(void *)(v154 + 24) = v155;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2528);
  a1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2530);
  swift_allocObject();
  swift_retain();
  unint64_t v156 = swift_bridgeObjectRetain();
  uint64_t v157 = sub_1A73A1D90(v156, v154, (void (*)(void))sub_1A72B6864, (unint64_t)sub_1A72BC55C);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v157;
  if (!(v13 >> 62))
  {
    int64_t v158 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    goto LABEL_109;
  }
LABEL_121:
  swift_bridgeObjectRetain();
  int64_t v158 = sub_1A75738D0();
  swift_bridgeObjectRelease_n();
  if (v158 < 0)
  {
    __break(1u);
    goto LABEL_123;
  }
LABEL_109:
  uint64_t v159 = sub_1A72D262C(0, v158);
  sub_1A7398264((uint64_t)v159, &v217);
  swift_release();
  *(_OWORD *)(a1 + 32) = v217;
  *(unsigned char *)(a1 + 24) = 1;
  type metadata accessor for REMSuggestedLocation();
  uint64_t v160 = swift_allocObject();
  *(void *)(v160 + 16) = 0x296C696E28;
  *(void *)(v160 + 24) = 0xE500000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2538);
  unint64_t v13 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2540);
  swift_allocObject();
  swift_retain();
  unint64_t v161 = swift_bridgeObjectRetain();
  uint64_t v162 = sub_1A73A1D90(v161, v160, (void (*)(void))sub_1A72B6858, (unint64_t)sub_1A72BC550);
  swift_bridgeObjectRelease();
  *(void *)(v13 + 16) = v162;
  uint64_t v211 = (char *)a1;
  unint64_t v212 = v3;
  if (!(v15 >> 62))
  {
    int64_t v163 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    goto LABEL_111;
  }
LABEL_123:
  swift_bridgeObjectRetain();
  int64_t v163 = sub_1A75738D0();
  swift_bridgeObjectRelease_n();
  if (v163 < 0)
  {
    __break(1u);
    goto LABEL_125;
  }
LABEL_111:
  uint64_t v164 = sub_1A72D262C(0, v163);
  sub_1A7398264((uint64_t)v164, &v217);
  swift_release();
  *(_OWORD *)(v13 + 32) = v217;
  char v210 = (void *)v13;
  *(unsigned char *)(v13 + 24) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2548);
  uint64_t v165 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2550);
  swift_allocObject();
  uint64_t v166 = v201;
  uint64_t v167 = swift_bridgeObjectRetain();
  uint64_t v168 = sub_1A73A187C(v167, 0);
  swift_bridgeObjectRelease();
  *(void *)(v165 + 16) = v168;
  int64_t v169 = *(void *)(v166 + 16);
  swift_bridgeObjectRelease();
  uint64_t v170 = sub_1A72D262C(0, v169);
  sub_1A7398264((uint64_t)v170, &v217);
  *(_OWORD *)(v165 + 32) = v217;
  unint64_t v209 = v165;
  *(unsigned char *)(v165 + 24) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2558);
  unint64_t v15 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2560);
  swift_allocObject();
  uint64_t v171 = swift_bridgeObjectRetain();
  uint64_t v172 = sub_1A73A1A30(v171, 0);
  swift_bridgeObjectRelease();
  *(void *)(v15 + 16) = v172;
  int64_t v173 = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  id v174 = sub_1A72D262C(0, v173);
  sub_1A7398264((uint64_t)v174, &v217);
  *(_OWORD *)(v15 + 32) = v217;
  *(unsigned char *)(v15 + 24) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2568);
  a2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2570);
  swift_allocObject();
  uint64_t v175 = swift_bridgeObjectRetain();
  uint64_t v176 = sub_1A73A1BE0(v175, MEMORY[0x1E4FBC870]);
  swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v176;
  int64_t v177 = *((void *)v10 + 2);
  swift_bridgeObjectRelease();
  v178 = sub_1A72D262C(0, v177);
  sub_1A7398264((uint64_t)v178, &v217);
  *(_OWORD *)(a2 + 32) = v217;
  *(unsigned char *)(a2 + 24) = 1;
  if (qword_1EB6FFE00 != -1) {
LABEL_125:
  }
    swift_once();
  uint64_t v179 = qword_1EB6FFDD8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2578);
  uint64_t v180 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2580);
  swift_allocObject();
  swift_retain_n();
  unint64_t v181 = (unint64_t)v203;
  unint64_t v182 = swift_bridgeObjectRetain();
  uint64_t v183 = sub_1A73A1D90(v182, v179, (void (*)(void))sub_1A72B6044, (unint64_t)sub_1A72BC07C);
  swift_bridgeObjectRelease();
  *(void *)(v180 + 16) = v183;
  if (!(v181 >> 62))
  {
    int64_t v184 = *(void *)((v181 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
LABEL_114:
    uint64_t v185 = sub_1A72D262C(0, v184);
    sub_1A7398264((uint64_t)v185, &v217);
    swift_release();
    *(_OWORD *)(v180 + 32) = v217;
    *(unsigned char *)(v180 + 24) = 1;
    uint64_t v186 = swift_allocObject();
    swift_allocObject();
    uint64_t v187 = swift_bridgeObjectRetain();
    uint64_t v188 = sub_1A73A1BE0(v187, MEMORY[0x1E4FBC870]);
    swift_bridgeObjectRelease();
    *(void *)(v186 + 16) = v188;
    int64_t v189 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease();
    v190 = sub_1A72D262C(0, v189);
    uint64_t result = sub_1A7398264((uint64_t)v190, &v217);
    *(_OWORD *)(v186 + 32) = v217;
    *(unsigned char *)(v186 + 24) = 1;
    v191 = v200;
    *uint64_t v200 = v199;
    unint64_t v192 = v212;
    v191[2] = v214;
    v191[3] = v192;
    unint64_t v193 = v215;
    v191[4] = v213;
    v191[5] = v193;
    uint64_t v194 = v210;
    v191[6] = v211;
    v191[7] = v194;
    v191[8] = v209;
    v191[9] = v15;
    v191[10] = a2;
    v191[11] = v186;
    v191[12] = v180;
    return result;
  }
  swift_bridgeObjectRetain();
  int64_t v184 = sub_1A75738D0();
  uint64_t result = swift_bridgeObjectRelease_n();
  if ((v184 & 0x8000000000000000) == 0) {
    goto LABEL_114;
  }
  __break(1u);
LABEL_128:
  __break(1u);
  return result;
}

uint64_t sub_1A7398264@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
LABEL_23:
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v5;
    a2[1] = v4;
    return result;
  }
  uint64_t v3 = (uint64_t *)(a1 + 32);
  uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v7 = *v3++;
    uint64_t v6 = v7;
    if (!v4[2]) {
      break;
    }
    sub_1A72B23E4(v6);
    if ((v8 & 1) == 0) {
      break;
    }
LABEL_4:
    if (!--v2) {
      goto LABEL_23;
    }
  }
  uint64_t v9 = v5[2];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v12 = sub_1A72B23E4(v6);
  uint64_t v13 = v4[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (!__OFADD__(v13, v14))
  {
    char v16 = v11;
    if (v4[3] < v15)
    {
      sub_1A72B6038(v15, isUniquelyReferenced_nonNull_native);
      unint64_t v17 = sub_1A72B23E4(v6);
      if ((v16 & 1) != (v18 & 1)) {
        goto LABEL_26;
      }
      unint64_t v12 = v17;
      if ((v16 & 1) == 0) {
        goto LABEL_16;
      }
LABEL_14:
      *(void *)(v4[7] + 8 * v12) = v9;
LABEL_18:
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_1A72AC37C(0, v5[2] + 1, 1, v5);
      }
      unint64_t v24 = v5[2];
      unint64_t v23 = v5[3];
      if (v24 >= v23 >> 1) {
        uint64_t v5 = sub_1A72AC37C((void *)(v23 > 1), v24 + 1, 1, v5);
      }
      uint64_t v5[2] = v24 + 1;
      v5[v24 + 4] = v6;
      goto LABEL_4;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v11) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1A72BC070();
      if (v16) {
        goto LABEL_14;
      }
    }
LABEL_16:
    v4[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v19 = 8 * v12;
    *(void *)(v4[6] + v19) = v6;
    *(void *)(v4[7] + v19) = v9;
    uint64_t v20 = v4[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_25;
    }
    v4[2] = v22;
    goto LABEL_18;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t REMSuggestedAttributeInputDataFrame.iloc(_:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1[9];
  v23[0] = v1[8];
  v23[1] = v6;
  uint64_t v7 = v1[10];
  v23[4] = v1[11];
  uint64_t v8 = v1[12];
  void v23[2] = v7;
  void v23[3] = v8;
  uint64_t v9 = sub_1A73A2054(a1);
  uint64_t v25 = v10;
  uint64_t v26 = v9;
  char v11 = (void *)sub_1A739D640(a1);
  uint64_t v12 = sub_1A739D640(a1);
  swift_bridgeObjectRetain();
  id v24 = v11;
  swift_retain();
  sub_1A739D4B4(a1, (uint64_t)v5);
  uint64_t v13 = sub_1A7571B60();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 0, 1, v13);
  uint64_t v14 = sub_1A739D640(a1);
  uint64_t v15 = sub_1A739D640(a1);
  char v16 = sub_1A739D58C(a1) & 1;
  uint64_t v17 = sub_1A739D640(a1);
  uint64_t v18 = sub_1A739D640(a1);
  uint64_t v19 = sub_1A739D640(a1);
  uint64_t v20 = sub_1A739D640(a1);
  type metadata accessor for REMSuggestedAttributeInput(0);
  uint64_t v21 = swift_allocObject();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  REMSuggestedAttributeInput.init(reminderTitle:reminderID:list:creationDate:dueDayOfWeek:dueDateTime:location:flagged:priority:tags:contact:recurrence:)(v26, v25, v24, v12, (uint64_t)v5, v14, 0, 0, v15, v16, v17, 0, v18, v19, v20);
  return v21;
}

uint64_t REMSuggestedAttributeInputDataFrame.iloc(index:)@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1A739D6F0(v3, v4, &qword_1E96F24F0);
  uint64_t v14 = sub_1A739D6F0(v3, v4, &qword_1E96F2500);
  uint64_t v13 = sub_1A739D6F0(v3, v4, &qword_1E96F2510);
  uint64_t v12 = sub_1A739D6F0(v3, v4, &qword_1E96F2518);
  uint64_t v11 = sub_1A739D6F0(v3, v4, &qword_1E96F2528);
  uint64_t v5 = sub_1A739D6F0(v3, v4, &qword_1E96F2538);
  uint64_t v6 = sub_1A739D6F0(v3, v4, &qword_1E96F2548);
  uint64_t v7 = sub_1A739D6F0(v3, v4, &qword_1E96F2558);
  uint64_t v8 = sub_1A739D6F0(v3, v4, &qword_1E96F2568);
  uint64_t v9 = sub_1A739D6F0(v3, v4, &qword_1E96F2578);
  uint64_t result = sub_1A739D6F0(v3, v4, &qword_1E96F2568);
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v15;
  a2[3] = v14;
  a2[4] = v13;
  a2[5] = v12;
  a2[6] = v11;
  a2[7] = v5;
  a2[8] = v6;
  a2[9] = v7;
  a2[10] = v8;
  a2[11] = result;
  a2[12] = v9;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeOutput::Pipeline_optional __swiftcall REMSuggestedAttributeOutput.Pipeline.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static REMSuggestedAttributeOutput.Pipeline.allCases.getter()
{
  return &unk_1EFC8FAF0;
}

uint64_t REMSuggestedAttributeOutput.Pipeline.rawValue.getter()
{
  uint64_t result = 0x5079726575516C6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 5131883;
      break;
    case 2:
      uint64_t result = 0x6168654265726F63;
      break;
    case 3:
      uint64_t result = 0x6974736972756568;
      break;
    case 4:
      uint64_t result = 0x6465726F68636E61;
      break;
    case 5:
      uint64_t result = 0x6867696C746F7073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A7398A08(unsigned __int8 *a1, char *a2)
{
  return sub_1A7540500(*a1, *a2);
}

uint64_t sub_1A7398A14()
{
  return sub_1A750187C();
}

uint64_t sub_1A7398A1C()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7398B3C()
{
  return sub_1A7503BF4();
}

ReminderKitInternal::REMSuggestedAttributeOutput::Pipeline_optional sub_1A7398B44(Swift::String *a1)
{
  return REMSuggestedAttributeOutput.Pipeline.init(rawValue:)(*a1);
}

void sub_1A7398B50(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xED00007265737261;
  uint64_t v3 = 0x5079726575516C6ELL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 5131883;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "coreBehavior");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0x6974736972756568;
      *(void *)(a1 + 8) = 0xE900000000000063;
      break;
    case 4:
      strcpy((char *)a1, "anchoredBubble");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 5:
      *(void *)a1 = 0x6867696C746F7073;
      *(void *)(a1 + 8) = 0xE900000000000074;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1A7398C50()
{
  return sub_1A75729D0();
}

uint64_t sub_1A7398CB0()
{
  return sub_1A7572980();
}

void sub_1A7398D00(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FAF0;
}

uint64_t REMSuggestedAttributeOutput.Source.predictors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A7398D18()
{
  return sub_1A7398D34();
}

uint64_t sub_1A7398D34()
{
  return sub_1A7574110();
}

uint64_t sub_1A7398D84()
{
  return sub_1A75726F0();
}

uint64_t sub_1A7398DA0()
{
  return sub_1A7398DBC();
}

uint64_t sub_1A7398DBC()
{
  return sub_1A7574110();
}

uint64_t sub_1A7398E08@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398E14(a1);
}

uint64_t sub_1A7398E14@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A7398E64(void *a1@<X8>)
{
  *a1 = 0x6F74636964657270;
  a1[1] = 0xEA00000000007372;
}

uint64_t sub_1A7398E84()
{
  return 0x6F74636964657270;
}

uint64_t sub_1A7398EA0@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398EAC(a1);
}

uint64_t sub_1A7398EAC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1A7398F00(uint64_t a1)
{
  unint64_t v2 = sub_1A73A2128();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7398F3C(uint64_t a1)
{
  unint64_t v2 = sub_1A73A2128();

  return MEMORY[0x1F41862B0](a1, v2);
}

ReminderKitInternal::REMSuggestedAttributeOutput::Source __swiftcall REMSuggestedAttributeOutput.Source.init(_:)(ReminderKitInternal::REMSuggestedAttributeOutput::Source result)
{
  v1->predictors._unint64_t rawValue = result.predictors._rawValue;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeOutput::Source __swiftcall REMSuggestedAttributeOutput.Source.init(pipeline:predictor:)(ReminderKitInternal::REMSuggestedAttributeOutput::Pipeline pipeline, Swift::String predictor)
{
  object = predictor._object;
  uint64_t countAndFlagsBits = predictor._countAndFlagsBits;
  char v5 = v2;
  char v6 = *(unsigned char *)pipeline;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
  *(unsigned char *)(inited + 32) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
  uint64_t v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A75785A0;
  *(void *)(v8 + 32) = countAndFlagsBits;
  *(void *)(v8 + 40) = object;
  uint64_t v9 = sub_1A72E6AB4(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  *(void *)(inited + 40) = v9;
  result.predictors._unint64_t rawValue = (void *)sub_1A72B0BB8(inited);
  v5->predictors._unint64_t rawValue = result.predictors._rawValue;
  return result;
}

uint64_t REMSuggestedAttributeOutput.Source.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700410);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73A2128();
  sub_1A7574190();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701AC8);
    sub_1A73A217C();
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t REMSuggestedAttributeOutput.Source.description.getter()
{
  return sub_1A73991FC(0);
}

uint64_t sub_1A73991FC(char a1)
{
  uint64_t v2 = *v1;
  if (!*(void *)(*v1 + 16)) {
    goto LABEL_39;
  }
  sub_1A72B2288(0);
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    if (!*(void *)(v2 + 16)) {
      goto LABEL_39;
    }
    goto LABEL_9;
  }
  uint64_t v5 = sub_1A72AC148(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v7 = v5[2];
  unint64_t v6 = v5[3];
  if (v7 >= v6 >> 1) {
    uint64_t v5 = sub_1A72AC148((void *)(v6 > 1), v7 + 1, 1, v5);
  }
  uint64_t v5[2] = v7 + 1;
  uint64_t v8 = (char *)&v5[2 * v7];
  strcpy(v8 + 32, "nlQueryParser");
  *((_WORD *)v8 + 23) = -4864;
  if (*(void *)(v2 + 16))
  {
LABEL_9:
    sub_1A72B2288(1u);
    if (v9)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_1A72AC148(0, v5[2] + 1, 1, v5);
      }
      unint64_t v11 = v5[2];
      unint64_t v10 = v5[3];
      if (v11 >= v10 >> 1) {
        uint64_t v5 = sub_1A72AC148((void *)(v10 > 1), v11 + 1, 1, v5);
      }
      uint64_t v5[2] = v11 + 1;
      uint64_t v12 = &v5[2 * v11];
      v12[4] = 5131883;
      v12[5] = 0xE300000000000000;
    }
    if (*(void *)(v2 + 16))
    {
      sub_1A72B2288(2u);
      if (v13)
      {
        uint64_t v14 = 0x6168654265726F63;
        if (a1)
        {
          strcpy((char *)v33, "coreBehavior:");
          HIWORD(v33[1]) = -4864;
          swift_bridgeObjectRetain();
          sub_1A7572C90();
          swift_bridgeObjectRelease();
          sub_1A7572740();
          swift_bridgeObjectRelease();
          uint64_t v14 = v33[0];
          unint64_t v15 = v33[1];
        }
        else
        {
          unint64_t v15 = 0xEC000000726F6976;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_1A72AC148(0, v5[2] + 1, 1, v5);
        }
        unint64_t v16 = v5[2];
        unint64_t v17 = v5[3];
        unint64_t v18 = v16 + 1;
        if (v16 >= v17 >> 1)
        {
          uint64_t v30 = v5;
          unint64_t v31 = v5[2];
          uint64_t v32 = sub_1A72AC148((void *)(v17 > 1), v16 + 1, 1, v30);
          unint64_t v16 = v31;
          uint64_t v5 = v32;
        }
        uint64_t v5[2] = v18;
        uint64_t v19 = &v5[2 * v16];
        id v19[4] = v14;
        v19[5] = v15;
      }
      if (*(void *)(v2 + 16))
      {
        sub_1A72B2288(3u);
        if (v20)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = sub_1A72AC148(0, v5[2] + 1, 1, v5);
          }
          unint64_t v22 = v5[2];
          unint64_t v21 = v5[3];
          if (v22 >= v21 >> 1) {
            uint64_t v5 = sub_1A72AC148((void *)(v21 > 1), v22 + 1, 1, v5);
          }
          uint64_t v5[2] = v22 + 1;
          unint64_t v23 = &v5[2 * v22];
          v23[4] = 0x6974736972756568;
          void v23[5] = 0xE900000000000063;
        }
        if (*(void *)(v2 + 16))
        {
          sub_1A72B2288(4u);
          if (v24)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v5 = sub_1A72AC148(0, v5[2] + 1, 1, v5);
            }
            unint64_t v26 = v5[2];
            unint64_t v25 = v5[3];
            if (v26 >= v25 >> 1) {
              uint64_t v5 = sub_1A72AC148((void *)(v25 > 1), v26 + 1, 1, v5);
            }
            uint64_t v5[2] = v26 + 1;
            uint64_t v27 = (char *)&v5[2 * v26];
            strcpy(v27 + 32, "anchoredBubble");
            v27[47] = -18;
          }
        }
      }
    }
  }
LABEL_39:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A72AE788((unint64_t *)&qword_1EB703C70, &qword_1EB704AC0);
  uint64_t v28 = sub_1A7572570();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t REMSuggestedAttributeOutput.Source.debugDescription.getter()
{
  return sub_1A73991FC(1);
}

ReminderKitInternal::REMSuggestedAttributeOutput::Source __swiftcall REMSuggestedAttributeOutput.Source.union(_:)(ReminderKitInternal::REMSuggestedAttributeOutput::Source a1)
{
  uint64_t v37 = v1;
  uint64_t v3 = *(void *)a1.predictors._rawValue;
  char v4 = (void *)*v2;
  uint64_t v38 = *(void *)a1.predictors._rawValue + 64;
  uint64_t v5 = 1 << *(unsigned char *)(*(void *)a1.predictors._rawValue + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(*(void *)a1.predictors._rawValue + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v9 << 6);
LABEL_22:
    char v16 = *(unsigned char *)(*(void *)(v3 + 48) + v12);
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v12);
    uint64_t v18 = v4[2];
    swift_bridgeObjectRetain();
    if (v18 && (unint64_t v19 = sub_1A72B2288(v16), (v20 & 1) != 0))
    {
      uint64_t v21 = *(void *)(v4[7] + 8 * v19);
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1A7399AAC(v17, v21);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1A72D6E44(v22, v16, isUniquelyReferenced_nonNull_native);
    }
    else
    {
      char v24 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v26 = sub_1A72B2288(v16);
      uint64_t v27 = v4[2];
      BOOL v28 = (v25 & 1) == 0;
      uint64_t v29 = v27 + v28;
      if (__OFADD__(v27, v28))
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      char v30 = v25;
      if (v4[3] >= v29)
      {
        if (v24)
        {
          if (v25) {
            goto LABEL_4;
          }
        }
        else
        {
          sub_1A72BCB44();
          if (v30) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        sub_1A72B718C(v29, v24);
        unint64_t v31 = sub_1A72B2288(v16);
        if ((v30 & 1) != (v32 & 1)) {
          goto LABEL_41;
        }
        unint64_t v26 = v31;
        if (v30)
        {
LABEL_4:
          uint64_t v10 = v4[7];
          swift_bridgeObjectRelease();
          *(void *)(v10 + 8 * v26) = v17;
          goto LABEL_5;
        }
      }
      v4[(v26 >> 6) + 8] |= 1 << v26;
      *(unsigned char *)(v4[6] + v26) = v16;
      *(void *)(v4[7] + 8 * v26) = v17;
      uint64_t v33 = v4[2];
      BOOL v34 = __OFADD__(v33, 1);
      uint64_t v35 = v33 + 1;
      if (v34) {
        goto LABEL_39;
      }
      v4[2] = v35;
    }
LABEL_5:
    swift_bridgeObjectRelease();
  }
  int64_t v13 = v9 + 1;
  if (__OFADD__(v9, 1)) {
    goto LABEL_38;
  }
  if (v13 >= v8)
  {
LABEL_36:
    result.predictors._unint64_t rawValue = (void *)swift_release();
    *uint64_t v37 = v4;
    return result;
  }
  unint64_t v14 = *(void *)(v38 + 8 * v13);
  ++v9;
  if (v14) {
    goto LABEL_21;
  }
  int64_t v9 = v13 + 1;
  if (v13 + 1 >= v8) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v38 + 8 * v9);
  if (v14) {
    goto LABEL_21;
  }
  int64_t v9 = v13 + 2;
  if (v13 + 2 >= v8) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v38 + 8 * v9);
  if (v14)
  {
LABEL_21:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
    goto LABEL_22;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v38 + 8 * v15);
  if (v14)
  {
    int64_t v9 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_36;
    }
    unint64_t v14 = *(void *)(v38 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_40:
  __break(1u);
LABEL_41:
  result.predictors._unint64_t rawValue = (void *)sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t sub_1A7399950(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v15 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    ReminderKitInternal::REMSuggestedAttributeOutput::Source result = sub_1A72DF8A8(&v14, *(void *)(*(void *)(v2 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A7399AAC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    int64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1A72DF384(&v17, v12, v13);
    ReminderKitInternal::REMSuggestedAttributeOutput::Source result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

Swift::Void __swiftcall REMSuggestedAttributeOutput.Source.append(pipeline:predictor:)(ReminderKitInternal::REMSuggestedAttributeOutput::Pipeline pipeline, Swift::String predictor)
{
  int64_t v3 = v2;
  object = predictor._object;
  uint64_t countAndFlagsBits = predictor._countAndFlagsBits;
  char v6 = *(unsigned char *)pipeline;
  uint64_t v7 = *v2;
  if (!*(void *)(*v2 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1A72B2288(v6);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
    *(void *)(inited + 32) = countAndFlagsBits;
    *(void *)(inited + 40) = object;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1A72E6AB4(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = v10;
  swift_bridgeObjectRetain();
  sub_1A72DF384(&v15, countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease();
  uint64_t v11 = v16;
LABEL_6:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = v7;
  sub_1A72D6E44(v11, v6, isUniquelyReferenced_nonNull_native);
  uint64_t v14 = v15;
  swift_bridgeObjectRelease();
  *int64_t v3 = v14;
}

Swift::Bool __swiftcall REMSuggestedAttributeOutput.Source.contains(_:)(ReminderKitInternal::REMSuggestedAttributeOutput::Pipeline a1)
{
  if (*(void *)(*(void *)v1 + 16)) {
    sub_1A72B2288(*(unsigned char *)a1);
  }
  else {
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t REMSuggestedAttributeOutput.Source.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700158);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73A2128();
  sub_1A75741B0();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701AC8);
  sub_1A73A2270();
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMSuggestedAttributeOutput.Source.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1A739DCF0(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t static REMSuggestedAttributeOutput.Source.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1A7399F64(*a1, *a2);
}

uint64_t sub_1A7399F64(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    uint64_t v14 = *(void *)(*(void *)(v2 + 56) + 8 * v10);
    unsigned __int8 v15 = *(unsigned char *)(*(void *)(v2 + 48) + v10);
    swift_bridgeObjectRetain();
    sub_1A72B2288(v15);
    if ((v16 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v17 = swift_bridgeObjectRetain();
    char v18 = sub_1A72DD5F0(v17, v14);
    swift_bridgeObjectRelease();
    ReminderKitInternal::REMSuggestedAttributeOutput::Source result = swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      return 0;
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A739A110(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = sub_1A7571BC0();
  uint64_t v47 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  id v48 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7013F0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  int64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v6);
  int64_t v11 = (char *)&v40 - v10;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v49 = 0;
  uint64_t v44 = a1;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v13 = a1 + 64;
  uint64_t v12 = v14;
  uint64_t v15 = 1 << *(unsigned char *)(v13 - 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v12;
  uint64_t v18 = (uint64_t)v48;
  uint64_t v43 = v47 + 16;
  uint64_t v45 = (uint64_t (**)(uint64_t, uint64_t))(v47 + 8);
  id v46 = (void (**)(uint64_t, char *, uint64_t))(v47 + 32);
  uint64_t v41 = v13;
  int64_t v42 = (unint64_t)(v15 + 63) >> 6;
  int64_t v40 = v42 - 1;
  unint64_t v19 = (uint64_t *)&unk_1EB7013E8;
  id v50 = (char *)&v40 - v10;
  uint64_t v20 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v22 = v21 | (v49 << 6);
LABEL_8:
      uint64_t v23 = v44;
      (*(void (**)(char *, unint64_t, uint64_t))(v47 + 16))(v8, *(void *)(v44 + 48) + *(void *)(v47 + 72) * v22, v51);
      uint64_t v24 = *(void *)(v23 + 56);
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(v19);
      *(void *)&v8[*(int *)(v25 + 48)] = *(void *)(v24 + 8 * v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 0, 1, v25);
      int64_t v11 = v50;
      goto LABEL_30;
    }
    int64_t v26 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v26 < v42)
    {
      unint64_t v27 = *(void *)(v41 + 8 * v26);
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v49 + 2;
      ++v49;
      if (v26 + 1 < v42)
      {
        unint64_t v27 = *(void *)(v41 + 8 * v28);
        if (v27) {
          goto LABEL_15;
        }
        int64_t v49 = v26 + 1;
        if (v26 + 2 < v42)
        {
          unint64_t v27 = *(void *)(v41 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v49 = v26 + 2;
          if (v26 + 3 < v42)
          {
            unint64_t v27 = *(void *)(v41 + 8 * (v26 + 3));
            if (v27)
            {
              v26 += 3;
              goto LABEL_12;
            }
            int64_t v28 = v26 + 4;
            int64_t v49 = v26 + 3;
            if (v26 + 4 < v42) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(v19);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v8, 1, 1, v29);
    unint64_t v17 = 0;
LABEL_30:
    sub_1A734E5D8((uint64_t)v8, (uint64_t)v11, (uint64_t *)&unk_1EB7013F0);
    char v30 = v19;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(v19);
    int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v11, 1, v31);
    BOOL v33 = v32 == 1;
    if (v32 != 1)
    {
      uint64_t v34 = *(int *)(v31 + 48);
      (*v46)(v18, v11, v20);
      uint64_t v35 = *(void *)&v11[v34];
      unint64_t v36 = sub_1A72B2464(v18);
      char v38 = v37;
      uint64_t result = (*v45)(v18, v20);
      if (v38)
      {
        uint64_t v39 = *(void *)(*(void *)(a2 + 56) + 8 * v36);
        unint64_t v19 = v30;
        int64_t v11 = v50;
        if (v39 == v35) {
          continue;
        }
      }
    }
    return v33;
  }
  unint64_t v27 = *(void *)(v41 + 8 * v28);
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v49 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v42)
    {
      int64_t v49 = v40;
      goto LABEL_29;
    }
    unint64_t v27 = *(void *)(v41 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_1A739A5A0(uint64_t a1, uint64_t a2)
{
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    int64x2_t v20 = *(int64x2_t *)(*(void *)(a1 + 56) + 16 * v11);
    id v15 = *(id *)(*(void *)(a1 + 48) + 8 * v11);
    unint64_t v16 = sub_1A72B2420((uint64_t)v15);
    char v18 = v17;

    if (v18)
    {
      int32x2_t v19 = vmovn_s64(vceqq_s64(*(int64x2_t *)(*(void *)(a2 + 56) + 16 * v16), v20));
      if (v19.i32[0] & v19.i32[1]) {
        continue;
      }
    }
    return;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
}

uint64_t REMSuggestedAttributeOutput.Source.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_1A75740C0();
  sub_1A739DCF0((uint64_t)v3, v1);
  return sub_1A7574110();
}

uint64_t sub_1A739A7A4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMSuggestedAttributeOutput.Source.init(from:)(a1, a2);
}

uint64_t sub_1A739A7BC(void *a1)
{
  return REMSuggestedAttributeOutput.Source.encode(to:)(a1);
}

uint64_t sub_1A739A7D4()
{
  uint64_t v1 = *v0;
  sub_1A75740C0();
  sub_1A739DCF0((uint64_t)v3, v1);
  return sub_1A7574110();
}

uint64_t sub_1A739A81C(uint64_t a1)
{
  return sub_1A739DCF0(a1, *v1);
}

uint64_t sub_1A739A824()
{
  uint64_t v1 = *v0;
  sub_1A75740C0();
  sub_1A739DCF0((uint64_t)v3, v1);
  return sub_1A7574110();
}

uint64_t sub_1A739A868()
{
  return sub_1A73991FC(0);
}

uint64_t sub_1A739A8A0(uint64_t *a1, uint64_t *a2)
{
  return sub_1A7399F64(*a1, *a2);
}

uint64_t REMSuggestedAttributeOutput.description.getter()
{
  return sub_1A739B0A0(0);
}

uint64_t sub_1A739A8B4(char a1)
{
  uint64_t v3 = sub_1A7571E90();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *(void **)v1;
  uint64_t v7 = *(void **)(v1 + 8);
  switch(*(unsigned char *)(v1 + 32))
  {
    case 1:
      v19[0] = 0;
      v19[1] = 0xE000000000000000;
      sub_1A7573560();
      swift_bridgeObjectRelease();
      v19[0] = 0xD000000000000016;
      v19[1] = 0x80000001A75A0FC0;
      char v18 = v8;
      sub_1A73991FC(0);
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      return v19[0];
    case 2:
      v19[0] = 0;
      v19[1] = 0xE000000000000000;
      sub_1A7573560();
      swift_bridgeObjectRelease();
      v19[0] = 0xD00000000000001CLL;
      v19[1] = 0x80000001A75A0FA0;
      char v18 = v8;
      sub_1A73991FC(0);
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      switch((unint64_t)v7)
      {
        case 0uLL:
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
          goto LABEL_16;
        default:
          if (qword_1E96F06D0 != -1) {
            swift_once();
          }
          uint64_t v15 = __swift_project_value_buffer(v3, (uint64_t)qword_1E96F12D0);
          (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v15, v3);
          uint64_t v16 = MEMORY[0x1E4FBC860];
          sub_1A72B0944(MEMORY[0x1E4FBC860]);
          sub_1A72B0944(v16);
          sub_1A73A67DC((uint64_t)"Unknown REMRecurrenceFrequency", 30, 2);
          __break(1u);
          JUMPOUT(0x1A739B05CLL);
      }
      goto LABEL_16;
    case 3:
      v19[0] = 0;
      v19[1] = 0xE000000000000000;
      swift_retain();
      sub_1A7573560();
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD000000000000011;
      unint64_t v10 = 0x80000001A75A0F40;
      goto LABEL_7;
    case 4:
      v19[0] = 0;
      v19[1] = 0xE000000000000000;
      swift_retain();
      sub_1A7573560();
      swift_bridgeObjectRelease();
      v19[0] = 0xD000000000000010;
      v19[1] = 0x80000001A75A0F80;
      char v18 = v8;
      sub_1A73991FC(0);
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      REMSuggestedWeekDay.description.getter();
      sub_1A7572740();
      swift_release();
      goto LABEL_17;
    case 5:
      v19[0] = 0;
      v19[1] = 0xE000000000000000;
      id v11 = v7;
      sub_1A7573560();
      swift_bridgeObjectRelease();
      v19[0] = 0xD000000000000011;
      v19[1] = 0x80000001A75A0F60;
      char v18 = v8;
      sub_1A73991FC(0);
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      sub_1A75731C0();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      int64_t v12 = &selRef_debugDescription;
      if ((a1 & 1) == 0) {
        int64_t v12 = &selRef_description;
      }
      id v13 = [v11 *v12];
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      sub_1A7572740();
      goto LABEL_17;
    case 6:
      v19[0] = 0;
      v19[1] = 0xE000000000000000;
      sub_1A7573560();
      swift_bridgeObjectRelease();
      v19[0] = 0xD000000000000010;
      v19[1] = 0x80000001A75A0F20;
      char v18 = v8;
      sub_1A73991FC(0);
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      goto LABEL_16;
    case 7:
      v19[0] = 0;
      v19[1] = 0xE000000000000000;
      sub_1A7573560();
      swift_bridgeObjectRelease();
      v19[0] = 0xD000000000000011;
      v19[1] = 0x80000001A75A0F00;
      char v18 = v8;
      sub_1A73991FC(0);
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      char v18 = v7;
      sub_1A7573BC0();
LABEL_16:
      sub_1A7572740();
      goto LABEL_17;
    case 8:
      v19[0] = 0;
      v19[1] = 0xE000000000000000;
      sub_1A7573560();
      swift_bridgeObjectRelease();
      strcpy((char *)v19, "tag(source: ");
      BYTE5(v19[1]) = 0;
      HIWORD(v19[1]) = -5120;
      char v18 = v8;
      sub_1A73991FC(0);
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      sub_1A7572740();
      return v19[0];
    case 9:
      v19[0] = 0;
      v19[1] = 0xE000000000000000;
      swift_retain();
      sub_1A7573560();
      swift_bridgeObjectRelease();
      v19[0] = 0xD000000000000010;
      v19[1] = 0x80000001A75A0EE0;
      char v18 = v8;
      sub_1A73991FC(0);
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      goto LABEL_8;
    default:
      v19[0] = 0;
      v19[1] = 0xE000000000000000;
      swift_retain();
      sub_1A7573560();
      swift_bridgeObjectRelease();
      unint64_t v9 = 0x756F73287473696CLL;
      unint64_t v10 = 0xED0000203A656372;
LABEL_7:
      v19[0] = v9;
      v19[1] = v10;
      char v18 = v8;
      sub_1A73991FC(0);
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
LABEL_8:
      swift_bridgeObjectRetain();
      sub_1A7572740();
      swift_release();
LABEL_17:
      swift_bridgeObjectRelease();
      return v19[0];
  }
}

uint64_t REMSuggestedAttributeOutput.debugDescription.getter()
{
  return sub_1A739B0A0(1);
}

uint64_t sub_1A739B0A0(char a1)
{
  return sub_1A739A8B4(a1);
}

void REMSuggestedAttributeOutput.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v2 = *(void **)(v1 + 8);
  switch(*(unsigned char *)(v1 + 32))
  {
    case 1:
      sub_1A75740D0();
      sub_1A739DCF0(a1, v3);
      break;
    case 2:
    case 7:
      sub_1A75740D0();
      sub_1A739DCF0(a1, v3);
      sub_1A75740D0();
      break;
    case 5:
      sub_1A75740D0();
      id v5 = v2;
      sub_1A739DCF0(a1, v3);
      sub_1A75731A0();
      sub_1A75740D0();
      sub_1A75740D0();

      break;
    case 6:
      sub_1A75740D0();
      sub_1A739DCF0(a1, v3);
      sub_1A75740E0();
      break;
    case 8:
      sub_1A75740D0();
      sub_1A739DCF0(a1, v3);
      sub_1A75726F0();
      break;
    default:
      sub_1A75740D0();
      swift_retain();
      sub_1A739DCF0(a1, v3);
      swift_bridgeObjectRetain();
      sub_1A75726F0();
      swift_release();
      swift_bridgeObjectRelease();
      break;
  }
}

uint64_t REMSuggestedAttributeOutput.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 32);
  long long v2 = v0[1];
  long long v5 = *v0;
  long long v6 = v2;
  char v7 = v1;
  sub_1A75740C0();
  REMSuggestedAttributeOutput.hash(into:)((uint64_t)v4);
  return sub_1A7574110();
}

uint64_t sub_1A739B38C()
{
  char v1 = *((unsigned char *)v0 + 32);
  long long v2 = v0[1];
  long long v5 = *v0;
  long long v6 = v2;
  char v7 = v1;
  sub_1A75740C0();
  REMSuggestedAttributeOutput.hash(into:)((uint64_t)v4);
  return sub_1A7574110();
}

uint64_t sub_1A739B3E4()
{
  char v1 = *((unsigned char *)v0 + 32);
  long long v2 = v0[1];
  long long v5 = *v0;
  long long v6 = v2;
  char v7 = v1;
  sub_1A75740C0();
  REMSuggestedAttributeOutput.hash(into:)((uint64_t)v4);
  return sub_1A7574110();
}

uint64_t sub_1A739B434(uint64_t a1, uint64_t a2)
{
  return sub_1A739B444(a1, a2, 0);
}

uint64_t sub_1A739B43C(uint64_t a1, uint64_t a2)
{
  return sub_1A739B444(a1, a2, 1);
}

uint64_t sub_1A739B444(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1A739A8B4(a3);
}

ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional __swiftcall REMSuggestedAttributeOutput.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  long long v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *long long v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional __swiftcall REMSuggestedAttributeOutput.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  long long v2 = v1;
  result.value = REMSuggestedAttributeOutput.CodingKeys.init(rawValue:)(stringValue).value;
  *long long v2 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional __swiftcall REMSuggestedAttributeOutput.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  *char v1 = 4;
  return (ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional)intValue;
}

uint64_t REMSuggestedAttributeOutput.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributeOutput.CodingKeys.rawValue.getter()
{
  uint64_t result = 0x54746E65746E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64616F6C796170;
      break;
    case 2:
      uint64_t result = 0x656372756F73;
      break;
    case 3:
      uint64_t result = 0x546E4965676E6172;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t REMSuggestedAttributeOutput.CodingKeys.stringValue.getter()
{
  uint64_t result = 0x54746E65746E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64616F6C796170;
      break;
    case 2:
      uint64_t result = 0x656372756F73;
      break;
    case 3:
      uint64_t result = 0x546E4965676E6172;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A739B66C(unsigned __int8 *a1, char *a2)
{
  return sub_1A7542DD4(*a1, *a2);
}

uint64_t sub_1A739B678()
{
  return sub_1A7574110();
}

uint64_t sub_1A739B760()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A739B830()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional sub_1A739B914(Swift::String *a1)
{
  return REMSuggestedAttributeOutput.CodingKeys.init(rawValue:)(*a1);
}

void sub_1A739B920(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEB00000000657079;
  uint64_t v3 = 0x54746E65746E6F63;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x64616F6C796170;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x656372756F73;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 3:
      strcpy((char *)a1, "rangeInTitle");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1A739B9C8()
{
  uint64_t result = 0x54746E65746E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64616F6C796170;
      break;
    case 2:
      uint64_t result = 0x656372756F73;
      break;
    case 3:
      uint64_t result = 0x546E4965676E6172;
      break;
    default:
      return result;
  }
  return result;
}

ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional sub_1A739BA64@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.value = REMSuggestedAttributeOutput.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t sub_1A739BA9C(uint64_t a1)
{
  unint64_t v2 = sub_1A73A2364();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A739BAD8(uint64_t a1)
{
  unint64_t v2 = sub_1A73A2364();

  return MEMORY[0x1F41862B0](a1, v2);
}

ReminderKitInternal::REMSuggestedAttributeOutput::ContentType_optional __swiftcall REMSuggestedAttributeOutput.ContentType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t REMSuggestedAttributeOutput.ContentType.rawValue.getter()
{
  unint64_t result = 1953720684;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x616F626574736170;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x664F796144657564;
      break;
    case 4:
      unint64_t result = 0x636F4C6D72616C61;
      break;
    case 5:
      unint64_t result = 0x656C6369686576;
      break;
    case 6:
      unint64_t result = 0x65656E6769737361;
      break;
    case 7:
      unint64_t result = 0x64656767616C66;
      break;
    case 8:
      unint64_t result = 0x797469726F697270;
      break;
    case 9:
      unint64_t result = 6775156;
      break;
    case 0xA:
      unint64_t result = 0x746361746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A739BCD8(unsigned __int8 *a1, char *a2)
{
  return sub_1A7542A6C(*a1, *a2);
}

uint64_t sub_1A739BCE4()
{
  return sub_1A7574110();
}

uint64_t sub_1A739BD2C()
{
  return sub_1A7502E04();
}

uint64_t sub_1A739BD34()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMSuggestedAttributeOutput::ContentType_optional sub_1A739BD78(Swift::String *a1)
{
  return REMSuggestedAttributeOutput.ContentType.init(rawValue:)(*a1);
}

unint64_t sub_1A739BD84@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = REMSuggestedAttributeOutput.ContentType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A739BDAC()
{
  return sub_1A75729D0();
}

uint64_t sub_1A739BE0C()
{
  return sub_1A7572980();
}

uint64_t REMSuggestedAttributeOutput.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2588);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73A2364();
  sub_1A7574190();
  if (!v2)
  {
    LOBYTE(v25) = 0;
    sub_1A73A23B8();
    sub_1A7573A50();
    uint64_t v9 = v24;
    LOBYTE(v25) = 2;
    sub_1A73A240C();
    sub_1A7573A50();
    uint64_t v11 = v24;
    switch(v9)
    {
      case 1:
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        uint64_t v13 = 0;
        long long v14 = 0uLL;
        char v15 = 1;
        break;
      case 2:
        LOBYTE(v24) = 1;
        uint64_t v13 = sub_1A7573A30();
        *(void *)&long long v24 = 0;
        *((void *)&v24 + 1) = 0xE000000000000000;
        sub_1A7573560();
        sub_1A7572740();
        uint64_t v25 = v13;
        sub_1A7573BC0();
        uint64_t v23 = v11;
        sub_1A7572740();
        uint64_t v11 = v23;
        swift_bridgeObjectRelease();
        sub_1A7572740();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        long long v14 = 0uLL;
        char v15 = 2;
        break;
      case 3:
        type metadata accessor for REMSuggestedWeekDay();
        LOBYTE(v25) = 1;
        sub_1A73A0C38(&qword_1EB703F40, v17, (void (*)(uint64_t))type metadata accessor for REMSuggestedWeekDay);
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        uint64_t v13 = v24;
        long long v14 = 0uLL;
        char v15 = 4;
        break;
      case 4:
      case 5:
        type metadata accessor for REMSuggestedLocation();
        LOBYTE(v25) = 1;
        sub_1A73A0C38(&qword_1EB703F68, v12, (void (*)(uint64_t))type metadata accessor for REMSuggestedLocation);
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        uint64_t v13 = v24;
        long long v14 = 0uLL;
        char v15 = 3;
        break;
      case 6:
        type metadata accessor for REMObjectID_Codable();
        LOBYTE(v25) = 1;
        sub_1A73A0C38(&qword_1EB705A50, 255, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
        sub_1A7573A50();
        uint64_t v13 = v24;
        type metadata accessor for _NSRange(0);
        LOBYTE(v25) = 3;
        sub_1A73A0C38(&qword_1E96F25A0, 255, type metadata accessor for _NSRange);
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        long long v14 = v24;
        char v15 = 5;
        break;
      case 7:
        LOBYTE(v24) = 1;
        char v18 = sub_1A7573A10();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        uint64_t v13 = v18 & 1;
        long long v14 = 0uLL;
        char v15 = 6;
        break;
      case 8:
        LOBYTE(v24) = 1;
        uint64_t v13 = sub_1A7573A40();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        long long v14 = 0uLL;
        char v15 = 7;
        break;
      case 9:
        LOBYTE(v24) = 1;
        uint64_t v13 = sub_1A7573A00();
        unint64_t v20 = v19;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        long long v14 = v20;
        char v15 = 8;
        break;
      case 10:
        type metadata accessor for REMSuggestedContact();
        LOBYTE(v25) = 1;
        sub_1A73A0C38(&qword_1EB700210, v21, (void (*)(uint64_t))type metadata accessor for REMSuggestedContact);
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        uint64_t v13 = v24;
        long long v14 = 0uLL;
        char v15 = 9;
        break;
      default:
        type metadata accessor for REMSuggestedList();
        LOBYTE(v25) = 1;
        sub_1A73A0C38(&qword_1EB703E20, v16, (void (*)(uint64_t))type metadata accessor for REMSuggestedList);
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        char v15 = 0;
        uint64_t v13 = v24;
        long long v14 = 0uLL;
        break;
    }
    *(void *)a2 = v11;
    *(void *)(a2 + 8) = v13;
    *(_OWORD *)(a2 + 16) = v14;
    *(unsigned char *)(a2 + 32) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void REMSuggestedAttributeOutput.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F25A8);
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)(v1 + 8);
  unint64_t v19 = *(void **)v1;
  id v20 = v7;
  uint64_t v8 = *(void *)(v1 + 24);
  char v18 = *(void **)(v1 + 16);
  uint64_t v9 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73A2364();
  sub_1A75741B0();
  switch(v9)
  {
    case 1:
      LOBYTE(v22) = 1;
      char v24 = 0;
      sub_1A73A2460();
      sub_1A7573B60();
      if (!v2)
      {
        id v22 = v19;
        char v24 = 2;
        sub_1A73A24B4();
        sub_1A7573B60();
      }
      goto LABEL_21;
    case 2:
      LOBYTE(v22) = 2;
      char v24 = 0;
      sub_1A73A2460();
      sub_1A7573B60();
      if (!v2)
      {
        id v22 = v19;
        char v24 = 2;
        sub_1A73A24B4();
        sub_1A7573B60();
        LOBYTE(v22) = 1;
        sub_1A7573B40();
      }
      goto LABEL_21;
    case 3:
      LOBYTE(v22) = 4;
      char v24 = 0;
      sub_1A73A2460();
      id v14 = v20;
      swift_retain();
      sub_1A7573B60();
      if (v2) {
        goto LABEL_25;
      }
      id v22 = v19;
      char v24 = 2;
      sub_1A73A24B4();
      sub_1A7573B60();
      id v22 = v14;
      char v24 = 1;
      type metadata accessor for REMSuggestedLocation();
      uint64_t v12 = &qword_1EB7036A0;
      uint64_t v13 = type metadata accessor for REMSuggestedLocation;
      break;
    case 4:
      LOBYTE(v22) = 3;
      char v24 = 0;
      sub_1A73A2460();
      id v15 = v20;
      swift_retain();
      sub_1A7573B60();
      if (v2) {
        goto LABEL_25;
      }
      id v22 = v19;
      char v24 = 2;
      sub_1A73A24B4();
      sub_1A7573B60();
      id v22 = v15;
      char v24 = 1;
      type metadata accessor for REMSuggestedWeekDay();
      uint64_t v12 = &qword_1EB703690;
      uint64_t v13 = type metadata accessor for REMSuggestedWeekDay;
      break;
    case 5:
      LOBYTE(v22) = 6;
      char v24 = 0;
      sub_1A73A2460();
      id v16 = v20;
      sub_1A7573B60();
      if (!v2)
      {
        id v22 = v19;
        char v24 = 2;
        sub_1A73A24B4();
        sub_1A7573B60();
        id v22 = v16;
        char v24 = 1;
        type metadata accessor for REMObjectID_Codable();
        sub_1A73A0C38(&qword_1EB704E40, 255, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
        sub_1A7573B60();
        id v22 = v18;
        uint64_t v23 = v8;
        char v24 = 3;
        type metadata accessor for _NSRange(0);
        sub_1A73A0C38(&qword_1E96F25B8, 255, type metadata accessor for _NSRange);
        sub_1A7573B60();
      }
      (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);

      return;
    case 6:
      LOBYTE(v22) = 7;
      char v24 = 0;
      sub_1A73A2460();
      sub_1A7573B60();
      if (!v2)
      {
        id v22 = v19;
        char v24 = 2;
        sub_1A73A24B4();
        sub_1A7573B60();
        LOBYTE(v22) = 1;
        sub_1A7573B20();
      }
      goto LABEL_21;
    case 7:
      LOBYTE(v22) = 8;
      char v24 = 0;
      sub_1A73A2460();
      sub_1A7573B60();
      if (!v2)
      {
        id v22 = v19;
        char v24 = 2;
        sub_1A73A24B4();
        sub_1A7573B60();
        LOBYTE(v22) = 1;
        sub_1A7573B50();
      }
      goto LABEL_21;
    case 8:
      LOBYTE(v22) = 9;
      char v24 = 0;
      sub_1A73A2460();
      sub_1A7573B60();
      if (!v2)
      {
        id v22 = v19;
        char v24 = 2;
        sub_1A73A24B4();
        sub_1A7573B60();
        LOBYTE(v22) = 1;
        sub_1A7573B10();
      }
LABEL_21:
      (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
      return;
    case 9:
      LOBYTE(v22) = 10;
      char v24 = 0;
      sub_1A73A2460();
      id v17 = v20;
      swift_retain();
      sub_1A7573B60();
      if (v2) {
        goto LABEL_25;
      }
      id v22 = v19;
      char v24 = 2;
      sub_1A73A24B4();
      sub_1A7573B60();
      id v22 = v17;
      char v24 = 1;
      type metadata accessor for REMSuggestedContact();
      uint64_t v12 = qword_1EB6FFE08;
      uint64_t v13 = type metadata accessor for REMSuggestedContact;
      break;
    default:
      LOBYTE(v22) = 0;
      char v24 = 0;
      sub_1A73A2460();
      id v10 = v20;
      swift_retain();
      sub_1A7573B60();
      if (v2) {
        goto LABEL_25;
      }
      id v22 = v19;
      char v24 = 2;
      sub_1A73A24B4();
      sub_1A7573B60();
      id v22 = v10;
      char v24 = 1;
      type metadata accessor for REMSuggestedList();
      uint64_t v12 = &qword_1EB7035D0;
      uint64_t v13 = type metadata accessor for REMSuggestedList;
      break;
  }
  sub_1A73A0C38(v12, v11, (void (*)(uint64_t))v13);
  sub_1A7573B60();
LABEL_25:
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  swift_release();
}

uint64_t sub_1A739CF84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributeOutput.init(from:)(a1, a2);
}

void sub_1A739CF9C(void *a1)
{
}

uint64_t sub_1A739CFB4(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(void *)(*(void *)(v1 + 24) + 16)
    && (sub_1A72B23E4(a1), (v4 & 1) != 0)
    && (uint64_t v5 = *(void *)(v1 + 32), *(void *)(v5 + 16))
    && (unint64_t v6 = sub_1A72B23E4(a1), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(v5 + 56) + 8 * v6;
  }
  else
  {
    uint64_t v8 = v2 + 40;
  }
  return *(void *)v8;
}

uint64_t sub_1A739D020(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(void *)(*(void *)(v1 + 24) + 16)
    && (sub_1A72B23E4(a1), (v4 & 1) != 0)
    && (uint64_t v5 = *(void *)(v1 + 32), *(void *)(v5 + 16))
    && (unint64_t v6 = sub_1A72B23E4(a1), (v7 & 1) != 0))
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)(v5 + 56) + v6);
  }
  else
  {
    uint64_t v8 = (unsigned __int8 *)(v2 + 40);
  }
  return *v8;
}

uint64_t sub_1A739D08C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v2[3] + 16) && (sub_1A72B23E4(a1), (v9 & 1) != 0))
  {
    uint64_t v10 = v2[4];
    if (!*(void *)(v10 + 16) || (unint64_t v11 = sub_1A72B23E4(a1), (v12 & 1) == 0))
    {
      uint64_t v15 = sub_1A7571B60();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
LABEL_11:
      uint64_t v21 = (char *)v3 + *(void *)(*v3 + 104);
      sub_1A7571B60();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v15 - 8) + 16))(a2, v21, v15);
      return sub_1A72CB560((uint64_t)v8, &qword_1EB704C60);
    }
    unint64_t v13 = v11;
    uint64_t v14 = *(void *)(v10 + 56);
    uint64_t v15 = sub_1A7571B60();
    uint64_t v16 = *(void *)(v15 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v8, v14 + *(void *)(v16 + 72) * v13, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15) == 1) {
      goto LABEL_11;
    }
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a2, v8, v15);
  }
  else
  {
    id v17 = (char *)v2 + *(void *)(*v2 + 104);
    uint64_t v18 = sub_1A7571B60();
    unint64_t v19 = *(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    return v19(a2, v17, v18);
  }
}

uint64_t sub_1A739D360(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1A7571B60();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2658);
  swift_allocObject();
  *(void *)(v3 + 16) = sub_1A73A10BC(a1, v9);
  int64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRelease();
  unint64_t v11 = sub_1A72D262C(0, v10);
  sub_1A7398264((uint64_t)v11, &v13);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  *(_OWORD *)(v3 + 32) = v13;
  *(unsigned char *)(v3 + 24) = 1;
  return v3;
}

uint64_t sub_1A739D4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 24) == 1) {
    return sub_1A739D08C(a1, a2);
  }
  if (*(void *)(*(void *)(v2 + 40) + 16))
  {
    sub_1A72B23E4(a1);
    if (v5) {
      return sub_1A739D08C(a1, a2);
    }
  }
  uint64_t v7 = *(void *)(v2 + 16) + *(void *)(**(void **)(v2 + 16) + 104);
  uint64_t v8 = sub_1A7571B60();
  char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);

  return v9(a2, v7, v8);
}

uint64_t sub_1A739D58C(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    if (*(void *)(*(void *)(v3 + 24) + 16)
      && (sub_1A72B23E4(a1), (v4 & 1) != 0)
      && (uint64_t v5 = *(void *)(v3 + 32), *(void *)(v5 + 16))
      && (unint64_t v6 = sub_1A72B23E4(a1), (v7 & 1) != 0))
    {
      return *(unsigned __int8 *)(*(void *)(v5 + 56) + v6);
    }
    else
    {
      return *(unsigned __int8 *)(v3 + 40);
    }
  }
  else if (*(void *)(*(void *)(v1 + 40) + 16) && (sub_1A72B23E4(a1), (v9 & 1) != 0))
  {
    return sub_1A739D020(a1) & 1;
  }
  else
  {
    return *(unsigned __int8 *)(*(void *)(v1 + 16) + 40);
  }
}

uint64_t sub_1A739D640(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    uint64_t v3 = *(void **)(v1 + 16);
    if (*(void *)(v3[3] + 16)
      && (sub_1A72B23E4(a1), (v4 & 1) != 0)
      && (uint64_t v5 = v3[4], *(void *)(v5 + 16))
      && (unint64_t v6 = sub_1A72B23E4(a1), (v7 & 1) != 0))
    {
      return *(void *)(*(void *)(v5 + 56) + 8 * v6);
    }
    else
    {
      return v3[5];
    }
  }
  else if (*(void *)(*(void *)(v1 + 40) + 16) && (sub_1A72B23E4(a1), (v9 & 1) != 0))
  {
    return sub_1A739CFB4(a1);
  }
  else
  {
    return *(void *)(*(void *)(v1 + 16) + 40);
  }
}

uint64_t sub_1A739D6F0(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v7 = *(void *)(v3 + 32);
  uint64_t v8 = (void *)(v7 + 16);
  if (*(void *)(a1 + 16) >= *(void *)(v7 + 16))
  {
    uint64_t v10 = *(void *)(v3 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1A74D89FC(v7, v10, a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1A739EE70(a1, a2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  if (*(unsigned char *)(v3 + 24) == 1) {
    uint64_t v8 = (void *)(*(void *)(*(void *)(v3 + 16) + 16) + 16);
  }
  if (*(void *)(v9 + 16) == *v8)
  {
    swift_retain();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)(v3 + 16);
    swift_retain();
    sub_1A7398264(v9, &v14);
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v11;
    uint64_t v12 = v14;
    *(_OWORD *)(v3 + 32) = v14;
    *(unsigned char *)(v3 + 24) = *(void *)(*(void *)(v11 + 16) + 16) == *(void *)(v12 + 16);
  }
  return v3;
}

_OWORD *sub_1A739D894(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  unint64_t result = sub_1A72BEE44(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

_OWORD *sub_1A739D910(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  long long v6 = (void *)(a5[6] + 16 * a1);
  *long long v6 = a2;
  v6[1] = a3;
  unint64_t result = sub_1A72BEE44(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_1A739D97C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1A7573790();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  unint64_t result = sub_1A72BEE44(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_1A739DA40(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1A739DA88(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, double a7)
{
  a6[(result >> 6) + 8] |= 1 << result;
  BOOL v7 = (void *)(a6[6] + 16 * result);
  *BOOL v7 = a2;
  v7[1] = a3;
  uint64_t v8 = a6[7] + 24 * result;
  *(double *)uint64_t v8 = a7;
  *(void *)(v8 + 8) = a4;
  *(void *)(v8 + 16) = a5;
  uint64_t v9 = a6[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a6[2] = v11;
  }
  return result;
}

_OWORD *sub_1A739DADC(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  unint64_t result = sub_1A72BEE44(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_1A739DB44(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unint64_t sub_1A739DB8C(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_1A739DBD4(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6)
{
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v7 = a6[6] + 24 * a1;
  *(void *)uint64_t v7 = a2;
  *(void *)(v7 + 8) = a3;
  *(unsigned char *)(v7 + 16) = a4 & 1;
  uint64_t result = sub_1A734E5D8(a5, a6[7] + 40 * a1, &qword_1EB703988);
  uint64_t v9 = a6[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a6[2] = v11;
  }
  return result;
}

unint64_t sub_1A739DC58(unint64_t result, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(unsigned char *)(a5[7] + result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1A739DCA0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  BOOL v7 = (void *)(a6[7] + 16 * result);
  *BOOL v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

uint64_t sub_1A739DCF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_18;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v13 >= v8) {
      goto LABEL_19;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_19;
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (!v14) {
        break;
      }
    }
LABEL_17:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_18:
    uint64_t v16 = *(void *)(*(void *)(a2 + 56) + 8 * v12);
    uint64_t v17 = *(void *)(a1 + 64);
    long long v18 = *(_OWORD *)(a1 + 16);
    v22[0] = *(_OWORD *)a1;
    v22[1] = v18;
    long long v19 = *(_OWORD *)(a1 + 32);
    long long v20 = *(_OWORD *)(a1 + 48);
    uint64_t v23 = v17;
    void v22[2] = v19;
    void v22[3] = v20;
    swift_bridgeObjectRetain();
    sub_1A75726F0();
    swift_bridgeObjectRelease();
    sub_1A735FC74((uint64_t)v22, v16);
    swift_bridgeObjectRelease();
    v9 ^= sub_1A7574110();
  }
  int64_t v15 = v13 + 2;
  if (v15 < v8)
  {
    unint64_t v14 = *(void *)(v4 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v10 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        if (v10 >= v8) {
          goto LABEL_19;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        ++v15;
        if (v14) {
          goto LABEL_17;
        }
      }
LABEL_21:
      __break(1u);
      JUMPOUT(0x1A739DF64);
    }
    int64_t v10 = v15;
    goto LABEL_17;
  }
LABEL_19:
  swift_release();
  return sub_1A75740D0();
}

uint64_t _s19ReminderKitInternal26REMSuggestedAttributeInputC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (!v4 && (sub_1A7573DB0() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_list);
  uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_list);
  BOOL v7 = *(void *)(v5 + 16) == *(void *)(v6 + 16) && *(void *)(v5 + 24) == *(void *)(v6 + 24);
  if (!v7 && (sub_1A7573DB0() & 1) == 0) {
    return 0;
  }
  if ((sub_1A7571B10() & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDayOfWeek);
  uint64_t v9 = *(void *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDayOfWeek);
  BOOL v10 = *(void *)(v8 + 16) == *(void *)(v9 + 16) && *(void *)(v8 + 24) == *(void *)(v9 + 24);
  if (!v10 && (sub_1A7573DB0() & 1) == 0) {
    return 0;
  }
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_location);
  uint64_t v12 = *(void *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_location);
  BOOL v13 = *(void *)(v11 + 16) == *(void *)(v12 + 16) && *(void *)(v11 + 24) == *(void *)(v12 + 24);
  if (!v13 && (sub_1A7573DB0() & 1) == 0) {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_flagged) != *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_flagged)
    || *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_priority) != *(void *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_priority)
    || (sub_1A72DD5F0(*(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_tags), *(void *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_tags)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v14 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_contact);
  uint64_t v15 = *(void *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_contact);
  if ((*(void *)(v14 + 16) != *(void *)(v15 + 16) || *(void *)(v14 + 24) != *(void *)(v15 + 24))
    && (sub_1A7573DB0() & 1) == 0)
  {
    return 0;
  }
  uint64_t v16 = *(void *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_recurrence);
  uint64_t v17 = *(void *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_recurrence);

  return sub_1A72DD5F0(v16, v17);
}

uint64_t _s19ReminderKitInternal27REMSuggestedAttributeOutputO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *(void *)a2;
  BOOL v7 = *(void **)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  int v11 = *(unsigned __int8 *)(a2 + 32);
  switch(v6)
  {
    case 1:
      if (v11 != 1) {
        goto LABEL_56;
      }
      sub_1A7345658(*(void *)a2, *(void **)(a2 + 8), v10, v9, 1);
      sub_1A7345658(v3, v2, v5, v4, 1);
      sub_1A7345658(v8, v7, v10, v9, 1);
      sub_1A7345658(v3, v2, v5, v4, 1);
      char v13 = sub_1A7399F64(v3, v8);
      sub_1A734576C(v3, v2, v5, v4, 1);
      sub_1A734576C(v8, v7, v10, v9, 1);
      sub_1A734576C(v8, v7, v10, v9, 1);
      uint64_t v14 = v3;
      uint64_t v15 = v2;
      uint64_t v16 = v5;
      uint64_t v17 = v4;
      char v18 = 1;
      goto LABEL_11;
    case 2:
      if (v11 != 2) {
        goto LABEL_56;
      }
      sub_1A7345658(*(void *)a2, *(void **)(a2 + 8), v10, v9, 2);
      sub_1A7345658(v3, v2, v5, v4, 2);
      char v20 = sub_1A7399F64(v3, v8);
      sub_1A734576C(v3, v2, v5, v4, 2);
      uint64_t v21 = v8;
      uint64_t v22 = v7;
      uint64_t v23 = v10;
      uint64_t v24 = v9;
      char v25 = 2;
      goto LABEL_43;
    case 3:
      if (v11 != 3) {
        goto LABEL_56;
      }
      sub_1A7345658(*(void *)a2, *(void **)(a2 + 8), v10, v9, 3);
      sub_1A7345658(v3, v2, v5, v4, 3);
      swift_retain();
      swift_retain();
      if ((sub_1A7399F64(v3, v8) & 1) == 0)
      {
        swift_release();
        swift_release();
        sub_1A734576C(v3, v2, v5, v4, 3);
        uint64_t v39 = v8;
        int64_t v40 = v7;
        uint64_t v41 = v10;
        uint64_t v42 = v9;
        char v43 = 3;
        goto LABEL_57;
      }
      if (v2[2] != v7[2] || v2[3] != v7[3])
      {
        char v13 = sub_1A7573DB0();
        swift_release();
        swift_release();
        sub_1A734576C(v3, v2, v5, v4, 3);
        uint64_t v14 = v8;
        uint64_t v15 = v7;
        uint64_t v16 = v10;
        uint64_t v17 = v9;
        char v18 = 3;
        goto LABEL_11;
      }
      swift_release();
      swift_release();
      sub_1A734576C(v3, v2, v5, v4, 3);
      uint64_t v33 = v8;
      uint64_t v34 = v7;
      uint64_t v35 = v10;
      uint64_t v36 = v9;
      char v37 = 3;
      goto LABEL_70;
    case 4:
      if (v11 != 4) {
        goto LABEL_56;
      }
      sub_1A7345658(*(void *)a2, *(void **)(a2 + 8), v10, v9, 4);
      sub_1A7345658(v3, v2, v5, v4, 4);
      swift_retain();
      swift_retain();
      if ((sub_1A7399F64(v3, v8) & 1) == 0)
      {
        swift_release();
        swift_release();
        sub_1A734576C(v3, v2, v5, v4, 4);
        uint64_t v39 = v8;
        int64_t v40 = v7;
        uint64_t v41 = v10;
        uint64_t v42 = v9;
        char v43 = 4;
        goto LABEL_57;
      }
      if (v2[2] != v7[2] || v2[3] != v7[3])
      {
        char v13 = sub_1A7573DB0();
        swift_release();
        swift_release();
        sub_1A734576C(v3, v2, v5, v4, 4);
        uint64_t v14 = v8;
        uint64_t v15 = v7;
        uint64_t v16 = v10;
        uint64_t v17 = v9;
        char v18 = 4;
        goto LABEL_11;
      }
      swift_release();
      swift_release();
      sub_1A734576C(v3, v2, v5, v4, 4);
      uint64_t v33 = v8;
      uint64_t v34 = v7;
      uint64_t v35 = v10;
      uint64_t v36 = v9;
      char v37 = 4;
      goto LABEL_70;
    case 5:
      if (v11 != 5) {
        goto LABEL_56;
      }
      sub_1A7345658(*(void *)a2, *(void **)(a2 + 8), v10, v9, 5);
      sub_1A7345658(v3, v2, v5, v4, 5);
      int64_t v28 = v2;
      uint64_t v29 = v7;
      if ((sub_1A7399F64(v3, v8) & 1) == 0)
      {

        sub_1A734576C(v3, v2, v5, v4, 5);
        uint64_t v39 = v8;
        int64_t v40 = v7;
        uint64_t v41 = v10;
        uint64_t v42 = v9;
        char v43 = 5;
        goto LABEL_57;
      }
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      uint64_t v44 = v29;
      char v30 = sub_1A7573190();

      sub_1A734576C(v3, v2, v5, v4, 5);
      sub_1A734576C(v8, v7, v10, v9, 5);
      char v32 = v5 == v10 && v4 == v9;
LABEL_38:
      if ((v30 & 1) == 0) {
        char v32 = 0;
      }
      return v32 & 1;
    case 6:
      if (v11 != 6) {
        goto LABEL_56;
      }
      sub_1A7345658(*(void *)a2, *(void **)(a2 + 8), v10, v9, 6);
      sub_1A7345658(v3, v2, v5, v4, 6);
      sub_1A7345658(v8, v7, v10, v9, 6);
      sub_1A7345658(v3, v2, v5, v4, 6);
      char v30 = sub_1A7399F64(v3, v8);
      sub_1A734576C(v3, v2, v5, v4, 6);
      sub_1A734576C(v8, v7, v10, v9, 6);
      sub_1A734576C(v8, v7, v10, v9, 6);
      sub_1A734576C(v3, v2, v5, v4, 6);
      char v32 = ((v2 & 1) == 0) ^ v7;
      goto LABEL_38;
    case 7:
      if (v11 != 7) {
        goto LABEL_56;
      }
      sub_1A7345658(*(void *)a2, *(void **)(a2 + 8), v10, v9, 7);
      sub_1A7345658(v3, v2, v5, v4, 7);
      sub_1A7345658(v8, v7, v10, v9, 7);
      sub_1A7345658(v3, v2, v5, v4, 7);
      char v20 = sub_1A7399F64(v3, v8);
      sub_1A734576C(v3, v2, v5, v4, 7);
      sub_1A734576C(v8, v7, v10, v9, 7);
      sub_1A734576C(v8, v7, v10, v9, 7);
      uint64_t v21 = v3;
      uint64_t v22 = v2;
      uint64_t v23 = v5;
      uint64_t v24 = v4;
      char v25 = 7;
LABEL_43:
      sub_1A734576C(v21, v22, v23, v24, v25);
      char v32 = v20 & (v2 == v7);
      return v32 & 1;
    case 8:
      if (v11 != 8) {
        goto LABEL_56;
      }
      sub_1A7345658(*(void *)a2, *(void **)(a2 + 8), v10, v9, 8);
      sub_1A7345658(v3, v2, v5, v4, 8);
      if ((sub_1A7399F64(v3, v8) & 1) == 0)
      {
        sub_1A734576C(v3, v2, v5, v4, 8);
        uint64_t v39 = v8;
        int64_t v40 = v7;
        uint64_t v41 = v10;
        uint64_t v42 = v9;
        char v43 = 8;
        goto LABEL_57;
      }
      if (v2 == v7 && v5 == v10)
      {
        sub_1A734576C(v3, v2, v5, v4, 8);
        uint64_t v33 = v8;
        uint64_t v34 = v2;
        uint64_t v35 = v5;
        uint64_t v36 = v9;
        char v37 = 8;
        goto LABEL_70;
      }
      char v13 = sub_1A7573DB0();
      sub_1A734576C(v3, v2, v5, v4, 8);
      uint64_t v14 = v8;
      uint64_t v15 = v7;
      uint64_t v16 = v10;
      uint64_t v17 = v9;
      char v18 = 8;
      goto LABEL_11;
    case 9:
      if (v11 != 9) {
        goto LABEL_56;
      }
      sub_1A7345658(*(void *)a2, *(void **)(a2 + 8), v10, v9, 9);
      sub_1A7345658(v3, v2, v5, v4, 9);
      swift_retain();
      swift_retain();
      if ((sub_1A7399F64(v3, v8) & 1) == 0)
      {
        swift_release();
        swift_release();
        sub_1A734576C(v3, v2, v5, v4, 9);
        uint64_t v39 = v8;
        int64_t v40 = v7;
        uint64_t v41 = v10;
        uint64_t v42 = v9;
        char v43 = 9;
        goto LABEL_57;
      }
      if (v2[2] != v7[2] || v2[3] != v7[3])
      {
        char v13 = sub_1A7573DB0();
        swift_release();
        swift_release();
        sub_1A734576C(v3, v2, v5, v4, 9);
        uint64_t v14 = v8;
        uint64_t v15 = v7;
        uint64_t v16 = v10;
        uint64_t v17 = v9;
        char v18 = 9;
        goto LABEL_11;
      }
      swift_release();
      swift_release();
      sub_1A734576C(v3, v2, v5, v4, 9);
      uint64_t v33 = v8;
      uint64_t v34 = v7;
      uint64_t v35 = v10;
      uint64_t v36 = v9;
      char v37 = 9;
      goto LABEL_70;
    default:
      if (*(unsigned char *)(a2 + 32))
      {
LABEL_56:
        sub_1A7345658(*(void *)a2, *(void **)(a2 + 8), v10, v9, v11);
        sub_1A7345658(v3, v2, v5, v4, v6);
        sub_1A734576C(v3, v2, v5, v4, v6);
        uint64_t v39 = v8;
        int64_t v40 = v7;
        uint64_t v41 = v10;
        uint64_t v42 = v9;
        char v43 = v11;
LABEL_57:
        sub_1A734576C(v39, v40, v41, v42, v43);
        char v32 = 0;
        return v32 & 1;
      }
      sub_1A7345658(*(void *)a2, *(void **)(a2 + 8), v10, v9, 0);
      sub_1A7345658(v3, v2, v5, v4, 0);
      swift_retain();
      swift_retain();
      if ((sub_1A7399F64(v3, v8) & 1) == 0)
      {
        swift_release();
        swift_release();
        sub_1A734576C(v3, v2, v5, v4, 0);
        uint64_t v39 = v8;
        int64_t v40 = v7;
        uint64_t v41 = v10;
        uint64_t v42 = v9;
        char v43 = 0;
        goto LABEL_57;
      }
      if (v2[2] == v7[2] && v2[3] == v7[3])
      {
        swift_release();
        swift_release();
        sub_1A734576C(v3, v2, v5, v4, 0);
        uint64_t v33 = v8;
        uint64_t v34 = v7;
        uint64_t v35 = v10;
        uint64_t v36 = v9;
        char v37 = 0;
LABEL_70:
        sub_1A734576C(v33, v34, v35, v36, v37);
        char v32 = 1;
        return v32 & 1;
      }
      char v13 = sub_1A7573DB0();
      swift_release();
      swift_release();
      sub_1A734576C(v3, v2, v5, v4, 0);
      uint64_t v14 = v8;
      uint64_t v15 = v7;
      uint64_t v16 = v10;
      uint64_t v17 = v9;
      char v18 = 0;
LABEL_11:
      sub_1A734576C(v14, v15, v16, v17, v18);
      return v13 & 1;
  }
}

uint64_t _s19ReminderKitInternal16REMSuggestedListC8listUUIDAC10Foundation0G0VSg_tcfC_0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A7571BC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A72BF1E8(a1, (uint64_t)v4, &qword_1EB704C40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A72CB560(a1, &qword_1EB704C40);
    sub_1A72CB560((uint64_t)v4, &qword_1EB704C40);
    unint64_t v9 = 0xE500000000000000;
    uint64_t v10 = 0x296C696E28;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v10 = sub_1A7571B80();
    unint64_t v9 = v11;
    sub_1A72CB560(a1, &qword_1EB704C40);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  type metadata accessor for REMSuggestedList();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v10;
  *(void *)(result + 24) = v9;
  return result;
}

unint64_t sub_1A739EE1C()
{
  unint64_t result = qword_1EB703F28;
  if (!qword_1EB703F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703F28);
  }
  return result;
}

unint64_t sub_1A739EE70(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v5 = *(void *)(result + 16);
  if (!v5) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v7 = 0;
  unint64_t v8 = result + 32;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  do
  {
    if (v7 <= v5) {
      unint64_t v10 = v5;
    }
    else {
      unint64_t v10 = v7;
    }
    unint64_t v11 = v7;
    while (1)
    {
      if (v10 == v11)
      {
        __break(1u);
        return result;
      }
      if (*(void *)(*(void *)(a3 + 40) + 16))
      {
        uint64_t v12 = *(void *)(v8 + 8 * v11);
        unint64_t result = sub_1A72B23E4(v12);
        if (v13) {
          break;
        }
      }
      if (v5 == ++v11) {
        return v9;
      }
    }
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = v4;
    if ((result & 1) == 0) {
      unint64_t result = sub_1A72D2CD8(0, *(void *)(v9 + 16) + 1, 1);
    }
    unint64_t v15 = *(void *)(v9 + 16);
    unint64_t v14 = *(void *)(v9 + 24);
    if (v15 >= v14 >> 1) {
      unint64_t result = sub_1A72D2CD8(v14 > 1, v15 + 1, 1);
    }
    unint64_t v7 = v11 + 1;
    *(void *)(v9 + 16) = v15 + 1;
    *(void *)(v9 + 8 * v15 + 32) = v12;
    uint64_t v4 = v16;
  }
  while (v5 - 1 != v11);
  return v9;
}

id _sSo24REMContactRepresentationC19ReminderKitInternalE5parse4fromABSgSS_tFZ_0(uint64_t a1, unint64_t a2)
{
  v37[4] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1A7572660();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7572650();
  uint64_t v8 = sub_1A7572620();
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10 >> 60 != 15)
  {
    uint64_t v16 = self;
    uint64_t v17 = (void *)sub_1A7571A00();
    id v36 = 0;
    id v18 = objc_msgSend(v16, sel_JSONObjectWithData_options_error_, v17, 0, &v36);

    id v19 = v36;
    if (v18)
    {
      sub_1A7573330();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(qword_1E96F2688);
      if (swift_dynamicCast())
      {
        char v20 = v36;
        if (!*((void *)v36 + 2)) {
          goto LABEL_26;
        }
        sub_1A72B2210(0x73656E6F6870, 0xE600000000000000);
        if (v21)
        {
          swift_bridgeObjectRetain();
          if (!v20[2]) {
            goto LABEL_26;
          }
        }
        else if (!v20[2])
        {
LABEL_26:
          swift_bridgeObjectRelease();
          id v32 = objc_allocWithZone(MEMORY[0x1E4F94AC8]);
          uint64_t v33 = (void *)sub_1A7572A00();
          swift_bridgeObjectRelease();
          uint64_t v34 = (void *)sub_1A7572A00();
          swift_bridgeObjectRelease();
          id v29 = objc_msgSend(v32, sel_initWithPhones_emails_, v33, v34);

          sub_1A7360424(v8, v10);
          return v29;
        }
        sub_1A72B2210(0x736C69616D65, 0xE600000000000000);
        if (v31) {
          swift_bridgeObjectRetain();
        }
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v22 = v19;
      uint64_t v23 = (void *)sub_1A7571850();

      swift_willThrow();
    }
    if (qword_1E96F0768 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1A7571E90();
    __swift_project_value_buffer(v24, (uint64_t)qword_1E96F24D0);
    swift_bridgeObjectRetain_n();
    char v25 = sub_1A7571E80();
    os_log_type_t v26 = sub_1A7572FD0();
    if (os_log_type_enabled(v25, v26))
    {
      unint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v37[0] = v28;
      *(_DWORD *)unint64_t v27 = 136315138;
      swift_bridgeObjectRetain();
      id v36 = (id)sub_1A72D1730(a1, a2, v37);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A72A1000, v25, v26, "Failed to parse dictionary from: {%s}", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v28, -1, -1);
      MEMORY[0x1AD0CD330](v27, -1, -1);
      sub_1A7360424(v8, v10);

      return 0;
    }
    sub_1A7360424(v8, v10);

LABEL_19:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  if (qword_1E96F0768 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1A7571E90();
  __swift_project_value_buffer(v11, (uint64_t)qword_1E96F24D0);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1A7571E80();
  os_log_type_t v13 = sub_1A7572FD0();
  if (!os_log_type_enabled(v12, v13))
  {

    goto LABEL_19;
  }
  unint64_t v14 = (uint8_t *)swift_slowAlloc();
  uint64_t v15 = swift_slowAlloc();
  v37[0] = v15;
  *(_DWORD *)unint64_t v14 = 136315138;
  swift_bridgeObjectRetain();
  id v36 = (id)sub_1A72D1730(a1, a2, v37);
  sub_1A7573250();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_1A72A1000, v12, v13, "Invalid json string: {%s}", v14, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1AD0CD330](v15, -1, -1);
  MEMORY[0x1AD0CD330](v14, -1, -1);

  return 0;
}

void *sub_1A739F5A0(uint64_t a1, unint64_t a2, void *a3)
{
  BOOL v6 = a1 == 0x296C696E28 && a2 == 0xE500000000000000;
  if (v6 || (sub_1A7573DB0() & 1) != 0)
  {
    a3[4] = 0;
    a3[5] = 0xE000000000000000;
    swift_retain();
  }
  else
  {
    swift_retain();
    id v7 = _sSo24REMContactRepresentationC19ReminderKitInternalE5parse4fromABSgSS_tFZ_0(a1, a2);
    if (v7)
    {
      uint64_t v8 = v7;
      REMContactRepresentation.quickName.getter();
      uint64_t v10 = v9;
      unint64_t v12 = v11;
    }
    else
    {
      uint64_t v10 = 0;
      unint64_t v12 = 0xE000000000000000;
    }
    a3[4] = v10;
    a3[5] = v12;
  }
  a3[2] = a1;
  a3[3] = a2;
  return a3;
}

Swift::String *sub_1A739F674(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = qword_1E96F0768;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1A7571E90();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E96F24D0);
  id v6 = a1;
  id v7 = sub_1A7571E80();
  os_log_type_t v8 = sub_1A7572FF0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v9 = 136315138;
    id v10 = objc_msgSend(v6, sel_description);
    uint64_t v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    unint64_t v13 = v12;

    sub_1A72D1730(v11, v13, &v18);
    sub_1A7573250();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v7, v8, "REMContactRepresentation: {%s}", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v17, -1, -1);
    MEMORY[0x1AD0CD330](v9, -1, -1);
  }
  else
  {
  }
  REMContactRepresentation.quickName.getter();
  v2[2]._uint64_t countAndFlagsBits = v14;
  v2[2]._object = v15;
  swift_release();
  v2[1] = REMContactRepresentation.parsableString()();
  return v2;
}

void *_s19ReminderKitInternal19REMSuggestedContactC08expectedE02ofACSo11REMReminderC_tFZ_0(void *a1)
{
  id v1 = objc_msgSend(a1, sel_contactHandles);
  if (v1)
  {
    uint64_t v2 = v1;
    type metadata accessor for REMSuggestedContact();
    swift_allocObject();
    id v3 = v2;
    uint64_t v4 = sub_1A739F674(v3);
  }
  else
  {
    type metadata accessor for REMSuggestedContact();
    uint64_t v4 = (void *)swift_allocObject();
    v4[4] = 0;
    v4[5] = 0xE000000000000000;
    v4[2] = 0x296C696E28;
    v4[3] = 0xE500000000000000;
  }
  return v4;
}

uint64_t _s19ReminderKitInternal20REMSuggestedLocationC08expectedE02ofACSaySo8REMAlarmCG_tFZ_0(unint64_t a1)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1A75738D0();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      char v22 = 0;
      unint64_t v4 = 0;
      unint64_t v25 = v2;
      unint64_t v26 = v2 & 0xC000000000000001;
      uint64_t v23 = v2 & 0xFFFFFFFFFFFFFF8;
      uint64_t v24 = v3;
      uint64_t v5 = &selRef_frequencyComponents;
      while (1)
      {
        if (v26)
        {
          id v6 = (id)MEMORY[0x1AD0CB800](v4, v2);
        }
        else
        {
          if (v4 >= *(void *)(v23 + 16))
          {
            __break(1u);
            goto LABEL_36;
          }
          id v6 = *(id *)(v2 + 8 * v4 + 32);
        }
        id v7 = v6;
        unint64_t v8 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_32;
        }
        id v9 = [v6 v5[221]];
        self;
        if (swift_dynamicCastObjCClass())
        {

          swift_bridgeObjectRelease();
          unint64_t v17 = 0xE300000000000000;
          uint64_t v18 = 7496035;
          goto LABEL_39;
        }

        id v1 = [v7 v5[221]];
        self;
        id v10 = (void *)swift_dynamicCastObjCClass();
        if (!v10) {
          goto LABEL_4;
        }
        uint64_t v11 = v10;
        unint64_t v12 = v5;
        id v13 = [v10 (SEL)0x1F654D535];
        id v14 = objc_msgSend(v13, sel_contactLabel);

        if (v14
          || (id v15 = [v11 (SEL)0x1F654D535],
              id v14 = objc_msgSend(v15, sel_title),
              v15,
              uint64_t v5 = v12,
              v14))
        {
          _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

          sub_1A72DF534();
          if (sub_1A75732F0())
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v19 = objc_msgSend(v11, sel_proximity);
            if (!v19) {
              goto LABEL_29;
            }
            if (v19 != (id)1)
            {
              if (v19 == (id)2)
              {
                uint64_t v18 = 0x6F682E657661656CLL;
                unint64_t v17 = 0xEA0000000000656DLL;
                goto LABEL_34;
              }
LABEL_29:
              unint64_t v17 = 0xE400000000000000;
              uint64_t v18 = 1701670760;
              goto LABEL_34;
            }
LABEL_32:
            unint64_t v17 = 0xEB00000000656D6FLL;
            uint64_t v18 = 0x682E657669727261;
            goto LABEL_34;
          }
          char v16 = sub_1A75732F0();
          swift_bridgeObjectRelease();
          if (v16)
          {
            swift_bridgeObjectRelease();
            id v20 = objc_msgSend(v11, sel_proximity);
            if (!v20) {
              goto LABEL_30;
            }
            if (v20 == (id)2)
            {
              unint64_t v17 = 0xEA00000000006B72;
              uint64_t v18 = 0x6F772E657661656CLL;
              goto LABEL_34;
            }
            if (v20 == (id)1)
            {
              unint64_t v17 = 0xEB000000006B726FLL;
              uint64_t v18 = 0x772E657669727261;
            }
            else
            {
LABEL_30:
              unint64_t v17 = 0xE400000000000000;
              uint64_t v18 = 1802661751;
            }
LABEL_34:

            goto LABEL_39;
          }

          char v22 = 1;
          unint64_t v4 = v8;
          uint64_t v5 = v12;
          unint64_t v2 = v25;
          if (v8 == v24)
          {
            swift_bridgeObjectRelease();
LABEL_20:
            unint64_t v17 = 0xE500000000000000;
            uint64_t v18 = 0x726568746FLL;
            goto LABEL_39;
          }
        }
        else
        {
LABEL_4:

          ++v4;
          unint64_t v2 = v25;
          if (v8 == v24)
          {
            swift_bridgeObjectRelease();
            if ((v22 & 1) == 0) {
              goto LABEL_38;
            }
            goto LABEL_20;
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_38:
  unint64_t v17 = 0xE500000000000000;
  uint64_t v18 = 0x296C696E28;
LABEL_39:
  type metadata accessor for REMSuggestedLocation();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v18;
  *(void *)(result + 24) = v17;
  return result;
}

uint64_t sub_1A739FE70@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A7392EB8(*(void *)(v1 + 32), a1);
}

uint64_t _s19ReminderKitInternal26REMSuggestedAttributeInputC14partialKeyPath3fors07PartialhI0CyACGAC10CodingKeysO_tFZ_0()
{
  return swift_getKeyPath();
}

uint64_t sub_1A739FEA8(void *a1)
{
  uint64_t v3 = sub_1A7571E00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v122 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v113 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v126 = (char *)&v113 - v13;
  uint64_t v123 = sub_1A75717A0();
  uint64_t v127 = *(void *)(v123 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v123);
  char v16 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v121 = (char *)&v113 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v118 = (uint64_t)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v119 = (char *)&v113 - v21;
  char v22 = (void *)sub_1A7571B60();
  uint64_t v124 = *(v22 - 1);
  id v125 = v22;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1A7571BC0();
  uint64_t v129 = *(void *)(v25 - 8);
  uint64_t v130 = v25;
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  unint64_t v114 = (char *)&v113 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  id v29 = (char *)&v113 - v28;
  id v30 = objc_msgSend(a1, sel_titleAsString);
  unint64_t v128 = v12;
  uint64_t v117 = v3;
  uint64_t v116 = v4;
  unint64_t v115 = v6;
  uint64_t v120 = v16;
  if (v30)
  {
    char v31 = v30;
    uint64_t v32 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    unint64_t v34 = v33;
  }
  else
  {
    uint64_t v32 = 0;
    unint64_t v34 = 0xE000000000000000;
  }
  *(void *)(v1 + 16) = v32;
  *(void *)(v1 + 24) = v34;
  id v35 = objc_msgSend(a1, sel_objectID);
  uint64_t v36 = v1;
  char v37 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  id v38 = objc_allocWithZone(v37);
  id v39 = v35;
  id v40 = objc_msgSend(v39, sel_uuid);
  sub_1A7571BB0();

  uint64_t v41 = (void *)sub_1A7571B90();
  unint64_t v113 = *(void (**)(char *, uint64_t))(v129 + 8);
  v113(v29, v130);
  id v42 = objc_msgSend(v39, sel_entityName);
  if (!v42)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    id v42 = (id)sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  v133.receiver = v38;
  v133.super_class = v37;
  id v43 = objc_msgSendSuper2(&v133, sel_initWithUUID_entityName_, v41, v42);

  *(void *)(v36 + 32) = v43;
  id v44 = objc_msgSend(a1, sel_creationDate);
  sub_1A7571B20();

  (*(void (**)(uint64_t, char *, id))(v124 + 32))(v36 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_creationDate, v24, v125);
  id v45 = objc_msgSend(a1, sel_list);
  LODWORD(v43) = objc_msgSend(v45, sel_isPlaceholder);

  uint64_t v46 = v36;
  if (v43)
  {
    type metadata accessor for REMSuggestedList();
    uint64_t inited = swift_initStaticObject();
    id v48 = a1;
    uint64_t v50 = (uint64_t)v126;
    uint64_t v49 = v127;
  }
  else
  {
    id v125 = objc_msgSend(a1, sel_list);
    id v51 = objc_msgSend(v125, sel_objectID);
    id v52 = objc_msgSend(v51, sel_uuid);

    uint64_t v53 = (uint64_t)v119;
    sub_1A7571BB0();

    uint64_t v54 = v129;
    uint64_t v55 = v130;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v129 + 56))(v53, 0, 1, v130);
    uint64_t v56 = v118;
    sub_1A72BF1E8(v53, v118, &qword_1EB704C40);
    int v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v56, 1, v55);
    id v48 = a1;
    uint64_t v50 = (uint64_t)v126;
    uint64_t v49 = v127;
    if (v57 == 1)
    {
      uint64_t v58 = v56;
      uint64_t v59 = 0x296C696E28;
      sub_1A72CB560(v53, &qword_1EB704C40);
      sub_1A72CB560(v58, &qword_1EB704C40);
      unint64_t v60 = 0xE500000000000000;
    }
    else
    {
      unint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 32);
      uint64_t v62 = v114;
      v61(v114, v56, v55);
      uint64_t v59 = sub_1A7571B80();
      uint64_t v63 = v55;
      unint64_t v60 = v64;
      sub_1A72CB560(v53, &qword_1EB704C40);
      v113(v62, v63);
    }
    type metadata accessor for REMSuggestedList();
    uint64_t inited = swift_allocObject();
    *(void *)(inited + 16) = v59;
    *(void *)(inited + 24) = v60;
  }
  *(void *)(v46 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_list) = inited;
  id v65 = objc_msgSend(v48, sel_dueDateComponents);
  if (!v65)
  {
    uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56);
    uint64_t v69 = v123;
    v70(v50, 1, 1, v123);
    goto LABEL_18;
  }
  unint64_t v66 = v65;
  unint64_t v67 = v120;
  sub_1A75716C0();

  uint64_t v68 = *(void (**)(uint64_t, char *, uint64_t))(v49 + 32);
  uint64_t v69 = v123;
  v68(v50, v67, v123);
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56);
  v70(v50, 0, 1, v69);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v50, 1, v69) == 1)
  {
LABEL_18:
    sub_1A72CB560(v50, &qword_1EB6FFDE0);
    type metadata accessor for REMSuggestedWeekDay();
    uint64_t v75 = swift_allocObject();
    uint64_t v131 = 0;
    *(void *)(v75 + 16) = sub_1A7573BC0();
    *(void *)(v75 + 24) = v76;
    goto LABEL_22;
  }
  v68((uint64_t)v121, (char *)v50, v69);
  uint64_t v71 = (uint64_t)v115;
  sub_1A7571DC0();
  uint64_t v72 = DateComponents.dayOfWeek(with:)(v71);
  char v74 = v73;
  (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v71, v117);
  if (v74)
  {
    type metadata accessor for REMSuggestedWeekDay();
    uint64_t v75 = swift_allocObject();
  }
  else
  {
    type metadata accessor for REMSuggestedWeekDay();
    uint64_t v75 = swift_allocObject();
    if ((unint64_t)(v72 - 8) > 0xFFFFFFFFFFFFFFF8) {
      goto LABEL_21;
    }
  }
  uint64_t v72 = 0;
LABEL_21:
  uint64_t v131 = v72;
  *(void *)(v75 + 16) = sub_1A7573BC0();
  *(void *)(v75 + 24) = v77;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v121, v69);
LABEL_22:
  *(void *)(v46 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDayOfWeek) = v75;
  id v78 = objc_msgSend(v48, sel_dueDateComponents);
  if (v78)
  {
    uint64_t v79 = v78;
    uint64_t v80 = (uint64_t)v122;
    sub_1A75716C0();

    uint64_t v81 = 0;
  }
  else
  {
    uint64_t v81 = 1;
    uint64_t v80 = (uint64_t)v122;
  }
  v70(v80, v81, 1, v69);
  uint64_t v82 = (uint64_t)v128;
  sub_1A734E5D8(v80, (uint64_t)v128, &qword_1EB6FFDE0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v82, 1, v69) == 1)
  {
    sub_1A72CB560(v82, &qword_1EB6FFDE0);
    uint64_t v83 = 0;
    unint64_t v84 = 0xE000000000000000;
  }
  else
  {
    uint64_t v83 = sub_1A7571650();
    unint64_t v84 = v85;
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v82, v69);
  }
  unint64_t v86 = (uint64_t *)(v46 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDateTime);
  uint64_t *v86 = v83;
  v86[1] = v84;
  id v87 = objc_msgSend(v48, sel_alarms);
  if (v87)
  {
    unint64_t v88 = v87;
    sub_1A72BEFEC(0, &qword_1E96F24E8);
    unint64_t v89 = sub_1A7572A10();

    uint64_t v90 = _s19ReminderKitInternal20REMSuggestedLocationC08expectedE02ofACSaySo8REMAlarmCG_tFZ_0(v89);
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for REMSuggestedLocation();
    uint64_t v90 = swift_allocObject();
    *(void *)(v90 + 16) = 0x296C696E28;
    *(void *)(v90 + 24) = 0xE500000000000000;
  }
  *(void *)(v46 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_location) = v90;
  id v91 = objc_msgSend(v48, sel_flaggedContext);
  if (v91)
  {
    unint64_t v92 = v91;
    id v93 = objc_msgSend(v91, sel_flagged);

    BOOL v94 = v93 != 0;
  }
  else
  {
    BOOL v94 = 0;
  }
  *(unsigned char *)(v46 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_flagged) = v94;
  id v95 = objc_msgSend(v48, sel_priority);
  *(void *)(v46 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_priority) = v95;
  id v96 = objc_msgSend(v48, sel_hashtags);
  sub_1A72BEFEC(0, &qword_1E96F2670);
  sub_1A73A4C24();
  uint64_t v97 = sub_1A7572C80();

  uint64_t v98 = sub_1A738F13C(v97);
  uint64_t v99 = sub_1A72E6AB4(v98);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v46 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_tags) = v99;
  *(void *)(v46 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_contact) = _s19ReminderKitInternal19REMSuggestedContactC08expectedE02ofACSo11REMReminderC_tFZ_0(v48);
  id v100 = objc_msgSend(v48, sel_recurrenceRules);
  uint64_t v101 = MEMORY[0x1E4FBC870];
  if (!v100) {
    goto LABEL_46;
  }
  uint64_t v102 = v100;
  sub_1A72BEFEC(0, &qword_1E96F2680);
  unint64_t v103 = sub_1A7572A10();

  uint64_t v132 = v101;
  if (!(v103 >> 62))
  {
    uint64_t v104 = *(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v104) {
      goto LABEL_37;
    }
    goto LABEL_45;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A75738D0();
  uint64_t v104 = result;
  if (!result)
  {
LABEL_45:
    swift_bridgeObjectRelease_n();
LABEL_46:
    *(void *)(v46 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_recurrence) = v101;
    return v46;
  }
LABEL_37:
  if (v104 >= 1)
  {
    uint64_t v106 = 0;
    do
    {
      if ((v103 & 0xC000000000000001) != 0) {
        id v107 = (id)MEMORY[0x1AD0CB800](v106, v103);
      }
      else {
        id v107 = *(id *)(v103 + 8 * v106 + 32);
      }
      unint64_t v108 = v107;
      ++v106;
      id v109 = objc_msgSend(v107, sel_iCalendarDescription);
      uint64_t v110 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v112 = v111;

      swift_bridgeObjectRetain();
      sub_1A72DF384(&v131, v110, v112);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (v104 != v106);
    swift_bridgeObjectRelease_n();
    uint64_t v101 = v132;
    goto LABEL_46;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for REMSuggestedWeekDay()
{
  return self;
}

uint64_t type metadata accessor for REMSuggestedLocation()
{
  return self;
}

unint64_t sub_1A73A0BE4()
{
  unint64_t result = qword_1EB705070;
  if (!qword_1EB705070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705070);
  }
  return result;
}

uint64_t sub_1A73A0C38(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for REMSuggestedList()
{
  return self;
}

uint64_t type metadata accessor for REMSuggestedContact()
{
  return self;
}

uint64_t sub_1A73A0CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v5 = *(void *)(a1 + 16);
  id v6 = sub_1A72D262C(0, v5);
  sub_1A7398264((uint64_t)v6, &v30);
  id v29 = (void *)v3;
  *(_OWORD *)(v3 + 16) = v30;
  if (!v5)
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
LABEL_17:
    uint64_t result = (uint64_t)v29;
    v29[4] = v9;
    v29[5] = a2;
    v29[6] = a3;
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = (uint64_t *)(a1 + 40);
  uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v11 = *(v8 - 1);
    uint64_t v12 = *v8;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v30 = v9;
    unint64_t v15 = sub_1A72B23E4(v7);
    uint64_t v16 = v9[2];
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      break;
    }
    char v19 = v14;
    if (v9[3] >= v18)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v9 = (void *)v30;
        if (v14) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1A72BBEC0();
        uint64_t v9 = (void *)v30;
        if (v19) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1A72B5D80(v18, isUniquelyReferenced_nonNull_native);
      unint64_t v20 = sub_1A72B23E4(v7);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_20;
      }
      unint64_t v15 = v20;
      uint64_t v9 = (void *)v30;
      if (v19)
      {
LABEL_3:
        uint64_t v10 = (void *)(v9[7] + 16 * v15);
        swift_bridgeObjectRelease();
        *uint64_t v10 = v11;
        v10[1] = v12;
        goto LABEL_4;
      }
    }
    v9[(v15 >> 6) + 8] |= 1 << v15;
    *(void *)(v9[6] + 8 * v15) = v7;
    char v22 = (void *)(v9[7] + 16 * v15);
    *char v22 = v11;
    v22[1] = v12;
    uint64_t v23 = v9[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_19;
    }
    void v9[2] = v25;
LABEL_4:
    ++v7;
    v8 += 2;
    swift_bridgeObjectRelease();
    if (v5 == v7) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t sub_1A73A0E98(unint64_t a1, unint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_27;
  }
  int64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  do
  {
    unint64_t v27 = a2;
    id v6 = sub_1A72D262C(0, v5);
    sub_1A7398264((uint64_t)v6, &v29);
    uint64_t v28 = v2;
    *(_OWORD *)(v2 + 16) = v29;
    if (!v5)
    {
      uint64_t v2 = MEMORY[0x1E4FBC868];
LABEL_23:
      uint64_t result = v28;
      *(void *)(v28 + 32) = v2;
      *(void *)(v28 + 40) = v27;
      return result;
    }
    uint64_t v7 = 0;
    a2 = a1 & 0xC000000000000001;
    uint64_t v2 = MEMORY[0x1E4FBC868];
    while (1)
    {
      id v10 = a2 ? (id)MEMORY[0x1AD0CB800](v7, a1) : *(id *)(a1 + 8 * v7 + 32);
      id v11 = v10;
      uint64_t v12 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        break;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v29 = v2;
      unint64_t v15 = sub_1A72B23E4(v7);
      uint64_t v16 = *(void *)(v2 + 16);
      BOOL v17 = (v14 & 1) == 0;
      uint64_t v18 = v16 + v17;
      if (__OFADD__(v16, v17)) {
        goto LABEL_25;
      }
      char v19 = v14;
      if (*(void *)(v2 + 24) >= v18)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v2 = v29;
          if (v14) {
            goto LABEL_5;
          }
        }
        else
        {
          sub_1A72BC9A0();
          uint64_t v2 = v29;
          if (v19) {
            goto LABEL_5;
          }
        }
      }
      else
      {
        sub_1A72B6ED8(v18, isUniquelyReferenced_nonNull_native);
        unint64_t v20 = sub_1A72B23E4(v7);
        if ((v19 & 1) != (v21 & 1)) {
          goto LABEL_29;
        }
        unint64_t v15 = v20;
        uint64_t v2 = v29;
        if (v19)
        {
LABEL_5:
          uint64_t v8 = *(void *)(v2 + 56);
          uint64_t v9 = 8 * v15;

          *(void *)(v8 + v9) = v11;
          goto LABEL_6;
        }
      }
      *(void *)(v2 + 8 * (v15 >> 6) + 64) |= 1 << v15;
      uint64_t v22 = 8 * v15;
      *(void *)(*(void *)(v2 + 48) + v22) = v7;
      *(void *)(*(void *)(v2 + 56) + v22) = v11;
      uint64_t v23 = *(void *)(v2 + 16);
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (v24) {
        goto LABEL_26;
      }
      *(void *)(v2 + 16) = v25;
LABEL_6:
      swift_bridgeObjectRelease();
      ++v7;
      if (v12 == v5) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    int64_t v5 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  while ((v5 & 0x8000000000000000) == 0);
  __break(1u);
LABEL_29:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t sub_1A73A10BC(uint64_t a1, char *a2)
{
  id v65 = a2;
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2660);
  uint64_t v4 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v69 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v71 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v64 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v64 - v12;
  uint64_t v14 = sub_1A7571B60();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v79 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v68 = (char *)&v64 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2668);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v83 = (uint64_t *)((char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (uint64_t *)((char *)&v64 - v22);
  uint64_t v74 = a1;
  unint64_t v24 = *(void *)(a1 + 16);
  uint64_t v25 = sub_1A72D262C(0, v24);
  sub_1A7398264((uint64_t)v25, &v88);
  uint64_t v72 = 0;
  uint64_t v66 = v2;
  *(_OWORD *)(v2 + 16) = v88;
  uint64_t v73 = v15 + 16;
  uint64_t v26 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  unint64_t v84 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  unint64_t v85 = (void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v80 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v4 + 48);
  uint64_t v81 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v82 = v15;
  uint64_t v67 = v15 + 40;
  unint64_t v27 = 0;
  uint64_t v28 = (void *)MEMORY[0x1E4FBC868];
  unint64_t v77 = v24;
  id v78 = v13;
  uint64_t v75 = v26;
  uint64_t v76 = v23;
  uint64_t v70 = v11;
  BOOL v29 = v24 == 0;
  if (!v24) {
    goto LABEL_9;
  }
LABEL_2:
  if (!v29)
  {
    uint64_t v30 = v82;
    (*(void (**)(char *, unint64_t, uint64_t))(v82 + 16))(v13, v74+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v27, v14);
    unint64_t v86 = v27 + 1;
    char v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
    v31(v13, 0, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v13, 1, v14) != 1)
    {
      uint64_t v32 = *v85;
      uint64_t v33 = v87;
      unint64_t v34 = v68;
      (*v85)(v68, v13, v14);
      id v35 = &v69[*(int *)(v33 + 48)];
      v32(v35, v34, v14);
      uint64_t v36 = v72 + 1;
      if (!__OFADD__(v72, 1))
      {
        char v37 = (char *)v83 + *(int *)(v33 + 48);
        void *v83 = v72;
        v32(v37, v35, v14);
        uint64_t v38 = 0;
        uint64_t v72 = v36;
        uint64_t v26 = v75;
        uint64_t v23 = v76;
        goto LABEL_11;
      }
      goto LABEL_32;
    }
    while (1)
    {
      sub_1A72CB560((uint64_t)v13, &qword_1EB704C60);
      uint64_t v38 = 1;
LABEL_11:
      uint64_t v41 = (uint64_t)v83;
      uint64_t v42 = v87;
      (*v81)(v83, v38, 1, v87);
      sub_1A734E5D8(v41, (uint64_t)v23, &qword_1E96F2668);
      if ((*v80)(v23, 1, v42) == 1)
      {
        uint64_t v62 = v66;
        *(void *)(v66 + 32) = v28;
        (*v85)((char *)(v62 + *(void *)(*(void *)v62 + 104)), v65, v14);
        return v62;
      }
      uint64_t v43 = *v23;
      id v44 = *v85;
      (*v85)(v11, (char *)v23 + *(int *)(v87 + 48), v14);
      v31(v11, 0, 1, v14);
      if ((*v84)(v11, 1, v14) != 1) {
        break;
      }
      sub_1A72CB560((uint64_t)v11, &qword_1EB704C60);
      unint64_t v45 = sub_1A72B23E4(v43);
      if (v46)
      {
        unint64_t v47 = v45;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v88 = v28;
        uint64_t v13 = v78;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A72BC710();
          uint64_t v28 = (void *)v88;
        }
        uint64_t v40 = (uint64_t)v71;
        v44(v71, (char *)(v28[7] + *(void *)(v82 + 72) * v47), v14);
        sub_1A745A2B0(v47, (uint64_t)v28);
        swift_bridgeObjectRelease();
        uint64_t v39 = 0;
      }
      else
      {
        uint64_t v39 = 1;
        uint64_t v13 = v78;
        uint64_t v40 = (uint64_t)v71;
      }
      v31((char *)v40, v39, 1, v14);
      sub_1A72CB560(v40, &qword_1EB704C60);
      unint64_t v24 = v77;
LABEL_8:
      unint64_t v27 = v86;
      BOOL v29 = v86 >= v24;
      if (v86 != v24) {
        goto LABEL_2;
      }
LABEL_9:
      char v31 = *v26;
      (*v26)(v13, 1, 1, v14);
      unint64_t v86 = v24;
    }
    v44(v79, v11, v14);
    int v49 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v88 = v28;
    unint64_t v51 = sub_1A72B23E4(v43);
    uint64_t v52 = v28[2];
    BOOL v53 = (v50 & 1) == 0;
    uint64_t v54 = v52 + v53;
    if (__OFADD__(v52, v53)) {
      goto LABEL_31;
    }
    char v55 = v50;
    if (v28[3] < v54)
    {
      sub_1A72B6B30(v54, v49);
      unint64_t v56 = sub_1A72B23E4(v43);
      if ((v55 & 1) != (v57 & 1)) {
        goto LABEL_34;
      }
      unint64_t v51 = v56;
      uint64_t v58 = (void *)v88;
      if ((v55 & 1) == 0) {
        goto LABEL_21;
      }
LABEL_25:
      (*(void (**)(unint64_t, char *, uint64_t))(v82 + 40))(v58[7] + *(void *)(v82 + 72) * v51, v79, v14);
      uint64_t v23 = v76;
LABEL_26:
      uint64_t v28 = (void *)v88;
      swift_bridgeObjectRelease();
      id v11 = v70;
      unint64_t v24 = v77;
      uint64_t v13 = v78;
      uint64_t v26 = v75;
      goto LABEL_8;
    }
    if (v49)
    {
      uint64_t v58 = (void *)v88;
      if (v50) {
        goto LABEL_25;
      }
    }
    else
    {
      sub_1A72BC710();
      uint64_t v58 = (void *)v88;
      if (v55) {
        goto LABEL_25;
      }
    }
LABEL_21:
    v58[(v51 >> 6) + 8] |= 1 << v51;
    *(void *)(v58[6] + 8 * v51) = v43;
    v44((char *)(v58[7] + *(void *)(v82 + 72) * v51), v79, v14);
    uint64_t v59 = v58[2];
    BOOL v60 = __OFADD__(v59, 1);
    uint64_t v61 = v59 + 1;
    uint64_t v23 = v76;
    if (v60) {
      goto LABEL_33;
    }
    id v58[2] = v61;
    goto LABEL_26;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t sub_1A73A187C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = sub_1A72D262C(0, v5);
  sub_1A7398264((uint64_t)v6, &v25);
  *(_OWORD *)(v3 + 16) = v25;
  if (!v5)
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
LABEL_17:
    *(void *)(v3 + 32) = v9;
    *(unsigned char *)(v3 + 40) = a2 & 1;
    return v3;
  }
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 32;
  uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    char v10 = *(unsigned char *)(v8 + v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v25 = v9;
    unint64_t v13 = sub_1A72B23E4(v7);
    uint64_t v14 = v9[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      break;
    }
    char v17 = v12;
    if (v9[3] >= v16)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v9 = (void *)v25;
        if (v12) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1A72BC3C0();
        uint64_t v9 = (void *)v25;
        if (v17) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1A72B65B8(v16, isUniquelyReferenced_nonNull_native);
      unint64_t v18 = sub_1A72B23E4(v7);
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_20;
      }
      unint64_t v13 = v18;
      uint64_t v9 = (void *)v25;
      if (v17)
      {
LABEL_3:
        *(unsigned char *)(v9[7] + v13) = v10;
        goto LABEL_4;
      }
    }
    v9[(v13 >> 6) + 8] |= 1 << v13;
    *(void *)(v9[6] + 8 * v13) = v7;
    *(unsigned char *)(v9[7] + v13) = v10;
    uint64_t v20 = v9[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_19;
    }
    void v9[2] = v22;
LABEL_4:
    ++v7;
    swift_bridgeObjectRelease();
    if (v5 == v7) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t sub_1A73A1A30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = sub_1A72D262C(0, v5);
  sub_1A7398264((uint64_t)v6, &v26);
  *(_OWORD *)(v3 + 16) = v26;
  if (!v5)
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
LABEL_17:
    *(void *)(v3 + 32) = v9;
    *(void *)(v3 + 40) = a2;
    return v3;
  }
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 32;
  uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v10 = *(void *)(v8 + 8 * v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v26 = v9;
    unint64_t v13 = sub_1A72B23E4(v7);
    uint64_t v14 = v9[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      break;
    }
    char v17 = v12;
    if (v9[3] >= v16)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v9 = (void *)v26;
        if (v12) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1A72BC22C();
        uint64_t v9 = (void *)v26;
        if (v17) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1A72B6308(v16, isUniquelyReferenced_nonNull_native);
      unint64_t v18 = sub_1A72B23E4(v7);
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_20;
      }
      unint64_t v13 = v18;
      uint64_t v9 = (void *)v26;
      if (v17)
      {
LABEL_3:
        *(void *)(v9[7] + 8 * v13) = v10;
        goto LABEL_4;
      }
    }
    v9[(v13 >> 6) + 8] |= 1 << v13;
    uint64_t v20 = 8 * v13;
    *(void *)(v9[6] + v20) = v7;
    *(void *)(v9[7] + v20) = v10;
    uint64_t v21 = v9[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_19;
    }
    void v9[2] = v23;
LABEL_4:
    ++v7;
    swift_bridgeObjectRelease();
    if (v5 == v7) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t sub_1A73A1BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = sub_1A72D262C(0, v5);
  sub_1A7398264((uint64_t)v6, &v26);
  *(_OWORD *)(v3 + 16) = v26;
  if (v5)
  {
    uint64_t v7 = 0;
    uint64_t v8 = a1 + 32;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
    while (1)
    {
      uint64_t v11 = *(void *)(v8 + 8 * v7);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v26 = v9;
      unint64_t v14 = sub_1A72B23E4(v7);
      uint64_t v15 = v9[2];
      BOOL v16 = (v13 & 1) == 0;
      uint64_t v17 = v15 + v16;
      if (__OFADD__(v15, v16)) {
        break;
      }
      char v18 = v13;
      if (v9[3] >= v17)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1A72BC088();
        }
      }
      else
      {
        sub_1A72B6050(v17, isUniquelyReferenced_nonNull_native);
        unint64_t v19 = sub_1A72B23E4(v7);
        if ((v18 & 1) != (v20 & 1)) {
          goto LABEL_18;
        }
        unint64_t v14 = v19;
      }
      uint64_t v9 = (void *)v26;
      if (v18)
      {
        uint64_t v10 = *(void *)(v26 + 56);
        swift_bridgeObjectRelease();
        *(void *)(v10 + 8 * v14) = v11;
      }
      else
      {
        *(void *)(v26 + 8 * (v14 >> 6) + 64) |= 1 << v14;
        *(void *)(v9[6] + 8 * v14) = v7;
        *(void *)(v9[7] + 8 * v14) = v11;
        uint64_t v21 = v9[2];
        BOOL v22 = __OFADD__(v21, 1);
        uint64_t v23 = v21 + 1;
        if (v22) {
          goto LABEL_17;
        }
        void v9[2] = v23;
      }
      ++v7;
      swift_bridgeObjectRelease();
      if (v5 == v7) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    uint64_t result = sub_1A7574010();
    __break(1u);
  }
  else
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
LABEL_15:
    *(void *)(v3 + 32) = v9;
    *(void *)(v3 + 40) = a2;
    return v3;
  }
  return result;
}

uint64_t sub_1A73A1D90(unint64_t a1, uint64_t isUniquelyReferenced_nonNull_native, void (*a3)(void), unint64_t a4)
{
  if (a1 >> 62) {
    goto LABEL_28;
  }
  int64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  do
  {
    uint64_t v25 = isUniquelyReferenced_nonNull_native;
    uint64_t v9 = sub_1A72D262C(0, v8);
    sub_1A7398264((uint64_t)v9, &v28);
    uint64_t v26 = v4;
    *(_OWORD *)(v4 + 16) = v28;
    if (!v8)
    {
      uint64_t v4 = MEMORY[0x1E4FBC868];
LABEL_24:
      uint64_t result = v26;
      *(void *)(v26 + 32) = v4;
      *(void *)(v26 + 40) = v25;
      return result;
    }
    unint64_t v24 = (void (*)(void))a4;
    uint64_t v10 = 0;
    uint64_t v4 = MEMORY[0x1E4FBC868];
    while ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = MEMORY[0x1AD0CB800](v10, a1);
      uint64_t v12 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_25;
      }
LABEL_12:
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v28 = v4;
      a4 = sub_1A72B23E4(v10);
      uint64_t v14 = *(void *)(v4 + 16);
      BOOL v15 = (v13 & 1) == 0;
      if (__OFADD__(v14, v15)) {
        goto LABEL_26;
      }
      char v16 = v13;
      if (*(void *)(v4 + 24) >= v14 + v15)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v4 = v28;
          if (v13) {
            goto LABEL_5;
          }
        }
        else
        {
          v24();
          uint64_t v4 = v28;
          if (v16) {
            goto LABEL_5;
          }
        }
      }
      else
      {
        a3();
        unint64_t v17 = sub_1A72B23E4(v10);
        if ((v16 & 1) != (v18 & 1)) {
          goto LABEL_30;
        }
        a4 = v17;
        uint64_t v4 = v28;
        if (v16)
        {
LABEL_5:
          char isUniquelyReferenced_nonNull_native = *(void *)(v4 + 56);
          a4 *= 8;
          swift_release();
          *(void *)(isUniquelyReferenced_nonNull_native + a4) = v11;
          goto LABEL_6;
        }
      }
      *(void *)(v4 + 8 * (a4 >> 6) + 64) |= 1 << a4;
      uint64_t v19 = 8 * a4;
      *(void *)(*(void *)(v4 + 48) + v19) = v10;
      *(void *)(*(void *)(v4 + 56) + v19) = v11;
      uint64_t v20 = *(void *)(v4 + 16);
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        goto LABEL_27;
      }
      *(void *)(v4 + 16) = v22;
LABEL_6:
      swift_bridgeObjectRelease();
      ++v10;
      if (v12 == v8) {
        goto LABEL_24;
      }
    }
    uint64_t v11 = *(void *)(a1 + 8 * v10 + 32);
    swift_retain();
    uint64_t v12 = v10 + 1;
    if (!__OFADD__(v10, 1)) {
      goto LABEL_12;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    int64_t v8 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  while ((v8 & 0x8000000000000000) == 0);
  __break(1u);
LABEL_30:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t sub_1A73A1FDC(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(void *)(*(void *)(v1 + 24) + 16)
    && (sub_1A72B23E4(a1), (v4 & 1) != 0)
    && (uint64_t v5 = *(void *)(v1 + 32), *(void *)(v5 + 16))
    && (unint64_t v6 = sub_1A72B23E4(a1), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(v5 + 56) + 16 * v6;
  }
  else
  {
    uint64_t v8 = v2 + 40;
  }
  return *(void *)v8;
}

uint64_t sub_1A73A2054(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    uint64_t v3 = *(void **)(v1 + 16);
    if (*(void *)(v3[3] + 16)
      && (sub_1A72B23E4(a1), (v4 & 1) != 0)
      && (uint64_t v5 = v3[4], *(void *)(v5 + 16))
      && (unint64_t v6 = sub_1A72B23E4(a1), (v7 & 1) != 0))
    {
      return *(void *)(*(void *)(v5 + 56) + 16 * v6);
    }
    else
    {
      return v3[5];
    }
  }
  else if (*(void *)(*(void *)(v1 + 40) + 16) && (sub_1A72B23E4(a1), (v9 & 1) != 0))
  {
    return sub_1A73A1FDC(a1);
  }
  else
  {
    return *(void *)(*(void *)(v1 + 16) + 40);
  }
}

uint64_t type metadata accessor for REMSuggestedAttributeInput(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1EB705088);
}

unint64_t sub_1A73A2128()
{
  unint64_t result = qword_1EB701CA8;
  if (!qword_1EB701CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701CA8);
  }
  return result;
}

unint64_t sub_1A73A217C()
{
  unint64_t result = qword_1EB7003C8;
  if (!qword_1EB7003C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB701AC8);
    sub_1A73A221C();
    sub_1A7360318(&qword_1EB704C68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7003C8);
  }
  return result;
}

unint64_t sub_1A73A221C()
{
  unint64_t result = qword_1EB700240;
  if (!qword_1EB700240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700240);
  }
  return result;
}

unint64_t sub_1A73A2270()
{
  unint64_t result = qword_1EB700050;
  if (!qword_1EB700050)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB701AC8);
    sub_1A73A2310();
    sub_1A7360318(&qword_1EB704C00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700050);
  }
  return result;
}

unint64_t sub_1A73A2310()
{
  unint64_t result = qword_1EB6FFF28;
  if (!qword_1EB6FFF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FFF28);
  }
  return result;
}

unint64_t sub_1A73A2364()
{
  unint64_t result = qword_1E96F2590;
  if (!qword_1E96F2590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2590);
  }
  return result;
}

unint64_t sub_1A73A23B8()
{
  unint64_t result = qword_1E96F2598;
  if (!qword_1E96F2598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2598);
  }
  return result;
}

unint64_t sub_1A73A240C()
{
  unint64_t result = qword_1EB700238;
  if (!qword_1EB700238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700238);
  }
  return result;
}

unint64_t sub_1A73A2460()
{
  unint64_t result = qword_1E96F25B0;
  if (!qword_1E96F25B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F25B0);
  }
  return result;
}

unint64_t sub_1A73A24B4()
{
  unint64_t result = qword_1EB6FFF20;
  if (!qword_1EB6FFF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FFF20);
  }
  return result;
}

unint64_t sub_1A73A250C()
{
  unint64_t result = qword_1E96F25C0;
  if (!qword_1E96F25C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F25C0);
  }
  return result;
}

unint64_t sub_1A73A2564()
{
  unint64_t result = qword_1EB703F38;
  if (!qword_1EB703F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703F38);
  }
  return result;
}

unint64_t sub_1A73A25BC()
{
  unint64_t result = qword_1EB703F30;
  if (!qword_1EB703F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703F30);
  }
  return result;
}

unint64_t sub_1A73A2614()
{
  unint64_t result = qword_1E96F25C8;
  if (!qword_1E96F25C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F25C8);
  }
  return result;
}

unint64_t sub_1A73A266C()
{
  unint64_t result = qword_1EB703E18;
  if (!qword_1EB703E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703E18);
  }
  return result;
}

unint64_t sub_1A73A26C4()
{
  unint64_t result = qword_1EB703E10;
  if (!qword_1EB703E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703E10);
  }
  return result;
}

unint64_t sub_1A73A271C()
{
  unint64_t result = qword_1E96F25D0;
  if (!qword_1E96F25D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F25D0);
  }
  return result;
}

unint64_t sub_1A73A2774()
{
  unint64_t result = qword_1EB700208;
  if (!qword_1EB700208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700208);
  }
  return result;
}

unint64_t sub_1A73A27CC()
{
  unint64_t result = qword_1EB700200;
  if (!qword_1EB700200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700200);
  }
  return result;
}

unint64_t sub_1A73A2824()
{
  unint64_t result = qword_1E96F25D8;
  if (!qword_1E96F25D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F25D8);
  }
  return result;
}

unint64_t sub_1A73A287C()
{
  unint64_t result = qword_1EB703F60;
  if (!qword_1EB703F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703F60);
  }
  return result;
}

unint64_t sub_1A73A28D4()
{
  unint64_t result = qword_1EB703F58;
  if (!qword_1EB703F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703F58);
  }
  return result;
}

unint64_t sub_1A73A292C()
{
  unint64_t result = qword_1E96F25E0;
  if (!qword_1E96F25E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F25E0);
  }
  return result;
}

unint64_t sub_1A73A2980(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A73A29B0();
  unint64_t result = sub_1A73A0BE4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A73A29B0()
{
  unint64_t result = qword_1E96F25E8;
  if (!qword_1E96F25E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F25E8);
  }
  return result;
}

unint64_t sub_1A73A2A08()
{
  unint64_t result = qword_1EB705080;
  if (!qword_1EB705080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705080);
  }
  return result;
}

unint64_t sub_1A73A2A60()
{
  unint64_t result = qword_1EB705078;
  if (!qword_1EB705078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705078);
  }
  return result;
}

uint64_t sub_1A73A2AB4()
{
  return sub_1A72AE788(&qword_1E96F25F0, &qword_1E96F25F8);
}

uint64_t sub_1A73A2AF8(uint64_t a1)
{
  uint64_t result = sub_1A73A0C38(&qword_1EB703F98, 255, (void (*)(uint64_t))type metadata accessor for REMSuggestedAttributeInput);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A73A2B58()
{
  unint64_t result = qword_1EB701CC0;
  if (!qword_1EB701CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701CC0);
  }
  return result;
}

uint64_t sub_1A73A2BAC()
{
  return sub_1A72AE788(&qword_1E96F2600, &qword_1E96F2608);
}

unint64_t sub_1A73A2BEC()
{
  unint64_t result = qword_1E96F2610;
  if (!qword_1E96F2610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2610);
  }
  return result;
}

unint64_t sub_1A73A2C44()
{
  unint64_t result = qword_1E96F2618;
  if (!qword_1E96F2618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2618);
  }
  return result;
}

unint64_t sub_1A73A2C9C()
{
  unint64_t result = qword_1E96F2620;
  if (!qword_1E96F2620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2620);
  }
  return result;
}

unint64_t sub_1A73A2CF4()
{
  unint64_t result = qword_1E96F2628;
  if (!qword_1E96F2628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2628);
  }
  return result;
}

unint64_t sub_1A73A2D4C()
{
  unint64_t result = qword_1E96F2630;
  if (!qword_1E96F2630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2630);
  }
  return result;
}

unint64_t sub_1A73A2DA4()
{
  unint64_t result = qword_1EB700A48;
  if (!qword_1EB700A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700A48);
  }
  return result;
}

uint64_t sub_1A73A2DF8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A73A2E48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A7395684(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_reminderIdentifier, MEMORY[0x1E4F27990], a2);
}

uint64_t sub_1A73A2E7C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A7395718(a1, a2, a3, a4, MEMORY[0x1E4F27990], &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_reminderIdentifier);
}

uint64_t sub_1A73A2EB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A7395684(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate, MEMORY[0x1E4F27928], a2);
}

uint64_t sub_1A73A2EE4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A7395718(a1, a2, a3, a4, MEMORY[0x1E4F27928], &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate);
}

uint64_t sub_1A73A2F18@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_21Tm(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_list, a2);
}

uint64_t sub_1A73A2F24(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A7395F78(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_list);
}

uint64_t sub_1A73A2F44@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_listName);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A73A2FA0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_21Tm(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_dueDayOfWeek, a2);
}

uint64_t sub_1A73A2FAC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A7395F78(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_dueDayOfWeek);
}

uint64_t sub_1A73A2FCC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_21Tm(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_location, a2);
}

uint64_t sub_1A73A2FD8(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A7395F78(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_location);
}

uint64_t sub_1A73A2FF8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_flagged);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1A73A304C(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_flagged);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_1A73A309C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_priority);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1A73A30F0(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_priority);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_1A73A3140@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_33Tm(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_tags, a2);
}

uint64_t sub_1A73A314C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A73960B0(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_tags);
}

uint64_t sub_1A73A316C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_21Tm(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_contact, a2);
}

uint64_t keypath_get_21Tm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_retain();
}

uint64_t sub_1A73A31CC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A7395F78(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_contact);
}

uint64_t sub_1A73A31EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_33Tm(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_recurrences, a2);
}

uint64_t keypath_get_33Tm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A73A324C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A73960B0(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_recurrences);
}

uint64_t method lookup function for REMSuggestedWeekDay(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMSuggestedWeekDay);
}

uint64_t dispatch thunk of REMSuggestedWeekDay.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

ValueMetadata *type metadata accessor for REMSuggestedWeekDay.CodingKeys()
{
  return &type metadata for REMSuggestedWeekDay.CodingKeys;
}

uint64_t method lookup function for REMSuggestedList(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMSuggestedList);
}

ValueMetadata *type metadata accessor for REMSuggestedList.CodingKeys()
{
  return &type metadata for REMSuggestedList.CodingKeys;
}

uint64_t method lookup function for REMSuggestedContact(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMSuggestedContact);
}

uint64_t dispatch thunk of REMSuggestedContact.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedContact.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73A33E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedContact.CodingKeys()
{
  return &type metadata for REMSuggestedContact.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedLocation.LocationValue()
{
  return &type metadata for REMSuggestedLocation.LocationValue;
}

ValueMetadata *type metadata accessor for REMSuggestedLocation.CodingKeys()
{
  return &type metadata for REMSuggestedLocation.CodingKeys;
}

uint64_t dispatch thunk of REMSuggestedAttributesCanonicalTagDataSource.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A73A344C()
{
  return type metadata accessor for REMSuggestedAttributeInput(0);
}

uint64_t sub_1A73A3454()
{
  uint64_t result = sub_1A7571B60();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for REMSuggestedAttributeInput(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMSuggestedAttributeInput);
}

uint64_t dispatch thunk of REMSuggestedAttributeInput.__allocating_init(reminder:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of REMSuggestedAttributeInput.__allocating_init(reminderTitle:reminderID:list:creationDate:dueDayOfWeek:dueDateTime:location:flagged:priority:tags:contact:recurrence:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 184))(a1, a2, a3);
}

uint64_t dispatch thunk of REMSuggestedAttributeInput.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributeInput.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributeInput.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73A372CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeInput.CodingKeys()
{
  return &type metadata for REMSuggestedAttributeInput.CodingKeys;
}

uint64_t sub_1A73A3764()
{
  return type metadata accessor for REMSuggestedAttributeReminderDataSource(0);
}

uint64_t type metadata accessor for REMSuggestedAttributeReminderDataSource(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2638);
}

uint64_t sub_1A73A378C()
{
  uint64_t result = sub_1A7571BC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1A7571B60();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for REMSuggestedAttributeReminderDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMSuggestedAttributeReminderDataSource);
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.title.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.title.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.title.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.reminderIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.reminderIdentifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.reminderIdentifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.creationDate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.creationDate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.creationDate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.list.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.list.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.list.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.listName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.listName.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.listName.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.dueDayOfWeek.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.dueDayOfWeek.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.dueDayOfWeek.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.location.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.location.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.location.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.flagged.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.flagged.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.flagged.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.priority.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.priority.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.priority.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.tags.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.tags.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.tags.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.contact.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.contact.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.contact.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.recurrences.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.recurrences.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.recurrences.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.__allocating_init(title:reminderIdentifier:creationDate:list:listName:dueDayOfWeek:location:flagged:priority:tags:contact:recurrences:)()
{
  return (*(uint64_t (**)(void))(v0 + 464))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.listUUIDString.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t destroy for REMSuggestedAttributeInputDataFrame()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for REMSuggestedAttributeInputDataFrame(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for REMSuggestedAttributeInputDataFrame(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for REMSuggestedAttributeInputDataFrame(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributeInputDataFrame(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributeInputDataFrame(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeInputDataFrame()
{
  return &type metadata for REMSuggestedAttributeInputDataFrame;
}

void destroy for REMSuggestedAttributeOutput(uint64_t a1)
{
}

uint64_t initializeWithCopy for REMSuggestedAttributeOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1A7345658(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributeOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1A7345658(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void **)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1A734576C(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for REMSuggestedAttributeOutput(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void **)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1A734576C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributeOutput(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF7 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 247);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 9) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributeOutput(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 247;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A73A4568(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1A73A4570(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeOutput()
{
  return &type metadata for REMSuggestedAttributeOutput;
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributeOutput.Pipeline(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73A4654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeOutput.Pipeline()
{
  return &type metadata for REMSuggestedAttributeOutput.Pipeline;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeOutput.Source()
{
  return &type metadata for REMSuggestedAttributeOutput.Source;
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributeOutput.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73A4768);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeOutput.CodingKeys()
{
  return &type metadata for REMSuggestedAttributeOutput.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributeOutput.ContentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *__n128 result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73A486CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeOutput.ContentType()
{
  return &type metadata for REMSuggestedAttributeOutput.ContentType;
}

unsigned char *_s19ReminderKitInternal19REMSuggestedWeekDayC10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A73A4940);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeOutput.Source.CodingKeys()
{
  return &type metadata for REMSuggestedAttributeOutput.Source.CodingKeys;
}

unint64_t sub_1A73A497C()
{
  unint64_t result = qword_1E96F2648;
  if (!qword_1E96F2648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2648);
  }
  return result;
}

unint64_t sub_1A73A49D4()
{
  unint64_t result = qword_1EB701CB8;
  if (!qword_1EB701CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701CB8);
  }
  return result;
}

unint64_t sub_1A73A4A2C()
{
  unint64_t result = qword_1EB701CB0;
  if (!qword_1EB701CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701CB0);
  }
  return result;
}

unint64_t sub_1A73A4A80()
{
  unint64_t result = qword_1EB703F50;
  if (!qword_1EB703F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703F50);
  }
  return result;
}

unint64_t sub_1A73A4AD4()
{
  unint64_t result = qword_1EB7001F8;
  if (!qword_1EB7001F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7001F8);
  }
  return result;
}

unint64_t sub_1A73A4B28()
{
  unint64_t result = qword_1EB703E08;
  if (!qword_1EB703E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703E08);
  }
  return result;
}

unint64_t sub_1A73A4B7C()
{
  unint64_t result = qword_1E96F2650;
  if (!qword_1E96F2650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2650);
  }
  return result;
}

unint64_t sub_1A73A4BD0()
{
  unint64_t result = qword_1EB701CC8;
  if (!qword_1EB701CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701CC8);
  }
  return result;
}

unint64_t sub_1A73A4C24()
{
  unint64_t result = qword_1E96F2678;
  if (!qword_1E96F2678)
  {
    sub_1A72BEFEC(255, &qword_1E96F2670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2678);
  }
  return result;
}

uint64_t REMLazy.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = sub_1A7573210();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  char v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v16[-v10];
  uint64_t v12 = (uint64_t)v1 + *(void *)(v3 + 88);
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v11, v12, v5);
  uint64_t v13 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v4) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v13 + 32))(a1, v11, v4);
  }
  uint64_t v14 = (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
  (*(void (**)(uint64_t))((char *)v1 + *(void *)(*v1 + 96)))(v14);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v9, a1, v4);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v4);
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 40))(v12, v9, v5);
  return swift_endAccess();
}

uint64_t sub_1A73A4F2C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return sub_1A73A4FEC((uint64_t)v2);
}

uint64_t sub_1A73A4FEC(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = sub_1A7573210();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))((char *)&v11 - v6, a1, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v3);
  uint64_t v9 = v1 + *(void *)(*(void *)v1 + 88);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v9, v7, v4);
  return swift_endAccess();
}

uint64_t REMLazy.__allocating_init(closure:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v4 + 80) - 8) + 56))(v4 + *(void *)(*(void *)v4 + 88), 1, 1);
  uint64_t v5 = (void *)(v4 + *(void *)(*(void *)v4 + 96));
  *uint64_t v5 = a1;
  v5[1] = a2;
  return v4;
}

uint64_t REMLazy.init(closure:)(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 56))(v2 + *(void *)(*(void *)v2 + 88), 1, 1);
  uint64_t v5 = (void *)(v2 + *(void *)(*(void *)v2 + 96));
  *uint64_t v5 = a1;
  v5[1] = a2;
  return v2;
}

uint64_t REMLazy.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  uint64_t v2 = sub_1A7573210();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t REMLazy.__deallocating_deinit()
{
  REMLazy.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_1A73A53E0@<X0>(uint64_t a1@<X8>)
{
  return REMLazy.value.getter(a1);
}

uint64_t sub_1A73A5408()
{
  return 8;
}

void *sub_1A73A5414(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A73A5420()
{
  uint64_t result = sub_1A7573210();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for REMLazy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for REMLazy(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMLazy);
}

uint64_t dispatch thunk of REMLazy.__allocating_init(closure:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1A73A5508()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F2710);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F2710);
  if (qword_1EB6FFF40 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F00);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1A73A55D0(uint64_t a1, uint64_t a2, char a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_1A7571850();

    swift_willThrow();
  }
  return v6;
}

id sub_1A73A56AC(uint64_t a1)
{
  v73[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v69 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v65 - v6;
  uint64_t v70 = sub_1A75719C0();
  uint64_t v8 = *(void *)(v70 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v70);
  uint64_t v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v65 - v13;
  MEMORY[0x1F4188790](v12);
  char v16 = (char *)&v65 - v15;
  unint64_t v17 = self;
  char v18 = (void *)sub_1A75718E0();
  v73[0] = 0;
  id v19 = objc_msgSend(v17, sel_appLinksWithURL_limit_error_, v18, 1, v73);

  id v20 = v73[0];
  if (!v19)
  {
    uint64_t v66 = v14;
    uint64_t v68 = v16;
    id v26 = v73[0];
    uint64_t v1 = (void *)sub_1A7571850();

    swift_willThrow();
    if (qword_1E96F0778 == -1)
    {
LABEL_10:
      uint64_t v27 = sub_1A7571E90();
      __swift_project_value_buffer(v27, (uint64_t)qword_1E96F2710);
      long long v28 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      uint64_t v67 = a1;
      v28(v11, a1, v70);
      id v29 = v1;
      id v30 = v1;
      char v31 = sub_1A7571E80();
      os_log_type_t v32 = sub_1A7572FB0();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        id v65 = (void *)swift_slowAlloc();
        v73[0] = v65;
        *(_DWORD *)uint64_t v33 = 136315394;
        swift_getErrorValue();
        uint64_t v34 = Error.rem_errorDescription.getter(v72);
        uint64_t v71 = sub_1A72D1730(v34, v35, (uint64_t *)v73);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v33 + 12) = 2080;
        uint64_t v36 = sub_1A7571890();
        uint64_t v71 = sub_1A72D1730(v36, v37, (uint64_t *)v73);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v70);
        _os_log_impl(&dword_1A72A1000, v31, v32, "Failed to get appLink {error: %s, url: %s}", (uint8_t *)v33, 0x16u);
        uint64_t v38 = v65;
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v38, -1, -1);
        MEMORY[0x1AD0CD330](v33, -1, -1);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v70);
      }
      a1 = v67;
      char v16 = v68;
      uint64_t v14 = v66;
      goto LABEL_16;
    }
LABEL_36:
    swift_once();
    goto LABEL_10;
  }
  sub_1A72BEFEC(0, &qword_1E96F2730);
  unint64_t v21 = sub_1A7572A10();
  id v22 = v20;

  if (!(v21 >> 62))
  {
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_1A75738D0();
  swift_bridgeObjectRelease();
  if (!v39) {
    goto LABEL_15;
  }
LABEL_4:
  if ((v21 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v23 = *(id *)(v21 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_36;
  }
  id v23 = (id)MEMORY[0x1AD0CB800](0, v21);
LABEL_7:
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v24, sel_targetApplicationRecord);

  if (v25) {
    return v25;
  }
LABEL_16:
  uint64_t v40 = self;
  id v41 = objc_msgSend(v40, sel_defaultWorkspace);
  uint64_t v42 = v41;
  if (v41)
  {
    uint64_t v43 = (uint64_t)v7;
    id v44 = v14;
    id v45 = v41;
    id v46 = v41;
    uint64_t v47 = a1;
    id v48 = (void *)sub_1A75718E0();
    id v49 = objc_msgSend(v46, sel_URLOverrideForURL_, v48);

    if (v49)
    {
      uint64_t v50 = (uint64_t)v69;
      sub_1A7571940();

      uint64_t v51 = 0;
      uint64_t v14 = v44;
    }
    else
    {
      uint64_t v51 = 1;
      uint64_t v14 = v44;
      uint64_t v50 = (uint64_t)v69;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v50, v51, 1, v70);
    id v7 = (char *)v43;
    sub_1A736EFD0(v50, v43);
    a1 = v47;
    uint64_t v42 = v45;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v7, 1, 1, v70);
  }
  uint64_t v52 = a1;
  uint64_t v53 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v14, v52, v70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v53) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v14, v70);
    sub_1A736F038((uint64_t)v7);
  }
  else
  {
    uint64_t v54 = v70;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v70);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v7, v54);
  }
  id v55 = objc_msgSend(v40, sel_defaultWorkspace);
  if (!v55) {
    goto LABEL_39;
  }
  unint64_t v56 = v55;
  char v57 = (void *)sub_1A75718E0();
  id v58 = objc_msgSend(v56, sel_applicationsAvailableForOpeningURL_, v57);

  if (!v58)
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v70);
    return 0;
  }
  sub_1A72BEFEC(0, &qword_1E96F2728);
  unint64_t v59 = sub_1A7572A10();

  if (v59 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (v63) {
      goto LABEL_29;
    }
    goto LABEL_38;
  }
  if (!*(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_38:
    swift_bridgeObjectRelease();
LABEL_39:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v70);

    return 0;
  }
LABEL_29:
  if ((v59 & 0xC000000000000001) != 0)
  {
    BOOL v60 = v42;
    id v61 = (id)MEMORY[0x1AD0CB800](0, v59);
  }
  else
  {
    if (!*(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    BOOL v60 = v42;
    id v61 = *(id *)(v59 + 32);
  }
  uint64_t v62 = v61;
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v62, sel_correspondingApplicationRecord);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v70);
  return v25;
}

uint64_t sub_1A73A5F28(void *a1)
{
  sub_1A72B10F4(MEMORY[0x1E4FBC860]);
  uint64_t v2 = (void *)sub_1A75723D0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(a1, sel__determineMatchingApplicationBundleIdentifierWithOptions_, v2);

  if (v3)
  {
    uint64_t v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v6 = v5;

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1A75785A0;
    *(void *)(v7 + 32) = v4;
    *(void *)(v7 + 40) = v6;
    return v7;
  }
  id v8 = objc_msgSend(a1, sel_activityType);
  uint64_t v9 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v11 = v10;

  if (v9 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
    return (uint64_t)&unk_1EFC90518;
  }
  char v14 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14) {
    return (uint64_t)&unk_1EFC90518;
  }
  id v15 = objc_msgSend(a1, sel_activityType);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  LOBYTE(v15) = sub_1A7572800();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0) {
    return MEMORY[0x1E4FBC860];
  }
  id v16 = objc_msgSend(a1, sel_activityType);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  sub_1A72DF534();
  unint64_t v17 = (void *)sub_1A7573290();
  swift_bridgeObjectRelease();
  if (v17[2] < 3uLL)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v7 = MEMORY[0x1E4FBC860];
  while (1)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    sub_1A72E3500();
    uint64_t v19 = sub_1A7572570();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1A72AC148(0, *(void *)(v7 + 16) + 1, 1, (void *)v7);
      uint64_t v7 = result;
    }
    unint64_t v23 = *(void *)(v7 + 16);
    unint64_t v22 = *(void *)(v7 + 24);
    if (v23 >= v22 >> 1)
    {
      uint64_t result = (uint64_t)sub_1A72AC148((void *)(v22 > 1), v23 + 1, 1, (void *)v7);
      uint64_t v7 = result;
    }
    *(void *)(v7 + 16) = v23 + 1;
    uint64_t v24 = v7 + 16 * v23;
    *(void *)(v24 + 32) = v19;
    *(void *)(v24 + 40) = v21;
    if (!v17[2]) {
      break;
    }
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v25 = v17[2];
      if (!v25) {
        goto LABEL_26;
      }
    }
    else
    {
      unint64_t v17 = sub_1A74DAF9C(v17);
      uint64_t v25 = v17[2];
      if (!v25)
      {
LABEL_26:
        __break(1u);
LABEL_27:
        swift_bridgeObjectRelease();
        return v7;
      }
    }
    v17[2] = v25 - 1;
    swift_bridgeObjectRelease();
    if (v17[2] <= 2uLL) {
      goto LABEL_27;
    }
  }
  __break(1u);
  return result;
}

id _sSo19LSApplicationRecordC19ReminderKitInternalE011applicationB015forUserActivityABSgSo06NSUserI0C_tFZ_0(void *a1)
{
  uint64_t v1 = (void *)sub_1A73A5F28(a1);
  if (v1[2])
  {
    uint64_t v3 = v1[4];
    uint64_t v2 = v1[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v4 = objc_allocWithZone(MEMORY[0x1E4F223C8]);
    swift_bridgeObjectRetain();
    id v5 = sub_1A73A55D0(v3, v2, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

id static REMStructuredLocation.testing_appleInc.getter()
{
  return sub_1A73A65B0(37.332093, -122.030255);
}

id static REMStructuredLocation.testing_applePark.getter()
{
  return sub_1A73A65B0(37.3349, -122.00902);
}

id sub_1A73A65B0(double a1, double a2)
{
  id v4 = objc_allocWithZone(MEMORY[0x1E4F94CD0]);
  id v5 = (void *)sub_1A75725E0();
  id v6 = objc_msgSend(v4, sel_initWithTitle_, v5);

  objc_msgSend(v6, sel_setLatitude_, a1);
  objc_msgSend(v6, sel_setLongitude_, a2);
  objc_msgSend(v6, sel_setRadius_, 100.0);
  return v6;
}

id static REMStructuredLocation.testing_outbackSteakhouse.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F94CD0]);
  uint64_t v1 = (void *)sub_1A75725E0();
  id v2 = objc_msgSend(v0, sel_initWithTitle_, v1);

  objc_msgSend(v2, sel_setLatitude_, 37.331554);
  objc_msgSend(v2, sel_setLongitude_, -122.033371);
  objc_msgSend(v2, sel_setRadius_, 100.0);
  return v2;
}

id static REMStructuredLocation.testing_outbackSteakhouse(radius:)(double a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F94CD0]);
  uint64_t v3 = (void *)sub_1A75725E0();
  id v4 = objc_msgSend(v2, sel_initWithTitle_, v3);

  objc_msgSend(v4, sel_setLatitude_, 37.331554);
  objc_msgSend(v4, sel_setLongitude_, -122.033371);
  objc_msgSend(v4, sel_setRadius_, a1);
  return v4;
}

void sub_1A73A67DC(uint64_t a1, uint64_t a2, char a3)
{
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v5 = sub_1A7571E80();
  os_log_type_t v6 = sub_1A7572FE0();
  uint64_t v18 = a1;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v19 = v16;
    *(_DWORD *)uint64_t v7 = 136446722;
    uint64_t v8 = sub_1A7573590();
    sub_1A72D1730(v8, v9, &v19);
    sub_1A7573250();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    char v17 = a3;
    uint64_t v10 = sub_1A7572400();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    sub_1A72D1730(v10, v12, &v19);
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1A7572400();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_1A72D1730(v13, v15, &v19);
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    a3 = v17;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v5, v6, "%{public}s; UserInfo=%s; PublicUserInfo=%{public}s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v16, -1, -1);
    MEMORY[0x1AD0CD330](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  if (a3)
  {
    __break(1u);
  }
  else if (v18)
  {
    rdi_os_crash();
  }
  __break(1u);
}

uint64_t sub_1A73A6A60(uint64_t a1)
{
  return sub_1A73A6B78(a1, qword_1EB718F00, 0x1E4F94B90, (SEL *)&selRef_ui);
}

uint64_t sub_1A73A6A7C(uint64_t a1)
{
  return sub_1A73A6B78(a1, qword_1E972BC10, 0x1E4F94B90, (SEL *)&selRef_notification);
}

uint64_t sub_1A73A6A98(uint64_t a1)
{
  return sub_1A73A6B78(a1, qword_1EB718FA8, 0x1E4F94B90, (SEL *)&selRef_utility);
}

uint64_t sub_1A73A6AB4(uint64_t a1)
{
  return sub_1A73A6B78(a1, qword_1EB718F18, 0x1E4F94B90, (SEL *)&selRef_suggestedAttributes);
}

uint64_t sub_1A73A6AD0(uint64_t a1)
{
  return sub_1A73A6B78(a1, qword_1E972BC28, 0x1E4F94B90, (SEL *)&selRef_intelligentGrocery);
}

uint64_t sub_1A73A6AEC(uint64_t a1)
{
  return sub_1A73A6B78(a1, qword_1EB718F40, 0x1E4F94B90, (SEL *)&selRef_analytics);
}

uint64_t sub_1A73A6B08(uint64_t a1)
{
  return sub_1A73A6B78(a1, qword_1E972BC40, 0x1E4F94B90, (SEL *)&selRef_siriKit);
}

uint64_t sub_1A73A6B24(uint64_t a1)
{
  return sub_1A73A6B78(a1, qword_1EB718F68, 0x1E4F94B98, (SEL *)&selRef_read);
}

uint64_t sub_1A73A6B40(uint64_t a1)
{
  return sub_1A73A6B78(a1, qword_1E972BC58, 0x1E4F94B98, (SEL *)&selRef_write);
}

uint64_t sub_1A73A6B5C(uint64_t a1)
{
  return sub_1A73A6B78(a1, qword_1E972BC70, 0x1E4F94B98, (SEL *)&selRef_utility);
}

uint64_t sub_1A73A6B78(uint64_t a1, uint64_t *a2, uint64_t a3, SEL *a4)
{
  uint64_t v6 = sub_1A7571E90();
  __swift_allocate_value_buffer(v6, a2);
  __swift_project_value_buffer(v6, (uint64_t)a2);
  id v7 = [self *a4];
  return sub_1A7571EA0();
}

uint64_t sub_1A73A6BEC()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F2738);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F2738);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

Swift::Int32 __swiftcall Int32.init(timeIntervalSinceReferenceDate:)(Swift::Double timeIntervalSinceReferenceDate)
{
  if ((~*(void *)&timeIntervalSinceReferenceDate & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (timeIntervalSinceReferenceDate <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (timeIntervalSinceReferenceDate >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((uint64_t)timeIntervalSinceReferenceDate <= 2147483646)
  {
    if (timeIntervalSinceReferenceDate > -2147483650.0)
    {
      if (timeIntervalSinceReferenceDate < 2147483650.0) {
        return (int)timeIntervalSinceReferenceDate;
      }
      goto LABEL_16;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (qword_1E96F07C0 != -1) {
LABEL_17:
  }
    swift_once();
  uint64_t v2 = sub_1A7571E90();
  __swift_project_value_buffer(v2, (uint64_t)qword_1E96F2738);
  uint64_t v3 = sub_1A7571E80();
  os_log_type_t v4 = sub_1A7572FE0();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v9 = v6;
    *(_DWORD *)id v5 = 136315138;
    uint64_t v7 = sub_1A7572C20();
    sub_1A72D1730(v7, v8, &v9);
    sub_1A7573250();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v6, -1, -1);
    MEMORY[0x1AD0CD330](v5, -1, -1);
  }

  return 0x7FFFFFFF;
}

uint64_t sub_1A73A6EC0()
{
  uint64_t v0 = sub_1A7571B60();
  __swift_allocate_value_buffer(v0, qword_1E96F2750);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E96F2750);
  return sub_1A7571A40();
}

uint64_t static Date.referenceDate.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E96F07C8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A7571B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E96F2750);
  os_log_type_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void *ExtendedDiff.remainingIndexes.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v10 = v1;
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    os_log_type_t v4 = v10;
    id v5 = (unsigned char *)(v2 + 48);
    do
    {
      if (*v5 == 3)
      {
        long long v9 = *((_OWORD *)v5 - 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v1 = sub_1A72AC48C(0, v1[2] + 1, 1, v1);
        }
        unint64_t v7 = v1[2];
        unint64_t v6 = v1[3];
        if (v7 >= v6 >> 1) {
          uint64_t v1 = sub_1A72AC48C((void *)(v6 > 1), v7 + 1, 1, v1);
        }
        v1[2] = v7 + 1;
        *(_OWORD *)&v1[2 * v7 + 4] = v9;
        os_log_type_t v4 = v1;
      }
      v5 += 24;
      --v3;
    }
    while (v3);
    uint64_t v10 = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1A73A70D4(&v10);
  return v10;
}

uint64_t sub_1A73A70D4(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A74DAFB0(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_1A73A7144(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A73A7144(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A7573BB0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v83 = 0;
      uint64_t v84 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v86 = *(void *)(v84 + 16 * i);
        uint64_t v87 = v83;
        do
        {
          if (v86 >= *(void *)(v84 + v87)) {
            break;
          }
          if (!v84) {
            goto LABEL_140;
          }
          long long v88 = (void *)(v84 + v87);
          uint64_t v89 = *(void *)(v84 + v87 + 24);
          *(_OWORD *)(v84 + v87 + 16) = *(_OWORD *)(v84 + v87);
          *long long v88 = v86;
          v88[1] = v89;
          v87 -= 16;
        }
        while (v87 != -16);
        v83 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  uint64_t v98 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      unint64_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_102:
      uint64_t v90 = v12;
      uint64_t v101 = v9;
      if (v13 >= 2)
      {
        uint64_t v91 = *v98;
        do
        {
          unint64_t v92 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v91) {
            goto LABEL_144;
          }
          id v93 = v90;
          uint64_t v94 = *(void *)&v90[16 * v92 + 32];
          uint64_t v95 = *(void *)&v90[16 * v13 + 24];
          sub_1A73A780C((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(void *)&v90[16 * v13 + 16]), v91 + 16 * v95, __dst);
          if (v1) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v93 = sub_1A74F9DDC((uint64_t)v93);
          }
          if (v92 >= *((void *)v93 + 2)) {
            goto LABEL_133;
          }
          id v96 = &v93[16 * v92 + 32];
          *(void *)id v96 = v94;
          *((void *)v96 + 1) = v95;
          unint64_t v97 = *((void *)v93 + 2);
          if (v13 > v97) {
            goto LABEL_134;
          }
          memmove(&v93[16 * v13 + 16], &v93[16 * v13 + 32], 16 * (v97 - v13));
          uint64_t v90 = v93;
          *((void *)v93 + 2) = v97 - 1;
          unint64_t v13 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v101 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v101 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1A7572A90();
    *(void *)(v8 + 16) = v7;
    uint64_t v101 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v99 = *a1 - 16;
  uint64_t v100 = *a1 + 32;
  unint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v102 = v6;
  uint64_t v103 = v3;
  uint64_t v104 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 16 * v10);
      uint64_t v16 = *(void *)(v11 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        char v17 = (uint64_t *)(v100 + 16 * v14);
        uint64_t v18 = v15;
        while (1)
        {
          uint64_t v20 = *v17;
          v17 += 2;
          uint64_t v19 = v20;
          if (v15 < v16 == v20 >= v18) {
            break;
          }
          ++v10;
          uint64_t v18 = v19;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v21 = (long long *)(v99 + 16 * v10);
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          uint64_t v24 = (long long *)(v11 + 16 * v14);
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_143;
              }
              long long v25 = *v24;
              *uint64_t v24 = *v21;
              *uint64_t v21 = v25;
            }
            ++v23;
            --v21;
            ++v24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v26 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v26 >= v3) {
      uint64_t v26 = v3;
    }
    if (v26 < v14) {
      break;
    }
    if (v10 != v26)
    {
      uint64_t v27 = v99 + 16 * v10;
      do
      {
        uint64_t v28 = *(void *)(v11 + 16 * v10);
        uint64_t v29 = v14;
        uint64_t v30 = v27;
        do
        {
          if (v28 >= *(void *)v30) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v31 = *(void *)(v30 + 24);
          *(_OWORD *)(v30 + 16) = *(_OWORD *)v30;
          *(void *)uint64_t v30 = v28;
          *(void *)(v30 + 8) = v31;
          v30 -= 16;
          ++v29;
        }
        while (v10 != v29);
        ++v10;
        v27 += 16;
      }
      while (v10 != v26);
      uint64_t v10 = v26;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_1A74F9714(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v33 = *((void *)v12 + 2);
    unint64_t v32 = *((void *)v12 + 3);
    unint64_t v13 = v33 + 1;
    uint64_t v11 = v104;
    if (v33 >= v32 >> 1)
    {
      uint64_t v82 = sub_1A74F9714((char *)(v32 > 1), v33 + 1, 1, v12);
      uint64_t v11 = v104;
      unint64_t v12 = v82;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v34 = v12 + 32;
    unint64_t v35 = &v12[16 * v33 + 32];
    *(void *)unint64_t v35 = v14;
    *((void *)v35 + 1) = v10;
    if (v33)
    {
      while (1)
      {
        unint64_t v36 = v13 - 1;
        if (v13 >= 4)
        {
          id v41 = &v34[16 * v13];
          uint64_t v42 = *((void *)v41 - 8);
          uint64_t v43 = *((void *)v41 - 7);
          BOOL v47 = __OFSUB__(v43, v42);
          uint64_t v44 = v43 - v42;
          if (v47) {
            goto LABEL_119;
          }
          uint64_t v46 = *((void *)v41 - 6);
          uint64_t v45 = *((void *)v41 - 5);
          BOOL v47 = __OFSUB__(v45, v46);
          uint64_t v39 = v45 - v46;
          char v40 = v47;
          if (v47) {
            goto LABEL_120;
          }
          unint64_t v48 = v13 - 2;
          id v49 = &v34[16 * v13 - 32];
          uint64_t v51 = *(void *)v49;
          uint64_t v50 = *((void *)v49 + 1);
          BOOL v47 = __OFSUB__(v50, v51);
          uint64_t v52 = v50 - v51;
          if (v47) {
            goto LABEL_122;
          }
          BOOL v47 = __OFADD__(v39, v52);
          uint64_t v53 = v39 + v52;
          if (v47) {
            goto LABEL_125;
          }
          if (v53 >= v44)
          {
            uint64_t v71 = &v34[16 * v36];
            uint64_t v73 = *(void *)v71;
            uint64_t v72 = *((void *)v71 + 1);
            BOOL v47 = __OFSUB__(v72, v73);
            uint64_t v74 = v72 - v73;
            if (v47) {
              goto LABEL_129;
            }
            BOOL v64 = v39 < v74;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v65 = *((void *)v12 + 4);
            uint64_t v66 = *((void *)v12 + 5);
            BOOL v47 = __OFSUB__(v66, v65);
            uint64_t v58 = v66 - v65;
            char v59 = v47;
            goto LABEL_77;
          }
          uint64_t v38 = *((void *)v12 + 4);
          uint64_t v37 = *((void *)v12 + 5);
          BOOL v47 = __OFSUB__(v37, v38);
          uint64_t v39 = v37 - v38;
          char v40 = v47;
        }
        if (v40) {
          goto LABEL_121;
        }
        unint64_t v48 = v13 - 2;
        uint64_t v54 = &v34[16 * v13 - 32];
        uint64_t v56 = *(void *)v54;
        uint64_t v55 = *((void *)v54 + 1);
        BOOL v57 = __OFSUB__(v55, v56);
        uint64_t v58 = v55 - v56;
        char v59 = v57;
        if (v57) {
          goto LABEL_124;
        }
        BOOL v60 = &v34[16 * v36];
        uint64_t v62 = *(void *)v60;
        uint64_t v61 = *((void *)v60 + 1);
        BOOL v47 = __OFSUB__(v61, v62);
        uint64_t v63 = v61 - v62;
        if (v47) {
          goto LABEL_127;
        }
        if (__OFADD__(v58, v63)) {
          goto LABEL_128;
        }
        if (v58 + v63 >= v39)
        {
          BOOL v64 = v39 < v63;
LABEL_83:
          if (v64) {
            unint64_t v36 = v48;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v59) {
          goto LABEL_123;
        }
        uint64_t v67 = &v34[16 * v36];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v47 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v47) {
          goto LABEL_126;
        }
        if (v70 < v58) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v75 = v36 - 1;
        if (v36 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        uint64_t v76 = v12;
        unint64_t v77 = &v34[16 * v75];
        uint64_t v78 = *(void *)v77;
        uint64_t v79 = &v34[16 * v36];
        uint64_t v80 = *((void *)v79 + 1);
        sub_1A73A780C((char *)(v11 + 16 * *(void *)v77), (char *)(v11 + 16 * *(void *)v79), v11 + 16 * v80, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v80 < v78) {
          goto LABEL_116;
        }
        if (v36 > *((void *)v76 + 2)) {
          goto LABEL_117;
        }
        *(void *)unint64_t v77 = v78;
        *(void *)&v34[16 * v75 + 8] = v80;
        unint64_t v81 = *((void *)v76 + 2);
        if (v36 >= v81) {
          goto LABEL_118;
        }
        unint64_t v12 = v76;
        unint64_t v13 = v81 - 1;
        memmove(&v34[16 * v36], v79 + 16, 16 * (v81 - 1 - v36));
        *((void *)v76 + 2) = v81 - 1;
        uint64_t v11 = v104;
        if (v81 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v102;
    uint64_t v3 = v103;
    if (v10 >= v103)
    {
      uint64_t v9 = v101;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A73A780C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  os_log_type_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v16 = &v4[16 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        char v17 = (char *)(a3 - 16);
        uint64_t v18 = v6;
        while (1)
        {
          uint64_t v19 = v17 + 16;
          uint64_t v20 = *((void *)v18 - 2);
          v18 -= 16;
          if (*((void *)v16 - 2) >= v20)
          {
            uint64_t v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16) {
              *(_OWORD *)char v17 = *((_OWORD *)v16 - 1);
            }
            uint64_t v18 = v6;
            v16 -= 16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= v6) {
              *(_OWORD *)char v17 = *(_OWORD *)v18;
            }
            uint64_t v24 = v18;
            if (v18 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 16;
          uint64_t v6 = v18;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1A74F9ADC(&v24, &v23, &v22);
    return 1;
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

id zalgo.getter()
{
  return sub_1A73A7D10(&qword_1EB705720, (void **)&qword_1EB704C70);
}

uint64_t sub_1A73A7AAC(uint64_t a1)
{
  return sub_1A73A7AF4(a1, 0xD000000000000017, 0x80000001A75A1050, &qword_1EB704C70);
}

uint64_t sub_1A73A7AD0(uint64_t a1)
{
  return sub_1A73A7AF4(a1, 0xD00000000000001DLL, 0x80000001A75A1030, &qword_1EB703418);
}

uint64_t sub_1A73A7AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  v11[1] = a3;
  uint64_t v12 = a4;
  uint64_t v4 = sub_1A7573090();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A7573040();
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1A7572260();
  MEMORY[0x1F4188790](v9 - 8);
  sub_1A7366C4C();
  sub_1A7572240();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1A73A7D5C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E8);
  sub_1A73A7DB4();
  sub_1A7573380();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCC58], v4);
  uint64_t result = sub_1A75730D0();
  *uint64_t v12 = result;
  return result;
}

id zalgoIfMain.getter()
{
  return sub_1A73A7D10(&qword_1EB704258, (void **)&qword_1EB703418);
}

id sub_1A73A7D10(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;

  return v3;
}

unint64_t sub_1A73A7D5C()
{
  unint64_t result = qword_1EB705900;
  if (!qword_1EB705900)
  {
    sub_1A7573040();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705900);
  }
  return result;
}

unint64_t sub_1A73A7DB4()
{
  unint64_t result = qword_1EB7058F0;
  if (!qword_1EB7058F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7058E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7058F0);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URL.tryStartAccessingSecurityScopedResource()()
{
  uint64_t v1 = sub_1A75719C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1A7571950() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
    type metadata accessor for FailedToAccessSecurityScopedURLError(0);
    sub_1A73A7F54();
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
    swift_willThrow();
  }
}

uint64_t type metadata accessor for FailedToAccessSecurityScopedURLError(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2788);
}

unint64_t sub_1A73A7F54()
{
  unint64_t result = qword_1E96F2768;
  if (!qword_1E96F2768)
  {
    type metadata accessor for FailedToAccessSecurityScopedURLError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2768);
  }
  return result;
}

uint64_t URL.withAccessToSecurityScopedResource<A>(_:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v16 = a3;
  char v17 = a1;
  uint64_t v5 = sub_1A75719C0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1A7571950())
  {
    uint64_t v13 = v18;
    v17(v3);
    if (!v13) {
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v16, v12, a2);
    }
    return sub_1A7571930();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v3, v5);
    type metadata accessor for FailedToAccessSecurityScopedURLError(0);
    sub_1A73A7F54();
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15, v9, v5);
    return swift_willThrow();
  }
}

Swift::Void __swiftcall URL.stopAccessingSecurityScopedResource(whenDeallocating:)(NSObject whenDeallocating)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A75719C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  _s23SecurityScopedURLHolderCMa(0);
  uint64_t v8 = (const void **)swift_allocObject();
  uint64_t v9 = (void *)swift_slowAlloc();
  *uint64_t v9 = 0;
  void v8[2] = v9;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))((uint64_t)v8+ OBJC_IVAR____TtCE19ReminderKitInternalV10Foundation3URLP33_C4CF88CCEEBFE10B546F9B83C3AB9A6B23SecurityScopedURLHolder_fileURL, v7, v4);
  objc_setAssociatedObject(whenDeallocating.isa, v8[2], v8, (void *)1);
  swift_release();
}

uint64_t _s23SecurityScopedURLHolderCMa(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2778);
}

uint64_t sub_1A73A8308()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0
     + OBJC_IVAR____TtCE19ReminderKitInternalV10Foundation3URLP33_C4CF88CCEEBFE10B546F9B83C3AB9A6B23SecurityScopedURLHolder_fileURL;
  sub_1A7571930();
  uint64_t v3 = sub_1A75719C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = *(unsigned int *)(*(void *)v1 + 48);
  uint64_t v5 = *(unsigned __int16 *)(*(void *)v1 + 52);

  return MEMORY[0x1F4186488](v1, v4, v5);
}

uint64_t URL.isHTTPOrHTTPSURL.getter()
{
  sub_1A7571980();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = sub_1A7572680();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (v1 == 1886680168 && v3 == 0xE400000000000000
    || (sub_1A7573DB0() & 1) != 0
    || v1 == 0x7370747468 && v3 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
}

uint64_t URL.domain.getter()
{
  uint64_t v0 = sub_1A7571960();
  unint64_t v2 = v1;
  if (v1)
  {
    if (sub_1A7572800())
    {
      unint64_t v3 = sub_1A7572700();
      unint64_t v4 = sub_1A72D8F2C(v3, v0, v2);
      uint64_t v6 = v5;
      uint64_t v8 = v7;
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      uint64_t v0 = MEMORY[0x1AD0CA8A0](v4, v6, v8, v10);
      unint64_t v2 = v11;
      swift_bridgeObjectRelease();
    }
    uint64_t v12 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0) {
      uint64_t v12 = v0 & 0xFFFFFFFFFFFFLL;
    }
    if (!v12)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v0;
}

uint64_t sub_1A73A8584()
{
  return _s23SecurityScopedURLHolderCMa(0);
}

uint64_t sub_1A73A858C()
{
  uint64_t result = sub_1A75719C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A73A862C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A75719C0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1A73A8698(uint64_t a1)
{
  uint64_t v2 = sub_1A75719C0();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1A73A86FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A75719C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A73A8760(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A75719C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A73A87C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A75719C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A73A8828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A75719C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A73A888C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A73A88A0);
}

uint64_t sub_1A73A88A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A75719C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1A73A890C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A73A8920);
}

uint64_t sub_1A73A8920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A75719C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1A73A8990()
{
  uint64_t result = sub_1A75719C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t REMLinearAlgebraDataRef.deinit()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1) {
    MEMORY[0x1AD0CD330](v1, -1, -1);
  }
  return v0;
}

uint64_t REMLinearAlgebraDataRef.__deallocating_deinit()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1) {
    MEMORY[0x1AD0CD330](v1, -1, -1);
  }

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t type metadata accessor for REMLinearAlgebraDataRef()
{
  return self;
}

uint64_t method lookup function for REMLinearAlgebraDataRef(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMLinearAlgebraDataRef);
}

uint64_t (*sub_1A73A8AC8(uint64_t a1, uint64_t a2))()
{
  uint64_t v5 = *(void *)(v2 + 16);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v5 + 16));
  if ((*(unsigned char *)(v2 + 24) & 1) == 0)
  {
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a1;
    *(void *)(v11 + 24) = a2;
    uint64_t v12 = (void *)(v2 + 32);
    swift_beginAccess();
    uint64_t v13 = *(void **)(v2 + 32);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 32) = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v13 = sub_1A72AC8E4(0, v13[2] + 1, 1, v13);
      *uint64_t v12 = v13;
    }
    unint64_t v16 = v13[2];
    unint64_t v15 = v13[3];
    if (v16 >= v15 >> 1)
    {
      uint64_t v13 = sub_1A72AC8E4((void *)(v15 > 1), v16 + 1, 1, v13);
      *uint64_t v12 = v13;
    }
    _OWORD v13[2] = v16 + 1;
    char v17 = &v13[2 * v16];
    id v17[4] = sub_1A73A9D0C;
    v17[5] = v11;
    swift_endAccess();
    return nullsub_1;
  }
  uint64_t result = (uint64_t (*)())swift_beginAccess();
  int v7 = *(unsigned __int8 *)(v2 + 48);
  if (v7 != 255)
  {
    uint64_t v18 = *(void **)(v2 + 40);
    uint64_t v8 = v18;
    char v19 = v7;
    uint64_t v9 = (void *)swift_allocObject();
    void v9[2] = v5;
    v9[3] = a1;
    v9[4] = a2;
    sub_1A734E5D8((uint64_t)&v18, (uint64_t)(v9 + 5), &qword_1EB7005B0);
    swift_retain();
    sub_1A73AA0BC(v8, v7);
    swift_retain();
    return sub_1A73A9CA0;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1A73A8C98(uint64_t a1, uint64_t a2))()
{
  uint64_t v5 = *(void *)(v2 + 16);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v5 + 16));
  if ((*(unsigned char *)(v2 + 24) & 1) == 0)
  {
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a1;
    *(void *)(v11 + 24) = a2;
    uint64_t v12 = (void *)(v2 + 32);
    swift_beginAccess();
    uint64_t v13 = *(void **)(v2 + 32);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 32) = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v13 = sub_1A72AD914(0, v13[2] + 1, 1, v13);
      *uint64_t v12 = v13;
    }
    unint64_t v16 = v13[2];
    unint64_t v15 = v13[3];
    if (v16 >= v15 >> 1)
    {
      uint64_t v13 = sub_1A72AD914((void *)(v15 > 1), v16 + 1, 1, v13);
      *uint64_t v12 = v13;
    }
    _OWORD v13[2] = v16 + 1;
    char v17 = &v13[2 * v16];
    id v17[4] = sub_1A73A9D0C;
    v17[5] = v11;
    swift_endAccess();
    return nullsub_1;
  }
  uint64_t result = (uint64_t (*)())swift_beginAccess();
  int v7 = *(unsigned __int8 *)(v2 + 48);
  if (v7 != 255)
  {
    uint64_t v18 = *(void **)(v2 + 40);
    uint64_t v8 = v18;
    char v19 = v7;
    uint64_t v9 = (void *)swift_allocObject();
    void v9[2] = v5;
    v9[3] = a1;
    v9[4] = a2;
    sub_1A734E5D8((uint64_t)&v18, (uint64_t)(v9 + 5), &qword_1EB7005A8);
    swift_retain();
    sub_1A73A9CA4(v8, v7);
    swift_retain();
    return sub_1A73A9CA0;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1A73A8E68(uint64_t a1, uint64_t a2))()
{
  uint64_t v5 = *(void *)(v2 + 16);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v5 + 16));
  if ((*(unsigned char *)(v2 + 24) & 1) == 0)
  {
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a1;
    *(void *)(v11 + 24) = a2;
    uint64_t v12 = (void *)(v2 + 32);
    swift_beginAccess();
    uint64_t v13 = *(void **)(v2 + 32);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 32) = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v13 = sub_1A72ADA2C(0, v13[2] + 1, 1, v13);
      *uint64_t v12 = v13;
    }
    unint64_t v16 = v13[2];
    unint64_t v15 = v13[3];
    if (v16 >= v15 >> 1)
    {
      uint64_t v13 = sub_1A72ADA2C((void *)(v15 > 1), v16 + 1, 1, v13);
      *uint64_t v12 = v13;
    }
    _OWORD v13[2] = v16 + 1;
    char v17 = &v13[2 * v16];
    id v17[4] = sub_1A73A9D0C;
    v17[5] = v11;
    swift_endAccess();
    return nullsub_1;
  }
  uint64_t result = (uint64_t (*)())swift_beginAccess();
  int v7 = *(unsigned __int8 *)(v2 + 48);
  if (v7 != 255)
  {
    uint64_t v18 = *(void **)(v2 + 40);
    uint64_t v8 = v18;
    char v19 = v7;
    uint64_t v9 = (void *)swift_allocObject();
    void v9[2] = v5;
    v9[3] = a1;
    v9[4] = a2;
    sub_1A734E5D8((uint64_t)&v18, (uint64_t)(v9 + 5), (uint64_t *)&unk_1E96F3220);
    swift_retain();
    sub_1A73A9CA4(v8, v7);
    swift_retain();
    return sub_1A73A9CA0;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1A73A9038(uint64_t a1, uint64_t a2))()
{
  uint64_t v5 = *(void *)(v2 + 16);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v5 + 16));
  if ((*(unsigned char *)(v2 + 24) & 1) == 0)
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    *(void *)(v12 + 24) = a2;
    uint64_t v13 = (void *)(v2 + 32);
    swift_beginAccess();
    uint64_t v14 = *(void **)(v2 + 32);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 32) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v14 = sub_1A72ADA38(0, v14[2] + 1, 1, v14);
      *uint64_t v13 = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      uint64_t v14 = sub_1A72ADA38((void *)(v16 > 1), v17 + 1, 1, v14);
      *uint64_t v13 = v14;
    }
    void v14[2] = v17 + 1;
    uint64_t v18 = &v14[2 * v17];
    id v18[4] = sub_1A73A9FDC;
    v18[5] = v12;
    swift_endAccess();
    return nullsub_1;
  }
  uint64_t result = (uint64_t (*)())swift_beginAccess();
  int v7 = *(unsigned __int8 *)(v2 + 56);
  if (v7 != 255)
  {
    uint64_t v8 = *(void **)(v2 + 48);
    v19[0] = *(void *)(v2 + 40);
    uint64_t v9 = (void *)v19[0];
    v19[1] = v8;
    char v20 = v7;
    uint64_t v10 = (void *)swift_allocObject();
    id v10[2] = v5;
    void v10[3] = a1;
    v10[4] = a2;
    sub_1A734E5D8((uint64_t)v19, (uint64_t)(v10 + 5), &qword_1E96F2820);
    swift_retain();
    sub_1A73A9FA8(v9, v8, v7);
    swift_retain();
    return sub_1A73A9F4C;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1A73A9210(uint64_t a1, uint64_t a2))()
{
  uint64_t v5 = *(void *)(v2 + 16);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v5 + 16));
  if ((*(unsigned char *)(v2 + 24) & 1) == 0)
  {
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    *(void *)(v13 + 24) = a2;
    uint64_t v14 = (void *)(v2 + 32);
    swift_beginAccess();
    unint64_t v15 = *(void **)(v2 + 32);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 32) = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v15 = sub_1A72ADA44(0, v15[2] + 1, 1, v15);
      *uint64_t v14 = v15;
    }
    unint64_t v18 = v15[2];
    unint64_t v17 = v15[3];
    if (v18 >= v17 >> 1)
    {
      unint64_t v15 = sub_1A72ADA44((void *)(v17 > 1), v18 + 1, 1, v15);
      *uint64_t v14 = v15;
    }
    v15[2] = v18 + 1;
    char v19 = &v15[2 * v18];
    id v19[4] = sub_1A73A9E94;
    v19[5] = v13;
    swift_endAccess();
    return nullsub_1;
  }
  uint64_t result = (uint64_t (*)())swift_beginAccess();
  int v7 = *(unsigned __int8 *)(v2 + 64);
  if (v7 != 255)
  {
    uint64_t v9 = *(void *)(v2 + 48);
    uint64_t v8 = *(void *)(v2 + 56);
    v20[0] = *(void *)(v2 + 40);
    uint64_t v10 = (void *)v20[0];
    v20[1] = v9;
    void v20[2] = v8;
    char v21 = v7;
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = v5;
    void v11[3] = a1;
    v11[4] = a2;
    sub_1A734E5D8((uint64_t)v20, (uint64_t)(v11 + 5), &qword_1E96F31C0);
    swift_retain();
    sub_1A73A9E24(v10, v9, v8, v7);
    swift_retain();
    return sub_1A73A9DC0;
  }
  __break(1u);
  return result;
}

id AsyncBlockOperation.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  Class ObjectType = (objc_class *)swift_getObjectType();
  int v7 = &v5[qword_1E96F2798];
  *(void *)int v7 = a1;
  *((void *)v7 + 1) = a2;
  v9.receiver = v5;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

id AsyncBlockOperation.init(_:)(uint64_t a1, uint64_t a2)
{
  Class ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = &v2[qword_1E96F2798];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

void AsyncBlockOperation.perform(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *v2;
  (*(void (**)(void))((char *)v2 + qword_1E96F2798))();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = *(void *)(v5 + 192);
  id v6[2] = v7;
  v6[3] = a1;
  v6[4] = a2;
  uint64_t v8 = qword_1EB705720;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EB704C70;
  uint64_t v10 = sub_1A72C01A0(v9, (uint64_t)sub_1A73A989C, (uint64_t)v6);
  swift_release();
  swift_release();

  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v7;
  void v11[3] = a1;
  v11[4] = a2;
  uint64_t v12 = (void *)qword_1EB704C70;
  uint64_t v13 = *(void *)(*(void *)(v10 + 16) + 16);
  swift_retain();
  id v14 = v12;
  os_unfair_lock_lock_with_options();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = 0;
  *(unsigned char *)(v15 + 32) = 1;
  *(void *)(v15 + 40) = nullsub_1;
  *(void *)(v15 + 48) = 0;
  *(void *)(v15 + 56) = sub_1A73A99CC;
  *(void *)(v15 + 64) = v11;
  *(void *)(v15 + 72) = nullsub_1;
  *(void *)(v15 + 80) = 0;
  id v17 = v14;
  swift_retain();
  unint64_t v16 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A73A9B64, v15);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  v16();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1A73A9718(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v7 = sub_1A7574170();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))((char *)&v12 - v9, a1, a4);
  swift_storeEnumTagMultiPayload();
  a2(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A73A9864()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A73A989C(uint64_t a1)
{
  return sub_1A73A9718(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_1A73A98BC(void *a1, void (*a2)(char *))
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v4 = sub_1A7574170();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - v6;
  *(uint64_t *)((char *)&v10 - v6) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  id v8 = a1;
  a2(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A73A99CC(void *a1)
{
  return sub_1A73A98BC(a1, *(void (**)(char *))(v1 + 24));
}

id AsyncBlockOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void AsyncBlockOperation.init()()
{
}

void sub_1A73A9A34()
{
}

uint64_t sub_1A73A9A5C()
{
  return swift_release();
}

id AsyncBlockOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A73A9AA8()
{
  return swift_release();
}

uint64_t sub_1A73A9ABC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void (*a7)(void, void), uint64_t a8, uint64_t (*a9)(void), uint64_t a10)
{
  return sub_1A740D8E4(*(void **)a1, *(unsigned char *)(a1 + 8), a2, a3, a4 & 1, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1A73A9B14()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A73A9B64(uint64_t a1)
{
  return sub_1A740D8E4(*(void **)a1, *(unsigned char *)(a1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void (**)(void, void))(v1 + 56), *(void *)(v1 + 64), *(uint64_t (**)(void))(v1 + 72), *(void *)(v1 + 80));
}

void sub_1A73A9BB0()
{
}

uint64_t sub_1A73A9BE0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AsyncBlockOperation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AsyncBlockOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AsyncBlockOperation);
}

uint64_t dispatch thunk of AsyncBlockOperation.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t sub_1A73A9C6C()
{
  return objectdestroy_8Tm((void (*)(void, void))sub_1A73A9C84);
}

void sub_1A73A9C84(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
}
  }

id sub_1A73A9CA4(id result, unsigned __int8 a2)
{
  if (a2 != 0xFF) {
    return sub_1A73A9CB8(result, a2);
  }
  return result;
}

id sub_1A73A9CB8(id result, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return result;
  }
  return result;
}

uint64_t sub_1A73A9CD4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A73A9D10()
{
  swift_release();
  swift_release();
  sub_1A73A9D60(*(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));

  return swift_deallocObject();
}

void sub_1A73A9D60(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1)
  {
  }
  else
  {
    if (a4) {
      return;
    }
    id v5 = a1;
    swift_bridgeObjectRelease();
    a1 = v5;
  }
}

uint64_t sub_1A73A9DC0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  objc_super v2 = *(uint64_t (**)(long long *))(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 56);
  char v4 = *(unsigned char *)(v0 + 64);
  long long v6 = *(_OWORD *)(v0 + 40);
  uint64_t v7 = v3;
  char v8 = v4;
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(v1 + 16));
  return v2(&v6);
}

id sub_1A73A9E24(id result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1) {
    return sub_1A73A9E38(result, a2, a3, a4);
  }
  return result;
}

id sub_1A73A9E38(id result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1)
  {
    return result;
  }
  else if (!a4)
  {
    id v5 = result;
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A73A9E94(long long *a1)
{
  objc_super v2 = *(uint64_t (**)(long long *))(v1 + 16);
  uint64_t v3 = *((void *)a1 + 2);
  char v4 = *((unsigned char *)a1 + 24);
  long long v6 = *a1;
  uint64_t v7 = v3;
  char v8 = v4;
  return v2(&v6);
}

uint64_t sub_1A73A9EE0()
{
  swift_release();
  swift_release();
  sub_1A73A9F2C(*(void **)(v0 + 40), *(id *)(v0 + 48), *(unsigned char *)(v0 + 56));

  return swift_deallocObject();
}

void sub_1A73A9F2C(void *a1, id a2, char a3)
{
  if (a3 == 1)
  {
  }
  else if (!a3)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A73A9F4C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  objc_super v2 = *(uint64_t (**)(long long *))(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 56);
  long long v5 = *(_OWORD *)(v0 + 40);
  char v6 = v3;
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(v1 + 16));
  return v2(&v5);
}

id sub_1A73A9FA8(id result, id a2, char a3)
{
  if (a3 != -1) {
    return sub_1A73A9FBC(result, a2, a3);
  }
  return result;
}

id sub_1A73A9FBC(id result, id a2, char a3)
{
  if (a3 == 1) {
    return result;
  }
  if (!a3) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A73A9FDC(long long *a1)
{
  objc_super v2 = *(uint64_t (**)(long long *))(v1 + 16);
  char v3 = *((unsigned char *)a1 + 16);
  long long v5 = *a1;
  char v6 = v3;
  return v2(&v5);
}

uint64_t sub_1A73AA020()
{
  return objectdestroy_8Tm((void (*)(void, void))sub_1A73AA13C);
}

uint64_t sub_1A73AA038()
{
  return objectdestroy_8Tm((void (*)(void, void))sub_1A73AA050);
}

void sub_1A73AA050(id a1, char a2)
{
  if (a2 == 1) {
}
  }

uint64_t sub_1A73AA064()
{
  uint64_t v1 = *(void *)(v0 + 16);
  objc_super v2 = *(uint64_t (**)(uint64_t *))(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 40);
  char v6 = v3;
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(v1 + 16));
  return v2(&v5);
}

id sub_1A73AA0BC(id result, char a2)
{
  if (a2 != -1) {
    return sub_1A73AA0D0(result, a2);
  }
  return result;
}

id sub_1A73AA0D0(id result, char a2)
{
  if (a2 == 1) {
    return result;
  }
  return result;
}

uint64_t sub_1A73AA0E4(uint64_t *a1)
{
  objc_super v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *a1;
  char v6 = v3;
  return v2(&v5);
}

uint64_t OptionSet<>.description.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v5 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v40 = sub_1A7573210();
  uint64_t v9 = *(void *)(v40 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v40);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v34 - v13;
  uint64_t v15 = v7;
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  uint64_t v17 = 0;
  uint64_t v41 = TupleTypeMetadata2 - 8;
  uint64_t v39 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  unint64_t v36 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v37 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  unint64_t v35 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v17 == MEMORY[0x1AD0CAD00](v16, TupleTypeMetadata2))
    {
      uint64_t v18 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v12, 1, 1, TupleTypeMetadata2);
      goto LABEL_7;
    }
    char v19 = v15;
    char v20 = sub_1A7572AA0();
    sub_1A7572A50();
    if (v20)
    {
      uint64_t v21 = *(void *)(TupleTypeMetadata2 - 8);
      uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v21 + 16))(v12, v16+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v17, TupleTypeMetadata2);
      BOOL v23 = __OFADD__(v17++, 1);
      if (v23) {
        break;
      }
      goto LABEL_6;
    }
    uint64_t result = sub_1A75735F0();
    uint64_t v21 = *(void *)(TupleTypeMetadata2 - 8);
    if (*(void *)(v21 + 64) != 8) {
      goto LABEL_21;
    }
    v43[0] = result;
    (*(void (**)(char *, void *, uint64_t))(v21 + 16))(v12, v43, TupleTypeMetadata2);
    uint64_t result = swift_unknownObjectRelease();
    BOOL v23 = __OFADD__(v17++, 1);
    if (v23) {
      break;
    }
LABEL_6:
    uint64_t v18 = v21;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v12, 0, 1, TupleTypeMetadata2);
    uint64_t v15 = v19;
LABEL_7:
    (*v39)(v14, v12, v40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, TupleTypeMetadata2) == 1)
    {
      swift_bridgeObjectRelease();
      v43[0] = 91;
      v43[1] = 0xE100000000000000;
      uint64_t v42 = v35;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
      sub_1A72E3500();
      sub_1A7572570();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      return v43[0];
    }
    uint64_t v24 = &v14[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v26 = *(void *)v24;
    uint64_t v25 = *((void *)v24 + 1);
    (*v37)(v15, v14, a1);
    uint64_t v27 = v15;
    if (sub_1A7573350())
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v35 = sub_1A72AC148(0, v35[2] + 1, 1, v35);
      }
      unint64_t v29 = v35[2];
      unint64_t v28 = v35[3];
      unint64_t v30 = v29 + 1;
      if (v29 >= v28 >> 1)
      {
        unint64_t v34 = v29 + 1;
        unint64_t v33 = sub_1A72AC148((void *)(v28 > 1), v29 + 1, 1, v35);
        unint64_t v30 = v34;
        unint64_t v35 = v33;
      }
      uint64_t v31 = v35;
      void v35[2] = v30;
      unint64_t v32 = &v31[2 * v29];
      v32[4] = v26;
      v32[5] = v25;
      uint64_t v15 = v27;
      (*v36)(v27, a1);
    }
    else
    {
      (*v36)(v15, a1);
      swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t dispatch thunk of static REMOptionSetStringConvertible.memberDescriptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void REMSmartList.NonCustom.init(smartListType:)(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v6 = v5;
  if (v4 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v9 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_15:

    char v20 = 0;
    goto LABEL_16;
  }
  uint64_t v10 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v12 = v11;
  if (v10 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v18 = v17;
      if (v16 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v18 == v19)
      {
        swift_bridgeObjectRelease_n();
LABEL_20:

        char v20 = 2;
        goto LABEL_16;
      }
      char v21 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_20;
      }
      uint64_t v22 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v24 = v23;
      if (v22 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v24 == v25)
      {
        swift_bridgeObjectRelease_n();
LABEL_25:

        char v20 = 3;
        goto LABEL_16;
      }
      char v26 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v26) {
        goto LABEL_25;
      }
      uint64_t v27 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v29 = v28;
      if (v27 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v29 == v30)
      {
        swift_bridgeObjectRelease_n();
LABEL_30:

        char v20 = 4;
        goto LABEL_16;
      }
      char v31 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v31) {
        goto LABEL_30;
      }
      uint64_t v32 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v34 = v33;
      if (v32 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v34 == v35)
      {
        swift_bridgeObjectRelease_n();
LABEL_35:

        char v20 = 5;
        goto LABEL_16;
      }
      char v36 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v36) {
        goto LABEL_35;
      }
      uint64_t v37 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v39 = v38;
      if (v37 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v39 == v40)
      {
        swift_bridgeObjectRelease_n();
LABEL_40:

        char v20 = 6;
        goto LABEL_16;
      }
      char v41 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v41) {
        goto LABEL_40;
      }
      uint64_t v42 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v44 = v43;
      if (v42 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v44 == v45)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v46 = sub_1A7573DB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v46 & 1) == 0)
        {
          uint64_t v47 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          uint64_t v49 = v48;
          if (v47 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v49 == v50)
          {
            id v51 = a1;

            swift_bridgeObjectRelease_n();
            char v20 = 7;
            goto LABEL_16;
          }
          char v52 = sub_1A7573DB0();
          id v53 = a1;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v52)
          {
            char v20 = 7;
            goto LABEL_16;
          }
          goto LABEL_46;
        }
      }

LABEL_46:
      char v20 = 8;
      goto LABEL_16;
    }
  }

  char v20 = 1;
LABEL_16:
  *a2 = v20;
}

id REMSmartList.NonCustom.smartListType.getter()
{
  return **((id **)&unk_1E5CC91F8 + *v0);
}

id REMSmartList.NonCustom.remObjectID.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v0 - 8);
  objc_super v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1A7571BC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571B70();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    __break(1u);
    JUMPOUT(0x1A73AAE10);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  uint64_t v7 = self;
  char v8 = (void *)sub_1A7571B90();
  id v9 = objc_msgSend(v7, sel_objectIDWithUUID_, v8);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

BOOL static REMSmartList.NonCustom.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMSmartList.NonCustom.hash(into:)()
{
  return sub_1A75740D0();
}

void *static REMSmartList.NonCustom.allCases.getter()
{
  return &unk_1EFC8FCF0;
}

uint64_t REMSmartList.NonCustom.hashValue.getter()
{
  return sub_1A7574110();
}

void sub_1A73AAEC4(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FCF0;
}

unint64_t sub_1A73AAED8()
{
  unint64_t result = qword_1E96F2828;
  if (!qword_1E96F2828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2828);
  }
  return result;
}

unint64_t sub_1A73AAF30()
{
  unint64_t result = qword_1E96F2830;
  if (!qword_1E96F2830)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F2838);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2830);
  }
  return result;
}

uint64_t _s9NonCustomOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9NonCustomOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73AB0E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSmartList.NonCustom()
{
  return &type metadata for REMSmartList.NonCustom;
}

uint64_t sub_1A73AB120(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1A75736F0();
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1A72BEE98(i, (uint64_t)v12);
      sub_1A72BEE98((uint64_t)v12, (uint64_t)&v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
      int v6 = swift_dynamicCast();
      char v7 = v6;
      if (!v6)
      {
        sub_1A72BEE98((uint64_t)v12, (uint64_t)&v10);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7003E0);
        if ((swift_dynamicCast() & 1) == 0) {
          break;
        }
      }
      sub_1A734875C();
      uint64_t v10 = v9;
      char v11 = v7 ^ 1;
      static REMMembership.fromJSON(_:)(&v10);
      swift_bridgeObjectRelease();
      if (v1) {
        goto LABEL_9;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      sub_1A75736C0();
      sub_1A7573700();
      sub_1A7573710();
      sub_1A75736D0();
      if (!--v3) {
        return v13;
      }
    }
    sub_1A72EFD2C();
    swift_allocError();
    *(void *)uint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    *(unsigned char *)(v8 + 16) = 3;
    swift_willThrow();
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return swift_release();
  }
  return result;
}

void sub_1A73AB2E4(unint64_t a1@<X0>, unint64_t a2@<X8>)
{
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    if (!v5)
    {
LABEL_19:
      *(void *)a2 = v6;
      *(unsigned char *)(a2 + 8) = 1;
      return;
    }
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1A72D2D80(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0) {
      break;
    }
    unint64_t v13 = a2;
    uint64_t v7 = 0;
    uint64_t v6 = v18;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x1AD0CB800](v7, a1);
      }
      else {
        id v8 = *(id *)(a1 + 8 * v7 + 32);
      }
      uint64_t v9 = v8;
      REMMembership.toJSON()(&v14);
      if (v2)
      {
        swift_release();

        return;
      }
      unint64_t v10 = v14;
      if (v15) {
        char v11 = &qword_1EB7003E0;
      }
      else {
        char v11 = &qword_1E96F1E60;
      }
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(v11);

      *(void *)&long long v16 = v10;
      uint64_t v18 = v6;
      a2 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (a2 >= v12 >> 1)
      {
        sub_1A72D2D80(v12 > 1, a2 + 1, 1);
        uint64_t v6 = v18;
      }
      ++v7;
      *(void *)(v6 + 16) = a2 + 1;
      sub_1A72BEE44(&v16, (_OWORD *)(v6 + 32 * a2 + 32));
      if (v5 == v7)
      {
        a2 = v13;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
}

unint64_t REMMemberships.toJSON()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2840);
  uint64_t v5 = MEMORY[0x1F4188790](v63);
  uint64_t v62 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v61 = (uint64_t)&v51 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  BOOL v60 = (char *)&v51 - v10;
  MEMORY[0x1F4188790](v9);
  char v59 = (char *)&v51 - v11;
  id v12 = objc_msgSend(v1, sel_membershipByMemberIdentifier);
  uint64_t v13 = sub_1A7571BC0();
  sub_1A734875C();
  sub_1A734879C();
  uint64_t v14 = sub_1A75723F0();

  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v51 = v2;
    uint64_t v52 = a1;
    unint64_t v70 = MEMORY[0x1E4FBC860];
    sub_1A75736F0();
    unint64_t result = sub_1A73ABE90(v14);
    uint64_t v18 = result;
    uint64_t v19 = 0;
    uint64_t v20 = v14 + 64;
    uint64_t v57 = v13 - 8;
    char v21 = *(unsigned char *)(v14 + 32);
    uint64_t v53 = v14 + 80;
    uint64_t v58 = v14;
    uint64_t v54 = v15;
    uint64_t v55 = v17;
    uint64_t v56 = v14 + 64;
    while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << v21)
    {
      unint64_t v23 = (unint64_t)v18 >> 6;
      if ((*(void *)(v20 + 8 * ((unint64_t)v18 >> 6)) & (1 << v18)) == 0) {
        goto LABEL_28;
      }
      if (*(_DWORD *)(v14 + 36) != v17) {
        goto LABEL_29;
      }
      uint64_t v65 = 1 << v18;
      uint64_t v64 = v19;
      uint64_t v24 = v63;
      uint64_t v25 = *(int *)(v63 + 48);
      uint64_t v26 = *(void *)(v14 + 48);
      uint64_t v67 = *(void **)(v13 - 8);
      uint64_t v27 = v26 + v67[9] * v18;
      uint64_t v28 = (void (*)(char *, uint64_t, uint64_t))v67[2];
      uint64_t v66 = v28;
      uint64_t v29 = (uint64_t)v59;
      v28(v59, v27, v13);
      uint64_t v30 = *(void **)(*(void *)(v14 + 56) + 8 * v18);
      *(void *)(v29 + v25) = v30;
      uint64_t v31 = (uint64_t)v60;
      v28(v60, v29, v13);
      *(void *)(v31 + *(int *)(v24 + 48)) = v30;
      uint64_t v32 = v61;
      sub_1A73ABDC4(v31, v61);
      id v33 = v30;
      sub_1A73ABE2C(v29);
      uint64_t v34 = *(int *)(v24 + 48);
      uint64_t v35 = v62;
      v66(v62, v32, v13);
      char v36 = *(void **)(v32 + v34);
      *(void *)&v35[v34] = v36;
      uint64_t v37 = (void (*)(char *, uint64_t))v67[1];
      id v38 = v36;
      v37(v35, v13);
      uint64_t v14 = v58;
      sub_1A73ABE2C(v32);
      sub_1A75736C0();
      sub_1A7573700();
      sub_1A7573710();
      unint64_t result = sub_1A75736D0();
      char v21 = *(unsigned char *)(v14 + 32);
      unint64_t v22 = 1 << v21;
      if (v18 >= 1 << v21) {
        goto LABEL_30;
      }
      uint64_t v20 = v56;
      uint64_t v39 = *(void *)(v56 + 8 * v23);
      if ((v39 & v65) == 0) {
        goto LABEL_31;
      }
      LODWORD(v17) = v55;
      if (*(_DWORD *)(v14 + 36) != v55) {
        goto LABEL_32;
      }
      unint64_t v40 = v39 & (-2 << (v18 & 0x3F));
      if (v40)
      {
        unint64_t v22 = __clz(__rbit64(v40)) | v18 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v41 = v23 + 1;
        unint64_t v42 = (v22 + 63) >> 6;
        if (v23 + 1 < v42)
        {
          unint64_t v43 = *(void *)(v56 + 8 * v41);
          if (v43)
          {
LABEL_18:
            unint64_t v22 = __clz(__rbit64(v43)) + (v41 << 6);
          }
          else
          {
            while (v42 - 2 != v23)
            {
              unint64_t v43 = *(void *)(v53 + 8 * v23++);
              if (v43)
              {
                unint64_t v41 = v23 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v19 = v64 + 1;
      uint64_t v18 = v22;
      if (v64 + 1 == v54)
      {
        unint64_t v44 = v70;
        swift_bridgeObjectRelease();
        a1 = v52;
        uint64_t v3 = v51;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v44 = MEMORY[0x1E4FBC860];
LABEL_21:
    sub_1A73AB2E4(v44, (unint64_t)&v68);
    unint64_t result = swift_bridgeObjectRelease();
    if (!v3)
    {
      uint64_t v45 = v68;
      int v46 = v69;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A7578D60;
      *(void *)(inited + 32) = 0x68737265626D656DLL;
      *(void *)(inited + 40) = 0xEB00000000737069;
      if (v46) {
        uint64_t v48 = &qword_1EB7003E0;
      }
      else {
        uint64_t v48 = &qword_1E96F1E60;
      }
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(v48);
      *(void *)(inited + 48) = v45;
      *(void *)(inited + 72) = v49;
      *(void *)(inited + 80) = 0xD000000000000017;
      uint64_t v50 = *MEMORY[0x1E4F95110];
      *(void *)(inited + 120) = MEMORY[0x1E4FBB550];
      *(void *)(inited + 88) = 0x80000001A75A0980;
      *(void *)(inited + 96) = v50;
      unint64_t result = sub_1A72B0944(inited);
      *(void *)a1 = result;
      *(unsigned char *)(a1 + 8) = 0;
    }
  }
  return result;
}

void *static REMMemberships.fromJSON(_:)(unsigned char *a1)
{
  if ((a1[8] & 1) == 0)
  {
    uint64_t v1 = *(void **)a1;
    if (!*(void *)(*(void *)a1 + 16)
      || (unint64_t v5 = sub_1A72B2210(0xD000000000000017, 0x80000001A75A0980), (v6 & 1) == 0))
    {
      sub_1A72EFD2C();
      swift_allocError();
      *(void *)uint64_t v3 = 0xD000000000000017;
      *(void *)(v3 + 8) = 0x80000001A75A0980;
      char v4 = 1;
      goto LABEL_9;
    }
    sub_1A72BEE98(v1[7] + 32 * v5, (uint64_t)v18);
    sub_1A72BEE44(v18, v19);
    sub_1A72BEE98((uint64_t)v19, (uint64_t)v18);
    if (swift_dynamicCast())
    {
      if (rem_isUnsupportedVersionByRuntime())
      {
        sub_1A72EFD2C();
        swift_allocError();
        *(void *)uint64_t v7 = *(void *)&v17[0];
        *(void *)(v7 + 8) = 0;
        *(unsigned char *)(v7 + 16) = 0;
LABEL_19:
        swift_willThrow();
        goto LABEL_20;
      }
      if (v1[2])
      {
        unint64_t v11 = sub_1A72B2210(0x68737265626D656DLL, 0xEB00000000737069);
        if (v12)
        {
          sub_1A72BEE98(v1[7] + 32 * v11, (uint64_t)v17);
          sub_1A72BEE44(v17, v18);
          sub_1A72BEE98((uint64_t)v18, (uint64_t)v17);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7003E0);
          if (swift_dynamicCast())
          {
            uint64_t v1 = (void *)sub_1A73AB120(v16);
            swift_bridgeObjectRelease();
            if (!v2)
            {
              id v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
              sub_1A734875C();
              uint64_t v14 = (void *)sub_1A7572A00();
              swift_bridgeObjectRelease();
              uint64_t v1 = objc_msgSend(v13, sel_initWithMemberships_, v14);

              __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
              return v1;
            }
          }
          else
          {
            sub_1A72EFD2C();
            swift_allocError();
            *(_OWORD *)uint64_t v15 = xmmword_1A75805A0;
            *(unsigned char *)(v15 + 16) = 2;
            swift_willThrow();
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
LABEL_20:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
          return v1;
        }
      }
      sub_1A72EFD2C();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = xmmword_1A75805A0;
      char v10 = 1;
    }
    else
    {
      sub_1A72EFD2C();
      swift_allocError();
      *(void *)uint64_t v9 = 0xD000000000000017;
      *(void *)(v9 + 8) = 0x80000001A75A0980;
      char v10 = 2;
    }
    *(unsigned char *)(v9 + 16) = v10;
    goto LABEL_19;
  }
  sub_1A72EFD2C();
  swift_allocError();
  *(void *)uint64_t v3 = 0;
  *(void *)(v3 + 8) = 0;
  char v4 = 3;
LABEL_9:
  *(unsigned char *)(v3 + 16) = v4;
  swift_willThrow();
  return v1;
}

unint64_t sub_1A73ABD74@<X0>(uint64_t a1@<X8>)
{
  return REMMemberships.toJSON()(a1);
}

void *sub_1A73ABD98@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = static REMMemberships.fromJSON(_:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A73ABDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A73ABE2C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2840);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A73ABE90(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t static REMPaths.mlModelURL()()
{
  uint64_t v0 = sub_1A7571880();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A75719C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A73AC0F0();
  v9[0] = 0x736C65646F4D4C4DLL;
  v9[1] = 0xE90000000000002FLL;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F276A8], v0);
  sub_1A72DF534();
  sub_1A75719B0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1A73AC0F0()
{
  uint64_t v0 = sub_1A75719C0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = 3;
  uint64_t v10 = 0;
  Swift::Bool v4 = REMFeatureFlags.isEnabled(on:)((ReminderKitInternal::REMFeatureFlags::Platforms)&v10);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v6 = &selRef_dataSeparationEnabled_applicationDocumentsURL;
  if (!v4) {
    uint64_t v6 = &selRef_legacy_centralizedDataPath;
  }
  id v7 = [ObjCClassFromMetadata *v6];
  sub_1A7571940();

  unint64_t v8 = (void *)sub_1A75718E0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v9 = objc_msgSend(v8, sel_rem_URLByAppendingReminderDataContainerPathComponent);
  sub_1A7571940();
}

id sub_1A73AC250()
{
  uint64_t v0 = sub_1A7571880();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A75719C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v14 - v9;
  swift_getObjCClassMetadata();
  sub_1A73AC0F0();
  v14[0] = 0x736C65646F4D4C4DLL;
  v14[1] = 0xE90000000000002FLL;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F276A8], v0);
  sub_1A72DF534();
  sub_1A75719B0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  char v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v8, v4);
  char v12 = (void *)sub_1A75718E0();
  v11(v10, v4);

  return v12;
}

id static REMPaths.writableURLForMLModel()@<X0>(uint64_t a1@<X8>)
{
  return sub_1A73AC550((void *)0x736C65646F4D4C4DLL, (void *)0xE90000000000002FLL, a1);
}

id static REMPaths.temporaryURLForMLModel()@<X0>(uint64_t a1@<X8>)
{
  return sub_1A73AC550((void *)0xD000000000000012, (void *)0x80000001A75A1310, a1);
}

id sub_1A73AC550@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v23 = a2;
  uint64_t v22 = a3;
  void v24[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1A7571880();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A75719C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  char v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v22 - v13;
  sub_1A73AC0F0();
  v24[0] = a1;
  v24[1] = v23;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F276A8], v4);
  sub_1A72DF534();
  sub_1A75719B0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = v8;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v15);
  id v17 = objc_msgSend(self, sel_defaultManager);
  uint64_t v18 = (void *)sub_1A75718E0();
  v24[0] = 0;
  LOBYTE(v4) = objc_msgSend(v17, sel_rem_createDirectoryIfNecessaryAtURL_error_, v18, v24);

  id v19 = v24[0];
  if (v4)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v22, v14, v15);
    return v19;
  }
  else
  {
    id v21 = v24[0];
    sub_1A7571850();

    swift_willThrow();
    return (id)((uint64_t (*)(char *, uint64_t))v16)(v14, v15);
  }
}

id static REMPaths._legacy_mlModelURL()()
{
  return sub_1A73AC888(0x736C65646F4D4C4DLL, 0xE90000000000002FLL);
}

id sub_1A73AC854(uint64_t a1, uint64_t a2)
{
  return sub_1A73ACAC0(a1, a2, (void (*)(void))static REMPaths._legacy_mlModelURL());
}

id static REMPaths._legacy_temporaryMLModelURL()()
{
  return sub_1A73AC888(0xD000000000000012, 0x80000001A75A1310);
}

id sub_1A73AC888(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a2;
  uint64_t v3 = sub_1A7571880();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A75719C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_legacy_centralizedDataPath);
  if (result)
  {
    char v12 = result;
    id v13 = objc_msgSend(result, sel_rem_URLByAppendingReminderDataContainerPathComponent);
    sub_1A7571940();

    uint64_t v16 = a1;
    uint64_t v17 = v15;
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F276A8], v3);
    sub_1A72DF534();
    sub_1A75719B0();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1A73ACAA8(uint64_t a1, uint64_t a2)
{
  return sub_1A73ACAC0(a1, a2, (void (*)(void))static REMPaths._legacy_temporaryMLModelURL());
}

id sub_1A73ACAC0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = sub_1A75719C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjCClassMetadata();
  a3();
  uint64_t v8 = (void *)sub_1A75718E0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

  return v8;
}

uint64_t KMeans.__allocating_init(k:pointCloud:maxIter:tolerance:randomGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10 = swift_allocObject();
  KMeans.init(k:pointCloud:maxIter:tolerance:randomGenerator:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_1A73ACC40(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_1A73ACCC4()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F2848);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F2848);
  if (qword_1EB7042A8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F18);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t KMeans.TrainingMetrics.clusterVariances.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t KMeans.TrainingMetrics.clusterSizes.getter()
{
  return swift_bridgeObjectRetain();
}

double KMeans.TrainingMetrics.mse.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t sub_1A73ACDA4(void *a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2878);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73B3FE8();
  sub_1A75741B0();
  uint64_t v11 = a2;
  v10[7] = 0;
  type metadata accessor for RDVector();
  sub_1A73B403C(&qword_1E96F2880);
  sub_1A7573B60();
  if (!v2)
  {
    void v10[6] = 1;
    sub_1A7573B30();
    uint64_t v10[5] = 2;
    sub_1A7573B40();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A73ACF7C()
{
  uint64_t v1 = 0x65636E6169726176;
  if (*v0 != 1) {
    uint64_t v1 = 1702521203;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7265746E6563;
  }
}

uint64_t sub_1A73ACFCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A73B444C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A73ACFF4(uint64_t a1)
{
  unint64_t v2 = sub_1A73B3FE8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73AD030(uint64_t a1)
{
  unint64_t v2 = sub_1A73B3FE8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1A73AD06C(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v6 = sub_1A73B3D90(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(double *)(a2 + 8) = v6;
    *(void *)(a2 + 16) = v5;
  }
}

uint64_t sub_1A73AD0A0(void *a1)
{
  return sub_1A73ACDA4(a1, *v1);
}

uint64_t KMeans.metrics.getter@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = v1[14];
  uint64_t v4 = v1[15];
  *a1 = v1[13];
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void *KMeans.init(k:pointCloud:maxIter:tolerance:randomGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v7 = v5;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  v5[12] = MEMORY[0x1E4FBC860];
  v5[13] = v11;
  v5[14] = v11;
  v5[15] = 0;
  if (a1 < 1)
  {
    uint64_t v16 = self;
    sub_1A7573560();
    sub_1A7572740();
    uint64_t v21 = a1;
    sub_1A7573BC0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    uint64_t v17 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_invalidParameterErrorWithDescription_, v17, v21);

    goto LABEL_5;
  }
  swift_beginAccess();
  if (*(void *)(a2 + 40) < a1)
  {
    uint64_t v14 = self;
    uint64_t v15 = (void *)sub_1A75725E0();
    objc_msgSend(v14, sel_invalidParameterErrorWithDescription_, v15);

LABEL_5:
    swift_willThrow();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return v7;
  }
  v7[2] = a1;
  *((unsigned char *)v7 + 24) = *(unsigned char *)(a2 + 57);
  sub_1A72B21AC(a4, (uint64_t)(v7 + 7));
  v7[4] = a2;
  *((double *)v7 + 5) = a5;
  v7[6] = a3;
  swift_beginAccess();
  double v18 = *(double *)(a2 + 32) * a5;
  uint64_t v19 = swift_retain();
  KMeans.trainCenters(_:_:convergeDistance:)(v19, a3, v18);
  swift_release();
  if (v6) {
    swift_release();
  }
  __swift_destroy_boxed_opaque_existential_1(a4);
  return v7;
}

uint64_t KMeans.trainCenters(_:_:convergeDistance:)(uint64_t a1, uint64_t a2, double a3)
{
  unint64_t v5 = v4;
  uint64_t v233 = *(void *)(v3 + 16);
  if (v233 == 1)
  {
    swift_beginAccess();
    uint64_t v8 = *(void *)(a1 + 24);
    if (v8)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1400);
      uint64_t v9 = a1;
      uint64_t v10 = (void *)v3;
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1A75785A0;
      swift_beginAccess();
      uint64_t v12 = *(void *)(v9 + 32);
      swift_beginAccess();
      uint64_t v13 = *(void *)(v9 + 40);
      *(void *)(v11 + 32) = v8;
      *(void *)(v11 + 40) = v12;
      *(void *)(v11 + 48) = v13;
      v10[12] = v11;
      swift_retain_n();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F78);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1A75785A0;
      *(void *)(v14 + 32) = *(void *)(v9 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD8);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1A75785A0;
      *(void *)(v15 + 32) = *(void *)(v9 + 40);
      swift_release();
      uint64_t v16 = *(void *)(v9 + 32);
      swift_beginAccess();
      v10[13] = v14;
      v10[14] = v15;
      v10[15] = v16;
LABEL_5:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  uint64_t v17 = v3;
  swift_beginAccess();
  uint64_t v18 = swift_bridgeObjectRetain();
  unint64_t v19 = sub_1A73B1318(v18, v233, v3 + 56);
  swift_endAccess();
  swift_bridgeObjectRelease();
  unint64_t v20 = *(void *)(a1 + 16);
  int v21 = *(unsigned __int8 *)(v3 + 24);
  v245[0] = *(unsigned char *)(v3 + 24);
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1A73AEAA8(v19, v20, v245, 1);
  if (v4) {
    goto LABEL_5;
  }
  uint64_t v24 = v22;
  unint64_t v231 = v19;
  v232 = (unint64_t *)(a1 + 16);
  int v230 = v21;
  uint64_t v219 = v17;
  uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
  if (v233 < 0)
  {
LABEL_246:
    __break(1u);
LABEL_247:
    __break(1u);
LABEL_248:
    __break(1u);
    goto LABEL_249;
  }
  uint64_t v26 = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v218 = a1;
  uint64_t isUniquelyReferenced_nonNull_native = v24;
  do
  {
    uint64_t v220 = v26;
    v244[0] = v27;
    unint64_t v223 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
    if (!v223)
    {
      unint64_t v19 = v27;
      uint64_t v29 = v232;
      goto LABEL_45;
    }
    uint64_t v224 = isUniquelyReferenced_nonNull_native + 32;
    uint64_t v221 = isUniquelyReferenced_nonNull_native;
    swift_bridgeObjectRetain();
    uint64_t v28 = 0;
    uint64_t v29 = v232;
    do
    {
      uint64_t v227 = v28;
      unint64_t v30 = *(void *)(v224 + 16 * v28);
      unint64_t v31 = v30 >> 62;
      unint64_t v235 = v30;
      if (v30 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v29 = v232;
        uint64_t isUniquelyReferenced_nonNull_native = sub_1A75738D0();
        uint64_t v32 = isUniquelyReferenced_nonNull_native;
        if (!isUniquelyReferenced_nonNull_native)
        {
LABEL_10:
          swift_bridgeObjectRelease_n();
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v32 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain_n();
        if (!v32) {
          goto LABEL_10;
        }
      }
      unint64_t v222 = v31;
      if ((v235 & 0xC000000000000001) != 0)
      {
        uint64_t v33 = MEMORY[0x1AD0CB800](0, v235);
      }
      else
      {
        if (!*(void *)((v235 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_243;
        }
        uint64_t v33 = *(void *)(v235 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      swift_beginAccess();
      unint64_t v34 = *(void *)(v33 + 24);
      type metadata accessor for RDVector();
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 24) = v34;
      unint64_t v36 = v34;
      unint64_t v37 = inited;
      uint64_t isUniquelyReferenced_nonNull_native = sub_1A7329790(v36, 0.0);
      *(void *)(v37 + 16) = isUniquelyReferenced_nonNull_native;
      if (v32 < 1)
      {
LABEL_244:
        __break(1u);
LABEL_245:
        __break(1u);
        goto LABEL_246;
      }
      unint64_t v228 = v5;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v38 = 0;
      uint64_t v236 = v32;
      do
      {
        if ((v235 & 0xC000000000000001) != 0)
        {
          uint64_t v40 = MEMORY[0x1AD0CB800](v38, v235);
        }
        else
        {
          uint64_t v40 = *(void *)(v235 + 32 + 8 * v38);
          swift_retain();
        }
        swift_beginAccess();
        uint64_t v41 = *(void *)(v37 + 24);
        if (v41 < 0) {
          goto LABEL_160;
        }
        uint64_t v242 = v40;
        if (v41)
        {
          unint64_t v42 = v37 + 16;
          unint64_t v5 = v40 + 16;
          swift_beginAccess();
          swift_beginAccess();
          unint64_t v43 = 0;
          unint64_t v19 = MEMORY[0x1E4FBC860];
          do
          {
            if (v43 >= *(void *)(*(void *)v42 + 16))
            {
              __break(1u);
LABEL_157:
              __break(1u);
              goto LABEL_158;
            }
            if (v43 >= *(void *)(*(void *)v5 + 16)) {
              goto LABEL_157;
            }
            double v44 = *(double *)(*(void *)v42 + 8 * v43 + 32);
            double v45 = *(double *)(*(void *)v5 + 8 * v43 + 32);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v19 = (unint64_t)sub_1A72AC59C(0, *(void *)(v19 + 16) + 1, 1, (void *)v19);
            }
            unint64_t v47 = *(void *)(v19 + 16);
            unint64_t v46 = *(void *)(v19 + 24);
            if (v47 >= v46 >> 1) {
              unint64_t v19 = (unint64_t)sub_1A72AC59C((void *)(v46 > 1), v47 + 1, 1, (void *)v19);
            }
            ++v43;
            *(void *)(v19 + 16) = v47 + 1;
            *(double *)(v19 + 8 * v47 + 32) = v44 + v45;
          }
          while (v41 != v43);
        }
        else
        {
          unint64_t v19 = MEMORY[0x1E4FBC860];
        }
        ++v38;
        unint64_t v5 = swift_allocObject();
        *(void *)(v5 + 16) = v19;
        uint64_t v39 = *(void *)(v19 + 16);
        swift_release();
        *(void *)(v5 + 24) = v39;
        swift_release();
        unint64_t v37 = v5;
      }
      while (v38 != v236);
      swift_release();
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_bridgeObjectRelease();
      if (v222)
      {
        swift_bridgeObjectRetain();
        uint64_t v48 = sub_1A75738D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v48 = *(void *)((v235 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      / infix(_:_:)(v5, (double)v48);
      swift_bridgeObjectRelease();
      uint64_t v49 = swift_release();
      MEMORY[0x1AD0CABF0](v49);
      if (*(void *)((v244[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v244[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1A7572A60();
      }
      sub_1A7572AB0();
      sub_1A7572A30();
      unint64_t v5 = v228;
      uint64_t v29 = v232;
LABEL_11:
      uint64_t v28 = v227 + 1;
    }
    while (v227 + 1 != v223);
    swift_bridgeObjectRelease();
    unint64_t v19 = v244[0];
LABEL_45:
    uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
    uint64_t v50 = v233;
    unint64_t v223 = v19;
    if (v233)
    {
      unint64_t v51 = 0;
      unint64_t v52 = v231;
      unint64_t v239 = v19 & 0xC000000000000001;
      uint64_t v234 = v19 & 0xFFFFFFFFFFFFFF8;
      double v53 = 0.0;
      unint64_t v225 = v19 + 32;
      while (1)
      {
        if (v51 == v50)
        {
          __break(1u);
LABEL_238:
          __break(1u);
LABEL_239:
          __break(1u);
LABEL_240:
          __break(1u);
LABEL_241:
          __break(1u);
LABEL_242:
          __break(1u);
LABEL_243:
          __break(1u);
          goto LABEL_244;
        }
        if ((v231 & 0xC000000000000001) != 0)
        {
          uint64_t isUniquelyReferenced_nonNull_native = MEMORY[0x1AD0CB800](v51, v52);
          uint64_t v56 = isUniquelyReferenced_nonNull_native;
          int v57 = v230;
          if (v239) {
            goto LABEL_53;
          }
        }
        else
        {
          int v57 = v230;
          if (v51 >= *(void *)((v231 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_238;
          }
          uint64_t v56 = *(void *)(v231 + 32 + 8 * v51);
          uint64_t isUniquelyReferenced_nonNull_native = swift_retain();
          if (v239)
          {
LABEL_53:
            uint64_t v242 = MEMORY[0x1AD0CB800](v51, v19);
            if (!v57) {
              goto LABEL_70;
            }
            goto LABEL_54;
          }
        }
        if (v51 >= *(void *)(v234 + 16)) {
          goto LABEL_239;
        }
        uint64_t v242 = *(void *)(v225 + 8 * v51);
        swift_retain();
        if (!v57)
        {
LABEL_70:
          uint64_t isUniquelyReferenced_nonNull_native = swift_beginAccess();
          uint64_t v65 = *(void *)(v56 + 24);
          if (v65 < 0) {
            goto LABEL_242;
          }
          if (v65)
          {
            uint64_t v66 = v242 + 16;
            swift_beginAccess();
            swift_beginAccess();
            uint64_t v67 = *(void *)(v56 + 16);
            uint64_t v68 = *(void *)(v67 + 16);
            if (!v68) {
              goto LABEL_162;
            }
            uint64_t v69 = *(void *)v66;
            unint64_t v70 = *(void *)(*(void *)v66 + 16);
            if (!v70) {
              goto LABEL_163;
            }
            uint64_t v71 = v67 + 32;
            uint64_t v72 = v69 + 32;
            double v73 = *(double *)(v67 + 32) - *(double *)(v69 + 32);
            double v54 = v73 * v73;
            if (v65 != 1)
            {
              unint64_t v74 = v70 - 1;
              if (v70 - 1 >= v68 - 1) {
                unint64_t v74 = v68 - 1;
              }
              if (v74 >= v65 - 2) {
                unint64_t v74 = v65 - 2;
              }
              unint64_t v75 = v74 + 1;
              if (v75 > 4)
              {
                uint64_t v111 = v75 & 3;
                if ((v75 & 3) == 0) {
                  uint64_t v111 = 4;
                }
                unint64_t v112 = v75 - v111;
                unint64_t v76 = v112 + 1;
                unint64_t v113 = (float64x2_t *)(v67 + 56);
                unint64_t v114 = (float64x2_t *)(v69 + 56);
                do
                {
                  float64x2_t v115 = vsubq_f64(v113[-1], v114[-1]);
                  float64x2_t v116 = vsubq_f64(*v113, *v114);
                  float64x2_t v117 = vmulq_f64(v115, v115);
                  float64x2_t v118 = vmulq_f64(v116, v116);
                  double v54 = v54 + v117.f64[0] + v117.f64[1] + v118.f64[0] + v118.f64[1];
                  v113 += 2;
                  v114 += 2;
                  v112 -= 4;
                }
                while (v112);
              }
              else
              {
                unint64_t v76 = 1;
              }
              while (v68 != v76)
              {
                if (v76 >= v70) {
                  goto LABEL_163;
                }
                double v54 = v54
                    + (*(double *)(v71 + 8 * v76) - *(double *)(v72 + 8 * v76))
                    * (*(double *)(v71 + 8 * v76) - *(double *)(v72 + 8 * v76));
                if (v65 == ++v76) {
                  goto LABEL_48;
                }
              }
              goto LABEL_162;
            }
          }
          else
          {
            double v54 = 0.0;
          }
LABEL_48:
          swift_release();
          uint64_t isUniquelyReferenced_nonNull_native = swift_release();
          double v55 = sqrt(v54);
          goto LABEL_49;
        }
LABEL_54:
        if (v57 == 1)
        {
          uint64_t isUniquelyReferenced_nonNull_native = swift_beginAccess();
          unint64_t v19 = *(void *)(v56 + 24);
          if ((v19 & 0x8000000000000000) != 0) {
            goto LABEL_241;
          }
          v237 = (uint64_t *)(v56 + 24);
          unint64_t v229 = v5;
          if (v19)
          {
            uint64_t v58 = v56 + 16;
            uint64_t v59 = v242 + 16;
            swift_beginAccess();
            swift_beginAccess();
            unint64_t v5 = 0;
            BOOL v60 = (void *)MEMORY[0x1E4FBC860];
            while (v5 < *(void *)(*(void *)v58 + 16))
            {
              if (v5 >= *(void *)(*(void *)v59 + 16)) {
                goto LABEL_159;
              }
              double v61 = *(double *)(*(void *)v58 + 8 * v5 + 32);
              double v62 = *(double *)(*(void *)v59 + 8 * v5 + 32);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                BOOL v60 = sub_1A72AC59C(0, v60[2] + 1, 1, v60);
              }
              unint64_t v64 = v60[2];
              unint64_t v63 = v60[3];
              if (v64 >= v63 >> 1) {
                BOOL v60 = sub_1A72AC59C((void *)(v63 > 1), v64 + 1, 1, v60);
              }
              ++v5;
              v60[2] = v64 + 1;
              *(double *)&v60[v64 + 4] = v61 - v62;
              if (v19 == v5) {
                goto LABEL_93;
              }
            }
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
            goto LABEL_161;
          }
          BOOL v60 = (void *)MEMORY[0x1E4FBC860];
LABEL_93:
          type metadata accessor for RDVector();
          uint64_t isUniquelyReferenced_nonNull_native = swift_initStackObject();
          *(void *)(isUniquelyReferenced_nonNull_native + 16) = v60;
          uint64_t v93 = v60[2];
          *(void *)(isUniquelyReferenced_nonNull_native + 24) = v93;
          if (!v93)
          {
            swift_release();
            unint64_t v5 = v229;
            unint64_t v19 = v223;
            goto LABEL_109;
          }
          uint64_t v94 = v60[4];
          unint64_t v5 = v229;
          unint64_t v19 = v223;
          if ((v94 & 0x7FF0000000000000) == 0 && (v94 & 0xFFFFFFFFFFFFFLL) == 0)
          {
            if (v93 == 1) {
              goto LABEL_141;
            }
            uint64_t v151 = v60[5];
            if ((v151 & 0x7FF0000000000000) == 0 && (v151 & 0xFFFFFFFFFFFFFLL) == 0)
            {
              if (v93 != 2)
              {
                uint64_t v152 = 6;
                while (1)
                {
                  uint64_t v153 = v152 - 3;
                  if (__OFADD__(v152 - 4, 1)) {
                    break;
                  }
                  uint64_t v154 = v60[v152];
                  if ((v154 & 0x7FF0000000000000) != 0 || (v154 & 0xFFFFFFFFFFFFFLL) != 0) {
                    goto LABEL_96;
                  }
                  ++v152;
                  if (v153 == v93) {
                    goto LABEL_141;
                  }
                }
LABEL_249:
                __break(1u);
LABEL_250:
                uint64_t v238 = v19 & 0xFFFFFFFFFFFFFF8;
                uint64_t v156 = isUniquelyReferenced_nonNull_native;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v241 = sub_1A75738D0();
                uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
                goto LABEL_171;
              }
LABEL_141:
              swift_release();
LABEL_109:
              swift_release();
              uint64_t isUniquelyReferenced_nonNull_native = swift_release();
              double v55 = 0.0;
              goto LABEL_49;
            }
          }
LABEL_96:
          uint64_t isUniquelyReferenced_nonNull_native = swift_release();
          uint64_t v95 = *v237;
          if (*v237 < 0) {
            goto LABEL_245;
          }
          if (v95)
          {
            uint64_t v96 = v242 + 16;
            swift_beginAccess();
            swift_beginAccess();
            uint64_t v97 = *(void *)(v56 + 16);
            uint64_t v98 = *(void *)(v97 + 16);
            if (!v98) {
              goto LABEL_165;
            }
            uint64_t v99 = *(void *)v96;
            unint64_t v100 = *(void *)(*(void *)v96 + 16);
            if (!v100) {
              goto LABEL_166;
            }
            uint64_t v101 = v97 + 32;
            uint64_t v102 = v99 + 32;
            double v103 = *(double *)(v99 + 32);
            double v104 = *(double *)(v97 + 32);
            double v105 = v104 * v104;
            double v106 = v103 * v103;
            double v107 = v104 * v103 + 0.0;
            if (v95 != 1)
            {
              unint64_t v108 = v100 - 1;
              if (v100 - 1 >= v98 - 1) {
                unint64_t v108 = v98 - 1;
              }
              if (v108 >= v95 - 2) {
                unint64_t v108 = v95 - 2;
              }
              unint64_t v109 = v108 + 1;
              if (v109 > 4)
              {
                uint64_t v135 = v109 & 3;
                if ((v109 & 3) == 0) {
                  uint64_t v135 = 4;
                }
                unint64_t v136 = v109 - v135;
                unint64_t v110 = v136 + 1;
                id v137 = (float64x2_t *)(v97 + 56);
                id v138 = (float64x2_t *)(v99 + 56);
                do
                {
                  float64x2_t v139 = v137[-1];
                  float64x2_t v140 = v138[-1];
                  float64x2_t v141 = vmulq_f64(v139, v139);
                  float64x2_t v142 = vmulq_f64(*v137, *v137);
                  float64x2_t v143 = vmulq_f64(v140, v140);
                  float64x2_t v144 = vmulq_f64(*v138, *v138);
                  float64x2_t v145 = vmulq_f64(v139, v140);
                  float64x2_t v146 = vmulq_f64(*v137, *v138);
                  double v107 = v107 + v145.f64[0] + v145.f64[1] + v146.f64[0] + v146.f64[1];
                  double v105 = v105 + v141.f64[0] + v141.f64[1] + v142.f64[0] + v142.f64[1];
                  double v106 = v106 + v143.f64[0] + v143.f64[1] + v144.f64[0] + v144.f64[1];
                  v137 += 2;
                  v138 += 2;
                  v136 -= 4;
                }
                while (v136);
              }
              else
              {
                unint64_t v110 = 1;
              }
              while (v98 != v110)
              {
                if (v110 >= v100) {
                  goto LABEL_166;
                }
                double v147 = *(double *)(v101 + 8 * v110);
                double v148 = *(double *)(v102 + 8 * v110);
                double v105 = v105 + v147 * v147;
                double v106 = v106 + v148 * v148;
                double v107 = v107 + v147 * v148;
                if (v95 == ++v110) {
                  goto LABEL_137;
                }
              }
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              uint64_t isUniquelyReferenced_nonNull_native = v221;
              goto LABEL_168;
            }
          }
          else
          {
            double v107 = 0.0;
            double v105 = 0.0;
            double v106 = 0.0;
          }
LABEL_137:
          swift_release();
          uint64_t isUniquelyReferenced_nonNull_native = swift_release();
          double v149 = sqrt(v105) * sqrt(v106);
          double v150 = 1.0 - v107 / v149;
          if ((*(void *)&v149 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
            double v150 = 1.0;
          }
          double v55 = sqrt(fabs(v150));
        }
        else
        {
          uint64_t isUniquelyReferenced_nonNull_native = swift_beginAccess();
          uint64_t v77 = *(void *)(v56 + 24);
          if (v77 < 0) {
            goto LABEL_240;
          }
          if (v77)
          {
            uint64_t v78 = v242 + 16;
            swift_beginAccess();
            swift_beginAccess();
            uint64_t v79 = *(void *)(v56 + 16);
            uint64_t v80 = *(void *)(v79 + 16);
            if (!v80) {
              goto LABEL_161;
            }
            uint64_t v81 = *(void *)v78;
            unint64_t v82 = *(void *)(*(void *)v78 + 16);
            if (!v82) {
              goto LABEL_164;
            }
            uint64_t v83 = v79 + 32;
            uint64_t v84 = v81 + 32;
            double v85 = *(double *)(v81 + 32);
            double v86 = *(double *)(v79 + 32);
            double v87 = v86 * v86;
            double v88 = v85 * v85;
            double v89 = v86 * v85 + 0.0;
            if (v77 != 1)
            {
              unint64_t v90 = v82 - 1;
              if (v82 - 1 >= v80 - 1) {
                unint64_t v90 = v80 - 1;
              }
              if (v90 >= v77 - 2) {
                unint64_t v90 = v77 - 2;
              }
              unint64_t v91 = v90 + 1;
              if (v91 > 4)
              {
                uint64_t v119 = v91 & 3;
                if ((v91 & 3) == 0) {
                  uint64_t v119 = 4;
                }
                unint64_t v120 = v91 - v119;
                unint64_t v92 = v120 + 1;
                unint64_t v121 = (float64x2_t *)(v79 + 56);
                uint64_t v122 = (float64x2_t *)(v81 + 56);
                do
                {
                  float64x2_t v123 = v121[-1];
                  float64x2_t v124 = v122[-1];
                  float64x2_t v125 = vmulq_f64(v123, v123);
                  float64x2_t v126 = vmulq_f64(*v121, *v121);
                  float64x2_t v127 = vmulq_f64(v124, v124);
                  float64x2_t v128 = vmulq_f64(*v122, *v122);
                  float64x2_t v129 = vmulq_f64(v123, v124);
                  float64x2_t v130 = vmulq_f64(*v121, *v122);
                  double v89 = v89 + v129.f64[0] + v129.f64[1] + v130.f64[0] + v130.f64[1];
                  double v87 = v87 + v125.f64[0] + v125.f64[1] + v126.f64[0] + v126.f64[1];
                  double v88 = v88 + v127.f64[0] + v127.f64[1] + v128.f64[0] + v128.f64[1];
                  v121 += 2;
                  v122 += 2;
                  v120 -= 4;
                }
                while (v120);
              }
              else
              {
                unint64_t v92 = 1;
              }
              while (v80 != v92)
              {
                if (v92 >= v82) {
                  goto LABEL_164;
                }
                double v131 = *(double *)(v83 + 8 * v92);
                double v132 = *(double *)(v84 + 8 * v92);
                double v87 = v87 + v131 * v131;
                double v88 = v88 + v132 * v132;
                double v89 = v89 + v131 * v132;
                if (v77 == ++v92) {
                  goto LABEL_126;
                }
              }
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
              goto LABEL_165;
            }
          }
          else
          {
            double v89 = 0.0;
            double v87 = 0.0;
            double v88 = 0.0;
          }
LABEL_126:
          swift_release();
          swift_release();
          double v133 = sqrt(v87) * sqrt(v88);
          if ((*(void *)&v133 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
            double v134 = v89 / v133;
          }
          else {
            double v134 = 0.0;
          }
          double v55 = acos(v134) / 3.14159265;
        }
LABEL_49:
        unint64_t v52 = v231;
        uint64_t v29 = v232;
        ++v51;
        double v53 = v53 + v55;
        uint64_t v50 = v233;
        if (v51 == v233) {
          goto LABEL_152;
        }
      }
    }
    double v53 = 0.0;
LABEL_152:
    swift_bridgeObjectRelease();
    unint64_t v155 = *v29;
    LOBYTE(v244[0]) = v230;
    swift_bridgeObjectRetain();
    uint64_t v221 = sub_1A73AEAA8(v19, v155, (unsigned __int8 *)v244, 1);
    swift_bridgeObjectRelease();
    if (v53 <= a3) {
      goto LABEL_167;
    }
    uint64_t isUniquelyReferenced_nonNull_native = v221;
    uint64_t v26 = v220 + 1;
    unint64_t v231 = v19;
    uint64_t v27 = MEMORY[0x1E4FBC860];
  }
  while (v220 + 1 < a2);
LABEL_168:
  uint64_t v242 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
  if (v242)
  {
    if (v19 >> 62) {
      goto LABEL_250;
    }
    uint64_t v238 = v19 & 0xFFFFFFFFFFFFFF8;
    uint64_t v241 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v156 = isUniquelyReferenced_nonNull_native;
    uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain();
LABEL_171:
    unint64_t v157 = 0;
    unint64_t v240 = v19 & 0xC000000000000001;
    int64_t v158 = (uint64_t *)(v156 + 40);
    uint64_t v159 = MEMORY[0x1E4FBC860];
    while (2)
    {
      unint64_t v160 = v157 + 1;
      if (__OFADD__(v157, 1)) {
        goto LABEL_247;
      }
      if (v241 == v157) {
        goto LABEL_190;
      }
      uint64_t v161 = *(v158 - 1);
      uint64_t v162 = *v158;
      if (v240)
      {
        unint64_t v169 = v19;
        unint64_t v164 = v5;
        swift_bridgeObjectRetain();
        uint64_t v163 = MEMORY[0x1AD0CB800](v157, v169);
        swift_bridgeObjectRetain();
        if ((v161 & 0x8000000000000000) == 0 && (v161 & 0x4000000000000000) == 0) {
          goto LABEL_180;
        }
      }
      else
      {
        if (v157 >= *(void *)(v238 + 16)) {
          goto LABEL_248;
        }
        uint64_t v163 = *(void *)(v19 + 8 * v157 + 32);
        swift_bridgeObjectRetain_n();
        swift_retain();
        unint64_t v164 = v5;
        if ((v161 & 0x8000000000000000) == 0 && (v161 & 0x4000000000000000) == 0)
        {
LABEL_180:
          uint64_t v165 = *(void *)((v161 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_181;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v165 = sub_1A75738D0();
      swift_bridgeObjectRelease();
LABEL_181:
      swift_bridgeObjectRelease();
      if (v165)
      {
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v244[0] = v159;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t isUniquelyReferenced_nonNull_native = sub_1A72D2D60(0, *(void *)(v159 + 16) + 1, 1);
          uint64_t v159 = v244[0];
        }
        unint64_t v167 = *(void *)(v159 + 16);
        unint64_t v166 = *(void *)(v159 + 24);
        if (v167 >= v166 >> 1)
        {
          uint64_t isUniquelyReferenced_nonNull_native = sub_1A72D2D60(v166 > 1, v167 + 1, 1);
          uint64_t v159 = v244[0];
        }
        *(void *)(v159 + 16) = v167 + 1;
        uint64_t v168 = (void *)(v159 + 24 * v167);
        v168[4] = v161;
        v168[5] = v162;
        v168[6] = v163;
      }
      else
      {
        swift_release();
        uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
      }
      v158 += 2;
      ++v157;
      unint64_t v5 = v164;
      unint64_t v19 = v223;
      if (v160 == v242)
      {
LABEL_190:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_192;
      }
      continue;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v159 = MEMORY[0x1E4FBC860];
LABEL_192:
  v244[0] = v159;
  swift_retain();
  sub_1A73ACC40(v244, (uint64_t (*)(uint64_t))sub_1A74F9E18, sub_1A73B20E0);
  if (v5)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    uint64_t v170 = v244[0];
    unint64_t v171 = *(void *)(v244[0] + 16);
    unint64_t v172 = *(void *)(v221 + 16);
    if (v171 < v172)
    {
      if (qword_1E96F07D0 != -1) {
        swift_once();
      }
      uint64_t v173 = sub_1A7571E90();
      __swift_project_value_buffer(v173, (uint64_t)qword_1E96F2848);
      id v174 = sub_1A7571E80();
      os_log_type_t v175 = sub_1A7572FD0();
      if (os_log_type_enabled(v174, v175))
      {
        uint64_t v176 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v176 = 0;
        _os_log_impl(&dword_1A72A1000, v174, v175, "Empty cluster found for k-Mean", v176, 2u);
        MEMORY[0x1AD0CD330](v176, -1, -1);
      }
    }
    if (v171)
    {
      v244[0] = MEMORY[0x1E4FBC860];
      sub_1A72D2D40(0, v171, 0);
      uint64_t v177 = v244[0];
      v178 = (double *)(v170 + 48);
      do
      {
        unint64_t v179 = *((void *)v178 - 2);
        double v180 = *(v178 - 1);
        double v181 = *v178;
        swift_retain_n();
        swift_bridgeObjectRetain();
        if (v179 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v182 = sub_1A75738D0();
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v182 = *(void *)((v179 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_release();
        }
        swift_bridgeObjectRelease();
        v244[0] = v177;
        unint64_t v184 = *(void *)(v177 + 16);
        unint64_t v183 = *(void *)(v177 + 24);
        uint64_t v185 = v177;
        if (v184 >= v183 >> 1)
        {
          sub_1A72D2D40(v183 > 1, v184 + 1, 1);
          uint64_t v185 = v244[0];
        }
        *(void *)(v185 + 16) = v184 + 1;
        uint64_t v186 = v185 + 24 * v184;
        *(double *)(v186 + 32) = v181;
        *(double *)(v186 + 40) = v180 / (double)v182;
        *(void *)(v186 + 48) = v182;
        v178 += 3;
        --v171;
        uint64_t v177 = v185;
      }
      while (v171);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v177 = MEMORY[0x1E4FBC860];
    }
    uint64_t v187 = v219;
    int64_t v188 = *(void *)(v177 + 16);
    uint64_t v189 = MEMORY[0x1E4FBC860];
    uint64_t v243 = v177;
    if (v188)
    {
      uint64_t v190 = v177;
      v244[0] = MEMORY[0x1E4FBC860];
      sub_1A72D2D20(0, v188, 0);
      uint64_t v191 = v244[0];
      unint64_t v192 = *(void *)(v244[0] + 16);
      unint64_t v193 = (uint64_t *)(v190 + 40);
      int64_t v194 = v188;
      do
      {
        uint64_t v195 = *v193;
        v244[0] = v191;
        unint64_t v196 = *(void *)(v191 + 24);
        if (v192 >= v196 >> 1)
        {
          sub_1A72D2D20(v196 > 1, v192 + 1, 1);
          uint64_t v191 = v244[0];
        }
        *(void *)(v191 + 16) = v192 + 1;
        *(void *)(v191 + 8 * v192 + 32) = v195;
        v193 += 3;
        ++v192;
        --v194;
      }
      while (v194);
      v244[0] = v189;
      sub_1A72D2CD8(0, v188, 0);
      uint64_t v197 = v244[0];
      unint64_t v198 = *(void *)(v244[0] + 16);
      long long v199 = (uint64_t *)(v243 + 48);
      uint64_t v187 = v219;
      do
      {
        uint64_t v201 = *v199;
        v199 += 3;
        uint64_t v200 = v201;
        v244[0] = v197;
        unint64_t v202 = *(void *)(v197 + 24);
        if (v198 >= v202 >> 1)
        {
          sub_1A72D2CD8(v202 > 1, v198 + 1, 1);
          uint64_t v187 = v219;
          uint64_t v197 = v244[0];
        }
        *(void *)(v197 + 16) = v198 + 1;
        *(void *)(v197 + 8 * v198++ + 32) = v200;
        --v188;
      }
      while (v188);
      uint64_t v189 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v197 = MEMORY[0x1E4FBC860];
      uint64_t v191 = MEMORY[0x1E4FBC860];
    }
    if (v172)
    {
      v244[0] = v189;
      sub_1A72D2D20(0, v172, 0);
      uint64_t v203 = v221;
      uint64_t v187 = v219;
      uint64_t v204 = v244[0];
      unint64_t v205 = *(void *)(v244[0] + 16);
      uint64_t v206 = 40;
      do
      {
        uint64_t v207 = *(void *)(v203 + v206);
        v244[0] = v204;
        unint64_t v208 = *(void *)(v204 + 24);
        if (v205 >= v208 >> 1)
        {
          sub_1A72D2D20(v208 > 1, v205 + 1, 1);
          uint64_t v203 = v221;
          uint64_t v187 = v219;
          uint64_t v204 = v244[0];
        }
        *(void *)(v204 + 16) = v205 + 1;
        *(void *)(v204 + 8 * v205 + 32) = v207;
        v206 += 16;
        ++v205;
        --v172;
      }
      while (v172);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v204 = MEMORY[0x1E4FBC860];
    }
    uint64_t v209 = *(void *)(v204 + 16);
    if (v209)
    {
      if (v209 == 1)
      {
        uint64_t v210 = 0;
        double v211 = 0.0;
        goto LABEL_234;
      }
      uint64_t v210 = v209 & 0x7FFFFFFFFFFFFFFELL;
      unint64_t v212 = (double *)(v204 + 40);
      double v211 = 0.0;
      uint64_t v213 = v209 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        double v211 = v211 + *(v212 - 1) + *v212;
        v212 += 2;
        v213 -= 2;
      }
      while (v213);
      if (v209 != v210)
      {
LABEL_234:
        uint64_t v214 = v209 - v210;
        unint64_t v215 = (double *)(v204 + 8 * v210 + 32);
        do
        {
          double v216 = *v215++;
          double v211 = v211 + v216;
          --v214;
        }
        while (v214);
      }
    }
    else
    {
      double v211 = 0.0;
    }
    swift_bridgeObjectRelease();
    swift_beginAccess();
    double v217 = v211 / (double)*(uint64_t *)(v218 + 40);
    swift_beginAccess();
    *(void *)(v187 + 104) = v191;
    *(void *)(v187 + 112) = v197;
    *(double *)(v187 + 120) = v217;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v187 + 96) = v243;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A73AEAA8(unint64_t a1, unint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v8 = sub_1A7571E90();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  if (a4 > 99)
  {
    sub_1A73B4080();
    swift_allocError();
    *uint64_t v33 = a4;
    return swift_willThrow();
  }
  uint64_t v308 = v15;
  v289 = v14;
  v272 = v13;
  v273 = (char *)&v271 - v12;
  uint64_t v293 = v11;
  uint64_t v294 = a4;
  uint64_t v16 = *a3;
  if (qword_1E96F07D0 != -1) {
    goto LABEL_59;
  }
  while (1)
  {
    uint64_t v17 = __swift_project_value_buffer(v11, (uint64_t)qword_1E96F2848);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v295 = v17;
    uint64_t v18 = sub_1A7571E80();
    LODWORD(v19) = sub_1A7572FC0();
    BOOL v20 = os_log_type_enabled(v18, (os_log_type_t)v19);
    uint64_t v21 = a2 >> 62;
    unint64_t v22 = a1 >> 62;
    LODWORD(v307) = v16;
    *(void *)&long long v309 = a2;
    int64_t isa = a1;
    if (v20)
    {
      unint64_t v305 = (unint64_t)v18;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v302 = swift_slowAlloc();
      uint64_t v320 = v302;
      *(_DWORD *)uint64_t v16 = 134218754;
      if (v21) {
        goto LABEL_355;
      }
      uint64_t v23 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_6:
      swift_bridgeObjectRelease();
      unint64_t v318 = v23;
      sub_1A7573250();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2048;
      LODWORD(v303) = v19;
      if (v22)
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = sub_1A75738D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v24 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v25 = v294;
      swift_bridgeObjectRelease();
      unint64_t v318 = v24;
      sub_1A7573250();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 22) = 2048;
      unint64_t v318 = v25;
      v301 = &v319;
      sub_1A7573250();
      uint64_t v304 = v16;
      *(_WORD *)(v16 + 32) = 2080;
      unint64_t v19 = MEMORY[0x1E4FBC860];
      v306 = (unint64_t *)v22;
      if (v24)
      {
        unint64_t v318 = MEMORY[0x1E4FBC860];
        sub_1A72D2D00(0, v24 & ~(v24 >> 63), 0);
        if (v24 < 0) {
          goto LABEL_358;
        }
        uint64_t v300 = v21;
        unint64_t v19 = v318;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v26 = 0;
          do
          {
            MEMORY[0x1AD0CB800](v26, isa);
            uint64_t v27 = sub_1A74DA048();
            uint64_t v29 = v28;
            swift_unknownObjectRelease();
            unint64_t v318 = v19;
            unint64_t v31 = *(void *)(v19 + 16);
            unint64_t v30 = *(void *)(v19 + 24);
            if (v31 >= v30 >> 1)
            {
              sub_1A72D2D00(v30 > 1, v31 + 1, 1);
              unint64_t v19 = v318;
            }
            ++v26;
            *(void *)(v19 + 16) = v31 + 1;
            unint64_t v32 = v19 + 16 * v31;
            *(void *)(v32 + 32) = v27;
            *(void *)(v32 + 40) = v29;
          }
          while (v24 != v26);
        }
        else
        {
          unint64_t v35 = a1 + 32;
          do
          {
            swift_retain();
            uint64_t v36 = sub_1A74DA048();
            uint64_t v38 = v37;
            swift_release();
            unint64_t v318 = v19;
            unint64_t v40 = *(void *)(v19 + 16);
            unint64_t v39 = *(void *)(v19 + 24);
            if (v40 >= v39 >> 1)
            {
              sub_1A72D2D00(v39 > 1, v40 + 1, 1);
              unint64_t v19 = v318;
            }
            *(void *)(v19 + 16) = v40 + 1;
            unint64_t v41 = v19 + 16 * v40;
            *(void *)(v41 + 32) = v36;
            *(void *)(v41 + 40) = v38;
            v35 += 8;
            --v24;
          }
          while (v24);
        }
        a2 = v309;
        a1 = isa;
        uint64_t v21 = v300;
      }
      unint64_t v42 = (uint8_t *)v304;
      uint64_t v43 = MEMORY[0x1AD0CAC20](v19, MEMORY[0x1E4FBB1A0]);
      unint64_t v45 = v44;
      swift_bridgeObjectRelease();
      unint64_t v318 = sub_1A72D1730(v43, v45, &v320);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v46 = (os_log_t)v305;
      _os_log_impl(&dword_1A72A1000, (os_log_t)v305, (os_log_type_t)v303, "KMean: computeClusters() input has %ld points and %ld centers: {iteration: %ld, centers: %s}", v42, 0x2Au);
      uint64_t v16 = v302;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v16, -1, -1);
      MEMORY[0x1AD0CD330](v42, -1, -1);

      unint64_t v22 = (unint64_t)v306;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    if (v22)
    {
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1A75738D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v47 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    a1 = sub_1A732968C(MEMORY[0x1E4FBC860], v47, 0.0);
    v322 = a1;
    if (v21) {
      break;
    }
    uint64_t v21 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v21) {
      goto LABEL_62;
    }
LABEL_28:
    if (v21 < 1) {
      goto LABEL_354;
    }
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v48 = 0;
      while (1)
      {
        uint64_t v49 = MEMORY[0x1AD0CB800](v48, a2);
        LOBYTE(v320) = (_BYTE)v307;
        unint64_t v50 = sub_1A73B3490(v49, isa, (unsigned __int8 *)&v320);
        double v52 = v51;
        swift_unknownObjectRetain();
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          if ((v50 & 0x8000000000000000) != 0) {
            goto LABEL_53;
          }
        }
        else
        {
          a1 = (unint64_t)sub_1A74DAEE4((void *)a1);
          if ((v50 & 0x8000000000000000) != 0)
          {
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }
        }
        if (v50 >= *(void *)(a1 + 16)) {
          goto LABEL_54;
        }
        a2 = a1 + 32;
        uint64_t v47 = a1 + 32 + 16 * v50;
        MEMORY[0x1AD0CABF0]();
        uint64_t v16 = *(void *)((*(void *)v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if ((unint64_t)v16 >= *(void *)((*(void *)v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1A7572A60();
        }
        sub_1A7572AB0();
        sub_1A7572A30();
        if (v50 >= *(void *)(a1 + 16)) {
          goto LABEL_55;
        }
        ++v48;
        *(double *)(a2 + 16 * v50 + 8) = v52 + *(double *)(a2 + 16 * v50 + 8);
        swift_unknownObjectRelease();
        a2 = v309;
        if (v21 == v48) {
          goto LABEL_52;
        }
      }
    }
    uint64_t v53 = 0;
    while (1)
    {
      LOBYTE(v320) = (_BYTE)v307;
      uint64_t v54 = swift_retain();
      unint64_t v55 = sub_1A73B3490(v54, isa, (unsigned __int8 *)&v320);
      double v57 = v56;
      swift_retain();
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        if ((v55 & 0x8000000000000000) != 0) {
          goto LABEL_56;
        }
      }
      else
      {
        a1 = (unint64_t)sub_1A74DAEE4((void *)a1);
        if ((v55 & 0x8000000000000000) != 0) {
          goto LABEL_56;
        }
      }
      if (v55 >= *(void *)(a1 + 16)) {
        break;
      }
      a2 = a1 + 32;
      uint64_t v47 = a1 + 32 + 16 * v55;
      MEMORY[0x1AD0CABF0]();
      uint64_t v16 = *(void *)((*(void *)v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if ((unint64_t)v16 >= *(void *)((*(void *)v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1A7572A60();
      }
      sub_1A7572AB0();
      sub_1A7572A30();
      if (v55 >= *(void *)(a1 + 16)) {
        goto LABEL_58;
      }
      ++v53;
      *(double *)(a2 + 16 * v55 + 8) = v57 + *(double *)(a2 + 16 * v55 + 8);
      swift_release();
      a2 = v309;
      if (v21 == v53)
      {
LABEL_52:
        swift_bridgeObjectRelease();
        v322 = a1;
        goto LABEL_63;
      }
    }
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_once();
    uint64_t v11 = v293;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1A75738D0();
  if (v21) {
    goto LABEL_28;
  }
LABEL_62:
  swift_bridgeObjectRelease();
LABEL_63:
  unint64_t v22 = 0;
  unint64_t v58 = *(void *)(a1 + 16);
  uint64_t v59 = MEMORY[0x1E4FBC860];
LABEL_64:
  if (v22 <= v58) {
    unint64_t v19 = v58;
  }
  else {
    unint64_t v19 = v22;
  }
  BOOL v60 = (uint64_t *)(a1 + 32 + 16 * v22);
  uint64_t v296 = v59;
  while (v58 != v22)
  {
    if (v19 == v22) {
      goto LABEL_318;
    }
    if (v22 >= *(void *)(a1 + 16)) {
      goto LABEL_319;
    }
    uint64_t v47 = *v60;
    if ((unint64_t)*v60 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1A75738D0();
      swift_bridgeObjectRelease();
      uint64_t v59 = v296;
    }
    else
    {
      uint64_t v16 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    v60 += 2;
    ++v22;
    if (!v16)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v59 = v296;
      uint64_t v320 = v296;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v47 = (uint64_t)&v320;
        sub_1A72D2CD8(0, *(void *)(v296 + 16) + 1, 1);
        uint64_t v59 = v320;
      }
      unint64_t v63 = *(void *)(v59 + 16);
      unint64_t v62 = *(void *)(v59 + 24);
      uint64_t v16 = v63 + 1;
      if (v63 >= v62 >> 1)
      {
        uint64_t v47 = (uint64_t)&v320;
        sub_1A72D2CD8(v62 > 1, v63 + 1, 1);
        uint64_t v59 = v320;
      }
      *(void *)(v59 + 16) = v16;
      *(void *)(v59 + 8 * v63 + 32) = v22 - 1;
      goto LABEL_64;
    }
  }
  uint64_t v284 = *(void *)(v59 + 16);
  if (!v284) {
    goto LABEL_92;
  }
  a2 = v59;
  swift_bridgeObjectRetain_n();
  unint64_t v64 = sub_1A7571E80();
  int v65 = sub_1A7572FC0();
  unint64_t v22 = (unint64_t)&enum case for REMSuggestedAttributeOutput.flagged(_:);
  if (os_log_type_enabled(v64, (os_log_type_t)v65))
  {
    LODWORD(v305) = v65;
    unint64_t v19 = swift_slowAlloc();
    uint64_t v304 = swift_slowAlloc();
    unint64_t v318 = v304;
    *(_DWORD *)unint64_t v19 = 134218498;
    uint64_t v320 = v294;
    sub_1A7573250();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v66 = swift_bridgeObjectRetain();
    uint64_t v67 = MEMORY[0x1AD0CAC20](v66, MEMORY[0x1E4FBB550]);
    unint64_t v69 = v68;
    swift_release();
    uint64_t v320 = sub_1A72D1730(v67, v69, (uint64_t *)&v318);
    v303 = (unint64_t *)&v321;
    sub_1A7573250();
    swift_release_n();
    swift_bridgeObjectRelease();
    v306 = (unint64_t *)v19;
    *(_WORD *)(v19 + 22) = 2080;
    swift_beginAccess();
    unint64_t v70 = v322;
    uint64_t v317 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1A72D2D00(0, 0, 0);
    uint64_t v71 = v317;
    int64_t isa = (int64_t)v70[2].isa;
    if (isa)
    {
      uint64_t v302 = (uint64_t)v64;
      swift_bridgeObjectRetain();
      uint64_t v72 = 0;
      uint64_t v73 = 4;
      *(void *)&long long v309 = v70;
      do
      {
        Class v74 = v70[v73].isa;
        uint64_t v316 = v72;
        swift_bridgeObjectRetain();
        uint64_t v320 = sub_1A7573BC0();
        uint64_t v321 = v75;
        sub_1A7572740();
        if ((unint64_t)v74 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v76 = sub_1A75738D0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v76 = *(void *)(((unint64_t)v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v316 = v76;
        sub_1A7573BC0();
        sub_1A7572740();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v77 = v320;
        uint64_t v78 = v321;
        uint64_t v317 = v71;
        unint64_t v19 = *(void *)(v71 + 16);
        unint64_t v79 = *(void *)(v71 + 24);
        if (v19 >= v79 >> 1)
        {
          sub_1A72D2D00(v79 > 1, v19 + 1, 1);
          uint64_t v71 = v317;
        }
        ++v72;
        *(void *)(v71 + 16) = v19 + 1;
        uint64_t v80 = v71 + 16 * v19;
        *(void *)(v80 + 32) = v77;
        *(void *)(v80 + 40) = v78;
        v73 += 2;
        unint64_t v70 = v309;
        a2 = MEMORY[0x1E4FBB550];
        LODWORD(v19) = MEMORY[0x1E4FBB5B0];
      }
      while (isa != v72);
      swift_bridgeObjectRelease();
      unint64_t v64 = v302;
    }
    swift_bridgeObjectRelease();
    uint64_t v95 = (uint8_t *)v306;
    uint64_t v96 = MEMORY[0x1AD0CAC20](v71, MEMORY[0x1E4FBB1A0]);
    a1 = v97;
    swift_release();
    uint64_t v320 = sub_1A72D1730(v96, a1, (uint64_t *)&v318);
    sub_1A7573250();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v64, (os_log_type_t)v305, "KMean: computeClusters() got empty clusters: {iteration: %ld, emptyClusterIdx: %s, clusters[idx].count: %s}", v95, 0x20u);
    uint64_t v98 = v304;
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v98, -1, -1);
    MEMORY[0x1AD0CD330](v95, -1, -1);

    uint64_t v21 = v307;
    unint64_t v22 = (unint64_t)&enum case for REMSuggestedAttributeOutput.flagged(_:);
  }
  else
  {

    swift_release_n();
    uint64_t v21 = v307;
  }
  swift_beginAccess();
  uint64_t v99 = (uint64_t)v322;
  swift_bridgeObjectRetain_n();
  uint64_t v100 = sub_1A736BD0C(v99);
  swift_bridgeObjectRelease();
  unint64_t v318 = v100;
  uint64_t v101 = v299;
  sub_1A73ACC40((uint64_t *)&v318, (uint64_t (*)(uint64_t))sub_1A74F9E04, sub_1A73B19C4);
  uint64_t v299 = v101;
  if (v101) {
    goto LABEL_360;
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = 0;
  uint64_t v102 = v296;
  uint64_t v288 = v318;
  unint64_t v285 = v318 + 32;
  uint64_t v286 = v296 + 32;
  v282 = (void (**)(char *, uint64_t))(v308 + 8);
  v283 = (void (**)(char *, uint64_t, uint64_t))(v308 + 16);
  uint64_t v278 = v294 + 1;
  v279 = &v315;
  *((void *)&v103 + 1) = 5;
  long long v280 = xmmword_1A75805D0;
  *(void *)&long long v103 = 134218498;
  long long v275 = v103;
  uint64_t v274 = MEMORY[0x1E4FBC840] + 8;
  long long v309 = xmmword_1A75785A0;
  while (1)
  {
    if ((unint64_t)v16 >= *(void *)(v102 + 16)) {
      goto LABEL_342;
    }
    if ((unint64_t)v16 >= *(void *)(v288 + 16)) {
      goto LABEL_343;
    }
    unint64_t v292 = *(void *)(v286 + 8 * v16);
    unint64_t v22 = v285 + 24 * v16;
    unint64_t v19 = *(void *)(v22 + 8);
    uint64_t v104 = *(void *)(v22 + 16);
    uint64_t v302 = v19 >> 62;
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v105 = sub_1A75738D0();
      swift_bridgeObjectRelease();
      if (!v105)
      {
LABEL_295:
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRetain();
        uint64_t v47 = sub_1A7571E80();
        LOBYTE(v16) = sub_1A7572FB0();
        if (os_log_type_enabled((os_log_t)v47, (os_log_type_t)v16))
        {
          unint64_t v22 = swift_slowAlloc();
          *(_DWORD *)unint64_t v22 = 134217984;
          if (v302) {
            goto LABEL_320;
          }
          uint64_t v260 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_321;
        }

        swift_bridgeObjectRelease();
LABEL_322:
        if (v302)
        {
          swift_bridgeObjectRetain();
          uint64_t v267 = sub_1A75738D0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v267 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        sub_1A73B40D4();
        swift_allocError();
        uint64_t *v268 = v267;
        swift_willThrow();
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v105 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v105) {
        goto LABEL_295;
      }
    }
    v291 = (unint64_t *)v22;
    a2 = v19 & 0xC000000000000001;
    if ((v19 & 0xC000000000000001) != 0)
    {
      uint64_t v298 = MEMORY[0x1AD0CB800](0, v19);
    }
    else
    {
      if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_344;
      }
      uint64_t v298 = *(void *)(v19 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    if (v105 < 0) {
      goto LABEL_359;
    }
    uint64_t v290 = v16;
    if (v302)
    {
      if ((v19 & 0x8000000000000000) != 0) {
        uint64_t v16 = v19;
      }
      else {
        uint64_t v16 = v19 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain_n();
      unint64_t v22 = sub_1A75738D0();
      swift_bridgeObjectRelease();
      if ((uint64_t)v22 < 1) {
        goto LABEL_345;
      }
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1A75738D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v16) {
        goto LABEL_345;
      }
    }
    if (v16 < v105) {
      goto LABEL_346;
    }
    if (a2 && v105 != 1)
    {
      type metadata accessor for RDVector();
      uint64_t v106 = 1;
      do
      {
        unint64_t v22 = v106 + 1;
        sub_1A75735E0();
        uint64_t v106 = v22;
      }
      while (v105 != v22);
    }
    if (v302)
    {
      swift_bridgeObjectRetain();
      uint64_t v300 = sub_1A75738E0();
      a1 = v108;
      uint64_t v16 = v109;
      unint64_t v107 = v110;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v300 = v19 & 0xFFFFFFFFFFFFFF8;
      a1 = (v19 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v107 = (2 * v105) | 1;
      uint64_t v16 = 1;
    }
    uint64_t v111 = (unint64_t *)(v107 >> 1);
    int64_t v112 = (v107 >> 1) - v16;
    if (__OFSUB__(v107 >> 1, v16)) {
      goto LABEL_347;
    }
    v301 = (uint64_t *)v19;
    if (v112) {
      break;
    }
    swift_unknownObjectRelease();
    unint64_t v113 = (uint64_t *)MEMORY[0x1E4FBC860];
    uint64_t v212 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v212) {
      goto LABEL_298;
    }
LABEL_237:
    uint64_t v213 = v113[4];
    double v214 = *((double *)v113 + 5);
    uint64_t v215 = v212 - 1;
    if (v212 == 1)
    {
      swift_retain();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_retain();
      a2 = (unint64_t)(v113 + 7);
      uint64_t v216 = v213;
      do
      {
        double v217 = *(double *)a2;
        if (v214 < *(double *)a2)
        {
          uint64_t v216 = *(void *)(a2 - 8);
          swift_retain();
          swift_release();
          double v214 = v217;
        }
        a2 += 16;
        --v215;
      }
      while (v215);
      swift_bridgeObjectRelease();
      uint64_t v213 = v216;
    }
    swift_bridgeObjectRelease();
    swift_retain();
    if (v214 == 0.0)
    {
      swift_release();
      swift_release();
      (*v283)(v272, v295, v293);
      swift_bridgeObjectRetain();
      objc_super v262 = sub_1A7571E80();
      os_log_type_t v263 = sub_1A7572FB0();
      if (os_log_type_enabled(v262, v263))
      {
        v264 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v264 = 134217984;
        uint64_t v314 = v104;
        sub_1A7573250();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A72A1000, v262, v263, "KMean: Farthest point has distance 0. Cluster sse is %f", v264, 0xCu);
        MEMORY[0x1AD0CD330](v264, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*v282)(v272, v293);
      if (v302)
      {
        swift_bridgeObjectRetain();
        uint64_t v265 = sub_1A75738D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v265 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      sub_1A73B40D4();
      swift_allocError();
      uint64_t *v266 = v265;
      swift_willThrow();
      swift_release();
      swift_release_n();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C80);
    uint64_t v218 = swift_allocObject();
    *(_OWORD *)(v218 + 16) = v280;
    unint64_t v22 = v298;
    *(void *)(v218 + 32) = v298;
    *(void *)(v218 + 40) = v213;
    uint64_t v314 = v218;
    sub_1A7572A30();
    unint64_t v219 = v314;
    uint64_t v220 = v289;
    uint64_t v16 = v293;
    (*v283)(v289, v295, v293);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v287 = v213;
    swift_retain();
    swift_retain();
    a1 = sub_1A7571E80();
    int v281 = sub_1A7572FC0();
    if (os_log_type_enabled((os_log_t)a1, (os_log_type_t)v281))
    {
      uint64_t v221 = swift_slowAlloc();
      uint64_t v276 = swift_slowAlloc();
      v312[0] = v276;
      *(_DWORD *)uint64_t v221 = v275;
      uint64_t v314 = v294;
      sub_1A7573250();
      uint64_t v277 = v221;
      *(_WORD *)(v221 + 12) = 2080;
      if (v219 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_1A75738D0();
        swift_bridgeObjectRelease();
        if (v16)
        {
LABEL_248:
          uint64_t v313 = MEMORY[0x1E4FBC860];
          sub_1A72D2D00(0, v16 & ~(v16 >> 63), 0);
          if ((v16 & 0x8000000000000000) == 0)
          {
            unint64_t v222 = 0;
            uint64_t v223 = v313;
            uint64_t v302 = v219 & 0xC000000000000001;
            v303 = (unint64_t *)v16;
            unint64_t v297 = v219 + 32;
            uint64_t v300 = v219;
            uint64_t v304 = a1;
            while (v222 != (unint64_t *)v16)
            {
              uint64_t v308 = v223;
              v306 = v222;
              if (v302)
              {
                uint64_t v224 = MEMORY[0x1AD0CB800]();
              }
              else
              {
                uint64_t v224 = *(NSObject **)(v297 + 8 * (void)v222);
                swift_retain();
              }
              uint64_t v314 = 2636374;
              unint64_t v315 = 0xE300000000000000;
              swift_beginAccess();
              unint64_t v305 = (unint64_t)v224;
              Class v225 = v224[2].isa;
              if (*((void *)v225 + 2) >= 5uLL) {
                int64_t v226 = 5;
              }
              else {
                int64_t v226 = *((void *)v225 + 2);
              }
              if (v226)
              {
                uint64_t v311 = MEMORY[0x1E4FBC860];
                swift_bridgeObjectRetain();
                sub_1A72D2D00(0, v226, 0);
                uint64_t v21 = 0;
                uint64_t v227 = v311;
                int64_t isa = 8 * v226;
                uint64_t v228 = MEMORY[0x1E4FBB3D0];
                do
                {
                  unint64_t v229 = v225;
                  uint64_t v230 = *(void *)((char *)v225 + v21 + 32);
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7054F0);
                  uint64_t v231 = swift_allocObject();
                  *(_OWORD *)(v231 + 16) = v309;
                  *(void *)(v231 + 56) = v228;
                  *(void *)(v231 + 64) = MEMORY[0x1E4FBB460];
                  *(void *)(v231 + 32) = v230;
                  uint64_t v232 = sub_1A7572640();
                  uint64_t v234 = v233;
                  uint64_t v311 = v227;
                  unint64_t v236 = *(void *)(v227 + 16);
                  unint64_t v235 = *(void *)(v227 + 24);
                  if (v236 >= v235 >> 1)
                  {
                    sub_1A72D2D00(v235 > 1, v236 + 1, 1);
                    uint64_t v228 = MEMORY[0x1E4FBB3D0];
                    uint64_t v227 = v311;
                  }
                  *(void *)(v227 + 16) = v236 + 1;
                  unint64_t v237 = v227 + 16 * v236;
                  *(void *)(v237 + 32) = v232;
                  *(void *)(v237 + 40) = v234;
                  v21 += 8;
                  Class v225 = v229;
                }
                while (isa != v21);
                swift_bridgeObjectRelease();
                unint64_t v219 = v300;
                unint64_t v19 = (unint64_t)v301;
              }
              else
              {
                uint64_t v227 = MEMORY[0x1E4FBC860];
              }
              uint64_t v311 = v227;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
              sub_1A72E3500();
              sub_1A7572570();
              swift_bridgeObjectRelease();
              sub_1A7572740();
              swift_bridgeObjectRelease();
              sub_1A7572740();
              swift_release();
              unint64_t v22 = v314;
              a2 = v315;
              uint64_t v223 = v308;
              uint64_t v313 = v308;
              unint64_t v239 = *(void *)(v308 + 16);
              unint64_t v238 = *(void *)(v308 + 24);
              if (v239 >= v238 >> 1)
              {
                sub_1A72D2D00(v238 > 1, v239 + 1, 1);
                uint64_t v223 = v313;
              }
              unint64_t v222 = (unint64_t *)((char *)v306 + 1);
              *(void *)(v223 + 16) = v239 + 1;
              uint64_t v240 = v223 + 16 * v239;
              *(void *)(v240 + 32) = v22;
              *(void *)(v240 + 40) = a2;
              uint64_t v16 = (uint64_t)v303;
              a1 = v304;
              if (v222 == v303) {
                goto LABEL_274;
              }
            }
            __break(1u);
LABEL_337:
            __break(1u);
LABEL_338:
            __break(1u);
LABEL_339:
            __break(1u);
LABEL_340:
            __break(1u);
LABEL_341:
            __break(1u);
LABEL_342:
            __break(1u);
LABEL_343:
            __break(1u);
LABEL_344:
            __break(1u);
LABEL_345:
            __break(1u);
LABEL_346:
            __break(1u);
LABEL_347:
            __break(1u);
LABEL_348:
            __break(1u);
LABEL_349:
            __break(1u);
LABEL_350:
            __break(1u);
LABEL_351:
            __break(1u);
LABEL_352:
            __break(1u);
LABEL_353:
            __break(1u);
LABEL_354:
            __break(1u);
LABEL_355:
            swift_bridgeObjectRetain();
            uint64_t v23 = sub_1A75738D0();
            swift_bridgeObjectRelease();
            goto LABEL_6;
          }
          __break(1u);
LABEL_358:
          __break(1u);
LABEL_359:
          __break(1u);
LABEL_360:
          uint64_t result = swift_release();
          __break(1u);
          return result;
        }
      }
      else
      {
        uint64_t v16 = *(void *)((v219 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v16) {
          goto LABEL_248;
        }
      }
      uint64_t v223 = MEMORY[0x1E4FBC860];
LABEL_274:
      uint64_t v241 = v277;
      uint64_t v242 = MEMORY[0x1AD0CAC20](v223, MEMORY[0x1E4FBB1A0]);
      unint64_t v22 = v243;
      swift_bridgeObjectRelease();
      uint64_t v314 = sub_1A72D1730(v242, v22, v312);
      a2 = (unint64_t)v279;
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v241 + 22) = 2080;
      uint64_t v244 = Array<A>.truncatedLoggingDescription()(v19);
      uint64_t v16 = v245;
      uint64_t v314 = sub_1A72D1730(v244, v245, v312);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, (os_log_t)a1, (os_log_type_t)v281, "KMean: computerClusters() will call itself recursively {curr.iteration: %ld, nextCenters: %s, pointsToSplit: %s}", (uint8_t *)v241, 0x20u);
      uint64_t v246 = v276;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v246, -1, -1);
      MEMORY[0x1AD0CD330](v241, -1, -1);

      (*v282)(v289, v293);
      uint64_t v21 = v307;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*v282)(v220, v16);
    }
    LOBYTE(v314) = v21;
    uint64_t v247 = v299;
    uint64_t v248 = sub_1A73AEAA8(v219, v19, &v314, v278);
    uint64_t v299 = v247;
    if (v247)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release_n();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t v249 = (void *)v248;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v249[2] < 2uLL) {
      goto LABEL_348;
    }
    uint64_t v16 = v249[6];
    uint64_t v250 = v249[7];
    swift_beginAccess();
    a2 = (unint64_t)v322;
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      unint64_t v251 = v292;
      if ((v292 & 0x8000000000000000) != 0) {
        goto LABEL_349;
      }
    }
    else
    {
      a2 = (unint64_t)sub_1A74DAEE4((void *)a2);
      unint64_t v251 = v292;
      if ((v292 & 0x8000000000000000) != 0) {
        goto LABEL_349;
      }
    }
    if (v251 >= *(void *)(a2 + 16)) {
      goto LABEL_350;
    }
    unint64_t v252 = a2 + 16 * v251;
    *(void *)(v252 + 32) = v16;
    *(void *)(v252 + 40) = v250;
    swift_bridgeObjectRelease();
    v322 = a2;
    if (!v249[2]) {
      goto LABEL_351;
    }
    unint64_t v22 = *v291;
    uint64_t v16 = v249[4];
    v253 = (objc_class *)v249[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v254 = v322;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v22 & 0x8000000000000000) != 0) {
        goto LABEL_289;
      }
    }
    else
    {
      uint64_t v254 = sub_1A74DAEE4(v254);
      if ((v22 & 0x8000000000000000) != 0)
      {
LABEL_289:
        __break(1u);
        goto LABEL_290;
      }
    }
    if ((Class)v22 >= v254[2].isa) {
      goto LABEL_352;
    }
    uint64_t v255 = &v254[2 * v22];
    unint64_t v22 = (unint64_t)v255[4].isa;
    v255[4].int64_t isa = (Class)v16;
    uint64_t v16 = v290 + 1;
    v255[5].int64_t isa = v253;
    v322 = v254;
    swift_endAccess();
    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v102 = v296;
    if (v16 == v284)
    {
LABEL_308:
      swift_release();
LABEL_92:
      swift_release();
      uint64_t v81 = sub_1A7571E80();
      int v82 = sub_1A7572FC0();
      if (os_log_type_enabled(v81, (os_log_type_t)v82))
      {
        LODWORD(v309) = v82;
        uint64_t v83 = swift_slowAlloc();
        uint64_t v308 = swift_slowAlloc();
        uint64_t v313 = v308;
        *(_DWORD *)uint64_t v83 = 134218498;
        uint64_t v314 = v294;
        sub_1A7573250();
        *(_WORD *)(v83 + 12) = 2048;
        swift_beginAccess();
        uint64_t v84 = v322;
        uint64_t v314 = (uint64_t)v322[2].isa;
        sub_1A7573250();
        *(_WORD *)(v83 + 22) = 2080;
        int64_t v85 = (int64_t)v84[2].isa;
        uint64_t v21 = MEMORY[0x1E4FBC860];
        if (v85)
        {
          v306 = (unint64_t *)v83;
          v307 = v81;
          uint64_t v311 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_1A72D2D00(0, v85, 0);
          uint64_t v21 = v311;
          unint64_t v305 = (unint64_t)v84;
          double v86 = v84 + 5;
          int64_t isa = 0x80000001A75A1460;
          do
          {
            unint64_t v87 = (unint64_t)v86[-1].isa;
            uint64_t v314 = 0;
            unint64_t v315 = 0xE000000000000000;
            sub_1A7573560();
            sub_1A7572740();
            sub_1A7572C30();
            sub_1A7572740();
            uint64_t v88 = v314;
            unint64_t v89 = v315;
            uint64_t v314 = 0;
            unint64_t v315 = 0xE000000000000000;
            sub_1A7573560();
            swift_bridgeObjectRelease();
            uint64_t v314 = 0x5B203A737470090ALL;
            unint64_t v315 = 0xEB0000000009090ALL;
            Array<A>.truncatedLoggingDescription()(v87);
            sub_1A7572740();
            swift_bridgeObjectRelease();
            sub_1A7572740();
            uint64_t v314 = v88;
            unint64_t v315 = v89;
            swift_bridgeObjectRetain();
            sub_1A7572740();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v91 = v314;
            unint64_t v90 = v315;
            uint64_t v311 = v21;
            unint64_t v93 = *(void *)(v21 + 16);
            unint64_t v92 = *(void *)(v21 + 24);
            if (v93 >= v92 >> 1)
            {
              sub_1A72D2D00(v92 > 1, v93 + 1, 1);
              uint64_t v21 = v311;
            }
            *(void *)(v21 + 16) = v93 + 1;
            uint64_t v94 = v21 + 16 * v93;
            *(void *)(v94 + 32) = v91;
            *(void *)(v94 + 40) = v90;
            v86 += 2;
            --v85;
          }
          while (v85);
LABEL_290:
          swift_bridgeObjectRelease();
          uint64_t v83 = (uint64_t)v306;
          uint64_t v81 = v307;
        }
        uint64_t v314 = v21;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
        sub_1A72E3500();
        uint64_t v256 = sub_1A7572570();
        unint64_t v258 = v257;
        swift_bridgeObjectRelease();
        uint64_t v314 = sub_1A72D1730(v256, v258, &v313);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v81, (os_log_type_t)v309, "KMean: computeClusters() result: {iteration: %ld, clusters.count: %ld, clusters: \n%s}", (uint8_t *)v83, 0x20u);
        uint64_t v259 = v308;
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v259, -1, -1);
        MEMORY[0x1AD0CD330](v83, -1, -1);
      }

      swift_beginAccess();
      return (uint64_t)v322;
    }
  }
  uint64_t v314 = MEMORY[0x1E4FBC860];
  unint64_t v113 = &v314;
  unint64_t v305 = v112;
  sub_1A72D2CB8(0, v112 & ~(v112 >> 63), 0);
  if ((v305 & 0x8000000000000000) != 0) {
    goto LABEL_353;
  }
  unint64_t v19 = v298 + 16;
  v306 = (unint64_t *)(v298 + 24);
  swift_beginAccess();
  os_log_t v114 = (os_log_t)v305;
  uint64_t v115 = 0;
  v303 = v111;
  uint64_t v304 = a1;
  while (2)
  {
    if (__OFADD__(v115, 1))
    {
      __break(1u);
LABEL_327:
      __break(1u);
LABEL_328:
      __break(1u);
      goto LABEL_329;
    }
    if (v16 >= (uint64_t)v111 || v115 >= (uint64_t)v114) {
      goto LABEL_327;
    }
    a2 = *(void *)(a1 + 8 * v16);
    int64_t isa = a2;
    uint64_t v308 = v115 + 1;
    if (!v21)
    {
      unint64_t v22 = *v306;
      if ((*v306 & 0x8000000000000000) != 0) {
        goto LABEL_339;
      }
      if (v22)
      {
        unint64_t v124 = a2 + 16;
        swift_beginAccess();
        swift_beginAccess();
        uint64_t v125 = *(void *)v19;
        uint64_t v126 = *(void *)(*(void *)v19 + 16);
        if (!v126) {
          goto LABEL_305;
        }
        uint64_t v127 = *(void *)v124;
        unint64_t v128 = *(void *)(*(void *)v124 + 16);
        if (!v128) {
          goto LABEL_306;
        }
        uint64_t v129 = v125 + 32;
        uint64_t v130 = v127 + 32;
        double v131 = (*(double *)(v125 + 32) - *(double *)(v127 + 32)) * (*(double *)(v125 + 32) - *(double *)(v127 + 32));
        if (v22 != 1)
        {
          unint64_t v132 = v128 - 1;
          if (v128 - 1 >= v126 - 1) {
            unint64_t v132 = v126 - 1;
          }
          if (v132 >= v22 - 2) {
            unint64_t v132 = v22 - 2;
          }
          unint64_t v133 = v132 + 1;
          if (v133 > 4)
          {
            uint64_t v167 = v133 & 3;
            if ((v133 & 3) == 0) {
              uint64_t v167 = 4;
            }
            unint64_t v168 = v133 - v167;
            unint64_t v134 = v168 + 1;
            unint64_t v169 = (float64x2_t *)(v125 + 56);
            uint64_t v170 = (float64x2_t *)(v127 + 56);
            do
            {
              float64x2_t v171 = vsubq_f64(v169[-1], v170[-1]);
              float64x2_t v172 = vsubq_f64(*v169, *v170);
              float64x2_t v173 = vmulq_f64(v171, v171);
              float64x2_t v174 = vmulq_f64(v172, v172);
              double v131 = v131 + v173.f64[0] + v173.f64[1] + v174.f64[0] + v174.f64[1];
              v169 += 2;
              v170 += 2;
              v168 -= 4;
            }
            while (v168);
          }
          else
          {
            unint64_t v134 = 1;
          }
          while (v126 != v134)
          {
            if (v134 >= v128) {
              goto LABEL_306;
            }
            double v131 = v131
                 + (*(double *)(v129 + 8 * v134) - *(double *)(v130 + 8 * v134))
                 * (*(double *)(v129 + 8 * v134) - *(double *)(v130 + 8 * v134));
            if (v22 == ++v134) {
              goto LABEL_198;
            }
          }
          goto LABEL_305;
        }
      }
      else
      {
        double v131 = 0.0;
      }
LABEL_198:
      double v166 = sqrt(v131);
      goto LABEL_209;
    }
    if (v21 != 1)
    {
      unint64_t v22 = *v306;
      if ((*v306 & 0x8000000000000000) != 0) {
        goto LABEL_337;
      }
      if (v22)
      {
        unint64_t v135 = a2 + 16;
        swift_beginAccess();
        swift_beginAccess();
        uint64_t v136 = *(void *)v19;
        uint64_t v137 = *(void *)(*(void *)v19 + 16);
        if (!v137) {
          goto LABEL_304;
        }
        uint64_t v138 = *(void *)v135;
        unint64_t v139 = *(void *)(*(void *)v135 + 16);
        if (!v139) {
          goto LABEL_307;
        }
        uint64_t v140 = v136 + 32;
        uint64_t v141 = v138 + 32;
        double v142 = *(double *)(v138 + 32);
        double v143 = *(double *)(v136 + 32);
        double v144 = v143 * v143;
        double v145 = v142 * v142;
        double v146 = v143 * v142 + 0.0;
        if (v22 != 1)
        {
          unint64_t v147 = v139 - 1;
          if (v139 - 1 >= v137 - 1) {
            unint64_t v147 = v137 - 1;
          }
          if (v147 >= v22 - 2) {
            unint64_t v147 = v22 - 2;
          }
          unint64_t v148 = v147 + 1;
          if (v148 > 4)
          {
            uint64_t v175 = v148 & 3;
            if ((v148 & 3) == 0) {
              uint64_t v175 = 4;
            }
            unint64_t v176 = v148 - v175;
            unint64_t v149 = v176 + 1;
            uint64_t v177 = (float64x2_t *)(v136 + 56);
            v178 = (float64x2_t *)(v138 + 56);
            do
            {
              float64x2_t v179 = v177[-1];
              float64x2_t v180 = v178[-1];
              float64x2_t v181 = vmulq_f64(v179, v179);
              float64x2_t v182 = vmulq_f64(*v177, *v177);
              float64x2_t v183 = vmulq_f64(v180, v180);
              float64x2_t v184 = vmulq_f64(*v178, *v178);
              float64x2_t v185 = vmulq_f64(v179, v180);
              float64x2_t v186 = vmulq_f64(*v177, *v178);
              double v146 = v146 + v185.f64[0] + v185.f64[1] + v186.f64[0] + v186.f64[1];
              double v144 = v144 + v181.f64[0] + v181.f64[1] + v182.f64[0] + v182.f64[1];
              double v145 = v145 + v183.f64[0] + v183.f64[1] + v184.f64[0] + v184.f64[1];
              v177 += 2;
              v178 += 2;
              v176 -= 4;
            }
            while (v176);
          }
          else
          {
            unint64_t v149 = 1;
          }
          while (v137 != v149)
          {
            if (v149 >= v139) {
              goto LABEL_307;
            }
            double v187 = *(double *)(v140 + 8 * v149);
            double v188 = *(double *)(v141 + 8 * v149);
            double v144 = v144 + v187 * v187;
            double v145 = v145 + v188 * v188;
            double v146 = v146 + v187 * v188;
            if (v22 == ++v149) {
              goto LABEL_206;
            }
          }
LABEL_304:
          __break(1u);
LABEL_305:
          __break(1u);
LABEL_306:
          __break(1u);
LABEL_307:
          __break(1u);
          goto LABEL_308;
        }
      }
      else
      {
        double v146 = 0.0;
        double v144 = 0.0;
        double v145 = 0.0;
      }
LABEL_206:
      double v189 = sqrt(v144) * sqrt(v145);
      double v190 = v146 / v189;
      if ((*(void *)&v189 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
        double v190 = 0.0;
      }
      double v166 = acos(v190) / 3.14159265;
LABEL_209:
      swift_retain();
      goto LABEL_210;
    }
    unint64_t v116 = *v306;
    if ((*v306 & 0x8000000000000000) != 0) {
      goto LABEL_338;
    }
    if (v116)
    {
      unint64_t v117 = a2 + 16;
      swift_retain_n();
      swift_beginAccess();
      swift_beginAccess();
      unint64_t v118 = 0;
      uint64_t v119 = (void *)MEMORY[0x1E4FBC860];
      while (v118 < *(void *)(*(void *)v19 + 16))
      {
        if (v118 >= *(void *)(*(void *)v117 + 16)) {
          goto LABEL_294;
        }
        double v120 = *(double *)(*(void *)v19 + 8 * v118 + 32);
        double v121 = *(double *)(*(void *)v117 + 8 * v118 + 32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v119 = sub_1A72AC59C(0, v119[2] + 1, 1, v119);
        }
        unint64_t v123 = v119[2];
        unint64_t v122 = v119[3];
        unint64_t v22 = v123 + 1;
        if (v123 >= v122 >> 1) {
          uint64_t v119 = sub_1A72AC59C((void *)(v122 > 1), v123 + 1, 1, v119);
        }
        ++v118;
        v119[2] = v22;
        *(double *)&v119[v123 + 4] = v120 - v121;
        if (v116 == v118) {
          goto LABEL_170;
        }
      }
      __break(1u);
LABEL_294:
      __break(1u);
      goto LABEL_295;
    }
    swift_retain_n();
    uint64_t v119 = (void *)MEMORY[0x1E4FBC860];
LABEL_170:
    type metadata accessor for RDVector();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v119;
    uint64_t v151 = v119[2];
    *(void *)(inited + 24) = v151;
    if (!v151)
    {
      swift_release();
      uint64_t v21 = v307;
      uint64_t v111 = v303;
      a1 = v304;
      goto LABEL_189;
    }
    uint64_t v111 = v303;
    a1 = v304;
    if ((v119[4] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    {
      uint64_t v21 = v307;
      a2 = isa;
      goto LABEL_173;
    }
    uint64_t v21 = v307;
    a2 = isa;
    if (v151 == 1)
    {
LABEL_188:
      swift_release();
LABEL_189:
      swift_release();
      double v166 = 0.0;
    }
    else
    {
      if ((v119[5] & 0x7FFFFFFFFFFFFFFFLL) == 0)
      {
        if (v151 != 2)
        {
          uint64_t v194 = 6;
          while (1)
          {
            uint64_t v195 = v194 - 3;
            if (__OFADD__(v194 - 4, 1)) {
              goto LABEL_341;
            }
            if ((v119[v194] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
              goto LABEL_173;
            }
            ++v194;
            if (v195 == v151) {
              goto LABEL_188;
            }
          }
        }
        goto LABEL_188;
      }
LABEL_173:
      swift_bridgeObjectRelease();
      unint64_t v22 = *v306;
      if ((*v306 & 0x8000000000000000) != 0) {
        goto LABEL_340;
      }
      if (v22)
      {
        uint64_t v47 = a2 + 16;
        swift_beginAccess();
        swift_beginAccess();
        uint64_t v152 = *(void *)v19;
        uint64_t v153 = *(void *)(*(void *)v19 + 16);
        if (!v153) {
          goto LABEL_316;
        }
        v154.int64_t isa = *(Class *)v47;
        unint64_t v155 = *(void *)(*(void *)v47 + 16);
        if (!v155) {
          goto LABEL_317;
        }
        uint64_t v156 = v152 + 32;
        unint64_t v157 = (char *)v154.isa + 32;
        double v158 = *((double *)v154.isa + 4);
        double v159 = *(double *)(v152 + 32);
        double v160 = v159 * v159;
        double v161 = v158 * v158;
        double v162 = v159 * v158 + 0.0;
        if (v22 != 1)
        {
          unint64_t v163 = v155 - 1;
          if (v155 - 1 >= v153 - 1) {
            unint64_t v163 = v153 - 1;
          }
          if (v163 >= v22 - 2) {
            unint64_t v163 = v22 - 2;
          }
          unint64_t v164 = v163 + 1;
          if (v164 > 4)
          {
            uint64_t v196 = v164 & 3;
            if ((v164 & 3) == 0) {
              uint64_t v196 = 4;
            }
            unint64_t v197 = v164 - v196;
            unint64_t v165 = v197 + 1;
            unint64_t v198 = (float64x2_t *)(v152 + 56);
            long long v199 = (float64x2_t *)((char *)v154.isa + 56);
            do
            {
              float64x2_t v200 = v198[-1];
              float64x2_t v201 = v199[-1];
              float64x2_t v202 = vmulq_f64(v200, v200);
              float64x2_t v203 = vmulq_f64(*v198, *v198);
              float64x2_t v204 = vmulq_f64(v201, v201);
              float64x2_t v205 = vmulq_f64(*v199, *v199);
              float64x2_t v206 = vmulq_f64(v200, v201);
              float64x2_t v207 = vmulq_f64(*v198, *v199);
              double v162 = v162 + v206.f64[0] + v206.f64[1] + v207.f64[0] + v207.f64[1];
              double v160 = v160 + v202.f64[0] + v202.f64[1] + v203.f64[0] + v203.f64[1];
              double v161 = v161 + v204.f64[0] + v204.f64[1] + v205.f64[0] + v205.f64[1];
              v198 += 2;
              v199 += 2;
              v197 -= 4;
            }
            while (v197);
          }
          else
          {
            unint64_t v165 = 1;
          }
          while (v153 != v165)
          {
            if (v165 >= v155) {
              goto LABEL_317;
            }
            double v208 = *(double *)(v156 + 8 * v165);
            double v209 = *(double *)&v157[8 * v165];
            double v160 = v160 + v208 * v208;
            double v161 = v161 + v209 * v209;
            double v162 = v162 + v208 * v209;
            if (v22 == ++v165) {
              goto LABEL_231;
            }
          }
LABEL_316:
          __break(1u);
LABEL_317:
          __break(1u);
LABEL_318:
          __break(1u);
LABEL_319:
          __break(1u);
LABEL_320:
          swift_bridgeObjectRetain();
          uint64_t v260 = sub_1A75738D0();
          swift_bridgeObjectRelease();
LABEL_321:
          uint64_t v314 = v260;
          sub_1A7573250();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A72A1000, (os_log_t)v47, (os_log_type_t)v16, "KMean: No point found. Cluster has %ld points", (uint8_t *)v22, 0xCu);
          MEMORY[0x1AD0CD330](v22, -1, -1);

          goto LABEL_322;
        }
      }
      else
      {
        double v162 = 0.0;
        double v160 = 0.0;
        double v161 = 0.0;
      }
LABEL_231:
      swift_release();
      double v210 = sqrt(v160) * sqrt(v161);
      double v211 = 1.0 - v162 / v210;
      if ((*(void *)&v210 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
        double v211 = 1.0;
      }
      double v166 = sqrt(fabs(v211));
    }
LABEL_210:
    unint64_t v113 = (uint64_t *)v314;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1A72D2CB8(0, v113[2] + 1, 1);
      unint64_t v113 = (uint64_t *)v314;
    }
    os_log_t v114 = (os_log_t)v305;
    a2 = v113[2];
    unint64_t v191 = v113[3];
    unint64_t v22 = a2 + 1;
    if (a2 >= v191 >> 1)
    {
      sub_1A72D2CB8(v191 > 1, a2 + 1, 1);
      os_log_t v114 = (os_log_t)v305;
      unint64_t v113 = (uint64_t *)v314;
    }
    v113[2] = v22;
    unint64_t v192 = &v113[2 * a2];
    v192[4] = isa;
    *((double *)v192 + 5) = v166;
    if (__OFADD__(v16++, 1)) {
      goto LABEL_328;
    }
    uint64_t v115 = v308;
    if ((os_log_t)v308 != v114) {
      continue;
    }
    break;
  }
  swift_unknownObjectRelease();
  unint64_t v19 = (unint64_t)v301;
  uint64_t v212 = v113[2];
  if (v212) {
    goto LABEL_237;
  }
LABEL_298:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*v283)(v273, v295, v293);
  swift_bridgeObjectRetain_n();
  unint64_t v113 = (uint64_t *)sub_1A7571E80();
  LOBYTE(v16) = sub_1A7572FB0();
  if (os_log_type_enabled((os_log_t)v113, (os_log_type_t)v16))
  {
    unint64_t v22 = swift_slowAlloc();
    *(_DWORD *)unint64_t v22 = 134217984;
    if (v302)
    {
LABEL_329:
      swift_bridgeObjectRetain();
      uint64_t v261 = sub_1A75738D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v261 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v314 = v261;
    sub_1A7573250();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, (os_log_t)v113, (os_log_type_t)v16, "KMean: Only one point. Cluster has %ld points", (uint8_t *)v22, 0xCu);
    MEMORY[0x1AD0CD330](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*v282)(v273, v293);
  if (v302)
  {
    swift_bridgeObjectRetain();
    uint64_t v269 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v269 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_1A73B40D4();
  swift_allocError();
  uint64_t *v270 = v269;
  swift_willThrow();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t static KMeans._debug_computeClusters(_:points:distanceCalculator:)(unint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  unsigned __int8 v4 = *a3;
  return sub_1A73AEAA8(a1, a2, &v4, 1);
}

uint64_t sub_1A73B1318(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v19 = MEMORY[0x1E4FBC860];
  if (a2 < 0) {
    goto LABEL_37;
  }
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  unint64_t v5 = result;
  if (a2)
  {
    if ((result & 0xC000000000000001) != 0)
    {
      uint64_t v6 = 0;
      do
      {
        MEMORY[0x1AD0CB800](v6, v5);
        MEMORY[0x1AD0CABF0]();
        if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1A7572A60();
        }
        ++v6;
        sub_1A7572AB0();
        uint64_t result = sub_1A7572A30();
      }
      while (v4 != v6);
    }
    else
    {
      uint64_t v7 = result + 32;
      uint64_t v8 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v9 = a2;
      do
      {
        if (!v8) {
          goto LABEL_36;
        }
        uint64_t v10 = swift_retain();
        MEMORY[0x1AD0CABF0](v10);
        if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1A7572A60();
        }
        sub_1A7572AB0();
        uint64_t result = sub_1A7572A30();
        --v8;
        v7 += 8;
        --v9;
      }
      while (v9);
    }
  }
  if (v5 >> 62) {
    goto LABEL_38;
  }
  uint64_t v11 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  BOOL v12 = v11 == v4;
  if (v11 < v4)
  {
LABEL_39:
    __break(1u);
  }
  else
  {
    while (!v12)
    {
      uint64_t v13 = v4;
      while (v13 < v11)
      {
        uint64_t v14 = v4;
        __swift_mutable_project_boxed_opaque_existential_1(v3, *(void *)(v3 + 24));
        sub_1A73B4178();
        sub_1A73B41CC();
        sub_1A7572500();
        uint64_t v4 = v18;
        if ((v18 & 0x8000000000000000) != 0) {
          goto LABEL_33;
        }
        if ((v5 & 0xC000000000000001) != 0)
        {
          uint64_t v15 = MEMORY[0x1AD0CB800](v13, v5);
        }
        else
        {
          if (v13 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_34;
          }
          uint64_t v15 = *(void *)(v5 + 8 * v13 + 32);
          swift_retain();
        }
        unint64_t v16 = v19;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v19 & 0x8000000000000000) != 0
          || (v19 & 0x4000000000000000) != 0)
        {
          sub_1A74DAEF8(v19);
          unint64_t v16 = v17;
          unint64_t v19 = v17;
        }
        if (v18 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_35;
        }
        ++v13;
        swift_release();
        *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v18 + 0x20) = v15;
        sub_1A7572A30();
        uint64_t v4 = v14;
        if (v11 == v13) {
          return v19;
        }
      }
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1A75738D0();
      uint64_t result = swift_bridgeObjectRelease();
      BOOL v12 = v11 == v4;
      if (v11 < v4) {
        goto LABEL_39;
      }
    }
    return v19;
  }
  return result;
}

uint64_t KMeans.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t KMeans.__deallocating_deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 128, 7);
}

uint64_t type metadata accessor for KMeans()
{
  return self;
}

uint64_t method lookup function for KMeans(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for KMeans);
}

uint64_t dispatch thunk of KMeans.__allocating_init(k:pointCloud:maxIter:tolerance:randomGenerator:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

void *sub_1A73B1704(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for KMeans.TrainingMetrics(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for KMeans.TrainingMetrics(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for KMeans.TrainingMetrics()
{
  return &type metadata for KMeans.TrainingMetrics;
}

void *initializeBufferWithCopyOfBuffer for KMeans.Cluster(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for KMeans.Cluster(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for KMeans.Cluster(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for KMeans.Cluster()
{
  return &type metadata for KMeans.Cluster;
}

uint64_t initializeBufferWithCopyOfBuffer for KMeans.ClusterStats(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

void *assignWithCopy for KMeans.ClusterStats(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for KMeans.ClusterStats(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for KMeans.ClusterStats()
{
  return &type metadata for KMeans.ClusterStats;
}

uint64_t sub_1A73B19C4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A7573BB0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v88 = *a1;
      uint64_t v89 = *a1 + 16;
      uint64_t v90 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v92 = *(double *)(v88 + 24 * i + 16);
        uint64_t v93 = v90;
        uint64_t v94 = v89;
        do
        {
          if (*(double *)v94 >= v92) {
            break;
          }
          if (!v88) {
            goto LABEL_141;
          }
          uint64_t v95 = *(void *)(v94 + 8);
          uint64_t v96 = *(void *)(v94 + 16);
          *(_OWORD *)(v94 + 8) = *(_OWORD *)(v94 - 16);
          *(void *)(v94 + 24) = *(void *)v94;
          *(void *)(v94 - 16) = v95;
          *(void *)(v94 - 8) = v96;
          *(double *)uint64_t v94 = v92;
          v94 -= 24;
        }
        while (!__CFADD__(v93++, 1));
        v89 += 24;
        --v90;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  uint64_t v106 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      BOOL v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v98 = v12;
      uint64_t v108 = v9;
      if (v13 >= 2)
      {
        uint64_t v99 = *v106;
        do
        {
          unint64_t v100 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v99) {
            goto LABEL_145;
          }
          uint64_t v101 = v98;
          uint64_t v102 = *(void *)&v98[16 * v100 + 32];
          uint64_t v103 = *(void *)&v98[16 * v13 + 24];
          sub_1A73B2D00((double *)(v99 + 24 * v102), (double *)(v99 + 24 * *(void *)&v98[16 * v13 + 16]), v99 + 24 * v103, __dst);
          if (v1) {
            break;
          }
          if (v103 < v102) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v101 = sub_1A74F9DDC((uint64_t)v101);
          }
          if (v100 >= *((void *)v101 + 2)) {
            goto LABEL_134;
          }
          uint64_t v104 = &v101[16 * v100 + 32];
          *(void *)uint64_t v104 = v102;
          *((void *)v104 + 1) = v103;
          unint64_t v105 = *((void *)v101 + 2);
          if (v13 > v105) {
            goto LABEL_135;
          }
          memmove(&v101[16 * v13 + 16], &v101[16 * v13 + 32], 16 * (v105 - v13));
          uint64_t v98 = v101;
          *((void *)v101 + 2) = v105 - 1;
          unint64_t v13 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v108 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v108 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1430);
    uint64_t v8 = sub_1A7572A90();
    *(void *)(v8 + 16) = v7;
    uint64_t v108 = v8;
    __dst = (double *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v107 = *a1 + 64;
  BOOL v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v109 = v6;
  uint64_t v110 = v3;
  uint64_t v111 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 24 * v10 + 16);
      double v16 = *(double *)(v11 + 24 * v14 + 16);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        unint64_t v17 = (double *)(v107 + 24 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v16 < v15 == v19 >= *v17) {
            break;
          }
          ++v10;
          v17 += 3;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 24 * v10;
          uint64_t v21 = 24 * v14;
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v21;
              uint64_t v25 = v11 + v20;
              uint64_t v26 = *(void *)(v11 + v21);
              uint64_t v27 = *(void *)(v11 + v21 + 8);
              uint64_t v28 = *(void *)(v11 + v21 + 16);
              uint64_t v29 = *(void *)(v11 + v20 - 8);
              *(_OWORD *)uint64_t v24 = *(_OWORD *)(v11 + v20 - 24);
              *(void *)(v24 + 16) = v29;
              *(void *)(v25 - 24) = v26;
              *(void *)(v25 - 16) = v27;
              *(void *)(v25 - 8) = v28;
            }
            ++v23;
            v20 -= 24;
            v21 += 24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v30 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v30 >= v3) {
      uint64_t v30 = v3;
    }
    if (v30 < v14) {
      break;
    }
    if (v10 != v30)
    {
      unint64_t v31 = (double *)(v11 + 24 * v10);
      do
      {
        double v32 = *(double *)(v11 + 24 * v10 + 16);
        uint64_t v33 = v14;
        unint64_t v34 = v31;
        do
        {
          if (*(v34 - 1) >= v32) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          double v35 = *v34;
          uint64_t v36 = *((void *)v34 + 1);
          *(_OWORD *)unint64_t v34 = *(_OWORD *)(v34 - 3);
          void v34[2] = *(v34 - 1);
          *((void *)v34 - 2) = v36;
          *(v34 - 1) = v32;
          *(v34 - 3) = v35;
          v34 -= 3;
          ++v33;
        }
        while (v10 != v33);
        ++v10;
        v31 += 3;
      }
      while (v10 != v30);
      uint64_t v10 = v30;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      BOOL v12 = sub_1A74F9714(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v38 = *((void *)v12 + 2);
    unint64_t v37 = *((void *)v12 + 3);
    unint64_t v13 = v38 + 1;
    uint64_t v11 = v111;
    if (v38 >= v37 >> 1)
    {
      unint64_t v87 = sub_1A74F9714((char *)(v37 > 1), v38 + 1, 1, v12);
      uint64_t v11 = v111;
      BOOL v12 = v87;
    }
    *((void *)v12 + 2) = v13;
    unint64_t v39 = v12 + 32;
    unint64_t v40 = &v12[16 * v38 + 32];
    *(void *)unint64_t v40 = v14;
    *((void *)v40 + 1) = v10;
    if (v38)
    {
      while (1)
      {
        unint64_t v41 = v13 - 1;
        if (v13 >= 4)
        {
          os_log_t v46 = &v39[16 * v13];
          uint64_t v47 = *((void *)v46 - 8);
          uint64_t v48 = *((void *)v46 - 7);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_120;
          }
          uint64_t v51 = *((void *)v46 - 6);
          uint64_t v50 = *((void *)v46 - 5);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_121;
          }
          unint64_t v53 = v13 - 2;
          uint64_t v54 = &v39[16 * v13 - 32];
          uint64_t v56 = *(void *)v54;
          uint64_t v55 = *((void *)v54 + 1);
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_123;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_126;
          }
          if (v58 >= v49)
          {
            uint64_t v76 = &v39[16 * v41];
            uint64_t v78 = *(void *)v76;
            uint64_t v77 = *((void *)v76 + 1);
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_130;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v70 = *((void *)v12 + 4);
            uint64_t v71 = *((void *)v12 + 5);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_77;
          }
          uint64_t v43 = *((void *)v12 + 4);
          uint64_t v42 = *((void *)v12 + 5);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_122;
        }
        unint64_t v53 = v13 - 2;
        uint64_t v59 = &v39[16 * v13 - 32];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_125;
        }
        int v65 = &v39[16 * v41];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_128;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_129;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_83:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v64) {
          goto LABEL_124;
        }
        uint64_t v72 = &v39[16 * v41];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_127;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v81 = v12;
        int v82 = &v39[16 * v80];
        uint64_t v83 = *(void *)v82;
        uint64_t v84 = &v39[16 * v41];
        uint64_t v85 = *((void *)v84 + 1);
        sub_1A73B2D00((double *)(v11 + 24 * *(void *)v82), (double *)(v11 + 24 * *(void *)v84), v11 + 24 * v85, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v85 < v83) {
          goto LABEL_117;
        }
        if (v41 > *((void *)v81 + 2)) {
          goto LABEL_118;
        }
        *(void *)int v82 = v83;
        *(void *)&v39[16 * v80 + 8] = v85;
        unint64_t v86 = *((void *)v81 + 2);
        if (v41 >= v86) {
          goto LABEL_119;
        }
        BOOL v12 = v81;
        unint64_t v13 = v86 - 1;
        memmove(&v39[16 * v41], v84 + 16, 16 * (v86 - 1 - v41));
        *((void *)v81 + 2) = v86 - 1;
        uint64_t v11 = v111;
        if (v86 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v109;
    uint64_t v3 = v110;
    if (v10 >= v110)
    {
      uint64_t v9 = v108;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A73B20E0(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A7573BB0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_151;
    }
    if (v3) {
      return sub_1A73B2B10(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_159;
  }
  uint64_t v106 = v3;
  uint64_t v102 = result;
  unint64_t v100 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v110 = MEMORY[0x1E4FBC860];
    uint64_t v111 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_116:
      if (v12 >= 2)
      {
        uint64_t v94 = *v100;
        do
        {
          unint64_t v95 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_146;
          }
          if (!v94) {
            goto LABEL_158;
          }
          uint64_t v96 = *(void *)&v8[16 * v95 + 32];
          uint64_t v97 = *(void *)&v8[16 * v12 + 24];
          sub_1A73B2FC0((char *)(v94 + 24 * v96), (char *)(v94 + 24 * *(void *)&v8[16 * v12 + 16]), v94 + 24 * v97, v111);
          if (v1)
          {
            uint64_t v91 = v110;
            goto LABEL_113;
          }
          if (v97 < v96) {
            goto LABEL_147;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1A74F9DDC((uint64_t)v8);
          }
          if (v95 >= *((void *)v8 + 2)) {
            goto LABEL_148;
          }
          uint64_t v98 = &v8[16 * v95 + 32];
          *(void *)uint64_t v98 = v96;
          *((void *)v98 + 1) = v97;
          unint64_t v99 = *((void *)v8 + 2);
          if (v12 > v99) {
            goto LABEL_149;
          }
          memmove(&v8[16 * v12 + 16], &v8[16 * v12 + 32], 16 * (v99 - v12));
          *((void *)v8 + 2) = v99 - 1;
          unint64_t v12 = v99 - 1;
        }
        while (v99 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v110 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1410);
    uint64_t v7 = sub_1A7572A90();
    *(void *)(v7 + 16) = v6;
    uint64_t v110 = v7;
    uint64_t v111 = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v101 = *a1 + 40;
  uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v11 = v106;
  uint64_t v115 = *a1;
  while (2)
  {
    uint64_t v13 = v9;
    uint64_t v14 = v9 + 1;
    uint64_t v107 = v8;
    if (v9 + 1 >= v11) {
      goto LABEL_41;
    }
    unint64_t v15 = *(void *)(v10 + 24 * v14);
    unint64_t v16 = *(void *)(v10 + 24 * v9);
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v112 = sub_1A75738D0();
      swift_bridgeObjectRelease();
      if (!(v16 >> 62)) {
        goto LABEL_18;
      }
LABEL_112:
      swift_bridgeObjectRetain();
      uint64_t v108 = sub_1A75738D0();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    uint64_t v112 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v16 >> 62) {
      goto LABEL_112;
    }
LABEL_18:
    uint64_t v108 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v14 = v13 + 2;
    uint64_t v8 = v107;
    if (v13 + 2 >= v11)
    {
      uint64_t v10 = v115;
      goto LABEL_32;
    }
    uint64_t v104 = v13;
    uint64_t v17 = v101 + 24 * v13;
    while (1)
    {
      uint64_t v18 = v14;
      unint64_t v19 = *(void *)(v17 - 16);
      unint64_t v20 = *(void *)(v17 + 8);
      if (v20 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v21 = sub_1A75738D0();
        swift_bridgeObjectRelease();
        if (!(v19 >> 62))
        {
LABEL_23:
          uint64_t v22 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (!(v19 >> 62)) {
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1A75738D0();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_24:
      swift_bridgeObjectRelease();
      uint64_t v8 = v107;
      uint64_t v14 = v18;
      if (v108 < v112 == v22 >= v21) {
        break;
      }
      uint64_t v14 = v18 + 1;
      v17 += 24;
      uint64_t v11 = v106;
      uint64_t v10 = v115;
      if (v106 == v18 + 1)
      {
        uint64_t v14 = v106;
        goto LABEL_31;
      }
    }
    uint64_t v11 = v106;
    uint64_t v10 = v115;
LABEL_31:
    uint64_t v13 = v104;
LABEL_32:
    if (v108 < v112)
    {
      if (v14 < v13) {
        goto LABEL_152;
      }
      if (v13 < v14)
      {
        uint64_t v23 = 24 * v14;
        uint64_t v24 = 24 * v13;
        uint64_t v25 = v14;
        uint64_t v26 = v13;
        do
        {
          if (v26 != --v25)
          {
            if (!v10) {
              goto LABEL_157;
            }
            uint64_t v27 = v10 + v24;
            uint64_t v28 = v10 + v23;
            uint64_t v29 = *(void *)(v10 + v24);
            uint64_t v30 = *(void *)(v10 + v24 + 8);
            uint64_t v31 = *(void *)(v10 + v24 + 16);
            uint64_t v32 = *(void *)(v10 + v23 - 8);
            *(_OWORD *)uint64_t v27 = *(_OWORD *)(v10 + v23 - 24);
            *(void *)(v27 + 16) = v32;
            *(void *)(v28 - 24) = v29;
            *(void *)(v28 - 16) = v30;
            *(void *)(v28 - 8) = v31;
          }
          ++v26;
          v23 -= 24;
          v24 += 24;
        }
        while (v26 < v25);
      }
    }
LABEL_41:
    if (v14 >= v11) {
      goto LABEL_64;
    }
    if (__OFSUB__(v14, v13)) {
      goto LABEL_150;
    }
    if (v14 - v13 >= v102) {
      goto LABEL_64;
    }
    if (__OFADD__(v13, v102)) {
      goto LABEL_153;
    }
    if (v13 + v102 >= v11) {
      uint64_t v33 = v11;
    }
    else {
      uint64_t v33 = v13 + v102;
    }
    if (v33 >= v13)
    {
      if (v14 == v33) {
        goto LABEL_64;
      }
      uint64_t v103 = v33;
      uint64_t v105 = v13;
      unint64_t v34 = (void *)(v10 + 24 * v14);
      while (2)
      {
        unint64_t v35 = *(void *)(v10 + 24 * v14);
        uint64_t v36 = v105;
        uint64_t v109 = v34;
        uint64_t v113 = v14;
        while (2)
        {
          unint64_t v37 = *(v34 - 3);
          if (v35 >> 62)
          {
            swift_bridgeObjectRetain_n();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v38 = sub_1A75738D0();
            swift_bridgeObjectRelease();
            if (v37 >> 62) {
              goto LABEL_62;
            }
LABEL_56:
            uint64_t v39 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
          else
          {
            uint64_t v38 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            if (!(v37 >> 62)) {
              goto LABEL_56;
            }
LABEL_62:
            swift_bridgeObjectRetain();
            uint64_t v39 = sub_1A75738D0();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          if (v39 < v38)
          {
            uint64_t v10 = v115;
            if (!v115) {
              goto LABEL_155;
            }
            unint64_t v35 = *v34;
            uint64_t v40 = v34[1];
            uint64_t v41 = v34[2];
            *(_OWORD *)unint64_t v34 = *(_OWORD *)(v34 - 3);
            void v34[2] = *(v34 - 1);
            *(v34 - 2) = v40;
            *(v34 - 1) = v41;
            *(v34 - 3) = v35;
            v34 -= 3;
            if (v113 == ++v36) {
              goto LABEL_52;
            }
            continue;
          }
          break;
        }
        uint64_t v10 = v115;
LABEL_52:
        uint64_t v14 = v113 + 1;
        unint64_t v34 = v109 + 3;
        if (v113 + 1 != v103) {
          continue;
        }
        break;
      }
      uint64_t v14 = v103;
      uint64_t v8 = v107;
      uint64_t v13 = v105;
LABEL_64:
      if (v14 < v13) {
        goto LABEL_145;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1A74F9714(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v43 = *((void *)v8 + 2);
      unint64_t v42 = *((void *)v8 + 3);
      unint64_t v12 = v43 + 1;
      uint64_t v10 = v115;
      if (v43 >= v42 >> 1)
      {
        uint64_t v93 = sub_1A74F9714((char *)(v42 > 1), v43 + 1, 1, v8);
        uint64_t v10 = v115;
        uint64_t v8 = v93;
      }
      *((void *)v8 + 2) = v12;
      uint64_t v44 = v8 + 32;
      char v45 = &v8[16 * v43 + 32];
      *(void *)char v45 = v13;
      *((void *)v45 + 1) = v14;
      uint64_t v114 = v14;
      if (v43)
      {
        while (2)
        {
          unint64_t v46 = v12 - 1;
          if (v12 >= 4)
          {
            uint64_t v51 = &v44[16 * v12];
            uint64_t v52 = *((void *)v51 - 8);
            uint64_t v53 = *((void *)v51 - 7);
            BOOL v57 = __OFSUB__(v53, v52);
            uint64_t v54 = v53 - v52;
            if (v57) {
              goto LABEL_134;
            }
            uint64_t v56 = *((void *)v51 - 6);
            uint64_t v55 = *((void *)v51 - 5);
            BOOL v57 = __OFSUB__(v55, v56);
            uint64_t v49 = v55 - v56;
            char v50 = v57;
            if (v57) {
              goto LABEL_135;
            }
            unint64_t v58 = v12 - 2;
            uint64_t v59 = &v44[16 * v12 - 32];
            uint64_t v61 = *(void *)v59;
            uint64_t v60 = *((void *)v59 + 1);
            BOOL v57 = __OFSUB__(v60, v61);
            uint64_t v62 = v60 - v61;
            if (v57) {
              goto LABEL_137;
            }
            BOOL v57 = __OFADD__(v49, v62);
            uint64_t v63 = v49 + v62;
            if (v57) {
              goto LABEL_140;
            }
            if (v63 >= v54)
            {
              uint64_t v81 = &v44[16 * v46];
              uint64_t v83 = *(void *)v81;
              uint64_t v82 = *((void *)v81 + 1);
              BOOL v57 = __OFSUB__(v82, v83);
              uint64_t v84 = v82 - v83;
              if (v57) {
                goto LABEL_144;
              }
              BOOL v74 = v49 < v84;
            }
            else
            {
LABEL_83:
              if (v50) {
                goto LABEL_136;
              }
              unint64_t v58 = v12 - 2;
              char v64 = &v44[16 * v12 - 32];
              uint64_t v66 = *(void *)v64;
              uint64_t v65 = *((void *)v64 + 1);
              BOOL v67 = __OFSUB__(v65, v66);
              uint64_t v68 = v65 - v66;
              char v69 = v67;
              if (v67) {
                goto LABEL_139;
              }
              uint64_t v70 = &v44[16 * v46];
              uint64_t v72 = *(void *)v70;
              uint64_t v71 = *((void *)v70 + 1);
              BOOL v57 = __OFSUB__(v71, v72);
              uint64_t v73 = v71 - v72;
              if (v57) {
                goto LABEL_142;
              }
              if (__OFADD__(v68, v73)) {
                goto LABEL_143;
              }
              if (v68 + v73 < v49) {
                goto LABEL_95;
              }
              BOOL v74 = v49 < v73;
            }
            if (v74) {
              unint64_t v46 = v58;
            }
          }
          else
          {
            if (v12 == 3)
            {
              uint64_t v48 = *((void *)v8 + 4);
              uint64_t v47 = *((void *)v8 + 5);
              BOOL v57 = __OFSUB__(v47, v48);
              uint64_t v49 = v47 - v48;
              char v50 = v57;
              goto LABEL_83;
            }
            uint64_t v75 = *((void *)v8 + 4);
            uint64_t v76 = *((void *)v8 + 5);
            BOOL v57 = __OFSUB__(v76, v75);
            uint64_t v68 = v76 - v75;
            char v69 = v57;
LABEL_95:
            if (v69) {
              goto LABEL_138;
            }
            uint64_t v77 = &v44[16 * v46];
            uint64_t v79 = *(void *)v77;
            uint64_t v78 = *((void *)v77 + 1);
            BOOL v57 = __OFSUB__(v78, v79);
            uint64_t v80 = v78 - v79;
            if (v57) {
              goto LABEL_141;
            }
            if (v80 < v68) {
              goto LABEL_14;
            }
          }
          unint64_t v85 = v46 - 1;
          if (v46 - 1 >= v12)
          {
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
            goto LABEL_154;
          }
          if (!v10) {
            goto LABEL_156;
          }
          unint64_t v86 = v8;
          unint64_t v87 = &v44[16 * v85];
          uint64_t v88 = *(void *)v87;
          uint64_t v89 = &v44[16 * v46];
          uint64_t v90 = *((void *)v89 + 1);
          sub_1A73B2FC0((char *)(v10 + 24 * *(void *)v87), (char *)(v10 + 24 * *(void *)v89), v10 + 24 * v90, v111);
          uint64_t v91 = v110;
          if (v1)
          {
LABEL_113:
            swift_bridgeObjectRelease();
            *(void *)(v91 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
          if (v90 < v88) {
            goto LABEL_131;
          }
          if (v46 > *((void *)v86 + 2)) {
            goto LABEL_132;
          }
          *(void *)unint64_t v87 = v88;
          *(void *)&v44[16 * v85 + 8] = v90;
          unint64_t v92 = *((void *)v86 + 2);
          if (v46 >= v92) {
            goto LABEL_133;
          }
          uint64_t v8 = v86;
          unint64_t v12 = v92 - 1;
          memmove(&v44[16 * v46], v89 + 16, 16 * (v92 - 1 - v46));
          *((void *)v86 + 2) = v92 - 1;
          uint64_t v10 = v115;
          if (v92 <= 2) {
            goto LABEL_14;
          }
          continue;
        }
      }
      unint64_t v12 = 1;
LABEL_14:
      uint64_t v11 = v106;
      uint64_t v9 = v114;
      if (v114 >= v106) {
        goto LABEL_116;
      }
      continue;
    }
    break;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A73B2B10(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v13 = result;
  if (a3 != a2)
  {
    uint64_t v15 = *a4;
    uint64_t v4 = (void *)(*a4 + 24 * a3);
LABEL_5:
    unint64_t v5 = *(void *)(v15 + 24 * a3);
    uint64_t v6 = v13;
    uint64_t v14 = v4;
    uint64_t v16 = a3;
    while (1)
    {
      unint64_t v7 = *(v4 - 3);
      if (v5 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v8 = sub_1A75738D0();
        swift_bridgeObjectRelease();
        if (!(v7 >> 62))
        {
LABEL_8:
          uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (!(v7 >> 62)) {
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1A75738D0();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_9:
      uint64_t result = swift_bridgeObjectRelease();
      if (v9 >= v8) {
        goto LABEL_4;
      }
      if (!v15)
      {
        __break(1u);
        return result;
      }
      unint64_t v5 = *v4;
      uint64_t v10 = v4[1];
      uint64_t v11 = v4[2];
      *(_OWORD *)uint64_t v4 = *(_OWORD *)(v4 - 3);
      v4[2] = *(v4 - 1);
      *(v4 - 2) = v10;
      *(v4 - 1) = v11;
      *(v4 - 3) = v5;
      v4 -= 3;
      if (v16 == ++v6)
      {
LABEL_4:
        a3 = v16 + 1;
        uint64_t v4 = v14 + 3;
        if (v16 + 1 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_1A73B2D00(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  unint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = ((char *)a2 - (char *)__src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v26 = __src;
  uint64_t v25 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[3 * v11] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      uint64_t v17 = &v4[3 * v11];
      uint64_t v24 = (char *)v17;
      uint64_t v26 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v18 = a3 - 24;
        do
        {
          unint64_t v19 = (double *)(v18 + 24);
          if (*(v6 - 1) >= *(v17 - 1))
          {
            uint64_t v24 = (char *)(v17 - 3);
            if (v19 < v17 || v18 >= (unint64_t)v17 || v19 != v17)
            {
              long long v22 = *(_OWORD *)(v17 - 3);
              *(double *)(v18 + 16) = *(v17 - 1);
              *(_OWORD *)unint64_t v18 = v22;
            }
            unint64_t v20 = v6;
            v17 -= 3;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            unint64_t v20 = v6 - 3;
            if (v19 != v6 || v18 >= (unint64_t)v6)
            {
              long long v21 = *(_OWORD *)v20;
              *(double *)(v18 + 16) = *(v6 - 1);
              *(_OWORD *)unint64_t v18 = v21;
            }
            uint64_t v26 = v6 - 3;
            if (v20 <= v7) {
              break;
            }
          }
          v18 -= 24;
          uint64_t v6 = v20;
        }
        while (v17 > v4);
      }
LABEL_40:
      sub_1A74F98CC((void **)&v26, (const void **)&v25, &v24);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[3 * v9] <= __dst) {
      memmove(__dst, __src, 24 * v9);
    }
    unint64_t v12 = &v4[3 * v9];
    uint64_t v24 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      uint64_t v13 = v4;
      while (1)
      {
        if (v13[2] >= v6[2])
        {
          uint64_t v4 = v13 + 3;
          uint64_t v15 = v13;
          uint64_t v14 = v6;
          if (v7 == v13)
          {
            v13 += 3;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 3;
          }
        }
        else
        {
          uint64_t v14 = v6 + 3;
          uint64_t v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        long long v16 = *(_OWORD *)v15;
        v7[2] = v15[2];
        *(_OWORD *)unint64_t v7 = v16;
LABEL_18:
        v7 += 3;
        if (v13 < v12)
        {
          uint64_t v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        uint64_t v25 = v4;
        uint64_t v26 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A73B2FC0(char *a1, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = __src;
  uint64_t v5 = __src - a1;
  uint64_t v6 = (__src - a1) / 24;
  uint64_t v7 = a3 - (void)__src;
  uint64_t v8 = (uint64_t)(a3 - (void)__src) / 24;
  unint64_t v37 = a1;
  uint64_t v36 = a4;
  if (v6 >= v8)
  {
    if (v7 < -23) {
      goto LABEL_52;
    }
    if (a4 != __src || &__src[24 * v8] <= a4) {
      memmove(a4, __src, 24 * v8);
    }
    uint64_t v17 = &a4[24 * v8];
    unint64_t v35 = v17;
    unint64_t v37 = v4;
    if (a1 >= v4 || v7 < 24)
    {
LABEL_51:
      sub_1A74F98CC((void **)&v37, (const void **)&v36, &v35);
      return 1;
    }
    unint64_t v18 = a3 - 24;
    unint64_t v19 = v4;
    while (1)
    {
      unint64_t v34 = v17;
      unint64_t v21 = *((void *)v17 - 3);
      v17 -= 24;
      unint64_t v20 = v21;
      unint64_t v23 = *((void *)v19 - 3);
      v19 -= 24;
      unint64_t v22 = v23;
      if (v20 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v32 = sub_1A75738D0();
        swift_bridgeObjectRelease();
        if (v22 >> 62)
        {
LABEL_49:
          swift_bridgeObjectRetain();
          uint64_t v24 = sub_1A75738D0();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t v32 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v22 >> 62) {
          goto LABEL_49;
        }
      }
      uint64_t v24 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_35:
      uint64_t v25 = (char *)(v18 + 24);
      swift_bridgeObjectRelease();
      if (v24 >= v32)
      {
        unint64_t v35 = v17;
        if (v25 < v34 || v18 >= (unint64_t)v34 || v25 != v34)
        {
          long long v27 = *(_OWORD *)v17;
          *(void *)(v18 + 16) = *((void *)v17 + 2);
          *(_OWORD *)unint64_t v18 = v27;
        }
        unint64_t v19 = v4;
      }
      else
      {
        uint64_t v17 = v34;
        if (v25 != v4 || v18 >= (unint64_t)v4)
        {
          long long v26 = *(_OWORD *)v19;
          *(void *)(v18 + 16) = *((void *)v19 + 2);
          *(_OWORD *)unint64_t v18 = v26;
        }
        unint64_t v37 = v19;
      }
      if (v19 > a1)
      {
        v18 -= 24;
        uint64_t v4 = v19;
        if (v17 > a4) {
          continue;
        }
      }
      goto LABEL_51;
    }
  }
  if (v5 >= -23)
  {
    if (a4 != a1 || &a1[24 * v6] <= a4) {
      memmove(a4, a1, 24 * v6);
    }
    uint64_t v31 = &a4[24 * v6];
    unint64_t v35 = v31;
    if ((unint64_t)v4 < a3 && v5 >= 24)
    {
      int64_t v9 = a4;
      uint64_t v10 = a1;
      while (1)
      {
        unint64_t v11 = *(void *)v9;
        if (*(void *)v4 >> 62)
        {
          swift_bridgeObjectRetain_n();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v12 = sub_1A75738D0();
          swift_bridgeObjectRelease();
          if (v11 >> 62)
          {
LABEL_24:
            swift_bridgeObjectRetain();
            uint64_t v13 = sub_1A75738D0();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v12 = *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          if (v11 >> 62) {
            goto LABEL_24;
          }
        }
        uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
LABEL_12:
        swift_bridgeObjectRelease();
        if (v13 >= v12)
        {
          if (v10 != v9)
          {
            long long v16 = *(_OWORD *)v9;
            *((void *)v10 + 2) = *((void *)v9 + 2);
            *(_OWORD *)uint64_t v10 = v16;
          }
          v9 += 24;
          uint64_t v36 = v9;
          uint64_t v14 = v4;
        }
        else
        {
          uint64_t v14 = v4 + 24;
          if (v10 < v4 || v10 >= v14 || v10 != v4)
          {
            long long v15 = *(_OWORD *)v4;
            *((void *)v10 + 2) = *((void *)v4 + 2);
            *(_OWORD *)uint64_t v10 = v15;
          }
        }
        v10 += 24;
        if (v9 < v31)
        {
          uint64_t v4 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        unint64_t v37 = v10;
        goto LABEL_51;
      }
    }
    goto LABEL_51;
  }
LABEL_52:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A73B3490(uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  unint64_t v3 = a2;
  unint64_t v5 = *a3;
  if (a2 >> 62)
  {
LABEL_132:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1A75738D0();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v7 = a1 + 16;
      unint64_t v8 = v3 & 0xC000000000000001;
      uint64_t v125 = (unint64_t *)(a1 + 24);
      swift_beginAccess();
      a1 = 0;
      unint64_t v9 = 0;
      uint64_t v122 = v3 & 0xFFFFFFFFFFFFFF8;
      double v10 = 1.79769313e308;
      unint64_t v118 = v3 & 0xC000000000000001;
      unint64_t v119 = v3;
      uint64_t v121 = v6;
      unsigned int v120 = v5;
      while (1)
      {
        if (v8)
        {
          uint64_t v18 = MEMORY[0x1AD0CB800](v9, v3);
          unint64_t v19 = v9 + 1;
          if (__OFADD__(v9, 1)) {
            goto LABEL_126;
          }
        }
        else
        {
          if (v9 >= *(void *)(v122 + 16)) {
            goto LABEL_127;
          }
          uint64_t v18 = swift_retain();
          unint64_t v19 = v9 + 1;
          if (__OFADD__(v9, 1)) {
            goto LABEL_126;
          }
        }
        if (v5)
        {
          if (v5 == 1)
          {
            uint64_t v20 = a1;
            a1 = v6;
            unint64_t v21 = v5;
            unint64_t v5 = *v125;
            if ((*v125 & 0x8000000000000000) != 0) {
              goto LABEL_128;
            }
            unint64_t v123 = v9;
            uint64_t v124 = v18;
            if (v5)
            {
              uint64_t v22 = v18 + 16;
              swift_beginAccess();
              swift_beginAccess();
              unint64_t v3 = 0;
              unint64_t v23 = (void *)MEMORY[0x1E4FBC860];
              while (v3 < *(void *)(*(void *)v7 + 16))
              {
                if (v3 >= *(void *)(*(void *)v22 + 16)) {
                  goto LABEL_119;
                }
                double v24 = *(double *)(*(void *)v7 + 8 * v3 + 32);
                double v25 = *(double *)(*(void *)v22 + 8 * v3 + 32);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v23 = sub_1A72AC59C(0, v23[2] + 1, 1, v23);
                }
                unint64_t v27 = v23[2];
                unint64_t v26 = v23[3];
                if (v27 >= v26 >> 1) {
                  unint64_t v23 = sub_1A72AC59C((void *)(v26 > 1), v27 + 1, 1, v23);
                }
                ++v3;
                void v23[2] = v27 + 1;
                *(double *)&v23[v27 + 4] = v24 - v25;
                if (v5 == v3) {
                  goto LABEL_54;
                }
              }
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
              goto LABEL_124;
            }
            unint64_t v23 = (void *)MEMORY[0x1E4FBC860];
LABEL_54:
            type metadata accessor for RDVector();
            uint64_t result = swift_initStackObject();
            *(void *)(result + 16) = v23;
            uint64_t v58 = v23[2];
            *(void *)(result + 24) = v58;
            if (v58)
            {
              uint64_t v59 = v23[4];
              unint64_t v3 = v119;
              unint64_t v5 = v21;
              if ((v59 & 0x7FF0000000000000) != 0)
              {
                swift_release();
                uint64_t v6 = a1;
                goto LABEL_63;
              }
              uint64_t v6 = a1;
              if ((v59 & 0xFFFFFFFFFFFFFLL) != 0)
              {
                swift_release();
LABEL_63:
                a1 = v20;
LABEL_64:
                unint64_t v8 = v118;
LABEL_65:
                unint64_t v60 = *v125;
                if ((*v125 & 0x8000000000000000) != 0) {
                  goto LABEL_131;
                }
                if (v60)
                {
                  uint64_t v61 = v124 + 16;
                  swift_beginAccess();
                  swift_beginAccess();
                  uint64_t v62 = *(void *)v7;
                  uint64_t v63 = *(void *)(*(void *)v7 + 16);
                  if (!v63) {
                    goto LABEL_124;
                  }
                  uint64_t v64 = *(void *)v61;
                  unint64_t v65 = *(void *)(*(void *)v61 + 16);
                  if (!v65) {
                    goto LABEL_125;
                  }
                  uint64_t v66 = v62 + 32;
                  uint64_t v67 = v64 + 32;
                  double v68 = *(double *)(v64 + 32);
                  double v69 = *(double *)(v62 + 32);
                  double v70 = v69 * v69;
                  double v71 = v68 * v68;
                  double v72 = v69 * v68 + 0.0;
                  if (v60 != 1)
                  {
                    unint64_t v73 = v65 - 1;
                    if (v65 - 1 >= v63 - 1) {
                      unint64_t v73 = v63 - 1;
                    }
                    if (v73 >= v60 - 2) {
                      unint64_t v73 = v60 - 2;
                    }
                    unint64_t v74 = v73 + 1;
                    if (v74 > 4)
                    {
                      uint64_t v98 = v74 & 3;
                      if ((v74 & 3) == 0) {
                        uint64_t v98 = 4;
                      }
                      unint64_t v99 = v74 - v98;
                      unint64_t v75 = v99 + 1;
                      unint64_t v100 = (float64x2_t *)(v62 + 56);
                      uint64_t v101 = (float64x2_t *)(v64 + 56);
                      do
                      {
                        float64x2_t v102 = v100[-1];
                        float64x2_t v103 = v101[-1];
                        float64x2_t v104 = vmulq_f64(v102, v102);
                        float64x2_t v105 = vmulq_f64(*v100, *v100);
                        float64x2_t v106 = vmulq_f64(v103, v103);
                        float64x2_t v107 = vmulq_f64(*v101, *v101);
                        float64x2_t v108 = vmulq_f64(v102, v103);
                        float64x2_t v109 = vmulq_f64(*v100, *v101);
                        double v72 = v72 + v108.f64[0] + v108.f64[1] + v109.f64[0] + v109.f64[1];
                        double v70 = v70 + v104.f64[0] + v104.f64[1] + v105.f64[0] + v105.f64[1];
                        double v71 = v71 + v106.f64[0] + v106.f64[1] + v107.f64[0] + v107.f64[1];
                        v100 += 2;
                        v101 += 2;
                        v99 -= 4;
                      }
                      while (v99);
                    }
                    else
                    {
                      unint64_t v75 = 1;
                    }
                    while (v63 != v75)
                    {
                      if (v75 >= v65) {
                        goto LABEL_125;
                      }
                      double v110 = *(double *)(v66 + 8 * v75);
                      double v111 = *(double *)(v67 + 8 * v75);
                      double v70 = v70 + v110 * v110;
                      double v71 = v71 + v111 * v111;
                      double v72 = v72 + v110 * v111;
                      if (v60 == ++v75) {
                        goto LABEL_100;
                      }
                    }
LABEL_124:
                    __break(1u);
LABEL_125:
                    __break(1u);
LABEL_126:
                    __break(1u);
LABEL_127:
                    __break(1u);
LABEL_128:
                    __break(1u);
LABEL_129:
                    __break(1u);
LABEL_130:
                    __break(1u);
LABEL_131:
                    __break(1u);
                    goto LABEL_132;
                  }
                }
                else
                {
                  double v72 = 0.0;
                  double v70 = 0.0;
                  double v71 = 0.0;
                }
LABEL_100:
                swift_release();
                double v112 = sqrt(v70) * sqrt(v71);
                double v113 = 1.0 - v72 / v112;
                if ((*(void *)&v112 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
                  double v113 = 1.0;
                }
                double v16 = sqrt(fabs(v113));
LABEL_103:
                unint64_t v17 = v19;
                unint64_t v9 = v123;
                goto LABEL_9;
              }
              if (v58 == 1)
              {
                swift_release();
LABEL_59:
                a1 = v20;
                unint64_t v8 = v118;
              }
              else
              {
                uint64_t v114 = v23[5];
                a1 = v20;
                if ((v114 & 0x7FF0000000000000) != 0)
                {
                  swift_release();
                  goto LABEL_64;
                }
                unint64_t v8 = v118;
                if ((v114 & 0xFFFFFFFFFFFFFLL) != 0)
                {
LABEL_109:
                  swift_release();
                  goto LABEL_65;
                }
                if (v58 != 2)
                {
                  uint64_t v115 = 6;
                  while (1)
                  {
                    uint64_t v116 = v115 - 3;
                    if (__OFADD__(v115 - 4, 1)) {
                      break;
                    }
                    uint64_t v117 = v23[v115];
                    if ((v117 & 0x7FF0000000000000) != 0 || (v117 & 0xFFFFFFFFFFFFFLL) != 0) {
                      goto LABEL_109;
                    }
                    ++v115;
                    if (v116 == v58) {
                      goto LABEL_116;
                    }
                  }
                  __break(1u);
                  return result;
                }
LABEL_116:
                swift_release();
              }
              swift_release();
              double v16 = 0.0;
              goto LABEL_103;
            }
            swift_release();
            unint64_t v3 = v119;
            unint64_t v5 = v21;
            uint64_t v6 = a1;
            goto LABEL_59;
          }
          unint64_t v43 = *v125;
          if ((*v125 & 0x8000000000000000) != 0) {
            goto LABEL_130;
          }
          unint64_t v44 = v3;
          if (v43)
          {
            unint64_t v3 = v18;
            uint64_t v45 = v18 + 16;
            swift_beginAccess();
            swift_beginAccess();
            uint64_t v46 = *(void *)v7;
            uint64_t v47 = *(void *)(*(void *)v7 + 16);
            if (!v47) {
              goto LABEL_121;
            }
            uint64_t v48 = *(void *)v45;
            unint64_t v49 = *(void *)(*(void *)v45 + 16);
            if (!v49) {
              goto LABEL_123;
            }
            uint64_t v50 = v46 + 32;
            uint64_t v51 = v48 + 32;
            double v52 = *(double *)(v48 + 32);
            double v53 = *(double *)(v46 + 32);
            double v12 = v53 * v53;
            double v13 = v52 * v52;
            double v11 = v53 * v52 + 0.0;
            if (v43 != 1)
            {
              unint64_t v54 = v49 - 1;
              if (v49 - 1 >= v47 - 1) {
                unint64_t v54 = v47 - 1;
              }
              if (v54 >= v43 - 2) {
                unint64_t v54 = v43 - 2;
              }
              unint64_t v55 = v54 + 1;
              if (v55 > 4)
              {
                uint64_t v84 = v55 & 3;
                if ((v55 & 3) == 0) {
                  uint64_t v84 = 4;
                }
                unint64_t v85 = v55 - v84;
                unint64_t v56 = v85 + 1;
                unint64_t v86 = (float64x2_t *)(v46 + 56);
                unint64_t v87 = (float64x2_t *)(v48 + 56);
                do
                {
                  float64x2_t v88 = v86[-1];
                  float64x2_t v89 = v87[-1];
                  float64x2_t v90 = vmulq_f64(v88, v88);
                  float64x2_t v91 = vmulq_f64(*v86, *v86);
                  float64x2_t v92 = vmulq_f64(v89, v89);
                  float64x2_t v93 = vmulq_f64(*v87, *v87);
                  float64x2_t v94 = vmulq_f64(v88, v89);
                  float64x2_t v95 = vmulq_f64(*v86, *v87);
                  double v11 = v11 + v94.f64[0] + v94.f64[1] + v95.f64[0] + v95.f64[1];
                  double v12 = v12 + v90.f64[0] + v90.f64[1] + v91.f64[0] + v91.f64[1];
                  double v13 = v13 + v92.f64[0] + v92.f64[1] + v93.f64[0] + v93.f64[1];
                  v86 += 2;
                  v87 += 2;
                  v85 -= 4;
                }
                while (v85);
              }
              else
              {
                unint64_t v56 = 1;
              }
              while (v47 != v56)
              {
                if (v56 >= v49) {
                  goto LABEL_123;
                }
                double v96 = *(double *)(v50 + 8 * v56);
                double v97 = *(double *)(v51 + 8 * v56);
                double v12 = v12 + v96 * v96;
                double v13 = v13 + v97 * v97;
                double v11 = v11 + v96 * v97;
                if (v43 == ++v56) {
                  goto LABEL_5;
                }
              }
              goto LABEL_121;
            }
          }
          else
          {
            double v11 = 0.0;
            double v12 = 0.0;
            double v13 = 0.0;
          }
LABEL_5:
          swift_release();
          double v14 = sqrt(v12) * sqrt(v13);
          if ((*(void *)&v14 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
            double v15 = v11 / v14;
          }
          else {
            double v15 = 0.0;
          }
          double v16 = acos(v15) / 3.14159265;
          unint64_t v17 = v19;
          unint64_t v3 = v44;
          uint64_t v6 = v121;
        }
        else
        {
          unint64_t v28 = *v125;
          if ((*v125 & 0x8000000000000000) != 0) {
            goto LABEL_129;
          }
          unint64_t v5 = v8;
          uint64_t v29 = v6;
          unint64_t v30 = v3;
          if (v28)
          {
            unint64_t v3 = v18;
            uint64_t v31 = v18 + 16;
            swift_beginAccess();
            swift_beginAccess();
            uint64_t v32 = *(void *)v7;
            uint64_t v33 = *(void *)(*(void *)v7 + 16);
            if (!v33) {
              goto LABEL_120;
            }
            uint64_t v34 = *(void *)v31;
            unint64_t v35 = *(void *)(*(void *)v31 + 16);
            if (!v35) {
              goto LABEL_122;
            }
            uint64_t v36 = v32 + 32;
            uint64_t v37 = v34 + 32;
            double v38 = *(double *)(v32 + 32) - *(double *)(v34 + 32);
            double v39 = v38 * v38;
            if (v28 != 1)
            {
              unint64_t v40 = v35 - 1;
              if (v35 - 1 >= v33 - 1) {
                unint64_t v40 = v33 - 1;
              }
              if (v40 >= v28 - 2) {
                unint64_t v40 = v28 - 2;
              }
              unint64_t v41 = v40 + 1;
              if (v41 > 4)
              {
                uint64_t v76 = v41 & 3;
                if ((v41 & 3) == 0) {
                  uint64_t v76 = 4;
                }
                unint64_t v77 = v41 - v76;
                unint64_t v42 = v77 + 1;
                uint64_t v78 = (float64x2_t *)(v32 + 56);
                uint64_t v79 = (float64x2_t *)(v34 + 56);
                do
                {
                  float64x2_t v80 = vsubq_f64(v78[-1], v79[-1]);
                  float64x2_t v81 = vsubq_f64(*v78, *v79);
                  float64x2_t v82 = vmulq_f64(v80, v80);
                  float64x2_t v83 = vmulq_f64(v81, v81);
                  double v39 = v39 + v82.f64[0] + v82.f64[1] + v83.f64[0] + v83.f64[1];
                  v78 += 2;
                  v79 += 2;
                  v77 -= 4;
                }
                while (v77);
              }
              else
              {
                unint64_t v42 = 1;
              }
              while (v33 != v42)
              {
                if (v42 >= v35) {
                  goto LABEL_122;
                }
                double v39 = v39
                    + (*(double *)(v36 + 8 * v42) - *(double *)(v37 + 8 * v42))
                    * (*(double *)(v36 + 8 * v42) - *(double *)(v37 + 8 * v42));
                if (v28 == ++v42) {
                  goto LABEL_84;
                }
              }
              goto LABEL_120;
            }
          }
          else
          {
            double v39 = 0.0;
          }
LABEL_84:
          swift_release();
          double v16 = sqrt(v39);
          unint64_t v17 = v19;
          unint64_t v3 = v30;
          uint64_t v6 = v29;
          unint64_t v8 = v5;
          unint64_t v5 = v120;
        }
LABEL_9:
        if (v16 < v10)
        {
          a1 = v9;
          double v10 = v16;
        }
        unint64_t v9 = v17;
        if (v17 == v6)
        {
          swift_bridgeObjectRelease();
          return a1;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

double sub_1A73B3D90(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2860);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73B3FE8();
  sub_1A7574190();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for RDVector();
    v10[15] = 0;
    sub_1A73B403C(&qword_1E96F2870);
    sub_1A7573A50();
    v10[14] = 1;
    swift_retain();
    sub_1A7573A20();
    double v2 = v9;
    v10[13] = 2;
    sub_1A7573A30();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_release();
  }
  return v2;
}

unint64_t sub_1A73B3FE8()
{
  unint64_t result = qword_1E96F2868;
  if (!qword_1E96F2868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2868);
  }
  return result;
}

uint64_t sub_1A73B403C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RDVector();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A73B4080()
{
  unint64_t result = qword_1E96F2888;
  if (!qword_1E96F2888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2888);
  }
  return result;
}

unint64_t sub_1A73B40D4()
{
  unint64_t result = qword_1E96F2890;
  if (!qword_1E96F2890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2890);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_1A73B4178()
{
  unint64_t result = qword_1E96F2898;
  if (!qword_1E96F2898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2898);
  }
  return result;
}

unint64_t sub_1A73B41CC()
{
  unint64_t result = qword_1E96F28A0;
  if (!qword_1E96F28A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F28A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for KMeans.ClusterTooSmallToSplit()
{
  return &type metadata for KMeans.ClusterTooSmallToSplit;
}

ValueMetadata *type metadata accessor for KMeans.TooManyRecursionComputingClusters()
{
  return &type metadata for KMeans.TooManyRecursionComputingClusters;
}

unsigned char *storeEnumTagSinglePayload for KMeans.ClusterStats.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73B430CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KMeans.ClusterStats.CodingKeys()
{
  return &type metadata for KMeans.ClusterStats.CodingKeys;
}

unint64_t sub_1A73B4348()
{
  unint64_t result = qword_1E96F28A8;
  if (!qword_1E96F28A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F28A8);
  }
  return result;
}

unint64_t sub_1A73B43A0()
{
  unint64_t result = qword_1E96F28B0;
  if (!qword_1E96F28B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F28B0);
  }
  return result;
}

unint64_t sub_1A73B43F8()
{
  unint64_t result = qword_1E96F28B8;
  if (!qword_1E96F28B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F28B8);
  }
  return result;
}

uint64_t sub_1A73B444C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265746E6563 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636E6169726176 && a2 == 0xE800000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

char *REMCustomSmartListFilterDescriptor.__allocating_init(data:minimumSupportedVersion:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  BOOL v4 = *MEMORY[0x1E4F95118] != a3 && *MEMORY[0x1E4F95108] == a3;
  BOOL v6 = v4;
  return sub_1A73B9D80(a1, a2, (unsigned __int8 *)&v6);
}

void *REMCustomSmartListFilterDescriptor.toData()()
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
  BOOL v4 = v2 != *MEMORY[0x1E4F95118] && v2 == *MEMORY[0x1E4F95108];
  LOBYTE(v10[0]) = v4;
  sub_1A73B4DA8((unsigned __int8 *)v10);
  if (!v0)
  {
    uint64_t v5 = self;
    BOOL v6 = (void *)sub_1A75723D0();
    swift_bridgeObjectRelease();
    v10[0] = 0;
    id v7 = objc_msgSend(v5, sel_dataWithJSONObject_options_error_, v6, 0, v10);

    id v8 = v10[0];
    if (v7)
    {
      uint64_t v1 = (void *)sub_1A7571A20();
    }
    else
    {
      uint64_t v1 = v8;
      sub_1A7571850();

      swift_willThrow();
    }
  }
  return v1;
}

uint64_t REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v2 - 8);
  BOOL v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *MEMORY[0x1E4F95118];
  uint64_t v10 = *MEMORY[0x1E4F95108];
  if (*MEMORY[0x1E4F95108] <= *MEMORY[0x1E4F95118]) {
    uint64_t v11 = *MEMORY[0x1E4F95118];
  }
  else {
    uint64_t v11 = *MEMORY[0x1E4F95108];
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation)) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = *MEMORY[0x1E4F95118];
  }
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  if (v13)
  {
    if (v13 == 1)
    {
      sub_1A7384C20(1uLL);
      uint64_t v15 = v9;
    }
    else
    {
      if (v13 == 2) {
        goto LABEL_20;
      }
      if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16) & 1) == 0
        && *(void *)(*(void *)(v1
                                 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags
                                 + 8)
                     + 16) == 0)
      {
        uint64_t v15 = *MEMORY[0x1E4F95118];
      }
      else
      {
        uint64_t v15 = *MEMORY[0x1E4F95108];
      }
    }
  }
  else
  {
    sub_1A7384C20(0);
    uint64_t v15 = v10;
  }
  if (v15 > v12) {
    uint64_t v12 = v15;
  }
LABEL_20:
  sub_1A72BF1E8(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v4, (uint64_t *)&unk_1E96F2370);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A72CB560((uint64_t)v4, (uint64_t *)&unk_1E96F2370);
  }
  else
  {
    sub_1A73BAA30((uint64_t)v4, (uint64_t)v8);
    uint64_t v16 = sub_1A73B54B4();
    if (v16 > v12) {
      uint64_t v12 = v16;
    }
    sub_1A73BAA94((uint64_t)v8);
  }
  unsigned int v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
  BOOL v18 = v17 == 5;
  if (v17 >= 5)
  {
    uint64_t v19 = v10;
    if (!v18) {
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v19 = v9;
  }
  if (v19 > v12) {
    uint64_t v12 = v19;
  }
LABEL_29:
  uint64_t v20 = *(void **)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  if (v20)
  {
    BOOL v21 = sub_1A72DE5A0(v20, qword_1EFC904F0);
    uint64_t v22 = v10 <= v12 ? v12 : v10;
    if (v21) {
      uint64_t v12 = v22;
    }
  }
  int v23 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  if (v10 <= v12) {
    uint64_t v24 = v12;
  }
  else {
    uint64_t v24 = v10;
  }
  if ((v23 & 1) != 0 || v23 == 2) {
    uint64_t v26 = v12;
  }
  else {
    uint64_t v26 = v24;
  }
  uint64_t v28 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  uint64_t v27 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  uint64_t v30 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  uint64_t v29 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  uint64_t v31 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  uint64_t v32 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  unsigned int v33 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  if (v33 > 1)
  {
    if (v33 == 255) {
      goto LABEL_53;
    }
    if (v30 | v27 | v28 | v29 | v31 | v32)
    {
      sub_1A7384C44(1, 0, 0, v29, *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32), *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40), 2);
      uint64_t v9 = v10;
      goto LABEL_51;
    }
  }
  else if (*(unsigned char *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48))
  {
    uint64_t v37 = *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
    swift_bridgeObjectRetain();
    uint64_t v29 = v37;
  }
  sub_1A7384C44(v28, v27, v30, v29, v31, v32, v33);
LABEL_51:
  if (v9 > v26) {
    uint64_t v26 = v9;
  }
LABEL_53:
  if (v10 <= v26) {
    uint64_t v34 = v26;
  }
  else {
    uint64_t v34 = v10;
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists)) {
    return v34;
  }
  else {
    return v26;
  }
}

uint64_t static REMCustomSmartListFilterDescriptor.DataSerializationVersion.< infix(_:_:)(unsigned char *a1, unsigned char *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t REMCustomSmartListFilterDescriptor.DataSerializationVersion.rawValue.getter()
{
  if (*v0) {
    return 2;
  }
  else {
    return 1;
  }
}

uint64_t REMCustomSmartListFilterDescriptor.DataSerializationVersion.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if ((unsigned __int16)result == 2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if ((unsigned __int16)result == 1) {
    char v3 = 0;
  }
  else {
    char v3 = v2;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1A73B4AF0()
{
  return sub_1A7574110();
}

uint64_t sub_1A73B4B40()
{
  return sub_1A75740F0();
}

uint64_t sub_1A73B4B78()
{
  return sub_1A7574110();
}

unsigned __int16 *sub_1A73B4BC4@<X0>(unsigned __int16 *result@<X0>, char *a2@<X8>)
{
  int v2 = *result;
  if (v2 == 2) {
    char v3 = 1;
  }
  else {
    char v3 = 2;
  }
  if (v2 == 1) {
    char v4 = 0;
  }
  else {
    char v4 = v3;
  }
  *a2 = v4;
  return result;
}

void sub_1A73B4BE4(__int16 *a1@<X8>)
{
  if (*v1) {
    __int16 v2 = 2;
  }
  else {
    __int16 v2 = 1;
  }
  *a1 = v2;
}

uint64_t sub_1A73B4BFC(unsigned char *a1, unsigned char *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t sub_1A73B4C10(unsigned char *a1, unsigned char *a2)
{
  return *a2 & 1 | ((*a1 & 1) == 0);
}

uint64_t sub_1A73B4C24(unsigned char *a1, unsigned char *a2)
{
  return *a1 & 1 | ((*a2 & 1) == 0);
}

uint64_t sub_1A73B4C38(unsigned char *a1, unsigned char *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t static REMCustomSmartListFilterDescriptor.toSerializationVersion(from:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  BOOL v3 = *MEMORY[0x1E4F95118] != result && *MEMORY[0x1E4F95108] == result;
  *a2 = v3;
  return result;
}

void *REMCustomSmartListFilterDescriptor.toData(serializationVersion:)(unsigned char *a1)
{
  v8[1] = *(id *)MEMORY[0x1E4F143B8];
  LOBYTE(v8[0]) = *a1;
  sub_1A73B4DA8((unsigned __int8 *)v8);
  if (!v1)
  {
    BOOL v3 = self;
    char v4 = (void *)sub_1A75723D0();
    swift_bridgeObjectRelease();
    v8[0] = 0;
    id v5 = objc_msgSend(v3, sel_dataWithJSONObject_options_error_, v4, 0, v8);

    id v6 = v8[0];
    if (v5)
    {
      __int16 v2 = (void *)sub_1A7571A20();
    }
    else
    {
      __int16 v2 = v6;
      sub_1A7571850();

      swift_willThrow();
    }
  }
  return v2;
}

uint64_t sub_1A73B4DA8(unsigned __int8 *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = &v57[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v57[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v13 = *a1;
  uint64_t v14 = MEMORY[0x1E4FBC868];
  if (v13 == 1)
  {
    BOOL v15 = *(unsigned char *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation) == 0;
    uint64_t v16 = 6581857;
    if (*(unsigned char *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation)) {
      uint64_t v16 = 29295;
    }
    unint64_t v17 = 0xE300000000000000;
    *((void *)&v63 + 1) = MEMORY[0x1E4FBB1A0];
    if (!v15) {
      unint64_t v17 = 0xE200000000000000;
    }
    *(void *)&long long v62 = v16;
    *((void *)&v62 + 1) = v17;
    sub_1A72BEE44(&v62, &v66);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v68 = v14;
    sub_1A72D65D4(&v66, 0x6F6974617265706FLL, 0xE90000000000006ELL, isUniquelyReferenced_nonNull_native);
    uint64_t v14 = v68;
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags;
  if (*(void *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags) != 2)
  {
    char v20 = *(unsigned char *)(v19 + 16);
    uint64_t v21 = *(void *)(v19 + 8);
    *(void *)&long long v62 = *(void *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
    *((void *)&v62 + 1) = v21;
    LOBYTE(v63) = v20;
    LOBYTE(v66) = v13;
    unint64_t v22 = sub_1A73B57BC(&v66);
    *((void *)&v63 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
    *(void *)&long long v62 = v22;
    sub_1A72BEE44(&v62, &v66);
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v68 = v14;
    sub_1A72D65D4(&v66, 0x7367617468736168, 0xE800000000000000, v23);
    uint64_t v14 = v68;
    swift_bridgeObjectRelease();
  }
  sub_1A72BF1E8(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v8, (uint64_t *)&unk_1E96F2370);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A72CB560((uint64_t)v8, (uint64_t *)&unk_1E96F2370);
    goto LABEL_16;
  }
  sub_1A73BAA30((uint64_t)v8, (uint64_t)v12);
  if (v13)
  {
    unint64_t v24 = sub_1A73B6680();
    if (v2)
    {
LABEL_13:
      sub_1A73BAA94((uint64_t)v12);
LABEL_46:
      swift_bridgeObjectRelease();
      return v14;
    }
  }
  else
  {
    unint64_t v24 = sub_1A73B61C8();
    if (v2) {
      goto LABEL_13;
    }
  }
  unint64_t v25 = v24;
  *((void *)&v63 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
  *(void *)&long long v62 = v25;
  sub_1A72BEE44(&v62, &v66);
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v68 = v14;
  sub_1A72D65D4(&v66, 1702125924, 0xE400000000000000, v26);
  uint64_t v14 = v68;
  swift_bridgeObjectRelease();
  sub_1A73BAA94((uint64_t)v12);
LABEL_16:
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time) == 6)
  {
    uint64_t v61 = v14;
  }
  else
  {
    LOBYTE(v62) = *(unsigned char *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
    unint64_t v27 = sub_1A73B8A5C();
    *((void *)&v63 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
    *(void *)&long long v62 = v27;
    sub_1A72BEE44(&v62, &v66);
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v68 = v14;
    sub_1A72D65D4(&v66, 1701669236, 0xE400000000000000, v28);
    uint64_t v61 = v68;
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = *(void *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  if (v29)
  {
    int64_t v30 = *(void *)(v29 + 16);
    uint64_t v31 = MEMORY[0x1E4FBC860];
    if (v30)
    {
      int v58 = v13;
      uint64_t v59 = v4;
      uint64_t v60 = v2;
      *(void *)&long long v62 = MEMORY[0x1E4FBC860];
      sub_1A72D2D00(0, v30, 0);
      uint64_t v31 = v62;
      uint64_t v32 = (uint64_t *)(v29 + 32);
      do
      {
        uint64_t v34 = *v32++;
        uint64_t v33 = v34;
        BOOL v35 = v34 == 1;
        if (v34 == 1) {
          uint64_t v36 = 7827308;
        }
        else {
          uint64_t v36 = 1701736302;
        }
        if (v35) {
          unint64_t v37 = 0xE300000000000000;
        }
        else {
          unint64_t v37 = 0xE400000000000000;
        }
        if (v33 == 2)
        {
          uint64_t v36 = 0x6D756964656DLL;
          unint64_t v37 = 0xE600000000000000;
        }
        if (v33 == 3) {
          uint64_t v38 = 1751607656;
        }
        else {
          uint64_t v38 = v36;
        }
        if (v33 == 3) {
          unint64_t v39 = 0xE400000000000000;
        }
        else {
          unint64_t v39 = v37;
        }
        *(void *)&long long v62 = v31;
        unint64_t v41 = *(void *)(v31 + 16);
        unint64_t v40 = *(void *)(v31 + 24);
        if (v41 >= v40 >> 1)
        {
          sub_1A72D2D00(v40 > 1, v41 + 1, 1);
          uint64_t v31 = v62;
        }
        *(void *)(v31 + 16) = v41 + 1;
        uint64_t v42 = v31 + 16 * v41;
        *(void *)(v42 + 32) = v38;
        *(void *)(v42 + 40) = v39;
        --v30;
      }
      while (v30);
      uint64_t v4 = v59;
      uint64_t v3 = v60;
      int v13 = v58;
    }
    *((void *)&v63 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    *(void *)&long long v62 = v31;
    sub_1A72BEE44(&v62, &v66);
    uint64_t v43 = v61;
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v68 = v43;
    sub_1A72D65D4(&v66, 0x697469726F697270, 0xEA00000000007365, v44);
    uint64_t v14 = v68;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v61;
  }
  int v45 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  if (v45 != 2)
  {
    *((void *)&v63 + 1) = MEMORY[0x1E4FBB390];
    LOBYTE(v62) = v45 & 1;
    sub_1A72BEE44(&v62, &v66);
    char v46 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v68 = v14;
    sub_1A72D65D4(&v66, 0x64656767616C66, 0xE700000000000000, v46);
    uint64_t v14 = v68;
    swift_bridgeObjectRelease();
  }
  uint64_t v47 = (long long *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  int v48 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  if (v48 != 255)
  {
    long long v49 = v47[1];
    long long v62 = *v47;
    long long v63 = v49;
    long long v64 = v47[2];
    char v65 = v48;
    LOBYTE(v68) = v13;
    unint64_t v50 = sub_1A73B58DC(&v68);
    if (v3) {
      goto LABEL_46;
    }
    unint64_t v51 = v50;
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
    *(void *)&long long v66 = v51;
    sub_1A72BEE44(&v66, &v62);
    char v52 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v68 = v14;
    sub_1A72D65D4(&v62, 0x6E6F697461636F6CLL, 0xE800000000000000, v52);
    uint64_t v14 = v68;
    swift_bridgeObjectRelease();
  }
  if (v13 && *(void *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists))
  {
    uint64_t v53 = *(void *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
    *(void *)&long long v62 = *(void *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
    *((void *)&v62 + 1) = v53;
    unint64_t v54 = sub_1A73B93AC();
    *((void *)&v63 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
    *(void *)&long long v62 = v54;
    sub_1A72BEE44(&v62, &v66);
    char v55 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v68 = v14;
    sub_1A72D65D4(&v66, 0x737473696CLL, 0xE500000000000000, v55);
    uint64_t v14 = v68;
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_1A73B54B4()
{
  uint64_t v1 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A73BB0B4(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = MEMORY[0x1E4F95118];
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1A73BAA94((uint64_t)v3);
      uint64_t v5 = MEMORY[0x1E4F95118];
      break;
    case 2:
      if (v3[17]) {
        uint64_t v5 = MEMORY[0x1E4F95108];
      }
      break;
    case 3:
    case 4:
    case 5:
      sub_1A73BAA94((uint64_t)v3);
      goto LABEL_3;
    case 6:
      return *(void *)v5;
    default:
LABEL_3:
      uint64_t v5 = MEMORY[0x1E4F95108];
      break;
  }
  return *(void *)v5;
}

BOOL REMCustomSmartListFilterDescriptor.requiresSydneyRomeKincaid.getter()
{
  return REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter() >= *MEMORY[0x1E4F95108];
}

char *REMCustomSmartListFilterDescriptor.__allocating_init(data:serializationVersion:)(uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  return sub_1A73B9D80(a1, a2, a3);
}

uint64_t sub_1A73B5610@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  if ((*a2 & 1) != 0
    && (uint64_t v6 = sub_1A72DA268(a1), v7)
    && (*(void *)&v14[0] = v6,
        *((void *)&v14[0] + 1) = v7,
        sub_1A7572850(),
        uint64_t v8 = sub_1A7573970(),
        swift_bridgeObjectRelease(),
        !v8))
  {
    uint64_t result = swift_bridgeObjectRelease();
    long long v10 = xmmword_1A7578DA0;
    long long v11 = 0uLL;
    char v13 = 2;
    long long v12 = 0uLL;
  }
  else
  {
    uint64_t result = sub_1A73B8EC0(a1, (uint64_t)v14);
    if (v3) {
      return result;
    }
    long long v10 = v14[0];
    long long v11 = v14[1];
    long long v12 = v14[2];
    char v13 = v15;
  }
  *(_OWORD *)a3 = v10;
  *(_OWORD *)(a3 + 16) = v11;
  *(_OWORD *)(a3 + 32) = v12;
  *(unsigned char *)(a3 + 48) = v13;
  return result;
}

char *REMCustomSmartListFilterDescriptor.__allocating_init(data:serializationVersion:)(uint64_t a1, unint64_t a2, __int16 a3)
{
  if (a3 == 1)
  {
    unsigned __int8 v5 = 0;
    goto LABEL_5;
  }
  if (a3 == 2)
  {
    unsigned __int8 v5 = 1;
LABEL_5:
    unsigned __int8 v9 = v5;
    return sub_1A73B9D80(a1, a2, &v9);
  }
  sub_1A73BAAF0();
  swift_allocError();
  _WORD *v8 = a3;
  swift_willThrow();
  return (char *)sub_1A72E3460(a1, a2);
}

unint64_t sub_1A73B57BC(unsigned char *a1)
{
  uint64_t v2 = *v1;
  if (*a1) {
    return sub_1A73B59C8();
  }
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
    if (v2 == 1)
    {
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
      *(void *)(inited + 32) = 7958113;
      *(void *)(inited + 40) = 0xE300000000000000;
      *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
      *(void *)(inited + 48) = 0;
      *(void *)(inited + 56) = 0xE000000000000000;
    }
    else
    {
      uint64_t v5 = swift_initStackObject();
      *(_OWORD *)(v5 + 16) = xmmword_1A75785A0;
      *(void *)(v5 + 32) = 0x7367617468736168;
      *(void *)(v5 + 40) = 0xE800000000000000;
      *(void *)(v5 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
      *(void *)(v5 + 48) = v2;
      swift_bridgeObjectRetain();
      uint64_t inited = v5;
    }
  }
  else
  {
    uint64_t inited = MEMORY[0x1E4FBC860];
  }
  return sub_1A72B0944(inited);
}

unint64_t sub_1A73B58DC(unsigned char *a1)
{
  if ((*a1 & 1) == 0) {
    return sub_1A73B8B94();
  }
  if (*(unsigned __int8 *)(v1 + 48) < 2u
    || (*(void *)(v1 + 16) | *(void *)(v1 + 8) | *(void *)v1 | *(void *)(v1 + 32) | *(void *)(v1 + 24) | *(void *)(v1 + 40)) == 0)
  {
    return sub_1A73B8B94();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
  *(void *)(inited + 32) = 0x697461636F4C6F6ELL;
  *(void *)(inited + 40) = 0xEA00000000006E6FLL;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = 0;
  *(void *)(inited + 56) = 0xE000000000000000;
  return sub_1A72B0944(inited);
}

unint64_t sub_1A73B59C8()
{
  uint64_t v1 = *v0;
  if (!*v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
    uint64_t inited = swift_initStackObject();
    uint64_t v3 = inited;
    *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
    uint64_t v4 = 0x6465676761746E75;
    unint64_t v5 = 0xE800000000000000;
    goto LABEL_5;
  }
  if (v1 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
    uint64_t inited = swift_initStackObject();
    uint64_t v3 = inited;
    *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
    uint64_t v4 = 7958113;
    unint64_t v5 = 0xE300000000000000;
LABEL_5:
    *(void *)(inited + 32) = v4;
    *(void *)(inited + 40) = v5;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0xE000000000000000;
    return sub_1A72B0944(v3);
  }
  char v6 = *((unsigned char *)v0 + 16);
  uint64_t v7 = v0[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
  uint64_t v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1A75785A0;
  *(void *)(v3 + 32) = 0x7367617468736168;
  *(void *)(v3 + 40) = 0xE800000000000000;
  uint64_t v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A7578790;
  *(void *)(v8 + 32) = 0x6564756C636E69;
  *(void *)(v8 + 40) = 0xE700000000000000;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  *(void *)(v8 + 48) = v1;
  *(void *)(v8 + 72) = v9;
  *(void *)(v8 + 80) = 0x6564756C637865;
  *(void *)(v8 + 88) = 0xE700000000000000;
  *(void *)(v8 + 96) = v7;
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = 0x6F6974617265706FLL;
  uint64_t v10 = 29295;
  if ((v6 & 1) == 0) {
    uint64_t v10 = 6581857;
  }
  unint64_t v11 = 0xE200000000000000;
  if ((v6 & 1) == 0) {
    unint64_t v11 = 0xE300000000000000;
  }
  *(void *)(v8 + 168) = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 136) = 0xE90000000000006ELL;
  *(void *)(v8 + 144) = v10;
  *(void *)(v8 + 152) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1A72B0944(v8);
  *(void *)(v3 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
  *(void *)(v3 + 48) = v12;
  return sub_1A72B0944(v3);
}

uint64_t sub_1A73B5BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A72DA268(a1);
  if (!v5) {
    goto LABEL_12;
  }
  uint64_t v6 = v4;
  uint64_t v7 = v5;
  *(void *)&v17[0] = v4;
  *((void *)&v17[0] + 1) = v5;
  swift_bridgeObjectRetain();
  sub_1A7572850();
  unint64_t v8 = sub_1A7573970();
  swift_bridgeObjectRelease();
  if (v8 > 1)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    sub_1A73BB118();
    swift_allocError();
    *(_OWORD *)uint64_t v13 = 0u;
    *(_OWORD *)(v13 + 16) = 0u;
    *(unsigned char *)(v13 + 32) = 0;
    return swift_willThrow();
  }
  if (*(void *)(a1 + 16) && (unint64_t v9 = sub_1A72B2210(v6, v7), (v10 & 1) != 0)) {
    sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v9, (uint64_t)v17);
  }
  else {
    memset(v17, 0, sizeof(v17));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    uint64_t v12 = 0;
    uint64_t v11 = 1;
    goto LABEL_14;
  }
  sub_1A72BF1E8((uint64_t)v17, (uint64_t)v16, &qword_1EB705938);
  if (v16[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    if (swift_dynamicCast())
    {
      uint64_t v11 = v18;
      uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_14:
      uint64_t result = sub_1A72CB560((uint64_t)v17, &qword_1EB705938);
      *(void *)a2 = v11;
      *(void *)(a2 + 8) = v12;
      *(unsigned char *)(a2 + 16) = 0;
      return result;
    }
  }
  else
  {
    sub_1A72CB560((uint64_t)v16, &qword_1EB705938);
  }
  sub_1A73BB118();
  swift_allocError();
  *(_OWORD *)uint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(unsigned char *)(v15 + 32) = 0;
  swift_willThrow();
  return sub_1A72CB560((uint64_t)v17, &qword_1EB705938);
}

uint64_t sub_1A73B5DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A72DA268(a1);
  if (!v5) {
    goto LABEL_7;
  }
  uint64_t v6 = v4;
  uint64_t v7 = v5;
  *(void *)&v26[0] = v4;
  *((void *)&v26[0] + 1) = v5;
  swift_bridgeObjectRetain();
  sub_1A7572850();
  unint64_t v8 = sub_1A7573970();
  swift_bridgeObjectRelease();
  if (v8 >= 3)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    sub_1A73BB118();
    swift_allocError();
    *(void *)uint64_t v11 = 1;
    *(void *)(v11 + 8) = 0;
    *(void *)(v11 + 16) = 0;
    *(void *)(v11 + 24) = 0;
    *(unsigned char *)(v11 + 32) = 0;
    return swift_willThrow();
  }
  if (*(void *)(a1 + 16) && (unint64_t v9 = sub_1A72B2210(v6, v7), (v10 & 1) != 0)) {
    sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v9, (uint64_t)v26);
  }
  else {
    memset(v26, 0, sizeof(v26));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(_BYTE)v8)
  {
    uint64_t v14 = v8;
    uint64_t v13 = v8;
    goto LABEL_13;
  }
  if (v8 == 1)
  {
    uint64_t v13 = 0;
    LOBYTE(v8) = 0;
    uint64_t v14 = 1;
LABEL_13:
    uint64_t result = sub_1A72CB560((uint64_t)v26, &qword_1EB705938);
    *(void *)a2 = v14;
    *(void *)(a2 + 8) = v13;
    *(unsigned char *)(a2 + 16) = v8;
    return result;
  }
  sub_1A72BF1E8((uint64_t)v26, (uint64_t)&v24, &qword_1EB705938);
  if (!*((void *)&v25 + 1)) {
    goto LABEL_34;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
  if (swift_dynamicCast())
  {
    if (!*(void *)(v23 + 16)) {
      goto LABEL_26;
    }
    unint64_t v15 = sub_1A72B2210(0x6564756C636E69, 0xE700000000000000);
    if ((v16 & 1) == 0) {
      goto LABEL_26;
    }
    sub_1A72BEE98(*(void *)(v23 + 56) + 32 * v15, (uint64_t)&v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_26;
    }
    uint64_t v14 = v23;
    if (!*(void *)(v23 + 16)
      || (unint64_t v17 = sub_1A72B2210(0x6564756C637865, 0xE700000000000000), (v18 & 1) == 0)
      || (sub_1A72BEE98(*(void *)(v23 + 56) + 32 * v17, (uint64_t)&v24), (swift_dynamicCast() & 1) == 0))
    {
LABEL_25:
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    uint64_t v13 = v23;
    if (*(void *)(v23 + 16) && (unint64_t v19 = sub_1A72B2210(0x6F6974617265706FLL, 0xE90000000000006ELL), (v20 & 1) != 0))
    {
      sub_1A72BEE98(*(void *)(v23 + 56) + 32 * v19, (uint64_t)&v24);
    }
    else
    {
      long long v24 = 0u;
      long long v25 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v25 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v21 = sub_1A7573970();
        swift_bridgeObjectRelease();
        if (v21 == 1)
        {
          LOBYTE(v8) = 1;
          goto LABEL_13;
        }
        if (!v21)
        {
          LOBYTE(v8) = 0;
          goto LABEL_13;
        }
      }
      goto LABEL_25;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_34:
    sub_1A72CB560((uint64_t)&v24, &qword_1EB705938);
  }
LABEL_35:
  sub_1A73BB118();
  swift_allocError();
  *(void *)uint64_t v22 = 1;
  *(void *)(v22 + 8) = 0;
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  *(unsigned char *)(v22 + 32) = 0;
  swift_willThrow();
  return sub_1A72CB560((uint64_t)v26, &qword_1EB705938);
}

unint64_t sub_1A73B61C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (unsigned __int8 *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A73BB0B4(v1, (uint64_t)v7);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A734E5D8((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1EB7058C8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
      *(void *)(inited + 32) = 0x676E615265746164;
      *(void *)(inited + 40) = 0xE900000000000065;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1A7578D60;
      if (qword_1E96F07D8 != -1) {
        swift_once();
      }
      uint64_t v11 = (void *)qword_1E96F28C0;
      uint64_t v12 = (void *)sub_1A7571AB0();
      id v13 = objc_msgSend(v11, sel_stringFromDate_, v12);

      uint64_t v14 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v16 = v15;

      *(void *)(v10 + 32) = v14;
      *(void *)(v10 + 40) = v16;
      unint64_t v17 = (void *)qword_1E96F28C0;
      char v18 = (void *)sub_1A7571AB0();
      id v19 = objc_msgSend(v17, sel_stringFromDate_, v18);

      uint64_t v20 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v22 = v21;

      *(void *)(v10 + 48) = v20;
      *(void *)(v10 + 56) = v22;
      *(void *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
      *(void *)(inited + 48) = v10;
      uint64_t v7 = (unsigned __int8 *)sub_1A72B0944(inited);
      sub_1A72CB560((uint64_t)v4, (uint64_t *)&unk_1EB7058C8);
      return (unint64_t)v7;
    case 2u:
      int v23 = *v7;
      uint64_t v24 = *((void *)v7 + 1);
      uint64_t v25 = v7[16];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
      uint64_t v26 = swift_initStackObject();
      *(_OWORD *)(v26 + 16) = xmmword_1A75785A0;
      strcpy((char *)(v26 + 32), "relativeRange");
      *(_WORD *)(v26 + 46) = -4864;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
      uint64_t v27 = swift_allocObject();
      char v28 = (void *)v27;
      *(_OWORD *)(v27 + 16) = xmmword_1A7578790;
      uint64_t v29 = 0x747361506E69;
      if (v23) {
        uint64_t v29 = 0x7478654E6E69;
      }
      *(void *)(v27 + 32) = v29;
      *(void *)(v27 + 40) = 0xE600000000000000;
      v35[33] = v24;
      *(void *)(v27 + 48) = sub_1A7573BC0();
      v28[7] = v30;
      unint64_t v31 = 0xE400000000000000;
      uint64_t v32 = 1920298856;
      switch(v25)
      {
        case 1:
          unint64_t v31 = 0xE300000000000000;
          uint64_t v32 = 7954788;
          break;
        case 2:
          uint64_t v32 = 1801807223;
          break;
        case 3:
          unint64_t v31 = 0xE500000000000000;
          uint64_t v32 = 0x68746E6F6DLL;
          break;
        case 4:
          uint64_t v32 = 1918985593;
          break;
        default:
          break;
      }
      v28[8] = v32;
      v28[9] = v31;
      *(void *)(v26 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
      *(void *)(v26 + 48) = v28;
      uint64_t v33 = v26;
      return sub_1A72B0944(v33);
    case 3u:
    case 4u:
    case 5u:
      sub_1A73BAA94((uint64_t)v7);
      goto LABEL_3;
    case 6u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
      uint64_t v33 = swift_initStackObject();
      *(_OWORD *)(v33 + 16) = xmmword_1A75785A0;
      *(void *)(v33 + 32) = 7958113;
      *(void *)(v33 + 40) = 0xE300000000000000;
      *(void *)(v33 + 72) = MEMORY[0x1E4FBB1A0];
      *(void *)(v33 + 48) = 0;
      *(void *)(v33 + 56) = 0xE000000000000000;
      return sub_1A72B0944(v33);
    default:
LABEL_3:
      sub_1A73BAAF0();
      swift_allocError();
      _WORD *v8 = 1;
      swift_willThrow();
      return (unint64_t)v7;
  }
}

unint64_t sub_1A73B6680()
{
  uint64_t v2 = sub_1A7571B60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A73BB0B4(v0, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A73BAA94((uint64_t)v8);
      goto LABEL_4;
    case 2u:
      char v12 = *v8;
      uint64_t v13 = *((void *)v8 + 1);
      char v14 = v8[16];
      char v15 = v8[17];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
      strcpy((char *)(inited + 32), "relativeRange");
      *(_WORD *)(inited + 46) = -4864;
      v26[80] = v12;
      uint64_t v27 = v13;
      char v28 = v14;
      char v29 = v15;
      unint64_t v17 = sub_1A73B8308();
      *(void *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
      *(void *)(inited + 48) = v17;
      uint64_t v10 = inited;
      return sub_1A72B0944(v10);
    case 3u:
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v8, v2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_1A75785A0;
      *(void *)(v18 + 32) = 0x614465726F666562;
      *(void *)(v18 + 40) = 0xEA00000000006574;
      if (qword_1E96F07D8 == -1) {
        goto LABEL_12;
      }
      goto LABEL_17;
    case 4u:
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v8, v2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_1A75785A0;
      *(void *)(v18 + 32) = 0x657461446E6FLL;
      *(void *)(v18 + 40) = 0xE600000000000000;
      if (qword_1E96F07D8 == -1) {
        goto LABEL_12;
      }
      goto LABEL_17;
    case 5u:
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v8, v2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_1A75785A0;
      *(void *)(v18 + 32) = 0x7461447265746661;
      *(void *)(v18 + 40) = 0xE900000000000065;
      if (qword_1E96F07D8 == -1) {
        goto LABEL_12;
      }
LABEL_17:
      swift_once();
LABEL_12:
      id v19 = (void *)qword_1E96F28C0;
      uint64_t v20 = (void *)sub_1A7571AB0();
      id v21 = objc_msgSend(v19, sel_stringFromDate_, v20);

      uint64_t v22 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v24 = v23;

      *(void *)(v18 + 72) = MEMORY[0x1E4FBB1A0];
      *(void *)(v18 + 48) = v22;
      *(void *)(v18 + 56) = v24;
      unint64_t v8 = (unsigned char *)sub_1A72B0944(v18);
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
      return (unint64_t)v8;
    case 6u:
LABEL_4:
      unint64_t v11 = sub_1A73B61C8();
      if (v1) {
        return (unint64_t)v8;
      }
      return v11;
    case 7u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
      uint64_t v10 = swift_initStackObject();
      *(_OWORD *)(v10 + 16) = xmmword_1A75785A0;
      *(void *)(v10 + 32) = 0x657461446F6ELL;
      *(void *)(v10 + 40) = 0xE600000000000000;
      *(void *)(v10 + 72) = MEMORY[0x1E4FBB1A0];
      *(void *)(v10 + 48) = 0;
      *(void *)(v10 + 56) = 0xE000000000000000;
      return sub_1A72B0944(v10);
    default:
      char v9 = *v8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
      uint64_t v10 = swift_initStackObject();
      *(_OWORD *)(v10 + 16) = xmmword_1A75785A0;
      *(void *)(v10 + 32) = 0x7961646F74;
      *(void *)(v10 + 40) = 0xE500000000000000;
      *(void *)(v10 + 72) = MEMORY[0x1E4FBB390];
      *(unsigned char *)(v10 + 48) = v9;
      return sub_1A72B0944(v10);
  }
}

uint64_t sub_1A73B6BCC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB703D70);
  uint64_t v5 = MEMORY[0x1F4188790](v111);
  float64x2_t v109 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  float64x2_t v106 = (char *)&v102 - v7;
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
  MEMORY[0x1F4188790](v107);
  float64x2_t v108 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1F4188790](v115);
  uint64_t v105 = (uint64_t)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v112 = (uint64_t)&v102 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v102 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v102 - v19;
  uint64_t v21 = sub_1A7571B60();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v113 = v21;
  uint64_t v114 = v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  double v110 = (char *)&v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v102 - v25;
  uint64_t v27 = sub_1A72DA268(a1);
  if (!v28) {
    goto LABEL_7;
  }
  uint64_t v29 = v27;
  uint64_t v30 = v28;
  float64x2_t v103 = a2;
  uint64_t v104 = v2;
  *(void *)&v118[0] = v27;
  *((void *)&v118[0] + 1) = v28;
  swift_bridgeObjectRetain();
  sub_1A7572850();
  unint64_t v31 = sub_1A7573970();
  swift_bridgeObjectRelease();
  if (v31 >= 3)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    sub_1A73BB118();
    swift_allocError();
    *(_OWORD *)uint64_t v34 = 0u;
    *(_OWORD *)(v34 + 16) = 0u;
    *(unsigned char *)(v34 + 32) = 0;
    return swift_willThrow();
  }
  if (*(void *)(a1 + 16) && (unint64_t v32 = sub_1A72B2210(v29, v30), (v33 & 1) != 0)) {
    sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v32, (uint64_t)v118);
  }
  else {
    memset(v118, 0, 32);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(_BYTE)v31)
  {
    sub_1A72CB560((uint64_t)v118, &qword_1EB705938);
    return swift_storeEnumTagMultiPayload();
  }
  if (v31 == 1)
  {
    sub_1A72BF1E8((uint64_t)v118, (uint64_t)v116, &qword_1EB705938);
    if (v117)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
      if (swift_dynamicCast())
      {
        uint64_t v36 = v119;
        if (v119[2] == 2)
        {
          uint64_t v37 = qword_1E96F07D8;
          swift_bridgeObjectRetain();
          if (v37 != -1) {
            swift_once();
          }
          uint64_t v38 = (void *)qword_1E96F28C0;
          unint64_t v39 = (void *)sub_1A75725E0();
          id v40 = objc_msgSend(v38, sel_dateFromString_, v39);

          if (v40)
          {
            sub_1A7571B20();

            uint64_t v41 = v114;
            uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v114 + 56);
            uint64_t v43 = v18;
            uint64_t v44 = 0;
          }
          else
          {
            uint64_t v41 = v114;
            uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v114 + 56);
            uint64_t v43 = v18;
            uint64_t v44 = 1;
          }
          uint64_t v48 = v113;
          float64x2_t v102 = v42;
          v42(v43, v44, 1, v113);
          sub_1A734E5D8((uint64_t)v18, (uint64_t)v20, &qword_1EB704C60);
          swift_bridgeObjectRelease();
          char v47 = v41 + 48;
          long long v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
          if (v49(v20, 1, v48) == 1)
          {
            swift_bridgeObjectRelease();
            sub_1A72CB560((uint64_t)v20, &qword_1EB704C60);
            goto LABEL_87;
          }
          unint64_t v51 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
          uint64_t v50 = v41 + 32;
          char v52 = v20;
          uint64_t v53 = v51;
          v51(v26, v52, v48);
          if (v36[2] >= 2uLL)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            unint64_t v54 = (void *)qword_1E96F28C0;
            char v55 = (void *)sub_1A75725E0();
            id v56 = objc_msgSend(v54, sel_dateFromString_, v55);

            if (v56)
            {
              sub_1A7571B20();

              uint64_t v57 = 0;
            }
            else
            {
              uint64_t v57 = 1;
            }
            uint64_t v65 = v113;
            uint64_t v64 = v114;
            v102(v13, v57, 1, v113);
            uint64_t v66 = (uint64_t)v13;
            uint64_t v67 = v112;
            sub_1A734E5D8(v66, v112, &qword_1EB704C60);
            swift_bridgeObjectRelease();
            if (v49((char *)v67, 1, v65) == 1)
            {
              (*(void (**)(char *, uint64_t))(v64 + 8))(v26, v65);
              sub_1A72CB560(v67, &qword_1EB704C60);
              goto LABEL_87;
            }
            uint64_t v68 = v110;
            double v69 = v53;
            v53(v110, (char *)v67, v65);
            sub_1A73BB16C();
            uint64_t v70 = v65;
            char v71 = sub_1A75725A0();
            uint64_t result = sub_1A72CB560((uint64_t)v118, &qword_1EB705938);
            if (v71)
            {
              uint64_t v72 = v111;
              unint64_t v73 = v106;
              unint64_t v74 = &v106[*(int *)(v111 + 48)];
              v69(v106, v26, v70);
              uint64_t v113 = (uint64_t)v74;
              v69(v74, v68, v70);
              uint64_t v75 = *(int *)(v72 + 48);
              uint64_t v76 = v109;
              uint64_t v112 = v50;
              unint64_t v77 = &v109[v75];
              double v110 = &v109[v75];
              uint64_t v78 = v114;
              uint64_t v79 = v69;
              float64x2_t v80 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
              v80(v109, v73, v70);
              v80(v77, v74, v70);
              uint64_t v81 = (uint64_t)v108;
              v79(v108, v76, v70);
              float64x2_t v82 = *(void (**)(char *, uint64_t))(v78 + 8);
              v82(v110, v70);
              float64x2_t v83 = &v76[*(int *)(v111 + 48)];
              v79(v76, v73, v70);
              v79(v83, (char *)v113, v70);
              v79((char *)(v81 + *(int *)(v107 + 36)), v83, v70);
              v82(v76, v70);
              uint64_t v84 = v105;
              sub_1A734E5D8(v81, v105, (uint64_t *)&unk_1EB7058C8);
              swift_storeEnumTagMultiPayload();
              return sub_1A73BAA30(v84, (uint64_t)v103);
            }
            __break(1u);
            goto LABEL_101;
          }
          __break(1u);
          while (1)
          {
            __break(1u);
LABEL_99:
            uint64_t v61 = (unsigned __int8 *)sub_1A7573680();
LABEL_42:
            uint64_t v62 = (uint64_t)sub_1A749267C(v61, v59, 10);
            LOBYTE(v45) = v63 & 1;
LABEL_82:
            if (v45) {
              break;
            }
            if (v36[2] >= 3uLL)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              char v94 = sub_1A73B9CEC();
              if (v94 == 5) {
                goto LABEL_87;
              }
              char v95 = v94;
              sub_1A72CB560((uint64_t)v118, &qword_1EB705938);
              double v96 = v103;
              *float64x2_t v103 = v47;
              *((void *)v96 + 1) = v62;
              v96[16] = v95;
              v96[17] = 0;
              return swift_storeEnumTagMultiPayload();
            }
          }
        }
LABEL_86:
        swift_bridgeObjectRelease();
      }
LABEL_87:
      sub_1A73BB118();
      swift_allocError();
      *(_OWORD *)uint64_t v97 = 0u;
      *(_OWORD *)(v97 + 16) = 0u;
      *(unsigned char *)(v97 + 32) = 0;
      swift_willThrow();
      return sub_1A72CB560((uint64_t)v118, &qword_1EB705938);
    }
LABEL_25:
    sub_1A72CB560((uint64_t)v116, &qword_1EB705938);
    goto LABEL_87;
  }
  sub_1A72BF1E8((uint64_t)v118, (uint64_t)v116, &qword_1EB705938);
  if (!v117) {
    goto LABEL_25;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_87;
  }
  uint64_t v36 = v119;
  if (v119[2] != 3) {
    goto LABEL_86;
  }
  uint64_t v45 = v119[5];
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  if (v46 == 1)
  {
    char v47 = 1;
  }
  else
  {
    if (v46) {
      goto LABEL_86;
    }
    char v47 = 0;
  }
  if (v36[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_96;
  }
  uint64_t v45 = v36[6];
  unint64_t v31 = v36[7];
  uint64_t v58 = HIBYTE(v31) & 0xF;
  uint64_t v59 = v45 & 0xFFFFFFFFFFFFLL;
  if ((v31 & 0x2000000000000000) != 0) {
    uint64_t v60 = HIBYTE(v31) & 0xF;
  }
  else {
    uint64_t v60 = v45 & 0xFFFFFFFFFFFFLL;
  }
  if (!v60) {
    goto LABEL_86;
  }
  if ((v31 & 0x1000000000000000) != 0)
  {
LABEL_96:
    swift_bridgeObjectRetain();
    uint64_t v62 = (uint64_t)sub_1A7492928(v45, v31, 10);
    LOBYTE(v45) = v101;
    swift_bridgeObjectRelease();
    goto LABEL_82;
  }
  if ((v31 & 0x2000000000000000) == 0)
  {
    if ((v45 & 0x1000000000000000) == 0) {
      goto LABEL_99;
    }
    uint64_t v61 = (unsigned __int8 *)((v31 & 0xFFFFFFFFFFFFFFFLL) + 32);
    goto LABEL_42;
  }
  v116[0] = v36[6];
  v116[1] = v31 & 0xFFFFFFFFFFFFFFLL;
  if (v45 != 43)
  {
    if (v45 == 45)
    {
      if (!v58)
      {
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
      if (v58 != 1 && (BYTE1(v45) - 48) <= 9u)
      {
        if (v58 == 2)
        {
          LOBYTE(v45) = 0;
          uint64_t v62 = -(uint64_t)(BYTE1(v45) - 48);
          goto LABEL_82;
        }
        if ((BYTE2(v45) - 48) <= 9u)
        {
          uint64_t v62 = -10 * (BYTE1(v45) - 48) - (BYTE2(v45) - 48);
          uint64_t v93 = v58 - 3;
          if (!v93) {
            goto LABEL_81;
          }
          uint64_t v98 = (unsigned __int8 *)v116 + 3;
          while (1)
          {
            unsigned int v99 = *v98 - 48;
            if (v99 > 9) {
              break;
            }
            uint64_t v100 = 10 * v62;
            if ((unsigned __int128)(v62 * (__int128)10) >> 64 != (10 * v62) >> 63) {
              goto LABEL_94;
            }
            uint64_t v62 = v100 - v99;
            if (__OFSUB__(v100, v99)) {
              goto LABEL_94;
            }
            LOBYTE(v45) = 0;
            ++v98;
            if (!--v93) {
              goto LABEL_82;
            }
          }
        }
      }
LABEL_69:
      uint64_t v62 = 0;
      LOBYTE(v45) = 1;
      goto LABEL_82;
    }
    if (!v58 || (v45 - 48) > 9u) {
      goto LABEL_69;
    }
    uint64_t v62 = (v45 - 48);
    if (v58 != 1)
    {
      if ((BYTE1(v45) - 48) > 9u) {
        goto LABEL_69;
      }
      uint64_t v62 = 10 * (v45 - 48) + (BYTE1(v45) - 48);
      uint64_t v89 = v58 - 2;
      if (v89)
      {
        float64x2_t v90 = (unsigned __int8 *)v116 + 2;
        while (1)
        {
          unsigned int v91 = *v90 - 48;
          if (v91 > 9) {
            goto LABEL_69;
          }
          uint64_t v92 = 10 * v62;
          if ((unsigned __int128)(v62 * (__int128)10) >> 64 != (10 * v62) >> 63) {
            goto LABEL_94;
          }
          uint64_t v62 = v92 + v91;
          if (__OFADD__(v92, v91)) {
            goto LABEL_94;
          }
          LOBYTE(v45) = 0;
          ++v90;
          if (!--v89) {
            goto LABEL_82;
          }
        }
      }
    }
    goto LABEL_81;
  }
  if (v58)
  {
    if (v58 == 1 || (BYTE1(v45) - 48) > 9u) {
      goto LABEL_69;
    }
    uint64_t v62 = (BYTE1(v45) - 48);
    if (v58 != 2)
    {
      if ((BYTE2(v45) - 48) > 9u) {
        goto LABEL_69;
      }
      uint64_t v62 = 10 * (BYTE1(v45) - 48) + (BYTE2(v45) - 48);
      uint64_t v85 = v58 - 3;
      if (v85)
      {
        unint64_t v86 = (unsigned __int8 *)v116 + 3;
        while (1)
        {
          unsigned int v87 = *v86 - 48;
          if (v87 > 9) {
            goto LABEL_69;
          }
          uint64_t v88 = 10 * v62;
          if ((unsigned __int128)(v62 * (__int128)10) >> 64 != (10 * v62) >> 63
            || (uint64_t v62 = v88 + v87, __OFADD__(v88, v87)))
          {
LABEL_94:
            uint64_t v62 = 0;
            LOBYTE(v45) = 1;
            goto LABEL_82;
          }
          LOBYTE(v45) = 0;
          ++v86;
          if (!--v85) {
            goto LABEL_82;
          }
        }
      }
    }
LABEL_81:
    LOBYTE(v45) = 0;
    goto LABEL_82;
  }
LABEL_102:
  __break(1u);
  return result;
}

void sub_1A73B78A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v86 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1F4188790](v86);
  uint64_t v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  float64x2_t v80 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  float64x2_t v83 = (char *)&v77 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v79 = (char *)&v77 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  float64x2_t v82 = (char *)&v77 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v77 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v81 = (uint64_t)&v77 - v19;
  uint64_t v20 = sub_1A7571B60();
  uint64_t v84 = *(void *)(v20 - 8);
  uint64_t v85 = v20;
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v78 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v77 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v77 - v26;
  uint64_t v28 = sub_1A72DA268(a1);
  if (!v29) {
    goto LABEL_4;
  }
  uint64_t v30 = v28;
  uint64_t v31 = v29;
  char v94 = (unsigned char *)a2;
  *(void *)&v93[0] = v28;
  *((void *)&v93[0] + 1) = v29;
  swift_bridgeObjectRetain();
  sub_1A7572850();
  if (sub_1A73B9D38() == 6)
  {
    swift_bridgeObjectRelease();
    a2 = (uint64_t)v94;
LABEL_4:
    sub_1A73B6BCC(a1, v6);
    if (v2)
    {
      sub_1A73BB118();
      swift_allocError();
      *(void *)uint64_t v32 = 1;
      *(void *)(v32 + 8) = 0;
      *(void *)(v32 + 16) = 0;
      *(void *)(v32 + 24) = 0;
      *(unsigned char *)(v32 + 32) = 0;
      swift_willThrow();
    }
    else
    {
      sub_1A73BAA30((uint64_t)v6, a2);
    }
    return;
  }
  if (*(void *)(a1 + 16) && (unint64_t v33 = sub_1A72B2210(v30, v31), (v34 & 1) != 0)) {
    sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v33, (uint64_t)v93);
  }
  else {
    memset(v93, 0, sizeof(v93));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  switch(v35)
  {
    case 1:
      sub_1A72BF1E8((uint64_t)v93, (uint64_t)v88, &qword_1EB705938);
      uint64_t v38 = v94;
      if (!v92) {
        goto LABEL_37;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_39;
      }
      sub_1A73B84DC(v87, (uint64_t)v88);
      sub_1A72CB560((uint64_t)v93, &qword_1EB705938);
      if (!v2)
      {
        uint64_t v39 = v89;
        char v40 = v90;
        char v41 = v91;
        *uint64_t v38 = v88[0];
        *((void *)v38 + 1) = v39;
        v38[16] = v40;
        v38[17] = v41;
        goto LABEL_41;
      }
      return;
    case 2:
      sub_1A72BF1E8((uint64_t)v93, (uint64_t)v88, &qword_1EB705938);
      if (!v92) {
        goto LABEL_37;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_39;
      }
      if (qword_1E96F07D8 != -1) {
        swift_once();
      }
      uint64_t v42 = (void *)qword_1E96F28C0;
      uint64_t v43 = (void *)sub_1A75725E0();
      id v44 = objc_msgSend(v42, sel_dateFromString_, v43);

      if (v44)
      {
        sub_1A7571B20();

        uint64_t v45 = 0;
      }
      else
      {
        uint64_t v45 = 1;
      }
      uint64_t v65 = v94;
      uint64_t v67 = v84;
      uint64_t v66 = v85;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v84 + 56))(v18, v45, 1, v85);
      uint64_t v68 = (uint64_t)v18;
      uint64_t v69 = v81;
      sub_1A734E5D8(v68, v81, &qword_1EB704C60);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v69, 1, v66) == 1)
      {
        uint64_t v62 = &qword_1EB704C60;
        char v63 = (char *)v69;
        goto LABEL_38;
      }
      sub_1A72CB560((uint64_t)v93, &qword_1EB705938);
      uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 32);
      v70(v27, v69, v66);
      v70(v65, (uint64_t)v27, v66);
      goto LABEL_41;
    case 3:
      sub_1A72BF1E8((uint64_t)v93, (uint64_t)v88, &qword_1EB705938);
      if (!v92) {
        goto LABEL_37;
      }
      char v46 = swift_dynamicCast();
      char v47 = v94;
      if ((v46 & 1) == 0) {
        goto LABEL_39;
      }
      if (qword_1E96F07D8 != -1) {
        swift_once();
      }
      uint64_t v48 = (void *)qword_1E96F28C0;
      long long v49 = (void *)sub_1A75725E0();
      id v50 = objc_msgSend(v48, sel_dateFromString_, v49);

      if (v50)
      {
        uint64_t v51 = (uint64_t)v79;
        sub_1A7571B20();

        uint64_t v52 = 0;
        uint64_t v54 = v84;
        uint64_t v53 = v85;
        uint64_t v55 = (uint64_t)v82;
      }
      else
      {
        uint64_t v52 = 1;
        uint64_t v54 = v84;
        uint64_t v53 = v85;
        uint64_t v55 = (uint64_t)v82;
        uint64_t v51 = (uint64_t)v79;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v51, v52, 1, v53);
      sub_1A734E5D8(v51, v55, &qword_1EB704C60);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v55, 1, v53) == 1)
      {
        uint64_t v62 = &qword_1EB704C60;
        char v63 = (char *)v55;
        goto LABEL_38;
      }
      sub_1A72CB560((uint64_t)v93, &qword_1EB705938);
      char v71 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 32);
      v71(v25, v55, v53);
      v71(v47, (uint64_t)v25, v53);
      goto LABEL_41;
    case 4:
      sub_1A72BF1E8((uint64_t)v93, (uint64_t)v88, &qword_1EB705938);
      if (!v92) {
        goto LABEL_37;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_39;
      }
      if (qword_1E96F07D8 != -1) {
        swift_once();
      }
      id v56 = (void *)qword_1E96F28C0;
      uint64_t v57 = (void *)sub_1A75725E0();
      id v58 = objc_msgSend(v56, sel_dateFromString_, v57);

      uint64_t v59 = (uint64_t)v83;
      uint64_t v60 = (uint64_t)v80;
      if (v58)
      {
        sub_1A7571B20();

        uint64_t v61 = 0;
      }
      else
      {
        uint64_t v61 = 1;
      }
      uint64_t v72 = v94;
      uint64_t v74 = v84;
      uint64_t v73 = v85;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v60, v61, 1, v85);
      sub_1A734E5D8(v60, v59, &qword_1EB704C60);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v59, 1, v73) == 1)
      {
        uint64_t v62 = &qword_1EB704C60;
        char v63 = (char *)v59;
        goto LABEL_38;
      }
      sub_1A72CB560((uint64_t)v93, &qword_1EB705938);
      uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 32);
      uint64_t v76 = v78;
      v75(v78, v59, v73);
      v75(v72, (uint64_t)v76, v73);
      goto LABEL_41;
    case 5:
      sub_1A72CB560((uint64_t)v93, &qword_1EB705938);
      goto LABEL_41;
    default:
      sub_1A72BF1E8((uint64_t)v93, (uint64_t)v88, &qword_1EB705938);
      uint64_t v36 = v94;
      if (!v92)
      {
LABEL_37:
        uint64_t v62 = &qword_1EB705938;
        char v63 = v88;
LABEL_38:
        sub_1A72CB560((uint64_t)v63, v62);
        goto LABEL_39;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_39:
        sub_1A73BB118();
        swift_allocError();
        *(void *)uint64_t v64 = 1;
        *(void *)(v64 + 8) = 0;
        *(void *)(v64 + 16) = 0;
        *(void *)(v64 + 24) = 0;
        *(unsigned char *)(v64 + 32) = 0;
        swift_willThrow();
        sub_1A72CB560((uint64_t)v93, &qword_1EB705938);
        return;
      }
      char v37 = v87;
      sub_1A72CB560((uint64_t)v93, &qword_1EB705938);
      *uint64_t v36 = v37;
LABEL_41:
      swift_storeEnumTagMultiPayload();
      return;
  }
}

unint64_t sub_1A73B8308()
{
  int v1 = *v0;
  uint64_t v2 = v0[16];
  unsigned __int8 v3 = v0[17];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
  uint64_t inited = swift_initStackObject();
  uint64_t v5 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1A757BF00;
  *(void *)(inited + 32) = 0x6F69746365726964;
  *(void *)(inited + 40) = 0xE90000000000006ELL;
  BOOL v6 = v1 == 0;
  uint64_t v7 = 0x747361506E69;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  if (!v6) {
    uint64_t v7 = 0x7478654E6E69;
  }
  *(void *)(inited + 48) = v7;
  *(void *)(inited + 56) = 0xE600000000000000;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = 0x647574696E67616DLL;
  *(void *)(inited + 88) = 0xE900000000000065;
  *(void *)(inited + 96) = sub_1A7573BC0();
  *(void *)(v5 + 104) = v9;
  *(void *)(v5 + 120) = v8;
  *(void *)(v5 + 128) = 0x7374696E75;
  unint64_t v10 = 0xE500000000000000;
  uint64_t v11 = 0x68746E6F6DLL;
  *(void *)(v5 + 136) = 0xE500000000000000;
  switch(v2)
  {
    case 1:
      unint64_t v10 = 0xE300000000000000;
      uint64_t v11 = 7954788;
      break;
    case 2:
      unint64_t v10 = 0xE400000000000000;
      uint64_t v11 = 1801807223;
      break;
    case 3:
      break;
    case 4:
      unint64_t v10 = 0xE400000000000000;
      uint64_t v11 = 1918985593;
      break;
    default:
      unint64_t v10 = 0xE400000000000000;
      uint64_t v11 = 1920298856;
      break;
  }
  *(void *)(v5 + 144) = v11;
  *(void *)(v5 + 152) = v10;
  *(void *)(v5 + 168) = v8;
  strcpy((char *)(v5 + 176), "includePastDue");
  *(unsigned char *)(v5 + 191) = -18;
  *(void *)(v5 + 216) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(v5 + 192) = v3;
  return sub_1A72B0944(v5);
}

uint64_t sub_1A73B84DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!*(void *)(a1 + 16)) {
    goto LABEL_22;
  }
  unint64_t v4 = sub_1A72B2210(0x6F69746365726964, 0xE90000000000006ELL);
  if ((v5 & 1) == 0) {
    goto LABEL_22;
  }
  sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v39);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_22;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_21;
  }
  unint64_t v6 = sub_1A72B2210(0x647574696E67616DLL, 0xE900000000000065);
  if ((v7 & 1) == 0) {
    goto LABEL_21;
  }
  sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v39);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_21;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_20;
  }
  unint64_t v8 = sub_1A72B2210(0x7374696E75, 0xE500000000000000);
  if ((v9 & 1) == 0) {
    goto LABEL_20;
  }
  sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v39);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v41 = v37;
  unint64_t v10 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10 > 1) {
    goto LABEL_20;
  }
  uint64_t v12 = HIBYTE(v38) & 0xF;
  uint64_t v13 = v37 & 0xFFFFFFFFFFFFLL;
  if (!((v38 & 0x2000000000000000) != 0 ? HIBYTE(v38) & 0xF : v37 & 0xFFFFFFFFFFFFLL))
  {
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if ((v38 & 0x1000000000000000) != 0)
  {
    uint64_t v16 = (uint64_t)sub_1A7492928(v37, v38, 10);
    char v18 = v36;
    goto LABEL_59;
  }
  if ((v38 & 0x2000000000000000) == 0)
  {
    if ((v37 & 0x1000000000000000) != 0) {
      uint64_t v15 = (unsigned __int8 *)((v38 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v15 = (unsigned __int8 *)sub_1A7573680();
    }
    uint64_t v16 = (uint64_t)sub_1A749267C(v15, v13, 10);
    char v18 = v17 & 1;
LABEL_59:
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      char v29 = sub_1A73B9CEC();
      if (v29 != 5)
      {
        char v30 = v29;
        if (*(void *)(a1 + 16) && (unint64_t v31 = sub_1A72B2210(0x506564756C636E69, 0xEE00657544747361), (v32 & 1) != 0))
        {
          sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v31, (uint64_t)&v39);
        }
        else
        {
          long long v39 = 0u;
          long long v40 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v40 + 1))
        {
          uint64_t result = swift_dynamicCast();
          if (result)
          {
            *(unsigned char *)a2 = v10;
            *(void *)(a2 + 8) = v16;
            *(unsigned char *)(a2 + 16) = v30;
            *(unsigned char *)(a2 + 17) = v37;
            return result;
          }
        }
        else
        {
          sub_1A72CB560((uint64_t)&v39, &qword_1EB705938);
        }
LABEL_23:
        sub_1A73BB118();
        swift_allocError();
        *(void *)uint64_t v19 = 1;
        *(void *)(v19 + 8) = 0;
        *(void *)(v19 + 16) = 0;
        *(void *)(v19 + 24) = 0;
        *(unsigned char *)(v19 + 32) = 0;
        return swift_willThrow();
      }
LABEL_22:
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  *(void *)&long long v39 = v37;
  *((void *)&v39 + 1) = v38 & 0xFFFFFFFFFFFFFFLL;
  if (v37 == 43)
  {
    if (!v12) {
      goto LABEL_79;
    }
    if (v12 == 1 || (BYTE1(v37) - 48) > 9u) {
      goto LABEL_46;
    }
    uint64_t v16 = (BYTE1(v37) - 48);
    if (v12 != 2)
    {
      if ((BYTE2(v37) - 48) > 9u) {
        goto LABEL_46;
      }
      uint64_t v16 = 10 * (BYTE1(v37) - 48) + (BYTE2(v37) - 48);
      uint64_t v20 = v12 - 3;
      if (v20)
      {
        uint64_t v21 = (unsigned __int8 *)&v39 + 3;
        while (1)
        {
          unsigned int v22 = *v21 - 48;
          if (v22 > 9) {
            goto LABEL_46;
          }
          uint64_t v23 = 10 * v16;
          if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
            goto LABEL_46;
          }
          uint64_t v16 = v23 + v22;
          if (__OFADD__(v23, v22)) {
            goto LABEL_46;
          }
          char v18 = 0;
          ++v21;
          if (!--v20) {
            goto LABEL_59;
          }
        }
      }
    }
LABEL_58:
    char v18 = 0;
    goto LABEL_59;
  }
  if (v37 != 45)
  {
    if (!v12 || (v37 - 48) > 9u) {
      goto LABEL_46;
    }
    uint64_t v16 = (v37 - 48);
    if (v12 != 1)
    {
      if ((BYTE1(v37) - 48) > 9u) {
        goto LABEL_46;
      }
      uint64_t v16 = 10 * (v37 - 48) + (BYTE1(v37) - 48);
      uint64_t v24 = v12 - 2;
      if (v24)
      {
        uint64_t v25 = (unsigned __int8 *)&v39 + 2;
        while (1)
        {
          unsigned int v26 = *v25 - 48;
          if (v26 > 9) {
            goto LABEL_46;
          }
          uint64_t v27 = 10 * v16;
          if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
            goto LABEL_46;
          }
          uint64_t v16 = v27 + v26;
          if (__OFADD__(v27, v26)) {
            goto LABEL_46;
          }
          char v18 = 0;
          ++v25;
          if (!--v24) {
            goto LABEL_59;
          }
        }
      }
    }
    goto LABEL_58;
  }
  if (v12)
  {
    if (v12 != 1 && (BYTE1(v37) - 48) <= 9u)
    {
      if (v12 == 2)
      {
        char v18 = 0;
        uint64_t v16 = -(uint64_t)(BYTE1(v37) - 48);
        goto LABEL_59;
      }
      if ((BYTE2(v37) - 48) <= 9u)
      {
        uint64_t v16 = -10 * (BYTE1(v37) - 48) - (BYTE2(v37) - 48);
        uint64_t v28 = v12 - 3;
        if (!v28) {
          goto LABEL_58;
        }
        unint64_t v33 = (unsigned __int8 *)&v39 + 3;
        while (1)
        {
          unsigned int v34 = *v33 - 48;
          if (v34 > 9) {
            break;
          }
          uint64_t v35 = 10 * v16;
          if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
            break;
          }
          uint64_t v16 = v35 - v34;
          if (__OFSUB__(v35, v34)) {
            break;
          }
          char v18 = 0;
          ++v33;
          if (!--v28) {
            goto LABEL_59;
          }
        }
      }
    }
LABEL_46:
    uint64_t v16 = 0;
    char v18 = 1;
    goto LABEL_59;
  }
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

unint64_t sub_1A73B8A5C()
{
  uint64_t v1 = *v0;
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7958113;
  switch(v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x676E696E726F6DLL;
      break;
    case 2:
      unint64_t v2 = 0xE90000000000006ELL;
      uint64_t v3 = 0x6F6F6E7265746661;
      break;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x676E696E657665;
      break;
    case 4:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x746867696ELL;
      break;
    case 5:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x656D69546F6ELL;
      break;
    default:
      break;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v2;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = 0;
  *(void *)(inited + 56) = 0xE000000000000000;
  return sub_1A72B0944(inited);
}

unint64_t sub_1A73B8B94()
{
  uint64_t v1 = *v0;
  if (*((unsigned char *)v0 + 48))
  {
    uint64_t v2 = v0[1];
    uint64_t v3 = v0[2];
    uint64_t v5 = v0[3];
    uint64_t v4 = v0[4];
    uint64_t v6 = v0[5];
    if (*((unsigned char *)v0 + 48) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
      *(void *)(inited + 32) = 0x6E6F697461636F6CLL;
      *(void *)(inited + 40) = 0xE800000000000000;
      uint64_t v8 = swift_initStackObject();
      uint64_t v9 = v8;
      *(_OWORD *)(v8 + 16) = xmmword_1A75808C0;
      unint64_t v10 = 0xE500000000000000;
      *(void *)(v8 + 32) = 0x656C746974;
      *(void *)(v8 + 40) = 0xE500000000000000;
      uint64_t v11 = MEMORY[0x1E4FBB1A0];
      *(void *)(v8 + 48) = v1;
      *(void *)(v8 + 56) = v2;
      *(void *)(v8 + 72) = v11;
      *(void *)(v8 + 80) = 0x656475746974616CLL;
      uint64_t v12 = MEMORY[0x1E4FBB3D0];
      *(void *)(v8 + 88) = 0xE800000000000000;
      *(void *)(v8 + 96) = v3;
      *(void *)(v8 + 120) = v12;
      *(void *)(v8 + 128) = 0x64757469676E6F6CLL;
      *(void *)(v8 + 136) = 0xE900000000000065;
      *(void *)(v8 + 144) = v5;
      *(void *)(v8 + 168) = v12;
      *(void *)(v8 + 176) = 0x737569646172;
      *(void *)(v8 + 184) = 0xE600000000000000;
      *(void *)(v8 + 192) = v4;
      *(void *)(v8 + 216) = v12;
      *(void *)(v8 + 224) = 0x74696D69786F7270;
      *(void *)(v8 + 232) = 0xE900000000000079;
      if (v6)
      {
        if (v6 == 1)
        {
          uint64_t v13 = 0x7265746E65;
        }
        else if (v6 == 2)
        {
          uint64_t v13 = 0x657661656CLL;
        }
        else
        {
          unint64_t v10 = 0xE400000000000000;
          uint64_t v13 = 1701736302;
        }
      }
      else
      {
        unint64_t v10 = 0xE400000000000000;
        uint64_t v13 = 1701736302;
      }
      *(void *)(v8 + 264) = v11;
      *(void *)(v8 + 240) = v13;
      *(void *)(v8 + 248) = v10;
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_1A72B0944(v9);
      *(void *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
      *(void *)(inited + 48) = v19;
      uint64_t v14 = inited;
    }
    else
    {
      if (v3 | v2 | v1 | v5 | v4 | v6)
      {
        sub_1A73BAAF0();
        swift_allocError();
        *char v17 = 1;
        return swift_willThrow();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
      uint64_t v14 = swift_initStackObject();
      *(_OWORD *)(v14 + 16) = xmmword_1A75785A0;
      *(void *)(v14 + 32) = 7958113;
      *(void *)(v14 + 40) = 0xE300000000000000;
      *(void *)(v14 + 72) = MEMORY[0x1E4FBB1A0];
      *(void *)(v14 + 48) = 0;
      *(void *)(v14 + 56) = 0xE000000000000000;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
    uint64_t v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = xmmword_1A75785A0;
    *(void *)(v14 + 32) = 0x656C6369686576;
    *(void *)(v14 + 40) = 0xE700000000000000;
    unint64_t v15 = 0xE400000000000000;
    uint64_t v16 = 1701736302;
    if (v1 == 1)
    {
      uint64_t v16 = 0x657463656E6E6F63;
      unint64_t v15 = 0xE900000000000064;
    }
    if (v1 == 2) {
      uint64_t v16 = 0x656E6E6F63736964;
    }
    *(void *)(v14 + 72) = MEMORY[0x1E4FBB1A0];
    if (v1 == 2) {
      unint64_t v15 = 0xEC00000064657463;
    }
    *(void *)(v14 + 48) = v16;
    *(void *)(v14 + 56) = v15;
  }
  return sub_1A72B0944(v14);
}

uint64_t sub_1A73B8EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A72DA268(a1);
  if (!v5) {
    goto LABEL_7;
  }
  uint64_t v6 = v4;
  uint64_t v7 = v5;
  *(void *)&v34[0] = v4;
  *((void *)&v34[0] + 1) = v5;
  swift_bridgeObjectRetain();
  sub_1A7572850();
  unint64_t v8 = sub_1A7573970();
  swift_bridgeObjectRelease();
  if (v8 >= 3)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    sub_1A73BB118();
    swift_allocError();
    *(_OWORD *)uint64_t v11 = 0u;
    *(_OWORD *)(v11 + 16) = 0u;
    *(unsigned char *)(v11 + 32) = 0;
    return swift_willThrow();
  }
  if (*(void *)(a1 + 16) && (unint64_t v9 = sub_1A72B2210(v6, v7), (v10 & 1) != 0)) {
    sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v9, (uint64_t)v34);
  }
  else {
    memset(v34, 0, sizeof(v34));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(_BYTE)v8)
  {
    unint64_t v8 = v8;
    char v18 = 2;
    unint64_t v13 = v8;
    unint64_t v14 = v8;
    unint64_t v15 = v8;
    unint64_t v16 = v8;
    unint64_t v17 = v8;
    goto LABEL_16;
  }
  if (v8 != 1)
  {
    sub_1A72BF1E8((uint64_t)v34, (uint64_t)&v32, &qword_1EB705938);
    if (*((void *)&v33 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_44;
      }
      if (*(void *)(v30 + 16))
      {
        unint64_t v19 = sub_1A72B2210(0x656C746974, 0xE500000000000000);
        if (v20)
        {
          sub_1A72BEE98(*(void *)(v30 + 56) + 32 * v19, (uint64_t)&v32);
          if (swift_dynamicCast())
          {
            unint64_t v13 = v31;
            if (!*(void *)(v30 + 16)) {
              goto LABEL_34;
            }
            unint64_t v8 = v30;
            unint64_t v21 = sub_1A72B2210(0x656475746974616CLL, 0xE800000000000000);
            if ((v22 & 1) == 0) {
              goto LABEL_34;
            }
            sub_1A72BEE98(*(void *)(v30 + 56) + 32 * v21, (uint64_t)&v32);
            if ((swift_dynamicCast() & 1) != 0
              && *(void *)(v30 + 16)
              && (unint64_t v14 = v30, v23 = sub_1A72B2210(0x64757469676E6F6CLL, 0xE900000000000065), (v24 & 1) != 0)
              && (sub_1A72BEE98(*(void *)(v30 + 56) + 32 * v23, (uint64_t)&v32), (swift_dynamicCast() & 1) != 0)
              && *(void *)(v30 + 16)
              && (v35 = v30, unint64_t v25 = sub_1A72B2210(0x737569646172, 0xE600000000000000), (v26 & 1) != 0)
              && (sub_1A72BEE98(*(void *)(v30 + 56) + 32 * v25, (uint64_t)&v32), (swift_dynamicCast() & 1) != 0))
            {
              unint64_t v16 = v30;
              if (*(void *)(v30 + 16)
                && (unint64_t v27 = sub_1A72B2210(0x74696D69786F7270, 0xE900000000000079), (v28 & 1) != 0))
              {
                sub_1A72BEE98(*(void *)(v30 + 56) + 32 * v27, (uint64_t)&v32);
              }
              else
              {
                long long v32 = 0u;
                long long v33 = 0u;
              }
              swift_bridgeObjectRelease();
              if (!*((void *)&v33 + 1))
              {
                swift_bridgeObjectRelease();
                goto LABEL_43;
              }
              if (swift_dynamicCast())
              {
                unint64_t v17 = sub_1A7573970();
                swift_bridgeObjectRelease();
                if (v17 < 3)
                {
                  char v18 = 1;
                  unint64_t v15 = v35;
                  goto LABEL_16;
                }
              }
            }
            else
            {
LABEL_34:
              swift_bridgeObjectRelease();
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
LABEL_43:
    sub_1A72CB560((uint64_t)&v32, &qword_1EB705938);
    goto LABEL_44;
  }
  sub_1A72BF1E8((uint64_t)v34, (uint64_t)&v32, &qword_1EB705938);
  if (!*((void *)&v33 + 1)) {
    goto LABEL_43;
  }
  if (swift_dynamicCast())
  {
    unint64_t v8 = sub_1A7573970();
    swift_bridgeObjectRelease();
    if (v8 < 3)
    {
      unint64_t v13 = 0;
      unint64_t v14 = 0;
      unint64_t v15 = 0;
      unint64_t v16 = 0;
      unint64_t v17 = 0;
      char v18 = 0;
LABEL_16:
      uint64_t result = sub_1A72CB560((uint64_t)v34, &qword_1EB705938);
      *(void *)a2 = v8;
      *(void *)(a2 + 8) = v13;
      *(void *)(a2 + 16) = v14;
      *(void *)(a2 + 24) = v15;
      *(void *)(a2 + 32) = v16;
      *(void *)(a2 + 40) = v17;
      *(unsigned char *)(a2 + 48) = v18;
      return result;
    }
  }
LABEL_44:
  sub_1A73BB118();
  swift_allocError();
  *(_OWORD *)uint64_t v29 = 0u;
  *(_OWORD *)(v29 + 16) = 0u;
  *(unsigned char *)(v29 + 32) = 0;
  swift_willThrow();
  return sub_1A72CB560((uint64_t)v34, &qword_1EB705938);
}

unint64_t sub_1A73B93AC()
{
  uint64_t v40 = sub_1A7571BC0();
  uint64_t v1 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = *v0;
  unint64_t v4 = v0[1];
  if (*v0 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = MEMORY[0x1E4FBC860];
  unint64_t v39 = v4;
  if (v6)
  {
    uint64_t v41 = MEMORY[0x1E4FBC860];
    unint64_t result = sub_1A72D2D00(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
    {
      __break(1u);
      goto LABEL_32;
    }
    uint64_t v9 = 0;
    unint64_t v37 = v5 & 0xC000000000000001;
    uint64_t v36 = v1;
    char v10 = (void (**)(char *, uint64_t))(v1 + 8);
    unint64_t v38 = v5;
    do
    {
      if (v37) {
        id v11 = (id)MEMORY[0x1AD0CB800](v9, v5);
      }
      else {
        id v11 = *(id *)(v5 + 8 * v9 + 32);
      }
      uint64_t v12 = v11;
      id v13 = objc_msgSend(v11, sel_uuid);
      sub_1A7571BB0();

      uint64_t v14 = sub_1A7571B80();
      uint64_t v16 = v15;
      (*v10)(v3, v40);

      uint64_t v7 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A72D2D00(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v41;
      }
      unint64_t v18 = *(void *)(v7 + 16);
      unint64_t v17 = *(void *)(v7 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1A72D2D00(v17 > 1, v18 + 1, 1);
        uint64_t v7 = v41;
      }
      ++v9;
      *(void *)(v7 + 16) = v18 + 1;
      uint64_t v19 = v7 + 16 * v18;
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v16;
      unint64_t v5 = v38;
    }
    while (v6 != v9);
    unint64_t v4 = v39;
    uint64_t v1 = v36;
  }
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (!v20)
  {
LABEL_28:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A7578D60;
    *(void *)(inited + 32) = 0x6564756C636E69;
    *(void *)(inited + 40) = 0xE700000000000000;
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    *(void *)(inited + 48) = v7;
    *(void *)(inited + 72) = v34;
    *(void *)(inited + 80) = 0x6564756C637865;
    *(void *)(inited + 120) = v34;
    *(void *)(inited + 88) = 0xE700000000000000;
    *(void *)(inited + 96) = v21;
    return sub_1A72B0944(inited);
  }
  uint64_t v41 = MEMORY[0x1E4FBC860];
  unint64_t result = sub_1A72D2D00(0, v20 & ~(v20 >> 63), 0);
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v22 = 0;
    unint64_t v38 = v4 & 0xC000000000000001;
    unint64_t v23 = (void (**)(char *, uint64_t))(v1 + 8);
    do
    {
      if (v38) {
        id v24 = (id)MEMORY[0x1AD0CB800](v22, v4);
      }
      else {
        id v24 = *(id *)(v4 + 8 * v22 + 32);
      }
      unint64_t v25 = v24;
      id v26 = objc_msgSend(v24, sel_uuid);
      sub_1A7571BB0();

      uint64_t v27 = sub_1A7571B80();
      uint64_t v29 = v28;
      (*v23)(v3, v40);

      uint64_t v21 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A72D2D00(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v21 = v41;
      }
      unint64_t v31 = *(void *)(v21 + 16);
      unint64_t v30 = *(void *)(v21 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1A72D2D00(v30 > 1, v31 + 1, 1);
        uint64_t v21 = v41;
      }
      ++v22;
      *(void *)(v21 + 16) = v31 + 1;
      uint64_t v32 = v21 + 16 * v31;
      *(void *)(v32 + 32) = v27;
      *(void *)(v32 + 40) = v29;
      unint64_t v4 = v39;
    }
    while (v20 != v22);
    goto LABEL_28;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A73B97CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (!*(void *)(a1 + 16)) {
    goto LABEL_7;
  }
  unint64_t v4 = sub_1A72B2210(0x6564756C636E69, 0xE700000000000000);
  if ((v5 & 1) == 0) {
    goto LABEL_7;
  }
  sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v6 = v16;
  if (*(void *)(a1 + 16) && (unint64_t v7 = sub_1A72B2210(0x6564756C637865, 0xE700000000000000), (v8 & 1) != 0))
  {
    sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v7, (uint64_t)&v14);
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v15 + 1))
  {
    swift_bridgeObjectRelease();
    sub_1A72CB560((uint64_t)&v14, &qword_1EB705938);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
LABEL_8:
    sub_1A73BB118();
    swift_allocError();
    *(void *)uint64_t v9 = 1;
    *(void *)(v9 + 8) = 0;
    *(void *)(v9 + 16) = 0;
    *(void *)(v9 + 24) = 0;
    *(unsigned char *)(v9 + 32) = 0;
    return swift_willThrow();
  }
  uint64_t v11 = v16;
  uint64_t v12 = sub_1A73B998C(v6);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1A73B998C(v11);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v12;
  a2[1] = v13;
  return result;
}

uint64_t sub_1A73B998C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A7571BC0();
  MEMORY[0x1F4188790](v5);
  unint64_t v25 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v26 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    char v10 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v21 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    swift_bridgeObjectRetain();
    v20[1] = a1;
    uint64_t v11 = a1 + 40;
    unint64_t v23 = v10;
    id v24 = v4;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A7571B70();
      if ((*v10)(v4, 1, v5) == 1)
      {
        sub_1A72CB560((uint64_t)v4, &qword_1EB704C40);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v12 = v25;
        (*v22)(v25, v4, v5);
        id v13 = objc_msgSend(self, sel_cdEntityName);
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

        id v14 = objc_allocWithZone((Class)type metadata accessor for REMObjectID_Codable());
        long long v15 = (void *)sub_1A7571B90();
        uint64_t v16 = (void *)sub_1A75725E0();
        unint64_t v4 = v24;
        swift_bridgeObjectRelease();
        id v17 = objc_msgSend(v14, sel_initWithUUID_entityName_, v15, v16);

        unint64_t v18 = v12;
        char v10 = v23;
        (*v21)(v18, v5);
        uint64_t v19 = swift_bridgeObjectRelease();
        if (v17)
        {
          MEMORY[0x1AD0CABF0](v19);
          if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1A7572A60();
          }
          sub_1A7572AB0();
          sub_1A7572A30();
        }
      }
      v11 += 16;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    return v26;
  }
  return result;
}

void sub_1A73B9C74()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  uint64_t v1 = (void *)sub_1A75725E0();
  objc_msgSend(v0, sel_setDateFormat_, v1);

  qword_1E96F28C0 = (uint64_t)v0;
}

uint64_t sub_1A73B9CEC()
{
  unint64_t v0 = sub_1A7573970();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A73B9D38()
{
  unint64_t v0 = sub_1A7573970();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

char *sub_1A73B9D80(uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  uint64_t v118 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  uint64_t v107 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v94 - v11;
  MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v94 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v105 = (uint64_t)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v94 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v108 = (uint64_t)&v94 - v21;
  uint64_t v110 = *a3;
  uint64_t v22 = self;
  unint64_t v23 = (void *)sub_1A7571A00();
  *(void *)&long long v113 = 0;
  id v24 = objc_msgSend(v22, sel_JSONObjectWithData_options_error_, v23, 0, &v113);

  if (v24)
  {
    unint64_t v106 = a2;
    id v25 = (id)v113;
    sub_1A7573330();
    swift_unknownObjectRelease();
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E60);
    if (swift_dynamicCast())
    {
      uint64_t v27 = v111;
      uint64_t v104 = a1;
      if (!v110
        || !*(void *)(v111 + 16)
        || (unint64_t v28 = sub_1A72B2210(0x6F6974617265706FLL, 0xE90000000000006ELL), (v29 & 1) == 0)
        || (sub_1A72BEE98(*(void *)(v27 + 56) + 32 * v28, (uint64_t)&v113), (swift_dynamicCast() & 1) == 0)
        || (uint64_t v30 = sub_1A7573970(), swift_bridgeObjectRelease(), !v30))
      {
        int v31 = 0;
        goto LABEL_15;
      }
      if (v30 == 1)
      {
        int v31 = 1;
LABEL_15:
        uint64_t v36 = *(void *)(v27 + 16);
        int v101 = v31;
        if (v36
          && (unint64_t v37 = sub_1A72B2210(0x7367617468736168, 0xE800000000000000), (v38 & 1) != 0)
          && (sub_1A72BEE98(*(void *)(v27 + 56) + 32 * v37, (uint64_t)&v113), (swift_dynamicCast() & 1) != 0))
        {
          uint64_t v39 = v109;
          if (v110) {
            sub_1A73B5DE0(v111, (uint64_t)&v113);
          }
          else {
            sub_1A73B5BC0(v111, (uint64_t)&v113);
          }
          uint64_t v109 = v39;
          if (v39)
          {
            sub_1A72E3460(v104, v106);
            swift_bridgeObjectRelease();
            return v9;
          }
          long long v102 = v113;
          int v103 = v114;
        }
        else
        {
          int v103 = 0;
          long long v102 = 2uLL;
        }
        uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56);
        v40(v108, 1, 1, v6);
        if (*(void *)(v27 + 16))
        {
          unint64_t v41 = sub_1A72B2210(1702125924, 0xE400000000000000);
          if (v42)
          {
            sub_1A72BEE98(*(void *)(v27 + 56) + 32 * v41, (uint64_t)&v113);
            if (swift_dynamicCast())
            {
              uint64_t v43 = v109;
              if (v110)
              {
                sub_1A73B78A8(v111, (uint64_t)v9);
                uint64_t v12 = v9;
              }
              else
              {
                sub_1A73B6BCC(v111, v12);
              }
              uint64_t v109 = v43;
              if (v43)
              {
                swift_bridgeObjectRelease();
                sub_1A7384C20(v102);
                sub_1A72E3460(v104, v106);
LABEL_75:
                sub_1A72CB560(v108, (uint64_t *)&unk_1E96F2370);
                return v9;
              }
              sub_1A73BAA30((uint64_t)v12, (uint64_t)v14);
              sub_1A73BAA30((uint64_t)v14, (uint64_t)v20);
              uint64_t v44 = v108;
              sub_1A72CB560(v108, (uint64_t *)&unk_1E96F2370);
              v40((uint64_t)v20, 0, 1, v6);
              sub_1A734E5D8((uint64_t)v20, v44, (uint64_t *)&unk_1E96F2370);
            }
          }
        }
        if (*(void *)(v27 + 16)
          && (unint64_t v45 = sub_1A72B2210(1701669236, 0xE400000000000000), (v46 & 1) != 0)
          && (sub_1A72BEE98(*(void *)(v27 + 56) + 32 * v45, (uint64_t)&v113), (swift_dynamicCast() & 1) != 0))
        {
          uint64_t v9 = (char *)sub_1A72DA268(v111);
          uint64_t v48 = v47;
          swift_bridgeObjectRelease();
          if (!v48
            || (*(void *)&long long v113 = v9,
                *((void *)&v113 + 1) = v48,
                sub_1A7572850(),
                int v49 = sub_1A73B9D38(),
                v49 == 6))
          {
            sub_1A73BB118();
            swift_allocError();
            *(_OWORD *)uint64_t v50 = 0u;
            *(_OWORD *)(v50 + 16) = 0u;
            *(unsigned char *)(v50 + 32) = 0;
            swift_willThrow();
            swift_bridgeObjectRelease();
            sub_1A7384C20(v102);
            sub_1A72E3460(v104, v106);
            sub_1A72CB560(v108, (uint64_t *)&unk_1E96F2370);
            return v9;
          }
        }
        else
        {
          int v49 = 6;
        }
        uint64_t v51 = *(void *)(v27 + 16);
        LODWORD(v107) = v49;
        if (v51 && (unint64_t v52 = sub_1A72B2210(0x697469726F697270, 0xEA00000000007365), (v53 & 1) != 0))
        {
          sub_1A72BEE98(*(void *)(v27 + 56) + 32 * v52, (uint64_t)&v113);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
          uint64_t v9 = (char *)MEMORY[0x1E4FBC840];
          if (swift_dynamicCast())
          {
            uint64_t v54 = v111;
            uint64_t v55 = *(void *)(v111 + 16);
            if (v55)
            {
              uint64_t v100 = v26;
              swift_bridgeObjectRetain();
              uint64_t v56 = v54 + 40;
              uint64_t v57 = (void *)MEMORY[0x1E4FBC860];
              do
              {
                swift_bridgeObjectRetain();
                unint64_t v58 = sub_1A7573970();
                swift_bridgeObjectRelease();
                if (v58 <= 3)
                {
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v57 = sub_1A72ACFD0(0, v57[2] + 1, 1, v57);
                  }
                  unint64_t v60 = v57[2];
                  unint64_t v59 = v57[3];
                  if (v60 >= v59 >> 1) {
                    uint64_t v57 = sub_1A72ACFD0((void *)(v59 > 1), v60 + 1, 1, v57);
                  }
                  v57[2] = v60 + 1;
                  v57[v60 + 4] = v58;
                }
                v56 += 16;
                --v55;
              }
              while (v55);
              swift_bridgeObjectRelease();
              uint64_t v9 = (char *)MEMORY[0x1E4FBC840];
            }
            else
            {
              uint64_t v57 = (void *)MEMORY[0x1E4FBC860];
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v57 = 0;
          }
        }
        else
        {
          uint64_t v57 = 0;
          uint64_t v9 = (char *)MEMORY[0x1E4FBC840];
        }
        int v61 = v110;
        if (*(void *)(v27 + 16)
          && (unint64_t v62 = sub_1A72B2210(0x64656767616C66, 0xE700000000000000), (v63 & 1) != 0)
          && (sub_1A72BEE98(*(void *)(v27 + 56) + 32 * v62, (uint64_t)&v113), swift_dynamicCast()))
        {
          char v64 = v111;
          if (!*(void *)(v27 + 16)) {
            goto LABEL_64;
          }
        }
        else
        {
          char v64 = 2;
          if (!*(void *)(v27 + 16)) {
            goto LABEL_64;
          }
        }
        unint64_t v65 = sub_1A72B2210(0x6E6F697461636F6CLL, 0xE800000000000000);
        if (v66)
        {
          sub_1A72BEE98(*(void *)(v27 + 56) + 32 * v65, (uint64_t)&v113);
          if (swift_dynamicCast())
          {
            uint64_t v67 = v111;
            LOBYTE(v111) = v61;
            uint64_t v68 = v109;
            sub_1A73B5610(v67, &v111, (uint64_t)&v113);
            uint64_t v109 = v68;
            if (v68)
            {
              swift_bridgeObjectRelease();
              sub_1A72E3460(v104, v106);
              sub_1A7384C20(v102);
              swift_bridgeObjectRelease();
              goto LABEL_75;
            }
            uint64_t v70 = *((void *)&v113 + 1);
            uint64_t v69 = v113;
            uint64_t v72 = *((void *)&v114 + 1);
            uint64_t v71 = v114;
            uint64_t v73 = v115;
            uint64_t v74 = v116;
            int v75 = v117;
LABEL_65:
            uint64_t v96 = v69;
            uint64_t v95 = v70;
            uint64_t v94 = v71;
            uint64_t v100 = v72;
            uint64_t v99 = v73;
            uint64_t v98 = v74;
            int v97 = v75;
            if (v61)
            {
              if (*(void *)(v27 + 16) && (unint64_t v76 = sub_1A72B2210(0x737473696CLL, 0xE500000000000000), (v77 & 1) != 0))
              {
                sub_1A72BEE98(*(void *)(v27 + 56) + 32 * v76, (uint64_t)&v113);
              }
              else
              {
                long long v113 = 0u;
                long long v114 = 0u;
              }
              swift_bridgeObjectRelease();
              if (*((void *)&v114 + 1))
              {
                if (swift_dynamicCast())
                {
                  uint64_t v78 = v109;
                  sub_1A73B97CC(v111, (uint64_t *)&v113);
                  uint64_t v109 = v78;
                  if (v78)
                  {
                    sub_1A72E3460(v104, v106);
                    swift_bridgeObjectRelease();
                    sub_1A7384C20(v102);
                    sub_1A7384C44(v69, v70, v71, v100, v99, v98, v97);
                    goto LABEL_75;
                  }
                  uint64_t v80 = *((void *)&v113 + 1);
                  uint64_t v79 = v113;
LABEL_78:
                  uint64_t v81 = v108;
                  uint64_t v82 = v105;
                  sub_1A72BF1E8(v108, v105, (uint64_t *)&unk_1E96F2370);
                  float64x2_t v83 = (objc_class *)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
                  uint64_t v84 = objc_allocWithZone(v83);
                  v84[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v101;
                  uint64_t v85 = &v84[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
                  uint64_t v86 = *((void *)&v102 + 1);
                  *(void *)uint64_t v85 = v102;
                  *((void *)v85 + 1) = v86;
                  v85[16] = v103;
                  sub_1A72BF1E8(v82, (uint64_t)&v84[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1E96F2370);
                  v84[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v107;
                  *(void *)&v84[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v57;
                  v84[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v64;
                  uint64_t v87 = &v84[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
                  uint64_t v88 = v95;
                  *(void *)uint64_t v87 = v96;
                  *((void *)v87 + 1) = v88;
                  uint64_t v89 = v100;
                  *((void *)v87 + 2) = v94;
                  *((void *)v87 + 3) = v89;
                  uint64_t v90 = v98;
                  *((void *)v87 + 4) = v99;
                  *((void *)v87 + 5) = v90;
                  v87[48] = v97;
                  char v91 = &v84[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
                  void *v91 = v79;
                  v91[1] = v80;
                  v112.receiver = v84;
                  v112.super_class = v83;
                  uint64_t v9 = (char *)objc_msgSendSuper2(&v112, sel_init);
                  sub_1A72CB560(v82, (uint64_t *)&unk_1E96F2370);
                  sub_1A72E3460(v104, v106);
                  sub_1A72CB560(v81, (uint64_t *)&unk_1E96F2370);
                  return v9;
                }
              }
              else
              {
                sub_1A72CB560((uint64_t)&v113, &qword_1EB705938);
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            uint64_t v79 = 0;
            uint64_t v80 = 0;
            goto LABEL_78;
          }
        }
LABEL_64:
        uint64_t v69 = 0;
        uint64_t v70 = 0;
        uint64_t v71 = 0;
        uint64_t v72 = 0;
        uint64_t v73 = 0;
        uint64_t v74 = 0;
        int v75 = 255;
        goto LABEL_65;
      }
      swift_bridgeObjectRelease();
      sub_1A73BB118();
      swift_allocError();
      *(void *)uint64_t v93 = 1;
      *(void *)(v93 + 8) = 0;
      *(void *)(v93 + 16) = 0;
      *(void *)(v93 + 24) = 0;
      *(unsigned char *)(v93 + 32) = 0;
      swift_willThrow();
      uint64_t v33 = v104;
    }
    else
    {
      sub_1A73BB118();
      swift_allocError();
      *(void *)uint64_t v35 = v110;
      *(void *)(v35 + 8) = 0;
      *(void *)(v35 + 16) = 0;
      *(void *)(v35 + 24) = 0;
      *(unsigned char *)(v35 + 32) = 0;
      swift_willThrow();
      uint64_t v33 = a1;
    }
    unint64_t v34 = v106;
  }
  else
  {
    id v32 = (id)v113;
    sub_1A7571850();

    swift_willThrow();
    uint64_t v33 = a1;
    unint64_t v34 = a2;
  }
  sub_1A72E3460(v33, v34);
  return v9;
}

uint64_t sub_1A73BAA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A73BAA94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A73BAAF0()
{
  unint64_t result = qword_1E96F28C8;
  if (!qword_1E96F28C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F28C8);
  }
  return result;
}

unint64_t sub_1A73BAB48()
{
  unint64_t result = qword_1E96F28D0;
  if (!qword_1E96F28D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F28D0);
  }
  return result;
}

unsigned char *_s24DataSerializationVersionOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73BAC68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.DataSerializationVersion()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.DataSerializationVersion;
}

_WORD *__swift_memcpy2_2(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t _s22DataSerializationErrorOwet(unsigned __int16 *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 0xFFFF) <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if ((a2 + 0xFFFF) < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 0xFFFF;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        return 0;
      }
      return (*a1 | (v4 << 16)) - 0xFFFF;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 0xFFFF;
    }
  }
  return 0;
}

uint64_t _s22DataSerializationErrorOwst(uint64_t result, int a2, int a3)
{
  if ((a3 + 0xFFFF) <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if ((a3 + 0xFFFF) < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    unsigned int v6 = ((a2 - 1) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 1;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        return result;
      case 2:
        *(_WORD *)(result + 2) = v6;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)(result + 2) = v6;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *(unsigned char *)(result + 2) = 0;
      break;
    case 2:
      *(_WORD *)(result + 2) = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A73BADD0);
    case 4:
      *(_DWORD *)(result + 2) = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.DataSerializationError()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.DataSerializationError;
}

uint64_t sub_1A73BAE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 < 0)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s24DataDeserializationErrorOwxx(uint64_t a1)
{
  return sub_1A73BAE60(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_1A73BAE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 < 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s24DataDeserializationErrorOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1A73BAE08(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t _s24DataDeserializationErrorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1A73BAE08(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1A73BAE60(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t _s24DataDeserializationErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1A73BAE60(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t _s24DataDeserializationErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s24DataDeserializationErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1A73BB074(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_1A73BB080(uint64_t result)
{
  *(unsigned char *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_1A73BB090(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.DataDeserializationError()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.DataDeserializationError;
}

uint64_t sub_1A73BB0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A73BB118()
{
  unint64_t result = qword_1E96F28D8;
  if (!qword_1E96F28D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F28D8);
  }
  return result;
}

unint64_t sub_1A73BB16C()
{
  unint64_t result = qword_1EB7057C8;
  if (!qword_1EB7057C8)
  {
    sub_1A7571B60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7057C8);
  }
  return result;
}

uint64_t Publisher.map<A, B>(executeOn:receiveOn:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v30 = a8;
  uint64_t v31 = a3;
  uint64_t v32 = a6;
  uint64_t v28 = a2;
  uint64_t v29 = a9;
  uint64_t v13 = *(void *)(a7 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](a1);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v27 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v21, v24, v23);
  id v25 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v25(v19, a1, a7);
  v25(v16, v28, a7);
  Publishers.MapOnScheduler.init(upstream:executeOnScheduler:receiveOnScheduler:transform:)((uint64_t)v21, (uint64_t)v19, (uint64_t)v16, v31, a4, a5, a7, v29);
  return swift_retain();
}

uint64_t Publishers.MapOnScheduler.init(upstream:executeOnScheduler:receiveOnScheduler:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a8, a1, a6);
  uint64_t v14 = (int *)type metadata accessor for Publishers.MapOnScheduler();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32);
  v15(a8 + v14[15], a2, a7);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(a8 + v14[16], a3, a7);
  uint64_t v17 = (void *)(a8 + v14[17]);
  *uint64_t v17 = a4;
  v17[1] = a5;
  return result;
}

uint64_t type metadata accessor for Publishers.MapOnScheduler()
{
  return swift_getGenericMetadata();
}

uint64_t Publishers.MapOnScheduler.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Publishers.MapOnScheduler.executeOnScheduler.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 60));
}

uint64_t Publishers.MapOnScheduler.receiveOnScheduler.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 64));
}

uint64_t Publishers.MapOnScheduler.transform.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 68));
  swift_retain();
  return v2;
}

uint64_t Publishers.MapOnScheduler.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v83 = a3;
  uint64_t v84 = a4;
  uint64_t v85 = a1;
  uint64_t v81 = *(void *)(a2 - 8);
  uint64_t v82 = *(void *)(v81 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v80 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1A7573210();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v91 = v9;
  uint64_t v92 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v88 = (char *)&v58 - v11;
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(qword_1E96F28E0);
  uint64_t v74 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1A7571F20();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = *(void *)(a2 + 16);
  uint64_t v18 = *(void *)(a2 + 40);
  uint64_t v19 = a2;
  uint64_t v59 = a2;
  uint64_t v58 = v18;
  uint64_t v20 = sub_1A7571F90();
  uint64_t v64 = v20;
  uint64_t v77 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  unint64_t v60 = (char *)&v58 - v21;
  uint64_t WitnessTable = (void (*)(void, void))swift_getWitnessTable();
  uint64_t v93 = v20;
  uint64_t v94 = v8;
  uint64_t v22 = v8;
  uint64_t v86 = v8;
  uint64_t v95 = WitnessTable;
  uint64_t v96 = v7;
  uint64_t v23 = sub_1A7571FE0();
  uint64_t v68 = v23;
  uint64_t v79 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  int v61 = (char *)&v58 - v24;
  uint64_t v70 = *(void *)(v19 + 32);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v25 = sub_1A7574150();
  uint64_t v72 = v25;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v71 = v26;
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v93 = v25;
  uint64_t v94 = v23;
  uint64_t v95 = (void (*)(void, void))v26;
  uint64_t v96 = v69;
  uint64_t v27 = sub_1A7571FA0();
  uint64_t v66 = v27;
  uint64_t v78 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  char v63 = (char *)&v58 - v28;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v93 = v27;
  uint64_t v94 = v22;
  uint64_t v95 = (void (*)(void, void))v67;
  uint64_t v96 = v7;
  uint64_t v73 = sub_1A7571FE0();
  uint64_t v75 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  unint64_t v62 = (char *)&v58 - v29;
  uint64_t v30 = v17;
  uint64_t v31 = v14;
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4F1A900], v14);
  uint64_t v32 = v74;
  uint64_t v33 = v13;
  uint64_t v34 = v76;
  (*(void (**)(char *, void, uint64_t))(v74 + 104))(v13, *MEMORY[0x1E4F1A918], v76);
  uint64_t v35 = v60;
  uint64_t v36 = v33;
  uint64_t v37 = v89;
  sub_1A7572180();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v34);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v30, v31);
  uint64_t v38 = v59;
  uint64_t v39 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v74 = *(void *)(v39 + 56);
  uint64_t v76 = v39 + 56;
  uint64_t v40 = v88;
  ((void (*)(char *, uint64_t, uint64_t))v74)(v88, 1, 1);
  unint64_t v41 = v61;
  uint64_t v42 = v64;
  uint64_t v43 = v86;
  sub_1A75721B0();
  uint64_t v44 = *(void (**)(void, void))(v92 + 8);
  v92 += 8;
  uint64_t WitnessTable = v44;
  v44(v40, v91);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v35, v42);
  unint64_t v45 = v80;
  uint64_t v46 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v80, v37, v38);
  unint64_t v47 = (*(unsigned __int8 *)(v46 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v48 = (char *)swift_allocObject();
  *((void *)v48 + 2) = v87;
  *((void *)v48 + 3) = v43;
  uint64_t v49 = v83;
  uint64_t v50 = v84;
  *((void *)v48 + 4) = v70;
  *((void *)v48 + 5) = v49;
  *((void *)v48 + 6) = v58;
  *((void *)v48 + 7) = v7;
  *((void *)v48 + 8) = v50;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v48[v47], v45, v38);
  uint64_t v51 = v63;
  uint64_t v52 = v68;
  sub_1A75721A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v41, v52);
  char v53 = v88;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v74)(v88, 1, 1, AssociatedTypeWitness);
  uint64_t v54 = v62;
  uint64_t v55 = v66;
  sub_1A75721B0();
  WitnessTable(v53, v91);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v51, v55);
  uint64_t v56 = v73;
  sub_1A7571FD0();
  return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v54, v56);
}

uint64_t sub_1A73BBEF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v21 = a7;
  uint64_t v22 = a8;
  uint64_t v20 = a6;
  uint64_t v23 = a9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v15 = sub_1A7574170();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v20 - v17;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v27 = v20;
  uint64_t v28 = v21;
  uint64_t v29 = v22;
  uint64_t v30 = a10;
  uint64_t v31 = a2;
  uint64_t v32 = a1;
  sub_1A7374474((void (*)(unsigned char *))sub_1A73BCF84, (uint64_t)&v20 - v17);
  sub_1A7574160();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_1A73BC064()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v6 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (int *)(type metadata accessor for Publishers.MapOnScheduler() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  uint64_t v4 = *(void (**)(uint64_t, void))(*(void *)(v6 - 8) + 8);
  v4(v3 + v2[17], v6);
  v4(v3 + v2[18], v6);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A73BC1C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = v2[8];
  uint64_t v12 = *(void *)(type metadata accessor for Publishers.MapOnScheduler() - 8);
  return sub_1A73BBEF4(a1, (uint64_t)v2 + ((*(unsigned __int8 *)(v12 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v5, v6, v7, v8, v9, v10, a2, v11);
}

uint64_t sub_1A73BC294()
{
  return MEMORY[0x1E4FBC0F0];
}

uint64_t sub_1A73BC2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.MapOnScheduler.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1A73BC2B4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1A73BC394(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v12 = v11 + v9;
  uint64_t v13 = v11 + 7;
  unint64_t v14 = ((v11 + 7 + ((v11 + v9 + ((v6 + v9) & ~v9)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16;
  unsigned int v15 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v15 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v14 > 0x18)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
  }
  else
  {
    uint64_t v19 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v20 = ((unint64_t)v4 + v10) & v19;
    unint64_t v21 = ((unint64_t)a2 + v10) & v19;
    uint64_t v22 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16);
    v22(v20, v21, v7);
    unint64_t v23 = (v12 + v20) & v19;
    unint64_t v24 = (v12 + v21) & v19;
    v22(v23, v24, v7);
    uint64_t v25 = (void *)((v13 + v24) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v26 = v25[1];
    uint64_t v27 = (void *)((v13 + v23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v27 = *v25;
    v27[1] = v26;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1A73BC568(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  uint64_t v9 = v7 + 8;
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (v5 + v10) & ~v10;
  v8(v11, v6);
  v8((*(void *)(v9 + 56) + v10 + v11) & ~v10, v6);

  return swift_release();
}

uint64_t sub_1A73BC654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v8 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = *(void *)(v6 + 48) + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  uint64_t v15 = *(void *)(v10 + 48);
  uint64_t v16 = (v15 + v11 + v13) & ~v11;
  uint64_t v17 = (v15 + v11 + v14) & ~v11;
  v9(v16, v17, v7);
  uint64_t v18 = (uint64_t *)((v15 + 7 + v17) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  unint64_t v21 = (void *)((v15 + 7 + v16) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v21 = v20;
  v21[1] = v19;
  swift_retain();
  return a1;
}

uint64_t sub_1A73BC768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  uint64_t v10 = v8 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = *(void *)(v6 + 40) + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  uint64_t v15 = *(void *)(v10 + 40);
  uint64_t v16 = (v15 + v11 + v13) & ~v11;
  uint64_t v17 = (v15 + v11 + v14) & ~v11;
  v9(v16, v17, v7);
  uint64_t v18 = (void *)((v15 + 7 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)((v15 + 7 + v17) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A73BC888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  uint64_t v10 = v8 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = *(void *)(v6 + 32) + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  uint64_t v15 = *(void *)(v10 + 32);
  uint64_t v16 = (v15 + v11 + v13) & ~v11;
  uint64_t v17 = (v15 + v11 + v14) & ~v11;
  v9(v16, v17, v7);
  *(_OWORD *)((v15 + 7 + v16) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v15 + 7 + v17) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A73BC998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  uint64_t v10 = v8 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = *(void *)(v6 + 24) + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  uint64_t v15 = *(void *)(v10 + 24);
  uint64_t v16 = (v15 + v11 + v13) & ~v11;
  uint64_t v17 = (v15 + v11 + v14) & ~v11;
  v9(v16, v17, v7);
  *(_OWORD *)((v15 + 7 + v16) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v15 + 7 + v17) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1A73BCAB0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v7 + 64);
  if (v8 <= v6) {
    unsigned int v11 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v7 + 84);
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v4 - 8) + 64) + v9;
  uint64_t v13 = v10 + v9;
  uint64_t v14 = v10 + 7;
  if (v11 < a2)
  {
    unint64_t v15 = ((v14 + ((v13 + (v12 & ~v9)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16;
    if ((v15 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = a2 - v11 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v15);
        if (!*((unsigned char *)a1 + v15)) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v15);
        if (*(_WORD *)((char *)a1 + v15)) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A73BCC9CLL);
      case 4:
        int v19 = *(_DWORD *)((char *)a1 + v15);
        if (!v19) {
          break;
        }
LABEL_24:
        int v21 = v19 - 1;
        if ((v15 & 0xFFFFFFF8) != 0)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v11 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v6 == v11) {
    return (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v5 + 48))(a1, v6, v4);
  }
  unint64_t v23 = ((unint64_t)a1 + v12) & ~v9;
  if (v8 == v11) {
    return (*(uint64_t (**)(unint64_t))(v7 + 48))(v23);
  }
  unint64_t v24 = *(void *)((v14 + ((v13 + v23) & ~v9)) & 0xFFFFFFFFFFFFFFF8);
  if (v24 >= 0xFFFFFFFF) {
    LODWORD(v24) = -1;
  }
  return (v24 + 1);
}

void sub_1A73BCCB0(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = *(void *)(v8 + 64);
  if (v9 <= v7) {
    unsigned int v13 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  uint64_t v14 = v10 + v11;
  uint64_t v15 = (v10 + v11) & ~v11;
  uint64_t v16 = v12 + v11;
  uint64_t v17 = (v12 + v11 + v15) & ~v11;
  uint64_t v18 = v12 + 7;
  size_t v19 = ((v18 + v17) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v13 >= a3)
  {
    int v23 = 0;
    int v24 = a2 - v13;
    if (a2 <= v13)
    {
LABEL_19:
      uint64_t v25 = ~v11;
      switch(v23)
      {
        case 1:
          a1[v19] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)&a1[v19] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)&a1[v19] = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v7 == v13)
            {
              uint64_t v28 = *(void (**)(void))(v6 + 56);
              v28();
            }
            else
            {
              unint64_t v29 = (unint64_t)&a1[v14] & v25;
              if (v9 == v13)
              {
                uint64_t v30 = *(void (**)(unint64_t))(v8 + 56);
                v30(v29);
              }
              else
              {
                uint64_t v31 = (void *)((v18 + ((v16 + v29) & v25)) & 0xFFFFFFFFFFFFFFF8);
                if ((a2 & 0x80000000) != 0)
                {
                  uint64_t v32 = a2 ^ 0x80000000;
                  v31[1] = 0;
                }
                else
                {
                  uint64_t v32 = a2 - 1;
                }
                *uint64_t v31 = v32;
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v20 = a3 - v13;
    if (((v18 + v17) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v21 = v20 + 1;
    }
    else {
      unsigned int v21 = 2;
    }
    if (v21 >= 0x10000) {
      int v22 = 4;
    }
    else {
      int v22 = 2;
    }
    if (v21 < 0x100) {
      int v22 = 1;
    }
    if (v21 >= 2) {
      int v23 = v22;
    }
    else {
      int v23 = 0;
    }
    int v24 = a2 - v13;
    if (a2 <= v13) {
      goto LABEL_19;
    }
  }
  if (v19) {
    int v26 = 1;
  }
  else {
    int v26 = v24;
  }
  if (v19)
  {
    int v27 = ~v13 + a2;
    bzero(a1, v19);
    *(_DWORD *)a1 = v27;
  }
  switch(v23)
  {
    case 1:
      a1[v19] = v26;
      break;
    case 2:
      *(_WORD *)&a1[v19] = v26;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x1A73BCF5CLL);
    case 4:
      *(_DWORD *)&a1[v19] = v26;
      break;
    default:
      return;
  }
}

uint64_t sub_1A73BCF84(void *a1)
{
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v6 = type metadata accessor for Publishers.MapOnScheduler();
  uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + *(int *)(v6 + 68)))(v4);
  if (v2) {
    *a1 = v2;
  }
  return result;
}

uint64_t static AsyncOperationError.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1A73BD020()
{
  uint64_t v0 = sub_1A73BDDE4();
  sub_1A738EA74(v0);
  return v0;
}

uint64_t sub_1A73BD054(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + qword_1E96F2970);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_1A72AE0F8(v6);
}

uint64_t (*sub_1A73BD0B4())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A73BD110()
{
  return *(unsigned __int8 *)(v0 + qword_1E96F2988);
}

void sub_1A73BD120(char a1)
{
  uint64_t v3 = (void *)sub_1A75725E0();
  objc_msgSend(v1, sel_willChangeValueForKey_, v3);

  *((unsigned char *)v1 + qword_1E96F2988) = a1;
  id v4 = (id)sub_1A75725E0();
  objc_msgSend(v1, sel_didChangeValueForKey_, v4);
}

uint64_t sub_1A73BD1CC()
{
  uint64_t v0 = sub_1A74FA014((uint64_t)&unk_1EFC90DB0);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_1A73BD214()
{
  uint64_t v0 = sub_1A74FA014((uint64_t)&unk_1EFC90DE0);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_1A73BD25C()
{
  uint64_t v0 = sub_1A74FA014((uint64_t)&unk_1EFC90E10);
  swift_arrayDestroy();
  return v0;
}

uint64_t AsyncOperationError.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t AsyncOperationError.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t sub_1A73BD310()
{
  return sub_1A75740D0();
}

BOOL sub_1A73BD338(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1A73BD348()
{
  return sub_1A7574110();
}

uint64_t sub_1A73BD390()
{
  return sub_1A73BD348();
}

uint64_t sub_1A73BD39C()
{
  return sub_1A73BD310();
}

uint64_t sub_1A73BD3A8()
{
  return sub_1A7574110();
}

BOOL sub_1A73BD3F0(char *a1, char *a2)
{
  return sub_1A73BD338(*a1, *a2);
}

uint64_t AsyncOperation.operationID.getter()
{
  uint64_t v1 = *(void *)(v0 + qword_1E96F2978);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A73BD43C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)()@<X8>)
{
  uint64_t v4 = *(void *)(a2 + a1 - 8);
  uint64_t v5 = (uint64_t (*)())sub_1A73BDDE4();
  uint64_t v6 = (uint64_t)v5;
  uint64_t v8 = v7;
  if (v5)
  {
    uint64_t v5 = (uint64_t (*)())swift_allocObject();
    *((void *)v5 + 2) = v4;
    *((void *)v5 + 3) = v6;
    *((void *)v5 + 4) = v8;
    unsigned int v9 = sub_1A7366E64;
  }
  else
  {
    unsigned int v9 = 0;
  }
  *a3 = v9;
  a3[1] = v5;

  return sub_1A738EA74(v6);
}

uint64_t sub_1A73BD4D0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (*a1)
  {
    uint64_t v6 = *(void *)(a4 + a3 - 8);
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = v6;
    v7[3] = v4;
    v7[4] = v5;
    uint64_t v8 = sub_1A73BE470;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  sub_1A738EA74(v4);
  return sub_1A73BD054((uint64_t)v8, (uint64_t)v7);
}

uint64_t sub_1A73BD56C()
{
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v2 = sub_1A7574170();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v12 - v4);
  if (objc_msgSend(v0, sel_isCancelled))
  {
    uint64_t v6 = (void (**)(uint64_t *))((char *)v0 + qword_1E96F2970);
    uint64_t result = swift_beginAccess();
    uint64_t v8 = *v6;
    if (*v6)
    {
      sub_1A73BDE6C();
      *uint64_t v5 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      sub_1A738EA74((uint64_t)v8);
      v8(v5);
      sub_1A72AE0F8((uint64_t)v8);
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    sub_1A73BD120(1);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v0;
    uint64_t v10 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))((*v1 & *v0) + 0xA0);
    uint64_t v11 = v0;
    v10(sub_1A73BDE64, v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A73BD79C(uint64_t a1, uint64_t a2)
{
  sub_1A73BD120(2);
  uint64_t v4 = (void (**)(uint64_t))(a2 + qword_1E96F2970);
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *v4;
  if (*v4)
  {
    sub_1A738EA74((uint64_t)v6);
    v6(a1);
    return sub_1A72AE0F8((uint64_t)v6);
  }
  return result;
}

void sub_1A73BD828(void *a1)
{
  id v1 = a1;
  sub_1A73BD56C();
}

uint64_t sub_1A73BD870()
{
  return 1;
}

uint64_t sub_1A73BD878(void *a1)
{
  id v1 = a1;
  unsigned __int8 v2 = sub_1A73BD8AC();

  return v2 & 1;
}

id sub_1A73BD8AC()
{
  if (v0[qword_1E96F2988]) {
    return 0;
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AsyncOperation();
  return objc_msgSendSuper2(&v2, sel_isReady);
}

BOOL sub_1A73BD934()
{
  return sub_1A73BD95C();
}

BOOL sub_1A73BD95C()
{
  return *(unsigned char *)(v0 + qword_1E96F2988) == 1;
}

BOOL sub_1A73BD974()
{
  return sub_1A73BD99C();
}

BOOL sub_1A73BD99C()
{
  return *(unsigned char *)(v0 + qword_1E96F2988) == 2;
}

id sub_1A73BD9B4(uint64_t a1, uint64_t a2)
{
  return sub_1A73BD9FC(a1, a2, (void (*)(void))sub_1A73BD1CC);
}

id sub_1A73BD9CC(uint64_t a1, uint64_t a2)
{
  return sub_1A73BD9FC(a1, a2, (void (*)(void))sub_1A73BD214);
}

id sub_1A73BD9E4(uint64_t a1, uint64_t a2)
{
  return sub_1A73BD9FC(a1, a2, (void (*)(void))sub_1A73BD25C);
}

id sub_1A73BD9FC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  uint64_t v3 = (void *)sub_1A7572C60();
  swift_bridgeObjectRelease();

  return v3;
}

id AsyncOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id AsyncOperation.init()()
{
  id v1 = (uint64_t *)&v0[qword_1E96F2978];
  objc_super v2 = v0;
  *id v1 = sub_1A73BDED8();
  v1[1] = v3;
  uint64_t v4 = &v2[qword_1E96F2970];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  v2[qword_1E96F2988] = 0;

  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for AsyncOperation();
  return objc_msgSendSuper2(&v6, sel_init);
}

id sub_1A73BDB38()
{
  return AsyncOperation.init()();
}

id AsyncOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AsyncOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A73BDBB8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + qword_1E96F2970);

  return sub_1A72AE0F8(v2);
}

uint64_t sub_1A73BDC0C()
{
  uint64_t result = sub_1A7572700();
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v1 = result;
  uint64_t v2 = sub_1A73BDD6C(result, 0);
  uint64_t v3 = sub_1A73BDCB0(&v4, v2 + 4, v1, 0xD000000000000010, 0x80000001A75A14E0);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 != (void *)v1)
  {
    __break(1u);
LABEL_4:
    uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  }
  off_1E96F2968 = v2;
  return result;
}

void *sub_1A73BDCB0(void *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5 = result;
  uint64_t v6 = HIBYTE(a5) & 0xF;
  uint64_t v12 = a4;
  unint64_t v13 = a5;
  if ((a5 & 0x2000000000000000) == 0) {
    uint64_t v6 = a4 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v14 = v6;
  if (!a2)
  {
    uint64_t v7 = 0;
LABEL_14:
    *uint64_t v5 = a4;
    v5[1] = a5;
    uint64_t v5[2] = 0;
    v5[3] = v6;
    return (void *)v7;
  }
  uint64_t v7 = a3;
  if (!a3) {
    goto LABEL_14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = a2;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = sub_1A7572760();
      if (!v11) {
        break;
      }
      ++v9;
      uint64_t *v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    uint64_t v7 = v9;
LABEL_13:
    uint64_t v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void *sub_1A73BDD6C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13F8);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 17;
  }
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

uint64_t sub_1A73BDDE4()
{
  uint64_t v1 = v0 + qword_1E96F2970;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1A73BDE2C()
{
  return swift_deallocObject();
}

uint64_t sub_1A73BDE64(uint64_t a1)
{
  return sub_1A73BD79C(a1, *(void *)(v1 + 16));
}

unint64_t sub_1A73BDE6C()
{
  unint64_t result = qword_1E96F2980;
  if (!qword_1E96F2980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2980);
  }
  return result;
}

uint64_t type metadata accessor for AsyncOperation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A73BDED8()
{
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1A72D2E44(0, 16, 0);
  uint64_t v0 = v14;
  if (qword_1E96F07E0 != -1) {
LABEL_15:
  }
    swift_once();
  uint64_t v1 = 0;
  do
  {
    uint64_t v2 = off_1E96F2968;
    unint64_t v3 = *((void *)off_1E96F2968 + 2);
    if (!v3)
    {
      __break(1u);
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    unint64_t v13 = 0;
    swift_bridgeObjectRetain();
    MEMORY[0x1AD0CD350](&v13, 8);
    uint64_t v4 = (v13 * (unsigned __int128)v3) >> 64;
    if (v3 > v13 * v3)
    {
      unint64_t v5 = -(uint64_t)v3 % v3;
      if (v5 > v13 * v3)
      {
        do
        {
          unint64_t v13 = 0;
          MEMORY[0x1AD0CD350](&v13, 8);
        }
        while (v5 > v13 * v3);
        uint64_t v4 = (v13 * (unsigned __int128)v3) >> 64;
      }
    }
    if (v4 >= v2[2]) {
      goto LABEL_14;
    }
    uint64_t v6 = (char *)&v2[2 * v4];
    uint64_t v8 = *((void *)v6 + 4);
    uint64_t v7 = *((void *)v6 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v14 = v0;
    unint64_t v10 = *(void *)(v0 + 16);
    unint64_t v9 = *(void *)(v0 + 24);
    if (v10 >= v9 >> 1)
    {
      sub_1A72D2E44(v9 > 1, v10 + 1, 1);
      uint64_t v0 = v14;
    }
    ++v1;
    *(void *)(v0 + 16) = v10 + 1;
    uint64_t v11 = v0 + 16 * v10;
    *(void *)(v11 + 32) = v8;
    *(void *)(v11 + 40) = v7;
  }
  while (v1 != 16);
  uint64_t v14 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2A98);
  sub_1A73BE498();
  return sub_1A7572840();
}

unint64_t sub_1A73BE088()
{
  unint64_t result = qword_1E96F2990[0];
  if (!qword_1E96F2990[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96F2990);
  }
  return result;
}

uint64_t sub_1A73BE0E4()
{
  return 8;
}

void *sub_1A73BE0F0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for AsyncOperationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A73BE198);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AsyncOperationError()
{
  return &type metadata for AsyncOperationError;
}

uint64_t sub_1A73BE1D0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for AsyncOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AsyncOperation);
}

uint64_t dispatch thunk of AsyncOperation.completion.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}