uint64_t dispatch thunk of AsyncOperation.completion.setter()
{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AsyncOperation.completion.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AsyncOperation.perform(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

unsigned char *sub_1A73BE310(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73BE3DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for AsyncOperation.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A73BE41C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A73BE438()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A73BE470()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

unint64_t sub_1A73BE498()
{
  unint64_t result = qword_1E96F2AA0;
  if (!qword_1E96F2AA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F2A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2AA0);
  }
  return result;
}

uint64_t FloatingPoint.isAlmostZero(absoluteTolerance:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7573FE0();
  char v6 = sub_1A7572580();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a2);
  return v6 & 1;
}

uint64_t CLRegion.stringRepresentation.getter()
{
  id v1 = objc_msgSend(v0, sel_identifier);
  uint64_t v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    id v5 = v0;
    objc_msgSend(v4, sel_center, 0, 0xE000000000000000);
    sub_1A7572C30();
    sub_1A7572740();
    objc_msgSend(v4, sel_center);
    sub_1A7572C30();
    objc_msgSend(v4, sel_radius, 0, 0xE000000000000000);
    sub_1A7572C30();
    objc_msgSend(v4, sel_geoReferenceFrame);
    sub_1A7573BC0();
    sub_1A7572740();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7572740();

    swift_bridgeObjectRelease();
  }
  return v2;
}

id EquatableCLCircularRegion.base.getter()
{
  return *v0;
}

ReminderKitInternal::EquatableCLCircularRegion __swiftcall EquatableCLCircularRegion.init(_:)(ReminderKitInternal::EquatableCLCircularRegion result)
{
  v1->base.super.super.isa = result.base.super.super.isa;
  return result;
}

uint64_t static EquatableCLCircularRegion.== infix(_:_:)()
{
  uint64_t v0 = CLRegion.stringRepresentation.getter();
  uint64_t v2 = v1;
  if (v0 == CLRegion.stringRepresentation.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1A7573DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A73BE874()
{
  uint64_t v0 = CLRegion.stringRepresentation.getter();
  uint64_t v2 = v1;
  if (v0 == CLRegion.stringRepresentation.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1A7573DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

ValueMetadata *type metadata accessor for EquatableCLCircularRegion()
{
  return &type metadata for EquatableCLCircularRegion;
}

Class CLPlacemark.normalizedMapRegionForLocationTrigger.getter()
{
  id v1 = objc_msgSend(v0, sel_region);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  self;
  uint64_t v3 = (objc_class *)swift_dynamicCastObjCClass();
  v4.super.super.isa = v3;
  if (v3)
  {
    [(objc_class *)v3 radius];
    double v6 = v5;
    v7 = self;
    objc_msgSend(v7, sel_minimumRegionMonitoringDistance);
    if (v6 < v8)
    {
      sub_1A73BE9F0();
      objc_msgSend(v7, sel_minimumRegionMonitoringDistance);
      return (Class)CLCircularRegion.init(circularRegion:radius:)(v4, v9);
    }
  }
  else
  {
  }
  return v4.super.super.isa;
}

unint64_t sub_1A73BE9F0()
{
  unint64_t result = qword_1E96F2AA8;
  if (!qword_1E96F2AA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E96F2AA8);
  }
  return result;
}

id static CLPlacemark.testing_appleInc.getter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1BA58]), sel_init);
  id v1 = (void *)sub_1A75725E0();
  objc_msgSend(v0, sel_setStreet_, v1);

  uint64_t v2 = (void *)sub_1A75725E0();
  objc_msgSend(v0, sel_setCity_, v2);

  uint64_t v3 = (void *)sub_1A75725E0();
  objc_msgSend(v0, sel_setState_, v3);

  CLCircularRegion v4 = (void *)sub_1A75725E0();
  objc_msgSend(v0, sel_setPostalCode_, v4);

  double v5 = (void *)sub_1A75725E0();
  objc_msgSend(v0, sel_setCountry_, v5);

  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E5F0]), sel_initWithLatitude_longitude_, 37.332093, -122.030255);
  id v7 = v0;
  double v8 = (void *)sub_1A75725E0();
  id v9 = objc_msgSend(self, sel_placemarkWithLocation_name_postalAddress_, v6, v8, v7);

  return v9;
}

id static CLPlacemark.testing_applePark.getter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1BA58]), sel_init);
  id v1 = (void *)sub_1A75725E0();
  objc_msgSend(v0, sel_setStreet_, v1);

  uint64_t v2 = (void *)sub_1A75725E0();
  objc_msgSend(v0, sel_setCity_, v2);

  uint64_t v3 = (void *)sub_1A75725E0();
  objc_msgSend(v0, sel_setState_, v3);

  CLCircularRegion v4 = (void *)sub_1A75725E0();
  objc_msgSend(v0, sel_setPostalCode_, v4);

  double v5 = (void *)sub_1A75725E0();
  objc_msgSend(v0, sel_setCountry_, v5);

  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E5F0]), sel_initWithLatitude_longitude_, 37.3349, -122.00902);
  id v7 = v0;
  double v8 = (void *)sub_1A75725E0();
  id v9 = objc_msgSend(self, sel_placemarkWithLocation_name_postalAddress_, v6, v8, v7);

  return v9;
}

uint64_t REMApplicationShortcutUserInfoKeys.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t REMApplicationShortcutUserInfoKeys.rawValue.getter()
{
  return 0xD000000000000017;
}

unint64_t sub_1A73BEE74()
{
  unint64_t result = qword_1E96F2AB0;
  if (!qword_1E96F2AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2AB0);
  }
  return result;
}

uint64_t sub_1A73BEEC8()
{
  return sub_1A7574110();
}

uint64_t sub_1A73BEF20()
{
  return sub_1A75726F0();
}

uint64_t sub_1A73BEF3C()
{
  return sub_1A7574110();
}

uint64_t sub_1A73BEF90@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A73BEFE4(void *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x80000001A759DD70;
}

unsigned char *storeEnumTagSinglePayload for REMApplicationShortcutUserInfoKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A73BF0A0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMApplicationShortcutUserInfoKeys()
{
  return &type metadata for REMApplicationShortcutUserInfoKeys;
}

uint64_t sub_1A73BF0D8()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F2AB8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F2AB8);
  if (qword_1EB704BF8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F68);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t REMRemindersListBatchDeleteInvocation.ListType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2AD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73BF5F0();
  sub_1A7574190();
  if (!v2)
  {
    char v14 = 0;
    sub_1A73BF644();
    sub_1A7573A50();
    switch((char)v13)
    {
      case 1:
        type metadata accessor for REMObjectID_Codable();
        char v14 = 1;
        sub_1A73C3104(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        char v10 = 0;
        uint64_t v9 = v13;
        break;
      case 2:
        type metadata accessor for REMObjectID_Codable();
        char v14 = 1;
        sub_1A73C3104(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        uint64_t v9 = v13;
        char v10 = 1;
        break;
      case 3:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705B90);
        char v14 = 2;
        sub_1A73C367C((unint64_t *)&qword_1EB705B98, &qword_1EB705A50);
        sub_1A7573A50();
        uint64_t v9 = sub_1A737EE5C(v13);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        char v10 = 2;
        break;
      case 4:
        type metadata accessor for REMObjectID_Codable();
        char v14 = 3;
        sub_1A73C3104(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        uint64_t v9 = v13;
        char v10 = 3;
        break;
      default:
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        uint64_t v9 = 0;
        char v10 = 4;
        break;
    }
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A73BF5F0()
{
  unint64_t result = qword_1E96F2AD8;
  if (!qword_1E96F2AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2AD8);
  }
  return result;
}

unint64_t sub_1A73BF644()
{
  unint64_t result = qword_1E96F2AE0;
  if (!qword_1E96F2AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2AE0);
  }
  return result;
}

void REMRemindersListBatchDeleteInvocation.ListType.encode(to:)(void *a1)
{
  uint64_t v82 = sub_1A7571BC0();
  uint64_t v78 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v5 = (char *)v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2AE8);
  uint64_t v6 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  double v8 = (char *)v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v83 = *(void *)v1;
  uint64_t v9 = *(unsigned __int8 *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73BF5F0();
  v80 = v8;
  sub_1A75741B0();
  switch(v9)
  {
    case 1:
      LOBYTE(v87[0]) = 2;
      LOBYTE(v89) = 0;
      sub_1A73C30B0();
      id v14 = (id)v83;
      id v15 = (id)v83;
      uint64_t v16 = v81;
      v17 = v80;
      sub_1A7573B60();
      if (!v2)
      {
        v39 = (objc_class *)type metadata accessor for REMObjectID_Codable();
        id v40 = objc_allocWithZone(v39);
        id v41 = v15;
        id v42 = objc_msgSend(v41, sel_uuid);
        sub_1A7571BB0();

        v43 = (void *)sub_1A7571B90();
        (*(void (**)(char *, uint64_t))(v78 + 8))(v5, v82);
        id v44 = objc_msgSend(v41, sel_entityName);
        if (!v44)
        {
          _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          id v44 = (id)sub_1A75725E0();
          swift_bridgeObjectRelease();
        }
        v85.receiver = v40;
        v85.super_class = v39;
        id v35 = objc_msgSendSuper2(&v85, sel_initWithUUID_entityName_, v43, v44);
        unint64_t v45 = v83;
        sub_1A73C314C((id)v83, 1);

        v87[0] = v35;
        LOBYTE(v89) = 1;
        sub_1A73C3104(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
        v19 = v80;
        uint64_t v18 = v81;
        sub_1A7573B60();
        v37 = (void *)v45;
        char v38 = 1;
        goto LABEL_20;
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v16);
      sub_1A73C314C(v14, 1);
      return;
    case 2:
      LOBYTE(v87[0]) = 3;
      LOBYTE(v89) = 0;
      sub_1A73C30B0();
      v19 = v80;
      uint64_t v18 = v81;
      sub_1A7573B60();
      if (v2) {
        goto LABEL_24;
      }
      v77[1] = 0;
      uint64_t v20 = v83;
      unint64_t v79 = v83 & 0xC000000000000001;
      if ((v83 & 0xC000000000000001) != 0)
      {
        uint64_t v21 = sub_1A7573400();
        v22 = (void *)MEMORY[0x1E4FBC860];
        if (!v21) {
          goto LABEL_39;
        }
        uint64_t v23 = v21;
        v77[0] = v6;
        v92 = (void *)MEMORY[0x1E4FBC860];
        sub_1A75736F0();
        uint64_t v89 = sub_1A75733B0();
        uint64_t v90 = v24;
        unsigned __int8 v91 = 1;
        if (v23 < 0)
        {
          __break(1u);
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v23 = *(void *)(v83 + 16);
        v22 = (void *)MEMORY[0x1E4FBC860];
        if (!v23) {
          goto LABEL_39;
        }
        v77[0] = v6;
        v92 = (void *)MEMORY[0x1E4FBC860];
        sub_1A75736F0();
        uint64_t v89 = sub_1A7348124(v20);
        uint64_t v90 = v54;
        unsigned __int8 v91 = v55 & 1;
      }
      v56 = (void (**)(char *, uint64_t))(v78 + 8);
      uint64_t v57 = v20 & 0xFFFFFFFFFFFFFF8;
      if (v20 < 0) {
        uint64_t v57 = v20;
      }
      uint64_t v78 = v57;
      break;
    case 3:
LABEL_11:
      LOBYTE(v87[0]) = 4;
      LOBYTE(v89) = 0;
      sub_1A73C30B0();
      id v25 = (id)v83;
      id v26 = (id)v83;
      uint64_t v27 = v81;
      v28 = v80;
      sub_1A7573B60();
      if (!v2)
      {
        v46 = (objc_class *)type metadata accessor for REMObjectID_Codable();
        id v47 = objc_allocWithZone(v46);
        id v48 = v26;
        id v49 = objc_msgSend(v48, sel_uuid);
        sub_1A7571BB0();

        v50 = (void *)sub_1A7571B90();
        (*(void (**)(char *, uint64_t))(v78 + 8))(v5, v82);
        id v51 = objc_msgSend(v48, sel_entityName);
        if (!v51)
        {
          _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          id v51 = (id)sub_1A75725E0();
          swift_bridgeObjectRelease();
        }
        v86.receiver = v47;
        v86.super_class = v46;
        id v52 = objc_msgSendSuper2(&v86, sel_initWithUUID_entityName_, v50, v51);
        id v53 = (id)v83;
        sub_1A73C314C((id)v83, 3);

        v87[0] = v52;
        LOBYTE(v89) = 3;
        sub_1A73C3104(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
        v19 = v80;
        uint64_t v18 = v81;
        sub_1A7573B60();
        sub_1A73C314C(v53, 3);

        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v28, v27);
      sub_1A73C314C(v25, 3);
      return;
    case 4:
      LOBYTE(v87[0]) = 0;
      LOBYTE(v89) = 0;
      sub_1A73C30B0();
      v19 = v80;
      uint64_t v18 = v81;
      sub_1A7573B60();
      goto LABEL_24;
    default:
      LOBYTE(v87[0]) = 1;
      LOBYTE(v89) = 0;
      sub_1A73C30B0();
      id v10 = (id)v83;
      id v11 = (id)v83;
      uint64_t v12 = v81;
      uint64_t v13 = v80;
      sub_1A7573B60();
      if (v2)
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v12);
        sub_1A73C314C(v10, 0);
      }
      else
      {
        v29 = (objc_class *)type metadata accessor for REMObjectID_Codable();
        id v30 = objc_allocWithZone(v29);
        id v31 = v11;
        id v32 = objc_msgSend(v31, sel_uuid);
        sub_1A7571BB0();

        v33 = (void *)sub_1A7571B90();
        (*(void (**)(char *, uint64_t))(v78 + 8))(v5, v82);
        id v34 = objc_msgSend(v31, sel_entityName);
        if (!v34)
        {
          _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          id v34 = (id)sub_1A75725E0();
          swift_bridgeObjectRelease();
        }
        v84.receiver = v30;
        v84.super_class = v29;
        id v35 = objc_msgSendSuper2(&v84, sel_initWithUUID_entityName_, v33, v34);
        unint64_t v36 = v83;
        sub_1A73C314C((id)v83, 0);

        v87[0] = v35;
        LOBYTE(v89) = 1;
        sub_1A73C3104(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
        v19 = v80;
        uint64_t v18 = v81;
        sub_1A7573B60();
        v37 = (void *)v36;
        char v38 = 0;
LABEL_20:
        sub_1A73C314C(v37, v38);

LABEL_24:
        (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v18);
      }
      return;
  }
  do
  {
    while (1)
    {
      sub_1A7347ECC(v89, v90, v91, v20);
      v67 = v66;
      v68 = (objc_class *)type metadata accessor for REMObjectID_Codable();
      id v69 = objc_allocWithZone(v68);
      id v70 = v67;
      id v71 = objc_msgSend(v70, sel_uuid);
      sub_1A7571BB0();

      v72 = (void *)sub_1A7571B90();
      (*v56)(v5, v82);
      id v73 = objc_msgSend(v70, sel_entityName);
      if (!v73)
      {
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        id v73 = (id)sub_1A75725E0();
        uint64_t v20 = v83;
        swift_bridgeObjectRelease();
      }
      v88.receiver = v69;
      v88.super_class = v68;
      objc_msgSendSuper2(&v88, sel_initWithUUID_entityName_, v72, v73);

      sub_1A75736C0();
      sub_1A7573700();
      sub_1A7573710();
      sub_1A75736D0();
      if (v79) {
        break;
      }
      uint64_t v58 = v89;
      uint64_t v59 = v90;
      char v60 = v91;
      uint64_t v61 = sub_1A7347DE4(v89, v90, v91, v20);
      uint64_t v63 = v62;
      char v65 = v64;
      sub_1A7326484(v58, v59, v60);
      uint64_t v89 = v61;
      uint64_t v90 = v63;
      uint64_t v20 = v83;
      unsigned __int8 v91 = v65 & 1;
      if (!--v23) {
        goto LABEL_38;
      }
    }
    if ((v91 & 1) == 0)
    {
      __break(1u);
      JUMPOUT(0x1A73C0150);
    }
    if (sub_1A75733D0()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1E48);
    v74 = (void (*)(id *, void))sub_1A7572CB0();
    sub_1A7573460();
    v74(v87, 0);
    --v23;
  }
  while (v23);
LABEL_38:
  sub_1A7326484(v89, v90, v91);
  v22 = v92;
  uint64_t v6 = v77[0];
LABEL_39:
  v87[0] = v22;
  LOBYTE(v89) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F19E8);
  sub_1A731DA28();
  uint64_t v75 = v81;
  v76 = v80;
  sub_1A7573B60();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v76, v75);
  swift_bridgeObjectRelease();
}

uint64_t REMRemindersListBatchDeleteInvocation.ListType.description.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t result = 7105633;
  switch(*(unsigned char *)(v0 + 8))
  {
    case 1:
      id v6 = v1;
      sub_1A7573560();
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD000000000000012;
      id v7 = objc_msgSend(v6, sel_description);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      uint64_t v4 = v1;
      char v5 = 1;
      goto LABEL_6;
    case 2:
      unint64_t v9 = 0x7265646E696D6572;
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
      sub_1A72D8FDC();
      sub_1A7572C90();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      return v9;
    case 3:
      unint64_t v9 = 0x2870756F7267;
      sub_1A73C3198(v1, 3);
      id v8 = objc_msgSend(v1, sel_description);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      uint64_t v4 = v1;
      char v5 = 3;
      goto LABEL_6;
    case 4:
      return result;
    default:
      unint64_t v9 = 0x287473696CLL;
      sub_1A73C3198(v1, 0);
      id v3 = objc_msgSend(v1, sel_description);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      uint64_t v4 = v1;
      char v5 = 0;
LABEL_6:
      sub_1A73C314C(v4, v5);
      return v9;
  }
}

uint64_t sub_1A73C03F0(unsigned __int8 *a1, char *a2)
{
  return sub_1A7540DE8(*a1, *a2);
}

uint64_t sub_1A73C03FC()
{
  return sub_1A7574110();
}

uint64_t sub_1A73C04D4()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A73C0594()
{
  return sub_1A7574110();
}

uint64_t sub_1A73C0668@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A73C59B4();
  *a1 = result;
  return result;
}

void sub_1A73C0698(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1702060386;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x44497473696CLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x7265646E696D6572;
      a1[1] = 0xEB00000000734449;
      break;
    case 3:
      *a1 = 0x444970756F7267;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1A73C0730()
{
  uint64_t result = 1702060386;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x44497473696CLL;
      break;
    case 2:
      uint64_t result = 0x7265646E696D6572;
      break;
    case 3:
      uint64_t result = 0x444970756F7267;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A73C07BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A73C59B4();
  *a1 = result;
  return result;
}

uint64_t sub_1A73C07E4(uint64_t a1)
{
  unint64_t v2 = sub_1A73BF5F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73C0820(uint64_t a1)
{
  unint64_t v2 = sub_1A73BF5F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A73C085C(unsigned __int8 *a1, char *a2)
{
  return sub_1A7540C24(*a1, *a2);
}

uint64_t sub_1A73C0868()
{
  return sub_1A7574110();
}

uint64_t sub_1A73C095C()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A73C0A38()
{
  return sub_1A7574110();
}

uint64_t sub_1A73C0B28@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A73C5A54();
  *a1 = result;
  return result;
}

void sub_1A73C0B58(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7105633;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1953720684;
      goto LABEL_3;
    case 2:
      *a1 = 0x6D536D6F74737563;
      a1[1] = 0xEF7473694C747261;
      break;
    case 3:
      *a1 = 0x7265646E696D6572;
      a1[1] = 0xE900000000000073;
      break;
    case 4:
      *a1 = 0x70756F7267;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1A73C0C10()
{
  return sub_1A75729D0();
}

uint64_t sub_1A73C0C70()
{
  return sub_1A7572980();
}

uint64_t sub_1A73C0CC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListBatchDeleteInvocation.ListType.init(from:)(a1, a2);
}

void sub_1A73C0CDC(void *a1)
{
}

uint64_t REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.hasReminders(completedBefore:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A7571B60();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A73C3428(v1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A72CB560((uint64_t)v4, &qword_1EB704C60);
    char v9 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_1A73C3104((unint64_t *)&qword_1EB7057C8, MEMORY[0x1E4F27928]);
    char v9 = sub_1A7572580() ^ 1;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9 & 1;
}

unint64_t sub_1A73C0EC8()
{
  return 0xD000000000000014;
}

uint64_t sub_1A73C0EE4(uint64_t a1)
{
  unint64_t v2 = sub_1A73C3490();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73C0F20(uint64_t a1)
{
  unint64_t v2 = sub_1A73C3490();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.encode(to:)(void *a1)
{
  return sub_1A73C1F8C(a1, &qword_1E96F2AF8, (void (*)(void))sub_1A73C3490);
}

uint64_t REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2B08);
  uint64_t v16 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73C3490();
  sub_1A7574190();
  if (!v2)
  {
    sub_1A7571B60();
    sub_1A73C3104((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
    sub_1A75739F0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
    sub_1A731D558((uint64_t)v6, (uint64_t)v12);
    sub_1A73C38CC((uint64_t)v12, v15, type metadata accessor for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A73C11F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.init(from:)(a1, a2);
}

uint64_t sub_1A73C1208(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73C23B8(a1, a2, a3, &qword_1E96F2AF8, (void (*)(void))sub_1A73C3490);
}

id REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.list.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)v1;
  *(void *)a1 = *(void *)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  return sub_1A73C3198(v2, v3);
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.completedBeforeDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1
     + *(int *)(type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(0) + 20);

  return sub_1A73C3428(v3, a1);
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.init(list:completedBeforeDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = *(unsigned char *)(a1 + 8);
  *(void *)a3 = *(void *)a1;
  *(unsigned char *)(a3 + 8) = v4;
  uint64_t v5 = a3
     + *(int *)(type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(0) + 20);

  return sub_1A731D558(a2, v5);
}

uint64_t sub_1A73C12F4()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 1953720684;
  }
}

uint64_t sub_1A73C132C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A73C5AA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A73C1354(uint64_t a1)
{
  unint64_t v2 = sub_1A73C3524();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73C1390(uint64_t a1)
{
  unint64_t v2 = sub_1A73C3524();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2B10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73C3524();
  sub_1A75741B0();
  char v9 = *((unsigned char *)v3 + 8);
  uint64_t v12 = *v3;
  char v13 = v9;
  v11[15] = 0;
  sub_1A7317B40();
  sub_1A7573B60();
  if (!v2)
  {
    type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(0);
    v11[14] = 1;
    sub_1A7571B60();
    sub_1A73C3104(&qword_1EB704C38, MEMORY[0x1E4F27928]);
    sub_1A7573B00();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2B20);
  uint64_t v18 = *(void *)(v7 - 8);
  uint64_t v19 = v7;
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73C3524();
  sub_1A7574190();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v16 = v10;
    uint64_t v13 = v18;
    char v23 = 0;
    sub_1A73C3578();
    uint64_t v14 = v19;
    sub_1A7573A50();
    char v15 = v21;
    *(void *)uint64_t v12 = v20;
    v12[8] = v15;
    sub_1A7571B60();
    char v22 = 1;
    sub_1A73C3104((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
    sub_1A75739F0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
    sub_1A731D558((uint64_t)v6, (uint64_t)&v12[*(int *)(v16 + 20)]);
    sub_1A73C39A0((uint64_t)v12, v17, type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1A73C35CC((uint64_t)v12);
  }
}

void sub_1A73C18B0(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1A73C18C8(void *a1)
{
  return REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.encode(to:)(a1);
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.deletedReminderIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.accounts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.init(deletedReminderIDs:accounts:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1A73C18F8()
{
  if (*v0) {
    return 0x73746E756F636361;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_1A73C1938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A73C5B80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A73C1960(uint64_t a1)
{
  unint64_t v2 = sub_1A73C3628();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73C199C(uint64_t a1)
{
  unint64_t v2 = sub_1A73C3628();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2B30);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73C3628();
  sub_1A75741B0();
  uint64_t v12 = v8;
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705B90);
  sub_1A73C367C((unint64_t *)&qword_1EB7054B0, &qword_1EB704E40);
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2B40);
    sub_1A73C3710();
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2B50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73C3628();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705B90);
  char v13 = 0;
  sub_1A73C367C((unint64_t *)&qword_1EB705B98, &qword_1EB705A50);
  sub_1A7573A50();
  uint64_t v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2B40);
  char v13 = 1;
  sub_1A73C37B4();
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v14;
  *a2 = v9;
  a2[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A73C1E20@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A73C1E38(void *a1)
{
  return REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.encode(to:)(a1);
}

uint64_t static REMRemindersListBatchDeleteInvocation.DeleteInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t static REMRemindersListBatchDeleteInvocation.CountInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.oldestCompletionDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A73C3428(v1, a1);
}

uint64_t REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.init(oldestCompletionDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A731D558(a1, a2);
}

uint64_t sub_1A73C1EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A73C5C70(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A73C1ED8(uint64_t a1)
{
  unint64_t v2 = sub_1A73C3858();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73C1F14(uint64_t a1)
{
  unint64_t v2 = sub_1A73C3858();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.encode(to:)(void *a1)
{
  return sub_1A73C1F8C(a1, &qword_1E96F2B60, (void (*)(void))sub_1A73C3858);
}

uint64_t sub_1A73C1F8C(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A75741B0();
  sub_1A7571B60();
  sub_1A73C3104(&qword_1EB704C38, MEMORY[0x1E4F27928]);
  sub_1A7573B00();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2B70);
  uint64_t v16 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73C3858();
  sub_1A7574190();
  if (!v2)
  {
    sub_1A7571B60();
    sub_1A73C3104((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
    sub_1A75739F0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
    sub_1A731D558((uint64_t)v6, (uint64_t)v12);
    sub_1A73C38CC((uint64_t)v12, v15, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A73C2364@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A73C237C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73C23B8(a1, a2, a3, &qword_1E96F2B60, (void (*)(void))sub_1A73C3858);
}

uint64_t sub_1A73C23B8(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_1A75741B0();
  sub_1A7571B60();
  sub_1A73C3104(&qword_1EB704C38, MEMORY[0x1E4F27928]);
  sub_1A7573B00();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t static REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.supportsSecureCoding.getter()
{
  return 1;
}

id REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t static REMRemindersListBatchDeleteInvocation.fetchCompletedReminderIDsToBeDeleted(in:completedBefore:store:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73C2674(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for REMRemindersListBatchDeleteInvocation.CountInvocation, (void (*)(uint64_t *__return_ptr, id, uint64_t))sub_1A72F6410, "REMRemindersListBatchDeleteInvocation_CountInvocation RESULT {list: %s, date: %s, reminder.count: %ld}");
}

uint64_t static REMRemindersListBatchDeleteInvocation.deleteCompletedReminders(in:completedBefore:store:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73C2674(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation, (void (*)(uint64_t *__return_ptr, id, uint64_t))sub_1A72F6458, "REMRemindersListBatchDeleteInvocation_DeleteInvocation RESULT {list: %s, date: %s, reminder.count: %ld}");
}

uint64_t sub_1A73C2674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), void (*a5)(uint64_t *__return_ptr, id, uint64_t), const char *a6)
{
  void (*v15)(uint64_t *__return_ptr, id, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *__return_ptr, id, uint64_t);
  NSObject *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  os_log_type_t v43;
  uint64_t v44;
  const char *v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  int v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  id v57;
  const char *v58;
  void (*v59)(uint64_t *__return_ptr, id, uint64_t);
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;

  uint64_t v58 = a6;
  uint64_t v59 = a5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  char v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (void (*)(uint64_t *__return_ptr, id, uint64_t))((char *)&v49 - v14);
  uint64_t v16 = type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(0);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void **)a1;
  char v21 = *(unsigned char *)(a1 + 8);
  char v22 = sub_1A73C3428(a2, v19 + *(int *)(v17 + 28));
  *(void *)uint64_t v19 = v20;
  *(unsigned char *)(v19 + 8) = v21;
  char v23 = objc_allocWithZone((Class)a4(v22));
  sub_1A73C3198(v20, v21);
  uint64_t v24 = objc_msgSend(v23, sel_initWithFetchResultTokenToDiffAgainst_, 0);
  v59(&v60, v24, v19);
  if (v6)
  {

    sub_1A73C35CC(v19);
  }
  else
  {
    char v55 = v13;
    v56 = v19;
    uint64_t v59 = v15;
    uint64_t v57 = v24;
    uint64_t v19 = v60;
    id v25 = v61;

    if (qword_1E96F07E8 != -1) {
      swift_once();
    }
    id v26 = sub_1A7571E90();
    __swift_project_value_buffer(v26, (uint64_t)qword_1E96F2AB8);
    uint64_t v27 = v59;
    sub_1A73C3428(a2, (uint64_t)v59);
    sub_1A73C3198(v20, v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A73C3198(v20, v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = sub_1A7571E80();
    v29 = sub_1A7572FF0();
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      id v51 = v29;
      id v52 = v28;
      id v53 = v25;
      uint64_t v54 = 0;
      id v30 = (uint64_t)v27;
      id v31 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      uint64_t v63 = v50;
      *(_DWORD *)id v31 = 136315650;
      char v60 = (uint64_t)v20;
      LOBYTE(v61) = v21;
      id v32 = REMRemindersListBatchDeleteInvocation.ListType.description.getter();
      char v60 = sub_1A72D1730(v32, v33, &v63);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      sub_1A73C314C(v20, v21);
      sub_1A73C314C(v20, v21);
      *(_WORD *)(v31 + 12) = 2080;
      id v34 = (uint64_t)v55;
      sub_1A73C3428(v30, (uint64_t)v55);
      id v35 = sub_1A7571B60();
      unint64_t v36 = *(void *)(v35 - 8);
      v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35);
      char v38 = v56;
      if (v37 == 1)
      {
        sub_1A72CB560(v34, &qword_1EB704C60);
        v39 = 0xE300000000000000;
        id v40 = 7104878;
      }
      else
      {
        id v40 = sub_1A7571A60();
        v39 = v42;
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
      }
      char v60 = sub_1A72D1730(v40, v39, &v63);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      sub_1A72CB560((uint64_t)v59, &qword_1EB704C60);
      *(_WORD *)(v31 + 22) = 2048;
      v43 = v51;
      if ((v19 & 0xC000000000000001) != 0) {
        id v44 = sub_1A7573400();
      }
      else {
        id v44 = *(void *)(v19 + 16);
      }
      unint64_t v45 = v58;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v60 = v44;
      sub_1A7573250();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v46 = v52;
      _os_log_impl(&dword_1A72A1000, v52, v43, v45, (uint8_t *)v31, 0x20u);
      id v47 = v50;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v47, -1, -1);
      MEMORY[0x1AD0CD330](v31, -1, -1);

      id v41 = v38;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1A72CB560((uint64_t)v27, &qword_1EB704C60);
      sub_1A73C314C(v20, v21);
      sub_1A73C314C(v20, v21);
      id v41 = v56;
    }
    sub_1A73C35CC(v41);
  }
  return v19;
}

void static REMRemindersListBatchDeleteInvocation.completionDatePredicate(for:store:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1848);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v41 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v41 - v16;
  uint64_t v18 = *(void **)a1;
  char v19 = *(unsigned char *)(a1 + 8);
  id v20 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, 0);
  uint64_t v21 = (uint64_t)v48;
  sub_1A72F7068((uint64_t)v20, (uint64_t)v18, v19, (uint64_t)v8);
  if (v21)
  {
  }
  else
  {
    unint64_t v45 = v12;
    uint64_t v46 = 0;
    id v48 = v15;
    uint64_t v22 = v47;
    sub_1A73C39A0((uint64_t)v8, (uint64_t)v5, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
    sub_1A72CB560((uint64_t)v8, &qword_1E96F1848);
    sub_1A731D558((uint64_t)v5, (uint64_t)v17);
    uint64_t v23 = (uint64_t)v17;
    if (qword_1E96F07E8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1A7571E90();
    __swift_project_value_buffer(v24, (uint64_t)qword_1E96F2AB8);
    uint64_t v25 = (uint64_t)v17;
    uint64_t v26 = (uint64_t)v48;
    sub_1A73C3428(v25, (uint64_t)v48);
    sub_1A73C3198(v18, v19);
    sub_1A73C3198(v18, v19);
    uint64_t v27 = sub_1A7571E80();
    int v28 = sub_1A7572FF0();
    if (os_log_type_enabled(v27, (os_log_type_t)v28))
    {
      int v43 = v28;
      uint64_t v44 = v23;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v51 = v42;
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v49 = (uint64_t)v18;
      char v50 = v19;
      uint64_t v30 = REMRemindersListBatchDeleteInvocation.ListType.description.getter();
      uint64_t v49 = sub_1A72D1730(v30, v31, &v51);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      sub_1A73C314C(v18, v19);
      sub_1A73C314C(v18, v19);
      *(_WORD *)(v29 + 12) = 2080;
      uint64_t v32 = v26;
      uint64_t v33 = (uint64_t)v45;
      sub_1A73C3428(v32, (uint64_t)v45);
      uint64_t v34 = sub_1A7571B60();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
      {
        sub_1A72CB560(v33, &qword_1EB704C60);
        unint64_t v36 = 0xE300000000000000;
        uint64_t v37 = 7104878;
      }
      else
      {
        uint64_t v37 = sub_1A7571A60();
        unint64_t v36 = v39;
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
      }
      uint64_t v49 = sub_1A72D1730(v37, v36, &v51);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      sub_1A72CB560((uint64_t)v48, &qword_1EB704C60);
      _os_log_impl(&dword_1A72A1000, v27, (os_log_type_t)v43, "REMRemindersListBatchDeleteInvocation_OldestCompletionDateInvocation RESULT {list: %s, oldestCompletionDate: %s}", (uint8_t *)v29, 0x16u);
      uint64_t v40 = v42;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v40, -1, -1);
      MEMORY[0x1AD0CD330](v29, -1, -1);

      uint64_t v38 = v22;
      uint64_t v23 = v44;
    }
    else
    {
      sub_1A73C314C(v18, v19);
      sub_1A73C314C(v18, v19);
      sub_1A72CB560(v26, &qword_1EB704C60);

      uint64_t v38 = v22;
    }
    sub_1A731D558(v23, v38);
  }
}

uint64_t REMRemindersListBatchDeleteInvocation.deinit()
{
  return v0;
}

uint64_t REMRemindersListBatchDeleteInvocation.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

unint64_t sub_1A73C30B0()
{
  unint64_t result = qword_1E96F2AF0;
  if (!qword_1E96F2AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2AF0);
  }
  return result;
}

uint64_t sub_1A73C3104(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1A73C314C(id a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 3:

      break;
    case 2:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

id sub_1A73C3198(id result, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 3:
      uint64_t result = result;
      break;
    case 2:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC0E4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  id v2 = *(id *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  id v4 = *(id *)a2;
  int v5 = *(unsigned __int8 *)(a2 + 8);
  switch(v3)
  {
    case 1:
      if (v5 != 1) {
        goto LABEL_15;
      }
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      sub_1A73C3198(v4, 1);
      sub_1A73C3198(v2, 1);
      char v6 = sub_1A7573190();
      sub_1A73C314C(v2, 1);
      uint64_t v7 = v4;
      char v8 = 1;
      goto LABEL_10;
    case 2:
      if (v5 != 2) {
        goto LABEL_15;
      }
      sub_1A73C3198(*(id *)a2, 2);
      sub_1A73C3198(v2, 2);
      char v6 = sub_1A72DCE24((uint64_t)v2, (uint64_t)v4);
      sub_1A73C314C(v2, 2);
      uint64_t v7 = v4;
      char v8 = 2;
      goto LABEL_10;
    case 3:
      if (v5 != 3) {
        goto LABEL_15;
      }
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      sub_1A73C3198(v4, 3);
      sub_1A73C3198(v2, 3);
      char v6 = sub_1A7573190();
      sub_1A73C314C(v2, 3);
      uint64_t v7 = v4;
      char v8 = 3;
      goto LABEL_10;
    case 4:
      if (v5 != 4 || v4 != 0) {
        goto LABEL_15;
      }
      sub_1A73C314C(*(id *)a1, 4);
      sub_1A73C314C(0, 4);
      return 1;
    default:
      if (*(unsigned char *)(a2 + 8))
      {
LABEL_15:
        sub_1A73C3198(*(id *)a2, *(unsigned char *)(a2 + 8));
        sub_1A73C3198(v2, v3);
        sub_1A73C314C(v2, v3);
        sub_1A73C314C(v4, v5);
        return 0;
      }
      else
      {
        sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
        sub_1A73C3198(v4, 0);
        sub_1A73C3198(v2, 0);
        char v6 = sub_1A7573190();
        sub_1A73C314C(v2, 0);
        uint64_t v7 = v4;
        char v8 = 0;
LABEL_10:
        sub_1A73C314C(v7, v8);
        return v6 & 1;
      }
  }
}

uint64_t sub_1A73C3428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A73C3490()
{
  unint64_t result = qword_1E96F2B00;
  if (!qword_1E96F2B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2B00);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2B90);
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2BA0);
}

unint64_t sub_1A73C3524()
{
  unint64_t result = qword_1E96F2B18;
  if (!qword_1E96F2B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2B18);
  }
  return result;
}

unint64_t sub_1A73C3578()
{
  unint64_t result = qword_1E96F2B28;
  if (!qword_1E96F2B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2B28);
  }
  return result;
}

uint64_t sub_1A73C35CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A73C3628()
{
  unint64_t result = qword_1E96F2B38;
  if (!qword_1E96F2B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2B38);
  }
  return result;
}

uint64_t sub_1A73C367C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB705B90);
    sub_1A73C3104(a2, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A73C3710()
{
  unint64_t result = qword_1E96F2B48;
  if (!qword_1E96F2B48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F2B40);
    sub_1A73C3104(&qword_1EB703F10, (void (*)(uint64_t))type metadata accessor for REMAccount_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2B48);
  }
  return result;
}

unint64_t sub_1A73C37B4()
{
  unint64_t result = qword_1E96F2B58;
  if (!qword_1E96F2B58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F2B40);
    sub_1A73C3104(qword_1EB7035E0, (void (*)(uint64_t))type metadata accessor for REMAccount_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2B58);
  }
  return result;
}

unint64_t sub_1A73C3858()
{
  unint64_t result = qword_1E96F2B68;
  if (!qword_1E96F2B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2B68);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2BB0);
}

uint64_t sub_1A73C38CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation.CountInvocation()
{
  return self;
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation()
{
  return self;
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation()
{
  return self;
}

uint64_t sub_1A73C39A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A73C3A08()
{
  return sub_1A73C3104(&qword_1E96F2B78, (void (*)(uint64_t))type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters);
}

uint64_t sub_1A73C3A50()
{
  return sub_1A73C3104(&qword_1E96F1850, (void (*)(uint64_t))type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters);
}

unint64_t sub_1A73C3AA0()
{
  unint64_t result = qword_1E96F2B80;
  if (!qword_1E96F2B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2B80);
  }
  return result;
}

uint64_t sub_1A73C3AFC()
{
  return sub_1A73C3104(&qword_1E96F1840, (void (*)(uint64_t))type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
}

uint64_t sub_1A73C3B44()
{
  return sub_1A73C3104(&qword_1E96F2B88, (void (*)(uint64_t))type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation()
{
  return self;
}

uint64_t method lookup function for REMRemindersListBatchDeleteInvocation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMRemindersListBatchDeleteInvocation);
}

uint64_t initializeBufferWithCopyOfBuffer for REMRemindersListBatchDeleteInvocation.ListType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1A73C3198(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for REMRemindersListBatchDeleteInvocation.ListType(uint64_t a1)
{
}

uint64_t assignWithCopy for REMRemindersListBatchDeleteInvocation.ListType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1A73C3198(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1A73C314C(v5, v6);
  return a1;
}

uint64_t assignWithTake for REMRemindersListBatchDeleteInvocation.ListType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1A73C314C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.ListType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.ListType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A73C3D40(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1A73C3D58(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.ListType()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.ListType;
}

uint64_t getEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_0);
}

uint64_t storeEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_0);
}

void sub_1A73C3DCC()
{
  if (!qword_1EB704AF0)
  {
    sub_1A7571B60();
    unint64_t v0 = sub_1A7573210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB704AF0);
    }
  }
}

char *initializeBufferWithCopyOfBuffer for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = &v15[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    char v8 = *((unsigned char *)a2 + 8);
    sub_1A73C3198(*a2, v8);
    *(void *)a1 = v7;
    a1[8] = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1A7571B60();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t destroy for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(uint64_t a1, uint64_t a2)
{
  sub_1A73C314C(*(id *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1A7571B60();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = *(id *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_1A73C3198(*(id *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1A7571B60();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = *(id *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_1A73C3198(*(id *)a2, v7);
  uint64_t v8 = *(void **)a1;
  *(void *)a1 = v6;
  char v9 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v7;
  sub_1A73C314C(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_1A7571B60();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t initializeWithTake for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  id v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1A7571B60();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v8 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v6;
  sub_1A73C314C(v7, v8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_1A7571B60();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A73C460C);
}

uint64_t sub_1A73C460C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 251)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 4) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A73C46CC);
}

uint64_t sub_1A73C46CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 251)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A73C4774()
{
  sub_1A73C3DCC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result;
}

uint64_t *_s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC23CompletionDatePredicateVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_1A7571B60();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

void *_s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC23CompletionDatePredicateVwcp_0(void *a1, const void *a2)
{
  uint64_t v4 = sub_1A7571B60();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *_s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC23CompletionDatePredicateVwca_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1A7571B60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *_s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC23CompletionDatePredicateVwtk_0(void *a1, const void *a2)
{
  uint64_t v4 = sub_1A7571B60();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *_s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC23CompletionDatePredicateVwta_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1A7571B60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A73C4EA0);
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A73C4F28);
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_1A73C4FA0()
{
  sub_1A73C3DCC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.CodingKeys()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.CodingKeys()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.CodingKeys;
}

unsigned char *_s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC16DeleteInvocationC6ResultV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73C5120);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.CodingKeys;
}

unsigned char *_s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC30OldestCompletionDateInvocationC6ResultV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A73C51F4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.CodingKeys()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.ListType.Base(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73C52F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.ListType.Base()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.ListType.Base;
}

unsigned char *storeEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.ListType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73C53FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.ListType.CodingKeys()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.ListType.CodingKeys;
}

unint64_t sub_1A73C5438()
{
  unint64_t result = qword_1E96F2BC0;
  if (!qword_1E96F2BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2BC0);
  }
  return result;
}

unint64_t sub_1A73C5490()
{
  unint64_t result = qword_1E96F2BC8;
  if (!qword_1E96F2BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2BC8);
  }
  return result;
}

unint64_t sub_1A73C54E8()
{
  unint64_t result = qword_1E96F2BD0;
  if (!qword_1E96F2BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2BD0);
  }
  return result;
}

unint64_t sub_1A73C5540()
{
  unint64_t result = qword_1E96F2BD8;
  if (!qword_1E96F2BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2BD8);
  }
  return result;
}

unint64_t sub_1A73C5598()
{
  unint64_t result = qword_1E96F2BE0;
  if (!qword_1E96F2BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2BE0);
  }
  return result;
}

unint64_t sub_1A73C55F0()
{
  unint64_t result = qword_1E96F2BE8;
  if (!qword_1E96F2BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2BE8);
  }
  return result;
}

unint64_t sub_1A73C5648()
{
  unint64_t result = qword_1E96F2BF0;
  if (!qword_1E96F2BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2BF0);
  }
  return result;
}

unint64_t sub_1A73C56A0()
{
  unint64_t result = qword_1E96F2BF8;
  if (!qword_1E96F2BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2BF8);
  }
  return result;
}

unint64_t sub_1A73C56F8()
{
  unint64_t result = qword_1E96F2C00;
  if (!qword_1E96F2C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2C00);
  }
  return result;
}

unint64_t sub_1A73C5750()
{
  unint64_t result = qword_1E96F2C08;
  if (!qword_1E96F2C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2C08);
  }
  return result;
}

unint64_t sub_1A73C57A8()
{
  unint64_t result = qword_1E96F2C10;
  if (!qword_1E96F2C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2C10);
  }
  return result;
}

unint64_t sub_1A73C5800()
{
  unint64_t result = qword_1E96F2C18;
  if (!qword_1E96F2C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2C18);
  }
  return result;
}

unint64_t sub_1A73C5858()
{
  unint64_t result = qword_1E96F2C20;
  if (!qword_1E96F2C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2C20);
  }
  return result;
}

unint64_t sub_1A73C58B0()
{
  unint64_t result = qword_1E96F2C28;
  if (!qword_1E96F2C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2C28);
  }
  return result;
}

unint64_t sub_1A73C5908()
{
  unint64_t result = qword_1E96F2C30;
  if (!qword_1E96F2C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2C30);
  }
  return result;
}

unint64_t sub_1A73C5960()
{
  unint64_t result = qword_1E96F2C38;
  if (!qword_1E96F2C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2C38);
  }
  return result;
}

uint64_t sub_1A73C59B4()
{
  unint64_t v0 = sub_1A7573970();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1A73C5A00()
{
  unint64_t result = qword_1E96F2C40;
  if (!qword_1E96F2C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2C40);
  }
  return result;
}

uint64_t sub_1A73C5A54()
{
  unint64_t v0 = sub_1A7573970();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A73C5AA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1953720684 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A75A1680)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A73C5B80(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001A75A16A0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E756F636361 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A73C5C70(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001A75A1660)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t Optional.descriptionOrNil.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](a1);
  char v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  int v8 = (char *)&v14 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1) == 1) {
    return 7104878;
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v8, v10, v1);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v8, v1);
  uint64_t v12 = sub_1A7572670();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  return v12;
}

uint64_t Optional.tryUnwrap(_:file:line:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8 = v7;
  v23[2] = a4;
  uint64_t v24 = a5;
  v23[0] = a7;
  v23[1] = a3;
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v10 = sub_1A75719C0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v8, a6);
  uint64_t v18 = *(void *)(a6 + 16);
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1) {
    return (*(uint64_t (**)(void, char *, uint64_t))(v19 + 32))(v23[0], v17, v18);
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, a6);
  sub_1A75718C0();
  sub_1A75718D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  id v20 = self;
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_1A7573560();
  sub_1A7572740();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  uint64_t v29 = v24;
  sub_1A7573BC0();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  sub_1A7572740();
  sub_1A7572740();
  uint64_t v21 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_internalErrorWithDebugDescription_, v21);

  return swift_willThrow();
}

uint64_t Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a6;
  v14[3] = a7;
  v14[4] = a8;
  v14[5] = v13;
  v14[6] = a4;
  v14[7] = a5;
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = v15;
  v16[6] = a2;
  v16[7] = a3;
  swift_retain();
  sub_1A738EA74(a4);
  swift_retain();
  swift_retain();
  uint64_t v17 = sub_1A7572150();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v17;
}

uint64_t sub_1A73C63D0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1A73C6408(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD0CD420](v5);
  if (result)
  {
    if (a3) {
      a3(result, a1);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A73C6484()
{
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1A73C64CC(uint64_t a1)
{
  return sub_1A73C6574(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1A73C6408);
}

uint64_t sub_1A73C64E4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD0CD420](v4);
  if (result)
  {
    a3();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A73C655C(uint64_t a1)
{
  return sub_1A73C6574(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1A73C64E4);
}

uint64_t sub_1A73C6574(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[5], v2[6], v2[7], v2[2], v2[3], v2[4]);
}

uint64_t Publisher.infiniteRetry()(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A7571F80();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  sub_1A7571F70();
  swift_getWitnessTable();
  sub_1A7572110();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t Publisher<>.sinkNextOutput(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for UnfairLock();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = (_DWORD *)swift_slowAlloc();
  *(void *)(v8 + 16) = v9;
  *uint64_t v9 = 0;
  *(_DWORD *)(v8 + 24) = 0;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = v8;
  v12[5] = v10;
  v12[6] = v11;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a4;
  v13[4] = sub_1A73C6B50;
  v13[5] = v12;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = sub_1A73C6B50;
  v14[5] = v12;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v15 = sub_1A7572150();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  *(void *)(v11 + 16) = v15;
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A73C695C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1A73C699C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A73C69D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v11[7] = a2;
  v11[2] = a5;
  v11[3] = a6;
  v11[4] = a3 + 16;
  v11[5] = a4 + 16;
  uint64_t v7 = type metadata accessor for UnfairLock();
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  sub_1A7574170();
  swift_getFunctionTypeMetadata1();
  uint64_t v8 = sub_1A7573210();
  uint64_t result = Lock.sync<A>(_:)((void (*)(uint64_t))sub_1A73C8404, (uint64_t)v11, v7, v8, (uint64_t)&protocol witness table for UnfairLock);
  uint64_t v10 = v12;
  if (v12)
  {
    swift_retain();
    v10(a1);
    sub_1A72AE0F8((uint64_t)v10);
    return sub_1A72AE0F8((uint64_t)v10);
  }
  return result;
}

uint64_t sub_1A73C6B08()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A73C6B50(uint64_t a1)
{
  return sub_1A73C69D4(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t (*sub_1A73C6B60@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)()@<X8>))()
{
  uint64_t result = (uint64_t (*)())swift_beginAccess();
  uint64_t v11 = *a1;
  if (*a1)
  {
    uint64_t v12 = a1[1];
    swift_beginAccess();
    if (*a2)
    {
      sub_1A738EA74(v11);
      swift_retain();
      sub_1A7572030();
      swift_release();
    }
    else
    {
      swift_retain();
    }
    swift_beginAccess();
    *a2 = 0;
    swift_release();
    swift_beginAccess();
    uint64_t v13 = *a1;
    *a1 = 0;
    a1[1] = 0;
    sub_1A72AE0F8(v13);
    uint64_t result = (uint64_t (*)())swift_allocObject();
    *((void *)result + 2) = a3;
    *((void *)result + 3) = a4;
    *((void *)result + 4) = v11;
    *((void *)result + 5) = v12;
    *a5 = sub_1A73C8410;
    a5[1] = result;
  }
  else
  {
    *a5 = 0;
    a5[1] = 0;
  }
  return result;
}

uint64_t sub_1A73C6C8C(void **a1, void (*a2)(uint64_t *))
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v4 = sub_1A7574170();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v11 - v6);
  uint64_t v8 = *a1;
  if (v8)
  {
    uint64_t *v7 = (uint64_t)v8;
    swift_storeEnumTagMultiPayload();
    id v9 = v8;
  }
  else
  {
    sub_1A73C83B0();
    uint64_t *v7 = swift_allocError();
    swift_storeEnumTagMultiPayload();
  }
  a2(v7);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A73C6E00()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A73C6E38(void **a1)
{
  return sub_1A73C6C8C(a1, *(void (**)(uint64_t *))(v1 + 32));
}

uint64_t sub_1A73C6E44(uint64_t a1, void (*a2)(char *))
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v5 = sub_1A7574170();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))((char *)&v10 - v7, a1, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A73C6FAC(uint64_t a1)
{
  return sub_1A73C6E44(a1, *(void (**)(char *))(v1 + 32));
}

void Publisher<>.waitForNextOutput()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v30 = a3;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v4 = sub_1A7574170();
  uint64_t v5 = sub_1A7573210();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = *(void *)(v4 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v6);
  uint64_t v27 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = dispatch_group_create();
  uint64_t v15 = swift_allocBox();
  uint64_t v17 = v16;
  uint64_t v28 = v9;
  uint64_t v29 = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v16, 1, 1, v4);
  dispatch_group_enter(v14);
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = v32;
  v18[2] = a1;
  v18[3] = v19;
  v18[4] = v15;
  v18[5] = v14;
  swift_retain();
  id v20 = v14;
  Publisher<>.sinkNextOutput(_:)((uint64_t)sub_1A73C7564, (uint64_t)v18, a1, v19);
  uint64_t v21 = (uint64_t)v13;
  uint64_t v22 = v31;
  swift_release();
  sub_1A7573020();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v8, v17, v5);
  uint64_t v23 = v33;
  Optional.tryUnwrap(_:file:line:)(0xD000000000000021, 0x80000001A75A1770, 0xD000000000000071, 0x80000001A75A16F0, 116, v5, v21);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
  if (!v23)
  {
    uint64_t v24 = v28;
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v27, v21, v29);
    sub_1A7373F9C(v25, (uint64_t)&v34, v30);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v25);
  }
  swift_release();
}

void sub_1A73C7360(uint64_t a1, uint64_t a2, NSObject *a3)
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v5 = sub_1A7574170();
  uint64_t v6 = sub_1A7573210();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = swift_projectBox();
  uint64_t v11 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v5);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v10, v9, v6);
  dispatch_group_leave(a3);
}

uint64_t sub_1A73C7524()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1A73C7564(uint64_t a1)
{
  sub_1A73C7360(a1, *(void *)(v1 + 32), *(NSObject **)(v1 + 40));
}

uint64_t Publisher<>.legacyPromise()()
{
  return Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A73C76B8);
}

uint64_t sub_1A73C75F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a6;
  v13[3] = a7;
  v13[4] = a3;
  v13[5] = a4;
  v13[6] = a1;
  v13[7] = a2;
  swift_retain();
  swift_retain();
  Publisher<>.sinkNextOutput(_:)((uint64_t)sub_1A73C83A0, (uint64_t)v13, a6, a7);

  return swift_release();
}

uint64_t sub_1A73C76B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A73C75F8(a1, a2, a3, a4, v4[4], v4[2], v4[3]);
}

void sub_1A73C76C4(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *))
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v16 - v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v11 = sub_1A7574170();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v16 - v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v16 - v12, a1, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = (void *)*v13;
    a2(*v13);
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v8 + 32))(v10, v13, AssociatedTypeWitness);
    a4(v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  }
}

uint64_t Publisher<>.rem_bufferedValues.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A73C7908(a1, qword_1E96F28E0, MEMORY[0x1E4F1AC80], a2);
}

{
  return sub_1A73C7908(a1, &qword_1E96F2C48, MEMORY[0x1E4F1AC98], a2);
}

uint64_t sub_1A73C7908@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, void (*a3)(uint64_t, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  v18[2] = a4;
  uint64_t v19 = a3;
  v18[0] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A7571F20();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A7571F90();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v18 - v14;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F1A900], v8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F1A918], v4);
  sub_1A7572180();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t WitnessTable = swift_getWitnessTable();
  v19(v12, WitnessTable);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t Publisher<>.firstValue()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1A73C7BD8, 0, 0);
}

uint64_t sub_1A73C7BD8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  v0[2] = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  v4[2] = v3;
  v4[3] = v1;
  v4[4] = v0 + 2;
  v4[5] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *uint64_t v5 = v0;
  v5[1] = sub_1A73C7D08;
  uint64_t v7 = v0[3];
  return MEMORY[0x1F41880D8](v7, 0, 0, 0x6C61567473726966, 0xEC00000029286575, sub_1A73C8108, v4, AssociatedTypeWitness);
}

uint64_t sub_1A73C7D08()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A73C7E20, 0, 0);
}

uint64_t sub_1A73C7E20()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A73C7E80(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v20 = a2;
  swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1A7572BC0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = sub_1A7571F60();
  uint64_t v19 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v19 - v13;
  sub_1A7572160();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a4;
  *(void *)(v16 + 24) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, v11, v8);
  swift_getWitnessTable();
  uint64_t v17 = sub_1A7572150();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v12);
  *id v20 = v17;
  return swift_release();
}

uint64_t sub_1A73C8108(uint64_t a1)
{
  return sub_1A73C7E80(a1, *(uint64_t **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

ValueMetadata *type metadata accessor for PublisherFinishedWithoutOutputError()
{
  return &type metadata for PublisherFinishedWithoutOutputError;
}

uint64_t sub_1A73C8124(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - v3, a1, AssociatedTypeWitness);
  sub_1A7572BC0();
  return sub_1A7572BB0();
}

uint64_t sub_1A73C8224()
{
  swift_getAssociatedTypeWitness();
  uint64_t v1 = sub_1A7572BC0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1A73C82E4(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  sub_1A7572BC0();

  return sub_1A73C8124(a1);
}

void sub_1A73C83A0(uint64_t a1)
{
  sub_1A73C76C4(a1, *(void (**)(void))(v1 + 32), *(void *)(v1 + 40), *(void (**)(char *))(v1 + 48));
}

unint64_t sub_1A73C83B0()
{
  unint64_t result = qword_1EB703B98;
  if (!qword_1EB703B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703B98);
  }
  return result;
}

uint64_t (*sub_1A73C8404@<X0>(uint64_t (**a1)()@<X8>))()
{
  return sub_1A73C6B60(*(uint64_t **)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1A73C8410()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1A73C8440()
{
  return sub_1A73C8534(&OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_primaryEmailMock);
}

uint64_t sub_1A73C844C(uint64_t a1, uint64_t a2)
{
  return sub_1A73C8594(a1, a2, &OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_primaryEmailMock);
}

uint64_t (*sub_1A73C8458())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A73C84C0(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = (void *)(*a2 + *a5);
  swift_beginAccess();
  void *v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A73C8528()
{
  return sub_1A73C8534(&OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_altDSIDMock);
}

uint64_t sub_1A73C8534(void *a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1A73C8588(uint64_t a1, uint64_t a2)
{
  return sub_1A73C8594(a1, a2, &OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_altDSIDMock);
}

uint64_t sub_1A73C8594(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)(v3 + *a3);
  swift_beginAccess();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A73C85F0())()
{
  return j_j__swift_endAccess;
}

id sub_1A73C8658()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();

  return v0;
}

void sub_1A73C88A0(char a1, void *a2)
{
  if (a1)
  {
    if (a2)
    {
      swift_beginAccess();
      sub_1A72E0188(&v6, a2);
      uint64_t v3 = v6;
      swift_endAccess();

      return;
    }
    __break(1u);
    goto LABEL_8;
  }
  if (!a2)
  {
LABEL_8:
    __break(1u);
    return;
  }
  swift_beginAccess();
  id v4 = a2;
  uint64_t v5 = (void *)sub_1A73C94E4();
  swift_endAccess();
}

id MockACAccount.__allocating_init(accountType:)(void *a1)
{
  return sub_1A73C8B60(a1, (SEL *)&selRef_initWithAccountType_);
}

id MockACAccount.init(accountType:)(void *a1)
{
  return sub_1A73C8BB8(a1, (SEL *)&selRef_initWithAccountType_);
}

id MockACAccount.__allocating_init(coder:)(void *a1)
{
  return sub_1A73C8B60(a1, (SEL *)&selRef_initWithCoder_);
}

id MockACAccount.init(coder:)(void *a1)
{
  return sub_1A73C8BB8(a1, (SEL *)&selRef_initWithCoder_);
}

id MockACAccount.__allocating_init(managedAccount:)(void *a1)
{
  return sub_1A73C8B60(a1, (SEL *)&selRef_initWithManagedAccount_);
}

id sub_1A73C8B60(void *a1, SEL *a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(v2), *a2, a1);

  return v4;
}

id MockACAccount.init(managedAccount:)(void *a1)
{
  return sub_1A73C8BB8(a1, (SEL *)&selRef_initWithManagedAccount_);
}

id sub_1A73C8BB8(void *a1, SEL *a2)
{
  uint64_t v5 = &v2[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_primaryEmailMock];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  uint64_t v6 = &v2[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_altDSIDMock];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  *(void *)&v2[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_mockChildren] = MEMORY[0x1E4FBC860];
  *(void *)&v2[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_enabledDataClasses] = MEMORY[0x1E4FBC870];
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for MockACAccount();
  id v7 = objc_msgSendSuper2(&v9, *a2, a1);

  return v7;
}

id sub_1A73C8C64(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6 = &a1[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_primaryEmailMock];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  id v7 = &a1[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_altDSIDMock];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  *(void *)&a1[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_mockChildren] = MEMORY[0x1E4FBC860];
  *(void *)&a1[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_enabledDataClasses] = MEMORY[0x1E4FBC870];
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for MockACAccount();
  return objc_msgSendSuper2(&v9, *a4, a3);
}

id MockACAccount.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MockACAccount();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL static MockACAccount.MockACAccountSetUpError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MockACAccount.MockACAccountSetUpError.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t MockACAccount.MockACAccountSetUpError.hashValue.getter()
{
  return sub_1A7574110();
}

id static MockACAccount.rem_setupRemindersEnabledMockAAAccount(with:aa_accountClass:childCalDAVAccountIdentifier:remAppleAccountUtilities:accountConfigBlock:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F179D8]);
  uint64_t v5 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_1A75725E0();
  id v7 = objc_msgSend(v4, sel_initWithIdentifier_description_, v5, v6);

  id v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MockACAccount()), sel_initWithAccountType_, v7);
  if (v8)
  {
    objc_msgSend(v8, sel_aa_setAccountClass_, a3);
    objc_super v9 = (void *)sub_1A75725E0();
    objc_msgSend(v8, sel_setIdentifier_, v9);

    objc_msgSend(v8, sel_setEnabled_forDataclass_, 1, *MEMORY[0x1E4F17610]);
    uint64_t v10 = (void *)sub_1A75725E0();
    objc_msgSend(v8, sel_setAccountProperty_forKey_, v10, *MEMORY[0x1E4F176E8]);

    id v11 = objc_msgSend(v8, sel_provisionedDataclasses);
    if (v11)
    {
      uint64_t v12 = v11;
      v16[0] = 0;
      type metadata accessor for Dataclass(0);
      sub_1A73CA0D4(&qword_1E96F0C80, type metadata accessor for Dataclass);
      sub_1A7572C70();
    }
    sub_1A73C9D28();
    swift_allocError();
    *uint64_t v13 = 2;
    swift_willThrow();
  }
  else
  {
    sub_1A73C9D28();
    swift_allocError();
    *uint64_t v14 = 0;
    swift_willThrow();
  }
  return v8;
}

uint64_t static MockACAccount.make_aa_altDSIDMock(from:)()
{
  strcpy((char *)v1, "altDSIDMock:");
  sub_1A7572740();
  return v1[0];
}

uint64_t sub_1A73C94E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A75740C0();
  swift_bridgeObjectRetain();
  sub_1A75726F0();
  uint64_t v3 = sub_1A7574110();
  swift_bridgeObjectRelease();
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = v3 & ~v4;
  if (((*(void *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v6 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v8 = v7;
  if (v6 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v8 == v9)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      do
      {
        unint64_t v5 = (v5 + 1) & v12;
        if (((*(void *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v15 = v14;
        if (v13 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v15 == v16) {
          goto LABEL_16;
        }
        char v18 = sub_1A7573DB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v18 & 1) == 0);
    }
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v1;
  uint64_t v23 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A74E8280();
    uint64_t v21 = v23;
  }
  uint64_t v19 = *(void *)(*(void *)(v21 + 48) + 8 * v5);
  sub_1A73C96F8(v5);
  *uint64_t v1 = v23;
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_1A73C96F8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1A7573390();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void **)(*(void *)(v3 + 48) + 8 * v6);
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        sub_1A75740C0();
        id v11 = v10;
        sub_1A75726F0();
        uint64_t v12 = sub_1A7574110();

        swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 < v9) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(v3 + 48);
          uint64_t v15 = (void *)(v14 + 8 * v2);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    unint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

id sub_1A73C98DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_27:
    uint64_t v5 = sub_1A75738D0();
    if (v5) {
      goto LABEL_3;
    }
    return (id)MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    return (id)MEMORY[0x1E4FBC860];
  }
LABEL_3:
  for (unint64_t i = 0; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      id v7 = (id)MEMORY[0x1AD0CB800](i, a1);
    }
    else
    {
      if (i >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      id v7 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    unint64_t v9 = i + 1;
    if (__OFADD__(i, 1)) {
      goto LABEL_26;
    }
    id result = objc_msgSend(v7, sel_accountType);
    if (!result) {
      break;
    }
    id v11 = result;
    id v12 = objc_msgSend(result, sel_identifier);

    if (v12)
    {
      uint64_t v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v15 = v14;

      if (!a3)
      {

        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      if (v13 == a2 && v15 == a3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v17 = sub_1A7573DB0();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0) {
          goto LABEL_21;
        }
      }
    }
    else if (a3)
    {
LABEL_21:

      goto LABEL_6;
    }
    sub_1A75736C0();
    sub_1A7573700();
    sub_1A7573710();
    sub_1A75736D0();
LABEL_6:
    if (v9 == v5) {
      return (id)v19;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A73C9AD8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A7571860();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v19 = MEMORY[0x1E4FBC870];
    id v9 = a1;
    sub_1A7572FA0();
    sub_1A73CA0D4((unint64_t *)&qword_1E96F2C88, MEMORY[0x1E4F27660]);
    sub_1A7573230();
    while (v18)
    {
      sub_1A72BEE44(&v17, v16);
      sub_1A72BEE98((uint64_t)v16, (uint64_t)v14);
      type metadata accessor for Dataclass(0);
      if (swift_dynamicCast())
      {
        if (v15)
        {
          id v10 = v15;
          sub_1A72E0188(v14, v10);
          id v11 = (void *)v14[0];
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      sub_1A7573230();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);

    uint64_t v12 = v19;
    uint64_t v13 = (void *)(v2 + OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_enabledDataClasses);
    swift_beginAccess();
    *uint64_t v13 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for MockACAccount()
{
  return self;
}

unint64_t sub_1A73C9D28()
{
  unint64_t result = qword_1E96F2C78;
  if (!qword_1E96F2C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2C78);
  }
  return result;
}

unint64_t sub_1A73C9D80()
{
  unint64_t result = qword_1E96F2C80;
  if (!qword_1E96F2C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2C80);
  }
  return result;
}

uint64_t sub_1A73C9DD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_primaryEmailMock, a2);
}

uint64_t sub_1A73C9DE0(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A73C84C0(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_primaryEmailMock);
}

uint64_t sub_1A73C9E00@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_altDSIDMock, a2);
}

uint64_t keypath_getTm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  uint64_t v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A73C9E60(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A73C84C0(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_altDSIDMock);
}

uint64_t method lookup function for MockACAccount(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MockACAccount);
}

uint64_t dispatch thunk of MockACAccount.rem_aa_primaryEmailMock.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MockACAccount.rem_aa_primaryEmailMock.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MockACAccount.rem_aa_primaryEmailMock.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MockACAccount.rem_aa_altDSIDMock.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MockACAccount.rem_aa_altDSIDMock.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MockACAccount.rem_aa_altDSIDMock.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

unsigned char *storeEnumTagSinglePayload for MockACAccount.MockACAccountSetUpError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73CA09CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MockACAccount.MockACAccountSetUpError()
{
  return &type metadata for MockACAccount.MockACAccountSetUpError;
}

uint64_t sub_1A73CA0D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A73CA11C(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  unint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_28;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v39 = MEMORY[0x1E4FBC860];
    sub_1A72D2EA0(0, v6 & ~(v6 >> 63), 0);
    if ((v6 & 0x8000000000000000) == 0)
    {
      uint64_t v33 = v3;
      uint64_t v34 = v6;
      uint64_t v8 = 0;
      uint64_t result = v39;
      unint64_t v35 = v5;
      unint64_t v36 = v5 & 0xC000000000000001;
      while (1)
      {
        if (v6 == v8)
        {
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          swift_bridgeObjectRetain();
          uint64_t v6 = sub_1A75738D0();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        uint64_t v37 = result;
        if (v36) {
          id v9 = (id)MEMORY[0x1AD0CB800](v8, v5);
        }
        else {
          id v9 = *(id *)(v5 + 8 * v8 + 32);
        }
        id v10 = v9;
        id v11 = objc_msgSend(v9, sel_displayName, v33);
        uint64_t v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v13 = v12;

        id v14 = v10;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v16 = (void *)*a2;
        uint64_t v38 = (void *)*a2;
        *a2 = 0x8000000000000000;
        unint64_t v5 = sub_1A72B2210(v3, v13);
        uint64_t v18 = v16[2];
        BOOL v19 = (v17 & 1) == 0;
        uint64_t v20 = v18 + v19;
        if (__OFADD__(v18, v19)) {
          goto LABEL_26;
        }
        char v21 = v17;
        if (v16[3] >= v20)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v24 = v38;
            if (v17) {
              goto LABEL_17;
            }
          }
          else
          {
            sub_1A72BD070();
            uint64_t v24 = v38;
            if (v21) {
              goto LABEL_17;
            }
          }
        }
        else
        {
          sub_1A72B7954(v20, isUniquelyReferenced_nonNull_native);
          unint64_t v22 = sub_1A72B2210(v3, v13);
          if ((v21 & 1) != (v23 & 1)) {
            goto LABEL_30;
          }
          unint64_t v5 = v22;
          uint64_t v24 = v38;
          if (v21)
          {
LABEL_17:
            uint64_t v25 = v24[7];
            uint64_t v26 = 8 * v5;

            *(void *)(v25 + v26) = v14;
            goto LABEL_21;
          }
        }
        v24[(v5 >> 6) + 8] |= 1 << v5;
        uint64_t v27 = (uint64_t *)(v24[6] + 16 * v5);
        *uint64_t v27 = v3;
        v27[1] = v13;
        *(void *)(v24[7] + 8 * v5) = v14;
        uint64_t v28 = v24[2];
        BOOL v29 = __OFADD__(v28, 1);
        uint64_t v30 = v28 + 1;
        if (v29) {
          goto LABEL_27;
        }
        v24[2] = v30;
        swift_bridgeObjectRetain();
LABEL_21:
        *a2 = v24;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = v37;
        unint64_t v32 = *(void *)(v37 + 16);
        unint64_t v31 = *(void *)(v37 + 24);
        uint64_t v3 = v32 + 1;
        uint64_t v6 = v34;
        unint64_t v5 = v35;
        if (v32 >= v31 >> 1)
        {
          sub_1A72D2EA0(v31 > 1, v32 + 1, 1);
          uint64_t result = v37;
        }
        ++v8;
        *(void *)(result + 16) = v3;
        if (v34 == v8) {
          return result;
        }
      }
    }
    __break(1u);
LABEL_30:
    uint64_t result = sub_1A7574010();
    __break(1u);
  }
  return result;
}

void sub_1A73CA3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[2] = a2;
  v10[3] = a3;
  sub_1A73255F0((void (*)(uint64_t *__return_ptr, char *))sub_1A7326204, (uint64_t)v10, a1);
  id v4 = objc_allocWithZone(MEMORY[0x1E4F94BB0]);
  sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1BA8);
  unint64_t v5 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithMemberships_, v5);

  id v7 = objc_msgSend(v3, sel_unsavedMembershipsOfRemindersInSections);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_mergingWith_mergePolicy_, v6, 0);
    objc_msgSend(v3, sel_setUnsavedMembershipsOfRemindersInSections_, v9);

    id v6 = v9;
  }
  else
  {
    objc_msgSend(v3, sel_setUnsavedMembershipsOfRemindersInSections_, v6);
  }
}

id REMTestStorePopulator.store.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t REMTestStorePopulator.accountByName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.listByName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.listSectionByDisplayName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.customSmartListByName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.customSmartListSectionByDisplayName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.templateContentsByName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.templateSectionByDisplayName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.reminderByTitle.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.attachmentsByReminderName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A73CA56C()
{
  uint64_t result = _auto_REMAccountTypeForPrimaryCloudKit();
  qword_1E96F2C90 = result;
  return result;
}

uint64_t static REMTestStorePopulator.defaultAccountType.getter()
{
  if (qword_1E96F07F0 != -1) {
    swift_once();
  }
  return qword_1E96F2C90;
}

uint64_t sub_1A73CA5D8()
{
  uint64_t v0 = type metadata accessor for DefaultDumpFormatter();
  uint64_t result = swift_allocObject();
  qword_1E96F2CB0 = v0;
  unk_1E96F2CB8 = &off_1EFC9C0F8;
  qword_1E96F2C98 = result;
  return result;
}

uint64_t static REMTestStorePopulator.defaultDumpFormatter.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E96F07F8 != -1) {
    swift_once();
  }

  return sub_1A72B21AC((uint64_t)&qword_1E96F2C98, a1);
}

uint64_t REMTestStorePopulator.__allocating_init(store:accounts:isSingleListMode:)(void *a1, uint64_t a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  REMTestStorePopulator.init(store:accounts:isSingleListMode:)(a1, a2, a3);
  return v6;
}

uint64_t REMTestStorePopulator.init(store:accounts:isSingleListMode:)(void *a1, uint64_t a2, char a3)
{
  *(void *)(v3 + 16) = a1;
  *(unsigned char *)(v3 + 96) = a3;
  id v6 = a1;
  sub_1A73CA858(a2, v6, v18);
  swift_bridgeObjectRelease();

  if (v4)
  {

    swift_deallocPartialClassInstance();
  }
  else
  {
    id v7 = v18[1];
    uint64_t v8 = v19;
    uint64_t v9 = v20;
    uint64_t v34 = v19;
    unint64_t v35 = v18[0];
    *(uint64_t **)(v3 + 24) = v18[0];
    *(void *)(v3 + 32) = v8;
    uint64_t v10 = v21;
    uint64_t v11 = v22;
    uint64_t v32 = v21;
    uint64_t v33 = v9;
    *(void *)(v3 + 40) = v9;
    *(void *)(v3 + 48) = v10;
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    uint64_t v30 = v23;
    uint64_t v31 = v11;
    *(void *)(v3 + 56) = v11;
    *(void *)(v3 + 64) = v12;
    uint64_t v14 = v25;
    uint64_t v15 = v26;
    uint64_t v28 = v25;
    uint64_t v29 = v13;
    *(void *)(v3 + 72) = v13;
    *(void *)(v3 + 80) = v14;
    *(void *)(v3 + 104) = v7;
    uint64_t v27 = v15;
    *(void *)(v3 + 88) = v15;
    sub_1A73CD634((uint64_t)&v35);
    sub_1A73CD634((uint64_t)&v34);
    sub_1A73CD634((uint64_t)&v33);
    uint64_t v16 = v7;
    sub_1A73CD634((uint64_t)&v32);
    sub_1A73CD634((uint64_t)&v31);
    sub_1A73CD634((uint64_t)&v30);
    sub_1A73CD634((uint64_t)&v29);
    sub_1A73CD634((uint64_t)&v28);
    sub_1A73CD634((uint64_t)&v27);
    sub_1A73CD660((uint64_t)v18);
  }
  return v3;
}

uint64_t sub_1A73CA858@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t **a3@<X8>)
{
  uint64_t v318 = *MEMORY[0x1E4F143B8];
  uint64_t result = sub_1A73DEC58(a1, a2);
  if (v3) {
    return result;
  }
  uint64_t v10 = (void *)result;
  id v11 = 0;
  v240 = v9;
  objc_msgSend(a2, sel_test_setupForManualHashtagLabelRefreshing);
  id v236 = a2;
  uint64_t v12 = (uint64_t *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94C58]), sel_initWithStore_, a2);
  uint64_t v300 = MEMORY[0x1E4FBC868];
  v301 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v299 = MEMORY[0x1E4FBC868];
  uint64_t v298 = MEMORY[0x1E4FBC868];
  uint64_t v297 = MEMORY[0x1E4FBC868];
  uint64_t v296 = MEMORY[0x1E4FBC860];
  uint64_t v295 = 0;
  v270 = v12;
  v252 = v10;
  uint64_t v237 = *(void *)(a1 + 16);
  if (!v237)
  {
    v251 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v242 = MEMORY[0x1E4FBC868];
LABEL_82:
    id v302 = 0;
    unsigned int v152 = objc_msgSend(v12, sel_saveSynchronouslyWithError_, &v302);
    id v153 = v302;
    if (!v152)
    {
      id v159 = v302;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A7571850();

      swift_willThrow();
      goto LABEL_98;
    }
    uint64_t v29 = (uint64_t)v12;
    v234 = a3;
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
    id v154 = v153;
    swift_bridgeObjectRetain();
    v155 = (void *)sub_1A7572A00();
    swift_bridgeObjectRelease();
    id v302 = 0;
    unsigned int v156 = objc_msgSend(v236, sel_test_revertImageAttachmentsToUnDeduped_error_, v155, &v302);

    if (!v156)
    {
      id v160 = v302;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v161 = (void *)sub_1A7571850();

      swift_willThrow();
      uint64_t v162 = sub_1A7571840();
      sub_1A73E9094();
      swift_allocError();
      uint64_t *v163 = v162;
      swift_willThrow();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_140;
    }
    uint64_t v22 = (uint64_t *)v242;
    if ((v242 & 0xC000000000000001) != 0)
    {
      id v157 = v302;
      swift_bridgeObjectRetain();
      uint64_t v158 = sub_1A7573400();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v158 = *(void *)(v242 + 16);
      id v164 = v302;
    }
    if (v158)
    {
      id v293 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94C58]), sel_initWithStore_, v236);
      if ((v242 & 0xC000000000000001) != 0)
      {
        uint64_t v286 = 0;
        unint64_t v82 = 0;
        unint64_t v165 = 0;
        unint64_t v166 = sub_1A75737F0() | 0x8000000000000000;
      }
      else
      {
        uint64_t v170 = -1 << *(unsigned char *)(v242 + 32);
        unint64_t v82 = ~v170;
        uint64_t v286 = v242 + 64;
        uint64_t v171 = -v170;
        if (v171 < 64) {
          uint64_t v172 = ~(-1 << v171);
        }
        else {
          uint64_t v172 = -1;
        }
        unint64_t v165 = v172 & *(void *)(v242 + 64);
        unint64_t v166 = v242;
      }
      uint64_t v129 = (uint64_t)v11;
      swift_bridgeObjectRetain();
      int64_t v173 = 0;
      v283 = (void *)(v166 & 0x7FFFFFFFFFFFFFFFLL);
      int64_t v284 = (v82 + 64) >> 6;
      uint64_t v282 = MEMORY[0x1E4FBC838] + 8;
      uint64_t v287 = v82;
      for (id i = (id)v166; ; v166 = (unint64_t)i)
      {
        if ((v166 & 0x8000000000000000) != 0)
        {
          id v11 = (id)v129;
          if (!sub_1A7573820())
          {
            uint64_t v29 = (uint64_t)v270;
            goto LABEL_136;
          }
          sub_1A72BEFEC(0, &qword_1E96F1140);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v176 = v302;
          swift_unknownObjectRelease();
          sub_1A72BEFEC(0, &qword_1E96F2D90);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          uint64_t v22 = (uint64_t *)v302;
          swift_unknownObjectRelease();
          uint64_t v174 = v165;
        }
        else
        {
          if (v165)
          {
            uint64_t v174 = (v165 - 1) & v165;
            unint64_t v175 = __clz(__rbit64(v165)) | (v173 << 6);
          }
          else
          {
            int64_t v177 = v173;
            BOOL v93 = __OFADD__(v173++, 1);
            if (v93) {
              goto LABEL_165;
            }
            if (v173 >= v284)
            {
LABEL_135:
              id v11 = (id)v129;
              uint64_t v10 = v252;
              goto LABEL_136;
            }
            unint64_t v178 = *(void *)(v286 + 8 * v173);
            if (!v178)
            {
              int64_t v179 = v173 + 1;
              if (v173 + 1 >= v284) {
                goto LABEL_135;
              }
              unint64_t v178 = *(void *)(v286 + 8 * v179);
              if (v178) {
                goto LABEL_117;
              }
              int64_t v179 = v173 + 2;
              if (v173 + 2 >= v284) {
                goto LABEL_135;
              }
              unint64_t v178 = *(void *)(v286 + 8 * v179);
              if (v178)
              {
LABEL_117:
                int64_t v173 = v179;
              }
              else
              {
                v173 += 3;
                if (v173 >= v284) {
                  goto LABEL_135;
                }
                unint64_t v178 = *(void *)(v286 + 8 * v173);
                if (!v178)
                {
                  int64_t v186 = v177 + 5;
                  uint64_t v10 = v252;
                  while (v284 != v186)
                  {
                    unint64_t v178 = *(void *)(v286 + 8 * v186++);
                    if (v178)
                    {
                      int64_t v173 = v186 - 1;
                      goto LABEL_118;
                    }
                  }
                  goto LABEL_148;
                }
              }
            }
LABEL_118:
            uint64_t v174 = (v178 - 1) & v178;
            unint64_t v175 = __clz(__rbit64(v178)) + (v173 << 6);
          }
          uint64_t v180 = 8 * v175;
          v181 = *(void **)(*(void *)(v166 + 56) + v180);
          id v176 = *(id *)(*(void *)(v166 + 48) + v180);
          uint64_t v22 = v181;
        }
        if (!v176)
        {
          id v11 = (id)v129;
          uint64_t v29 = (uint64_t)v270;
          uint64_t v10 = v252;
          goto LABEL_136;
        }
        id v182 = v176;
        v183 = v22;
        id v184 = objc_msgSend(v293, sel_updateAccount_, v182);
        v185 = (uint64_t *)objc_msgSend(v184, sel_templatesContextChangeItem);
        if (v185)
        {
          uint64_t v22 = v185;
          objc_msgSend(v185, sel_updateManualOrdering_, v183);
        }
        unint64_t v165 = v174;
        uint64_t v29 = (uint64_t)v270;
        uint64_t v10 = v252;
        unint64_t v82 = v287;
      }
    }
LABEL_138:
    objc_msgSend(v236, sel_test_refreshHashtagLabelsImmediately);
    objc_msgSend(v236, sel_test_handleIncompleteTemplateOperationQueueItemsImmediately);
    objc_msgSend(v236, sel_test_handleIncompleteGroceryOperationQueueItemsImmediatelyWithTimeout_, 1.0);
    v189 = sub_1A73DCF70((uint64_t)v10);
    if (v11)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_140;
    }
    uint64_t v22 = v189;
    swift_bridgeObjectRelease();
    uint64_t v191 = swift_bridgeObjectRetain();
    sub_1A72D26F4(v191);
    swift_bridgeObjectRelease();
    v192 = (void *)sub_1A7572A00();
    swift_release();
    id v302 = 0;
    id v193 = objc_msgSend(v236, sel_fetchListsWithObjectIDs_error_, v192, &v302);

    id v194 = v302;
    if (!v193)
    {
      id v199 = v302;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A7571850();

      swift_willThrow();
      goto LABEL_98;
    }
    sub_1A72BEFEC(0, &qword_1E96F1940);
    sub_1A72D8FDC();
    uint64_t v195 = sub_1A75723F0();
    id v196 = v194;

    swift_bridgeObjectRetain();
    uint64_t v197 = swift_bridgeObjectRetain();
    sub_1A73DF8C8(v197, v195, &qword_1E96F2DF0, &qword_1E96F1940, 0x1E4F94B28, 8);
    uint64_t v200 = v198;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v201 = v300;
    uint64_t v202 = swift_bridgeObjectRetain();
    sub_1A72D26F4(v202);
    swift_bridgeObjectRelease();
    v203 = (void *)sub_1A7572A00();
    swift_release();
    id v302 = 0;
    id v204 = objc_msgSend(v236, sel_fetchListSectionsWithObjectIDs_error_, v203, &v302);

    id v205 = v302;
    if (!v204)
    {
      id v208 = v302;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A7571850();

      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_154;
    }
    uint64_t v287 = v200;
    sub_1A72BEFEC(0, &qword_1E96F2D98);
    uint64_t v206 = sub_1A75723F0();
    id v207 = v205;

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A73DF8C8(v201, v206, &qword_1E96F2DE8, &qword_1E96F2D98, 0x1E4F94B50, 20);
    goto LABEL_152;
  }
  v234 = a3;
  uint64_t v13 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  uint64_t v15 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v242 = MEMORY[0x1E4FBC868];
  v250 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v235 = a1 + 32;
  while (1)
  {
    v251 = v15;
    uint64_t v16 = (uint64_t *)(v13 + 48 * v14);
    uint64_t v17 = v16[1];
    if (!v10[2])
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_94:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A73E9094();
      swift_allocError();
      void *v167 = 13;
      swift_willThrow();

      goto LABEL_98;
    }
    uint64_t v238 = v14;
    uint64_t v18 = v16[3];
    uint64_t v19 = *v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_1A72B2210(v19, v17);
    if ((v21 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_94;
    }
    uint64_t v22 = (uint64_t *)*(id *)(v10[7] + 8 * v20);
    swift_bridgeObjectRelease();
    sub_1A72BEFEC(0, &qword_1E96F2D90);
    uint64_t v23 = (void *)REMManualOrdering.init(templates:)(MEMORY[0x1E4FBC860]);
    type metadata accessor for REMMutableManualOrdering();
    swift_allocObject();
    v244 = v22;
    uint64_t v245 = REMMutableManualOrdering.init(immutableManualOrdering:)(v23);
    id v255 = objc_msgSend(v12, sel_updateAccount_, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v247 = *(void *)(v18 + 16);
    if (v247) {
      break;
    }
LABEL_67:
    swift_bridgeObjectRelease();
    swift_retain();
    unint64_t v143 = sub_1A74032BC();
    swift_release();
    if (v143 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v144 = sub_1A75738D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v144 = *(void *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v144)
    {
      v145 = v244;
      id v146 = REMMutableManualOrdering.immutableCopy()();
      uint64_t v147 = v242;
      if ((v242 & 0xC000000000000001) != 0)
      {
        if (v242 < 0) {
          uint64_t v148 = v242;
        }
        else {
          uint64_t v148 = v242 & 0xFFFFFFFFFFFFFF8;
        }
        uint64_t v149 = sub_1A7573400();
        if (__OFADD__(v149, 1))
        {
          __break(1u);
          goto LABEL_169;
        }
        uint64_t v147 = sub_1A7404AAC(v148, v149 + 1);
      }
      v150 = (void *)v147;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v302 = v150;
      sub_1A72D70EC((uint64_t)v146, v145, isUniquelyReferenced_nonNull_native);
      uint64_t v242 = (uint64_t)v302;
      swift_release();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    uint64_t v14 = v238 + 1;

    uint64_t v15 = v251;
    uint64_t v13 = v235;
    if (v238 + 1 == v237)
    {
      swift_bridgeObjectRelease();
      a3 = v234;
      goto LABEL_82;
    }
  }
  uint64_t v239 = OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfTopLevelElementIDs;
  uint64_t v249 = v18 + 32;
  id v24 = (id)swift_beginAccess();
  unint64_t v25 = 0;
  uint64_t v248 = v18;
  while (v25 < *(void *)(v18 + 16))
  {
    uint64_t v26 = v249 + 120 * v25;
    uint64_t v28 = *(void **)v26;
    uint64_t v27 = *(void *)(v26 + 8);
    uint64_t v30 = *(void *)(v26 + 16);
    uint64_t v29 = *(void *)(v26 + 24);
    uint64_t v31 = *(void **)(v26 + 48);
    uint64_t v268 = *(void *)(v26 + 40);
    uint64_t v269 = v29;
    uint64_t v22 = *(uint64_t **)(v26 + 56);
    uint64_t v259 = *(void *)(v26 + 72);
    v260 = *(void **)(v26 + 64);
    uint64_t v263 = *(void *)(v26 + 32);
    uint64_t v264 = *(void *)(v26 + 80);
    uint64_t v254 = *(void *)(v26 + 88);
    unint64_t v261 = *(void *)(v26 + 96);
    uint64_t v262 = v30;
    uint64_t v265 = v27;
    v256 = v22;
    v267 = v31;
    v257 = *(uint64_t **)(v26 + 112);
    uint64_t v258 = *(void *)(v26 + 104);
    unint64_t v253 = v25 + 1;
    switch(v261 >> 62)
    {
      case 1uLL:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v70 = objc_msgSend(v255, sel_groupContext);
        if (!v70)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A73E9094();
          swift_allocError();
          void *v168 = 0;
          swift_willThrow();

          swift_release();
          sub_1A73E0AD8((uint64_t)v28, v27, v30, v29, v263, v268, v31, v22, v260, v259, v264, v254, v261);
          goto LABEL_98;
        }
        id v71 = v70;
        uint64_t v72 = (uint64_t)v28;
        uint64_t v73 = v27;
        v74 = (void *)sub_1A75725E0();
        v241 = v71;
        id v75 = objc_msgSend(v270, sel_addGroupWithName_toAccountGroupContextChangeItem_, v74, v71);

        swift_bridgeObjectRetain();
        id v243 = v75;
        id v76 = objc_msgSend(v75, sel_objectID);
        v77 = v301;
        if (v76)
        {
          id v289 = v76;
          id v61 = v11;
          uint64_t v78 = v22;
          char v79 = swift_isUniquelyReferenced_nonNull_native();
          id v302 = v77;
          uint64_t v80 = v72;
          unint64_t v82 = sub_1A72B2210(v72, v73);
          uint64_t v83 = v77[2];
          BOOL v84 = (v81 & 1) == 0;
          uint64_t v85 = v83 + v84;
          if (__OFADD__(v83, v84)) {
            goto LABEL_161;
          }
          uint64_t v29 = v81;
          if (v77[3] >= v85)
          {
            if ((v79 & 1) == 0) {
              sub_1A72BCEA0();
            }
          }
          else
          {
            sub_1A72B7654(v85, v79);
            unint64_t v86 = sub_1A72B2210(v80, v265);
            if ((v29 & 1) != (v87 & 1))
            {
LABEL_174:
              sub_1A7574010();
              __break(1u);
              JUMPOUT(0x1A73CD624);
            }
            unint64_t v82 = v86;
          }
          v110 = v302;
          uint64_t v22 = v78;
          if (v29)
          {
            uint64_t v111 = *((void *)v302 + 7);
            uint64_t v112 = 8 * v82;

            *(void *)(v111 + v112) = v289;
            v113 = v267;
            uint64_t v73 = v265;
          }
          else
          {
            *((void *)v302 + (v82 >> 6) + 8) |= 1 << v82;
            v114 = (uint64_t *)(v110[6] + 16 * v82);
            uint64_t v73 = v265;
            uint64_t *v114 = v80;
            v114[1] = v265;
            *(void *)(v110[7] + 8 * v82) = v289;
            uint64_t v115 = v110[2];
            BOOL v93 = __OFADD__(v115, 1);
            uint64_t v116 = v115 + 1;
            if (v93)
            {
              __break(1u);
LABEL_165:
              __break(1u);
              goto LABEL_166;
            }
            v110[2] = v116;
            swift_bridgeObjectRetain();
            v113 = v267;
          }
          v301 = v110;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v80 = v72;
          unint64_t v105 = sub_1A72B2210(v72, v73);
          char v107 = v106;
          swift_bridgeObjectRelease();
          if (v107)
          {
            char v108 = swift_isUniquelyReferenced_nonNull_native();
            id v302 = v77;
            if ((v108 & 1) == 0)
            {
              sub_1A72BCEA0();
              v77 = v302;
            }
            swift_bridgeObjectRelease();
            v109 = *(void **)(v77[7] + 8 * v105);
            sub_1A745A634(v105, (uint64_t)v77);
            v301 = v77;

            uint64_t v73 = v265;
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          v113 = v267;
        }
        id v266 = objc_msgSend(v243, sel_sublistContext);
        if (!v266)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A73E9094();
          swift_allocError();
          void *v169 = 1;
          swift_willThrow();

          swift_release();
          sub_1A73E0AD8(v80, v73, v262, v269, v263, v268, v113, v22, v260, v259, v264, v254, v261);
          goto LABEL_98;
        }
        uint64_t v246 = v80;
        uint64_t v117 = *(void *)(v262 + 16);
        if (!v117)
        {
          swift_bridgeObjectRetain();
          id v4 = v11;
LABEL_65:
          uint64_t v12 = v270;
          id v11 = v4;

          sub_1A73E0AD8(v246, v265, v262, v269, v263, v268, v267, v256, v260, v259, v264, v254, v261);
          id v24 = (id)swift_bridgeObjectRelease();
          goto LABEL_9;
        }
        uint64_t v22 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
        id v4 = v11;
        while (1)
        {
          uint64_t v271 = v117;
          v119 = (void *)*(v22 - 5);
          uint64_t v118 = *(v22 - 4);
          uint64_t v287 = *(v22 - 3);
          id v290 = (id)*(v22 - 2);
          v120 = (void *)v22[1];
          v121 = (void *)v22[2];
          uint64_t v281 = v22[4];
          uint64_t v282 = (uint64_t)v119;
          uint64_t v122 = v22[5];
          uint64_t v123 = v22[7];
          v283 = v121;
          int64_t v284 = *(v22 - 1);
          uint64_t v273 = v123;
          uint64_t v278 = *v22;
          uint64_t v280 = v22[8];
          id v293 = v4;
          uint64_t v274 = v118;
          uint64_t v275 = v22[6];
          uint64_t v276 = v22[9];
          v285 = (void *)v22[3];
          uint64_t v272 = v122;
          if ((v123 & 0x8000000000000000) == 0) {
            break;
          }
          uint64_t v131 = *v22;
          id v132 = (id)v22[3];
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          v133 = v119;
          v134 = v121;
          id v135 = v120;
          id v136 = v134;
          id v137 = v132;
          id v138 = v135;
          id v139 = v136;
          v140 = (void *)sub_1A75725E0();
          id v141 = objc_msgSend(v270, sel_addCustomSmartListWithName_toAccountChangeItem_smartListObjectID_, v140, v255, 0);

          id v24 = objc_msgSend(v266, sel_insertSmartListChangeItem_afterSmartListChangeItem_, v141, 0);
          id v302 = v133;
          uint64_t v303 = v118;
          uint64_t v304 = v287;
          uint64_t v305 = (uint64_t)v290;
          int64_t v306 = v284;
          uint64_t v307 = v131;
          v308 = v120;
          v309 = (uint64_t *)v134;
          v310 = v285;
          char v311 = v281 & 1;
          id v11 = (id)v272;
          uint64_t v312 = v272;
          uint64_t v142 = v295;
          if (__OFADD__(v295, 1)) {
            goto LABEL_151;
          }
          ++v295;
          sub_1A73DF17C(v141, (uint64_t)&v302, v142, &v299, &v298);

          sub_1A73E3870((uint64_t)v133, v118, v287, (uint64_t)v290, v284, v278, v120, v283, v285, v281, v272, v275, v273);
          sub_1A73E3870(v282, v118, v287, (uint64_t)v290, v284, v278, v120, v283, v285, v281, v272, v275, v273);
LABEL_58:
          id v4 = 0;
          v22 += 15;
          --v117;
          if (v271 == 1) {
            goto LABEL_65;
          }
        }
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        id v124 = v120;
        id v125 = v121;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        id v126 = v124;
        id v127 = v125;
        v128 = (void *)sub_1A75725E0();
        uint64_t v10 = objc_msgSend(v270, sel_addListWithName_toListSublistContextChangeItem_, v128, v266);

        id v302 = v119;
        uint64_t v303 = v118;
        uint64_t v304 = v287;
        uint64_t v305 = (uint64_t)v290;
        int64_t v306 = v284;
        uint64_t v307 = v278;
        v308 = v120;
        v309 = (uint64_t *)v283;
        v310 = v285;
        uint64_t v29 = v281;
        char v311 = v281 & 1;
        uint64_t v129 = v275;
        uint64_t v312 = v122;
        uint64_t v313 = v275;
        __int16 v314 = v123 & 0x101;
        char v315 = BYTE2(v123) & 1;
        uint64_t v316 = v280;
        uint64_t v317 = v276;
        uint64_t v130 = v295;
        if (!__OFADD__(v295, 1))
        {
          ++v295;
          sub_1A73D30D0(v10, (uint64_t)&v302, v130, (uint64_t *)&v301, &v300, (id *)&v297, &v296);

          sub_1A73E3870((uint64_t)v119, v274, v287, (uint64_t)v290, v284, v278, v120, v283, v285, v281, v122, v275, v123);
          sub_1A73E3870((uint64_t)v119, v274, v287, (uint64_t)v290, v284, v278, v120, v283, v285, v281, v122, v275, v123);
          goto LABEL_58;
        }
        __break(1u);
LABEL_148:
        id v11 = (id)v129;
LABEL_136:
        sub_1A72D99A4();
        id v302 = 0;
        if (objc_msgSend(v293, sel_saveSynchronouslyWithError_, &v302))
        {
          id v188 = v302;

          goto LABEL_138;
        }
        id v190 = v302;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A7571850();

        swift_willThrow();
LABEL_98:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_140:
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      case 2uLL:
        id v11 = *(id *)(v26 + 8);
        id v41 = v260;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v29 = v30;
        swift_bridgeObjectRetain_n();
        uint64_t v42 = v31;
        id v43 = v31;
        uint64_t v44 = v22;
        id v45 = v41;
        id v46 = v43;
        uint64_t v47 = v44;
        id v48 = (void *)sub_1A75725E0();
        id v38 = objc_msgSend(v270, sel_addCustomSmartListWithName_toAccountChangeItem_smartListObjectID_, v48, v255, 0);

        id v302 = v28;
        uint64_t v303 = (uint64_t)v11;
        uint64_t v304 = v29;
        uint64_t v305 = v269;
        int64_t v306 = v263;
        uint64_t v307 = v268;
        v308 = v42;
        v309 = v22;
        v310 = v260;
        char v311 = v259 & 1;
        uint64_t v312 = v264;
        uint64_t v49 = v295;
        if (__OFADD__(v295, 1))
        {
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          v283 = v39;
          int64_t v284 = (int64_t)v38;
          swift_bridgeObjectRelease();

          uint64_t v210 = v298;
          uint64_t v211 = swift_bridgeObjectRetain();
          sub_1A72D26F4(v211);
          swift_bridgeObjectRelease();
          v212 = (void *)sub_1A7572A00();
          swift_release();
          id v302 = 0;
          id v213 = objc_msgSend((id)v29, sel_fetchSmartListSectionsWithObjectIDs_error_, v212, &v302);

          id v61 = v302;
          if (!v213) {
            goto LABEL_163;
          }
          sub_1A72BEFEC(0, (unint64_t *)&qword_1EB700580);
          uint64_t v214 = sub_1A75723F0();
          id v215 = v61;

          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1A73DF8C8(v210, v214, &qword_1E96F2DD8, (unint64_t *)&qword_1EB700580, 0x1E4F94C90, 21);
          uint64_t v282 = v216;
          unint64_t v82 = (unint64_t)v11;
          if (v11)
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_140;
          }
LABEL_166:
          uint64_t v12 = v22;
          id v11 = (id)v287;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          id v4 = (id)v29;
          uint64_t v218 = swift_bridgeObjectRetain();
          sub_1A73DFEF8(v218, v4);
          uint64_t v148 = v82;
          if (v82)
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_98;
          }
LABEL_169:
          uint64_t v219 = v149;
          swift_bridgeObjectRelease();

          id v220 = v4;
          swift_bridgeObjectRetain();
          sub_1A73DD4CC(MEMORY[0x1E4FBC868], (uint64_t)v251, v220);
          v279 = v221;
          if (v148)
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_140;
          }

          uint64_t v222 = v297;
          uint64_t v223 = swift_bridgeObjectRetain();
          sub_1A72D26F4(v223);
          uint64_t v277 = v222;
          swift_bridgeObjectRelease();
          v224 = (void *)sub_1A7572A00();
          swift_release();
          id v225 = objc_msgSend(self, sel_fetchOptionsIncludingDueDateDeltaAlerts);
          id v302 = 0;
          id v226 = objc_msgSend(v220, sel_fetchRemindersWithObjectIDs_fetchOptions_error_, v224, v225, &v302);

          id v227 = v302;
          if (v226)
          {
            sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1310);
            uint64_t v228 = sub_1A75723F0();
            id v229 = v227;

            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1A73DF8C8(v277, v228, &qword_1E96F1130, (unint64_t *)&qword_1E96F1310, 0x1E4F94BE8, 12);
            uint64_t v232 = v231;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            sub_1A73DD254(v232);
            v294 = v233;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            *v234 = v12;
            v234[1] = (uint64_t *)v240;
            v234[2] = (uint64_t *)v11;
            v234[3] = (uint64_t *)v284;
            v234[4] = (uint64_t *)v283;
            v234[5] = (uint64_t *)v282;
            v234[6] = (uint64_t *)v219;
            v234[7] = v279;
            v234[8] = (uint64_t *)v232;
            v234[9] = v294;
            return result;
          }
          id v230 = v302;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A7571850();

          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_154:
          swift_bridgeObjectRelease();
          goto LABEL_140;
        }
        ++v295;
        sub_1A73DF17C(v38, (uint64_t)&v302, v49, &v299, &v298);

        uint64_t v22 = (uint64_t *)v260;
        id v4 = (id)v265;
        sub_1A73E0AD8((uint64_t)v28, v265, v262, v269, v263, v268, v267, v256, v260, v259, v264, v254, v261);
        sub_1A73E0AD8((uint64_t)v28, v265, v262, v269, v263, v268, v267, v256, v260, v259, v264, v254, v261);
LABEL_8:
        uint64_t v12 = v270;
        id v11 = 0;
LABEL_9:
        uint64_t v10 = v252;
        unint64_t v25 = v253;
        uint64_t v18 = v248;
        if (v253 == v247) {
          goto LABEL_67;
        }
        break;
      case 3uLL:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v288 = objc_msgSend(v255, sel_templatesContextChangeItem);
        if (!v288)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_133;
        }
        uint64_t v50 = (uint64_t)v301;
        id v292 = v11;
        if (!v301[2]) {
          goto LABEL_20;
        }
        swift_bridgeObjectRetain();
        unint64_t v51 = sub_1A72B2210(v30, v29);
        if ((v52 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_20:
          uint64_t v50 = v299;
          if (!*(void *)(v299 + 16))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_132;
          }
          swift_bridgeObjectRetain();
          unint64_t v51 = sub_1A72B2210(v30, v29);
          if ((v53 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
LABEL_132:
            swift_bridgeObjectRelease();
            uint64_t v31 = v267;
LABEL_133:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A73E9094();
            swift_allocError();
            void *v187 = 17;
            swift_willThrow();

            swift_release();
            sub_1A73E0AD8((uint64_t)v28, v27, v30, v29, v263, v268, v31, v22, v260, v259, v264, v254, v261);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
        }
        id v54 = *(id *)(*(void *)(v50 + 56) + 8 * v51);
        swift_bridgeObjectRelease();
        id v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94D08]), sel_initWithSourceListID_shouldSaveCompleted_, v54, v263 & 1);
        v56 = (void *)sub_1A75725E0();
        id v57 = objc_msgSend(v288, sel_addTemplateWithName_configuration_, v56, v55);

        id v58 = objc_msgSend(v57, sel_objectID);
        swift_bridgeObjectRetain();
        id v59 = v58;
        char v60 = swift_isUniquelyReferenced_nonNull_native();
        id v302 = v251;
        id v61 = v28;
        unint64_t v63 = sub_1A72B2210((uint64_t)v28, v265);
        uint64_t v64 = v251[2];
        BOOL v65 = (v62 & 1) == 0;
        uint64_t v66 = v64 + v65;
        if (__OFADD__(v64, v65))
        {
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          id v217 = v61;
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A7571850();

          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_140;
        }
        char v67 = v62;
        if (v251[3] >= v66)
        {
          if ((v60 & 1) == 0) {
            sub_1A72BCEA0();
          }
        }
        else
        {
          sub_1A72B7654(v66, v60);
          unint64_t v68 = sub_1A72B2210((uint64_t)v61, v265);
          if ((v67 & 1) != (v69 & 1)) {
            goto LABEL_174;
          }
          unint64_t v63 = v68;
        }
        id v11 = v292;
        objc_super v88 = v302;
        v251 = v302;
        if (v67)
        {
          uint64_t v89 = *((void *)v302 + 7);
          uint64_t v90 = 8 * v63;

          *(void *)(v89 + v90) = v59;
        }
        else
        {
          *((void *)v302 + (v63 >> 6) + 8) |= 1 << v63;
          unsigned __int8 v91 = (void *)(v88[6] + 16 * v63);
          *unsigned __int8 v91 = v61;
          v91[1] = v265;
          *(void *)(v88[7] + 8 * v63) = v59;
          uint64_t v92 = v88[2];
          BOOL v93 = __OFADD__(v92, 1);
          uint64_t v94 = v92 + 1;
          if (v93) {
            goto LABEL_162;
          }
          v88[2] = v94;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(*(id *)(*(void *)(v245 + v239) + 16), sel_addObject_, v59);
        id v95 = v54;
        id v96 = v59;
        id v97 = objc_msgSend(v244, sel_remObjectID);
        id v98 = v55;
        id v99 = v95;
        id v4 = v96;
        uint64_t v22 = (uint64_t *)v98;
        id v100 = v97;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          v101 = v250;
        }
        else {
          v101 = sub_1A72AD39C(0, v250[2] + 1, 1, v250);
        }
        unint64_t v103 = v101[2];
        unint64_t v102 = v101[3];
        if (v103 >= v102 >> 1) {
          v101 = sub_1A72AD39C((void *)(v102 > 1), v103 + 1, 1, v101);
        }
        v101[2] = v103 + 1;
        v250 = v101;
        v104 = &v101[4 * v103];
        v104[4] = v4;
        v104[5] = v99;
        v104[6] = v100;
        v104[7] = v22;

        sub_1A73E0AD8((uint64_t)v61, v265, v262, v269, v263, v268, v267, v256, v260, v259, v264, v254, v261);
        uint64_t v12 = v270;
        goto LABEL_9;
      default:
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        id v11 = v28;
        uint64_t v32 = v27;
        id v33 = v31;
        uint64_t v34 = v22;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        id v35 = v33;
        unint64_t v36 = v34;
        uint64_t v37 = (void *)sub_1A75725E0();
        id v38 = objc_msgSend(v270, sel_addListWithName_toAccountChangeItem_, v37, v255);

        id v302 = v28;
        uint64_t v303 = v32;
        uint64_t v304 = v30;
        uint64_t v305 = v29;
        int64_t v306 = v263;
        uint64_t v307 = v268;
        v308 = v267;
        v309 = v22;
        v310 = v260;
        char v311 = v259 & 1;
        uint64_t v312 = v264;
        uint64_t v313 = v254;
        __int16 v314 = v261 & 0x101;
        char v315 = BYTE2(v261) & 1;
        uint64_t v22 = v257;
        uint64_t v316 = v258;
        uint64_t v317 = (uint64_t)v257;
        uint64_t v40 = v295;
        if (__OFADD__(v295, 1)) {
          goto LABEL_156;
        }
        ++v295;
        sub_1A73D30D0(v38, (uint64_t)&v302, v40, (uint64_t *)&v301, &v300, (id *)&v297, &v296);

        uint64_t v22 = (uint64_t *)v254;
        id v4 = (id)v265;
        sub_1A73E0AD8((uint64_t)v28, v265, v30, v269, v263, v268, v267, v256, v260, v259, v264, v254, v261);
        sub_1A73E0AD8((uint64_t)v28, v265, v30, v269, v263, v268, v267, v256, v260, v259, v264, v254, v261);
        goto LABEL_8;
    }
  }
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  id v38 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v29 = (uint64_t)v236;
  uint64_t v209 = swift_bridgeObjectRetain();
  uint64_t v39 = sub_1A73DFC1C(v209, (void *)v29);
  if (!v11) {
    goto LABEL_157;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  goto LABEL_154;
}

uint64_t sub_1A73CD634(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A73CD660(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A73CD704(uint64_t a1)
{
  swift_bridgeObjectRetain();
  sub_1A73CD94C(0x694C656C676E6953, 0xEA00000000007473, 0, 1, a1, (uint64_t)v27);
  uint64_t v2 = v27[1];
  uint64_t v3 = v27[3];
  uint64_t v24 = v27[2];
  uint64_t v25 = v27[0];
  uint64_t v4 = v27[5];
  unint64_t v5 = (void *)v27[6];
  uint64_t v22 = v27[8];
  uint64_t v23 = v27[4];
  unint64_t v20 = (void *)v27[7];
  uint64_t v21 = v28;
  uint64_t v6 = v29;
  uint64_t v7 = v30;
  uint64_t v8 = 256;
  if (!v32) {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | v31;
  uint64_t v10 = 0x10000;
  if (!v33) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = v9 | v10;
  uint64_t v13 = v34;
  uint64_t v12 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2D80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1A75785A0;
  *(void *)(v14 + 32) = v25;
  *(void *)(v14 + 40) = v2;
  *(void *)(v14 + 48) = v24;
  *(void *)(v14 + 56) = v3;
  *(void *)(v14 + 64) = v23;
  *(void *)(v14 + 72) = v4;
  *(void *)(v14 + 80) = v5;
  *(void *)(v14 + 88) = v20;
  *(void *)(v14 + 96) = v22;
  *(void *)(v14 + 104) = v21;
  *(void *)(v14 + 112) = v6;
  *(void *)(v14 + 120) = v7;
  *(void *)(v14 + 128) = v11;
  *(void *)(v14 + 136) = v13;
  *(void *)(v14 + 144) = v12;
  uint64_t v15 = qword_1E96F07F0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v26 = v5;
  id v16 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1E96F2C90;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2CD8);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1A75785A0;
  *(void *)(v18 + 32) = 0x64656C7469746E55;
  *(void *)(v18 + 40) = 0xE800000000000000;
  *(void *)(v18 + 48) = v17;
  *(void *)(v18 + 56) = v14;
  *(void *)(v18 + 64) = 0;
  *(void *)(v18 + 72) = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

double sub_1A73CD94C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v10 = type metadata accessor for REMTestStorePopulator.TestReminder(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for REMTestStorePopulator.TestList.ListChild(0);
  uint64_t v14 = *(void *)(v35 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](a5);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v38 = 0;
  char v37 = 0;
  char v39 = a4 & 1;
  int64_t v18 = *(void *)(a5 + 16);
  if (v18)
  {
    uint64_t v31 = a3;
    uint64_t v32 = a6;
    uint64_t v36 = MEMORY[0x1E4FBC860];
    uint64_t v19 = v15;
    sub_1A72D2E64(0, v18, 0);
    uint64_t v20 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v30 = v19;
    uint64_t v21 = v19 + ((v20 + 32) & ~v20);
    uint64_t v22 = *(void *)(v11 + 72);
    do
    {
      sub_1A73E0474(v21, (uint64_t)v13, type metadata accessor for REMTestStorePopulator.TestReminder);
      sub_1A73E0474((uint64_t)v13, (uint64_t)v17, type metadata accessor for REMTestStorePopulator.TestReminder);
      swift_storeEnumTagMultiPayload();
      sub_1A73E0630((uint64_t)v13, type metadata accessor for REMTestStorePopulator.TestReminder);
      uint64_t v23 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A72D2E64(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = v36;
      }
      unint64_t v25 = *(void *)(v23 + 16);
      unint64_t v24 = *(void *)(v23 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1A72D2E64(v24 > 1, v25 + 1, 1);
        uint64_t v23 = v36;
      }
      *(void *)(v23 + 16) = v25 + 1;
      sub_1A73E05C8((uint64_t)v17, v23+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v25, type metadata accessor for REMTestStorePopulator.TestList.ListChild);
      v21 += v22;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    a4 = v39;
    char v26 = HIBYTE(v38);
    char v27 = v38;
    char v28 = v37;
    a3 = v31;
    a6 = v32;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v28 = 0;
    char v27 = 0;
    char v26 = 0;
    uint64_t v23 = MEMORY[0x1E4FBC860];
  }
  *(void *)a6 = v33;
  *(void *)(a6 + 8) = v34;
  double result = 0.0;
  *(_OWORD *)(a6 + 16) = 0u;
  *(_OWORD *)(a6 + 32) = 0u;
  *(_OWORD *)(a6 + 48) = 0u;
  *(void *)(a6 + 64) = a3;
  *(unsigned char *)(a6 + 72) = a4 & 1;
  *(void *)(a6 + 80) = v23;
  *(void *)(a6 + 88) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a6 + 96) = v26;
  *(unsigned char *)(a6 + 97) = v27;
  *(unsigned char *)(a6 + 98) = v28;
  *(void *)(a6 + 104) = 0;
  *(void *)(a6 + 112) = 0;
  return result;
}

uint64_t static REMTestStorePopulator.TestStoreBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 40);
  unint64_t v5 = *(void **)(a1 + 48);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 88);
  uint64_t v10 = *(void *)(a1 + 104);
  uint64_t v9 = *(void *)(a1 + 112);
  uint64_t v11 = 256;
  if (!*(unsigned char *)(a1 + 97)) {
    uint64_t v11 = 0;
  }
  uint64_t v12 = v11 | *(unsigned __int8 *)(a1 + 96);
  uint64_t v13 = 0x10000;
  if (!*(unsigned char *)(a1 + 98)) {
    uint64_t v13 = 0;
  }
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v4;
  *(void *)(a2 + 48) = v5;
  long long v14 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 56) = v14;
  *(void *)(a2 + 72) = v6;
  *(void *)(a2 + 80) = v8;
  *(void *)(a2 + 88) = v7;
  *(void *)(a2 + 96) = v12 | v13;
  uint64_t v15 = (void *)v14;
  *(void *)(a2 + 104) = v10;
  *(void *)(a2 + 112) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = v5;
  id v17 = v15;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t vars8;

  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(unsigned __int8 *)(a1 + 32);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = 0xC000000000000000;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

double static REMTestStorePopulator.TestStoreBuilder.buildBlock(_:)(uint64_t a1)
{
  uint64_t v2 = qword_1E96F07F0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1E96F2C90;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2CD8);
  uint64_t v4 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v4 + 16) = xmmword_1A75785A0;
  *(void *)(v4 + 32) = 0x64656C7469746E55;
  *(void *)(v4 + 40) = 0xE800000000000000;
  *(void *)(v4 + 48) = v3;
  *(void *)(v4 + 56) = a1;
  *(void *)(v4 + 64) = 0;
  *(void *)(v4 + 72) = 0;
  return result;
}

uint64_t REMTestStorePopulator.dump(formatter:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v129 = *MEMORY[0x1E4F143B8];
  id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMAccountsListDataView.Invocation()), sel_initWithFetchResultTokenToDiffAgainst_, 0);
  sub_1A72F7D10((uint64_t)v4, 0x100000001uLL, (uint64_t)v126);

  long long v122 = v126[8];
  long long v123 = v127;
  long long v124 = v128;
  long long v118 = v126[4];
  long long v119 = v126[5];
  long long v120 = v126[6];
  long long v121 = v126[7];
  long long v114 = v126[0];
  long long v115 = v126[1];
  long long v116 = v126[2];
  long long v117 = v126[3];
  long long v5 = v127;
  long long v6 = v128;
  sub_1A73E0138((uint64_t)&v114);
  id v7 = *((id *)&v6 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A73E01C0((uint64_t)&v114);
  v125[6] = v120;
  v125[7] = v121;
  v125[8] = v122;
  v125[2] = v116;
  v125[3] = v117;
  v125[4] = v118;
  v125[5] = v119;
  v125[0] = v114;
  v125[1] = v115;
  v125[9] = v5;
  v125[10] = v6;
  sub_1A73E0138((uint64_t)&v114);
  sub_1A73E01C0((uint64_t)v125);
  uint64_t v8 = (void *)v114;
  swift_bridgeObjectRetain();
  sub_1A73E0288((uint64_t)&v114);
  uint64_t v112 = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A73DEBB4((uint64_t *)&v112, v2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v9 = v112;
  uint64_t v96 = v112[2];
  if (v96)
  {
    unint64_t v10 = 0;
    char v108 = a1;
    uint64_t v109 = swift_allocObject();
    *(void *)(v109 + 16) = MEMORY[0x1E4FBC860];
    char v107 = (void **)(v109 + 16);
    uint64_t v11 = v9 + 4;
    uint64_t v92 = v9;
    uint64_t v95 = v2;
    uint64_t v90 = v9 + 4;
    do
    {
      if (v10 >= v9[2]) {
        goto LABEL_62;
      }
      unint64_t v91 = v10;
      uint64_t v12 = (id *)&v11[2 * v10];
      id v13 = v12[1];
      id v104 = v13;
      id v94 = *v12;
      if (v96 == 1)
      {
        id v14 = *v12;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v15 = a1[4];
        id v16 = *v12;
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        id v17 = *(uint64_t (**)(void))(v15 + 8);
        id v18 = v16;
        swift_bridgeObjectRetain();
        id v19 = v18;
        uint64_t v20 = (void *)v17();
        unint64_t v22 = v21;

        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = MEMORY[0x1E4FBC860];
        uint64_t v112 = v20;
        unint64_t v113 = v22;
        unint64_t v24 = (void *)swift_allocObject();
        v24[2] = v23;
        v24[3] = 0;
        v24[4] = 0xE000000000000000;
        sub_1A72DF534();
        swift_retain();
        sub_1A75732A0();
        swift_release();
        swift_beginAccess();
        uint64_t v112 = *(void **)(v23 + 16);
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
        sub_1A72E3500();
        uint64_t v25 = sub_1A7572570();
        uint64_t v27 = v26;
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        char v28 = *v107;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v28 = sub_1A72AC148(0, v28[2] + 1, 1, v28);
        }
        unint64_t v30 = v28[2];
        unint64_t v29 = v28[3];
        a1 = v108;
        if (v30 >= v29 >> 1) {
          char v28 = sub_1A72AC148((void *)(v29 > 1), v30 + 1, 1, v28);
        }
        v28[2] = v30 + 1;
        uint64_t v31 = &v28[2 * v30];
        v31[4] = v25;
        v31[5] = v27;
        *char v107 = v28;
        swift_endAccess();
        sub_1A7572740();
        id v13 = v104;
      }
      uint64_t v97 = *((void *)v13 + 2);
      if (v97)
      {
        uint64_t v99 = (uint64_t)v13 + 32;
        swift_bridgeObjectRetain();
        unint64_t v32 = 0;
        while (1)
        {
          if (v32 >= *((void *)v13 + 2)) {
            goto LABEL_61;
          }
          uint64_t v33 = (unint64_t *)(v99 + 16 * v32);
          unint64_t v35 = *v33;
          unint64_t v34 = v33[1];
          unint64_t v36 = *v33 >> 62;
          unint64_t v102 = v32;
          if (!v36) {
            break;
          }
          if (v36 == 1)
          {
            sub_1A72E0C18(v35);
            sub_1A72E0C18(v35);
            swift_bridgeObjectRetain();
            sub_1A73D01A4((void *)(v35 & 0x3FFFFFFFFFFFFFFFLL), 0, 0xE000000000000000, a1, v109, 538976288, 0xE400000000000000, v2);
LABEL_18:
            sub_1A72E0C94(v35);
            swift_bridgeObjectRelease();
            sub_1A72E0C94(v35);
            goto LABEL_19;
          }
          uint64_t v38 = a1[4];
          __swift_project_boxed_opaque_existential_1(a1, a1[3]);
          char v39 = *(uint64_t (**)(void))(v38 + 24);
          sub_1A72E0C18(v35);
          unint64_t v93 = v35;
          unint64_t v103 = v34;
          sub_1A72E0C18(v35);
          id v40 = (id)(v35 & 0x3FFFFFFFFFFFFFFFLL);
          id v41 = (void *)v39();
          unint64_t v43 = v42;

          uint64_t v44 = swift_allocObject();
          *(void *)(v44 + 16) = MEMORY[0x1E4FBC860];
          uint64_t v112 = v41;
          unint64_t v113 = v43;
          id v45 = (void *)swift_allocObject();
          v45[2] = v44;
          v45[3] = 0;
          v45[4] = 0xE000000000000000;
          sub_1A72DF534();
          swift_bridgeObjectRetain_n();
          swift_retain();
          sub_1A75732A0();
          swift_release();
          swift_beginAccess();
          uint64_t v112 = *(void **)(v44 + 16);
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
          sub_1A72E3500();
          uint64_t v46 = sub_1A7572570();
          uint64_t v48 = v47;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          uint64_t v49 = *v107;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v49 = sub_1A72AC148(0, v49[2] + 1, 1, v49);
          }
          unint64_t v51 = v49[2];
          unint64_t v50 = v49[3];
          uint64_t v2 = v95;
          unint64_t v52 = v103;
          id v13 = v104;
          if (v51 >= v50 >> 1) {
            uint64_t v49 = sub_1A72AC148((void *)(v50 > 1), v51 + 1, 1, v49);
          }
          v49[2] = v51 + 1;
          char v53 = &v49[2 * v51];
          v53[4] = v46;
          v53[5] = v48;
          *char v107 = v49;
          swift_endAccess();
          uint64_t v112 = 0;
          unint64_t v113 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          sub_1A7572740();
          uint64_t v54 = v113;
          uint64_t v100 = *(void *)(v103 + 16);
          if (!v100)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_1A72E0C94(v35);
            sub_1A72E0C94(v35);
            swift_bridgeObjectRelease();
            a1 = v108;
            goto LABEL_19;
          }
          v101 = (void **)v112;
          swift_bridgeObjectRetain();
          unint64_t v55 = 0;
          a1 = v108;
          uint64_t v98 = v54;
          while (2)
          {
            if (v55 >= *(void *)(v52 + 16)) {
              goto LABEL_60;
            }
            unint64_t v56 = *(void *)(v103 + 32 + 8 * v55);
            if ((v56 & 0x8000000000000000) != 0)
            {
              id v85 = (id)(v56 & 0x7FFFFFFFFFFFFFFFLL);
              sub_1A73D01A4(v85, v101, v54, a1, v109, 538976288, 0xE400000000000000, v2);

              goto LABEL_30;
            }
            unint64_t v105 = v55;
            uint64_t v110 = v54;
            uint64_t v57 = a1[3];
            uint64_t v58 = a1[4];
            __swift_project_boxed_opaque_existential_1(a1, v57);
            id v59 = *(uint64_t (**)(id, uint64_t, uint64_t))(v58 + 24);
            id v60 = (id)v56;
            swift_bridgeObjectRetain();
            id v106 = v60;
            id v61 = (void *)v59(v60, v57, v58);
            unint64_t v63 = v62;
            uint64_t v64 = swift_allocObject();
            *(void *)(v64 + 16) = MEMORY[0x1E4FBC860];
            uint64_t v112 = v61;
            unint64_t v113 = v63;
            BOOL v65 = (void *)swift_allocObject();
            v65[2] = v64;
            v65[3] = v101;
            v65[4] = v54;
            swift_bridgeObjectRetain();
            swift_retain();
            sub_1A75732A0();
            swift_release();
            swift_beginAccess();
            uint64_t v112 = *(void **)(v64 + 16);
            swift_bridgeObjectRetain();
            uint64_t v66 = sub_1A7572570();
            uint64_t v68 = v67;
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_beginAccess();
            char v69 = *v107;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              char v69 = sub_1A72AC148(0, v69[2] + 1, 1, v69);
            }
            unint64_t v71 = v69[2];
            unint64_t v70 = v69[3];
            unint64_t v52 = v103;
            unint64_t v55 = v105;
            if (v71 >= v70 >> 1) {
              char v69 = sub_1A72AC148((void *)(v70 > 1), v71 + 1, 1, v69);
            }
            v69[2] = v71 + 1;
            uint64_t v72 = &v69[2 * v71];
            v72[4] = v66;
            v72[5] = v68;
            *char v107 = v69;
            swift_endAccess();
            sub_1A7572740();
            uint64_t v73 = v106;
            id v74 = objc_msgSend(v106, sel_sectionContext);

            if (v74)
            {
              sub_1A73CF6C4((uint64_t)v106, v101, v110, v109, 538976288, 0xE400000000000000, a1);
              id v13 = v104;
LABEL_28:
              uint64_t v54 = v98;
              goto LABEL_29;
            }
            uint64_t v112 = 0;
            id v75 = objc_msgSend(v106, sel_fetchRemindersWithError_, &v112);
            id v76 = v112;
            id v13 = v104;
            if (!v75)
            {
              unint64_t v86 = v112;
              swift_bridgeObjectRelease();
              char v87 = (void *)sub_1A7571850();

              swift_willThrow();
              swift_bridgeObjectRelease();
              sub_1A72E0C94(v93);
              sub_1A72E0C94(v93);
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              *(void *)&v126[0] = 0x203A726F727245;
              *((void *)&v126[0] + 1) = 0xE700000000000000;
              swift_getErrorValue();
              Error.rem_errorDescription.getter(v111);
              sub_1A7572740();
              swift_bridgeObjectRelease();

              return *(void *)&v126[0];
            }
            v77 = v75;
            sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1310);
            unint64_t v78 = sub_1A7572A10();
            id v79 = v76;

            if (v78 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v80 = sub_1A75738D0();
              swift_bridgeObjectRelease();
              if (!v80)
              {
LABEL_50:
                swift_bridgeObjectRelease();
                uint64_t v2 = v95;
                unint64_t v52 = v103;
                goto LABEL_28;
              }
            }
            else
            {
              uint64_t v80 = *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (!v80) {
                goto LABEL_50;
              }
            }
            uint64_t v81 = 4;
            do
            {
              if ((v78 & 0xC000000000000001) != 0) {
                id v82 = (id)MEMORY[0x1AD0CB800](v81 - 4, v78);
              }
              else {
                id v82 = *(id *)(v78 + 8 * v81);
              }
              uint64_t v83 = v82;
              uint64_t v84 = v81 - 3;
              if (__OFADD__(v81 - 4, 1))
              {
                __break(1u);
LABEL_60:
                __break(1u);
LABEL_61:
                __break(1u);
LABEL_62:
                __break(1u);
              }
              swift_bridgeObjectRetain();
              sub_1A73CEE08(v83, v101, v110, v109, v108, 538976288, 0xE400000000000000);

              swift_bridgeObjectRelease();
              ++v81;
            }
            while (v84 != v80);
            swift_bridgeObjectRelease();
            uint64_t v2 = v95;
            a1 = v108;
            unint64_t v52 = v103;
            id v13 = v104;
            uint64_t v54 = v98;
            unint64_t v55 = v105;
            uint64_t v73 = v106;
LABEL_29:

            swift_bridgeObjectRelease();
LABEL_30:
            if (++v55 != v100) {
              continue;
            }
            break;
          }
          swift_bridgeObjectRelease();
          sub_1A72E0C94(v93);
          sub_1A72E0C94(v93);
          swift_bridgeObjectRelease();
LABEL_19:
          unint64_t v32 = v102 + 1;
          if (v102 + 1 == v97)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_54;
          }
        }
        char v37 = *(unsigned char *)(v2 + 96);
        sub_1A72E0C18(v35);
        sub_1A72E0C18(v35);
        swift_bridgeObjectRetain();
        sub_1A73CF218((void *)v35, 0, 0xE000000000000000, v37, v109, a1, 538976288, 0xE400000000000000);
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();
LABEL_54:
      unint64_t v10 = v91 + 1;

      swift_bridgeObjectRelease();
      uint64_t v11 = v90;
      uint64_t v9 = v92;
    }
    while (v91 + 1 != v96);
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    sub_1A72E3500();
    uint64_t v89 = sub_1A7572570();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    return 0x6F636361206F6E3CLL;
  }
  return v89;
}

id sub_1A73CEE08(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  char v37 = (unint64_t *)(a4 + 16);
  uint64_t v12 = a5[3];
  uint64_t v13 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v12);
  id v38 = a1;
  uint64_t v14 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 40))(a1, v12, v13);
  uint64_t v16 = v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v46 = v14;
  uint64_t v47 = v16;
  id v18 = (void *)swift_allocObject();
  v18[2] = v17;
  void v18[3] = a2;
  v18[4] = a3;
  sub_1A72DF534();
  swift_retain();
  uint64_t v39 = a3;
  id v19 = v37;
  swift_bridgeObjectRetain();
  sub_1A75732A0();
  swift_release();
  swift_beginAccess();
  id v44 = *(id *)(v17 + 16);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A72E3500();
  uint64_t v20 = sub_1A7572570();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  unint64_t v23 = *(void *)(a4 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v40 = a4;
  *(void *)(a4 + 16) = v23;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_19;
  }
  while (1)
  {
    unint64_t v26 = *(void *)(v23 + 16);
    unint64_t v25 = *(void *)(v23 + 24);
    if (v26 >= v25 >> 1)
    {
      unint64_t v23 = (unint64_t)sub_1A72AC148((void *)(v25 > 1), v26 + 1, 1, (void *)v23);
      unint64_t *v19 = v23;
    }
    *(void *)(v23 + 16) = v26 + 1;
    unint64_t v27 = v23 + 16 * v26;
    *(void *)(v27 + 32) = v20;
    *(void *)(v27 + 40) = v22;
    swift_endAccess();
    id result = objc_msgSend(v38, sel_subtaskContext);
    if (!result) {
      break;
    }
    unint64_t v29 = result;
    id v44 = 0;
    id v30 = objc_msgSend(result, sel_fetchRemindersWithError_, &v44);

    id v31 = v44;
    if (!v30)
    {
      id v36 = v44;
      sub_1A7571850();

      return (id)swift_willThrow();
    }
    sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1310);
    unint64_t v23 = sub_1A7572A10();
    id v32 = v31;

    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1A75738D0();
      swift_bridgeObjectRelease();
      if (!v22) {
        return (id)swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v22) {
        return (id)swift_bridgeObjectRelease();
      }
    }
    id v38 = (id)(v23 & 0xC000000000000001);
    uint64_t v33 = 4;
    while (1)
    {
      uint64_t v20 = v33 - 4;
      id v34 = v38 ? (id)MEMORY[0x1AD0CB800](v33 - 4, v23) : *(id *)(v23 + 8 * v33);
      unint64_t v35 = v34;
      id v19 = (unint64_t *)(v33 - 3);
      if (__OFADD__(v20, 1)) {
        break;
      }
      id v44 = a2;
      uint64_t v45 = v39;
      swift_bridgeObjectRetain();
      sub_1A7572740();
      sub_1A73CEE08(v35, v44, v45, v40, a5, a6, a7);

      swift_bridgeObjectRelease();
      if (!v7)
      {
        ++v33;
        if (v19 != (unint64_t *)v22) {
          continue;
        }
      }
      return (id)swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_19:
    unint64_t v23 = (unint64_t)sub_1A72AC148(0, *(void *)(v23 + 16) + 1, 1, (void *)v23);
    unint64_t *v19 = v23;
  }
  return result;
}

uint64_t sub_1A73CF218(void *a1, void *a2, uint64_t a3, char a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = a6;
  uint64_t v10 = a5;
  v50[6] = *(id *)MEMORY[0x1E4F143B8];
  if ((a4 & 1) == 0)
  {
    unint64_t v44 = (unint64_t)a6;
    uint64_t v45 = a5;
    unint64_t v42 = (void **)(a5 + 16);
    uint64_t v14 = a6[3];
    uint64_t v15 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v14);
    uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 24);
    swift_bridgeObjectRetain();
    unint64_t v43 = a1;
    uint64_t v17 = (void *)v16(a1, v14, v15);
    id v19 = v18;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = MEMORY[0x1E4FBC860];
    v50[3] = v17;
    v50[4] = v19;
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = v20;
    v21[3] = a2;
    v21[4] = a3;
    sub_1A72DF534();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1A75732A0();
    swift_release();
    swift_beginAccess();
    uint64_t v22 = v42;
    v50[0] = *(id *)(v20 + 16);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    sub_1A72E3500();
    unint64_t v23 = (void *)sub_1A7572570();
    uint64_t v41 = v24;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v25 = *v42;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v42 = v25;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  while (1)
  {
    id v30 = objc_msgSend(a1, sel_sectionContext, v41);

    if (v30)
    {
      sub_1A73CF6C4((uint64_t)a1, a2, a3, v10, a7, a8, v9);
      return swift_bridgeObjectRelease();
    }
    v50[0] = 0;
    id v31 = objc_msgSend(a1, sel_fetchRemindersWithError_, v50);
    id v32 = v50[0];
    if (!v31)
    {
      id v39 = v50[0];
      swift_bridgeObjectRelease();
      sub_1A7571850();

      return swift_willThrow();
    }
    uint64_t v33 = v31;
    sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1310);
    unint64_t v34 = sub_1A7572A10();
    id v35 = v32;

    unint64_t v44 = v34;
    if (v34 >> 62) {
      break;
    }
    uint64_t v22 = *(void **)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v22) {
      goto LABEL_25;
    }
LABEL_12:
    uint64_t v45 = v10;
    unint64_t v23 = v9;
    uint64_t v36 = 4;
    while (1)
    {
      char v37 = (v44 & 0xC000000000000001) != 0
          ? (void *)MEMORY[0x1AD0CB800](v36 - 4, v44)
          : *(id *)(v44 + 8 * v36);
      unint64_t v25 = v37;
      id v38 = (void *)(v36 - 3);
      if (__OFADD__(v36 - 4, 1)) {
        break;
      }
      swift_bridgeObjectRetain();
      sub_1A73CEE08(v25, a2, a3, v10, v23, a7, a8);
      if (v8)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease_n();
      }

      swift_bridgeObjectRelease();
      ++v36;
      if (v38 == v22) {
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_23:
    unint64_t v25 = sub_1A72AC148(0, v25[2] + 1, 1, v25);
    void *v22 = v25;
LABEL_4:
    unint64_t v28 = v25[2];
    unint64_t v27 = v25[3];
    uint64_t v10 = v45;
    a1 = v43;
    if (v28 >= v27 >> 1)
    {
      unint64_t v25 = sub_1A72AC148((void *)(v27 > 1), v28 + 1, 1, v25);
      void *v22 = v25;
    }
    v25[2] = v28 + 1;
    unint64_t v29 = &v25[2 * v28];
    v29[4] = v23;
    v29[5] = v41;
    swift_endAccess();
    sub_1A7572740();
    uint64_t v9 = (void *)v44;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = (void *)sub_1A75738D0();
  swift_bridgeObjectRelease();
  if (v22) {
    goto LABEL_12;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1A73CF6C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  unint64_t v8 = v7;
  objc_super v88 = a7;
  uint64_t v92 = a6;
  uint64_t v91 = a5;
  uint64_t v90 = a4;
  uint64_t v86 = a3;
  id v85 = a2;
  v100[13] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  MEMORY[0x1F4188790](Configuration);
  unint64_t v12 = (unint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100[0] = 0;
  id v13 = objc_msgSend((id)a1, sel_fetchRemindersWithError_, v100);
  id v14 = v100[0];
  if (!v13)
  {
    id v40 = v100[0];
    sub_1A7571850();

    swift_willThrow();
    return;
  }
  uint64_t v15 = v13;
  uint64_t v93 = sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1310);
  unint64_t v16 = sub_1A7572A10();
  id v17 = v14;

  uint64_t v18 = sub_1A72B154C(MEMORY[0x1E4FBC860]);
  if (v16 >> 62) {
    goto LABEL_65;
  }
  uint64_t v19 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v84 = Configuration;
    char v87 = (void *)a1;
    uint64_t v89 = v8;
    unint64_t v78 = (unsigned char *)v12;
    if (!v19)
    {
LABEL_27:
      swift_bridgeObjectRelease_n();
      unint64_t v35 = v84;
      uint64_t v36 = v78;
      type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
      swift_storeEnumTagMultiPayload();
      type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
      swift_storeEnumTagMultiPayload();
      *uint64_t v36 = -127;
      v36[*(int *)(v35 + 24)] = 0;
      v36[*(int *)(v35 + 32)] = 1;
      char v37 = v87;
      id v38 = objc_msgSend(v87, sel_store);
      uint64_t v39 = v89;
      static REMRemindersListDataView.fetchList_Sections(store:list:configuration:diffingAgainst:)((uint64_t)v38, v37, (uint64_t)v36, 0, (uint64_t)v100);
      if (v39)
      {
        sub_1A73E0630((uint64_t)v36, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
        swift_bridgeObjectRelease();

        return;
      }

      v77 = v100[0];
      unint64_t v16 = (unint64_t)v100[6];
      unint64_t v8 = (unint64_t)v100[9];
      a1 = (uint64_t)v100[10];
      id v96 = v100[12];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = v77;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v74 = v41[2];
      if (!v74)
      {
LABEL_59:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A73E0630((uint64_t)v78, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
        return;
      }
      unint64_t v12 = 0;
      uint64_t v73 = (void *)(v90 + 16);
      id v76 = (char *)(v41 + 4);
      unint64_t Configuration = v18 & 0xC000000000000001;
      uint64_t v42 = v18 & 0xFFFFFFFFFFFFFF8;
      if (v18 < 0) {
        uint64_t v42 = v18;
      }
      unint64_t v95 = v42;
      uint64_t v89 = MEMORY[0x1E4FBC838] + 8;
      unint64_t v75 = v18 & 0xC000000000000001;
      while (1)
      {
        if (v12 >= v41[2]) {
          goto LABEL_64;
        }
        unint64_t v43 = (unint64_t *)&v76[48 * v12];
        unint64_t v8 = *v43;
        unint64_t v16 = v43[1];
        a1 = v43[2];
        unint64_t v44 = v43[3];
        unint64_t v45 = v43[4];
        unint64_t v84 = v43[5];
        id v96 = (id)v8;
        unint64_t v79 = v12;
        unint64_t v83 = v44;
        unint64_t v82 = v45;
        uint64_t v81 = a1;
        unint64_t v80 = v16;
        if (v8)
        {
          uint64_t v46 = (void **)swift_allocObject();
          char v87 = v46;
          v46[2] = (void *)MEMORY[0x1E4FBC860];
          id v94 = v46 + 2;
          uint64_t v98 = (void *)v16;
          uint64_t v99 = a1;
          uint64_t v47 = (void *)swift_allocObject();
          uint64_t v48 = v85;
          v47[2] = v46;
          v47[3] = v48;
          v47[4] = v86;
          sub_1A73E8E74(v8);
          sub_1A72DF534();
          unint64_t v49 = v84;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1A75732A0();
          swift_release();
          unint64_t v50 = v94;
          swift_beginAccess();
          uint64_t v98 = *v50;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
          sub_1A72E3500();
          uint64_t v51 = sub_1A7572570();
          a1 = v52;
          swift_release();
          swift_bridgeObjectRelease();
          char v53 = (void **)v73;
          swift_beginAccess();
          uint64_t v54 = *v53;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *char v53 = v54;
          unint64_t v56 = v49;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v54 = sub_1A72AC148(0, v54[2] + 1, 1, v54);
            *uint64_t v73 = v54;
          }
          unint64_t Configuration = v75;
          unint64_t v58 = v54[2];
          unint64_t v57 = v54[3];
          unint64_t v16 = v58 + 1;
          if (v58 >= v57 >> 1)
          {
            uint64_t v54 = sub_1A72AC148((void *)(v57 > 1), v58 + 1, 1, v54);
            *uint64_t v73 = v54;
          }
          v54[2] = v16;
          id v59 = &v54[2 * v58];
          v59[4] = v51;
          v59[5] = a1;
          swift_endAccess();
          uint64_t v98 = v85;
          uint64_t v99 = v86;
          swift_bridgeObjectRetain();
          sub_1A7572740();
          char v87 = v98;
          id v94 = (void **)v99;
          unint64_t v60 = v56;
          unint64_t v8 = (unint64_t)v96;
          uint64_t v61 = *(void *)(v60 + 16);
          if (v61)
          {
LABEL_43:
            swift_bridgeObjectRetain();
            unint64_t v62 = (unint64_t *)(v60 + 56);
            while (1)
            {
              a1 = *(v62 - 3);
              unint64_t v16 = *v62;
              if (Configuration)
              {
                swift_bridgeObjectRetain();
                id v63 = (id)a1;
                uint64_t v64 = sub_1A7573810();
                if (!v64)
                {

LABEL_45:
                  unint64_t v8 = (unint64_t)v96;
                  goto LABEL_46;
                }
                uint64_t v97 = v64;
                swift_unknownObjectRetain();
                swift_dynamicCast();
                id v65 = v98;
                swift_unknownObjectRelease();
              }
              else
              {
                uint64_t v66 = *(void *)(v18 + 16);
                swift_bridgeObjectRetain();
                id v67 = (id)a1;
                if (!v66) {
                  goto LABEL_46;
                }
                id v68 = v67;
                unint64_t v69 = sub_1A72B252C((uint64_t)v68);
                if ((v70 & 1) == 0)
                {

                  goto LABEL_45;
                }
                id v65 = *(id *)(*(void *)(v18 + 56) + 8 * v69);
              }

              unint64_t v8 = (unint64_t)v96;
              if (v65)
              {
                sub_1A73CEE08(v65, v87, (uint64_t)v94, v90, v88, v91, v92);

                swift_bridgeObjectRelease();
                goto LABEL_47;
              }
LABEL_46:
              swift_bridgeObjectRelease();

LABEL_47:
              v62 += 4;
              if (!--v61)
              {
                swift_bridgeObjectRelease();
                break;
              }
            }
          }
        }
        else
        {
          sub_1A73E8E74(0);
          unint64_t v60 = v84;
          swift_bridgeObjectRetain();
          uint64_t v71 = swift_bridgeObjectRetain();
          char v87 = v85;
          id v94 = (void **)v71;
          unint64_t Configuration = v75;
          uint64_t v61 = *(void *)(v60 + 16);
          if (v61) {
            goto LABEL_43;
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v12 = v79 + 1;
        sub_1A73E8EC0((void *)v8);
        swift_bridgeObjectRelease();
        uint64_t v41 = v77;
        if (v12 == v74) {
          goto LABEL_59;
        }
      }
    }
    unint64_t v95 = v16;
    id v96 = (id)(v16 & 0xC000000000000001);
    uint64_t v20 = 4;
    id v94 = (void **)v19;
LABEL_8:
    id v21 = v96 ? (id)MEMORY[0x1AD0CB800](v20 - 4, v16) : *(id *)(v16 + 8 * v20);
    id v22 = v21;
    unint64_t Configuration = v20 - 3;
    if (!__OFADD__(v20 - 4, 1)) {
      break;
    }
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  unint64_t v16 = (unint64_t)objc_msgSend(v21, sel_objectID);
  if ((v18 & 0xC000000000000001) != 0)
  {
    if (v18 < 0) {
      uint64_t v23 = v18;
    }
    else {
      uint64_t v23 = v18 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v24 = sub_1A7573400();
    if (__OFADD__(v24, 1)) {
      goto LABEL_62;
    }
    uint64_t v18 = sub_1A7404D00(v23, v24 + 1);
  }
  a1 = swift_isUniquelyReferenced_nonNull_native();
  v100[0] = (id)v18;
  unint64_t v8 = sub_1A72B252C(v16);
  uint64_t v26 = *(void *)(v18 + 16);
  BOOL v27 = (v25 & 1) == 0;
  uint64_t v28 = v26 + v27;
  if (__OFADD__(v26, v27)) {
    goto LABEL_61;
  }
  unint64_t v12 = v25;
  if (*(void *)(v18 + 24) >= v28)
  {
    if ((a1 & 1) == 0) {
      sub_1A72BCEB8();
    }
LABEL_24:
    uint64_t v18 = (uint64_t)v100[0];
    if (v12)
    {
      unint64_t v12 = *((void *)v100[0] + 7);

      *(void *)(v12 + 8 * v8) = v22;
    }
    else
    {
      *((void *)v100[0] + (v8 >> 6) + 8) |= 1 << v8;
      *(void *)(*(void *)(v18 + 48) + 8 * v8) = v16;
      *(void *)(*(void *)(v18 + 56) + 8 * v8) = v22;
      uint64_t v31 = *(void *)(v18 + 16);
      BOOL v32 = __OFADD__(v31, 1);
      uint64_t v33 = v31 + 1;
      if (v32) {
        goto LABEL_63;
      }
      *(void *)(v18 + 16) = v33;
      id v34 = (id)v16;
    }

    swift_bridgeObjectRelease();
    ++v20;
    unint64_t v16 = v95;
    if ((void **)Configuration == v94) {
      goto LABEL_27;
    }
    goto LABEL_8;
  }
  sub_1A72B766C(v28, a1);
  unint64_t v29 = sub_1A72B252C(v16);
  if ((v12 & 1) == (v30 & 1))
  {
    unint64_t v8 = v29;
    goto LABEL_24;
  }
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
  sub_1A7574010();
  __break(1u);
}

void sub_1A73D01A4(void *a1, void **a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v87 = a5;
  uint64_t v78 = a8;
  uint64_t v84 = a6;
  uint64_t v85 = a7;
  uint64_t v79 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  MEMORY[0x1F4188790](v79);
  uint64_t v81 = (uint64_t *)((char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v77 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  MEMORY[0x1F4188790](v77);
  unint64_t v80 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v86 = a5 + 16;
  v101 = a2;
  uint64_t v102 = a3;
  uint64_t v15 = a4[3];
  id v21 = (void *)a4[4];
  unint64_t v83 = a4;
  __swift_project_boxed_opaque_existential_1(a4, v15);
  unint64_t v16 = (uint64_t (*)(void *, uint64_t, void *))v21[4];
  swift_bridgeObjectRetain();
  id v82 = a1;
  uint64_t v17 = v16(a1, v15, v21);
  uint64_t v19 = v18;
  LOBYTE(v21) = v20;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = MEMORY[0x1E4FBC860];
  *(void *)&v93[0] = v17;
  *((void *)&v93[0] + 1) = v19;
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v22;
  void v23[3] = a2;
  v23[4] = a3;
  sub_1A72DF534();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A75732A0();
  swift_release();
  swift_beginAccess();
  *(void *)&v93[0] = *(void *)(v22 + 16);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A72E3500();
  uint64_t v24 = sub_1A7572570();
  unint64_t v26 = v25;
  swift_bridgeObjectRelease();
  unint64_t v27 = v86;
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v28 = v87;
  uint64_t v29 = *(void *)(v87 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v28 + 16) = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_34;
  }
  while (1)
  {
    unint64_t v32 = *(void *)(v29 + 16);
    unint64_t v31 = *(void *)(v29 + 24);
    if (v32 >= v31 >> 1)
    {
      uint64_t v29 = (uint64_t)sub_1A72AC148((void *)(v31 > 1), v32 + 1, 1, (void *)v29);
      *(void *)unint64_t v27 = v29;
    }
    *(void *)(v29 + 16) = v32 + 1;
    uint64_t v33 = v29 + 16 * v32;
    *(void *)(v33 + 32) = v24;
    *(void *)(v33 + 40) = v26;
    swift_endAccess();
    if ((v21 & 1) == 0) {
      goto LABEL_53;
    }
    uint64_t v35 = v84;
    uint64_t v34 = v85;
    sub_1A7572740();
    id v36 = v82;
    id v37 = objc_msgSend(v82, sel_sectionContext);

    uint64_t v38 = v88;
    if (v37)
    {
      sub_1A73D0B08(v36, v101, v102, v87, v35, v34, v83);
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v39 = *(void **)(v78 + 16);
    char v104 = 96;
    uint64_t v40 = (uint64_t)v80;
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = (uint64_t)v81;
    *uint64_t v81 = 0x7FFFFFFFFFFFFFFFLL;
    swift_storeEnumTagMultiPayload();
    char v103 = 2;
    static REMRemindersListDataView.fetchCustomSmartList(store:smartList:sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:shouldFetchManualOrderingID:diffingAgainst:)(v39, v36, &v104, v40, 0, v41, &v103, 0, v93, 0);
    if (v38)
    {
      sub_1A73E0630(v41, type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
      sub_1A73E0630(v40, type metadata accessor for REMRemindersListDataView.ShowCompleted);
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v88 = 0;
    sub_1A73E0630(v41, type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
    sub_1A73E0630(v40, type metadata accessor for REMRemindersListDataView.ShowCompleted);
    v91[6] = v98;
    v91[7] = v99;
    uint64_t v92 = v100;
    v91[2] = v94;
    v91[3] = v95;
    v91[4] = v96;
    v91[5] = v97;
    v91[0] = v93[0];
    v91[1] = v93[1];
    uint64_t v42 = *((void *)&v94 + 1);
    unint64_t v26 = v94;
    long long v43 = v95;
    unint64_t v80 = *(char **)&v93[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v79 = v42;
    swift_bridgeObjectRetain();
    id v21 = (id)v43;
    sub_1A7315C10(*((void **)&v43 + 1));
    sub_1A73E8F6C((uint64_t)v91);

    sub_1A7315D30(*((void **)&v43 + 1));
    if (v26 >> 62) {
      goto LABEL_37;
    }
    uint64_t v44 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v44) {
      break;
    }
LABEL_11:
    unint64_t v86 = v26 & 0xC000000000000001;
    uint64_t v24 = MEMORY[0x1E4FBC868];
    uint64_t v29 = 4;
    uint64_t v81 = (void *)v44;
    id v82 = (id)v26;
    while (1)
    {
      id v46 = v86 ? (id)MEMORY[0x1AD0CB800](v29 - 4, v26) : *(id *)(v26 + 8 * v29);
      id v47 = v46;
      unint64_t v26 = v29 - 3;
      if (__OFADD__(v29 - 4, 1)) {
        break;
      }
      id v48 = objc_msgSend(v46, sel_objectID);
      if ((v24 & 0xC000000000000001) != 0)
      {
        if (v24 >= 0) {
          v24 &= 0xFFFFFFFFFFFFFF8uLL;
        }
        uint64_t v49 = sub_1A7573400();
        if (__OFADD__(v49, 1))
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          swift_bridgeObjectRetain_n();
          uint64_t v44 = sub_1A75738D0();
          swift_bridgeObjectRelease();
          if (!v44) {
            goto LABEL_38;
          }
          goto LABEL_11;
        }
        uint64_t v24 = sub_1A7404D00(v24, v49 + 1);
      }
      char v50 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v90 = (void *)v24;
      unint64_t v27 = sub_1A72B252C((uint64_t)v48);
      uint64_t v52 = *(void *)(v24 + 16);
      BOOL v53 = (v51 & 1) == 0;
      uint64_t v54 = v52 + v53;
      if (__OFADD__(v52, v53)) {
        goto LABEL_33;
      }
      LOBYTE(v21) = v51;
      if (*(void *)(v24 + 24) >= v54)
      {
        if ((v50 & 1) == 0) {
          sub_1A72BCEB8();
        }
      }
      else
      {
        sub_1A72B766C(v54, v50);
        unint64_t v55 = sub_1A72B252C((uint64_t)v48);
        if ((v21 & 1) != (v56 & 1))
        {
          sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
          sub_1A7574010();
          __break(1u);
          return;
        }
        unint64_t v27 = v55;
      }
      uint64_t v24 = (uint64_t)v90;
      if (v21)
      {
        id v21 = (void *)v90[7];

        v21[v27] = v47;
      }
      else
      {
        v90[(v27 >> 6) + 8] |= 1 << v27;
        *(void *)(*(void *)(v24 + 48) + 8 * v27) = v48;
        *(void *)(*(void *)(v24 + 56) + 8 * v27) = v47;
        uint64_t v57 = *(void *)(v24 + 16);
        BOOL v58 = __OFADD__(v57, 1);
        uint64_t v59 = v57 + 1;
        if (v58) {
          goto LABEL_36;
        }
        *(void *)(v24 + 16) = v59;
        id v60 = v48;
      }

      swift_bridgeObjectRelease();
      ++v29;
      BOOL v45 = v26 == (void)v81;
      unint64_t v26 = (unint64_t)v82;
      if (v45) {
        goto LABEL_39;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    uint64_t v29 = (uint64_t)sub_1A72AC148(0, *(void *)(v29 + 16) + 1, 1, (void *)v29);
    *(void *)unint64_t v27 = v29;
  }
LABEL_38:
  uint64_t v24 = MEMORY[0x1E4FBC868];
LABEL_39:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v61 = *((void *)v80 + 2);
  if (!v61)
  {
LABEL_52:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_53:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v62 = v24 & 0xFFFFFFFFFFFFFF8;
  if (v24 < 0) {
    uint64_t v62 = v24;
  }
  unint64_t v86 = v62;
  id v63 = v80 + 56;
  id v82 = (id)(MEMORY[0x1E4FBC838] + 8);
  while (1)
  {
    uint64_t v64 = (void *)*((void *)v63 - 3);
    if ((v24 & 0xC000000000000001) == 0) {
      break;
    }
    swift_bridgeObjectRetain();
    id v65 = v64;
    uint64_t v66 = sub_1A7573810();
    if (!v66)
    {

      goto LABEL_57;
    }
    uint64_t v89 = v66;
    sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1310);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v67 = v90;
    swift_unknownObjectRelease();

    if (!v67) {
      goto LABEL_57;
    }
LABEL_50:
    uint64_t v73 = v101;
    uint64_t v74 = v102;
    swift_bridgeObjectRetain();
    unint64_t v75 = v73;
    uint64_t v76 = v88;
    sub_1A73CEE08(v67, v75, v74, v87, v83, v84, v85);
    uint64_t v88 = v76;
    if (v76)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_53;
    }
    v63 += 32;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v61) {
      goto LABEL_52;
    }
  }
  uint64_t v68 = *(void *)(v24 + 16);
  swift_bridgeObjectRetain();
  id v69 = v64;
  if (!v68) {
    goto LABEL_57;
  }
  id v70 = v69;
  unint64_t v71 = sub_1A72B252C((uint64_t)v70);
  if (v72)
  {
    id v67 = *(id *)(*(void *)(v24 + 56) + 8 * v71);

    if (!v67) {
      goto LABEL_57;
    }
    goto LABEL_50;
  }

LABEL_57:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A73E8F18();
  swift_allocError();
  swift_willThrow();
  swift_bridgeObjectRelease();
}

void sub_1A73D0B08(void *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v117 = a6;
  long long v118 = a7;
  uint64_t v116 = a5;
  uint64_t v114 = a4;
  uint64_t v111 = a2;
  uint64_t v112 = a3;
  uint64_t v157 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters(0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  uint64_t v14 = Configuration - 8;
  MEMORY[0x1F4188790](Configuration);
  unint64_t v16 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  swift_storeEnumTagMultiPayload();
  *unint64_t v16 = 96;
  v16[*(int *)(v14 + 32)] = 0;
  v16[*(int *)(v14 + 40)] = 1;
  uint64_t v17 = (char *)objc_msgSend(a1, sel_store);
  objc_allocWithZone((Class)type metadata accessor for REMSmartList_Codable());
  id v18 = a1;
  id v19 = REMSmartList_Codable.init(_:)(v18);
  sub_1A73E0474((uint64_t)v16, (uint64_t)&v12[*(int *)(v10 + 32)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  *(void *)unint64_t v12 = v19;
  v12[8] = 0;
  id v20 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, 0);
  sub_1A72F882C((unint64_t)v20, (uint64_t)v12, (uint64_t)&v148);
  if (v7)
  {

    sub_1A73E0630((uint64_t)v12, type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters);
    sub_1A73E0630((uint64_t)v16, type metadata accessor for REMRemindersListDataView.FetchConfiguration);

    return;
  }
  id v115 = v18;
  uint64_t v120 = 0;
  char v104 = v16;

  sub_1A73E0630((uint64_t)v12, type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters);
  v130[5] = v153;
  v130[6] = v154;
  v130[7] = v155;
  uint64_t v131 = v156;
  v130[2] = v150;
  v130[3] = v151;
  v130[4] = v152;
  v130[0] = v148;
  v130[1] = v149;
  long long v119 = (void **)*((void *)&v148 + 1);
  uint64_t v113 = v148;
  long long v121 = (void *)v149;
  LODWORD(v122) = BYTE8(v149);
  LODWORD(v123) = BYTE9(v149);
  uint64_t v108 = *((void *)&v150 + 1);
  uint64_t v109 = (void *)v150;
  long long v21 = v151;
  uint64_t v110 = v17;
  unint64_t v102 = *((void *)&v152 + 1);
  uint64_t v103 = v153;
  v101 = (void *)*((void *)&v154 + 1);
  uint64_t v22 = v154;
  uint64_t v124 = v155;
  id v125 = (void *)*((void *)&v153 + 1);
  uint64_t v23 = v156;
  unint64_t v105 = (void **)v152;
  uint64_t v106 = *((void *)&v155 + 1);
  char v107 = v156;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v24 = (id)v21;
  id v100 = v24;
  sub_1A7315C10(*((void **)&v21 + 1));
  id v25 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v26 = v101;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = v106;
  swift_bridgeObjectRetain();
  sub_1A73E8F6C((uint64_t)v130);

  v132[0] = v113;
  v132[1] = v119;
  v132[2] = v121;
  char v133 = v122;
  char v134 = v123;
  id v135 = v109;
  uint64_t v136 = v108;
  id v137 = v24;
  uint64_t v138 = *((void *)&v21 + 1);
  id v139 = v105;
  unint64_t v140 = v102;
  uint64_t v141 = v103;
  uint64_t v142 = v125;
  uint64_t v143 = v22;
  uint64_t v144 = v26;
  uint64_t v145 = v124;
  uint64_t v146 = v27;
  uint64_t v147 = v107;
  uint64_t v28 = v113;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v29 = v100;
  sub_1A7315C10(*((void **)&v21 + 1));
  sub_1A73E8F6C((uint64_t)v132);

  sub_1A7315D30(*((void **)&v21 + 1));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v30 = (void **)MEMORY[0x1E4FBC860];
  v129[0] = (id)MEMORY[0x1E4FBC860];
  long long v121 = *(void **)(v28 + 16);
  if (v121)
  {
    long long v119 = (void **)(v28 + 32);
    swift_bridgeObjectRetain();
    unint64_t v31 = 0;
    unint64_t v32 = &selRef_frequencyComponents;
    uint64_t v33 = v115;
    do
    {
      uint64_t v35 = (char *)&v119[6 * (void)v31];
      uint64_t v36 = *((void *)v35 + 5);
      uint64_t v37 = *(void *)(v36 + 16);
      if (v37)
      {
        uint64_t v38 = *(void **)v35;
        uint64_t v39 = *((void *)v35 + 1);
        uint64_t v40 = *((void *)v35 + 2);
        uint64_t v41 = *((void *)v35 + 3);
        long long v127 = v30;
        uint64_t v124 = v39;
        id v125 = v38;
        uint64_t v122 = v41;
        uint64_t v123 = v40;
        sub_1A73E8E74((uint64_t)v38);
        swift_bridgeObjectRetain_n();
        sub_1A75736F0();
        uint64_t v42 = 32;
        do
        {
          id v43 = *(id *)(v36 + v42);
          sub_1A75736C0();
          sub_1A7573700();
          sub_1A7573710();
          sub_1A75736D0();
          v42 += 32;
          --v37;
        }
        while (v37);
        unint64_t v34 = (unint64_t)v127;
        swift_bridgeObjectRelease();
        sub_1A73E8EC0(v125);
        swift_bridgeObjectRelease();
        char v30 = (void **)MEMORY[0x1E4FBC860];
        unint64_t v32 = &selRef_frequencyComponents;
        uint64_t v33 = v115;
      }
      else
      {
        unint64_t v34 = (unint64_t)v30;
      }
      unint64_t v31 = (char *)v31 + 1;
      sub_1A72D0F0C(v34);
    }
    while (v31 != v121);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v32 = &selRef_frequencyComponents;
    uint64_t v33 = v115;
  }
  id v44 = [v33 v32[92]];
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
  BOOL v45 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  id v46 = objc_msgSend(self, sel_fetchOptionsIncludingDueDateDeltaAlerts);
  v129[0] = 0;
  id v47 = objc_msgSend(v44, sel_fetchRemindersWithObjectIDs_fetchOptions_error_, v45, v46, v129);

  id v48 = v129[0];
  if (v47)
  {
    uint64_t v49 = sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1310);
    sub_1A72D8FDC();
    uint64_t v123 = v49;
    uint64_t v50 = sub_1A75723F0();
    id v51 = v48;

    id v125 = (void *)v50;
    if (v121)
    {
      unint64_t v52 = 0;
      uint64_t v53 = v113;
      v101 = (void *)(v114 + 16);
      uint64_t v103 = v113 + 32;
      uint64_t v54 = v50 & 0xFFFFFFFFFFFFFF8;
      if (v50 < 0) {
        uint64_t v54 = v50;
      }
      uint64_t v124 = v54;
      uint64_t v122 = MEMORY[0x1E4FBC838] + 8;
      char v56 = v111;
      uint64_t v55 = v112;
      unint64_t v102 = v50 & 0xC000000000000001;
      while (1)
      {
        if (v52 >= *(void *)(v53 + 16)) {
          __break(1u);
        }
        uint64_t v110 = (char *)v52;
        uint64_t v60 = v103 + 48 * v52;
        uint64_t v61 = *(void **)v60;
        uint64_t v62 = *(void ***)(v60 + 8);
        uint64_t v63 = *(void *)(v60 + 16);
        uint64_t v64 = *(void *)(v60 + 24);
        id v65 = *(void **)(v60 + 32);
        id v115 = *(id *)(v60 + 40);
        char v107 = v65;
        uint64_t v108 = v64;
        unint64_t v105 = v62;
        uint64_t v106 = v63;
        uint64_t v109 = v61;
        if (v61)
        {
          uint64_t v66 = swift_allocObject();
          *(void *)(v66 + 16) = MEMORY[0x1E4FBC860];
          long long v119 = (void **)(v66 + 16);
          long long v127 = v62;
          uint64_t v128 = v63;
          id v67 = (void *)swift_allocObject();
          v67[2] = v66;
          v67[3] = v56;
          v67[4] = v55;
          sub_1A73E8E74((uint64_t)v61);
          sub_1A72DF534();
          uint64_t v68 = v115;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1A75732A0();
          swift_release();
          id v69 = v119;
          swift_beginAccess();
          long long v127 = (void **)*v69;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
          sub_1A72E3500();
          uint64_t v70 = sub_1A7572570();
          uint64_t v72 = v71;
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v73 = (void **)v101;
          swift_beginAccess();
          uint64_t v74 = *v73;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v73 = v74;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v74 = sub_1A72AC148(0, v74[2] + 1, 1, v74);
            void *v101 = v74;
          }
          unint64_t v76 = v102;
          unint64_t v78 = v74[2];
          unint64_t v77 = v74[3];
          BOOL v58 = v109;
          if (v78 >= v77 >> 1)
          {
            uint64_t v74 = sub_1A72AC148((void *)(v77 > 1), v78 + 1, 1, v74);
            void *v101 = v74;
          }
          v74[2] = v78 + 1;
          uint64_t v79 = &v74[2 * v78];
          v79[4] = v70;
          v79[5] = v72;
          swift_endAccess();
          char v56 = v111;
          uint64_t v55 = v112;
          long long v127 = v111;
          uint64_t v128 = v112;
          swift_bridgeObjectRetain();
          sub_1A7572740();
          uint64_t v80 = v128;
          long long v119 = v127;
          uint64_t v81 = v68;
        }
        else
        {
          sub_1A73E8E74(0);
          uint64_t v81 = v115;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          long long v119 = v56;
          uint64_t v80 = v55;
          BOOL v58 = 0;
          unint64_t v76 = v102;
        }
        uint64_t v82 = v81[2];
        uint64_t v57 = v110;
        if (v82) {
          break;
        }
        swift_bridgeObjectRelease();
LABEL_19:
        unint64_t v52 = (unint64_t)(v57 + 1);
        sub_1A73E8EC0(v58);
        swift_bridgeObjectRelease();
        uint64_t v59 = (uint64_t)v104;
        uint64_t v53 = v113;
        if ((void *)v52 == v121) {
          goto LABEL_47;
        }
      }
      swift_bridgeObjectRetain();
      unint64_t v83 = v81 + 7;
      uint64_t v84 = v80;
      while (1)
      {
        uint64_t v85 = (void *)*(v83 - 3);
        if (v76)
        {
          swift_bridgeObjectRetain();
          id v86 = v85;
          uint64_t v87 = sub_1A7573810();
          if (!v87)
          {

LABEL_31:
            swift_bridgeObjectRelease();

            goto LABEL_32;
          }
          uint64_t v126 = v87;
          swift_unknownObjectRetain();
          swift_dynamicCast();
          uint64_t v88 = v127;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v89 = *((void *)v125 + 2);
          swift_bridgeObjectRetain();
          id v90 = v85;
          if (!v89) {
            goto LABEL_31;
          }
          id v91 = v90;
          uint64_t v92 = v125;
          unint64_t v93 = sub_1A72B252C((uint64_t)v91);
          if ((v94 & 1) == 0)
          {

            goto LABEL_31;
          }
          uint64_t v88 = (void **)*(id *)(v92[7] + 8 * v93);
        }
        long long v95 = v118;

        if (!v88) {
          goto LABEL_31;
        }
        uint64_t v96 = v120;
        sub_1A73CEE08(v88, v119, v84, v114, v95, v116, v117);
        uint64_t v120 = v96;
        if (v96)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          sub_1A73E8EC0(v109);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v98 = (uint64_t)v104;
          goto LABEL_48;
        }

        swift_bridgeObjectRelease();
LABEL_32:
        v83 += 4;
        if (!--v82)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v56 = v111;
          uint64_t v55 = v112;
          BOOL v58 = v109;
          uint64_t v57 = v110;
          goto LABEL_19;
        }
      }
    }
    uint64_t v59 = (uint64_t)v104;
LABEL_47:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v98 = v59;
LABEL_48:
    sub_1A73E0630(v98, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  }
  else
  {
    id v97 = v129[0];
    swift_bridgeObjectRelease();
    sub_1A7571850();

    swift_willThrow();
    sub_1A73E0630((uint64_t)v104, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  }
}

Swift::String __swiftcall REMTestStorePopulator.dumpPinnedLists(skipsPredefinedSmartList:)(Swift::Bool skipsPredefinedSmartList)
{
  LODWORD(v1) = skipsPredefinedSmartList;
  id v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMAccountsListDataView.Invocation()), sel_initWithFetchResultTokenToDiffAgainst_, 0);
  sub_1A72F7D10((uint64_t)v2, 0x10000000000uLL, (uint64_t)v61);
  uint64_t v46 = 0;

  long long v57 = v61[8];
  long long v58 = v62;
  long long v59 = v63;
  long long v53 = v61[4];
  long long v54 = v61[5];
  long long v55 = v61[6];
  long long v56 = v61[7];
  long long v49 = v61[0];
  long long v50 = v61[1];
  long long v51 = v61[2];
  long long v52 = v61[3];
  long long v3 = v62;
  id v4 = (void *)*((void *)&v63 + 1);
  unint64_t v5 = v63;
  sub_1A73E0138((uint64_t)&v49);
  id v6 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A73E01C0((uint64_t)&v49);
  v60[6] = v55;
  v60[7] = v56;
  v60[8] = v57;
  v60[2] = v51;
  v60[3] = v52;
  v60[4] = v53;
  v60[5] = v54;
  v60[0] = v49;
  v60[1] = v50;
  v60[9] = v3;
  v60[10] = __PAIR128__((unint64_t)v4, v5);
  uint64_t v7 = *(void *)(*((void *)&v57 + 1) + 16);
  if (!v7)
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_24;
  }
  uint64_t v43 = swift_bridgeObjectRetain();
  unint64_t v8 = (unsigned char *)(v43 + 40);
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  int v44 = v1;
  do
  {
    unint64_t v12 = (void *)*((void *)v8 - 1);
    if (*v8)
    {
      if (*v8 == 1)
      {
        id v13 = v12;
        id v14 = objc_msgSend(v13, sel_displayName);
      }
      else
      {
        id v13 = v12;
        id v14 = objc_msgSend(v13, sel_name, v43);
      }
      id v27 = v14;
      uint64_t v28 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      unint64_t v30 = v29;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1A72AC148(0, v9[2] + 1, 1, v9);
      }
      unint64_t v32 = v9[2];
      unint64_t v31 = v9[3];
      if (v32 >= v31 >> 1) {
        uint64_t v9 = sub_1A72AC148((void *)(v31 > 1), v32 + 1, 1, v9);
      }
      v9[2] = v32 + 1;
      uint64_t v10 = &v9[2 * v32];
      void v10[4] = v28;
      uint64_t v11 = v10 + 4;
LABEL_4:
      v11[1] = v30;

      goto LABEL_5;
    }
    if ((v1 & 1) == 0)
    {
      BOOL v45 = v9;
      uint64_t v15 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      unint64_t v17 = v16;
      uint64_t v47 = 46;
      unint64_t v48 = 0xE100000000000000;
      MEMORY[0x1F4188790](v15);
      v42[2] = &v47;
      id v18 = v12;
      swift_bridgeObjectRetain_n();
      id v13 = v18;
      uint64_t v19 = v46;
      uint64_t v20 = sub_1A732E7B8(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A7357E44, (uint64_t)v42, v15, v17);
      uint64_t v46 = v19;
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = (uint64_t *)(v20 + 32 * v21);
        uint64_t v23 = *v22;
        uint64_t v24 = v22[1];
        uint64_t v25 = v22[2];
        uint64_t v26 = v22[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        MEMORY[0x1AD0CA8A0](v23, v24, v25, v26);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v47 = 60;
      unint64_t v48 = 0xE100000000000000;
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      uint64_t v33 = v47;
      unint64_t v30 = v48;
      uint64_t v9 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1A72AC148(0, v9[2] + 1, 1, v9);
      }
      unint64_t v1 = v9[2];
      unint64_t v34 = v9[3];
      if (v1 >= v34 >> 1) {
        uint64_t v9 = sub_1A72AC148((void *)(v34 > 1), v1 + 1, 1, v9);
      }
      v9[2] = v1 + 1;
      uint64_t v35 = &v9[2 * v1];
      v35[4] = v33;
      uint64_t v11 = v35 + 4;
      LOBYTE(v1) = v44;
      goto LABEL_4;
    }
LABEL_5:
    v8 += 16;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
LABEL_24:
  uint64_t v47 = (uint64_t)v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A72E3500();
  uint64_t v36 = sub_1A7572570();
  uint64_t v38 = v37;
  sub_1A73E01C0((uint64_t)v60);
  swift_bridgeObjectRelease();
  uint64_t v39 = v36;
  uint64_t v40 = v38;
  result._object = v40;
  result._countAndFlagsBits = v39;
  return result;
}

uint64_t REMTestStorePopulator.dumpTemplates(formatter:)(void *a1)
{
  uint64_t v2 = v1;
  id v4 = v112;
  uint64_t v115 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v5 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(v1 + 16);
  id v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMAccountsListDataView.Invocation()), sel_initWithFetchResultTokenToDiffAgainst_, 0);
  sub_1A72F7D10((uint64_t)v8, 0x100000001uLL, (uint64_t)v112);
  uint64_t v84 = a1;
  uint64_t v74 = v7;

  long long v106 = v112[8];
  long long v107 = v113;
  long long v108 = v114;
  long long v102 = v112[4];
  long long v103 = v112[5];
  long long v104 = v112[6];
  long long v105 = v112[7];
  long long v98 = v112[0];
  long long v99 = v112[1];
  long long v100 = v112[2];
  long long v101 = v112[3];
  long long v9 = v113;
  uint64_t v11 = (void *)*((void *)&v114 + 1);
  uint64_t v10 = v114;
  sub_1A73E0138((uint64_t)&v98);
  id v12 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A73E01C0((uint64_t)&v98);
  v109[6] = v104;
  v109[7] = v105;
  v109[8] = v106;
  v109[2] = v100;
  v109[3] = v101;
  v109[4] = v102;
  v109[5] = v103;
  v109[0] = v98;
  v109[1] = v99;
  v109[9] = v9;
  uint64_t v110 = v10;
  uint64_t v111 = v11;
  sub_1A73E0138((uint64_t)&v98);
  sub_1A73E01C0((uint64_t)v109);
  uint64_t v13 = v98;
  swift_bridgeObjectRetain();
  sub_1A73E0288((uint64_t)&v98);
  *(void *)&v96[0] = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A73DEBB4((uint64_t *)v96, v2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v14 = *(void *)&v96[0];
  uint64_t v15 = *(void *)(*(void *)&v96[0] + 16);
  uint64_t v81 = (void **)(v5 + 16);
  if (v15)
  {
    *(void *)&v96[0] = v6;
    sub_1A75736F0();
    uint64_t v16 = 32;
    do
    {
      id v17 = *(id *)(v14 + v16);
      sub_1A75736C0();
      sub_1A7573700();
      sub_1A7573710();
      sub_1A75736D0();
      v16 += 16;
      --v15;
    }
    while (v15);
    unint64_t v18 = *(void *)&v96[0];
    swift_release();
    unint64_t v19 = v18;
  }
  else
  {
    swift_release();
    unint64_t v19 = MEMORY[0x1E4FBC860];
  }
  unint64_t v75 = v19;
  if (v19 >> 62) {
    goto LABEL_49;
  }
  uint64_t v73 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v73)
  {
LABEL_50:
    swift_release();
    swift_bridgeObjectRelease();
    return 0x6F636361206F6E3CLL;
  }
LABEL_8:
  unint64_t v20 = 0;
  unint64_t v21 = v19 & 0xC000000000000001;
  unint64_t v68 = v19 + 32;
  uint64_t v69 = v19 & 0xFFFFFFFFFFFFFF8;
  unint64_t v70 = v19 & 0xC000000000000001;
  while (1)
  {
    if (v21)
    {
      id v22 = (id)MEMORY[0x1AD0CB800](v20, v19);
    }
    else
    {
      if (v20 >= *(void *)(v69 + 16)) {
        __break(1u);
      }
      id v22 = *(id *)(v68 + 8 * v20);
    }
    uint64_t v23 = v22;
    BOOL v24 = __OFADD__(v20, 1);
    unint64_t v25 = v20 + 1;
    if (v24) {
      goto LABEL_47;
    }
    unint64_t v76 = v25;
    id v26 = objc_msgSend(v22, sel_templatesContext);
    if (!v26) {
      goto LABEL_41;
    }
    id v27 = v26;
    *(void *)&v96[0] = 0;
    id v28 = objc_msgSend(v26, sel_fetchTemplatesWithError_, v96);

    unint64_t v29 = *(void **)&v96[0];
    if (!v28) {
      break;
    }
    sub_1A72BEFEC(0, &qword_1E96F2CE0);
    unint64_t v30 = sub_1A7572A10();
    id v31 = v29;

    unint64_t v32 = v30;
    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_1A75738D0();
      swift_bridgeObjectRelease();
      if (v33)
      {
LABEL_18:
        unint64_t v34 = 0;
        unint64_t v79 = v32 & 0xC000000000000001;
        uint64_t v80 = v23;
        unint64_t v71 = v32 + 32;
        uint64_t v72 = v32 & 0xFFFFFFFFFFFFFF8;
        uint64_t v77 = v33;
        unint64_t v78 = v32;
        while (1)
        {
          if (v79)
          {
            id v35 = (id)MEMORY[0x1AD0CB800](v34, v32);
            BOOL v24 = __OFADD__(v34, 1);
            unint64_t v36 = v34 + 1;
            if (v24) {
              goto LABEL_46;
            }
          }
          else
          {
            if (v34 >= *(void *)(v72 + 16)) {
              goto LABEL_48;
            }
            id v35 = *(id *)(v71 + 8 * v34);
            BOOL v24 = __OFADD__(v34, 1);
            unint64_t v36 = v34 + 1;
            if (v24)
            {
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              swift_bridgeObjectRetain();
              uint64_t v67 = sub_1A75738D0();
              swift_bridgeObjectRelease();
              unint64_t v19 = v75;
              uint64_t v73 = v67;
              if (!v67) {
                goto LABEL_50;
              }
              goto LABEL_8;
            }
          }
          unint64_t v82 = v36;
          id v83 = v35;
          id v4 = (void *)v5;
          uint64_t v86 = 0;
          uint64_t v87 = 0xE000000000000000;
          id v37 = objc_msgSend(v35, sel_name);
          uint64_t v38 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          uint64_t v40 = v39;

          uint64_t v41 = swift_allocObject();
          *(void *)(v41 + 16) = MEMORY[0x1E4FBC860];
          *(void *)&v96[0] = v38;
          *((void *)&v96[0] + 1) = v40;
          uint64_t v42 = (void *)swift_allocObject();
          v42[2] = v41;
          v42[3] = 0;
          void v42[4] = 0xE000000000000000;
          sub_1A72DF534();
          swift_retain();
          sub_1A75732A0();
          swift_release();
          swift_beginAccess();
          *(void *)&v96[0] = *(void *)(v41 + 16);
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
          sub_1A72E3500();
          uint64_t v43 = sub_1A7572570();
          uint64_t v45 = v44;
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          uint64_t v46 = *v81;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v46 = sub_1A72AC148(0, v46[2] + 1, 1, v46);
          }
          unint64_t v48 = v46[2];
          unint64_t v47 = v46[3];
          if (v48 >= v47 >> 1) {
            uint64_t v46 = sub_1A72AC148((void *)(v47 > 1), v48 + 1, 1, v46);
          }
          v46[2] = v48 + 1;
          long long v49 = &v46[2 * v48];
          v49[4] = v43;
          v49[5] = v45;
          *uint64_t v81 = v46;
          swift_endAccess();
          sub_1A7572740();
          id v50 = objc_msgSend(v83, sel_sectionContext);

          if (v50)
          {
            sub_1A73D2A9C(v83, v86, v87, v2, v5, 538976288, 0xE400000000000000, v84);
            long long v51 = v80;
            unint64_t v34 = v82;
            swift_bridgeObjectRelease();

            unint64_t v32 = v78;
            if (v82 == v77) {
              goto LABEL_38;
            }
          }
          else
          {
            id v52 = objc_msgSend(v83, sel_objectID);
            unsigned __int8 v89 = -127;
            unsigned __int8 v85 = 1;
            static REMRemindersListDataView.fetchListRepresentationOfTemplate(with:store:sortingStyle:fetchSubtasks:fetchManualOrderingID:diffingAgainst:)(v52, v74, &v89, &v85, 0, 0, (uint64_t)v96);
            long long v51 = v80;

            v94[2] = v96[2];
            v94[3] = v96[3];
            uint64_t v95 = v97;
            v94[6] = v96[6];
            v94[7] = v96[7];
            v94[4] = v96[4];
            v94[5] = v96[5];
            v94[0] = v96[0];
            v94[1] = v96[1];
            uint64_t v53 = *((void *)&v96[0] + 1);
            uint64_t v54 = *(void *)(*((void *)&v96[0] + 1) + 16);
            if (v54)
            {
              uint64_t v56 = v86;
              uint64_t v55 = v87;
              swift_bridgeObjectRetain();
              long long v57 = (void *)(v53 + 56);
              do
              {
                uint64_t v59 = *(v57 - 1);
                uint64_t v60 = *v57;
                char v61 = *((unsigned char *)v57 - 16);
                id v90 = (void *)*(v57 - 3);
                long long v58 = v90;
                char v91 = v61;
                uint64_t v92 = v59;
                uint64_t v93 = v60;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v62 = v58;
                sub_1A73D2680((uint64_t *)&v90, v56, v55, v2, (uint64_t)v4, v84, 538976288, 0xE400000000000000);
                v57 += 4;
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                --v54;
              }
              while (v54);

              sub_1A73E0360((uint64_t)v94);
              uint64_t v5 = (uint64_t)v4;
              long long v51 = v80;
            }
            else
            {
              swift_bridgeObjectRetain();

              sub_1A73E0360((uint64_t)v94);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v32 = v78;
            unint64_t v34 = v82;
            if (v82 == v77)
            {
LABEL_38:

              swift_bridgeObjectRelease();
              id v4 = v112;
              goto LABEL_42;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v33 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v33) {
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease();
LABEL_41:

LABEL_42:
    unint64_t v19 = v75;
    unint64_t v20 = v76;
    unint64_t v21 = v70;
    if (v76 == v73)
    {
      swift_bridgeObjectRelease();
      swift_beginAccess();
      *(void *)&v94[0] = *(void *)(v5 + 16);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
      sub_1A72E3500();
      uint64_t v63 = sub_1A7572570();
      swift_release();
      swift_bridgeObjectRelease();
      return v63;
    }
  }
  id v65 = *(id *)&v96[0];
  swift_bridgeObjectRelease();
  uint64_t v66 = (void *)sub_1A7571850();

  swift_willThrow();
  swift_release();

  *id v4 = 0x203A726F727245;
  v4[1] = 0xE700000000000000;
  swift_getErrorValue();
  Error.rem_errorDescription.getter(v88);
  sub_1A7572740();
  swift_bridgeObjectRelease();

  return *v4;
}

void sub_1A73D2680(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  uint64_t v12 = *a1;
  uint64_t v13 = a1[3];
  uint64_t v14 = *(void **)(a4 + 16);
  id v15 = objc_msgSend(self, sel_fetchOptionsIncludingDueDateDeltaAlerts);
  id v51 = 0;
  id v16 = objc_msgSend(v14, sel_fetchReminderWithObjectID_fetchOptions_error_, v12, v15, &v51);

  id v17 = v51;
  if (v16)
  {
    uint64_t v44 = v13;
    uint64_t v45 = a5;
    uint64_t v18 = a6[3];
    uint64_t v19 = a6[4];
    uint64_t v46 = a6;
    __swift_project_boxed_opaque_existential_1(a6, v18);
    unint64_t v20 = *(uint64_t (**)(id, uint64_t, uint64_t))(v19 + 40);
    id v21 = v17;
    id v22 = (void *)v20(v16, v18, v19);
    uint64_t v24 = v23;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = MEMORY[0x1E4FBC860];
    id v51 = v22;
    uint64_t v52 = v24;
    id v26 = (void *)swift_allocObject();
    v26[2] = v25;
    v26[3] = a2;
    v26[4] = a3;
    sub_1A72DF534();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1A75732A0();
    swift_release();
    swift_beginAccess();
    id v51 = *(id *)(v25 + 16);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    sub_1A72E3500();
    id v27 = (void **)(a5 + 16);
    uint64_t v28 = sub_1A7572570();
    uint64_t v43 = v29;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v30 = *v27;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *id v27 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v30 = sub_1A72AC148(0, v30[2] + 1, 1, v30);
      *id v27 = v30;
    }
    unint64_t v33 = v30[2];
    unint64_t v32 = v30[3];
    if (v33 >= v32 >> 1)
    {
      unint64_t v30 = sub_1A72AC148((void *)(v32 > 1), v33 + 1, 1, v30);
      *id v27 = v30;
    }
    v30[2] = v33 + 1;
    unint64_t v34 = &v30[2 * v33];
    v34[4] = v28;
    v34[5] = v43;
    swift_endAccess();
    if (v44 && (uint64_t v35 = *(void *)(v44 + 16)) != 0)
    {
      unint64_t v36 = (void *)(swift_bridgeObjectRetain() + 56);
      while (1)
      {
        uint64_t v38 = *(v36 - 1);
        uint64_t v39 = *v36;
        char v40 = *((unsigned char *)v36 - 16);
        id v51 = (id)*(v36 - 3);
        id v37 = v51;
        LOBYTE(v52) = v40;
        uint64_t v53 = v38;
        uint64_t v54 = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v41 = v37;
        sub_1A7572740();
        sub_1A73D2680(&v51, a2, a3, a4, v45, v46, a7, a8);
        if (v50) {
          break;
        }
        v36 += 4;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        if (!--v35)
        {

          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
  else
  {
    id v42 = v51;
    sub_1A7571850();

    swift_willThrow();
  }
}

void sub_1A73D2A9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v75 = a7;
  uint64_t v14 = *(void *)(a4 + 16);
  id v15 = objc_msgSend(a1, sel_objectID);
  __int16 v66 = 385;
  char v67 = 0;
  static REMRemindersListDataView.fetchListRepresentationOfTemplate_Sections(store:templateObjectID:configuration:diffingAgainst:)(v14, v15, (unsigned __int8 *)&v66, 0, (uint64_t)v68);
  if (v8)
  {

    return;
  }
  uint64_t v53 = a3;
  uint64_t v54 = a2;
  uint64_t v56 = a4;
  uint64_t v57 = a5;
  uint64_t v58 = a6;

  v64[2] = v68[2];
  v64[3] = v69;
  v64[4] = v70;
  v64[5] = v71;
  v64[6] = v72;
  v64[7] = v73;
  uint64_t v65 = v74;
  v64[0] = v68[0];
  v64[1] = v68[1];
  uint64_t v16 = *(void *)&v68[0];
  long long v17 = v69;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v18 = (id)v17;
  sub_1A7315C10(*((void **)&v17 + 1));
  sub_1A73E8F6C((uint64_t)v64);

  sub_1A7315D30(*((void **)&v17 + 1));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v16;
  uint64_t v48 = *(void *)(v16 + 16);
  if (!v48)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v20 = 0;
  unint64_t v47 = (void **)(a5 + 16);
  uint64_t v50 = v16 + 32;
  uint64_t v51 = v16;
  uint64_t v21 = a2;
  while (v20 < *(void *)(v19 + 16))
  {
    id v22 = (uint64_t *)(v50 + 48 * v20);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v25 = v22[2];
    uint64_t v26 = v22[5];
    unint64_t v52 = v20;
    uint64_t v55 = v26;
    if (*v22)
    {
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = MEMORY[0x1E4FBC860];
      uint64_t v60 = (void *)v24;
      uint64_t v61 = v25;
      uint64_t v28 = (void *)swift_allocObject();
      v28[2] = v27;
      v28[3] = v21;
      v28[4] = v53;
      long long v49 = (void *)v23;
      sub_1A73E8E74(v23);
      sub_1A72DF534();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1A75732A0();
      swift_release();
      swift_beginAccess();
      uint64_t v60 = *(void **)(v27 + 16);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
      sub_1A72E3500();
      uint64_t v29 = sub_1A7572570();
      uint64_t v31 = v30;
      swift_release();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      unint64_t v32 = *v47;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *unint64_t v47 = v32;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v32 = sub_1A72AC148(0, v32[2] + 1, 1, v32);
        *unint64_t v47 = v32;
      }
      unint64_t v35 = v32[2];
      unint64_t v34 = v32[3];
      uint64_t v26 = v55;
      unint64_t v36 = v49;
      if (v35 >= v34 >> 1)
      {
        unint64_t v32 = sub_1A72AC148((void *)(v34 > 1), v35 + 1, 1, v32);
        *unint64_t v47 = v32;
      }
      v32[2] = v35 + 1;
      id v37 = &v32[2 * v35];
      v37[4] = v29;
      v37[5] = v31;
      swift_endAccess();
      uint64_t v60 = (void *)v54;
      uint64_t v61 = v53;
      swift_bridgeObjectRetain();
      sub_1A7572740();
      uint64_t v39 = (uint64_t)v60;
      uint64_t v38 = v61;
      uint64_t v40 = *(void *)(v55 + 16);
      if (!v40) {
        goto LABEL_16;
      }
LABEL_12:
      swift_bridgeObjectRetain();
      id v41 = (void *)(v26 + 56);
      do
      {
        uint64_t v43 = *(v41 - 1);
        uint64_t v44 = *v41;
        char v45 = *((unsigned char *)v41 - 16);
        uint64_t v60 = (void *)*(v41 - 3);
        id v42 = v60;
        LOBYTE(v61) = v45;
        uint64_t v62 = v43;
        uint64_t v63 = v44;
        swift_bridgeObjectRetain();
        id v46 = v42;
        sub_1A73D2680((uint64_t *)&v60, v39, v38, v56, v57, a8, v58, v75);
        v41 += 4;
        swift_bridgeObjectRelease();

        --v40;
      }
      while (v40);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1A73E8E74(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = v21;
    uint64_t v38 = v53;
    unint64_t v36 = 0;
    uint64_t v40 = *(void *)(v26 + 16);
    if (v40) {
      goto LABEL_12;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v20 = v52 + 1;
    sub_1A73E8EC0(v36);
    swift_bridgeObjectRelease();
    uint64_t v21 = v54;
    uint64_t v19 = v51;
    if (v52 + 1 == v48) {
      goto LABEL_17;
    }
  }
  __break(1u);
}

uint64_t sub_1A73D2FE0()
{
  uint64_t v0 = sub_1A7571B60();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  id v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_1E96F2CC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E96F2CC0);
  sub_1A7571B50();
  sub_1A7571AA0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

void sub_1A73D30D0(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, id *a6, void *a7)
{
  uint64_t v146 = a7;
  uint64_t v145 = a6;
  char v133 = a5;
  uint64_t v124 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v129 = (char *)v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v132 = (uint64_t)v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
  MEMORY[0x1F4188790](v137);
  uint64_t v141 = (void *)((char *)v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for REMTestStorePopulator.TestReminder(0);
  uint64_t v128 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  long long v154 = (void *)((char *)v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  unint64_t v140 = (void *)((char *)v122 - v18);
  uint64_t v139 = type metadata accessor for REMTestStorePopulator.TestList.ListChild(0);
  uint64_t v142 = *(void *)(v139 - 8);
  MEMORY[0x1F4188790](v139);
  uint64_t v144 = (char *)v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_1A7571B60();
  uint64_t v131 = *(void *)(v138 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v138);
  uint64_t v134 = (uint64_t)v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  long long v127 = (char *)v122 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v123 = (char *)v122 - v24;
  uint64_t v26 = *(void *)a2;
  uint64_t v25 = *(void *)(a2 + 8);
  uint64_t v27 = *(void (***)(void, uint64_t))(a2 + 16);
  uint64_t v28 = *(void *)(a2 + 24);
  uint64_t v29 = *(void *)(a2 + 40);
  uint64_t v30 = *(void *)(a2 + 56);
  uint64_t v152 = *(void *)(a2 + 48);
  uint64_t v31 = *(void **)(a2 + 64);
  long long v149 = v27;
  id v150 = v31;
  LODWORD(v153) = *(unsigned __int8 *)(a2 + 72);
  uint64_t v143 = *(void *)(a2 + 80);
  uint64_t v136 = *(void *)(a2 + 88);
  int v130 = *(unsigned __int8 *)(a2 + 96);
  unsigned int v125 = *(unsigned __int8 *)(a2 + 97);
  v122[1] = *(void *)(a2 + 104);
  uint64_t v126 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  id v151 = a1;
  id v32 = objc_msgSend(a1, sel_objectID);
  if (v32)
  {
    uint64_t v33 = (uint64_t)v32;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v155 = *a4;
    *a4 = 0x8000000000000000;
    sub_1A72D70AC(v33, v26, v25, isUniquelyReferenced_nonNull_native);
    *a4 = v155;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v35 = v140;
    unint64_t v36 = v141;
    if (v29)
    {
LABEL_3:
      id v37 = objc_allocWithZone(MEMORY[0x1E4F94AC0]);
      swift_bridgeObjectRetain();
      uint64_t v38 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      id v39 = objc_msgSend(v37, sel_initWithCKSymbolicColorName_hexString_, v38, 0);
      id v40 = v151;
      goto LABEL_7;
    }
  }
  else
  {
    id v41 = (void *)sub_1A72D6294(v26, v25);
    swift_bridgeObjectRelease();

    unint64_t v35 = v140;
    unint64_t v36 = v141;
    if (v29) {
      goto LABEL_3;
    }
  }
  id v40 = v151;
  uint64_t v42 = (uint64_t)v144;
  if (!v28) {
    goto LABEL_8;
  }
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  id v43 = objc_allocWithZone(MEMORY[0x1E4F94AC0]);
  swift_bridgeObjectRetain();
  uint64_t v44 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  uint64_t v38 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v39 = objc_msgSend(v43, sel_initWithCKSymbolicColorName_hexString_, v44, v38);

  unint64_t v35 = v140;
LABEL_7:

  objc_msgSend(v40, sel_setColor_, v39);
  uint64_t v42 = (uint64_t)v144;
LABEL_8:
  if (v30) {
    objc_msgSend(v40, sel_setSortingStyle_, v30);
  }
  id v45 = objc_msgSend(v40, sel_appearanceContext);
  objc_msgSend(v45, sel_setBadge_, v152);

  id v46 = v135;
  if ((v153 & 1) == 0) {
    objc_msgSend(v40, sel_setSharingStatus_, v150);
  }
  unint64_t v47 = *(void (***)(void, uint64_t))(v136 + 16);
  if (v47)
  {
    uint64_t v48 = swift_bridgeObjectRetain() + 48;
    do
    {
      long long v149 = v47;
      uint64_t v54 = *(void *)(v48 - 8);
      uint64_t v55 = *(void *)(v48 + 16);
      int v56 = *(unsigned __int8 *)(v48 + 32);
      id v150 = *(id *)(v48 + 40);
      uint64_t v152 = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LODWORD(v153) = v56;
      sub_1A7362B58();
      id v57 = objc_msgSend(v40, sel_accountCapabilities);
      unsigned int v58 = objc_msgSend(v57, sel_supportsListSharees);

      if (!v58
        || (id v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94B78]), sel_initWithListChangeItem_, v40)) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A7362B70();
        sub_1A73E9094();
        swift_allocError();
        *uint64_t v64 = 4;
        swift_willThrow();
        return;
      }
      uint64_t v60 = v59;
      uint64_t v61 = sub_1A75725E0();
      uint64_t v62 = sub_1A75725E0();
      uint64_t v147 = v55;
      long long v148 = (uint64_t (**)(void, void, void))v62;
      uint64_t v63 = (void *)v61;
      if (v153)
      {
        uint64_t v155 = 0x3A6F746C69616DLL;
        unint64_t v49 = 0xE700000000000000;
      }
      else
      {
        uint64_t v155 = 980182388;
        unint64_t v49 = 0xE400000000000000;
      }
      unint64_t v156 = v49;
      sub_1A7572740();
      uint64_t v50 = v149;
      uint64_t v51 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      unint64_t v52 = v148;
      id v53 = objc_msgSend(v60, sel_addShareeWithDisplayName_firstName_lastName_address_status_accessLevel_, 0, v61, v148, v51, v150, 2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1A7362B70();
      v48 += 64;
      unint64_t v47 = (void (**)(void, uint64_t))((char *)v50 - 1);
      id v40 = v151;
    }
    while (v47);
    swift_bridgeObjectRelease();
    id v46 = v135;
    unint64_t v35 = v140;
    unint64_t v36 = v141;
    uint64_t v42 = (uint64_t)v144;
  }
  id v65 = objc_msgSend(v40, sel_groceryContextChangeItem);
  if (v65)
  {
    __int16 v66 = v65;
    objc_msgSend(v65, sel_setShouldCategorizeGroceryItems_, v125);
    if (v126) {
      char v67 = (void *)sub_1A75725E0();
    }
    else {
      char v67 = 0;
    }
    objc_msgSend(v66, sel_setGroceryLocaleID_, v67);
  }
  if (!v130) {
    goto LABEL_30;
  }
  if (qword_1E96F0800 != -1) {
    goto LABEL_65;
  }
  while (1)
  {
    uint64_t v68 = v138;
    __swift_project_value_buffer(v138, (uint64_t)qword_1E96F2CC0);
    long long v69 = v123;
    sub_1A7571AA0();
    long long v70 = (void *)sub_1A7571AB0();
    (*(void (**)(char *, uint64_t))(v131 + 8))(v69, v68);
    objc_msgSend(v40, sel_setPinnedDate_, v70);

LABEL_30:
    uint64_t v71 = v143;
    uint64_t v72 = *(void *)(v143 + 16);
    if (!v72) {
      break;
    }
    uint64_t v152 = v143 + ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80));
    long long v148 = (uint64_t (**)(void, void, void))(v131 + 48);
    id v135 = (void (**)(char *, uint64_t, uint64_t))(v131 + 32);
    long long v149 = (void (**)(void, uint64_t))(v131 + 8);
    swift_bridgeObjectRetain();
    unint64_t v73 = 0;
    uint64_t v136 = v72;
    while (v73 < *(void *)(v71 + 16))
    {
      sub_1A73E0474(v152 + *(void *)(v142 + 72) * v73, v42, type metadata accessor for REMTestStorePopulator.TestList.ListChild);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A73E05C8(v42, (uint64_t)v36, type metadata accessor for REMTestStorePopulator.TestListSection);
        id v78 = objc_msgSend(v40, sel_sectionsContextChangeItem);
        if (!v78)
        {
          swift_bridgeObjectRelease();
          sub_1A73E9094();
          swift_allocError();
          void *v121 = 19;
          swift_willThrow();
          sub_1A73E0630((uint64_t)v36, type metadata accessor for REMTestStorePopulator.TestListSection);
          return;
        }
        unint64_t v79 = v78;
        id v80 = objc_msgSend(v40, sel_saveRequest);
        swift_bridgeObjectRetain();
        uint64_t v81 = (void *)sub_1A75725E0();
        swift_bridgeObjectRelease();
        id v82 = objc_msgSend(v80, sel_addListSectionWithDisplayName_toListSectionContextChangeItem_, v81, v79);

        if (v36[3])
        {
          swift_bridgeObjectRetain();
          id v83 = (void *)sub_1A75725E0();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v83 = 0;
        }
        uint64_t v87 = v138;
        objc_msgSend(v82, sel_setCanonicalName_, v83);

        uint64_t v88 = v132;
        sub_1A72BF1E8((uint64_t)v36 + *(int *)(v137 + 24), v132, &qword_1EB704C60);
        int v89 = (*v148)(v88, 1, v87);
        id v150 = v79;
        if (v89 == 1)
        {
          sub_1A72CB560(v88, &qword_1EB704C60);
        }
        else
        {
          id v90 = v127;
          (*v135)(v127, v88, v87);
          id v91 = v82;
          uint64_t v92 = (void *)sub_1A7571AB0();
          objc_msgSend(v91, sel_setCreationDate_, v92);

          (*v149)(v90, v87);
        }
        uint64_t v94 = *v36;
        uint64_t v93 = v36[1];
        swift_bridgeObjectRetain();
        id v95 = objc_msgSend(v82, sel_objectID);
        id v153 = v82;
        if (v95)
        {
          uint64_t v96 = (uint64_t)v95;
          uint64_t v97 = v133;
          char v98 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v155 = *v97;
          *uint64_t v97 = 0x8000000000000000;
          sub_1A72D70AC(v96, v94, v93, v98);
          *uint64_t v97 = v155;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          long long v99 = (void *)sub_1A72D6294(v94, v93);
          swift_bridgeObjectRelease();
        }
        uint64_t v100 = MEMORY[0x1E4FBC870];
        uint64_t v155 = MEMORY[0x1E4FBC870];
        uint64_t v101 = *(uint64_t *)((char *)v36 + *(int *)(v137 + 28));
        uint64_t v102 = *(void *)(v101 + 16);
        long long v103 = v154;
        if (v102)
        {
          uint64_t v104 = v128;
          uint64_t v105 = v101 + ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80));
          uint64_t v147 = *(uint64_t *)((char *)v36 + *(int *)(v137 + 28));
          swift_bridgeObjectRetain();
          uint64_t v106 = *(void *)(v104 + 72);
          while (1)
          {
            sub_1A73E0474(v105, (uint64_t)v103, type metadata accessor for REMTestStorePopulator.TestReminder);
            id v107 = v151;
            id v108 = objc_msgSend(v151, sel_saveRequest);
            swift_bridgeObjectRetain();
            uint64_t v109 = v46;
            uint64_t v110 = (void *)sub_1A75725E0();
            swift_bridgeObjectRelease();
            id v111 = v107;
            long long v103 = v154;
            id v112 = objc_msgSend(v108, sel_addReminderWithTitle_toListChangeItem_, v110, v111);

            sub_1A73D48FC(v112, v103, v145, v146);
            id v46 = v109;
            if (v109) {
              break;
            }
            sub_1A72E03B4(&v157, objc_msgSend(v112, sel_objectID));

            sub_1A73E0630((uint64_t)v103, type metadata accessor for REMTestStorePopulator.TestReminder);
            v105 += v106;
            if (!--v102)
            {
              swift_bridgeObjectRelease();
              uint64_t v113 = v155;
              uint64_t v100 = MEMORY[0x1E4FBC870];
              goto LABEL_55;
            }
          }

          sub_1A73E0630((uint64_t)v103, type metadata accessor for REMTestStorePopulator.TestReminder);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v119 = type metadata accessor for REMTestStorePopulator.TestListSection;
          uint64_t v120 = (uint64_t)v141;
          goto LABEL_58;
        }
        uint64_t v113 = MEMORY[0x1E4FBC870];
LABEL_55:
        id v114 = objc_msgSend(v153, sel_objectID);
        sub_1A7571B30();
        sub_1A73258BC(v100, v113);
        uint64_t v116 = v115;
        id v40 = v151;
        if (v114)
        {
          id v117 = objc_msgSend(v114, sel_uuid);
          uint64_t v75 = (uint64_t)v129;
          sub_1A7571BB0();

          uint64_t v118 = sub_1A7571BC0();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v75, 0, 1, v118);
        }
        else
        {
          uint64_t v74 = sub_1A7571BC0();
          uint64_t v75 = (uint64_t)v129;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v129, 1, 1, v74);
        }
        uint64_t v76 = v134;
        id v77 = v150;
        sub_1A73CA3E4(v116, v75, v134);
        swift_bridgeObjectRelease();
        sub_1A72CB560(v75, &qword_1EB704C40);

        swift_bridgeObjectRelease();
        (*v149)(v76, v138);
        unint64_t v36 = v141;
        sub_1A73E0630((uint64_t)v141, type metadata accessor for REMTestStorePopulator.TestListSection);
        unint64_t v35 = v140;
        uint64_t v72 = v136;
      }
      else
      {
        sub_1A73E05C8(v42, (uint64_t)v35, type metadata accessor for REMTestStorePopulator.TestReminder);
        id v84 = objc_msgSend(v40, sel_saveRequest);
        swift_bridgeObjectRetain();
        unsigned __int8 v85 = (void *)sub_1A75725E0();
        swift_bridgeObjectRelease();
        id v86 = objc_msgSend(v84, sel_addReminderWithTitle_toListChangeItem_, v85, v40);

        sub_1A73D48FC(v86, v35, v145, v146);
        if (v46)
        {

          long long v119 = type metadata accessor for REMTestStorePopulator.TestReminder;
          uint64_t v120 = (uint64_t)v35;
LABEL_58:
          sub_1A73E0630(v120, v119);
LABEL_59:
          swift_bridgeObjectRelease();
          return;
        }
        sub_1A73E0630((uint64_t)v35, type metadata accessor for REMTestStorePopulator.TestReminder);
      }
      ++v73;
      uint64_t v71 = v143;
      uint64_t v42 = (uint64_t)v144;
      if (v73 == v72) {
        goto LABEL_59;
      }
    }
    __break(1u);
LABEL_65:
    swift_once();
  }
}

void sub_1A73D4214(id a1@<X1>, uint64_t *a2@<X0>, void *a3@<X8>)
{
  id v4 = a1;
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = *a2;
  *(void *)&v41[0] = 0;
  id v7 = objc_msgSend(a1, sel_fetchTemplateWithObjectID_error_, v6, v41);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = *(id *)&v41[0];
    id v10 = objc_msgSend(v8, sel_objectID);
    unsigned __int8 v38 = -127;
    unsigned __int8 v37 = 1;
    static REMRemindersListDataView.fetchListRepresentationOfTemplate(with:store:sortingStyle:fetchSubtasks:fetchManualOrderingID:diffingAgainst:)(v10, (uint64_t)v4, &v38, &v37, 0, 0, (uint64_t)v41);
    if (v3)
    {
    }
    else
    {

      v39[7] = v41[7];
      uint64_t v40 = v42;
      v39[0] = v41[0];
      v39[1] = v41[1];
      v39[2] = v41[2];
      v39[3] = v41[3];
      v39[5] = v41[5];
      v39[6] = v41[6];
      v39[4] = v41[4];
      uint64_t v14 = *(void **)&v41[0];
      uint64_t v15 = MEMORY[0x1E4FBC870];
      uint64_t v36 = MEMORY[0x1E4FBC870];
      uint64_t v16 = *(void *)(*((void *)&v41[0] + 1) + 16);
      if (v16)
      {
        uint64_t v31 = *(void **)&v39[0];
        id v32 = v4;
        uint64_t v33 = v8;
        unint64_t v34 = a3;
        uint64_t v17 = *((void *)&v39[0] + 1) + 32;
        swift_bridgeObjectRetain_n();
        for (uint64_t i = 0; i != v16; ++i)
        {
          uint64_t v19 = v17 + 32 * i;
          uint64_t v20 = *(void **)v19;
          uint64_t v21 = *(void *)(v19 + 24);
          swift_bridgeObjectRetain();
          id v22 = v20;
          sub_1A72E03B4(&v35, v22);

          if (v21) {
            uint64_t v23 = v21;
          }
          else {
            uint64_t v23 = MEMORY[0x1E4FBC860];
          }
          uint64_t v24 = *(void *)(v23 + 16);
          if (v24)
          {
            uint64_t v25 = (void **)(v23 + 32);
            swift_bridgeObjectRetain();
            do
            {
              uint64_t v26 = *v25;
              v25 += 4;
              sub_1A72E03B4(&v35, v26);

              --v24;
            }
            while (v24);
            swift_bridgeObjectRelease();
          }

          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease_n();
        uint64_t v15 = v36;
        a3 = v34;
        id v4 = v32;
        uint64_t v8 = v33;
        uint64_t v14 = v31;
      }
      id v27 = v4;
      sub_1A73DD680(MEMORY[0x1E4FBC868], v15, v27);
      uint64_t v29 = v28;
      swift_bridgeObjectRelease();

      id v30 = v14;
      sub_1A73E0360((uint64_t)v39);
      *a3 = v8;
      a3[1] = v30;
      a3[2] = v29;
    }
  }
  else
  {
    id v11 = *(id *)&v41[0];
    uint64_t v12 = (void *)sub_1A7571850();

    swift_willThrow();
    sub_1A73E9094();
    swift_allocError();
    *uint64_t v13 = 10;
    swift_willThrow();
  }
}

void sub_1A73D4524(id *a1, uint64_t *a2, void *a3)
{
  v18[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = *a2;
  id v6 = objc_msgSend(self, sel_fetchOptionsIncludingDueDateDeltaAlerts);
  v18[0] = 0;
  id v7 = objc_msgSend(a3, sel_fetchReminderWithObjectID_fetchOptions_error_, v5, v6, v18);

  if (v7)
  {
    id v8 = v18[0];
    id v9 = objc_msgSend(v7, sel_titleAsString);
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v13 = v12;

      id v14 = v7;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18[0] = *a1;
      *a1 = (id)0x8000000000000000;
      sub_1A72D722C((uint64_t)v14, v11, v13, isUniquelyReferenced_nonNull_native);
      *a1 = v18[0];

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A73E9094();
      swift_allocError();
      void *v17 = 18;
      swift_willThrow();
    }
  }
  else
  {
    id v16 = v18[0];
    sub_1A7571850();

    swift_willThrow();
  }
}

void sub_1A73D46DC(void *a1, uint64_t *a2, id a3)
{
  v22[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = *a2;
  v22[0] = 0;
  id v6 = objc_msgSend(a3, sel_fetchTemplateWithObjectID_error_, v5, v22);
  if (v6)
  {
    id v7 = v6;
    id v8 = v22[0];
    id v9 = objc_msgSend(v7, sel_sectionContext);
    if (v9)
    {
      id v10 = v9;
      v22[0] = 0;
      id v11 = objc_msgSend(a3, sel_fetchTemplateSectionsForTemplateSectionContext_error_, v9, v22);
      id v12 = v22[0];
      if (v11)
      {
        uint64_t v13 = v11;
        sub_1A72BEFEC(0, &qword_1E96F2DC8);
        unint64_t v14 = sub_1A7572A10();
        id v15 = v12;

        sub_1A73CA11C(v14, a1);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return;
      }
      id v19 = v22[0];
      uint64_t v20 = (void *)sub_1A7571850();

      swift_willThrow();
    }
    sub_1A73E9094();
    swift_allocError();
    *uint64_t v21 = 11;
    swift_willThrow();
  }
  else
  {
    id v16 = v22[0];
    uint64_t v17 = (void *)sub_1A7571850();

    swift_willThrow();
    sub_1A73E9094();
    swift_allocError();
    *uint64_t v18 = 10;
    swift_willThrow();
  }
}

void sub_1A73D48FC(id a1, uint64_t *a2, id *a3, void *a4)
{
  uint64_t v264 = a3;
  uint64_t v293 = *MEMORY[0x1E4F143B8];
  uint64_t v289 = type metadata accessor for REMTestStorePopulator.TestReminder(0);
  uint64_t v265 = *(void *)(v289 - 8);
  MEMORY[0x1F4188790](v289);
  v257 = (char *)&v250 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v267 = type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert(0);
  uint64_t v253 = *(void *)(v267 - 8);
  MEMORY[0x1F4188790](v267);
  uint64_t v268 = (uint64_t)&v250 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v278 = type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag(0);
  uint64_t v269 = *(void *)(v278 - 8);
  MEMORY[0x1F4188790](v278);
  uint64_t v287 = (void (**)(char *, uint64_t, uint64_t))((char *)&v250 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v276 = type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment(0);
  unint64_t v272 = *(void *)(v276 - 8);
  MEMORY[0x1F4188790](v276);
  v270 = (char *)&v250 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2DA0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v277 = (char *)&v250 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v285 = type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment(0);
  uint64_t v271 = *(void *)(v285 - 8);
  MEMORY[0x1F4188790](v285);
  uint64_t v291 = (uint64_t)&v250 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v288 = type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment(0);
  uint64_t v273 = *(void **)(v288 - 8);
  MEMORY[0x1F4188790](v288);
  int64_t v284 = (char *)&v250 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v263 = (uint64_t)&v250 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v279 = (uint64_t)&v250 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v250 - v20;
  uint64_t v283 = sub_1A7571B60();
  uint64_t v281 = *(void *)(v283 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v283);
  unint64_t v261 = (char *)&v250 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v275 = (char *)&v250 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v274 = (char *)&v250 - v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
  uint64_t v28 = MEMORY[0x1F4188790](v27 - 8);
  uint64_t v256 = (uint64_t)&v250 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v250 - v30;
  uint64_t v266 = sub_1A75717A0();
  uint64_t v32 = *(void *)(v266 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v266);
  v251 = (char *)&v250 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v36 = (char *)&v250 - v35;
  uint64_t v37 = a2[3];
  uint64_t v286 = a2;
  if (v37)
  {
    unsigned __int8 v38 = (void *)sub_1A75725E0();
    objc_msgSend(a1, sel_setNotesAsString_, v38);

    a2 = v286;
  }
  id v39 = (int *)v289;
  sub_1A72BF1E8((uint64_t)a2 + *(int *)(v289 + 24), (uint64_t)v31, &qword_1EB6FFDE0);
  uint64_t v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  uint64_t v41 = v266;
  uint64_t v255 = v32 + 48;
  uint64_t v254 = v40;
  unsigned int v42 = v40((uint64_t)v31, 1, v266);
  id v290 = a1;
  uint64_t v252 = v32;
  if (v42 == 1)
  {
    sub_1A72CB560((uint64_t)v31, &qword_1EB6FFDE0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v36, v31, v41);
    uint64_t v43 = a4;
    int v44 = *((unsigned __int8 *)a2 + v39[7]);
    id v45 = (void *)sub_1A75716B0();
    id v46 = &selRef_setDueDateComponents_;
    BOOL v47 = v44 == 0;
    a4 = v43;
    a1 = v290;
    if (v47) {
      id v46 = &selRef_setDueDateComponentsWithAlarmsIfNeeded_;
    }
    objc_msgSend(v290, *v46, v45);

    a2 = v286;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v41);
  }
  objc_msgSend(a1, sel_setCompleted_, *((unsigned __int8 *)a2 + v39[8]));
  sub_1A72BF1E8((uint64_t)a2 + v39[9], (uint64_t)v21, &qword_1EB704C60);
  uint64_t v48 = v281;
  uint64_t v49 = v281 + 48;
  uint64_t v50 = v283;
  uint64_t v282 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v281 + 48);
  if (v282(v21, 1, v283) == 1)
  {
    sub_1A72CB560((uint64_t)v21, &qword_1EB704C60);
  }
  else
  {
    uint64_t v51 = v274;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v274, v21, v50);
    unint64_t v52 = (void *)sub_1A7571AB0();
    objc_msgSend(a1, sel_setCompletionDate_, v52);

    a2 = v286;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v50);
  }
  uint64_t v53 = v279;
  uint64_t v54 = (int *)v289;
  sub_1A72BF1E8((uint64_t)a2 + *(int *)(v289 + 40), v279, &qword_1EB704C60);
  if (v282((char *)v53, 1, v50) == 1)
  {
    sub_1A72CB560(v53, &qword_1EB704C60);
  }
  else
  {
    uint64_t v55 = v281;
    int v56 = v275;
    (*(void (**)(char *, uint64_t, uint64_t))(v281 + 32))(v275, v53, v50);
    id v57 = (void *)sub_1A7571AB0();
    objc_msgSend(a1, sel_setCreationDate_, v57);

    a2 = v286;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v50);
  }
  uint64_t v58 = v291;
  id v59 = v284;
  if (*((unsigned char *)a2 + v54[11]) == 1)
  {
    id v60 = objc_msgSend(a1, sel_flaggedContext);
    if (!v60)
    {
      sub_1A73E9094();
      swift_allocError();
      uint64_t v112 = 7;
LABEL_146:
      *id v111 = v112;
      swift_willThrow();
      return;
    }
    uint64_t v61 = v60;
    objc_msgSend(v60, sel_setFlagged_, 1);
  }
  if (*(uint64_t *)((char *)a2 + v54[12])) {
    objc_msgSend(a1, sel_setPriority_, REMReminderDefaultPriorityForPriorityLevel());
  }
  uint64_t v262 = v49;
  if (*(uint64_t *)((char *)a2 + v54[13])) {
    objc_msgSend(a1, sel_setContactHandles_);
  }
  uint64_t v62 = (uint64_t *)((char *)a2 + v54[14]);
  uint64_t v63 = v62[1];
  if (!v63) {
    goto LABEL_33;
  }
  uint64_t v64 = *v62;
  uint64_t v66 = v62[2];
  id v65 = (char *)v62[3];
  id v67 = objc_msgSend(a1, sel_assignmentContext);
  if (!v67)
  {
LABEL_145:
    sub_1A73E9094();
    swift_allocError();
    uint64_t v112 = 6;
    goto LABEL_146;
  }
  uint64_t v68 = v67;
  id v69 = objc_msgSend(a1, sel_listChangeItem);
  if (!v69) {
    goto LABEL_144;
  }
  long long v70 = v69;
  uint64_t v279 = v66;
  int64_t v284 = v65;
  id v71 = objc_msgSend(v69, sel_accountCapabilities);
  unsigned int v72 = objc_msgSend(v71, sel_supportsListSharees);

  if (!v72) {
    goto LABEL_142;
  }
  id v73 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94B78]), sel_initWithListChangeItem_, v70);
  if (!v73) {
    goto LABEL_142;
  }
  uint64_t v74 = v73;
  id v75 = objc_msgSend(v73, sel_sharees);
  uint64_t v275 = (char *)sub_1A72BEFEC(0, &qword_1E96F2DB0);
  unint64_t v76 = sub_1A7572A10();

  swift_bridgeObjectRetain();
  uint64_t v77 = v280;
  id v78 = sub_1A73DD9A0(v76, v64, v63);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v78)
  {
LABEL_144:

    goto LABEL_145;
  }
  id v79 = objc_msgSend(v290, sel_listChangeItem);
  if (!v79)
  {
LABEL_134:
    long long v70 = v68;
LABEL_143:

    uint64_t v68 = v70;
    goto LABEL_144;
  }
  long long v70 = v79;
  id v80 = objc_msgSend(v79, sel_accountCapabilities);
  unsigned int v81 = objc_msgSend(v80, sel_supportsListSharees);

  if (!v81 || (id v82 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94B78]), sel_initWithListChangeItem_, v70)) == 0)
  {

LABEL_142:
    id v78 = v68;
    goto LABEL_143;
  }
  id v83 = v82;
  id v84 = objc_msgSend(v82, sel_sharees);
  unint64_t v85 = sub_1A7572A10();

  uint64_t v86 = (uint64_t)v284;
  swift_bridgeObjectRetain();
  uint64_t v87 = sub_1A73DD9A0(v85, v279, v86);
  uint64_t v280 = v77;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v87) {
    goto LABEL_134;
  }
  id v88 = objc_msgSend(v68, sel_addAssignmentWithAssignee_originator_status_, v78, v87, 1);

  uint64_t v54 = (int *)v289;
  a1 = v290;
  a2 = v286;
  uint64_t v58 = v291;
LABEL_33:
  int v89 = *(char **)((char *)a2 + v54[15]);
  uint64_t v90 = *((void *)v89 + 2);
  v250 = a4;
  if (v90)
  {
    uint64_t v91 = (uint64_t)&v89[(*((unsigned __int8 *)v273 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v273 + 80)];
    uint64_t v92 = v273[9];
    int64_t v284 = v89;
    swift_bridgeObjectRetain();
    do
    {
      sub_1A73E0474(v91, (uint64_t)v59, type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment);
      id v93 = objc_msgSend(a1, sel_attachmentContext);
      if (!v93)
      {
        swift_bridgeObjectRelease();
        sub_1A73E9094();
        swift_allocError();
        void *v113 = 3;
        swift_willThrow();
LABEL_54:
        uint64_t v115 = type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment;
        uint64_t v116 = (uint64_t)v59;
        goto LABEL_133;
      }
      uint64_t v94 = v93;
      uint64_t v95 = sub_1A75718E0();
      if ((*(void *)&v59[*(int *)(v288 + 20)] & 0x8000000000000000) != 0
        || (*(void *)&v59[*(int *)(v288 + 24)] & 0x8000000000000000) != 0)
      {
LABEL_160:
        sub_1A7573830();
        __break(1u);
        return;
      }
      uint64_t v96 = (void *)v95;
      id v292 = 0;
      id v97 = objc_msgSend(v94, sel_addImageAttachmentWithURL_width_height_error_, v95);

      if (!v97)
      {
        id v114 = v292;
        swift_bridgeObjectRelease();
        sub_1A7571850();

        swift_willThrow();
        goto LABEL_54;
      }
      id v98 = v292;

      sub_1A73E0630((uint64_t)v59, type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment);
      v91 += v92;
      --v90;
      a1 = v290;
    }
    while (v90);
    swift_bridgeObjectRelease();
    a4 = v250;
    uint64_t v54 = (int *)v289;
    uint64_t v58 = v291;
  }
  long long v99 = v286;
  uint64_t v100 = *(uint64_t *)((char *)v286 + v54[16]);
  uint64_t v101 = *(void *)(v100 + 16);
  if (!v101) {
    goto LABEL_58;
  }
  uint64_t v102 = v100 + ((*(unsigned __int8 *)(v271 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v271 + 80));
  uint64_t v103 = *(void *)(v271 + 72);
  uint64_t v288 = *(uint64_t *)((char *)v286 + v54[16]);
  swift_bridgeObjectRetain();
  do
  {
    sub_1A73E0474(v102, v58, type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment);
    id v104 = objc_msgSend(a1, sel_attachmentContext);
    if (!v104)
    {
      swift_bridgeObjectRelease();
      sub_1A73E9094();
      swift_allocError();
      *id v117 = 3;
      swift_willThrow();
      goto LABEL_57;
    }
    uint64_t v105 = v104;
    uint64_t v106 = sub_1A75718E0();
    if ((*(void *)(v58 + *(int *)(v285 + 20)) & 0x8000000000000000) != 0
      || (*(void *)(v58 + *(int *)(v285 + 24)) & 0x8000000000000000) != 0)
    {
      goto LABEL_160;
    }
    id v107 = (void *)v106;
    id v292 = 0;
    id v108 = objc_msgSend(v105, sel_addImageAttachmentWithURL_width_height_error_, v106);

    if (!v108)
    {
      id v118 = v292;
      swift_bridgeObjectRelease();
      sub_1A7571850();

      swift_willThrow();
LABEL_57:
      long long v119 = type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment;
LABEL_132:
      uint64_t v115 = v119;
      uint64_t v116 = v58;
LABEL_133:
      sub_1A73E0630(v116, v115);
      return;
    }
    id v109 = v292;
    id v110 = objc_msgSend(v108, sel_remObjectID);
    MEMORY[0x1AD0CABF0]();
    if (*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1A7572A60();
    }
    sub_1A7572AB0();
    sub_1A7572A30();

    uint64_t v58 = v291;
    sub_1A73E0630(v291, type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment);
    v102 += v103;
    --v101;
    uint64_t v54 = (int *)v289;
    a1 = v290;
  }
  while (v101);
  swift_bridgeObjectRelease();
  long long v99 = v286;
LABEL_58:
  uint64_t v120 = *(uint64_t *)((char *)v99 + v54[17]);
  uint64_t v121 = *(void *)(v120 + 16);
  unint64_t v122 = v272;
  if (v121)
  {
    uint64_t v123 = v120 + ((*(unsigned __int8 *)(v272 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v272 + 80));
    uint64_t v291 = *(void *)(v272 + 72);
    uint64_t v124 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v272 + 56);
    unsigned int v125 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48);
    uint64_t v288 = v120;
    swift_bridgeObjectRetain();
    unint64_t v272 = (v122 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v126 = (uint64_t)v270;
    uint64_t v127 = (uint64_t)v277;
    while (1)
    {
      sub_1A73E0474(v123, v127, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment);
      uint64_t v128 = *v124;
      uint64_t v129 = v276;
      (*v124)(v127, 0, 1, v276);
      if ((*v125)(v127, 1, v129) == 1) {
        break;
      }
      sub_1A73E05C8(v127, v126, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment);
      id v130 = objc_msgSend(v290, sel_attachmentContext);
      if (!v130)
      {
        swift_bridgeObjectRelease();
        sub_1A73E9094();
        swift_allocError();
        *uint64_t v222 = 3;
        swift_willThrow();
        uint64_t v115 = type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment;
        uint64_t v116 = v126;
        goto LABEL_133;
      }
      uint64_t v131 = v130;
      uint64_t v132 = (void *)sub_1A75718E0();
      id v133 = objc_msgSend(v131, sel_addURLAttachmentWithURL_, v132);

      sub_1A73E0630(v126, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment);
      v123 += v291;
      --v121;
      uint64_t v127 = (uint64_t)v277;
      if (!v121)
      {
        long long v99 = v286;
        uint64_t v134 = (int *)v289;
        goto LABEL_65;
      }
    }
    long long v99 = v286;
    uint64_t v134 = (int *)v289;
  }
  else
  {
    uint64_t v128 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v272 + 56);
    swift_bridgeObjectRetain();
    uint64_t v134 = (int *)v289;
    uint64_t v127 = (uint64_t)v277;
LABEL_65:
    v128(v127, 1, 1, v276);
  }
  swift_bridgeObjectRelease();
  uint64_t v135 = *(uint64_t *)((char *)v99 + v134[18]);
  uint64_t v136 = *(void *)(v135 + 16);
  if (v136)
  {
    uint64_t v137 = v135 + ((*(unsigned __int8 *)(v269 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v269 + 80));
    uint64_t v138 = *(void *)(v269 + 72);
    uint64_t v291 = *(uint64_t *)((char *)v99 + v134[18]);
    swift_bridgeObjectRetain();
    uint64_t v58 = (uint64_t)v287;
    while (1)
    {
      sub_1A73E0474(v137, v58, type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag);
      id v139 = objc_msgSend(v290, sel_hashtagContext);
      if (!v139) {
        break;
      }
      unint64_t v140 = v139;
      uint64_t v141 = *(void *)(v58 + 16);
      swift_bridgeObjectRetain();
      uint64_t v142 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      uint64_t v143 = (void *)sub_1A7571AB0();
      id v144 = objc_msgSend(v140, sel_addHashtagWithType_name_creationDate_, v141, v142, v143);

      uint64_t v58 = (uint64_t)v287;
      sub_1A73E0630(v58, type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag);
      v137 += v138;
      if (!--v136)
      {
        swift_bridgeObjectRelease();
        uint64_t v145 = v286;
        uint64_t v134 = (int *)v289;
        goto LABEL_73;
      }
    }
    swift_bridgeObjectRelease();
    sub_1A73E9094();
    swift_allocError();
    void *v221 = 14;
    swift_willThrow();
    long long v119 = type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag;
    goto LABEL_132;
  }
  uint64_t v145 = v99;
LABEL_73:
  uint64_t v146 = *(void **)((char *)v145 + v134[19]);
  id v147 = v290;
  if (v146)
  {
    id v148 = objc_allocWithZone(MEMORY[0x1E4F94A70]);
    id v149 = v146;
    id v150 = objc_msgSend(v148, sel_initWithTrigger_, v149);
    objc_msgSend(v147, sel_addAlarm_, v150);

    uint64_t v145 = v286;
  }
  id v151 = *(void **)((char *)v145 + v134[20]);
  if (v151)
  {
    id v152 = objc_allocWithZone(MEMORY[0x1E4F94A70]);
    id v153 = v151;
    id v154 = objc_msgSend(v152, sel_initWithTrigger_, v153);
    objc_msgSend(v147, sel_addAlarm_, v154);

    uint64_t v145 = v286;
  }
  uint64_t v155 = *(void **)((char *)v145 + v134[21]);
  if (v155)
  {
    id v156 = objc_allocWithZone(MEMORY[0x1E4F94A70]);
    id v157 = v155;
    id v158 = objc_msgSend(v156, sel_initWithTrigger_, v157);
    objc_msgSend(v147, sel_addAlarm_, v158);

    uint64_t v145 = v286;
  }
  uint64_t v159 = *(uint64_t *)((char *)v145 + v134[22]);
  uint64_t v260 = *(void *)(v159 + 16);
  if (v260)
  {
    uint64_t v258 = v159 + 32;
    uint64_t v160 = swift_bridgeObjectRetain();
    unint64_t v161 = 0;
    unint64_t v162 = 0x1E4F28000;
    uint64_t v259 = v160;
    while (1)
    {
      if (v161 >= *(void *)(v160 + 16))
      {
        __break(1u);
LABEL_159:
        __break(1u);
      }
      uint64_t v279 = v161;
      uint64_t v171 = (uint64_t *)(v258 + 80 * v161);
      uint64_t v172 = *v171;
      int64_t v173 = (char *)v171[2];
      uint64_t v275 = (char *)v171[1];
      uint64_t v276 = v172;
      uint64_t v274 = (char *)v171[3];
      uint64_t v174 = v171[5];
      uint64_t v175 = v171[6];
      uint64_t v176 = v171[7];
      uint64_t v178 = v171[8];
      int64_t v177 = (void (**)(char *, uint64_t, uint64_t))v171[9];
      uint64_t v288 = v171[4];
      uint64_t v277 = v173;
      if (v288)
      {
        sub_1A72BEFEC(0, &qword_1E96F2DA8);
        int64_t v179 = v173;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v272 = sub_1A7572A00();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v180 = v173;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v272 = 0;
      }
      id v181 = v290;
      uint64_t v291 = v178;
      uint64_t v285 = v176;
      uint64_t v287 = v177;
      if (v174)
      {
        uint64_t v182 = *(void *)(v174 + 16);
        if (v182)
        {
          id v292 = (id)MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_1A75736F0();
          uint64_t v183 = 0;
          do
          {
            uint64_t v184 = v183 + 1;
            objc_msgSend(objc_allocWithZone(*(Class *)(v162 + 3792)), sel_initWithInteger_, *(void *)(v174 + 8 * v183 + 32));
            sub_1A75736C0();
            sub_1A7573700();
            sub_1A7573710();
            sub_1A75736D0();
            uint64_t v183 = v184;
          }
          while (v182 != v184);
          swift_bridgeObjectRelease();
          id v181 = v290;
          uint64_t v178 = v291;
          int64_t v177 = v287;
        }
        sub_1A72BEFEC(0, (unint64_t *)&unk_1E96F3860);
        uint64_t v271 = sub_1A7572A00();
        swift_bridgeObjectRelease();
        uint64_t v176 = v285;
        if (!v175)
        {
LABEL_93:
          v270 = 0;
          uint64_t v278 = v175;
          if (!v176) {
            goto LABEL_94;
          }
          goto LABEL_103;
        }
      }
      else
      {
        uint64_t v271 = 0;
        if (!v175) {
          goto LABEL_93;
        }
      }
      uint64_t v186 = *(void *)(v175 + 16);
      if (v186)
      {
        id v292 = (id)MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1A75736F0();
        uint64_t v187 = 0;
        do
        {
          uint64_t v188 = v187 + 1;
          objc_msgSend(objc_allocWithZone(*(Class *)(v162 + 3792)), sel_initWithInteger_, *(void *)(v175 + 8 * v187 + 32));
          sub_1A75736C0();
          sub_1A7573700();
          sub_1A7573710();
          sub_1A75736D0();
          uint64_t v187 = v188;
        }
        while (v186 != v188);
        swift_bridgeObjectRelease();
        id v181 = v290;
        uint64_t v178 = v291;
        int64_t v177 = v287;
      }
      sub_1A72BEFEC(0, (unint64_t *)&unk_1E96F3860);
      v270 = (char *)sub_1A7572A00();
      swift_bridgeObjectRelease();
      uint64_t v176 = v285;
      uint64_t v278 = v175;
      if (!v285)
      {
LABEL_94:
        uint64_t v269 = 0;
        if (!v178) {
          goto LABEL_95;
        }
        goto LABEL_108;
      }
LABEL_103:
      uint64_t v189 = v176;
      uint64_t v190 = *(void *)(v176 + 16);
      if (v190)
      {
        id v292 = (id)MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1A75736F0();
        uint64_t v191 = 0;
        do
        {
          uint64_t v192 = v191 + 1;
          objc_msgSend(objc_allocWithZone(*(Class *)(v162 + 3792)), sel_initWithInteger_, *(void *)(v189 + 8 * v191 + 32));
          sub_1A75736C0();
          sub_1A7573700();
          sub_1A7573710();
          sub_1A75736D0();
          uint64_t v191 = v192;
        }
        while (v190 != v192);
        swift_bridgeObjectRelease();
        id v181 = v290;
        uint64_t v178 = v291;
        int64_t v177 = v287;
      }
      sub_1A72BEFEC(0, (unint64_t *)&unk_1E96F3860);
      uint64_t v269 = sub_1A7572A00();
      swift_bridgeObjectRelease();
      if (!v178)
      {
LABEL_95:
        v185 = 0;
        int64_t v284 = 0;
        if (v177) {
          goto LABEL_113;
        }
        goto LABEL_81;
      }
LABEL_108:
      uint64_t v193 = *(void *)(v178 + 16);
      if (v193)
      {
        id v292 = (id)MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1A75736F0();
        uint64_t v194 = 0;
        do
        {
          uint64_t v195 = v194 + 1;
          objc_msgSend(objc_allocWithZone(*(Class *)(v162 + 3792)), sel_initWithInteger_, *(void *)(v178 + 8 * v194 + 32));
          sub_1A75736C0();
          sub_1A7573700();
          uint64_t v178 = v291;
          sub_1A7573710();
          sub_1A75736D0();
          uint64_t v194 = v195;
        }
        while (v193 != v195);
        swift_bridgeObjectRelease();
        id v181 = v290;
        int64_t v177 = v287;
      }
      sub_1A72BEFEC(0, (unint64_t *)&unk_1E96F3860);
      v185 = (char *)sub_1A7572A00();
      swift_bridgeObjectRelease();
      int64_t v284 = v185;
      if (v177)
      {
LABEL_113:
        id v196 = v177[2];
        if (v196)
        {
          id v292 = (id)MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_1A75736F0();
          uint64_t v197 = 0;
          uint64_t v198 = v177;
          do
          {
            id v199 = (void (*)(char *, uint64_t, uint64_t))((char *)v197 + 1);
            objc_msgSend(objc_allocWithZone(*(Class *)(v162 + 3792)), sel_initWithInteger_, v198[(void)v197 + 4]);
            sub_1A75736C0();
            sub_1A7573700();
            sub_1A7573710();
            sub_1A75736D0();
            uint64_t v197 = v199;
          }
          while (v196 != v199);
          swift_bridgeObjectRelease();
          id v181 = v290;
          v185 = v284;
        }
        sub_1A72BEFEC(0, (unint64_t *)&unk_1E96F3860);
        v163 = (void *)sub_1A7572A00();
        swift_bridgeObjectRelease();
        goto LABEL_82;
      }
LABEL_81:
      v163 = 0;
LABEL_82:
      uint64_t v273 = v163;
      unint64_t v161 = v279 + 1;
      id v164 = v277;
      uint64_t v249 = v163;
      unint64_t v165 = (void *)v269;
      unint64_t v166 = v181;
      v167 = (void *)v272;
      v168 = (void *)v271;
      v169 = v270;
      id v170 = objc_msgSend(v166, sel_addRecurrenceRuleWithFrequency_interval_firstDayOfTheWeek_daysOfTheWeek_daysOfTheMonth_monthsOfTheYear_weeksOfTheYear_daysOfTheYear_setPositions_end_, v276, v275, v274, v272, v271, v270, v269, v185, v249, v277);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v160 = v259;
      unint64_t v162 = 0x1E4F28000uLL;
      if (v161 == v260)
      {
        swift_bridgeObjectRelease();
        uint64_t v134 = (int *)v289;
        id v147 = v290;
        uint64_t v145 = v286;
        break;
      }
    }
  }
  uint64_t v200 = *(char **)((char *)v145 + v134[23]);
  uint64_t v201 = *((void *)v200 + 2);
  if (v201)
  {
    uint64_t v202 = (uint64_t)&v200[(*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80)];
    uint64_t v287 = (void (**)(char *, uint64_t, uint64_t))(v281 + 32);
    uint64_t v285 = v281 + 8;
    uint64_t v291 = *MEMORY[0x1E4F95118];
    uint64_t v288 = *(void *)(v253 + 72);
    int64_t v284 = v200;
    swift_bridgeObjectRetain();
    v203 = &qword_1EB704C60;
    do
    {
      uint64_t v58 = v268;
      sub_1A73E0474(v202, v268, type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert);
      id v204 = objc_msgSend(v147, sel_dueDateDeltaAlertContext);
      if (!v204)
      {
        swift_bridgeObjectRelease();
        sub_1A73E9094();
        swift_allocError();
        *uint64_t v223 = 15;
        swift_willThrow();
        long long v119 = type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert;
        goto LABEL_132;
      }
      id v205 = v204;
      uint64_t v206 = v267;
      id v207 = v203;
      id v208 = *(id *)v58;
      uint64_t v209 = (void *)sub_1A7571AB0();
      uint64_t v210 = v58;
      id v211 = objc_msgSend(v205, sel_addDueDateDeltaAlertWithDueDateDelta_identifier_creationDate_, v208, 0, v209);

      v203 = v207;
      id v212 = objc_msgSend(v205, sel_updateDueDateDeltaAlert_, v211);
      uint64_t v213 = v210 + *(int *)(v206 + 24);
      uint64_t v214 = v263;
      sub_1A72BF1E8(v213, v263, v207);
      uint64_t v215 = v283;
      if (v282((char *)v214, 1, v283) == 1)
      {
        sub_1A72CB560(v214, v207);
      }
      else
      {
        uint64_t v216 = v261;
        (*v287)(v261, v214, v215);
        id v217 = (void *)sub_1A7571AB0();

        uint64_t v218 = v216;
        v203 = v207;
        (*(void (**)(char *, uint64_t))v285)(v218, v215);
      }
      uint64_t v219 = v268;
      if (v291 >= *(void *)(v268 + *(int *)(v267 + 28)))
      {
        sub_1A73E0630(v268, type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert);
      }
      else
      {
        id v220 = objc_msgSend(v212, sel__setMinimumSupportedAppVersion_);

        v203 = v207;
        sub_1A73E0630(v219, type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert);
      }
      uint64_t v134 = (int *)v289;
      v202 += v288;
      --v201;
      id v147 = v290;
    }
    while (v201);
    swift_bridgeObjectRelease();
    uint64_t v145 = v286;
  }
  v224 = v145;
  uint64_t v225 = v256;
  sub_1A72BF1E8((uint64_t)v145 + v134[24], v256, &qword_1EB6FFDE0);
  uint64_t v226 = v266;
  if (v254(v225, 1, v266) == 1)
  {
    sub_1A72CB560(v225, &qword_1EB6FFDE0);
  }
  else
  {
    uint64_t v227 = v252;
    uint64_t v228 = v251;
    (*(void (**)(char *, uint64_t, uint64_t))(v252 + 32))(v251, v225, v226);
    id v229 = (void *)sub_1A75716B0();
    objc_msgSend(v147, sel_setAlternativeDisplayDateDateForCalendarWithDateComponents_, v229);

    v224 = v286;
    (*(void (**)(char *, uint64_t))(v227 + 8))(v228, v226);
  }
  uint64_t v231 = *v224;
  uint64_t v230 = v224[1];
  swift_bridgeObjectRetain();
  id v232 = objc_msgSend(v147, sel_objectID);
  if (v232)
  {
    uint64_t v233 = (uint64_t)v232;
    v234 = v264;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v292 = *v234;
    id *v234 = (id)0x8000000000000000;
    sub_1A72D70AC(v233, v231, v230, isUniquelyReferenced_nonNull_native);
    id *v234 = v292;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v236 = (void *)sub_1A72D6294(v231, v230);
    swift_bridgeObjectRelease();
  }
  uint64_t v237 = *(uint64_t *)((char *)v286 + v134[25]);
  uint64_t v238 = *(void *)(v237 + 16);
  uint64_t v239 = (uint64_t)v257;
  if (v238)
  {
    uint64_t v240 = v237 + ((*(unsigned __int8 *)(v265 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v265 + 80));
    swift_bridgeObjectRetain();
    while (1)
    {
      if (v238 > *(void *)(v237 + 16)) {
        goto LABEL_159;
      }
      --v238;
      sub_1A73E0474(v240 + *(void *)(v265 + 72) * v238, v239, type metadata accessor for REMTestStorePopulator.TestReminder);
      id v241 = v290;
      id v242 = objc_msgSend(v290, sel_subtaskContext);
      if (!v242)
      {
        swift_bridgeObjectRelease();
        sub_1A73E9094();
        swift_allocError();
        *uint64_t v248 = 2;
        swift_willThrow();
        uint64_t v115 = type metadata accessor for REMTestStorePopulator.TestReminder;
        uint64_t v116 = v239;
        goto LABEL_133;
      }
      id v243 = v242;
      id v244 = objc_msgSend(v241, sel_saveRequest);
      swift_bridgeObjectRetain();
      uint64_t v245 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      id v246 = objc_msgSend(v244, sel_addReminderWithTitle_toReminderSubtaskContextChangeItem_, v245, v243);

      uint64_t v247 = v280;
      sub_1A73D48FC(v246, v239, v264, v250);
      uint64_t v280 = v247;
      if (v247) {
        break;
      }
      sub_1A73E0630(v239, type metadata accessor for REMTestStorePopulator.TestReminder);

      if (!v238)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }

    sub_1A73E0630(v239, type metadata accessor for REMTestStorePopulator.TestReminder);
    swift_bridgeObjectRelease();
  }
}

uint64_t REMTestStorePopulator.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t REMTestStorePopulator.__deallocating_deinit()
{
  REMTestStorePopulator.deinit();

  return MEMORY[0x1F4186488](v0, 112, 7);
}

uint64_t static REMTestStorePopulator.TestStoreBuilder.buildBlock()()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t static REMTestStorePopulator.TestStoreBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 1;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(a3 + 80) = MEMORY[0x1E4FBC860];
  *(void *)(a3 + 88) = v3;
  *(void *)(a3 + 104) = 0;
  *(void *)(a3 + 112) = 0;
  *(void *)(a3 + 96) = 0;
  return swift_bridgeObjectRetain();
}

double static REMTestStorePopulator.TestAccountBuilder.buildExpression(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  uint64_t v6 = a4;
  int64_t v7 = *(void *)(a3 + 16);
  if (v7)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    uint64_t v21 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A72D2EC0(0, v7, 0);
    uint64_t v10 = v21;
    uint64_t v11 = (uint64_t *)(a3 + 40);
    do
    {
      uint64_t v12 = *(v11 - 1);
      uint64_t v13 = *v11;
      unint64_t v14 = *(void *)(v21 + 16);
      unint64_t v15 = *(void *)(v21 + 24);
      swift_bridgeObjectRetain();
      if (v14 >= v15 >> 1) {
        sub_1A72D2EC0(v15 > 1, v14 + 1, 1);
      }
      v11 += 2;
      *(void *)(v21 + 16) = v14 + 1;
      uint64_t v16 = v21 + 120 * v14;
      *(void *)(v16 + 32) = v12;
      *(void *)(v16 + 40) = v13;
      *(_OWORD *)(v16 + 48) = 0u;
      *(_OWORD *)(v16 + 64) = 0u;
      *(_OWORD *)(v16 + 80) = 0u;
      *(void *)(v16 + 96) = 0;
      *(void *)(v16 + 104) = 1;
      *(void *)(v16 + 112) = v9;
      *(void *)(v16 + 120) = v9;
      *(void *)(v16 + 136) = 0;
      *(void *)(v16 + 144) = 0;
      *(void *)(v16 + 128) = 0;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v4 = a2;
    uint64_t v6 = a4;
    uint64_t v5 = a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  *(void *)uint64_t v6 = v5;
  *(void *)(v6 + 8) = v4;
  *(void *)(v6 + 16) = v10;
  double result = 0.0;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(void *)(v6 + 88) = 0;
  *(void *)(v6 + 96) = 0x4000000000000000;
  *(void *)(v6 + 104) = 0;
  *(void *)(v6 + 112) = 0;
  return result;
}

uint64_t static REMTestStorePopulator.TestStoreBuilder.buildExpression(_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  a2[3] = v5;
  a2[4] = v7;
  a2[5] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t static REMTestStorePopulator.TestStoreBuilder.buildExpression(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  *(void *)a2 = *a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = 0x4000000000000000;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t static REMTestStorePopulator.TestAccountBuilder.buildExpression(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  *(void *)a2 = *a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = 0x4000000000000000;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

id static REMTestStorePopulator.TestStoreBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void **)(a1 + 48);
  uint64_t v6 = *(void **)(a1 + 64);
  id v12 = *(id *)(a1 + 56);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v4;
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v12;
  *(void *)(a2 + 64) = v6;
  *(void *)(a2 + 72) = v7;
  *(void *)(a2 + 80) = v8;
  *(_OWORD *)(a2 + 88) = xmmword_1A75819C0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  id v9 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v5;

  return v12;
}

uint64_t static REMTestStorePopulator.TestAccountBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 32);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = 0xC000000000000000;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

double REMTestStorePopulator.TestList.init(_:builder:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a3();
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  double result = 0.0;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(void *)(a4 + 64) = 0;
  *(unsigned char *)(a4 + 72) = 1;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  *(void *)(a4 + 80) = v7;
  *(void *)(a4 + 88) = v9;
  *(_WORD *)(a4 + 96) = 0;
  *(unsigned char *)(a4 + 98) = 0;
  *(void *)(a4 + 104) = 0;
  *(void *)(a4 + 112) = 0;
  return result;
}

uint64_t _s19ReminderKitInternal21REMTestStorePopulatorC18TestAccountBuilderV15buildExpressionyAC0gH0V0H5ChildOSSFZ_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 1;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(a3 + 80) = MEMORY[0x1E4FBC860];
  *(void *)(a3 + 88) = v3;
  *(void *)(a3 + 104) = 0;
  *(void *)(a3 + 112) = 0;
  *(void *)(a3 + 96) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t _s19ReminderKitInternal21REMTestStorePopulatorC18TestAccountBuilderV15buildExpressionyAC0gH0V0H5ChildOAC0G4ListVFZ_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void **)(a1 + 48);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 88);
  uint64_t v10 = *(void *)(a1 + 104);
  uint64_t v9 = *(void *)(a1 + 112);
  uint64_t v11 = 256;
  if (!*(unsigned char *)(a1 + 97)) {
    uint64_t v11 = 0;
  }
  uint64_t v12 = v11 | *(unsigned __int8 *)(a1 + 96);
  uint64_t v13 = 0x10000;
  if (!*(unsigned char *)(a1 + 98)) {
    uint64_t v13 = 0;
  }
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v4;
  *(void *)(a2 + 48) = v5;
  long long v14 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 56) = v14;
  *(void *)(a2 + 72) = v6;
  *(void *)(a2 + 80) = v8;
  *(void *)(a2 + 88) = v7;
  *(void *)(a2 + 96) = v12 | v13;
  unint64_t v15 = (void *)v14;
  *(void *)(a2 + 104) = v10;
  *(void *)(a2 + 112) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = v5;
  id v17 = v15;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

id _s19ReminderKitInternal21REMTestStorePopulatorC18TestAccountBuilderV15buildExpressionyAC0gH0V0H5ChildOAC0G15CustomSmartListVFZ_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void **)(a1 + 48);
  uint64_t v6 = *(void **)(a1 + 64);
  id v12 = *(id *)(a1 + 56);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v4;
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v12;
  *(void *)(a2 + 64) = v6;
  *(void *)(a2 + 72) = v7;
  *(void *)(a2 + 80) = v8;
  *(_OWORD *)(a2 + 88) = xmmword_1A75819C0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  id v9 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v5;

  return v12;
}

uint64_t static REMTestStorePopulator.TestRemindersBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1A73D7368(a1, a2, MEMORY[0x1E4FBC860], a3);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A73D7368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v6 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v7 = (char *)a4 + v6[6];
  uint64_t v8 = sub_1A75717A0();
  id v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  *((unsigned char *)a4 + v6[7]) = 0;
  *((unsigned char *)a4 + v6[8]) = 0;
  id v10 = (char *)a4 + v6[9];
  uint64_t v11 = sub_1A7571B60();
  id v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12((char *)a4 + v6[10], 1, 1, v11);
  *((unsigned char *)a4 + v6[11]) = 0;
  *(void *)((char *)a4 + v6[12]) = 0;
  *(void *)((char *)a4 + v6[13]) = 0;
  uint64_t v13 = (_OWORD *)((char *)a4 + v6[14]);
  *uint64_t v13 = 0u;
  v13[1] = 0u;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  *(void *)((char *)a4 + v6[15]) = MEMORY[0x1E4FBC860];
  *(void *)((char *)a4 + v6[16]) = v14;
  *(void *)((char *)a4 + v6[17]) = v14;
  *(void *)((char *)a4 + v6[18]) = v14;
  *(void *)((char *)a4 + v6[19]) = 0;
  *(void *)((char *)a4 + v6[20]) = 0;
  *(void *)((char *)a4 + v6[21]) = 0;
  *(void *)((char *)a4 + v6[22]) = v14;
  *(void *)((char *)a4 + v6[23]) = v14;
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v9)((char *)a4 + v6[24], 1, 1, v8);
  *a4 = a1;
  a4[1] = a2;
  *(void *)((char *)a4 + v6[25]) = a3;
  return result;
}

uint64_t static REMTestStorePopulator.TestRemindersBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A73E0474(a1, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
}

uint64_t static REMTestStorePopulator.TestListBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1A73D7368(a1, a2, MEMORY[0x1E4FBC860], a3);
  type metadata accessor for REMTestStorePopulator.TestList.ListChild(0);
  swift_storeEnumTagMultiPayload();

  return swift_bridgeObjectRetain();
}

uint64_t static REMTestStorePopulator.TestListBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A73D75FC(a1, type metadata accessor for REMTestStorePopulator.TestReminder, a2);
}

{
  return sub_1A73D75FC(a1, type metadata accessor for REMTestStorePopulator.TestListSection, a2);
}

uint64_t sub_1A73D75FC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  sub_1A73E0474(a1, a3, a2);
  type metadata accessor for REMTestStorePopulator.TestList.ListChild(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t static REMTestStorePopulator.TestListSectionBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A73E0474(a1, a2, type metadata accessor for REMTestStorePopulator.TestListSection);
}

uint64_t REMTestStorePopulator.TestAccount.init(_:type:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, void *a5@<X8>)
{
  uint64_t result = a4();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = result;
  a5[4] = 0;
  a5[5] = 0;
  return result;
}

uint64_t REMTestStorePopulator.TestAccount.externalIdentifier(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  *a3 = v4;
  a3[1] = v5;
  a3[2] = v6;
  a3[3] = v7;
  a3[4] = a1;
  a3[5] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestList.color(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 32);
  uint64_t v5 = *(void *)(v3 + 40);
  uint64_t v7 = *(void **)(v3 + 48);
  char v8 = *(unsigned char *)(v3 + 72);
  uint64_t v9 = *(void *)(v3 + 80);
  uint64_t v10 = *(void *)(v3 + 88);
  char v11 = *(unsigned char *)(v3 + 96);
  char v12 = *(unsigned char *)(v3 + 97);
  char v13 = *(unsigned char *)(v3 + 98);
  uint64_t v14 = *(void *)(v3 + 104);
  uint64_t v15 = *(void *)(v3 + 112);
  *(void *)a3 = *(void *)v3;
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  *(void *)(a3 + 32) = v6;
  *(void *)(a3 + 40) = v5;
  *(void *)(a3 + 48) = v7;
  long long v16 = *(_OWORD *)(v3 + 56);
  *(_OWORD *)(a3 + 56) = v16;
  id v17 = (void *)v16;
  *(unsigned char *)(a3 + 72) = v8;
  *(void *)(a3 + 80) = v9;
  *(void *)(a3 + 88) = v10;
  *(unsigned char *)(a3 + 96) = v11;
  *(unsigned char *)(a3 + 97) = v12;
  *(unsigned char *)(a3 + 98) = v13;
  *(void *)(a3 + 104) = v14;
  *(void *)(a3 + 112) = v15;
  swift_bridgeObjectRetain();
  id v18 = v7;
  id v19 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestList.symbolicColor(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void **)(v3 + 48);
  char v8 = *(unsigned char *)(v3 + 72);
  uint64_t v9 = *(void *)(v3 + 80);
  uint64_t v10 = *(void *)(v3 + 88);
  char v11 = *(unsigned char *)(v3 + 96);
  char v12 = *(unsigned char *)(v3 + 97);
  char v13 = *(unsigned char *)(v3 + 98);
  uint64_t v14 = *(void *)(v3 + 104);
  uint64_t v15 = *(void *)(v3 + 112);
  *(void *)a3 = *(void *)v3;
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + 16) = v5;
  *(void *)(a3 + 24) = v6;
  *(void *)(a3 + 32) = a1;
  *(void *)(a3 + 40) = a2;
  *(void *)(a3 + 48) = v7;
  long long v16 = *(_OWORD *)(v3 + 56);
  *(_OWORD *)(a3 + 56) = v16;
  id v17 = (void *)v16;
  *(unsigned char *)(a3 + 72) = v8;
  *(void *)(a3 + 80) = v9;
  *(void *)(a3 + 88) = v10;
  *(unsigned char *)(a3 + 96) = v11;
  *(unsigned char *)(a3 + 97) = v12;
  *(unsigned char *)(a3 + 98) = v13;
  *(void *)(a3 + 104) = v14;
  *(void *)(a3 + 112) = v15;
  id v18 = v7;
  id v19 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void REMTestStorePopulator.TestList.badge(emblem:)(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[3];
  uint64_t v23 = v1[2];
  uint64_t v24 = *v1;
  uint64_t v5 = v1[5];
  uint64_t v6 = (void *)v1[6];
  uint64_t v7 = (void *)v1[7];
  uint64_t v15 = v7;
  uint64_t v21 = v1[8];
  uint64_t v22 = v1[4];
  uint64_t v8 = v1[10];
  uint64_t v9 = v1[11];
  char v19 = *((unsigned char *)v1 + 96);
  char v20 = *((unsigned char *)v1 + 72);
  char v17 = *((unsigned char *)v1 + 98);
  char v18 = *((unsigned char *)v1 + 97);
  uint64_t v10 = v1[14];
  uint64_t v16 = v1[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v6;
  id v12 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = (void *)sub_1A75725E0();
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94B30]), sel_initWithEmblem_, v13);

  *(void *)a1 = v24;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v23;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v22;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v15;
  *(void *)(a1 + 64) = v21;
  *(unsigned char *)(a1 + 72) = v20;
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = v9;
  *(unsigned char *)(a1 + 96) = v19;
  *(unsigned char *)(a1 + 97) = v18;
  *(unsigned char *)(a1 + 98) = v17;
  *(void *)(a1 + 104) = v16;
  *(void *)(a1 + 112) = v10;
}

void REMTestStorePopulator.TestList.badge(emoji:)(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[3];
  uint64_t v23 = v1[2];
  uint64_t v24 = *v1;
  uint64_t v5 = v1[5];
  uint64_t v7 = (void *)v1[6];
  uint64_t v6 = (void *)v1[7];
  uint64_t v21 = v1[8];
  uint64_t v22 = v1[4];
  uint64_t v8 = v1[10];
  uint64_t v9 = v1[11];
  char v19 = *((unsigned char *)v1 + 96);
  char v20 = *((unsigned char *)v1 + 72);
  char v17 = *((unsigned char *)v1 + 98);
  char v18 = *((unsigned char *)v1 + 97);
  uint64_t v15 = v1[14];
  uint64_t v16 = v1[13];
  id v14 = objc_allocWithZone(MEMORY[0x1E4F94B30]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v7;
  id v11 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v14, sel_initWithEmoji_, v12);

  *(void *)a1 = v24;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v23;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v22;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v21;
  *(unsigned char *)(a1 + 72) = v20;
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = v9;
  *(unsigned char *)(a1 + 96) = v19;
  *(unsigned char *)(a1 + 97) = v18;
  *(unsigned char *)(a1 + 98) = v17;
  *(void *)(a1 + 104) = v16;
  *(void *)(a1 + 112) = v15;
}

id REMTestStorePopulator.TestList.sortingStyle(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 40);
  id v18 = *(id *)(v2 + 48);
  uint64_t v7 = *(void *)(v2 + 64);
  char v8 = *(unsigned char *)(v2 + 72);
  uint64_t v9 = *(void *)(v2 + 80);
  uint64_t v10 = *(void *)(v2 + 88);
  char v11 = *(unsigned char *)(v2 + 96);
  char v12 = *(unsigned char *)(v2 + 97);
  char v13 = *(unsigned char *)(v2 + 98);
  uint64_t v14 = *(void *)(v2 + 104);
  uint64_t v15 = *(void *)(v2 + 112);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(void *)(a2 + 40) = v6;
  *(void *)(a2 + 48) = v18;
  *(void *)(a2 + 56) = a1;
  *(void *)(a2 + 64) = v7;
  *(unsigned char *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  *(void *)(a2 + 88) = v10;
  *(unsigned char *)(a2 + 96) = v11;
  *(unsigned char *)(a2 + 97) = v12;
  *(unsigned char *)(a2 + 98) = v13;
  *(void *)(a2 + 104) = v14;
  *(void *)(a2 + 112) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return v18;
}

uint64_t REMTestStorePopulator.TestList.sharingStatus(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 40);
  uint64_t v6 = *(void **)(v2 + 48);
  uint64_t v7 = *(void **)(v2 + 56);
  uint64_t v8 = *(void *)(v2 + 80);
  uint64_t v9 = *(void *)(v2 + 88);
  char v10 = *(unsigned char *)(v2 + 96);
  char v11 = *(unsigned char *)(v2 + 97);
  char v12 = *(unsigned char *)(v2 + 98);
  uint64_t v14 = *(void *)(v2 + 104);
  uint64_t v13 = *(void *)(v2 + 112);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  *(void *)(a2 + 64) = a1;
  *(unsigned char *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = v8;
  *(void *)(a2 + 88) = v9;
  *(unsigned char *)(a2 + 96) = v10;
  *(unsigned char *)(a2 + 97) = v11;
  *(unsigned char *)(a2 + 98) = v12;
  *(void *)(a2 + 104) = v14;
  *(void *)(a2 + 112) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = v6;
  id v16 = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestList.sharees(builder:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[3];
  uint64_t v24 = v2[2];
  uint64_t v25 = *v2;
  uint64_t v6 = v2[5];
  uint64_t v7 = (void *)v2[6];
  uint64_t v8 = (void *)v2[7];
  uint64_t v22 = v2[8];
  uint64_t v23 = v2[4];
  uint64_t v9 = v2[10];
  char v20 = *((unsigned char *)v2 + 96);
  char v21 = *((unsigned char *)v2 + 72);
  char v18 = *((unsigned char *)v2 + 98);
  char v19 = *((unsigned char *)v2 + 97);
  uint64_t v10 = v2[14];
  uint64_t v17 = v2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v7;
  id v12 = v8;
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = a1(v13);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v25;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v24;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v23;
  *(void *)(a2 + 40) = v6;
  *(void *)(a2 + 48) = v7;
  *(void *)(a2 + 56) = v8;
  *(void *)(a2 + 64) = v22;
  *(unsigned char *)(a2 + 72) = v21;
  *(void *)(a2 + 80) = v9;
  *(void *)(a2 + 88) = v14;
  *(unsigned char *)(a2 + 96) = v20;
  *(unsigned char *)(a2 + 97) = v19;
  *(unsigned char *)(a2 + 98) = v18;
  *(void *)(a2 + 104) = v17;
  *(void *)(a2 + 112) = v10;
  return result;
}

uint64_t REMTestStorePopulator.TestList.isPinned(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 40);
  uint64_t v6 = *(void **)(v2 + 48);
  char v7 = *(unsigned char *)(v2 + 72);
  uint64_t v8 = *(void *)(v2 + 80);
  uint64_t v9 = *(void *)(v2 + 88);
  char v10 = *(unsigned char *)(v2 + 97);
  char v11 = *(unsigned char *)(v2 + 98);
  uint64_t v13 = *(void *)(v2 + 104);
  uint64_t v12 = *(void *)(v2 + 112);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  long long v14 = *(_OWORD *)(v2 + 56);
  *(_OWORD *)(a2 + 56) = v14;
  *(unsigned char *)(a2 + 72) = v7;
  *(void *)(a2 + 80) = v8;
  *(void *)(a2 + 88) = v9;
  *(unsigned char *)(a2 + 97) = v10;
  *(unsigned char *)(a2 + 98) = v11;
  *(void *)(a2 + 104) = v13;
  *(void *)(a2 + 112) = v12;
  id v15 = (void *)v14;
  *(unsigned char *)(a2 + 96) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = v6;
  id v17 = v15;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestList.shouldCategorizeGroceryItems(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 40);
  uint64_t v6 = *(void **)(v2 + 48);
  char v7 = *(unsigned char *)(v2 + 72);
  uint64_t v8 = *(void *)(v2 + 80);
  uint64_t v9 = *(void *)(v2 + 88);
  char v10 = *(unsigned char *)(v2 + 96);
  char v11 = *(unsigned char *)(v2 + 98);
  uint64_t v13 = *(void *)(v2 + 104);
  uint64_t v12 = *(void *)(v2 + 112);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  long long v14 = *(_OWORD *)(v2 + 56);
  *(_OWORD *)(a2 + 56) = v14;
  *(unsigned char *)(a2 + 72) = v7;
  *(void *)(a2 + 80) = v8;
  *(void *)(a2 + 88) = v9;
  *(unsigned char *)(a2 + 96) = v10;
  *(unsigned char *)(a2 + 97) = a1;
  *(unsigned char *)(a2 + 98) = v11;
  id v15 = (void *)v14;
  *(void *)(a2 + 104) = v13;
  *(void *)(a2 + 112) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = v6;
  id v17 = v15;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestList.shouldSuggestConversionToGroceryList(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 40);
  uint64_t v6 = *(void **)(v2 + 48);
  char v7 = *(unsigned char *)(v2 + 72);
  uint64_t v8 = *(void *)(v2 + 80);
  uint64_t v9 = *(void *)(v2 + 88);
  char v10 = *(unsigned char *)(v2 + 96);
  char v11 = *(unsigned char *)(v2 + 97);
  uint64_t v13 = *(void *)(v2 + 104);
  uint64_t v12 = *(void *)(v2 + 112);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  long long v14 = *(_OWORD *)(v2 + 56);
  *(_OWORD *)(a2 + 56) = v14;
  *(unsigned char *)(a2 + 72) = v7;
  *(void *)(a2 + 80) = v8;
  *(void *)(a2 + 88) = v9;
  *(unsigned char *)(a2 + 96) = v10;
  *(unsigned char *)(a2 + 97) = v11;
  *(unsigned char *)(a2 + 98) = a1;
  id v15 = (void *)v14;
  *(void *)(a2 + 104) = v13;
  *(void *)(a2 + 112) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = v6;
  id v17 = v15;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestList.groceryLocaleID(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 40);
  char v7 = *(void **)(v3 + 48);
  char v8 = *(unsigned char *)(v3 + 72);
  uint64_t v9 = *(void *)(v3 + 80);
  uint64_t v10 = *(void *)(v3 + 88);
  char v11 = *(unsigned char *)(v3 + 96);
  char v12 = *(unsigned char *)(v3 + 97);
  char v13 = *(unsigned char *)(v3 + 98);
  *(void *)a3 = *(void *)v3;
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + 16) = v5;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
  *(void *)(a3 + 40) = v6;
  *(void *)(a3 + 48) = v7;
  long long v14 = *(_OWORD *)(v3 + 56);
  *(_OWORD *)(a3 + 56) = v14;
  id v15 = (void *)v14;
  *(unsigned char *)(a3 + 72) = v8;
  *(void *)(a3 + 80) = v9;
  *(void *)(a3 + 88) = v10;
  *(unsigned char *)(a3 + 96) = v11;
  *(unsigned char *)(a3 + 97) = v12;
  *(unsigned char *)(a3 + 98) = v13;
  *(void *)(a3 + 104) = a1;
  *(void *)(a3 + 112) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = v7;
  id v17 = v15;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 REMTestStorePopulator.TestSharee.init(firstName:lastName:address:status:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, __n128 *a5@<X4>, unint64_t a6@<X5>, __n128 *a7@<X8>)
{
  unsigned __int8 v7 = a5[1].n128_u8[0];
  a7->n128_u64[0] = a1;
  a7->n128_u64[1] = a2;
  a7[1].n128_u64[0] = a3;
  a7[1].n128_u64[1] = a4;
  __n128 result = *a5;
  a7[2] = *a5;
  a7[3].n128_u8[0] = v7;
  a7[3].n128_u64[1] = a6;
  return result;
}

uint64_t REMTestStorePopulator.TestGroup.init(_:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, void *a4@<X8>)
{
  uint64_t result = a3();
  *a4 = a1;
  a4[1] = a2;
  a4[2] = result;
  return result;
}

double REMTestStorePopulator.TestCustomSmartList.init(_:builder:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a3();
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  double result = 0.0;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 57) = 0u;
  *(void *)(a4 + 80) = v7;
  return result;
}

uint64_t REMTestStorePopulator.TestCustomSmartList.init(_:operation:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v10 - 8);
  char v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *a3;
  uint64_t v14 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  id v15 = (objc_class *)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  id v16 = objc_allocWithZone(v15);
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v13;
  id v17 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  *(_OWORD *)id v17 = xmmword_1A7578D90;
  v17[16] = 0;
  sub_1A72BF1E8((uint64_t)v12, (uint64_t)&v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1E96F2370);
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = 6;
  *(void *)&v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = 0;
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = 2;
  char v18 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  *(_OWORD *)char v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((_OWORD *)v18 + 2) = 0u;
  v18[48] = -1;
  char v19 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  void *v19 = 0;
  v19[1] = 0;
  v24.receiver = v16;
  v24.super_class = v15;
  swift_bridgeObjectRetain();
  id v20 = objc_msgSendSuper2(&v24, sel_init);
  sub_1A72CB560((uint64_t)v12, (uint64_t *)&unk_1E96F2370);
  id v21 = v20;
  uint64_t v22 = a4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)(a5 + 48) = 0u;
  *(void *)(a5 + 64) = v20;
  *(unsigned char *)(a5 + 72) = 0;
  *(void *)(a5 + 80) = v22;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t REMTestStorePopulator.TestCustomSmartList.color(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v7 = v3[4];
  uint64_t v6 = v3[5];
  char v8 = (void *)v3[6];
  uint64_t v9 = (void *)v3[7];
  uint64_t v10 = (void *)v3[8];
  char v11 = *((unsigned char *)v3 + 72);
  uint64_t v12 = v3[10];
  *(void *)a3 = v4;
  *(void *)(a3 + 8) = v5;
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  *(void *)(a3 + 32) = v7;
  *(void *)(a3 + 40) = v6;
  *(void *)(a3 + 48) = v8;
  *(void *)(a3 + 56) = v9;
  *(void *)(a3 + 64) = v10;
  *(unsigned char *)(a3 + 72) = v11;
  *(void *)(a3 + 80) = v12;
  swift_bridgeObjectRetain();
  id v13 = v8;
  id v14 = v9;
  id v15 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestCustomSmartList.symbolicColor(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = (void *)v3[6];
  uint64_t v9 = (void *)v3[7];
  uint64_t v10 = (void *)v3[8];
  char v11 = *((unsigned char *)v3 + 72);
  uint64_t v12 = v3[10];
  *(void *)a3 = v4;
  *(void *)(a3 + 8) = v5;
  *(void *)(a3 + 16) = v6;
  *(void *)(a3 + 24) = v7;
  *(void *)(a3 + 32) = a1;
  *(void *)(a3 + 40) = a2;
  *(void *)(a3 + 48) = v8;
  *(void *)(a3 + 56) = v9;
  *(void *)(a3 + 64) = v10;
  *(unsigned char *)(a3 + 72) = v11;
  *(void *)(a3 + 80) = v12;
  id v13 = v8;
  id v14 = v9;
  id v15 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void REMTestStorePopulator.TestCustomSmartList.badge(emblem:)(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[3];
  uint64_t v17 = v1[2];
  uint64_t v18 = *v1;
  uint64_t v5 = v1[5];
  uint64_t v16 = v1[4];
  uint64_t v6 = (void *)v1[6];
  uint64_t v7 = (void *)v1[7];
  char v8 = (void *)v1[8];
  char v15 = *((unsigned char *)v1 + 72);
  uint64_t v9 = v1[10];
  id v10 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v6;
  id v12 = v7;
  id v13 = (void *)sub_1A75725E0();
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94B30]), sel_initWithEmblem_, v13);

  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v17;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v16;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(unsigned char *)(a1 + 72) = v15;
  *(void *)(a1 + 80) = v9;
}

void REMTestStorePopulator.TestCustomSmartList.badge(emoji:)(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[3];
  uint64_t v20 = v1[2];
  uint64_t v21 = *v1;
  uint64_t v5 = v1[5];
  uint64_t v19 = v1[4];
  uint64_t v7 = (void *)v1[6];
  uint64_t v6 = (void *)v1[7];
  char v8 = (void *)v1[8];
  uint64_t v17 = v8;
  char v18 = *((unsigned char *)v1 + 72);
  uint64_t v9 = v1[10];
  id v10 = objc_allocWithZone(MEMORY[0x1E4F94B30]);
  id v11 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v7;
  id v13 = v6;
  id v14 = v6;
  char v15 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v10, sel_initWithEmoji_, v15);

  *(void *)a1 = v21;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v20;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v19;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v14;
  *(void *)(a1 + 64) = v17;
  *(unsigned char *)(a1 + 72) = v18;
  *(void *)(a1 + 80) = v9;
}

id REMTestStorePopulator.TestCustomSmartList.sortingStyle(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 40);
  id v13 = *(id *)(v2 + 48);
  uint64_t v7 = *(void **)(v2 + 64);
  char v8 = *(unsigned char *)(v2 + 72);
  uint64_t v9 = *(void *)(v2 + 80);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(void *)(a2 + 40) = v6;
  *(void *)(a2 + 48) = v13;
  *(void *)(a2 + 56) = a1;
  *(void *)(a2 + 64) = v7;
  *(unsigned char *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  id v10 = v7;
  swift_bridgeObjectRetain();
  id v11 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return v13;
}

void REMTestStorePopulator.TestCustomSmartList.hashtags(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = *(void *)a1;
  uint64_t v21 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + 40);
  uint64_t v9 = *(void **)(v2 + 48);
  id v11 = *(void **)(v2 + 56);
  id v10 = *(void **)(v2 + 64);
  char v12 = *(unsigned char *)(v2 + 72);
  uint64_t v13 = *(void *)(v2 + 80);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v7;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(void *)(a2 + 40) = v8;
  *(void *)(a2 + 48) = v9;
  *(void *)(a2 + 56) = v11;
  *(void *)(a2 + 64) = v10;
  *(unsigned char *)(a2 + 72) = v12;
  *(void *)(a2 + 80) = v13;
  if (v10)
  {
    id v14 = v11;
    id v15 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = v9;
  }
  else
  {
    id v17 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    id v18 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v19 = v9;
    id v15 = objc_msgSend(v17, sel_init);
  }
  v22[0] = v4;
  v22[1] = v21;
  char v23 = v5;
  sub_1A7383834(v4);
  id v20 = sub_1A7383DC4((uint64_t)v15, v22);

  *(void *)(a2 + 64) = v20;
}

void REMTestStorePopulator.TestCustomSmartList.date(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + 8);
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = *(void *)(v2 + 40);
  id v11 = *(void **)(v2 + 48);
  uint64_t v13 = *(void **)(v2 + 56);
  char v12 = *(void **)(v2 + 64);
  char v14 = *(unsigned char *)(v2 + 72);
  uint64_t v15 = *(void *)(v2 + 80);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v9;
  long long v16 = *(_OWORD *)(v2 + 24);
  *(_OWORD *)(a2 + 24) = v16;
  *(void *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v11;
  *(void *)(a2 + 56) = v13;
  *(void *)(a2 + 64) = v12;
  *(unsigned char *)(a2 + 72) = v14;
  *(void *)(a2 + 80) = v15;
  if (v12)
  {
    id v17 = v13;
    id v18 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v19 = v11;
  }
  else
  {
    long long v24 = v16;
    id v20 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    id v21 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v22 = v11;
    id v18 = objc_msgSend(v20, sel_init);
  }
  sub_1A72BF1E8(a1, (uint64_t)v7, (uint64_t *)&unk_1E96F2370);
  id v23 = sub_1A7384020((uint64_t)v18, (uint64_t)v7);

  *(void *)(a2 + 64) = v23;
}

uint64_t REMTestStorePopulator.TestCustomSmartList.dateRange(from:to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  id v80 = (char *)a2;
  uint64_t v73 = a3;
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB703D70);
  uint64_t v5 = MEMORY[0x1F4188790](v74);
  uint64_t v77 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v60 - v7;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7058C8);
  MEMORY[0x1F4188790](v69);
  id v71 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F2370);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v78 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v79 = (uint64_t)&v60 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  id v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v60 - v18;
  uint64_t v20 = sub_1A7571B60();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  id v82 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v60 - v24;
  uint64_t v26 = *v3;
  uint64_t v70 = v3[1];
  uint64_t v64 = v3[2];
  uint64_t v65 = v26;
  uint64_t v72 = v3[3];
  uint64_t v63 = v3[4];
  uint64_t v27 = (void *)v3[6];
  uint64_t v75 = v3[5];
  unint64_t v76 = v27;
  uint64_t v28 = (void *)v3[7];
  uint64_t v66 = (void *)v3[8];
  id v67 = v28;
  int v62 = *((unsigned __int8 *)v3 + 72);
  uint64_t v68 = v3[10];
  swift_bridgeObjectRetain();
  Date.init(testing_allDayParsedFrom:)(a1, v19);
  uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v29(v19, 1, v20) == 1) {
    goto LABEL_9;
  }
  unsigned int v81 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v81(v25, v19, v20);
  swift_bridgeObjectRetain();
  Date.init(testing_allDayParsedFrom:)((uint64_t)v80, v17);
  if (v29(v17, 1, v20) == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    goto LABEL_11;
  }
  id v19 = v82;
  v81(v82, v17, v20);
  sub_1A73E0560((unint64_t *)&qword_1EB7057C8, MEMORY[0x1E4F27928]);
  if ((sub_1A75725A0() & 1) == 0)
  {
    __break(1u);
LABEL_9:
    id v17 = v19;
LABEL_11:
    sub_1A72CB560((uint64_t)v17, &qword_1EB704C60);
    uint64_t result = sub_1A7573840();
    __break(1u);
    return result;
  }
  uint64_t v30 = v74;
  uint64_t v31 = &v8[*(int *)(v74 + 48)];
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  id v80 = v25;
  v32(v8, v25, v20);
  uint64_t v61 = v31;
  v32(v31, v19, v20);
  uint64_t v33 = v77;
  uint64_t v34 = &v77[*(int *)(v30 + 48)];
  v32(v77, v8, v20);
  v32(v34, v31, v20);
  uint64_t v35 = (uint64_t)v71;
  uint64_t v36 = v81;
  v81(v71, v33, v20);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v21 + 8);
  v37(v34, v20);
  uint64_t v38 = *(int *)(v30 + 48);
  uint64_t v39 = v73;
  uint64_t v40 = &v33[v38];
  v36(v33, v8, v20);
  v36(v40, v61, v20);
  v36((char *)(v35 + *(int *)(v69 + 36)), v40, v20);
  unsigned int v81 = (void (*)(char *, char *, uint64_t))v37;
  v37(v33, v20);
  uint64_t v41 = v79;
  sub_1A734E5D8(v35, v79, (uint64_t *)&unk_1EB7058C8);
  uint64_t v42 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 0, 1, v42);
  uint64_t v43 = v66;
  uint64_t v44 = v70;
  *(void *)uint64_t v39 = v65;
  *(void *)(v39 + 8) = v44;
  uint64_t v45 = v72;
  *(void *)(v39 + 16) = v64;
  *(void *)(v39 + 24) = v45;
  uint64_t v47 = v75;
  id v46 = v76;
  *(void *)(v39 + 32) = v63;
  *(void *)(v39 + 40) = v47;
  uint64_t v48 = v67;
  uint64_t v49 = v68;
  *(void *)(v39 + 48) = v46;
  *(void *)(v39 + 56) = v48;
  *(void *)(v39 + 64) = v43;
  *(unsigned char *)(v39 + 72) = v62;
  *(void *)(v39 + 80) = v49;
  if (v43)
  {
    id v50 = v48;
    id v51 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v52 = v46;
  }
  else
  {
    uint64_t v53 = v48;
    uint64_t v77 = (char *)objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    id v54 = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v55 = v46;
    id v51 = objc_msgSend(v77, sel_init);
  }
  uint64_t v56 = v78;
  sub_1A72BF1E8(v41, v78, (uint64_t *)&unk_1E96F2370);
  id v57 = sub_1A7384020((uint64_t)v51, v56);

  *(void *)(v39 + 64) = v57;
  sub_1A72CB560(v41, (uint64_t *)&unk_1E96F2370);
  uint64_t v58 = (uint64_t (*)(char *, uint64_t))v81;
  ((void (*)(char *, uint64_t))v81)(v82, v20);
  return v58(v80, v20);
}

void REMTestStorePopulator.TestCustomSmartList.time(_:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v4 = *a1;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 40);
  uint64_t v8 = *(void **)(v2 + 48);
  uint64_t v10 = *(void **)(v2 + 56);
  uint64_t v9 = *(void **)(v2 + 64);
  char v11 = *(unsigned char *)(v2 + 72);
  uint64_t v12 = *(void *)(v2 + 80);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v10;
  *(void *)(a2 + 64) = v9;
  *(unsigned char *)(a2 + 72) = v11;
  *(void *)(a2 + 80) = v12;
  if (v9)
  {
    id v13 = v10;
    id v14 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = v8;
  }
  else
  {
    id v16 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    id v17 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v18 = v8;
    id v14 = objc_msgSend(v16, sel_init);
  }
  unsigned __int8 v20 = v4;
  id v19 = sub_1A73842B4((uint64_t)v14, &v20);

  *(void *)(a2 + 64) = v19;
}

void REMTestStorePopulator.TestCustomSmartList.priorities(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 40);
  uint64_t v8 = *(void **)(v2 + 48);
  uint64_t v10 = *(void **)(v2 + 56);
  uint64_t v9 = *(void **)(v2 + 64);
  char v11 = *(unsigned char *)(v2 + 72);
  uint64_t v12 = *(void *)(v2 + 80);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v10;
  *(void *)(a2 + 64) = v9;
  *(unsigned char *)(a2 + 72) = v11;
  *(void *)(a2 + 80) = v12;
  if (v9)
  {
    id v13 = v10;
    id v14 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = v8;
  }
  else
  {
    id v16 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    id v17 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v18 = v8;
    id v14 = objc_msgSend(v16, sel_init);
  }
  swift_bridgeObjectRetain();
  id v19 = sub_1A7384524((uint64_t)v14, a1);

  *(void *)(a2 + 64) = v19;
}

void REMTestStorePopulator.TestCustomSmartList.flagged(_:)(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 40);
  uint64_t v8 = *(void **)(v2 + 48);
  uint64_t v10 = *(void **)(v2 + 56);
  uint64_t v9 = *(void **)(v2 + 64);
  char v11 = *(unsigned char *)(v2 + 72);
  uint64_t v12 = *(void *)(v2 + 80);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v10;
  *(void *)(a2 + 64) = v9;
  *(unsigned char *)(a2 + 72) = v11;
  *(void *)(a2 + 80) = v12;
  if (v9)
  {
    id v13 = v10;
    id v14 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = v8;
  }
  else
  {
    id v16 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    id v17 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v18 = v8;
    id v14 = objc_msgSend(v16, sel_init);
  }
  id v19 = sub_1A7384784((uint64_t)v14, a1);

  *(void *)(a2 + 64) = v19;
}

void REMTestStorePopulator.TestCustomSmartList.location(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v25 = *(void *)a1;
  uint64_t v22 = *(void *)(a1 + 24);
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v20 = *(void *)(a1 + 40);
  uint64_t v21 = *(void *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 48);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + 40);
  uint64_t v7 = *(void **)(v2 + 48);
  uint64_t v9 = *(void **)(v2 + 56);
  uint64_t v10 = *(void **)(v2 + 64);
  char v11 = *(unsigned char *)(v2 + 72);
  uint64_t v12 = *(void *)(v2 + 80);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(void *)(a2 + 40) = v8;
  *(void *)(a2 + 48) = v7;
  *(void *)(a2 + 56) = v9;
  *(void *)(a2 + 64) = v10;
  *(unsigned char *)(a2 + 72) = v11;
  *(void *)(a2 + 80) = v12;
  if (v10)
  {
    id v13 = v9;
    id v14 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = v7;
  }
  else
  {
    id v16 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    id v17 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v18 = v7;
    id v14 = objc_msgSend(v16, sel_init);
  }
  *(void *)&long long v26 = v25;
  *((void *)&v26 + 1) = v24;
  uint64_t v27 = v23;
  uint64_t v28 = v22;
  uint64_t v29 = v21;
  uint64_t v30 = v20;
  char v31 = v4;
  sub_1A7383844(v25, v24, v23, v22, v21, v20, v4);
  id v19 = sub_1A73849F0((uint64_t)v14, &v26);

  *(void *)(a2 + 64) = v19;
}

void REMTestStorePopulator.TestCustomSmartList.operation(_:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v4 = *a1;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 40);
  uint64_t v8 = *(void **)(v2 + 48);
  uint64_t v10 = *(void **)(v2 + 56);
  uint64_t v9 = *(void **)(v2 + 64);
  char v11 = *(unsigned char *)(v2 + 72);
  uint64_t v12 = *(void *)(v2 + 80);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v10;
  *(void *)(a2 + 64) = v9;
  *(unsigned char *)(a2 + 72) = v11;
  *(void *)(a2 + 80) = v12;
  if (v9)
  {
    id v13 = v10;
    id v14 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = v8;
  }
  else
  {
    id v16 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    id v17 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v18 = v8;
    id v14 = objc_msgSend(v16, sel_init);
  }
  unsigned __int8 v20 = v4;
  id v19 = sub_1A7383B48((uint64_t)v14, &v20);

  *(void *)(a2 + 64) = v19;
}

id REMTestStorePopulator.TestCustomSmartList.isPinned(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 40);
  uint64_t v6 = *(void **)(v2 + 48);
  uint64_t v7 = *(void **)(v2 + 64);
  id v12 = *(id *)(v2 + 56);
  uint64_t v8 = *(void *)(v2 + 80);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v12;
  *(void *)(a2 + 64) = v7;
  *(void *)(a2 + 80) = v8;
  *(unsigned char *)(a2 + 72) = a1;
  id v9 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v6;

  return v12;
}

void __swiftcall REMTestStorePopulator.TestTemplate.init(_:srcListName:)(ReminderKitInternal::REMTestStorePopulator::TestTemplate *__return_ptr retstr, Swift::String _, Swift::String srcListName)
{
  retstr->name = _;
  retstr->srcListName = srcListName;
  retstr->shouldSaveCompleted = 0;
}

void __swiftcall REMTestStorePopulator.TestTemplate.shouldSaveCompleted(_:)(ReminderKitInternal::REMTestStorePopulator::TestTemplate *__return_ptr retstr, Swift::Bool a2)
{
  uint64_t v3 = (void *)v2[1];
  uint64_t v4 = v2[2];
  uint64_t v5 = (void *)v2[3];
  retstr->name._countAndFlagsBits = *v2;
  retstr->name._object = v3;
  retstr->srcListName._countAndFlagsBits = v4;
  retstr->srcListName._object = v5;
  retstr->shouldSaveCompleted = a2;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRetain();
}

id REMTestStorePopulator.TestTemplateContents.template.getter()
{
  return *v0;
}

id REMTestStorePopulator.TestTemplateContents.listRepresentation.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t REMTestStorePopulator.TestTemplateContents.reminderByTitle.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestReminder.init(_:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, void *a4@<X8>)
{
  uint64_t v6 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v7 = (char *)a4 + v6[6];
  uint64_t v8 = sub_1A75717A0();
  id v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  *((unsigned char *)a4 + v6[7]) = 0;
  *((unsigned char *)a4 + v6[8]) = 0;
  id v10 = (char *)a4 + v6[9];
  uint64_t v11 = sub_1A7571B60();
  id v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12((char *)a4 + v6[10], 1, 1, v11);
  *((unsigned char *)a4 + v6[11]) = 0;
  *(void *)((char *)a4 + v6[12]) = 0;
  *(void *)((char *)a4 + v6[13]) = 0;
  id v13 = (_OWORD *)((char *)a4 + v6[14]);
  *id v13 = 0u;
  v13[1] = 0u;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  *(void *)((char *)a4 + v6[15]) = MEMORY[0x1E4FBC860];
  *(void *)((char *)a4 + v6[16]) = v14;
  *(void *)((char *)a4 + v6[17]) = v14;
  *(void *)((char *)a4 + v6[18]) = v14;
  *(void *)((char *)a4 + v6[19]) = 0;
  *(void *)((char *)a4 + v6[20]) = 0;
  *(void *)((char *)a4 + v6[21]) = 0;
  *(void *)((char *)a4 + v6[22]) = v14;
  *(void *)((char *)a4 + v6[23]) = v14;
  uint64_t v15 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v9)((char *)a4 + v6[24], 1, 1, v8);
  *a4 = a1;
  a4[1] = a2;
  uint64_t result = a3(v15);
  *(void *)((char *)a4 + v6[25]) = result;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.notes(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A73E0474(v3, a3, type metadata accessor for REMTestStorePopulator.TestReminder);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.dueDateComponents(_:bypassAddingAlarm:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_1A73E0474(v3, a3, type metadata accessor for REMTestStorePopulator.TestReminder);
  uint64_t v7 = type metadata accessor for REMTestStorePopulator.TestReminder(0);
  uint64_t v8 = a3 + *(int *)(v7 + 24);
  sub_1A72CB560(v8, &qword_1EB6FFDE0);
  uint64_t v9 = sub_1A75717A0();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  *(unsigned char *)(a3 + *(int *)(v7 + 28)) = a2;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.dueDate(_:bypassAddingAlarm:)@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B60);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1A75717A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1A7571E00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  swift_bridgeObjectRetain();
  DateComponents.init(testing_parsedFrom:calendar:)(a1, (uint64_t)v10, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1A72CB560((uint64_t)v13, &qword_1EB6FFDE0);
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    unint64_t v22 = 0xD000000000000019;
    unint64_t v23 = 0x80000001A75A1950;
    sub_1A7572740();
    uint64_t result = sub_1A7573840();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    sub_1A73E0474(v4, a3, type metadata accessor for REMTestStorePopulator.TestReminder);
    uint64_t v19 = type metadata accessor for REMTestStorePopulator.TestReminder(0);
    uint64_t v20 = a3 + *(int *)(v19 + 24);
    sub_1A72CB560(v20, &qword_1EB6FFDE0);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v20, v17, v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
    *(unsigned char *)(a3 + *(int *)(v19 + 28)) = a2 & 1;
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.alarmDate(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B60);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A75717A0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A7571E00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
  swift_bridgeObjectRetain();
  DateComponents.init(testing_parsedFrom:calendar:)(a1, (uint64_t)v7, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1A72CB560((uint64_t)v10, &qword_1EB6FFDE0);
    unint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    unint64_t v21 = 0xD00000000000001BLL;
    unint64_t v22 = 0x80000001A75A1970;
    sub_1A7572740();
    uint64_t result = sub_1A7573840();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_1A73E0474(v2, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
    id v16 = objc_allocWithZone(MEMORY[0x1E4F94A78]);
    id v17 = (void *)sub_1A75716B0();
    id v18 = objc_msgSend(v16, sel_initWithDateComponents_, v17);

    uint64_t v19 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 84);
    *(void *)(a2 + v19) = v18;
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.recurrenceRule(frequency:interval:end:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = v11;
  sub_1A73E0474(v12, a9, type metadata accessor for REMTestStorePopulator.TestReminder);
  uint64_t v19 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 88);
  uint64_t v20 = *(void **)(a9 + v19);
  swift_bridgeObjectRetain();
  id v21 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A72AD4AC(0, v20[2] + 1, 1, v20);
    uint64_t v20 = (void *)result;
  }
  unint64_t v24 = v20[2];
  unint64_t v23 = v20[3];
  if (v24 >= v23 >> 1)
  {
    uint64_t result = (uint64_t)sub_1A72AD4AC((void *)(v23 > 1), v24 + 1, 1, v20);
    uint64_t v20 = (void *)result;
  }
  v20[2] = v24 + 1;
  uint64_t v25 = &v20[10 * v24];
  v25[4] = a1;
  v25[5] = a2;
  v25[6] = a3;
  v25[7] = a4;
  v25[8] = a5;
  v25[9] = a6;
  v25[10] = a7;
  v25[11] = v29;
  v25[12] = a10;
  v25[13] = a11;
  *(void *)(a9 + v19) = v20;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.isCompleted(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  sub_1A73E0474(v2, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
  uint64_t result = type metadata accessor for REMTestStorePopulator.TestReminder(0);
  *(unsigned char *)(a2 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.completedDate(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A73DC9A0(a1, a2, type metadata accessor for REMTestStorePopulator.TestReminder, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A73DA634, a3);
}

uint64_t sub_1A73DA634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A7571B60();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  Date.init(testing_parsedFrom:)(a2, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A72CB560((uint64_t)v6, &qword_1EB704C60);
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    unint64_t v14 = 0xD000000000000015;
    unint64_t v15 = 0x80000001A75A1BE0;
    sub_1A7572740();
    uint64_t result = sub_1A7573840();
    __break(1u);
  }
  else
  {
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v11(v10, v6, v7);
    uint64_t v12 = a1 + *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 36);
    sub_1A72CB560(v12, &qword_1EB704C60);
    v11((char *)v12, v10, v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
  }
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.isCompleted(on:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A73DC9A0(a1, a2, type metadata accessor for REMTestStorePopulator.TestReminder, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A73DA8B4, a3);
}

uint64_t sub_1A73DA8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A7571B60();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  Date.init(testing_parsedFrom:)(a2, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A72CB560((uint64_t)v6, &qword_1EB704C60);
    unint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    unint64_t v15 = 0xD000000000000015;
    unint64_t v16 = 0x80000001A75A1BE0;
    sub_1A7572740();
    uint64_t result = sub_1A7573840();
    __break(1u);
  }
  else
  {
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v11(v10, v6, v7);
    uint64_t v12 = type metadata accessor for REMTestStorePopulator.TestReminder(0);
    uint64_t v13 = a1 + *(int *)(v12 + 36);
    sub_1A72CB560(v13, &qword_1EB704C60);
    v11((char *)v13, v10, v7);
    uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    *(unsigned char *)(a1 + *(int *)(v12 + 32)) = 1;
  }
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.creationDate(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A73DC9A0(a1, a2, type metadata accessor for REMTestStorePopulator.TestReminder, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A73DAB4C, a3);
}

uint64_t sub_1A73DAB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A7571B60();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  Date.init(testing_parsedFrom:)(a2, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A72CB560((uint64_t)v6, &qword_1EB704C60);
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    unint64_t v14 = 0xD000000000000015;
    unint64_t v15 = 0x80000001A75A1BE0;
    sub_1A7572740();
    uint64_t result = sub_1A7573840();
    __break(1u);
  }
  else
  {
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v11(v10, v6, v7);
    uint64_t v12 = a1 + *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 40);
    sub_1A72CB560(v12, &qword_1EB704C60);
    v11((char *)v12, v10, v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
  }
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.isFlagged(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  sub_1A73E0474(v2, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
  uint64_t result = type metadata accessor for REMTestStorePopulator.TestReminder(0);
  *(unsigned char *)(a2 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.priority(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A73E0474(v2, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
  uint64_t result = type metadata accessor for REMTestStorePopulator.TestReminder(0);
  *(void *)(a2 + *(int *)(result + 48)) = a1;
  return result;
}

void REMTestStorePopulator.TestReminder.contactRepresentation(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A73E0474(v2, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
  uint64_t v5 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 52);
  uint64_t v6 = *(void **)(a2 + v5);
  id v7 = a1;

  *(void *)(a2 + v5) = a1;
}

uint64_t REMTestStorePopulator.TestReminder.assignment(assignee:originator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_1A73E0474(v5, a5, type metadata accessor for REMTestStorePopulator.TestReminder);
  uint64_t v11 = (uint64_t *)(a5 + *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 56));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A73E04FC(v12, v13);
  *uint64_t v11 = a1;
  v11[1] = a2;
  v11[2] = a3;
  v11[3] = a4;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.imageAttachment(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A75719C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment(0);
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v31 - v12;
  CFURLRef v14 = (const __CFURL *)sub_1A75718E0();
  unint64_t v15 = CGImageSourceCreateWithURL(v14, 0);

  if (!v15) {
    goto LABEL_26;
  }
  uint64_t v33 = v5;
  uint64_t v34 = a1;
  v31[0] = v7;
  uint64_t v16 = a2;
  CFDictionaryRef v17 = CGImageSourceCopyPropertiesAtIndex(v15, 0, 0);
  if (!v17)
  {

LABEL_25:
    id v7 = (char *)v31[0];
    uint64_t v5 = v33;
    a1 = v34;
LABEL_26:
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    unint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    unint64_t v40 = 0xD000000000000024;
    unint64_t v41 = 0x80000001A75A1990;
    sub_1A73E0560(&qword_1E96F2CE8, MEMORY[0x1E4F276F0]);
    sub_1A7573BC0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A7573840();
    __break(1u);
    return result;
  }
  CFDictionaryRef v18 = v17;
  id v19 = (id)*MEMORY[0x1E4F2FD00];
  if ([(__CFDictionary *)v18 __swift_objectForKeyedSubscript:v19])
  {
    sub_1A7573330();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  uint64_t v35 = v15;
  sub_1A734E5D8((uint64_t)&v38, (uint64_t)&v40, &qword_1EB705938);
  if (!v42)
  {

    sub_1A72CB560((uint64_t)&v40, &qword_1EB705938);
    goto LABEL_25;
  }
  uint64_t v36 = v4;
  sub_1A72BEFEC(0, (unint64_t *)&unk_1E96F3860);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_23:
    goto LABEL_24;
  }
  uint64_t v20 = v37;

  id v21 = (id)*MEMORY[0x1E4F2FCE8];
  if ([(__CFDictionary *)v18 __swift_objectForKeyedSubscript:v21])
  {
    sub_1A7573330();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  uint64_t v22 = v16;
  sub_1A734E5D8((uint64_t)&v38, (uint64_t)&v40, &qword_1EB705938);
  if (!v42)
  {

    sub_1A72CB560((uint64_t)&v40, &qword_1EB705938);
LABEL_24:
    uint64_t v4 = v36;
    goto LABEL_25;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_23;
  }
  unint64_t v23 = v37;

  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v13, v34, v36);
  id v24 = objc_msgSend(v20, sel_integerValue);
  id v25 = objc_msgSend(v23, sel_integerValue);
  *(void *)&v13[*(int *)(v8 + 20)] = v24;
  *(void *)&v13[*(int *)(v8 + 24)] = v25;
  sub_1A73E0474(v31[1], v16, type metadata accessor for REMTestStorePopulator.TestReminder);
  sub_1A73E0474((uint64_t)v13, (uint64_t)v11, type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment);
  uint64_t v26 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 60);
  unint64_t v27 = *(void *)(v22 + v26);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v27 = sub_1A72AD5D0(0, *(void *)(v27 + 16) + 1, 1, v27);
  }
  unint64_t v29 = *(void *)(v27 + 16);
  unint64_t v28 = *(void *)(v27 + 24);
  if (v29 >= v28 >> 1) {
    unint64_t v27 = sub_1A72AD5D0(v28 > 1, v29 + 1, 1, v27);
  }
  *(void *)(v27 + 16) = v29 + 1;
  sub_1A73E05C8((uint64_t)v11, v27+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v29, type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment);

  *(void *)(v22 + v26) = v27;
  return sub_1A73E0630((uint64_t)v13, type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment);
}

uint64_t REMTestStorePopulator.TestReminder.unDedupedImageAttachment(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A75719C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment(0);
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v31 - v12;
  CFURLRef v14 = (const __CFURL *)sub_1A75718E0();
  unint64_t v15 = CGImageSourceCreateWithURL(v14, 0);

  if (!v15) {
    goto LABEL_26;
  }
  uint64_t v33 = v5;
  uint64_t v34 = a1;
  v31[0] = v7;
  uint64_t v16 = a2;
  CFDictionaryRef v17 = CGImageSourceCopyPropertiesAtIndex(v15, 0, 0);
  if (!v17)
  {

LABEL_25:
    id v7 = (char *)v31[0];
    uint64_t v5 = v33;
    a1 = v34;
LABEL_26:
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    unint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    unint64_t v40 = 0xD000000000000024;
    unint64_t v41 = 0x80000001A75A1990;
    sub_1A73E0560(&qword_1E96F2CE8, MEMORY[0x1E4F276F0]);
    sub_1A7573BC0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A7573840();
    __break(1u);
    return result;
  }
  CFDictionaryRef v18 = v17;
  id v19 = (id)*MEMORY[0x1E4F2FD00];
  if ([(__CFDictionary *)v18 __swift_objectForKeyedSubscript:v19])
  {
    sub_1A7573330();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  uint64_t v35 = v15;
  sub_1A734E5D8((uint64_t)&v38, (uint64_t)&v40, &qword_1EB705938);
  if (!v42)
  {

    sub_1A72CB560((uint64_t)&v40, &qword_1EB705938);
    goto LABEL_25;
  }
  uint64_t v36 = v4;
  sub_1A72BEFEC(0, (unint64_t *)&unk_1E96F3860);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_23:
    goto LABEL_24;
  }
  uint64_t v20 = v37;

  id v21 = (id)*MEMORY[0x1E4F2FCE8];
  if ([(__CFDictionary *)v18 __swift_objectForKeyedSubscript:v21])
  {
    sub_1A7573330();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  uint64_t v22 = v16;
  sub_1A734E5D8((uint64_t)&v38, (uint64_t)&v40, &qword_1EB705938);
  if (!v42)
  {

    sub_1A72CB560((uint64_t)&v40, &qword_1EB705938);
LABEL_24:
    uint64_t v4 = v36;
    goto LABEL_25;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_23;
  }
  unint64_t v23 = v37;

  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v13, v34, v36);
  id v24 = objc_msgSend(v20, sel_integerValue);
  id v25 = objc_msgSend(v23, sel_integerValue);
  *(void *)&v13[*(int *)(v8 + 20)] = v24;
  *(void *)&v13[*(int *)(v8 + 24)] = v25;
  sub_1A73E0474(v31[1], v16, type metadata accessor for REMTestStorePopulator.TestReminder);
  sub_1A73E0474((uint64_t)v13, (uint64_t)v11, type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment);
  uint64_t v26 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 64);
  unint64_t v27 = *(void *)(v22 + v26);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v27 = sub_1A72AD604(0, *(void *)(v27 + 16) + 1, 1, v27);
  }
  unint64_t v29 = *(void *)(v27 + 16);
  unint64_t v28 = *(void *)(v27 + 24);
  if (v29 >= v28 >> 1) {
    unint64_t v27 = sub_1A72AD604(v28 > 1, v29 + 1, 1, v27);
  }
  *(void *)(v27 + 16) = v29 + 1;
  sub_1A73E05C8((uint64_t)v11, v27+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v29, type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment);

  *(void *)(v22 + v26) = v27;
  return sub_1A73E0630((uint64_t)v13, type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment);
}

uint64_t REMTestStorePopulator.TestReminder.urlAttachment(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t v13 = sub_1A75719C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, a1, v13);
  sub_1A73E0474(v3, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
  sub_1A73E0474((uint64_t)v12, (uint64_t)v10, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment);
  uint64_t v14 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 68);
  unint64_t v15 = *(void *)(a2 + v14);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v15 = sub_1A72AD638(0, *(void *)(v15 + 16) + 1, 1, v15);
  }
  unint64_t v17 = *(void *)(v15 + 16);
  unint64_t v16 = *(void *)(v15 + 24);
  if (v17 >= v16 >> 1) {
    unint64_t v15 = sub_1A72AD638(v16 > 1, v17 + 1, 1, v15);
  }
  *(void *)(v15 + 16) = v17 + 1;
  sub_1A73E05C8((uint64_t)v10, v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v17, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment);
  *(void *)(a2 + v14) = v15;
  return sub_1A73E0630((uint64_t)v12, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment);
}

uint64_t REMTestStorePopulator.TestReminder.hashtag(_:type:creationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v27 = a2;
  uint64_t v25 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A7571B60();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag(0);
  uint64_t v28 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A73E0474(v5, a5, type metadata accessor for REMTestStorePopulator.TestReminder);
  sub_1A72BF1E8(a4, (uint64_t)v10, &qword_1EB704C60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1A7571B50();
    sub_1A72CB560((uint64_t)v10, &qword_1EB704C60);
    CFDictionaryRef v18 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  }
  else
  {
    CFDictionaryRef v18 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v18(v14, v10, v11);
  }
  uint64_t v19 = v27;
  *(void *)unint64_t v17 = v25;
  *((void *)v17 + 1) = v19;
  *((void *)v17 + 2) = v26;
  v18(&v17[*(int *)(v15 + 24)], v14, v11);
  uint64_t v20 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 72);
  unint64_t v21 = *(void *)(a5 + v20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v21 = sub_1A72AD66C(0, *(void *)(v21 + 16) + 1, 1, v21);
  }
  unint64_t v23 = *(void *)(v21 + 16);
  unint64_t v22 = *(void *)(v21 + 24);
  if (v23 >= v22 >> 1) {
    unint64_t v21 = sub_1A72AD66C(v22 > 1, v23 + 1, 1, v21);
  }
  *(void *)(v21 + 16) = v23 + 1;
  uint64_t result = sub_1A73E05C8((uint64_t)v17, v21+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v23, type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag);
  *(void *)(a5 + v20) = v21;
  return result;
}

void REMTestStorePopulator.TestReminder.location(_:proximity:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A73E0474(v3, a3, type metadata accessor for REMTestStorePopulator.TestReminder);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94A80]), sel_initWithStructuredLocation_proximity_, a1, a2);
  uint64_t v8 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 76);

  *(void *)(a3 + v8) = v7;
}

void REMTestStorePopulator.TestReminder.location(title:latitude:longitude:radius:proximity:)(uint64_t a1@<X2>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v6 = v5;
  sub_1A73E0474(v6, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
  id v12 = objc_allocWithZone(MEMORY[0x1E4F94CD0]);
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithTitle_, v13);

  objc_msgSend(v14, sel_setLatitude_, a3);
  objc_msgSend(v14, sel_setLongitude_, a4);
  objc_msgSend(v14, sel_setRadius_, a5);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94A80]), sel_initWithStructuredLocation_proximity_, v14, a1);

  uint64_t v16 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 76);
  *(void *)(a2 + v16) = v15;
}

void REMTestStorePopulator.TestReminder.vehicle(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A73E0474(v2, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94A90]), sel_initWithEvent_, a1);
  uint64_t v6 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 80);

  *(void *)(a2 + v6) = v5;
}

uint64_t REMTestStorePopulator.TestReminder.dueDateDeltaAlert(_:creationDate:acknowledgedDate:minimumSupportedAppVersion:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert(0);
  uint64_t v13 = (int *)(v12 - 8);
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (uint64_t *)((char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A73E0474(v6, a5, type metadata accessor for REMTestStorePopulator.TestReminder);
  unint64_t v17 = (char *)v16 + v13[7];
  uint64_t v18 = sub_1A7571B60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a2, v18);
  sub_1A72BF1E8(a3, (uint64_t)v16 + v13[8], &qword_1EB704C60);
  *uint64_t v16 = a1;
  *(void *)((char *)v16 + v13[9]) = a4;
  uint64_t v19 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 92);
  unint64_t v20 = *(void *)(a5 + v19);
  id v21 = a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v20 = sub_1A72AD6A0(0, *(void *)(v20 + 16) + 1, 1, v20);
  }
  unint64_t v23 = *(void *)(v20 + 16);
  unint64_t v22 = *(void *)(v20 + 24);
  if (v23 >= v22 >> 1) {
    unint64_t v20 = sub_1A72AD6A0(v22 > 1, v23 + 1, 1, v20);
  }
  *(void *)(v20 + 16) = v23 + 1;
  uint64_t result = sub_1A73E05C8((uint64_t)v16, v20+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v23, type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert);
  *(void *)(a5 + v19) = v20;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.alternativeDueDate_forCalendar(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B60);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A75717A0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1A7571E00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  swift_bridgeObjectRetain();
  DateComponents.init(testing_parsedFrom:calendar:)(a1, (uint64_t)v8, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1A72CB560((uint64_t)v11, &qword_1EB6FFDE0);
    v19[0] = 0;
    v19[1] = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    sub_1A7572740();
    uint64_t result = sub_1A7573840();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_1A73E0474(v3, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
    uint64_t v17 = a2 + *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 96);
    sub_1A72CB560(v17, &qword_1EB6FFDE0);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v17, v15, v12);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return result;
}

uint64_t REMTestStorePopulator.TestListSection.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
  a3[2] = 0;
  a3[3] = 0;
  uint64_t v7 = (char *)a3 + *(int *)(v6 + 24);
  uint64_t v8 = sub_1A7571B60();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *a3 = a1;
  a3[1] = a2;
  *(void *)((char *)a3 + *(int *)(v6 + 28)) = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t REMTestStorePopulator.TestListSection.init(_:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, void *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
  a4[2] = 0;
  a4[3] = 0;
  uint64_t v9 = (char *)a4 + *(int *)(v8 + 24);
  uint64_t v10 = sub_1A7571B60();
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *a4 = a1;
  a4[1] = a2;
  uint64_t result = a3(v11);
  *(void *)((char *)a4 + *(int *)(v8 + 28)) = result;
  return result;
}

uint64_t REMTestStorePopulator.TestListSection.canonicalName(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A73E0474(v3, a3, type metadata accessor for REMTestStorePopulator.TestListSection);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  return result;
}

uint64_t REMTestStorePopulator.TestListSection.creationDate(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A73DC9A0(a1, a2, type metadata accessor for REMTestStorePopulator.TestListSection, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A73DCA0C, a3);
}

uint64_t sub_1A73DC9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  sub_1A73E0474(v5, a5, a3);

  return a4(a5, a1, a2);
}

uint64_t sub_1A73DCA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A7571B60();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  Date.init(testing_parsedFrom:)(a2, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A72CB560((uint64_t)v6, &qword_1EB704C60);
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    unint64_t v14 = 0xD000000000000015;
    unint64_t v15 = 0x80000001A75A1BE0;
    sub_1A7572740();
    uint64_t result = sub_1A7573840();
    __break(1u);
  }
  else
  {
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v11(v10, v6, v7);
    uint64_t v12 = a1 + *(int *)(type metadata accessor for REMTestStorePopulator.TestListSection(0) + 24);
    sub_1A72CB560(v12, &qword_1EB704C60);
    v11((char *)v12, v10, v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
  }
  return result;
}

ReminderKitInternal::REMTestStorePopulator::TestCustomSmartListSection __swiftcall REMTestStorePopulator.TestCustomSmartListSection.init(_:)(ReminderKitInternal::REMTestStorePopulator::TestCustomSmartListSection result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1A73DCC68(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73DCE1C(a1, a2, a3, (SEL *)&selRef_name);
}

Swift::String __swiftcall REMTestStoreDumpFormatter.formatAccount(_:)(REMAccount *a1)
{
  uint64_t v3 = sub_1A73DCE1C(a1, v1, v2, (SEL *)&selRef_name);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

Swift::String __swiftcall REMTestStoreDumpFormatter.formatGroup(_:)(REMList *a1)
{
  uint64_t v3 = sub_1A73DCE1C(a1, v1, v2, (SEL *)&selRef_name);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

Swift::String __swiftcall REMTestStoreDumpFormatter.formatList(_:)(REMList *a1)
{
  uint64_t v3 = sub_1A73DCE1C(a1, v1, v2, (SEL *)&selRef_name);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

uint64_t sub_1A73DCC98(void *a1)
{
  id v1 = objc_msgSend(a1, sel_name);
  uint64_t v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v2;
}

Swift::tuple_description_String_shouldDumpContents_Bool __swiftcall REMTestStoreDumpFormatter.formatCustomSmartList(_:)(REMSmartList *a1)
{
  id v1 = [(REMSmartList *)a1 name];
  uint64_t v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v4 = v3;

  uint64_t v5 = v2;
  uint64_t v6 = v4;
  Swift::Bool v7 = 1;
  result.description._object = v6;
  result.description._countAndFlagsBits = v5;
  result.shouldDumpContents = v7;
  return result;
}

uint64_t sub_1A73DCD48(void *a1)
{
  id v1 = objc_msgSend(a1, sel_titleAsString);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v3;
}

Swift::String __swiftcall REMTestStoreDumpFormatter.formatReminder(_:)(REMReminder *a1)
{
  id v1 = [(REMReminder *)a1 titleAsString];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    unint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  uint64_t v6 = v3;
  Swift::Bool v7 = (void *)v5;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t sub_1A73DCE10(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73DCE1C(a1, a2, a3, (SEL *)&selRef_displayName);
}

uint64_t sub_1A73DCE1C(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v4 = [a1 *a4];
  uint64_t v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v5;
}

uint64_t REMTestStoreDumpFormatter.formatSection(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73DCE1C(a1, a2, a3, (SEL *)&selRef_displayName);
}

uint64_t sub_1A73DCE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  Swift::Bool v7 = (void *)(a4 + 16);
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_beginAccess();
  uint64_t v8 = *(void **)(a4 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a4 + 16) = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v8 = sub_1A72AC148(0, v8[2] + 1, 1, v8);
    void *v7 = v8;
  }
  unint64_t v11 = v8[2];
  unint64_t v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t v8 = sub_1A72AC148((void *)(v10 > 1), v11 + 1, 1, v8);
    void *v7 = v8;
  }
  v8[2] = v11 + 1;
  uint64_t v12 = &v8[2 * v11];
  v12[4] = a5;
  v12[5] = a6;
  return swift_endAccess();
}

void *sub_1A73DCF70(uint64_t a1)
{
  v36[1] = *(id *)MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F1148);
  uint64_t v2 = sub_1A75738F0();
  uint64_t v3 = (void *)v2;
  int64_t v4 = 0;
  uint64_t v34 = a1;
  uint64_t v35 = (void *)v2;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v31 = v6;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v33 = v2 + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v34 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = *(void **)(*(void *)(v34 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id v20 = v19;
    id v21 = objc_msgSend(v20, sel_store);
    id v22 = objc_msgSend(v20, sel_objectID);
    v36[0] = 0;
    id v23 = objc_msgSend(v21, sel_fetchAccountWithObjectID_error_, v22, v36);

    if (!v23) {
      break;
    }
    id v24 = v36[0];

    *(void *)(v33 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v3 = v35;
    uint64_t v25 = (void *)(v35[6] + 16 * i);
    *uint64_t v25 = v17;
    v25[1] = v18;
    *(void *)(v35[7] + 8 * i) = v23;
    uint64_t v26 = v35[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
    }
    v35[2] = v28;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_26;
    }
    if (v13 >= v32) {
      return v3;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v32) {
        return v3;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v32) {
          return v3;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v4);
        if (!v14)
        {
          int64_t v15 = v13 + 3;
          if (v15 >= v32) {
            return v3;
          }
          unint64_t v14 = *(void *)(v31 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              int64_t v4 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_27;
              }
              if (v4 >= v32) {
                return v3;
              }
              unint64_t v14 = *(void *)(v31 + 8 * v4);
              ++v15;
              if (v14) {
                goto LABEL_18;
              }
            }
          }
          int64_t v4 = v15;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v14 - 1) & v14;
  }
  id v29 = v36[0];
  sub_1A7571850();

  swift_willThrow();
  swift_bridgeObjectRelease();
  uint64_t v3 = v35;
  swift_release();
  return v3;
}

void sub_1A73DD254(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2DB8);
  uint64_t v2 = sub_1A75738F0();
  uint64_t v3 = (void *)v2;
  int64_t v4 = 0;
  uint64_t v30 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v27 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v28 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v29 = v2 + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v9 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    unint64_t v14 = (uint64_t *)(*(void *)(v30 + 48) + 16 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = *(void **)(*(void *)(v30 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id v18 = v17;
    id v19 = objc_msgSend(v18, sel_attachmentContext);
    if (v19)
    {
      id v20 = v19;
      id v21 = objc_msgSend(v19, sel_attachments);

      sub_1A72BEFEC(0, &qword_1E96F2DC0);
      uint64_t v22 = sub_1A7572A10();

      id v18 = v21;
    }
    else
    {
      uint64_t v22 = MEMORY[0x1E4FBC860];
    }

    *(void *)(v29 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    id v23 = (void *)(v3[6] + 16 * i);
    *id v23 = v15;
    v23[1] = v16;
    *(void *)(v3[7] + 8 * i) = v22;
    uint64_t v24 = v3[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v3[2] = v26;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_27;
    }
    if (v11 >= v28) {
      return;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v28) {
        return;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v28) {
          return;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v28) {
    return;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v28) {
      return;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_18;
    }
  }
LABEL_28:
  __break(1u);
}

void sub_1A73DD4CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v19 = a1;
  uint64_t v6 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    id v18 = *(id *)(*(void *)(a2 + 56) + 8 * i);
    id v17 = v18;
    sub_1A73D46DC(&v19, (uint64_t *)&v18, a3);
    if (v3)
    {
      swift_release();

      swift_bridgeObjectRelease();
      return;
    }

    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v10) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v10) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v10) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v10) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 4;
  if (v11 + 4 >= v10)
  {
LABEL_26:
    swift_release();
    return;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
LABEL_16:
    int64_t v11 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v10) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
}

void sub_1A73DD680(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = a2;
  id v24 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A75733C0();
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
    sub_1A72D8FDC();
    sub_1A7572CD0();
    uint64_t v6 = v23[1];
    uint64_t v22 = v23[2];
    uint64_t v7 = v23[3];
    uint64_t v8 = v23[4];
    unint64_t v9 = v23[5];
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v22 = a2 + 56;
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = v11;
    uint64_t v8 = 0;
  }
  int64_t v21 = (unint64_t)(v7 + 64) >> 6;
  if ((v6 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!sub_1A7573440()) {
    goto LABEL_35;
  }
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v14 = (id)v23[0];
  swift_unknownObjectRelease();
  int64_t v15 = v8;
  uint64_t v16 = v9;
  if (!v14) {
    goto LABEL_35;
  }
  while (1)
  {
    v23[0] = (uint64_t)v14;
    sub_1A73D4524(&v24, v23, a3);
    if (v4)
    {

      swift_bridgeObjectRelease();
      sub_1A72D99A4();
      return;
    }

    uint64_t v8 = v15;
    unint64_t v9 = v16;
    if (v6 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v9) {
      break;
    }
    uint64_t v16 = (v9 - 1) & v9;
    unint64_t v17 = __clz(__rbit64(v9)) | (v8 << 6);
    int64_t v15 = v8;
LABEL_24:
    id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v17);
    if (!v14) {
      goto LABEL_35;
    }
  }
  int64_t v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v15 >= v21) {
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v22 + 8 * v15);
  if (v18)
  {
LABEL_23:
    uint64_t v16 = (v18 - 1) & v18;
    unint64_t v17 = __clz(__rbit64(v18)) + (v15 << 6);
    goto LABEL_24;
  }
  uint64_t v19 = v8 + 2;
  if (v8 + 2 >= v21) {
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v22 + 8 * v19);
  if (v18) {
    goto LABEL_22;
  }
  uint64_t v19 = v8 + 3;
  if (v8 + 3 >= v21) {
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v22 + 8 * v19);
  if (v18) {
    goto LABEL_22;
  }
  uint64_t v19 = v8 + 4;
  if (v8 + 4 >= v21) {
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v22 + 8 * v19);
  if (v18)
  {
LABEL_22:
    int64_t v15 = v19;
    goto LABEL_23;
  }
  int64_t v15 = v8 + 5;
  if (v8 + 5 >= v21) {
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v22 + 8 * v15);
  if (v18) {
    goto LABEL_23;
  }
  uint64_t v20 = v8 + 6;
  while (v21 != v20)
  {
    unint64_t v18 = *(void *)(v22 + 8 * v20++);
    if (v18)
    {
      int64_t v15 = v20 - 1;
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_1A72D99A4();
}

void *sub_1A73DD9A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_1A75738D0())
  {
    uint64_t v19 = v6;
    unint64_t v22 = v5 & 0xC000000000000001;
    uint64_t v7 = 4;
    unint64_t v20 = v5;
    uint64_t v21 = a3;
    while (1)
    {
      id v8 = v22 ? (id)MEMORY[0x1AD0CB800](v7 - 4, v5) : *(id *)(v5 + 8 * v7);
      unint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v11 = objc_msgSend(v8, sel_firstName);
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        unint64_t v15 = v14;
      }
      else
      {
        uint64_t v13 = 0;
        unint64_t v15 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      id v16 = objc_msgSend(v9, sel_lastName);
      if (v16)
      {
        unint64_t v17 = v16;
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      }
      swift_bridgeObjectRetain();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13 == a2 && v15 == v21)
      {
        swift_bridgeObjectRelease();
LABEL_19:
        swift_bridgeObjectRelease();
        return v9;
      }
      a3 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      unint64_t v5 = v20;
      if (a3) {
        goto LABEL_19;
      }

      ++v7;
      if (v10 == v19) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
LABEL_22:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A73DDBDC(id *__src, id *a2, unint64_t a3, void **a4, uint64_t a5)
{
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v45 = __src;
  uint64_t v44 = a4;
  if (v10 >= v12 >> 4)
  {
    if (v11 < -15) {
      goto LABEL_45;
    }
    if (a4 != a2 || &a2[2 * v13] <= a4) {
      memmove(a4, a2, 16 * v13);
    }
    id v23 = &a4[2 * v13];
    uint64_t v43 = (char *)v23;
    uint64_t v45 = v6;
    if (v7 >= v6 || v11 < 16) {
      goto LABEL_44;
    }
    id v35 = *(id *)(a5 + 104);
    id v24 = (id *)(a3 - 16);
    BOOL v25 = v6;
    while (1)
    {
      unint64_t v39 = (unint64_t)v23;
      unint64_t v41 = v24 + 2;
      uint64_t v26 = (char *)(v23 - 2);
      uint64_t v27 = *(v25 - 2);
      v25 -= 2;
      id v28 = *(v23 - 2);
      swift_bridgeObjectRetain();
      id v29 = v27;
      swift_bridgeObjectRetain();
      id v30 = objc_msgSend(v28, sel_objectID);
      id v37 = objc_msgSend(v35, sel_indexOfObject_, v30);

      id v31 = objc_msgSend(v29, sel_objectID);
      id v32 = objc_msgSend(v35, sel_indexOfObject_, v31);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      if ((uint64_t)v37 < (uint64_t)v32) {
        break;
      }
      uint64_t v43 = v26;
      BOOL v25 = v6;
      if ((unint64_t)v41 < v39 || (unint64_t)v24 >= v39)
      {
        *(_OWORD *)id v24 = *(_OWORD *)v26;
        id v23 = (id *)v26;
        goto LABEL_32;
      }
      if (v41 != (id *)v39) {
        *(_OWORD *)id v24 = *(_OWORD *)v26;
      }
      id v23 = (id *)v26;
      if (v6 <= v7) {
        goto LABEL_44;
      }
LABEL_33:
      v24 -= 2;
      uint64_t v6 = v25;
      if (v23 <= a4) {
        goto LABEL_44;
      }
    }
    id v23 = (id *)v39;
    if (v41 != v6 || v24 >= v6) {
      *(_OWORD *)id v24 = *(_OWORD *)v25;
    }
    uint64_t v45 = v25;
LABEL_32:
    if (v25 <= v7) {
      goto LABEL_44;
    }
    goto LABEL_33;
  }
  if (v8 >= -15)
  {
    if (a4 != __src || &__src[2 * v10] <= a4) {
      memmove(a4, __src, 16 * v10);
    }
    uint64_t v43 = (char *)&a4[2 * v10];
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      id v34 = *(id *)(a5 + 104);
      unint64_t v14 = a4;
      do
      {
        uint64_t v42 = v7;
        unint64_t v15 = *v14;
        id v16 = *v6;
        swift_bridgeObjectRetain();
        id v17 = v15;
        swift_bridgeObjectRetain();
        id v18 = objc_msgSend(v16, sel_objectID);
        id v40 = objc_msgSend(v34, sel_indexOfObject_, v18);

        id v19 = objc_msgSend(v17, sel_objectID);
        id v20 = objc_msgSend(v34, sel_indexOfObject_, v19);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        if ((uint64_t)v40 >= (uint64_t)v20)
        {
          uint64_t v21 = v42;
          unint64_t v22 = v6;
          if (v42 != v14) {
            *(_OWORD *)uint64_t v42 = *(_OWORD *)v14;
          }
          v14 += 2;
          uint64_t v44 = v14;
        }
        else
        {
          uint64_t v21 = v42;
          unint64_t v22 = v6 + 2;
          if (v42 < v6 || v42 >= v22 || v42 != v6) {
            *(_OWORD *)uint64_t v42 = *(_OWORD *)v6;
          }
        }
        uint64_t v7 = v21 + 2;
        if (v14 >= &a4[2 * v10]) {
          break;
        }
        uint64_t v6 = v22;
      }
      while ((unint64_t)v22 < a3);
      uint64_t v45 = v7;
    }
LABEL_44:
    sub_1A74F9810((void **)&v45, (const void **)&v44, &v43);
    return 1;
  }
LABEL_45:
  swift_release();
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

void sub_1A73DE028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  if (a3 != a2)
  {
    id v17 = *(id *)(a5 + 104);
    uint64_t v18 = *a4;
    uint64_t v5 = *a4 + 16 * a3 - 16;
LABEL_5:
    long long v6 = *(_OWORD *)(v18 + 16 * a3);
    uint64_t v7 = a1;
    uint64_t v16 = v5;
    uint64_t v20 = a3;
    while (1)
    {
      int64_t v8 = *(void **)v5;
      id v9 = (id)v6;
      swift_bridgeObjectRetain();
      id v10 = v8;
      swift_bridgeObjectRetain();
      id v11 = objc_msgSend(v9, sel_objectID);
      id v19 = objc_msgSend(v17, sel_indexOfObject_, v11);

      id v12 = objc_msgSend(v10, sel_objectID);
      id v13 = objc_msgSend(v17, sel_indexOfObject_, v12);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      if ((uint64_t)v19 >= (uint64_t)v13)
      {
LABEL_4:
        a3 = v20 + 1;
        uint64_t v5 = v16 + 16;
        if (v20 + 1 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v18) {
        break;
      }
      long long v6 = *(_OWORD *)(v5 + 16);
      *(_OWORD *)(v5 + 16) = *(_OWORD *)v5;
      *(_OWORD *)uint64_t v5 = v6;
      v5 -= 16;
      if (v20 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1A73DE1BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = a1[1];
  swift_retain_n();
  uint64_t v6 = sub_1A7573BB0();
  if (v6 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_136;
    }
    if (v5)
    {
      swift_retain();
      sub_1A73DE028(0, v5, 1, a1, a2);
    }
    swift_release_n();
    return swift_release();
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_144;
  }
  uint64_t v126 = a2;
  uint64_t v127 = v2;
  uint64_t v120 = v5;
  uint64_t v115 = v6;
  id v111 = a1;
  if (v5 < 2)
  {
    unsigned int v125 = (void **)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v114 = MEMORY[0x1E4FBC860];
    if (v5 == 1) {
      goto LABEL_13;
    }
    id v12 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_99:
    if (v14 >= 2)
    {
      uint64_t v101 = *v111;
      uint64_t v132 = *v111;
      do
      {
        unint64_t v102 = v14 - 2;
        if (v14 < 2) {
          goto LABEL_131;
        }
        if (!v101) {
          goto LABEL_143;
        }
        uint64_t v103 = *(void *)&v12[16 * v102 + 32];
        uint64_t v104 = *(void *)&v12[16 * v14 + 24];
        uint64_t v105 = (id *)(v101 + 16 * v103);
        uint64_t v106 = (id *)(v101 + 16 * *(void *)&v12[16 * v14 + 16]);
        unint64_t v107 = v101 + 16 * v104;
        swift_retain();
        sub_1A73DDBDC(v105, v106, v107, v125, v126);
        if (v127) {
          goto LABEL_111;
        }
        swift_release();
        if (v104 < v103) {
          goto LABEL_132;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v12 = sub_1A74F9DDC((uint64_t)v12);
        }
        if (v102 >= *((void *)v12 + 2)) {
          goto LABEL_133;
        }
        id v108 = &v12[16 * v102 + 32];
        *(void *)id v108 = v103;
        *((void *)v108 + 1) = v104;
        unint64_t v109 = *((void *)v12 + 2);
        if (v14 > v109) {
          goto LABEL_134;
        }
        memmove(&v12[16 * v14 + 16], &v12[16 * v14 + 32], 16 * (v109 - v14));
        *((void *)v12 + 2) = v109 - 1;
        unint64_t v14 = v109 - 1;
        uint64_t v101 = v132;
      }
      while (v109 > 2);
    }
    swift_bridgeObjectRelease();
LABEL_113:
    *(void *)(v114 + 16) = 0;
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v8 = v7 >> 1;
  uint64_t v9 = sub_1A7572A90();
  *(void *)(v9 + 16) = v8;
  uint64_t v114 = v9;
  unsigned int v125 = (void **)(v9 + 32);
LABEL_13:
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v112 = *a1 - 16;
  uint64_t v113 = *a1 + 40;
  id v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v13 = v120;
  uint64_t v133 = v11;
  while (1)
  {
    uint64_t v15 = v10 + 1;
    uint64_t v16 = v13;
    uint64_t v121 = v10;
    if (v10 + 1 < v13)
    {
      id v17 = *(void **)(v11 + 16 * v15);
      uint64_t v18 = *(void **)(v11 + 16 * v10);
      id v19 = *(void **)(a2 + 104);
      id v20 = v17;
      swift_bridgeObjectRetain();
      id v21 = v18;
      swift_bridgeObjectRetain();
      id v22 = objc_msgSend(v20, sel_objectID);
      id v122 = objc_msgSend(v19, sel_indexOfObject_, v22);

      id v23 = objc_msgSend(v21, sel_objectID);
      id v117 = v19;
      id v118 = objc_msgSend(v19, sel_indexOfObject_, v23);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      uint64_t v15 = v10 + 2;
      if (v10 + 2 < v16)
      {
        uint64_t v24 = v113 + 16 * v10;
        while (1)
        {
          uint64_t v25 = v15;
          uint64_t v26 = *(void **)(v24 - 24);
          id v27 = *(id *)(v24 - 8);
          swift_bridgeObjectRetain();
          id v28 = v26;
          swift_bridgeObjectRetain();
          id v29 = objc_msgSend(v27, sel_objectID);
          id v128 = objc_msgSend(v117, sel_indexOfObject_, v29);

          id v30 = objc_msgSend(v28, sel_objectID);
          id v31 = objc_msgSend(v117, sel_indexOfObject_, v30);
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          if ((uint64_t)v122 < (uint64_t)v118 == (uint64_t)v128 >= (uint64_t)v31) {
            break;
          }
          uint64_t v15 = v25 + 1;
          v24 += 16;
          uint64_t v16 = v120;
          if (v120 == v25 + 1)
          {
            uint64_t v15 = v120;
            a2 = v126;
            goto LABEL_23;
          }
        }
        a2 = v126;
        uint64_t v16 = v120;
        uint64_t v15 = v25;
LABEL_23:
        uint64_t v10 = v121;
      }
      uint64_t v11 = v133;
      if ((uint64_t)v122 < (uint64_t)v118)
      {
        if (v15 < v10) {
          goto LABEL_137;
        }
        if (v10 < v15)
        {
          id v32 = (long long *)(v112 + 16 * v15);
          uint64_t v33 = v15;
          uint64_t v34 = v10;
          id v35 = (long long *)(v133 + 16 * v10);
          do
          {
            if (v34 != --v33)
            {
              if (!v133) {
                goto LABEL_142;
              }
              long long v36 = *v35;
              *id v35 = *v32;
              *id v32 = v36;
            }
            ++v34;
            --v32;
            ++v35;
          }
          while (v34 < v33);
        }
      }
    }
    if (v15 < v16)
    {
      if (__OFSUB__(v15, v10)) {
        goto LABEL_135;
      }
      if (v15 - v10 < v115) {
        break;
      }
    }
LABEL_50:
    if (v15 < v10) {
      goto LABEL_130;
    }
    uint64_t v124 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v12 = sub_1A74F9714(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v48 = *((void *)v12 + 2);
    unint64_t v47 = *((void *)v12 + 3);
    unint64_t v14 = v48 + 1;
    uint64_t v11 = v133;
    if (v48 >= v47 >> 1)
    {
      uint64_t v100 = sub_1A74F9714((char *)(v47 > 1), v48 + 1, 1, v12);
      uint64_t v11 = v133;
      id v12 = v100;
    }
    *((void *)v12 + 2) = v14;
    uint64_t v49 = v12 + 32;
    id v50 = &v12[16 * v48 + 32];
    *(void *)id v50 = v10;
    *((void *)v50 + 1) = v124;
    if (v48)
    {
      while (1)
      {
        unint64_t v51 = v14 - 1;
        if (v14 >= 4)
        {
          uint64_t v56 = &v49[16 * v14];
          uint64_t v57 = *((void *)v56 - 8);
          uint64_t v58 = *((void *)v56 - 7);
          BOOL v62 = __OFSUB__(v58, v57);
          uint64_t v59 = v58 - v57;
          if (v62) {
            goto LABEL_119;
          }
          uint64_t v61 = *((void *)v56 - 6);
          uint64_t v60 = *((void *)v56 - 5);
          BOOL v62 = __OFSUB__(v60, v61);
          uint64_t v54 = v60 - v61;
          char v55 = v62;
          if (v62) {
            goto LABEL_120;
          }
          unint64_t v63 = v14 - 2;
          uint64_t v64 = &v49[16 * v14 - 32];
          uint64_t v66 = *(void *)v64;
          uint64_t v65 = *((void *)v64 + 1);
          BOOL v62 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          if (v62) {
            goto LABEL_122;
          }
          BOOL v62 = __OFADD__(v54, v67);
          uint64_t v68 = v54 + v67;
          if (v62) {
            goto LABEL_125;
          }
          if (v68 >= v59)
          {
            uint64_t v86 = &v49[16 * v51];
            uint64_t v88 = *(void *)v86;
            uint64_t v87 = *((void *)v86 + 1);
            BOOL v62 = __OFSUB__(v87, v88);
            uint64_t v89 = v87 - v88;
            if (v62) {
              goto LABEL_129;
            }
            BOOL v79 = v54 < v89;
            goto LABEL_87;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v80 = *((void *)v12 + 4);
            uint64_t v81 = *((void *)v12 + 5);
            BOOL v62 = __OFSUB__(v81, v80);
            uint64_t v73 = v81 - v80;
            char v74 = v62;
            goto LABEL_81;
          }
          uint64_t v53 = *((void *)v12 + 4);
          uint64_t v52 = *((void *)v12 + 5);
          BOOL v62 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          char v55 = v62;
        }
        if (v55) {
          goto LABEL_121;
        }
        unint64_t v63 = v14 - 2;
        uint64_t v69 = &v49[16 * v14 - 32];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v72 = __OFSUB__(v70, v71);
        uint64_t v73 = v70 - v71;
        char v74 = v72;
        if (v72) {
          goto LABEL_124;
        }
        uint64_t v75 = &v49[16 * v51];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v62 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v62) {
          goto LABEL_127;
        }
        if (__OFADD__(v73, v78)) {
          goto LABEL_128;
        }
        if (v73 + v78 >= v54)
        {
          BOOL v79 = v54 < v78;
LABEL_87:
          if (v79) {
            unint64_t v51 = v63;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v74) {
          goto LABEL_123;
        }
        id v82 = &v49[16 * v51];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v62 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v62) {
          goto LABEL_126;
        }
        if (v85 < v73) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v90 = v51 - 1;
        if (v51 - 1 >= v14)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_141;
        }
        uint64_t v91 = &v49[16 * v90];
        uint64_t v92 = *(void *)v91;
        unint64_t v93 = v51;
        uint64_t v94 = &v49[16 * v51];
        uint64_t v95 = *((void *)v94 + 1);
        uint64_t v96 = (id *)(v11 + 16 * *(void *)v91);
        uint64_t v131 = (id *)(v11 + 16 * *(void *)v94);
        unint64_t v97 = v11 + 16 * v95;
        a2 = v126;
        swift_retain();
        sub_1A73DDBDC(v96, v131, v97, v125, v126);
        if (v127)
        {
LABEL_111:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_113;
        }
        swift_release();
        if (v95 < v92) {
          goto LABEL_116;
        }
        if (v93 > *((void *)v12 + 2)) {
          goto LABEL_117;
        }
        unint64_t v98 = v93;
        *(void *)uint64_t v91 = v92;
        uint64_t v49 = v12 + 32;
        *(void *)&v12[16 * v90 + 40] = v95;
        unint64_t v99 = *((void *)v12 + 2);
        if (v98 >= v99) {
          goto LABEL_118;
        }
        unint64_t v14 = v99 - 1;
        memmove(v94, v94 + 16, 16 * (v99 - 1 - v98));
        *((void *)v12 + 2) = v99 - 1;
        uint64_t v11 = v133;
        if (v99 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_15:
    uint64_t v13 = v120;
    uint64_t v10 = v124;
    if (v124 >= v120) {
      goto LABEL_99;
    }
  }
  if (__OFADD__(v10, v115)) {
    goto LABEL_138;
  }
  if (v10 + v115 >= v16) {
    uint64_t v37 = v16;
  }
  else {
    uint64_t v37 = v10 + v115;
  }
  if (v37 >= v10)
  {
    if (v15 != v37)
    {
      uint64_t v116 = v12;
      uint64_t v129 = *(void **)(a2 + 104);
      uint64_t v38 = v112 + 16 * v15;
      uint64_t v119 = v37;
      do
      {
        long long v39 = *(_OWORD *)(v11 + 16 * v15);
        uint64_t v123 = v38;
        while (1)
        {
          uint64_t v40 = v15;
          unint64_t v41 = *(void **)v38;
          id v42 = (id)v39;
          swift_bridgeObjectRetain();
          id v43 = v41;
          swift_bridgeObjectRetain();
          id v44 = objc_msgSend(v42, sel_objectID);
          id v130 = objc_msgSend(v129, sel_indexOfObject_, v44);

          id v45 = objc_msgSend(v43, sel_objectID);
          id v46 = objc_msgSend(v129, sel_indexOfObject_, v45);
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          if ((uint64_t)v130 >= (uint64_t)v46) {
            break;
          }
          uint64_t v11 = v133;
          if (!v133) {
            goto LABEL_140;
          }
          uint64_t v15 = v40;
          long long v39 = *(_OWORD *)(v38 + 16);
          *(_OWORD *)(v38 + 16) = *(_OWORD *)v38;
          *(_OWORD *)uint64_t v38 = v39;
          v38 -= 16;
          if (v40 == ++v10) {
            goto LABEL_43;
          }
        }
        uint64_t v11 = v133;
        uint64_t v15 = v40;
LABEL_43:
        ++v15;
        uint64_t v10 = v121;
        uint64_t v38 = v123 + 16;
      }
      while (v15 != v119);
      uint64_t v15 = v119;
      a2 = v126;
      id v12 = v116;
    }
    goto LABEL_50;
  }
LABEL_139:
  __break(1u);
LABEL_140:
  swift_release_n();
  __break(1u);
LABEL_141:
  swift_release_n();
  __break(1u);
LABEL_142:
  swift_release_n();
  __break(1u);
LABEL_143:
  swift_release_n();
  __break(1u);
LABEL_144:
  swift_release_n();
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A73DEBB4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1A74F9E7C(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_retain();
  sub_1A73DE1BC(v7, a2);
  swift_release();
  *a1 = v4;
  return swift_release_n();
}

uint64_t sub_1A73DEC58(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  v57[1] = *MEMORY[0x1E4F143B8];
  id v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94C58]), sel_initWithStore_, a2);
  id v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA70]), sel_init);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    unint64_t v51 = v2;
    swift_bridgeObjectRetain();
    char v5 = 0;
    uint64_t v6 = (uint64_t *)(a1 + 72);
    uint64_t v7 = &selRef_frequencyComponents;
    uint64_t v8 = (SEL *)&unk_1E5CC9000;
    while (1)
    {
      uint64_t v10 = *(v6 - 3);
      uint64_t v11 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v12 = (void *)sub_1A75725E0();
      if (v10 == 2 && (v5 & 1) != 0) {
        break;
      }
      unint64_t v14 = v7;
      BOOL v15 = v10 == 2;
      id v13 = objc_msgSend(v54, sel___addAccountWithType_name_, v10, v12);

      v5 |= v15;
      uint64_t v7 = v14;
      uint64_t v8 = (SEL *)&unk_1E5CC9000;
      if (v11) {
        goto LABEL_9;
      }
LABEL_3:
      v6 += 6;
      id v9 = [v13 v7[57]];
      objc_msgSend(v53, v8[409], v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (!--v4)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = v51;
        goto LABEL_11;
      }
    }
    id v13 = objc_msgSend(v54, sel__addTestOnlyNonPrimaryCKAccountWithName_accountObjectID_, v12, 0);

    char v5 = 1;
    if (!v11) {
      goto LABEL_3;
    }
LABEL_9:
    uint64_t v16 = (void *)sub_1A75725E0();
    objc_msgSend(v13, sel_setExternalIdentifier_, v16);

    goto LABEL_3;
  }
LABEL_11:
  v57[0] = 0;
  unsigned int v17 = objc_msgSend(v54, sel_saveSynchronouslyWithError_, v57);
  uint64_t v18 = (void *)v57[0];
  if (!v17
    || (v57[0] = 0,
        id v19 = v18,
        id v20 = objc_msgSend(v2, sel_fetchAccountsWithError_, v57),
        uint64_t v18 = (void *)v57[0],
        !v20))
  {
    uint64_t v25 = v18;
    sub_1A7571850();

    swift_willThrow();
    return (uint64_t)v25;
  }
  id v21 = v20;
  sub_1A72BEFEC(0, &qword_1E96F1140);
  unint64_t isUniquelyReferenced_nonNull_native = sub_1A7572A10();
  id v23 = v18;

  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_38:
    swift_bridgeObjectRetain_n();
    uint64_t v24 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
  uint64_t v24 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v24)
  {
LABEL_39:
    uint64_t v25 = (void *)MEMORY[0x1E4FBC868];
LABEL_40:
    swift_bridgeObjectRelease_n();

    return (uint64_t)v25;
  }
LABEL_15:
  unint64_t v55 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  uint64_t v25 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v26 = 4;
  unint64_t v52 = isUniquelyReferenced_nonNull_native;
  while (1)
  {
    uint64_t v29 = v26 - 4;
    if (v55)
    {
      id v30 = (id)MEMORY[0x1AD0CB800](v26 - 4, isUniquelyReferenced_nonNull_native);
      uint64_t v31 = v26 - 3;
      if (__OFADD__(v29, 1)) {
        goto LABEL_35;
      }
    }
    else
    {
      id v30 = *(id *)(isUniquelyReferenced_nonNull_native + 8 * v26);
      uint64_t v31 = v26 - 3;
      if (__OFADD__(v29, 1))
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
    }
    uint64_t v56 = v31;
    uint64_t v32 = v24;
    id v33 = v30;
    id v34 = objc_msgSend(v30, sel_name);
    uint64_t v35 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v37 = v36;

    unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v25;
    unint64_t v39 = sub_1A72B2210(v35, v37);
    uint64_t v40 = v25[2];
    BOOL v41 = (v38 & 1) == 0;
    uint64_t v42 = v40 + v41;
    if (__OFADD__(v40, v41)) {
      goto LABEL_36;
    }
    char v43 = v38;
    if (v25[3] < v42) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v25 = (void *)v57[0];
      if (v38) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1A72BCCE8();
      uint64_t v25 = (void *)v57[0];
      if (v43)
      {
LABEL_16:
        uint64_t v27 = v25[7];
        uint64_t v28 = 8 * v39;

        *(void *)(v27 + v28) = v33;
        goto LABEL_17;
      }
    }
LABEL_30:
    v25[(v39 >> 6) + 8] |= 1 << v39;
    id v46 = (uint64_t *)(v25[6] + 16 * v39);
    uint64_t *v46 = v35;
    v46[1] = v37;
    *(void *)(v25[7] + 8 * v39) = v33;
    uint64_t v47 = v25[2];
    BOOL v48 = __OFADD__(v47, 1);
    uint64_t v49 = v47 + 1;
    if (v48) {
      goto LABEL_37;
    }
    v25[2] = v49;
    swift_bridgeObjectRetain();
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v26;
    uint64_t v24 = v32;
    unint64_t isUniquelyReferenced_nonNull_native = v52;
    if (v56 == v32) {
      goto LABEL_40;
    }
  }
  sub_1A72B7370(v42, isUniquelyReferenced_nonNull_native);
  unint64_t v44 = sub_1A72B2210(v35, v37);
  if ((v43 & 1) == (v45 & 1))
  {
    unint64_t v39 = v44;
    uint64_t v25 = (void *)v57[0];
    if (v43) {
      goto LABEL_16;
    }
    goto LABEL_30;
  }
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

void sub_1A73DF17C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  char v74 = a5;
  v68[1] = a3;
  uint64_t v8 = sub_1A7571B60();
  uint64_t v69 = *(void *)(v8 - 8);
  uint64_t v70 = v8;
  MEMORY[0x1F4188790](v8);
  v68[0] = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v12 = *(void *)(a2 + 24);
  id v71 = *(id *)(a2 + 16);
  uint64_t v13 = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  uint64_t v15 = *(void *)(a2 + 56);
  id v76 = *(id *)(a2 + 64);
  uint64_t v77 = v14;
  int v72 = *(unsigned __int8 *)(a2 + 72);
  uint64_t v73 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  uint64_t v75 = (uint64_t)a1;
  id v16 = objc_msgSend(a1, sel_objectID);
  if (v16)
  {
    uint64_t v17 = (uint64_t)v16;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v78 = (void *)*a4;
    *a4 = 0x8000000000000000;
    sub_1A72D70AC(v17, v10, v11, isUniquelyReferenced_nonNull_native);
    *a4 = v78;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v20 = v74;
    uint64_t v19 = v75;
    if (v13)
    {
LABEL_3:
      id v21 = objc_allocWithZone(MEMORY[0x1E4F94AC0]);
      swift_bridgeObjectRetain();
      id v22 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      id v23 = objc_msgSend(v21, sel_initWithCKSymbolicColorName_hexString_, v22, 0);
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v24 = (void *)sub_1A72D6294(v10, v11);
    swift_bridgeObjectRelease();

    id v20 = v74;
    uint64_t v19 = v75;
    if (v13) {
      goto LABEL_3;
    }
  }
  if (!v12) {
    goto LABEL_8;
  }
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  id v25 = objc_allocWithZone(MEMORY[0x1E4F94AC0]);
  swift_bridgeObjectRetain();
  uint64_t v26 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v22 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v25, sel_initWithCKSymbolicColorName_hexString_, v26, v22);

LABEL_7:
  objc_msgSend((id)v19, sel_setColor_, v23);

LABEL_8:
  if (v15) {
    objc_msgSend((id)v19, sel_setSortingStyle_, v15);
  }
  id v27 = objc_msgSend((id)v19, sel_customContext);
  objc_msgSend(v27, sel_setBadge_, v77);

  id v28 = objc_msgSend((id)v19, sel_customContext);
  if (!v28)
  {
    sub_1A73E9094();
    swift_allocError();
    *unint64_t v63 = 16;
    swift_willThrow();
    return;
  }
  id v29 = v28;
  id v30 = v76;
  id v31 = v76;
  REMSmartListCustomContextChangeItem.filter.setter(v30);
  uint64_t v32 = *(void *)(v73 + 16);
  if (v32)
  {
    id v71 = v29;
    id v33 = (id *)(swift_bridgeObjectRetain() + 40);
    while (1)
    {
      uint64_t v35 = (uint64_t)*(v33 - 1);
      id v29 = *v33;
      swift_bridgeObjectRetain();
      id v36 = objc_msgSend((id)v19, sel_sectionsContextChangeItem);
      if (!v36)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A73E9094();
        swift_allocError();
        *uint64_t v64 = 19;
        swift_willThrow();

        return;
      }
      uint64_t v37 = v36;
      uint64_t v77 = v32;
      id v38 = objc_msgSend((id)v19, sel_saveRequest);
      swift_bridgeObjectRetain();
      unint64_t v39 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      id v40 = objc_msgSend(v38, sel_addSmartListSectionWithDisplayName_toSmartListSectionContextChangeItem_, v39, v37);

      id v76 = v40;
      id v41 = objc_msgSend(v40, sel_objectID);
      if (!v41)
      {
        swift_bridgeObjectRetain();
        unint64_t v53 = sub_1A72B2210(v35, (uint64_t)v29);
        char v55 = v54;
        swift_bridgeObjectRelease();
        if (v55)
        {
          char v56 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v57 = *v20;
          uint64_t v78 = (void *)*v20;
          *id v20 = 0x8000000000000000;
          if ((v56 & 1) == 0)
          {
            sub_1A72BCEA0();
            uint64_t v57 = (uint64_t)v78;
          }
          swift_bridgeObjectRelease();
          uint64_t v58 = *(void **)(*(void *)(v57 + 56) + 8 * v53);
          sub_1A745A634(v53, v57);
          *id v20 = v57;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease();
        }
        goto LABEL_15;
      }
      id v42 = v41;
      uint64_t v19 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v78 = (void *)*v20;
      char v43 = v78;
      *id v20 = 0x8000000000000000;
      unint64_t v45 = sub_1A72B2210(v35, (uint64_t)v29);
      uint64_t v46 = v43[2];
      BOOL v47 = (v44 & 1) == 0;
      uint64_t v48 = v46 + v47;
      if (__OFADD__(v46, v47))
      {
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      char v49 = v44;
      if (v43[3] >= v48)
      {
        if (v19)
        {
          unint64_t v52 = v78;
          if ((v44 & 1) == 0) {
            goto LABEL_29;
          }
        }
        else
        {
          sub_1A72BCEA0();
          unint64_t v52 = v78;
          if ((v49 & 1) == 0) {
            goto LABEL_29;
          }
        }
      }
      else
      {
        sub_1A72B7654(v48, v19);
        unint64_t v50 = sub_1A72B2210(v35, (uint64_t)v29);
        if ((v49 & 1) != (v51 & 1))
        {
          sub_1A7574010();
          __break(1u);
          return;
        }
        unint64_t v45 = v50;
        unint64_t v52 = v78;
        if ((v49 & 1) == 0)
        {
LABEL_29:
          v52[(v45 >> 6) + 8] |= 1 << v45;
          uint64_t v59 = (uint64_t *)(v52[6] + 16 * v45);
          *uint64_t v59 = v35;
          v59[1] = (uint64_t)v29;
          *(void *)(v52[7] + 8 * v45) = v42;
          uint64_t v60 = v52[2];
          BOOL v61 = __OFADD__(v60, 1);
          uint64_t v62 = v60 + 1;
          if (v61) {
            goto LABEL_42;
          }
          v52[2] = v62;
          swift_bridgeObjectRetain();
          goto LABEL_14;
        }
      }
      uint64_t v34 = v52[7];

      *(void *)(v34 + 8 * v45) = v42;
LABEL_14:
      id v20 = v74;
      uint64_t *v74 = (uint64_t)v52;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v75;
LABEL_15:
      v33 += 2;
      uint64_t v32 = v77 - 1;
      if (v77 == 1)
      {
        swift_bridgeObjectRelease();
        id v29 = v71;
        break;
      }
    }
  }
  if (v72)
  {
    if (qword_1E96F0800 != -1) {
LABEL_43:
    }
      swift_once();
    uint64_t v65 = v70;
    __swift_project_value_buffer(v70, (uint64_t)qword_1E96F2CC0);
    uint64_t v66 = v68[0];
    sub_1A7571AA0();
    uint64_t v67 = (void *)sub_1A7571AB0();
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v66, v65);
    objc_msgSend((id)v19, sel_setPinnedDate_, v67);
  }
}

void sub_1A73DF8C8(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, uint64_t a6)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v8 = sub_1A75738F0();
  uint64_t v9 = (void *)v8;
  int64_t v10 = 0;
  uint64_t v44 = a1;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v12 = a1 + 64;
  uint64_t v11 = v13;
  uint64_t v14 = 1 << *(unsigned char *)(v12 - 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v11;
  uint64_t v41 = v12;
  int64_t v42 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v43 = v8 + 64;
  if ((v15 & v11) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  int64_t v45 = v10;
  for (unint64_t i = v17 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v21 << 6))
  {
    id v23 = (uint64_t *)(*(void *)(v44 + 48) + 16 * i);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    uint64_t v26 = *(void **)(*(void *)(v44 + 56) + 8 * i);
    if ((a2 & 0xC000000000000001) != 0)
    {
      id v27 = v26;
      swift_bridgeObjectRetain();
      if (sub_1A7573810())
      {
        sub_1A72BEFEC(0, a4);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v28 = v46;
        swift_unknownObjectRelease();

        if (!v46) {
          goto LABEL_33;
        }
        goto LABEL_26;
      }

LABEL_33:
      sub_1A73E9094();
      swift_allocError();
      *id v38 = a6;
      swift_willThrow();

      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    uint64_t v29 = *(void *)(a2 + 16);
    id v30 = v26;
    if (!v29)
    {
      swift_bridgeObjectRetain();
      goto LABEL_33;
    }
    id v31 = v30;
    swift_bridgeObjectRetain();
    unint64_t v32 = sub_1A72B252C((uint64_t)v31);
    if ((v33 & 1) == 0)
    {

      goto LABEL_33;
    }
    id v28 = *(id *)(*(void *)(a2 + 56) + 8 * v32);

    if (!v28) {
      goto LABEL_33;
    }
LABEL_26:

    *(void *)(v43 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v34 = (void *)(v9[6] + 16 * i);
    *uint64_t v34 = v25;
    v34[1] = v24;
    *(void *)(v9[7] + 8 * i) = v28;
    uint64_t v35 = v9[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      break;
    }
    v9[2] = v37;
    int64_t v10 = v45;
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_35;
    }
    if (v19 >= v42) {
      return;
    }
    unint64_t v20 = *(void *)(v41 + 8 * v19);
    int64_t v21 = v10 + 1;
    if (!v20)
    {
      int64_t v21 = v10 + 2;
      if (v10 + 2 >= v42) {
        return;
      }
      unint64_t v20 = *(void *)(v41 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v10 + 3;
        if (v10 + 3 >= v42) {
          return;
        }
        unint64_t v20 = *(void *)(v41 + 8 * v21);
        if (!v20)
        {
          uint64_t v22 = v10 + 4;
          if (v10 + 4 >= v42) {
            return;
          }
          unint64_t v20 = *(void *)(v41 + 8 * v22);
          if (!v20)
          {
            while (1)
            {
              int64_t v21 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                goto LABEL_36;
              }
              if (v21 >= v42) {
                return;
              }
              unint64_t v20 = *(void *)(v41 + 8 * v21);
              ++v22;
              if (v20) {
                goto LABEL_18;
              }
            }
          }
          int64_t v21 = v10 + 4;
        }
      }
    }
LABEL_18:
    unint64_t v16 = (v20 - 1) & v20;
    int64_t v45 = v21;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

void *sub_1A73DFC1C(uint64_t a1, void *a2)
{
  v38[1] = *(id *)MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2DE0);
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = (void *)v3;
  int64_t v5 = 0;
  uint64_t v36 = a1;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v7 = a1 + 64;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v7 - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v6;
  uint64_t v33 = v7;
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v35 = v3 + 64;
  if ((v10 & v6) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(v36 + 48) + 16 * i);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = *(void **)(*(void *)(v36 + 56) + 8 * i);
    v38[0] = 0;
    swift_bridgeObjectRetain();
    id v21 = v20;
    id v22 = objc_msgSend(a2, sel_fetchCustomSmartListWithObjectID_error_, v21, v38);
    if (!v22) {
      break;
    }
    id v23 = v22;
    id v24 = v38[0];

    *(void *)(v35 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v25 = (void *)(v4[6] + 16 * i);
    *uint64_t v25 = v19;
    v25[1] = v18;
    *(void *)(v4[7] + 8 * i) = v23;
    uint64_t v26 = v4[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
    }
    v4[2] = v28;
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_26;
    }
    if (v14 >= v34) {
      return v4;
    }
    unint64_t v15 = *(void *)(v33 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v34) {
        return v4;
      }
      unint64_t v15 = *(void *)(v33 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v34) {
          return v4;
        }
        unint64_t v15 = *(void *)(v33 + 8 * v5);
        if (!v15)
        {
          int64_t v16 = v14 + 3;
          if (v16 >= v34) {
            return v4;
          }
          unint64_t v15 = *(void *)(v33 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v5 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_27;
              }
              if (v5 >= v34) {
                return v4;
              }
              unint64_t v15 = *(void *)(v33 + 8 * v5);
              ++v16;
              if (v15) {
                goto LABEL_18;
              }
            }
          }
          int64_t v5 = v16;
        }
      }
    }
LABEL_18:
    unint64_t v11 = (v15 - 1) & v15;
  }
  id v29 = v38[0];
  id v30 = (void *)sub_1A7571850();

  swift_willThrow();
  sub_1A73E9094();
  swift_allocError();
  *id v31 = 9;
  swift_willThrow();

  swift_bridgeObjectRelease();
  swift_release();
  return v4;
}

void sub_1A73DFEF8(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2DD0);
  uint64_t v5 = sub_1A75738F0();
  uint64_t v6 = (void *)v5;
  int64_t v7 = 0;
  uint64_t v32 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v9 = a1 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v30 = v9;
  int64_t v31 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = v5 + 64;
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v7 << 6))
  {
    unint64_t v20 = (uint64_t *)(*(void *)(v32 + 48) + 16 * i);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v36 = *(void **)(*(void *)(v32 + 56) + 8 * i);
    id v23 = v36;
    swift_bridgeObjectRetain();
    id v24 = v23;
    sub_1A73D4214(a2, (uint64_t *)&v36, &v34);

    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    *(void *)(v14 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v25 = (void *)(v6[6] + 16 * i);
    *uint64_t v25 = v21;
    v25[1] = v22;
    uint64_t v26 = v6[7] + 24 * i;
    uint64_t v27 = v35;
    *(_OWORD *)uint64_t v26 = v34;
    *(void *)(v26 + 16) = v27;
    uint64_t v28 = v6[2];
    BOOL v17 = __OFADD__(v28, 1);
    uint64_t v29 = v28 + 1;
    if (v17)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v6[2] = v29;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v17 = __OFADD__(v7++, 1);
    if (v17) {
      goto LABEL_27;
    }
    if (v7 >= v31) {
      return;
    }
    unint64_t v18 = *(void *)(v30 + 8 * v7);
    if (!v18) {
      break;
    }
LABEL_15:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v7 + 1;
  if (v7 + 1 >= v31) {
    return;
  }
  unint64_t v18 = *(void *)(v30 + 8 * v19);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v7 + 2;
  if (v7 + 2 >= v31) {
    return;
  }
  unint64_t v18 = *(void *)(v30 + 8 * v19);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v7 + 3;
  if (v7 + 3 >= v31) {
    return;
  }
  unint64_t v18 = *(void *)(v30 + 8 * v19);
  if (v18)
  {
LABEL_14:
    int64_t v7 = v19;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v31) {
      return;
    }
    unint64_t v18 = *(void *)(v30 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_1A73E0138(uint64_t a1)
{
  id v2 = *(id *)(a1 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A73E01C0(uint64_t a1)
{
  uint64_t v4 = *(void **)(a1 + 8);
  id v2 = *(void **)(a1 + 168);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_1A73E0288(uint64_t a1)
{
  id v2 = *(void **)(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_1A73E030C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A73E0348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73DCE78(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_1A73E0360(uint64_t a1)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 56);
  uint64_t v5 = *(void **)(a1 + 128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1A7315D30(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t type metadata accessor for REMTestStorePopulator.TestReminder(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2D00);
}

uint64_t type metadata accessor for REMTestStorePopulator.TestList.ListChild(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2CF0);
}

uint64_t sub_1A73E0474(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for REMTestStorePopulator.TestListSection(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2D18);
}

uint64_t sub_1A73E04FC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2D68);
}

uint64_t sub_1A73E0560(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2D58);
}

uint64_t sub_1A73E05C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A73E0630(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2D48);
}

uint64_t type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2D38);
}

uint64_t type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1E96F2D28);
}

uint64_t type metadata accessor for REMTestStorePopulator()
{
  return self;
}

uint64_t method lookup function for REMTestStorePopulator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMTestStorePopulator);
}

uint64_t dispatch thunk of REMTestStorePopulator.__allocating_init(store:accounts:isSingleListMode:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestStoreBuilder()
{
  return &type metadata for REMTestStorePopulator.TestStoreBuilder;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestAccountBuilder()
{
  return &type metadata for REMTestStorePopulator.TestAccountBuilder;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestSublistsBuilder()
{
  return &type metadata for REMTestStorePopulator.TestSublistsBuilder;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestShareesBuilder()
{
  return &type metadata for REMTestStorePopulator.TestShareesBuilder;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestRemindersBuilder()
{
  return &type metadata for REMTestStorePopulator.TestRemindersBuilder;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestListBuilder()
{
  return &type metadata for REMTestStorePopulator.TestListBuilder;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestListSectionBuilder()
{
  return &type metadata for REMTestStorePopulator.TestListSectionBuilder;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestCustomSmartListBuilder()
{
  return &type metadata for REMTestStorePopulator.TestCustomSmartListBuilder;
}

uint64_t destroy for REMTestStorePopulator.TestAccount()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for REMTestStorePopulator.TestAccount(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMTestStorePopulator.TestAccount(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for REMTestStorePopulator.TestAccount(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestAccount()
{
  return &type metadata for REMTestStorePopulator.TestAccount;
}

id sub_1A73E0968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  switch(a13 >> 62)
  {
    case 1uLL:
    case 3uLL:
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 2uLL:
      id v16 = a9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v17 = a7;
      id result = a8;
      break;
    default:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v14 = a7;
      id v15 = a8;
      swift_bridgeObjectRetain();
LABEL_7:
      id result = (id)swift_bridgeObjectRetain();
      break;
  }
  return result;
}

uint64_t destroy for REMTestStorePopulator.TestAccount.AccountChild(void *a1, uint64_t a2)
{
  return sub_1A73E381C(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1A73E0AD8);
}

void sub_1A73E0AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  switch(a13 >> 62)
  {
    case 1uLL:
    case 3uLL:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      break;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_7:
      swift_bridgeObjectRelease();
      break;
  }
}

void *initializeWithCopy for REMTestStorePopulator.TestAccount.AccountChild(void *a1, void *a2, uint64_t a3)
{
  return sub_1A73E3978(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A73E0968);
}

uint64_t *assignWithCopy for REMTestStorePopulator.TestAccount.AccountChild(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_1A73E3A9C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A73E0968, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_1A73E0AD8);
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t *assignWithTake for REMTestStorePopulator.TestAccount.AccountChild(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73E3BE0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_1A73E0AD8);
}

uint64_t sub_1A73E0CBC(uint64_t a1)
{
  return *(void *)(a1 + 96) >> 62;
}

uint64_t sub_1A73E0CC8(uint64_t result)
{
  *(void *)(result + 96) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1A73E0CD8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 96) & 0x10101 | (a2 << 62);
  *(void *)(result + 72) &= 1uLL;
  *(void *)(result + 96) = v2;
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestAccount.AccountChild()
{
  return &type metadata for REMTestStorePopulator.TestAccount.AccountChild;
}

uint64_t destroy for REMTestStorePopulator.TestList(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMTestStorePopulator.TestList(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  long long v6 = *(void **)(a2 + 48);
  long long v7 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_WORD *)(a1 + 97) = *(_WORD *)(a2 + 97);
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v6;
  id v12 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMTestStorePopulator.TestList(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 48);
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  id v6 = v5;

  long long v7 = *(void **)(a1 + 56);
  uint64_t v8 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v8;
  id v9 = v8;

  uint64_t v10 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMTestStorePopulator.TestList(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  long long v7 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestList(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestList(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestList()
{
  return &type metadata for REMTestStorePopulator.TestList;
}

void *initializeBufferWithCopyOfBuffer for REMTestStorePopulator.TestList.ListChild(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      uint64_t v9 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
      uint64_t v10 = *(int *)(v9 + 24);
      __dst = (char *)a1 + v10;
      id v11 = (char *)a2 + v10;
      uint64_t v12 = sub_1A7571B60();
      uint64_t v13 = *(void *)(v12 - 8);
      id v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14(v11, 1, v12))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
      }
      *(void *)((char *)a1 + *(int *)(v9 + 28)) = *(void *)((char *)a2 + *(int *)(v9 + 28));
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v17 = a2[3];
      a1[2] = a2[2];
      a1[3] = v17;
      unint64_t v18 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
      uint64_t v19 = v18[6];
      __dsta = (char *)a1 + v19;
      unint64_t v20 = (char *)a2 + v19;
      uint64_t v21 = sub_1A75717A0();
      uint64_t v22 = *(void *)(v21 - 8);
      id v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v59 = v23;
      uint64_t v60 = v21;
      uint64_t v57 = v22;
      if (v23(v20, 1, v21))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
        memcpy(__dsta, v20, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dsta, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dsta, 0, 1, v21);
      }
      *((unsigned char *)a1 + v18[7]) = *((unsigned char *)a2 + v18[7]);
      *((unsigned char *)a1 + v18[8]) = *((unsigned char *)a2 + v18[8]);
      uint64_t v25 = v18[9];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = sub_1A7571B60();
      uint64_t v29 = *(void *)(v28 - 8);
      uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
      if (v30(v27, 1, v28))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      uint64_t v32 = v18[10];
      uint64_t v33 = (char *)a1 + v32;
      long long v34 = (char *)a2 + v32;
      if (v30((char *)a2 + v32, 1, v28))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v33, v34, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
      }
      *((unsigned char *)a1 + v18[11]) = *((unsigned char *)a2 + v18[11]);
      *(void *)((char *)a1 + v18[12]) = *(void *)((char *)a2 + v18[12]);
      uint64_t v36 = v18[13];
      uint64_t v37 = *(void **)((char *)a2 + v36);
      *(void *)((char *)a1 + v36) = v37;
      uint64_t v38 = v18[14];
      unint64_t v39 = (void *)((char *)a1 + v38);
      id v40 = (void *)((char *)a2 + v38);
      uint64_t v41 = *(void *)((char *)a2 + v38 + 8);
      id v42 = v37;
      if (v41)
      {
        void *v39 = *v40;
        v39[1] = v41;
        uint64_t v43 = v40[3];
        v39[2] = v40[2];
        v39[3] = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v44 = *((_OWORD *)v40 + 1);
        *(_OWORD *)unint64_t v39 = *(_OWORD *)v40;
        *((_OWORD *)v39 + 1) = v44;
      }
      *(void *)((char *)a1 + v18[15]) = *(void *)((char *)a2 + v18[15]);
      *(void *)((char *)a1 + v18[16]) = *(void *)((char *)a2 + v18[16]);
      *(void *)((char *)a1 + v18[17]) = *(void *)((char *)a2 + v18[17]);
      *(void *)((char *)a1 + v18[18]) = *(void *)((char *)a2 + v18[18]);
      uint64_t v45 = v18[19];
      uint64_t v46 = *(void **)((char *)a2 + v45);
      *(void *)((char *)a1 + v45) = v46;
      uint64_t v47 = v18[20];
      uint64_t v48 = *(void **)((char *)a2 + v47);
      *(void *)((char *)a1 + v47) = v48;
      uint64_t v49 = v18[21];
      unint64_t v50 = *(void **)((char *)a2 + v49);
      *(void *)((char *)a1 + v49) = v50;
      *(void *)((char *)a1 + v18[22]) = *(void *)((char *)a2 + v18[22]);
      *(void *)((char *)a1 + v18[23]) = *(void *)((char *)a2 + v18[23]);
      uint64_t v51 = v18[24];
      __dstb = (char *)a1 + v51;
      uint64_t v58 = (char *)a2 + v51;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v52 = v46;
      id v53 = v48;
      id v54 = v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v59(v58, 1, v60))
      {
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
        memcpy(__dstb, v58, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(__dstb, v58, v60);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(__dstb, 0, 1, v60);
      }
      *(void *)((char *)a1 + v18[25]) = *(void *)((char *)a2 + v18[25]);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for REMTestStorePopulator.TestList.ListChild(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(type metadata accessor for REMTestStorePopulator.TestListSection(0) + 24);
    uint64_t v4 = sub_1A7571B60();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    id v6 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
    uint64_t v7 = a1 + v6[6];
    uint64_t v8 = sub_1A75717A0();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v17(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v10 = a1 + v6[9];
    uint64_t v11 = sub_1A7571B60();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    if (!v13(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
    uint64_t v14 = a1 + v6[10];
    if (!v13(v14, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
    }

    if (*(void *)(a1 + v6[14] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = a1 + v6[24];
    if (!v17(v15, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v8);
    }
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for REMTestStorePopulator.TestList.ListChild(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
    uint64_t v8 = *(int *)(v7 + 24);
    __dst = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = sub_1A7571B60();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    *(void *)((char *)a1 + *(int *)(v7 + 28)) = *(void *)((char *)a2 + *(int *)(v7 + 28));
  }
  else
  {
    uint64_t v14 = a2[3];
    a1[2] = a2[2];
    a1[3] = v14;
    uint64_t v15 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
    uint64_t v16 = v15[6];
    char v56 = (char *)a1 + v16;
    uint64_t v17 = (char *)a2 + v16;
    uint64_t v18 = sub_1A75717A0();
    uint64_t v19 = *(void *)(v18 - 8);
    unint64_t v20 = *(unsigned int (**)(char *, uint64_t, void *))(v19 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v58 = v20;
    __dsta = (void *)v18;
    uint64_t v54 = v19;
    if (v20(v17, 1, (void *)v18))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
      memcpy(v56, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v56, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v56, 0, 1, v18);
    }
    *((unsigned char *)a1 + v15[7]) = *((unsigned char *)a2 + v15[7]);
    *((unsigned char *)a1 + v15[8]) = *((unsigned char *)a2 + v15[8]);
    uint64_t v22 = v15[9];
    id v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_1A7571B60();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    if (v27(v24, 1, v25))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v29 = v15[10];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v27((char *)a2 + v29, 1, v25))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v30, v31, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v25);
    }
    *((unsigned char *)a1 + v15[11]) = *((unsigned char *)a2 + v15[11]);
    *(void *)((char *)a1 + v15[12]) = *(void *)((char *)a2 + v15[12]);
    uint64_t v33 = v15[13];
    long long v34 = *(void **)((char *)a2 + v33);
    *(void *)((char *)a1 + v33) = v34;
    uint64_t v35 = v15[14];
    uint64_t v36 = (void *)((char *)a1 + v35);
    uint64_t v37 = (void *)((char *)a2 + v35);
    uint64_t v38 = *(void *)((char *)a2 + v35 + 8);
    id v39 = v34;
    if (v38)
    {
      *uint64_t v36 = *v37;
      v36[1] = v38;
      uint64_t v40 = v37[3];
      id v36[2] = v37[2];
      v36[3] = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v41 = *((_OWORD *)v37 + 1);
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v41;
    }
    *(void *)((char *)a1 + v15[15]) = *(void *)((char *)a2 + v15[15]);
    *(void *)((char *)a1 + v15[16]) = *(void *)((char *)a2 + v15[16]);
    *(void *)((char *)a1 + v15[17]) = *(void *)((char *)a2 + v15[17]);
    *(void *)((char *)a1 + v15[18]) = *(void *)((char *)a2 + v15[18]);
    uint64_t v42 = v15[19];
    uint64_t v43 = *(void **)((char *)a2 + v42);
    *(void *)((char *)a1 + v42) = v43;
    uint64_t v44 = v15[20];
    uint64_t v45 = *(void **)((char *)a2 + v44);
    *(void *)((char *)a1 + v44) = v45;
    uint64_t v46 = v15[21];
    uint64_t v47 = *(void **)((char *)a2 + v46);
    *(void *)((char *)a1 + v46) = v47;
    *(void *)((char *)a1 + v15[22]) = *(void *)((char *)a2 + v15[22]);
    *(void *)((char *)a1 + v15[23]) = *(void *)((char *)a2 + v15[23]);
    uint64_t v48 = v15[24];
    uint64_t v57 = (char *)a1 + v48;
    uint64_t v55 = (char *)a2 + v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v49 = v43;
    id v50 = v45;
    id v51 = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v58(v55, 1, __dsta))
    {
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
      memcpy(v57, v55, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, void *))(v54 + 16))(v57, v55, __dsta);
      (*(void (**)(char *, void, uint64_t, void *))(v54 + 56))(v57, 0, 1, __dsta);
    }
    *(void *)((char *)a1 + v15[25]) = *(void *)((char *)a2 + v15[25]);
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for REMTestStorePopulator.TestList.ListChild(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1A73E0630((uint64_t)a1, type metadata accessor for REMTestStorePopulator.TestList.ListChild);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      uint64_t v5 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
      uint64_t v6 = *(int *)(v5 + 24);
      __dst = (char *)a1 + v6;
      uint64_t v7 = (char *)a2 + v6;
      uint64_t v8 = sub_1A7571B60();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10(v7, 1, v8))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(__dst, v7, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(__dst, v7, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
      }
      *(void *)((char *)a1 + *(int *)(v5 + 28)) = *(void *)((char *)a2 + *(int *)(v5 + 28));
    }
    else
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      uint64_t v12 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
      uint64_t v13 = v12[6];
      id v51 = (char *)a1 + v13;
      uint64_t v14 = (char *)a2 + v13;
      uint64_t v15 = sub_1A75717A0();
      uint64_t v49 = *(void *)(v15 - 8);
      uint64_t v16 = *(unsigned int (**)(char *, uint64_t, void *))(v49 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v53 = v16;
      __dsta = (void *)v15;
      if (v16(v14, 1, (void *)v15))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
        memcpy(v51, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v51, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v51, 0, 1, v15);
      }
      *((unsigned char *)a1 + v12[7]) = *((unsigned char *)a2 + v12[7]);
      *((unsigned char *)a1 + v12[8]) = *((unsigned char *)a2 + v12[8]);
      uint64_t v18 = v12[9];
      uint64_t v19 = (char *)a1 + v18;
      unint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_1A7571B60();
      uint64_t v22 = *(void *)(v21 - 8);
      id v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      if (v23(v20, 1, v21))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      uint64_t v25 = v12[10];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      if (v23((char *)a2 + v25, 1, v21))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v26, v27, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
      }
      *((unsigned char *)a1 + v12[11]) = *((unsigned char *)a2 + v12[11]);
      *(void *)((char *)a1 + v12[12]) = *(void *)((char *)a2 + v12[12]);
      uint64_t v29 = v12[13];
      uint64_t v30 = *(void **)((char *)a2 + v29);
      *(void *)((char *)a1 + v29) = v30;
      uint64_t v31 = v12[14];
      uint64_t v32 = (void *)((char *)a1 + v31);
      uint64_t v33 = (void *)((char *)a2 + v31);
      uint64_t v34 = *(void *)((char *)a2 + v31 + 8);
      id v35 = v30;
      if (v34)
      {
        *uint64_t v32 = *v33;
        v32[1] = v33[1];
        v32[2] = v33[2];
        v32[3] = v33[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v36 = *((_OWORD *)v33 + 1);
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v36;
      }
      *(void *)((char *)a1 + v12[15]) = *(void *)((char *)a2 + v12[15]);
      *(void *)((char *)a1 + v12[16]) = *(void *)((char *)a2 + v12[16]);
      *(void *)((char *)a1 + v12[17]) = *(void *)((char *)a2 + v12[17]);
      *(void *)((char *)a1 + v12[18]) = *(void *)((char *)a2 + v12[18]);
      uint64_t v37 = v12[19];
      uint64_t v38 = *(void **)((char *)a2 + v37);
      *(void *)((char *)a1 + v37) = v38;
      uint64_t v39 = v12[20];
      uint64_t v40 = *(void **)((char *)a2 + v39);
      *(void *)((char *)a1 + v39) = v40;
      uint64_t v41 = v12[21];
      uint64_t v42 = *(void **)((char *)a2 + v41);
      *(void *)((char *)a1 + v41) = v42;
      *(void *)((char *)a1 + v12[22]) = *(void *)((char *)a2 + v12[22]);
      *(void *)((char *)a1 + v12[23]) = *(void *)((char *)a2 + v12[23]);
      uint64_t v43 = v12[24];
      uint64_t v52 = (char *)a1 + v43;
      id v50 = (char *)a2 + v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v44 = v38;
      id v45 = v40;
      id v46 = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v53(v50, 1, __dsta))
      {
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
        memcpy(v52, v50, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v49 + 16))(v52, v50, __dsta);
        (*(void (**)(char *, void, uint64_t, void *))(v49 + 56))(v52, 0, 1, __dsta);
      }
      *(void *)((char *)a1 + v12[25]) = *(void *)((char *)a2 + v12[25]);
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for REMTestStorePopulator.TestList.ListChild(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    uint64_t v5 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
    uint64_t v6 = *(int *)(v5 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1A7571B60();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    uint64_t v19 = (int *)(v5 + 28);
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v12 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
    uint64_t v13 = v12[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1A75717A0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    uint64_t v41 = v17;
    if (v40(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    *((unsigned char *)a1 + v12[7]) = *((unsigned char *)a2 + v12[7]);
    *((unsigned char *)a1 + v12[8]) = *((unsigned char *)a2 + v12[8]);
    uint64_t v20 = v12[9];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_1A7571B60();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    if (v25(v22, 1, v23))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    uint64_t v27 = v12[10];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    if (v25((char *)a2 + v27, 1, v23))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v28, v29, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
    }
    *((unsigned char *)a1 + v12[11]) = *((unsigned char *)a2 + v12[11]);
    *(void *)((char *)a1 + v12[12]) = *(void *)((char *)a2 + v12[12]);
    *(void *)((char *)a1 + v12[13]) = *(void *)((char *)a2 + v12[13]);
    uint64_t v31 = v12[14];
    uint64_t v32 = (_OWORD *)((char *)a1 + v31);
    uint64_t v33 = (_OWORD *)((char *)a2 + v31);
    long long v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    *(void *)((char *)a1 + v12[15]) = *(void *)((char *)a2 + v12[15]);
    *(void *)((char *)a1 + v12[16]) = *(void *)((char *)a2 + v12[16]);
    *(void *)((char *)a1 + v12[17]) = *(void *)((char *)a2 + v12[17]);
    *(void *)((char *)a1 + v12[18]) = *(void *)((char *)a2 + v12[18]);
    *(void *)((char *)a1 + v12[19]) = *(void *)((char *)a2 + v12[19]);
    *(void *)((char *)a1 + v12[20]) = *(void *)((char *)a2 + v12[20]);
    *(void *)((char *)a1 + v12[21]) = *(void *)((char *)a2 + v12[21]);
    *(void *)((char *)a1 + v12[22]) = *(void *)((char *)a2 + v12[22]);
    *(void *)((char *)a1 + v12[23]) = *(void *)((char *)a2 + v12[23]);
    uint64_t v35 = v12[24];
    long long v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    if (v40((char *)a2 + v35, 1, v16))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v36, v37, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v36, 0, 1, v16);
    }
    uint64_t v19 = v12 + 25;
  }
  *(void *)((char *)a1 + *v19) = *(void *)((char *)a2 + *v19);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for REMTestStorePopulator.TestList.ListChild(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_1A73E0630((uint64_t)a1, type metadata accessor for REMTestStorePopulator.TestList.ListChild);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      uint64_t v5 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
      uint64_t v6 = *(int *)(v5 + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1A7571B60();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      uint64_t v19 = (int *)(v5 + 28);
    }
    else
    {
      a1[1] = a2[1];
      uint64_t v12 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
      uint64_t v13 = v12[6];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_1A75717A0();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      uint64_t v42 = v16;
      uint64_t v41 = v17;
      if (v40(v15, 1, v16))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      *((unsigned char *)a1 + v12[7]) = *((unsigned char *)a2 + v12[7]);
      *((unsigned char *)a1 + v12[8]) = *((unsigned char *)a2 + v12[8]);
      uint64_t v20 = v12[9];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_1A7571B60();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      if (v25(v22, 1, v23))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      uint64_t v27 = v12[10];
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      if (v25((char *)a2 + v27, 1, v23))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v28, v29, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
      }
      *((unsigned char *)a1 + v12[11]) = *((unsigned char *)a2 + v12[11]);
      *(void *)((char *)a1 + v12[12]) = *(void *)((char *)a2 + v12[12]);
      *(void *)((char *)a1 + v12[13]) = *(void *)((char *)a2 + v12[13]);
      uint64_t v31 = v12[14];
      uint64_t v32 = (_OWORD *)((char *)a1 + v31);
      uint64_t v33 = (_OWORD *)((char *)a2 + v31);
      long long v34 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v34;
      *(void *)((char *)a1 + v12[15]) = *(void *)((char *)a2 + v12[15]);
      *(void *)((char *)a1 + v12[16]) = *(void *)((char *)a2 + v12[16]);
      *(void *)((char *)a1 + v12[17]) = *(void *)((char *)a2 + v12[17]);
      *(void *)((char *)a1 + v12[18]) = *(void *)((char *)a2 + v12[18]);
      *(void *)((char *)a1 + v12[19]) = *(void *)((char *)a2 + v12[19]);
      *(void *)((char *)a1 + v12[20]) = *(void *)((char *)a2 + v12[20]);
      *(void *)((char *)a1 + v12[21]) = *(void *)((char *)a2 + v12[21]);
      *(void *)((char *)a1 + v12[22]) = *(void *)((char *)a2 + v12[22]);
      *(void *)((char *)a1 + v12[23]) = *(void *)((char *)a2 + v12[23]);
      uint64_t v35 = v12[24];
      long long v36 = (char *)a1 + v35;
      uint64_t v37 = (char *)a2 + v35;
      if (v40((char *)a2 + v35, 1, v42))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v36, v37, v42);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v36, 0, 1, v42);
      }
      uint64_t v19 = v12 + 25;
    }
    *(void *)((char *)a1 + *v19) = *(void *)((char *)a2 + *v19);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A73E31EC()
{
  uint64_t result = type metadata accessor for REMTestStorePopulator.TestReminder(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for REMTestStorePopulator.TestListSection(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for REMTestStorePopulator.TestSharee()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return sub_1A7362B70();
}

uint64_t initializeWithCopy for REMTestStorePopulator.TestSharee(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A7362B58();
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for REMTestStorePopulator.TestSharee(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  char v6 = *(unsigned char *)(a2 + 48);
  sub_1A7362B58();
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = v6;
  sub_1A7362B70();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for REMTestStorePopulator.TestSharee(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v6;
  sub_1A7362B70();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestSharee(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestSharee(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestSharee()
{
  return &type metadata for REMTestStorePopulator.TestSharee;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestSharee.Address()
{
  return &type metadata for REMTestStorePopulator.TestSharee.Address;
}

uint64_t destroy for REMTestStorePopulator.TestGroup()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s19ReminderKitInternal21REMTestStorePopulatorC9TestGroupVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMTestStorePopulator.TestGroup(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMTestStorePopulator.TestGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestGroup(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestGroup()
{
  return &type metadata for REMTestStorePopulator.TestGroup;
}

id sub_1A73E370C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13 < 0)
  {
    id v17 = a9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v18 = a7;
    return a8;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = a7;
    id v15 = a8;
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t destroy for REMTestStorePopulator.TestGroup.GroupChild(void *a1, uint64_t a2)
{
  return sub_1A73E381C(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1A73E3870);
}

uint64_t sub_1A73E381C(void *a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a3(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14]);
}

void sub_1A73E3870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a13 < 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
}

void *initializeWithCopy for REMTestStorePopulator.TestGroup.GroupChild(void *a1, void *a2, uint64_t a3)
{
  return sub_1A73E3978(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A73E370C);
}

void *sub_1A73E3978(void *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v12 = a2[7];
  uint64_t v13 = a2[8];
  uint64_t v15 = a2[9];
  uint64_t v16 = a2[10];
  uint64_t v17 = a2[11];
  uint64_t v18 = a2[12];
  uint64_t v19 = a2[13];
  uint64_t v20 = a2[14];
  a4(*a2, v6, v7, v8, v9, v10, v11, v12, v13, v15, v16, v17, v18, v19, v20);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v9;
  a1[5] = v10;
  a1[6] = v11;
  a1[7] = v12;
  a1[8] = v13;
  a1[9] = v15;
  a1[10] = v16;
  a1[11] = v17;
  a1[12] = v18;
  a1[13] = v19;
  a1[14] = v20;
  return a1;
}

uint64_t *assignWithCopy for REMTestStorePopulator.TestGroup.GroupChild(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_1A73E3A9C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A73E370C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_1A73E3870);
}

uint64_t *sub_1A73E3A9C(uint64_t *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v11 = a2[5];
  uint64_t v12 = a2[6];
  uint64_t v13 = a2[7];
  uint64_t v14 = a2[8];
  uint64_t v28 = a2[9];
  uint64_t v29 = a2[10];
  uint64_t v30 = a2[11];
  uint64_t v31 = a2[12];
  uint64_t v32 = a2[13];
  uint64_t v33 = a2[14];
  a4(*a2, v7, v8, v9, v10, v11, v12, v13, v14, v28, v29, v30, v31, v32, v33);
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  uint64_t v17 = a1[2];
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  uint64_t v20 = a1[5];
  uint64_t v21 = a1[6];
  uint64_t v22 = a1[7];
  long long v23 = *((_OWORD *)a1 + 4);
  long long v24 = *((_OWORD *)a1 + 5);
  long long v25 = *((_OWORD *)a1 + 6);
  uint64_t v26 = a1[14];
  *a1 = v6;
  a1[1] = v7;
  a1[2] = v8;
  a1[3] = v9;
  a1[4] = v10;
  a1[5] = v11;
  a1[6] = v12;
  a1[7] = v13;
  a1[8] = v14;
  a1[9] = v28;
  a1[10] = v29;
  a1[11] = v30;
  a1[12] = v31;
  a1[13] = v32;
  a1[14] = v33;
  a5(v15, v16, v17, v18, v19, v20, v21, v22, v23, *((void *)&v23 + 1), v24, *((void *)&v24 + 1), v25, *((void *)&v25 + 1), v26);
  return a1;
}

uint64_t *assignWithTake for REMTestStorePopulator.TestGroup.GroupChild(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73E3BE0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_1A73E3870);
}

uint64_t *sub_1A73E3BE0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))
{
  uint64_t v6 = *(void *)(a2 + 112);
  uint64_t v7 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  uint64_t v12 = a1[5];
  uint64_t v13 = a1[6];
  uint64_t v14 = a1[7];
  long long v15 = *((_OWORD *)a1 + 4);
  long long v16 = *((_OWORD *)a1 + 5);
  long long v17 = *((_OWORD *)a1 + 6);
  uint64_t v18 = a1[14];
  long long v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v19;
  long long v20 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v20;
  long long v21 = *(_OWORD *)(a2 + 80);
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  *((_OWORD *)a1 + 5) = v21;
  *((_OWORD *)a1 + 6) = *(_OWORD *)(a2 + 96);
  a1[14] = v6;
  a4(v7, v9, v8, v10, v11, v12, v13, v14, v15, *((void *)&v15 + 1), v16, *((void *)&v16 + 1), v17, *((void *)&v17 + 1), v18);
  return a1;
}

uint64_t _s19ReminderKitInternal21REMTestStorePopulatorC9TestGroupV10GroupChildOwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 72) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double sub_1A73E3CC0(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 64) = 0;
      *(void *)(a1 + 72) = 2 * -a2;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(void *)(a1 + 112) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1A73E3D34(uint64_t a1)
{
  return *(void *)(a1 + 96) >> 63;
}

uint64_t sub_1A73E3D40(uint64_t result)
{
  *(void *)(result + 96) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1A73E3D50(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 96) & 0x10101 | (a2 << 63);
  *(void *)(result + 72) &= 1uLL;
  *(void *)(result + 96) = v2;
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestGroup.GroupChild()
{
  return &type metadata for REMTestStorePopulator.TestGroup.GroupChild;
}

uint64_t destroy for REMTestStorePopulator.TestCustomSmartList(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMTestStorePopulator.TestCustomSmartList(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void **)(a2 + 48);
  uint64_t v7 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v8;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = v6;
  id v10 = v7;
  id v11 = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMTestStorePopulator.TestCustomSmartList(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 48);
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 56);
  uint64_t v8 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 64);
  id v11 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v11;
  id v12 = v11;

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for REMTestStorePopulator.TestCustomSmartList(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  uint64_t v7 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestCustomSmartList(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestCustomSmartList(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestCustomSmartList()
{
  return &type metadata for REMTestStorePopulator.TestCustomSmartList;
}

uint64_t initializeWithCopy for REMTestStorePopulator.TestTemplate(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMTestStorePopulator.TestTemplate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for REMTestStorePopulator.TestTemplate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestTemplate(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestTemplate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestTemplate()
{
  return &type metadata for REMTestStorePopulator.TestTemplate;
}

uint64_t destroy for REMTestStorePopulator.TestTemplateContents(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s19ReminderKitInternal21REMTestStorePopulatorC20TestTemplateContentsVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMTestStorePopulator.TestTemplateContents(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMTestStorePopulator.TestTemplateContents(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestTemplateContents()
{
  return &type metadata for REMTestStorePopulator.TestTemplateContents;
}

void *initializeBufferWithCopyOfBuffer for REMTestStorePopulator.TestReminder(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    id v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1A75717A0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v58 = v13;
    uint64_t v59 = v11;
    uint64_t v54 = v12;
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)v4 + v16) = *((unsigned char *)a2 + v16);
    uint64_t v17 = a3[9];
    uint64_t v18 = (char *)v4 + v17;
    long long v19 = (char *)a2 + v17;
    uint64_t v20 = sub_1A7571B60();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    if (v22(v19, 1, v20))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v24 = a3[10];
    long long v25 = (char *)v4 + v24;
    uint64_t v26 = (char *)a2 + v24;
    if (v22((char *)a2 + v24, 1, v20))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v25, v26, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v25, 0, 1, v20);
    }
    uint64_t v28 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *(void *)((char *)v4 + v28) = *(void *)((char *)a2 + v28);
    uint64_t v29 = a3[13];
    uint64_t v30 = a3[14];
    uint64_t v31 = *(void **)((char *)a2 + v29);
    *(void *)((char *)v4 + v29) = v31;
    uint64_t v32 = (void *)((char *)v4 + v30);
    uint64_t v33 = (void *)((char *)a2 + v30);
    uint64_t v34 = *(void *)((char *)a2 + v30 + 8);
    id v35 = v31;
    if (v34)
    {
      *uint64_t v32 = *v33;
      v32[1] = v34;
      uint64_t v36 = v33[2];
      uint64_t v37 = v33[3];
      v32[2] = v36;
      v32[3] = v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v38 = *((_OWORD *)v33 + 1);
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v38;
    }
    uint64_t v39 = a3[16];
    *(void *)((char *)v4 + a3[15]) = *(void *)((char *)a2 + a3[15]);
    *(void *)((char *)v4 + v39) = *(void *)((char *)a2 + v39);
    uint64_t v40 = a3[18];
    *(void *)((char *)v4 + a3[17]) = *(void *)((char *)a2 + a3[17]);
    *(void *)((char *)v4 + v40) = *(void *)((char *)a2 + v40);
    uint64_t v41 = a3[19];
    uint64_t v42 = a3[20];
    uint64_t v43 = *(void **)((char *)a2 + v41);
    *(void *)((char *)v4 + v41) = v43;
    uint64_t v55 = *(void **)((char *)a2 + v42);
    *(void *)((char *)v4 + v42) = v55;
    uint64_t v44 = a3[21];
    uint64_t v45 = a3[22];
    id v46 = *(void **)((char *)a2 + v44);
    *(void *)((char *)v4 + v44) = v46;
    *(void *)((char *)v4 + v45) = *(void *)((char *)a2 + v45);
    uint64_t v47 = a3[24];
    *(void *)((char *)v4 + a3[23]) = *(void *)((char *)a2 + a3[23]);
    __dsta = (char *)v4 + v47;
    uint64_t v48 = (char *)a2 + v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v49 = v43;
    id v50 = v55;
    id v51 = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v58(v48, 1, v59))
    {
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
      memcpy(__dsta, v48, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(__dsta, v48, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(__dsta, 0, 1, v59);
    }
    *(void *)((char *)v4 + a3[25]) = *(void *)((char *)a2 + a3[25]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for REMTestStorePopulator.TestReminder(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_1A75717A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v14(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + a2[9];
  uint64_t v8 = sub_1A7571B60();
  uint64_t v9 = *(void *)(v8 - 8);
  id v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v11 = a1 + a2[10];
  if (!v10(v11, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  }

  if (*(void *)(a1 + a2[14] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[24];
  if (!v14(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for REMTestStorePopulator.TestReminder(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_1A75717A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v56 = v12;
  uint64_t v57 = v10;
  uint64_t v52 = v11;
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  uint64_t v15 = a3[9];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_1A7571B60();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v17, 1, v18))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  if (v20((char *)a2 + v22, 1, v18))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v24, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
  }
  uint64_t v26 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  uint64_t v27 = a3[13];
  uint64_t v28 = a3[14];
  uint64_t v29 = *(void **)((char *)a2 + v27);
  *(void *)((char *)a1 + v27) = v29;
  uint64_t v30 = (void *)((char *)a1 + v28);
  uint64_t v31 = (void *)((char *)a2 + v28);
  uint64_t v32 = *(void *)((char *)a2 + v28 + 8);
  id v33 = v29;
  if (v32)
  {
    *uint64_t v30 = *v31;
    v30[1] = v32;
    uint64_t v34 = v31[2];
    uint64_t v35 = v31[3];
    v30[2] = v34;
    v30[3] = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v36 = *((_OWORD *)v31 + 1);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v36;
  }
  uint64_t v37 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + v37) = *(void *)((char *)a2 + v37);
  uint64_t v38 = a3[18];
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *(void *)((char *)a1 + v38) = *(void *)((char *)a2 + v38);
  uint64_t v39 = a3[19];
  uint64_t v40 = a3[20];
  uint64_t v41 = *(void **)((char *)a2 + v39);
  *(void *)((char *)a1 + v39) = v41;
  id v53 = *(void **)((char *)a2 + v40);
  *(void *)((char *)a1 + v40) = v53;
  uint64_t v42 = a3[21];
  uint64_t v43 = a3[22];
  uint64_t v44 = *(void **)((char *)a2 + v42);
  *(void *)((char *)a1 + v42) = v44;
  *(void *)((char *)a1 + v43) = *(void *)((char *)a2 + v43);
  uint64_t v45 = a3[24];
  *(void *)((char *)a1 + a3[23]) = *(void *)((char *)a2 + a3[23]);
  __dsta = (char *)a1 + v45;
  id v46 = (char *)a2 + v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v47 = v41;
  id v48 = v53;
  id v49 = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v56(v46, 1, v57))
  {
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
    memcpy(__dsta, v46, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(__dsta, v46, v57);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(__dsta, 0, 1, v57);
  }
  *(void *)((char *)a1 + a3[25]) = *(void *)((char *)a2 + a3[25]);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMTestStorePopulator.TestReminder(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A75717A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  uint64_t v60 = v11;
  int v13 = v11(v8, 1, v9);
  uint64_t v61 = v10;
  uint64_t v62 = v9;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v15 = a3[9];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_1A7571B60();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_13:
  uint64_t v24 = a3[10];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  int v27 = v20((char *)a1 + v24, 1, v18);
  int v28 = v20(v26, 1, v18);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v25, v26, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
LABEL_18:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v25, v26, v18);
LABEL_19:
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  uint64_t v30 = a3[13];
  uint64_t v31 = *(void **)((char *)a1 + v30);
  uint64_t v32 = *(void **)((char *)a2 + v30);
  *(void *)((char *)a1 + v30) = v32;
  id v33 = v32;

  uint64_t v34 = a3[14];
  uint64_t v35 = (void *)((char *)a1 + v34);
  long long v36 = (void *)((char *)a2 + v34);
  uint64_t v37 = *(void *)((char *)a1 + v34 + 8);
  uint64_t v38 = *(void *)((char *)a2 + v34 + 8);
  if (v37)
  {
    if (v38)
    {
      *uint64_t v35 = *v36;
      v35[1] = v36[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v35[2] = v36[2];
      v35[3] = v36[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A73E572C((uint64_t)v35);
      long long v39 = *((_OWORD *)v36 + 1);
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v39;
    }
  }
  else if (v38)
  {
    *uint64_t v35 = *v36;
    v35[1] = v36[1];
    v35[2] = v36[2];
    v35[3] = v36[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v40 = *((_OWORD *)v36 + 1);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v40;
  }
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[19];
  uint64_t v42 = *(void **)((char *)a1 + v41);
  uint64_t v43 = *(void **)((char *)a2 + v41);
  *(void *)((char *)a1 + v41) = v43;
  id v44 = v43;

  uint64_t v45 = a3[20];
  id v46 = *(void **)((char *)a1 + v45);
  id v47 = *(void **)((char *)a2 + v45);
  *(void *)((char *)a1 + v45) = v47;
  id v48 = v47;

  uint64_t v49 = a3[21];
  uint64_t v50 = *(void **)((char *)a1 + v49);
  id v51 = *(void **)((char *)a2 + v49);
  *(void *)((char *)a1 + v49) = v51;
  id v52 = v51;

  *(void *)((char *)a1 + a3[22]) = *(void *)((char *)a2 + a3[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[23]) = *(void *)((char *)a2 + a3[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[24];
  uint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)a2 + v53;
  int v56 = v60((char *)a1 + v53, 1, v62);
  int v57 = v60(v55, 1, v62);
  if (!v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 24))(v54, v55, v62);
      goto LABEL_35;
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v54, v62);
    goto LABEL_34;
  }
  if (v57)
  {
LABEL_34:
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v54, v55, v62);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v54, 0, 1, v62);
LABEL_35:
  *(void *)((char *)a1 + a3[25]) = *(void *)((char *)a2 + a3[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A73E572C(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for REMTestStorePopulator.TestReminder(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A75717A0();
  uint64_t v11 = *(void *)(v10 - 8);
  long long v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v40 = v11;
  uint64_t v41 = v10;
  if (v39(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  uint64_t v14 = a3[9];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1A7571B60();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v21 = a3[10];
  int v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  if (v19((char *)a2 + v21, 1, v17))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v22, v23, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
  }
  uint64_t v25 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  uint64_t v26 = a3[14];
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  int v27 = (_OWORD *)((char *)a1 + v26);
  int v28 = (_OWORD *)((char *)a2 + v26);
  long long v29 = v28[1];
  *int v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + v30) = *(void *)((char *)a2 + v30);
  uint64_t v31 = a3[18];
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *(void *)((char *)a1 + v31) = *(void *)((char *)a2 + v31);
  uint64_t v32 = a3[20];
  *(void *)((char *)a1 + a3[19]) = *(void *)((char *)a2 + a3[19]);
  *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
  uint64_t v33 = a3[22];
  *(void *)((char *)a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
  *(void *)((char *)a1 + v33) = *(void *)((char *)a2 + v33);
  uint64_t v34 = a3[24];
  *(void *)((char *)a1 + a3[23]) = *(void *)((char *)a2 + a3[23]);
  uint64_t v35 = (char *)a1 + v34;
  long long v36 = (char *)a2 + v34;
  if (v39((char *)a2 + v34, 1, v41))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v35, v36, v41);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v35, 0, 1, v41);
  }
  *(void *)((char *)a1 + a3[25]) = *(void *)((char *)a2 + a3[25]);
  return a1;
}

void *assignWithTake for REMTestStorePopulator.TestReminder(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1A75717A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  uint64_t v55 = v13;
  int v15 = v13(v10, 1, v11);
  uint64_t v56 = v12;
  uint64_t v57 = v11;
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
  uint64_t v18 = a3[9];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_1A7571B60();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
LABEL_13:
  uint64_t v27 = a3[10];
  int v28 = (char *)a1 + v27;
  long long v29 = (char *)a2 + v27;
  int v30 = v23((char *)a1 + v27, 1, v21);
  int v31 = v23(v29, 1, v21);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v28, v29, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v28, 0, 1, v21);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
LABEL_18:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v28, v29, v21);
LABEL_19:
  uint64_t v33 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(void *)((char *)a1 + v33) = *(void *)((char *)a2 + v33);
  uint64_t v34 = a3[13];
  uint64_t v35 = *(void **)((char *)a1 + v34);
  *(void *)((char *)a1 + v34) = *(void *)((char *)a2 + v34);

  uint64_t v36 = a3[14];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  if (*(void *)((char *)a1 + v36 + 8))
  {
    uint64_t v39 = v38[1];
    if (v39)
    {
      void *v37 = *v38;
      v37[1] = v39;
      swift_bridgeObjectRelease();
      uint64_t v40 = v38[3];
      v37[2] = v38[2];
      v37[3] = v40;
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    sub_1A73E572C((uint64_t)v37);
  }
  long long v41 = *((_OWORD *)v38 + 1);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *((_OWORD *)v37 + 1) = v41;
LABEL_24:
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[19];
  uint64_t v43 = *(void **)((char *)a1 + v42);
  *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);

  uint64_t v44 = a3[20];
  uint64_t v45 = *(void **)((char *)a1 + v44);
  *(void *)((char *)a1 + v44) = *(void *)((char *)a2 + v44);

  uint64_t v46 = a3[21];
  id v47 = *(void **)((char *)a1 + v46);
  *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);

  *(void *)((char *)a1 + a3[22]) = *(void *)((char *)a2 + a3[22]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[23]) = *(void *)((char *)a2 + a3[23]);
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[24];
  uint64_t v49 = (char *)a1 + v48;
  uint64_t v50 = (char *)a2 + v48;
  int v51 = v55((char *)a1 + v48, 1, v57);
  int v52 = v55(v50, 1, v57);
  if (!v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 40))(v49, v50, v57);
      goto LABEL_30;
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v49, v57);
    goto LABEL_29;
  }
  if (v52)
  {
LABEL_29:
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v49, v50, v57);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v49, 0, 1, v57);
LABEL_30:
  *(void *)((char *)a1 + a3[25]) = *(void *)((char *)a2 + a3[25]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestReminder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A73E61AC);
}

uint64_t sub_1A73E61AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestReminder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A73E62F4);
}

uint64_t sub_1A73E62F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1A73E6428()
{
  sub_1A73E6598(319, &qword_1E96F2D10, MEMORY[0x1E4F26F90]);
  if (v0 <= 0x3F)
  {
    sub_1A73E6598(319, (unint64_t *)&qword_1EB704AF0, MEMORY[0x1E4F27928]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1A73E6598(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1A7573210();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for REMTestStorePopulator.TestListSection(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1A7571B60();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for REMTestStorePopulator.TestListSection(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1A7571B60();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for REMTestStorePopulator.TestListSection(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A7571B60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMTestStorePopulator.TestListSection(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A7571B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for REMTestStorePopulator.TestListSection(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A7571B60();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithTake for REMTestStorePopulator.TestListSection(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1A7571B60();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestListSection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A73E6EAC);
}

uint64_t sub_1A73E6EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestListSection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A73E6F74);
}

uint64_t sub_1A73E6F74(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A73E7020()
{
  sub_1A73E6598(319, (unint64_t *)&qword_1EB704AF0, MEMORY[0x1E4F27928]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestCustomSmartListSection()
{
  return &type metadata for REMTestStorePopulator.TestCustomSmartListSection;
}

uint64_t dispatch thunk of REMTestStoreDumpFormatter.formatAccount(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of REMTestStoreDumpFormatter.formatGroup(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of REMTestStoreDumpFormatter.formatList(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of REMTestStoreDumpFormatter.formatCustomSmartList(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of REMTestStoreDumpFormatter.formatReminder(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of REMTestStoreDumpFormatter.formatSection(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t type metadata accessor for DefaultDumpFormatter()
{
  return self;
}

uint64_t destroy for REMTestStorePopulator.TestReminder.RecurrenceRule(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMTestStorePopulator.TestReminder.RecurrenceRule(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  id v8 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMTestStorePopulator.TestReminder.RecurrenceRule(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = (void *)a2[2];
  a1[2] = v5;
  id v6 = v5;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for REMTestStorePopulator.TestReminder.RecurrenceRule(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestReminder.RecurrenceRule(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestReminder.RecurrenceRule(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestReminder.RecurrenceRule()
{
  return &type metadata for REMTestStorePopulator.TestReminder.RecurrenceRule;
}

uint64_t destroy for REMFeatureFlags.ExternalFeatureFlag()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for REMTestStorePopulator.TestReminder.Assignment(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMTestStorePopulator.TestReminder.Assignment(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for REMTestStorePopulator.TestReminder.Assignment(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestReminder.Assignment(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestReminder.Assignment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestReminder.Assignment()
{
  return &type metadata for REMTestStorePopulator.TestReminder.Assignment;
}

void **sub_1A73E76C8(void **a1, void **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1A7571B60();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    int v14 = v4;
    v13(v9, v10, v11);
    uint64_t v15 = a3[6];
    uint64_t v16 = (char *)v7 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))((char *)a2 + v15, 1, v11))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v13(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    *(void **)((char *)v7 + a3[7]) = *(void **)((char *)a2 + a3[7]);
  }
  return v7;
}

uint64_t sub_1A73E7888(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1A7571B60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  v9(v4, v5);
  uint64_t v7 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(char *, uint64_t))v9)(v7, v5);
  }
  return result;
}

void **sub_1A73E7990(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A7571B60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  id v13 = v6;
  v12(v8, v9, v10);
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)a2 + v14, 1, v10))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v12(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  *(void **)((char *)a1 + a3[7]) = *(void **)((char *)a2 + a3[7]);
  return a1;
}

void **sub_1A73E7AF0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1A7571B60();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 24);
  v14(v10, v11, v12);
  uint64_t v22 = a3;
  uint64_t v23 = a2;
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(a3) = v18((char *)a1 + v15, 1, v12);
  int v19 = v18(v17, 1, v12);
  if (!a3)
  {
    if (!v19)
    {
      v14(v16, v17, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v17, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
LABEL_7:
  *(void **)((char *)a1 + *(int *)(v22 + 28)) = *(void **)((char *)v23 + *(int *)(v22 + 28));
  return a1;
}

void *sub_1A73E7CC8(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = &a2[v6];
  uint64_t v9 = sub_1A7571B60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  *(void *)((char *)a1 + a3[7]) = *(void *)&a2[a3[7]];
  return a1;
}

void **sub_1A73E7E24(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A7571B60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v20 = a3;
  uint64_t v21 = a2;
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(a3) = v16((char *)a1 + v13, 1, v10);
  int v17 = v16(v15, 1, v10);
  if (!a3)
  {
    if (!v17)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_7:
  *(void **)((char *)a1 + *(int *)(v20 + 28)) = *(void **)((char *)v21 + *(int *)(v20 + 28));
  return a1;
}

uint64_t sub_1A73E7FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A73E800C);
}

uint64_t sub_1A73E800C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A7571B60();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1A73E813C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A73E8150);
}

void *sub_1A73E8150(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1A7571B60();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1A73E8280()
{
  sub_1A7571B60();
  if (v0 <= 0x3F)
  {
    sub_1A73E6598(319, (unint64_t *)&qword_1EB704AF0, MEMORY[0x1E4F27928]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1A73E8380(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1A7571B60();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1A73E8470(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1A7571B60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1A73E84E8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1A7571B60();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_1A73E8588(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A7571B60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1A73E862C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1A73E86B0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A7571B60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1A73E8744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A73E8758);
}

uint64_t sub_1A73E8758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A7571B60();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A73E8808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A73E881C);
}

uint64_t sub_1A73E881C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A7571B60();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A73E88C4()
{
  uint64_t result = sub_1A7571B60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A73E896C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_51Tm);
}

uint64_t sub_1A73E8984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_52Tm);
}

uint64_t sub_1A73E89B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_51Tm_0);
}

uint64_t sub_1A73E89C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_52Tm_0);
}

uint64_t *sub_1A73E89E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A75719C0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1A73E8AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A75719C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1A73E8B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A75719C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1A73E8BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A75719C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1A73E8C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A75719C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1A73E8CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A73E8CE0);
}

uint64_t __swift_get_extra_inhabitant_index_51Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A75719C0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1A73E8D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A73E8D64);
}

uint64_t __swift_store_extra_inhabitant_index_52Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A75719C0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1A73E8DD8()
{
  uint64_t result = sub_1A75719C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A73E8E74(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = (void *)result;
    swift_bridgeObjectRetain();
    id v2 = v1;
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1A73E8EC0(void *result)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A73E8F18()
{
  unint64_t result = qword_1E96F2D78;
  if (!qword_1E96F2D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2D78);
  }
  return result;
}

uint64_t sub_1A73E8F6C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 56);
  uint64_t v4 = *(void **)(a1 + 128);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A7315D30(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t objectdestroy_3Tm()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_1A73E9094()
{
  unint64_t result = qword_1E96F2D88;
  if (!qword_1E96F2D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2D88);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for REMTestStorePopulator.ContentsParseError(void *a1, void **a2)
{
  int v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void **assignWithCopy for REMTestStorePopulator.ContentsParseError(void **a1, void **a2)
{
  int v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void **assignWithTake for REMTestStorePopulator.ContentsParseError(void **a1, unint64_t *a2)
{
  int v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.ContentsParseError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFE9 && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483626);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 21;
  if (v4 >= 0x17) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.ContentsParseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFEA)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483626;
    if (a3 >= 0x7FFFFFEA) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFEA) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 21;
    }
  }
  return result;
}

void *sub_1A73E92B4(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.ContentsParseError()
{
  return &type metadata for REMTestStorePopulator.ContentsParseError;
}

unsigned char *storeEnumTagSinglePayload for REMTestStorePopulator.DumpError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A73E9380);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.DumpError()
{
  return &type metadata for REMTestStorePopulator.DumpError;
}

unint64_t sub_1A73E93BC()
{
  unint64_t result = qword_1E96F2DF8;
  if (!qword_1E96F2DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2DF8);
  }
  return result;
}

uint64_t sub_1A73E9434()
{
  type metadata accessor for REMAnalyticsManager();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  *(void *)(result + 24) = MEMORY[0x1E4FBC860];
  qword_1EB703040 = result;
  return result;
}

uint64_t static REMAnalyticsManager.shared.getter()
{
  if (qword_1EB703048 != -1) {
    swift_once();
  }

  return swift_retain();
}

void REMAnalyticsManager.post(event:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  id v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    sub_1A73E96BC(a1, (uint64_t)v6);
    uint64_t v7 = (unint64_t *)(v1 + 24);
    swift_beginAccess();
    unint64_t v8 = *(void *)(v1 + 24);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v1 + 24) = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v8 = sub_1A72AD6D4(0, *(void *)(v8 + 16) + 1, 1, v8);
      unint64_t *v7 = v8;
    }
    unint64_t v11 = *(void *)(v8 + 16);
    unint64_t v10 = *(void *)(v8 + 24);
    if (v11 >= v10 >> 1)
    {
      unint64_t v8 = sub_1A72AD6D4(v10 > 1, v11 + 1, 1, v8);
      unint64_t *v7 = v8;
    }
    *(void *)(v8 + 16) = v11 + 1;
    sub_1A73E9720((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v11);
    swift_endAccess();
  }
  else
  {
    _s19ReminderKitInternal9AnalyticsC9postEventyyAA012REMAnalyticsF0OFZ_0();
  }
}

uint64_t REMAnalyticsManager.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMAnalyticsManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t sub_1A73E96BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMAnalyticsEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A73E9720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMAnalyticsEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for REMAnalyticsManager()
{
  return self;
}

uint64_t method lookup function for REMAnalyticsManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMAnalyticsManager);
}

Swift::UInt64 __swiftcall UInt64.init(nanosecondsFromSeconds:)(Swift::Double nanosecondsFromSeconds)
{
  double v1 = nanosecondsFromSeconds * 1000000000.0;
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19) {
    return (unint64_t)v1;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t DoubleStacksQueue.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1A75723A0();
  uint64_t result = sub_1A75723A0();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t DoubleStacksQueue.isEmpty.getter()
{
  sub_1A7572B30();
  swift_getWitnessTable();
  if (sub_1A7572E30()) {
    char v0 = sub_1A7572E30();
  }
  else {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t DoubleStacksQueue.peek.getter()
{
  if (sub_1A7572E30()) {
    return sub_1A7572E20();
  }
  swift_getWitnessTable();
  return sub_1A7572550();
}

uint64_t DoubleStacksQueue.enqueue(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5, v2);
  sub_1A7572B30();
  return sub_1A7572AE0();
}

uint64_t DoubleStacksQueue.dequeue()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A7572B30();
  swift_getWitnessTable();
  if (sub_1A7572E30())
  {
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v3 = sub_1A7572950();
    swift_bridgeObjectRelease();
    *(void *)(v1 + 8) = v3;
    sub_1A7572B20();
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = swift_getWitnessTable();
  return MEMORY[0x1AD0CB0F0](v2, WitnessTable, v5);
}

Swift::Void __swiftcall DoubleStacksQueue.reset()()
{
}

uint64_t type metadata accessor for DoubleStacksQueue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A73E9C20()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F2E00);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F2E00);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t REMNavigationSpecifier.init(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v186 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v173 = (uint64_t)&v166 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A7571BC0();
  uint64_t v174 = *(void *)(v5 - 8);
  uint64_t v175 = v5;
  MEMORY[0x1F4188790](v5);
  id v170 = (char *)&v166 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A75719C0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v172 = (char *)&v166 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v169 = (char *)&v166 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v171 = (char *)&v166 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  int64_t v179 = (char *)&v166 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v178 = (char *)&v166 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v168 = (char *)&v166 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  int64_t v177 = (char *)&v166 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v176 = (char *)&v166 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  v167 = (char *)&v166 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  long long v29 = (char *)&v166 - v28;
  MEMORY[0x1F4188790](v27);
  int v31 = (char *)&v166 - v30;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB7020B8);
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v34 = (char *)&v166 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for URLParseResult(0);
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  id v181 = (char *)&v166 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v37);
  uint64_t v40 = (char *)&v166 - v39;
  uint64_t v41 = type metadata accessor for REMNavigationSpecifier(0);
  uint64_t v184 = *(void *)(v41 - 8);
  uint64_t v185 = v41;
  uint64_t v42 = MEMORY[0x1F4188790](v41);
  uint64_t v44 = (char *)&v166 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  uint64_t v180 = (uint64_t *)((char *)&v166 - v45);
  uint64_t v183 = v8;
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v187 = v7;
  uint64_t v188 = a1;
  uint64_t v182 = v46;
  v46(v31, (uint64_t)a1, v7);
  sub_1A73EBA2C(v31, (uint64_t)v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) != 1)
  {
    sub_1A73F923C((uint64_t)v34, (uint64_t)v40, type metadata accessor for URLParseResult);
    switch(*v40)
    {
      case 1:
        uint64_t v65 = *(void **)&v40[*(int *)(v35 + 28)];
        uint64_t v67 = v187;
        uint64_t v66 = v188;
        uint64_t v68 = v176;
        if (!v65) {
          goto LABEL_65;
        }
        uint64_t v69 = (uint64_t)v181;
        sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
        id v70 = v65;
        sub_1A73ED8E4(v69, (uint64_t)&v189);
        char v71 = v190;
        if (v190 == 255) {
          goto LABEL_64;
        }
        goto LABEL_14;
      case 2:
        char v74 = *(void **)&v40[*(int *)(v35 + 28)];
        uint64_t v67 = v187;
        uint64_t v66 = v188;
        uint64_t v68 = v177;
        if (!v74) {
          goto LABEL_65;
        }
        uint64_t v75 = (uint64_t)v181;
        sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
        id v70 = v74;
        sub_1A73ED8E4(v75, (uint64_t)&v189);
        char v71 = v190;
        if (v190 != 255)
        {
LABEL_14:
          uint64_t v72 = v189;
          (*(void (**)(char *, uint64_t))(v183 + 8))(v66, v67);
          sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
          uint64_t v73 = v180;
          *uint64_t v180 = (uint64_t)v70;
          v73[1] = v72;
          *((unsigned char *)v73 + 16) = v71;
          uint64_t v61 = v185;
          goto LABEL_87;
        }
LABEL_64:

LABEL_65:
        if (qword_1E96F0810 != -1) {
          swift_once();
        }
        uint64_t v135 = sub_1A7571E90();
        __swift_project_value_buffer(v135, (uint64_t)qword_1E96F2E00);
        v182(v68, (uint64_t)v66, v67);
        uint64_t v88 = sub_1A7571E80();
        os_log_type_t v89 = sub_1A7572FD0();
        if (!os_log_type_enabled(v88, v89)) {
          goto LABEL_84;
        }
        unint64_t v90 = (uint8_t *)swift_slowAlloc();
        uint64_t v91 = swift_slowAlloc();
        uint64_t v189 = v91;
        *(_DWORD *)unint64_t v90 = 136315138;
        uint64_t v136 = sub_1A7571890();
        uint64_t v192 = sub_1A72D1730(v136, v137, &v189);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        uint64_t v94 = *(void (**)(char *, uint64_t))(v183 + 8);
        v94(v68, v67);
        uint64_t v95 = "Missing ObjectID. Failed to create navigation specifier for list {url: %s}";
        goto LABEL_82;
      case 3:
        id v76 = *(void **)&v40[*(int *)(v35 + 28)];
        if (v76)
        {
          uint64_t v77 = (uint64_t)v181;
          sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
          id v78 = v76;
          sub_1A73EDFC8(v77, (uint64_t)&v189);
          (*(void (**)(char *, uint64_t))(v183 + 8))(v188, v187);
          sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
          __int16 v79 = v189;
          char v80 = BYTE2(v189);
          *(void *)uint64_t v44 = v78;
          *((_WORD *)v44 + 4) = v79;
          v44[10] = v80;
          uint64_t v61 = v185;
          goto LABEL_31;
        }
        id v181 = v40;
        uint64_t v147 = v187;
        uint64_t v146 = v188;
        if (qword_1E96F0810 != -1) {
          swift_once();
        }
        uint64_t v148 = sub_1A7571E90();
        __swift_project_value_buffer(v148, (uint64_t)qword_1E96F2E00);
        id v149 = v168;
        v182(v168, (uint64_t)v146, v147);
        id v150 = sub_1A7571E80();
        os_log_type_t v151 = sub_1A7572FD0();
        if (os_log_type_enabled(v150, v151))
        {
          id v152 = v149;
          id v153 = (uint8_t *)swift_slowAlloc();
          uint64_t v154 = swift_slowAlloc();
          uint64_t v189 = v154;
          *(_DWORD *)id v153 = 136315138;
          uint64_t v155 = sub_1A7571890();
          uint64_t v192 = sub_1A72D1730(v155, v156, &v189);
          sub_1A7573250();
          swift_bridgeObjectRelease();
          id v157 = *(void (**)(char *, uint64_t))(v183 + 8);
          v157(v152, v147);
          _os_log_impl(&dword_1A72A1000, v150, v151, "Missing ObjectID. Failed to create navigation specifier for reminder {url: %s}", v153, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AD0CD330](v154, -1, -1);
          MEMORY[0x1AD0CD330](v153, -1, -1);

          v157(v146, v147);
          uint64_t v158 = (uint64_t)v181;
          goto LABEL_83;
        }

        unint64_t v165 = *(void (**)(char *, uint64_t))(v183 + 8);
        v165(v149, v147);
        v165(v146, v147);
        sub_1A73F932C((uint64_t)v181, type metadata accessor for URLParseResult);
        goto LABEL_10;
      case 4:
        uint64_t v81 = *(void **)&v40[*(int *)(v35 + 28)];
        uint64_t v67 = v187;
        uint64_t v66 = v188;
        uint64_t v68 = v178;
        if (!v81) {
          goto LABEL_26;
        }
        uint64_t v82 = (uint64_t)v181;
        sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
        id v83 = v81;
        sub_1A73EE280(v82, (BOOL *)&v189);
        char v84 = v189;
        if (v189 != 2) {
          goto LABEL_86;
        }
        goto LABEL_25;
      case 5:
        uint64_t v85 = *(void **)&v40[*(int *)(v35 + 28)];
        uint64_t v67 = v187;
        uint64_t v66 = v188;
        uint64_t v68 = v179;
        if (!v85) {
          goto LABEL_26;
        }
        uint64_t v86 = (uint64_t)v181;
        sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
        id v83 = v85;
        sub_1A73EE280(v86, (BOOL *)&v189);
        char v84 = v189;
        if (v189 != 2)
        {
LABEL_86:
          char v163 = v84 & 1;
          (*(void (**)(char *, uint64_t))(v183 + 8))(v66, v67);
          sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
          uint64_t v73 = v180;
          *uint64_t v180 = (uint64_t)v83;
          *((unsigned char *)v73 + 8) = v163;
          uint64_t v61 = v185;
          goto LABEL_87;
        }
LABEL_25:

LABEL_26:
        if (qword_1E96F0810 != -1) {
          swift_once();
        }
        uint64_t v87 = sub_1A7571E90();
        __swift_project_value_buffer(v87, (uint64_t)qword_1E96F2E00);
        v182(v68, (uint64_t)v66, v67);
        uint64_t v88 = sub_1A7571E80();
        os_log_type_t v89 = sub_1A7572FD0();
        if (os_log_type_enabled(v88, v89))
        {
          unint64_t v90 = (uint8_t *)swift_slowAlloc();
          uint64_t v91 = swift_slowAlloc();
          uint64_t v189 = v91;
          *(_DWORD *)unint64_t v90 = 136315138;
          uint64_t v92 = sub_1A7571890();
          uint64_t v192 = sub_1A72D1730(v92, v93, &v189);
          sub_1A7573250();
          swift_bridgeObjectRelease();
          uint64_t v94 = *(void (**)(char *, uint64_t))(v183 + 8);
          v94(v68, v67);
          uint64_t v95 = "Missing ObjectID. Failed to create navigation specifier for section {url: %s}";
          goto LABEL_82;
        }
        goto LABEL_84;
      case 6:
        (*(void (**)(char *, uint64_t))(v183 + 8))(v188, v187);
        sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
        uint64_t v61 = v185;
        goto LABEL_31;
      case 7:
        uint64_t v96 = (uint64_t)v181;
        sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
        sub_1A73EE344(v96, (uint64_t)&v189);
        (*(void (**)(char *, uint64_t))(v183 + 8))(v188, v187);
        sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
        char v97 = v190;
        if (v190 == 255) {
          goto LABEL_10;
        }
        uint64_t v73 = v180;
        *uint64_t v180 = v189;
        *((unsigned char *)v73 + 8) = v97;
        uint64_t v61 = v185;
        goto LABEL_87;
      case 8:
        uint64_t v98 = (uint64_t)v181;
        sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
        sub_1A73EE344(v98, (uint64_t)&v189);
        (*(void (**)(char *, uint64_t))(v183 + 8))(v188, v187);
        sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
        char v99 = v190;
        if (v190 == 255) {
          goto LABEL_10;
        }
        uint64_t v73 = v180;
        *uint64_t v180 = v189;
        *((unsigned char *)v73 + 8) = v99;
        uint64_t v61 = v185;
        goto LABEL_87;
      case 9:
        uint64_t v100 = (uint64_t)v181;
        sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
        sub_1A73EE344(v100, (uint64_t)&v189);
        (*(void (**)(char *, uint64_t))(v183 + 8))(v188, v187);
        sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
        char v101 = v190;
        if (v190 == 255) {
          goto LABEL_10;
        }
        uint64_t v73 = v180;
        *uint64_t v180 = v189;
        *((unsigned char *)v73 + 8) = v101;
        uint64_t v61 = v185;
        goto LABEL_87;
      case 0xA:
        uint64_t v102 = (uint64_t)v181;
        sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
        sub_1A73EE344(v102, (uint64_t)&v189);
        (*(void (**)(char *, uint64_t))(v183 + 8))(v188, v187);
        sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
        char v103 = v190;
        if (v190 == 255) {
          goto LABEL_10;
        }
        uint64_t v73 = v180;
        *uint64_t v180 = v189;
        *((unsigned char *)v73 + 8) = v103;
        uint64_t v61 = v185;
        goto LABEL_87;
      case 0xB:
        uint64_t v104 = (uint64_t)v181;
        sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
        double v105 = sub_1A73EE934(v104, &v189);
        uint64_t v106 = v190;
        if (v190 != 1)
        {
          uint64_t v128 = v189;
          (*(void (**)(char *, uint64_t, double))(v183 + 8))(v188, v187, v105);
          sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
          uint64_t v73 = v180;
          *uint64_t v180 = v128;
          v73[1] = v106;
          uint64_t v61 = v185;
          goto LABEL_87;
        }
        uint64_t v67 = v187;
        uint64_t v66 = v188;
        if (qword_1E96F0810 != -1) {
          swift_once();
        }
        uint64_t v107 = sub_1A7571E90();
        __swift_project_value_buffer(v107, (uint64_t)qword_1E96F2E00);
        id v108 = &v194;
        goto LABEL_80;
      case 0xC:
        uint64_t v109 = (uint64_t)v181;
        sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
        sub_1A73EE344(v109, (uint64_t)&v189);
        (*(void (**)(char *, uint64_t))(v183 + 8))(v188, v187);
        sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
        char v110 = v190;
        if (v190 == 255) {
          goto LABEL_10;
        }
        uint64_t v73 = v180;
        *uint64_t v180 = v189;
        *((unsigned char *)v73 + 8) = v110;
        uint64_t v61 = v185;
        goto LABEL_87;
      case 0xD:
        uint64_t v111 = (uint64_t)v181;
        sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
        sub_1A73EE344(v111, (uint64_t)&v189);
        (*(void (**)(char *, uint64_t))(v183 + 8))(v188, v187);
        sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
        char v112 = v190;
        if (v190 == 255) {
          goto LABEL_10;
        }
        uint64_t v73 = v180;
        *uint64_t v180 = v189;
        *((unsigned char *)v73 + 8) = v112;
        uint64_t v61 = v185;
        goto LABEL_87;
      case 0xE:
        uint64_t v113 = (uint64_t)v181;
        sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
        sub_1A73EEC1C(v113, (uint64_t)&v189);
        (*(void (**)(char *, uint64_t))(v183 + 8))(v188, v187);
        sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
        if (v189 == 3) {
          goto LABEL_10;
        }
        unsigned __int8 v114 = v191;
        uint64_t v115 = v190;
        uint64_t v73 = v180;
        *uint64_t v180 = v189;
        v73[1] = v115;
        *((unsigned char *)v73 + 16) = v114;
        uint64_t v61 = v185;
        goto LABEL_87;
      case 0xF:
        uint64_t v116 = (uint64_t)v181;
        sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
        sub_1A73EE344(v116, (uint64_t)&v189);
        (*(void (**)(char *, uint64_t))(v183 + 8))(v188, v187);
        sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
        char v117 = v190;
        if (v190 == 255) {
          goto LABEL_10;
        }
        uint64_t v73 = v180;
        *uint64_t v180 = v189;
        *((unsigned char *)v73 + 8) = v117;
        uint64_t v61 = v185;
        goto LABEL_87;
      case 0x10:
        uint64_t v118 = (uint64_t)v181;
        sub_1A73F92C4((uint64_t)v40, (uint64_t)v181, type metadata accessor for URLParseResult);
        sub_1A73EEB14(v118, (uint64_t)&v189);
        unsigned __int8 v119 = v191;
        if (v191 != 255)
        {
          uint64_t v121 = v189;
          uint64_t v120 = v190;
          (*(void (**)(char *, uint64_t))(v183 + 8))(v188, v187);
          sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
          uint64_t v73 = v180;
          *uint64_t v180 = v121;
          v73[1] = v120;
          *((unsigned char *)v73 + 16) = v119;
          uint64_t v61 = v185;
          goto LABEL_87;
        }
        uint64_t v67 = v187;
        uint64_t v66 = v188;
        if (qword_1E96F0810 != -1) {
          swift_once();
        }
        uint64_t v159 = sub_1A7571E90();
        __swift_project_value_buffer(v159, (uint64_t)qword_1E96F2E00);
        id v108 = &v193;
LABEL_80:
        uint64_t v68 = (char *)*(v108 - 32);
        v182(v68, (uint64_t)v66, v67);
        uint64_t v88 = sub_1A7571E80();
        os_log_type_t v89 = sub_1A7572FD0();
        if (!os_log_type_enabled(v88, v89)) {
          goto LABEL_84;
        }
        unint64_t v90 = (uint8_t *)swift_slowAlloc();
        uint64_t v91 = swift_slowAlloc();
        uint64_t v189 = v91;
        *(_DWORD *)unint64_t v90 = 136315138;
        uint64_t v160 = sub_1A7571890();
        uint64_t v192 = sub_1A72D1730(v160, v161, &v189);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        uint64_t v94 = *(void (**)(char *, uint64_t))(v183 + 8);
        v94(v68, v67);
        uint64_t v95 = "nil seach path specifier. Failed to create url {%s}";
        goto LABEL_82;
      case 0x11:
      case 0x12:
        (*(void (**)(char *, uint64_t))(v183 + 8))(v188, v187);
        sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
        uint64_t v73 = v180;
        uint64_t v61 = v185;
        goto LABEL_87;
      case 0x13:
        uint64_t v122 = v173;
        sub_1A72EFD80((uint64_t)&v40[*(int *)(v35 + 24)], v173);
        uint64_t v123 = v174;
        uint64_t v124 = v175;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v122, 1, v175) != 1)
        {
          uint64_t v129 = *(void (**)(char *, uint64_t, uint64_t))(v123 + 32);
          id v130 = v170;
          v129(v170, v122, v124);
          uint64_t v131 = sub_1A73F0004();
          uint64_t v133 = v132;
          (*(void (**)(char *, uint64_t))(v183 + 8))(v188, v187);
          sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
          if (v133 == 1)
          {
            uint64_t v131 = 0;
            uint64_t v133 = 0;
          }
          uint64_t v73 = v180;
          v129((char *)v180, (uint64_t)v130, v124);
          uint64_t v134 = (uint64_t *)((char *)v73
                           + *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20));
          uint64_t *v134 = v131;
          v134[1] = v133;
          uint64_t v61 = v185;
LABEL_87:
          swift_storeEnumTagMultiPayload();
          goto LABEL_88;
        }
        sub_1A72CB560(v122, &qword_1EB704C40);
        if (qword_1E96F0810 != -1) {
          swift_once();
        }
        uint64_t v125 = sub_1A7571E90();
        __swift_project_value_buffer(v125, (uint64_t)qword_1E96F2E00);
        uint64_t v68 = v172;
        uint64_t v67 = v187;
        uint64_t v66 = v188;
        v182(v172, (uint64_t)v188, v187);
        uint64_t v88 = sub_1A7571E80();
        os_log_type_t v89 = sub_1A7572FD0();
        if (!os_log_type_enabled(v88, v89))
        {
LABEL_84:

          goto LABEL_85;
        }
        unint64_t v90 = (uint8_t *)swift_slowAlloc();
        uint64_t v91 = swift_slowAlloc();
        uint64_t v189 = v91;
        *(_DWORD *)unint64_t v90 = 136315138;
        uint64_t v126 = sub_1A7571890();
        uint64_t v192 = sub_1A72D1730(v126, v127, &v189);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        uint64_t v94 = *(void (**)(char *, uint64_t))(v183 + 8);
        v94(v68, v67);
        uint64_t v95 = "Missing UUID. Failed to create navigation specifier for shared template {url: %s}";
LABEL_82:
        _os_log_impl(&dword_1A72A1000, v88, v89, v95, v90, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v91, -1, -1);
        MEMORY[0x1AD0CD330](v90, -1, -1);

        v94(v188, v67);
        uint64_t v158 = (uint64_t)v40;
LABEL_83:
        sub_1A73F932C(v158, type metadata accessor for URLParseResult);
        uint64_t v57 = 1;
        goto LABEL_11;
      default:
        uint64_t v58 = *(void **)&v40[*(int *)(v35 + 28)];
        if (v58)
        {
          uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v183 + 8);
          id v60 = v58;
          v59((uint64_t)v188, v187);
          sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
          *(void *)uint64_t v44 = v60;
          uint64_t v61 = v185;
LABEL_31:
          swift_storeEnumTagMultiPayload();
          uint64_t v73 = v180;
          sub_1A73F923C((uint64_t)v44, (uint64_t)v180, type metadata accessor for REMNavigationSpecifier);
LABEL_88:
          uint64_t v63 = v186;
          uint64_t v64 = v184;
          sub_1A73F923C((uint64_t)v73, v186, type metadata accessor for REMNavigationSpecifier);
          uint64_t v57 = 0;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v63, v57, 1, v61);
        }
        uint64_t v67 = v187;
        uint64_t v66 = v188;
        if (qword_1E96F0810 != -1) {
          swift_once();
        }
        uint64_t v138 = sub_1A7571E90();
        __swift_project_value_buffer(v138, (uint64_t)qword_1E96F2E00);
        uint64_t v68 = v167;
        v182(v167, (uint64_t)v66, v67);
        id v139 = sub_1A7571E80();
        os_log_type_t v140 = sub_1A7572FD0();
        if (os_log_type_enabled(v139, v140))
        {
          uint64_t v141 = (uint8_t *)swift_slowAlloc();
          uint64_t v142 = swift_slowAlloc();
          uint64_t v189 = v142;
          *(_DWORD *)uint64_t v141 = 136315138;
          uint64_t v143 = sub_1A7571890();
          uint64_t v192 = sub_1A72D1730(v143, v144, &v189);
          sub_1A7573250();
          swift_bridgeObjectRelease();
          uint64_t v145 = *(void (**)(char *, uint64_t))(v183 + 8);
          v145(v68, v67);
          _os_log_impl(&dword_1A72A1000, v139, v140, "Missing ObjectID. Failed to create navigation specifier for account {url: %s}", v141, 0xCu);
          uint64_t v57 = 1;
          swift_arrayDestroy();
          MEMORY[0x1AD0CD330](v142, -1, -1);
          MEMORY[0x1AD0CD330](v141, -1, -1);

          v145(v188, v67);
          sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
          goto LABEL_11;
        }

LABEL_85:
        unint64_t v162 = *(void (**)(char *, uint64_t))(v183 + 8);
        v162(v68, v67);
        v162(v66, v67);
        sub_1A73F932C((uint64_t)v40, type metadata accessor for URLParseResult);
        break;
    }
    goto LABEL_10;
  }
  sub_1A72CB560((uint64_t)v34, qword_1EB7020B8);
  if (qword_1E96F0810 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_1A7571E90();
  __swift_project_value_buffer(v47, (uint64_t)qword_1E96F2E00);
  uint64_t v49 = v187;
  uint64_t v48 = v188;
  v182(v29, (uint64_t)v188, v187);
  uint64_t v50 = sub_1A7571E80();
  os_log_type_t v51 = sub_1A7572FD0();
  if (!os_log_type_enabled(v50, v51))
  {

    uint64_t v62 = *(void (**)(char *, uint64_t))(v183 + 8);
    v62(v29, v49);
    v62(v48, v49);
LABEL_10:
    uint64_t v57 = 1;
    goto LABEL_11;
  }
  int v52 = (uint8_t *)swift_slowAlloc();
  uint64_t v53 = swift_slowAlloc();
  uint64_t v189 = v53;
  *(_DWORD *)int v52 = 136315138;
  uint64_t v54 = sub_1A7571890();
  uint64_t v192 = sub_1A72D1730(v54, v55, &v189);
  sub_1A7573250();
  swift_bridgeObjectRelease();
  uint64_t v56 = *(void (**)(char *, uint64_t))(v183 + 8);
  v56(v29, v49);
  _os_log_impl(&dword_1A72A1000, v50, v51, "Could not parse url. Failed to create navigation specifier {url: %s}", v52, 0xCu);
  uint64_t v57 = 1;
  swift_arrayDestroy();
  MEMORY[0x1AD0CD330](v53, -1, -1);
  MEMORY[0x1AD0CD330](v52, -1, -1);

  v56(v48, v49);
LABEL_11:
  uint64_t v61 = v185;
  uint64_t v63 = v186;
  uint64_t v64 = v184;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v63, v57, 1, v61);
}

uint64_t type metadata accessor for URLParseResult(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1EB7020A8);
}

uint64_t type metadata accessor for REMNavigationSpecifier(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1EB701E18);
}

uint64_t sub_1A73EBA2C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v222 = a2;
  uint64_t v3 = sub_1A7571BC0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v214 = v3;
  uint64_t v215 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v210 = &v206[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  id v212 = &v206[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v216 = &v206[-v9];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704920);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v206[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1A75715C0();
  uint64_t v218 = *(void *)(v13 - 8);
  uint64_t v219 = v13;
  MEMORY[0x1F4188790](v13);
  id v217 = &v206[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1A75719C0();
  uint64_t v223 = *(void *)(v15 - 8);
  uint64_t v224 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = &v206[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  id v211 = &v206[-v20];
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = &v206[-v22];
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = &v206[-v25];
  uint64_t v27 = MEMORY[0x1F4188790](v24);
  id v208 = &v206[-v28];
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v209 = &v206[-v30];
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v33 = &v206[-v32];
  uint64_t v34 = MEMORY[0x1F4188790](v31);
  uint64_t v36 = &v206[-v35];
  MEMORY[0x1F4188790](v34);
  uint64_t v38 = &v206[-v37];
  uint64_t v225 = type metadata accessor for URLParseResult(0);
  uint64_t v221 = *(void *)(v225 - 8);
  MEMORY[0x1F4188790](v225);
  uint64_t v213 = &v206[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v40 = sub_1A7571980();
  if (!v41) {
    goto LABEL_12;
  }
  uint64_t v42 = v41;
  id v220 = a1;
  if (v40 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v42 == v43)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v220;
    goto LABEL_6;
  }
  char v44 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1 = v220;
  if ((v44 & 1) == 0)
  {
LABEL_12:
    if (qword_1E96F0810 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_1A7571E90();
    __swift_project_value_buffer(v61, (uint64_t)qword_1E96F2E00);
    uint64_t v63 = v223;
    uint64_t v62 = v224;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v223 + 16))(v18, a1, v224);
    uint64_t v64 = sub_1A7571E80();
    os_log_type_t v65 = sub_1A7572FD0();
    BOOL v66 = os_log_type_enabled(v64, v65);
    uint64_t v53 = v225;
    if (v66)
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      v228[0] = v68;
      *(_DWORD *)uint64_t v67 = 136315138;
      uint64_t v69 = sub_1A7571890();
      uint64_t v227 = sub_1A72D1730(v69, v70, v228);
      uint64_t v53 = v225;
      sub_1A7573250();
      swift_bridgeObjectRelease();
      char v71 = *(void (**)(unsigned char *, uint64_t))(v63 + 8);
      uint64_t v72 = v18;
      uint64_t v73 = v224;
      v71(v72, v224);
      _os_log_impl(&dword_1A72A1000, v64, v65, "url has unexpected scheme -- failed to parse url {url: %s}", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v68, -1, -1);
      MEMORY[0x1AD0CD330](v67, -1, -1);

      v71(a1, v73);
      uint64_t v60 = 1;
      goto LABEL_19;
    }

    char v74 = *(void (**)(unsigned char *, uint64_t))(v63 + 8);
    v74(v18, v62);
    goto LABEL_17;
  }
LABEL_6:
  sub_1A7571960();
  if (v45)
  {
    sub_1A7572680();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    int v46 = sub_1A73FB9CC();
    if (v46 == 20)
    {
      swift_bridgeObjectRelease();
      if (qword_1E96F0810 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_1A7571E90();
      __swift_project_value_buffer(v47, (uint64_t)qword_1E96F2E00);
      uint64_t v49 = v223;
      uint64_t v48 = v224;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v223 + 16))(v36, a1, v224);
      uint64_t v50 = sub_1A7571E80();
      os_log_type_t v51 = sub_1A7572FD0();
      BOOL v52 = os_log_type_enabled(v50, v51);
      uint64_t v53 = v225;
      if (v52)
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        v228[0] = v55;
        *(_DWORD *)uint64_t v54 = 136315138;
        uint64_t v56 = sub_1A7571890();
        uint64_t v227 = sub_1A72D1730(v56, v57, v228);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        uint64_t v58 = *(void (**)(unsigned char *, uint64_t))(v49 + 8);
        v58(v36, v48);
        _os_log_impl(&dword_1A72A1000, v50, v51, "url has unknown host -- failed to parse url {url: %s}", v54, 0xCu);
        swift_arrayDestroy();
        uint64_t v59 = v55;
        uint64_t v53 = v225;
        MEMORY[0x1AD0CD330](v59, -1, -1);
        MEMORY[0x1AD0CD330](v54, -1, -1);

        v58(v220, v48);
        uint64_t v60 = 1;
LABEL_19:
        uint64_t v75 = v222;
LABEL_20:
        uint64_t v76 = v221;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v75, v60, 1, v53);
      }

      char v103 = *(void (**)(unsigned char *, uint64_t))(v49 + 8);
      v103(v36, v48);
      v103(a1, v48);
LABEL_18:
      uint64_t v60 = 1;
      goto LABEL_19;
    }
    int v88 = v46;
    sub_1A7571590();
    id v90 = (id)v218;
    uint64_t v89 = v219;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v218 + 48))(v12, 1, v219) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1A72CB560((uint64_t)v12, &qword_1EB704920);
      if (qword_1E96F0810 != -1) {
        swift_once();
      }
      uint64_t v91 = sub_1A7571E90();
      __swift_project_value_buffer(v91, (uint64_t)qword_1E96F2E00);
      uint64_t v92 = v223;
      uint64_t v62 = v224;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v223 + 16))(v33, a1, v224);
      unint64_t v93 = sub_1A7571E80();
      os_log_type_t v94 = sub_1A7572FD0();
      BOOL v95 = os_log_type_enabled(v93, v94);
      uint64_t v53 = v225;
      if (v95)
      {
        uint64_t v96 = (uint8_t *)swift_slowAlloc();
        uint64_t v97 = swift_slowAlloc();
        v228[0] = v97;
        *(_DWORD *)uint64_t v96 = 136315138;
        uint64_t v98 = sub_1A7571890();
        uint64_t v227 = sub_1A72D1730(v98, v99, v228);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        uint64_t v100 = *(void (**)(unsigned char *, uint64_t))(v92 + 8);
        v100(v33, v62);
        _os_log_impl(&dword_1A72A1000, v93, v94, "Failed to get url components -- failed to parse url {url: %s}", v96, 0xCu);
        uint64_t v60 = 1;
        swift_arrayDestroy();
        uint64_t v101 = v97;
        uint64_t v53 = v225;
        MEMORY[0x1AD0CD330](v101, -1, -1);
        MEMORY[0x1AD0CD330](v96, -1, -1);

        v100(v220, v62);
        goto LABEL_19;
      }

      char v74 = *(void (**)(unsigned char *, uint64_t))(v92 + 8);
      v74(v33, v62);
LABEL_17:
      v74(a1, v62);
      goto LABEL_18;
    }
    (*((void (**)(unsigned char *, unsigned char *, uint64_t))v90 + 4))(v217, v12, v89);
    int v207 = v88;
    if (v88 - 6 < 0xD)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v215 + 56))(v216, 1, 1, v214);
      uint64_t v104 = sub_1A75718A0();
      id v90 = 0;
      uint64_t v105 = *(void *)(v104 + 16);
      if (v105)
      {
LABEL_36:
        uint64_t v106 = (unint64_t *)(v104 + 40);
        uint64_t v107 = (char *)MEMORY[0x1E4FBC860];
        while (1)
        {
          uint64_t v109 = *(v106 - 1);
          unint64_t v108 = *v106;
          BOOL v110 = v109 == 47 && v108 == 0xE100000000000000;
          if (!v110 && (sub_1A7573DB0() & 1) == 0)
          {
            sub_1A7572680();
            swift_bridgeObjectRetain();
            char v111 = sub_1A73FBA20();
            if (v111 == 18)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v129 = v211;
              if (qword_1E96F0810 == -1) {
                goto LABEL_59;
              }
              goto LABEL_110;
            }
            char v112 = v111;
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v107 = sub_1A72AD708(0, *((void *)v107 + 2) + 1, 1, v107);
            }
            unint64_t v114 = *((void *)v107 + 2);
            unint64_t v113 = *((void *)v107 + 3);
            if (v114 >= v113 >> 1) {
              uint64_t v107 = sub_1A72AD708((char *)(v113 > 1), v114 + 1, 1, v107);
            }
            *((void *)v107 + 2) = v114 + 1;
            v107[v114 + 32] = v112;
          }
          v106 += 2;
          if (!--v105) {
            goto LABEL_96;
          }
        }
      }
LABEL_95:
      uint64_t v107 = (char *)MEMORY[0x1E4FBC860];
LABEL_96:
      swift_bridgeObjectRelease();
      uint64_t v188 = (uint64_t)v213;
      *uint64_t v213 = v207;
      uint64_t v53 = v225;
      uint64_t v189 = v216;
      sub_1A72EFD80((uint64_t)v216, v188 + *(int *)(v225 + 24));
      *(void *)(v188 + *(int *)(v53 + 28)) = v90;
      *(void *)(v188 + 8) = v107;
      uint64_t v190 = v217;
      uint64_t v191 = sub_1A7571570();
      (*(void (**)(unsigned char *, uint64_t))(v223 + 8))(v220, v224);
      sub_1A72CB560((uint64_t)v189, &qword_1EB704C40);
      (*(void (**)(unsigned char *, uint64_t))(v218 + 8))(v190, v219);
      *(void *)(v188 + *(int *)(v53 + 32)) = v191;
      uint64_t v75 = v222;
      sub_1A73F923C(v188, v222, type metadata accessor for URLParseResult);
      uint64_t v60 = 0;
      goto LABEL_20;
    }
    uint64_t v115 = v223;
    BOOL v116 = v88 >= 6u;
    char v117 = (void *)sub_1A75718A0();
    v228[0] = (uint64_t)v117;
    if (v117[2] < 2uLL)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1E96F0810 != -1) {
        swift_once();
      }
      uint64_t v118 = sub_1A7571E90();
      __swift_project_value_buffer(v118, (uint64_t)qword_1E96F2E00);
      unsigned __int8 v119 = v220;
      uint64_t v120 = v224;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v115 + 16))(v23, v220, v224);
      uint64_t v121 = sub_1A7571E80();
      os_log_type_t v122 = sub_1A7572FD0();
      if (os_log_type_enabled(v121, v122))
      {
        uint64_t v123 = (uint8_t *)swift_slowAlloc();
        uint64_t v124 = swift_slowAlloc();
        uint64_t v227 = v124;
        *(_DWORD *)uint64_t v123 = 136315138;
        uint64_t v125 = sub_1A7571890();
        uint64_t v226 = sub_1A72D1730(v125, v126, &v227);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        unint64_t v127 = *(void (**)(unsigned char *, uint64_t))(v115 + 8);
        v127(v23, v120);
        _os_log_impl(&dword_1A72A1000, v121, v122, "url path is too short -- failed to parse url {url: %s}", v123, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v124, -1, -1);
        MEMORY[0x1AD0CD330](v123, -1, -1);

        v127(v220, v120);
        (*(void (**)(unsigned char *, uint64_t))(v218 + 8))(v217, v219);
      }
      else
      {

        uint64_t v143 = *(void (**)(unsigned char *, uint64_t))(v115 + 8);
        v143(v23, v120);
        v143(v119, v120);
        (*((void (**)(unsigned char *, uint64_t))v90 + 1))(v217, v219);
      }
      uint64_t v76 = v221;
      uint64_t v75 = v222;
      uint64_t v60 = 1;
      uint64_t v53 = v225;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v75, v60, 1, v53);
    }
    uint64_t v128 = v117[4];
    unint64_t v108 = v117[5];
    swift_bridgeObjectRetain();
    sub_1A72E0D10(0, 1);
    if (v128 == 47 && v108 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      uint64_t v129 = (unsigned char *)v224;
      uint64_t v109 = (uint64_t)v212;
    }
    else
    {
      char v144 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      uint64_t v129 = (unsigned char *)v224;
      uint64_t v109 = (uint64_t)v212;
      if ((v144 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_1E96F0810 != -1) {
          swift_once();
        }
        uint64_t v166 = sub_1A7571E90();
        __swift_project_value_buffer(v166, (uint64_t)qword_1E96F2E00);
        v167 = *(void (**)(unsigned char *, uint64_t, unsigned char *))(v115 + 16);
        uint64_t v168 = v115;
        v169 = v220;
        v167(v26, (uint64_t)v220, v129);
        id v170 = sub_1A7571E80();
        os_log_type_t v171 = sub_1A7572FD0();
        if (!os_log_type_enabled(v170, v171))
        {

          id v181 = *(void (**)(unsigned char *, unsigned char *))(v168 + 8);
          v181(v26, v129);
          v181(v169, v129);
          (*((void (**)(unsigned char *, uint64_t))v90 + 1))(v217, v219);
          goto LABEL_84;
        }
        uint64_t v172 = (uint8_t *)swift_slowAlloc();
        uint64_t v173 = swift_slowAlloc();
        uint64_t v227 = v173;
        *(_DWORD *)uint64_t v172 = 136315138;
        uint64_t v174 = sub_1A7571890();
        uint64_t v226 = sub_1A72D1730(v174, v175, &v227);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        uint64_t v176 = *(void (**)(unsigned char *, unsigned char *))(v168 + 8);
        v176(v26, v129);
        _os_log_impl(&dword_1A72A1000, v170, v171, "unexpected path component structure -- failed to parse url {url: %s}", v172, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v173, -1, -1);
        MEMORY[0x1AD0CD330](v172, -1, -1);

        v176(v220, v129);
LABEL_79:
        (*(void (**)(unsigned char *, uint64_t))(v218 + 8))(v217, v219);
LABEL_84:
        uint64_t v76 = v221;
        uint64_t v75 = v222;
        uint64_t v53 = v225;
        uint64_t v60 = 1;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v75, v60, 1, v53);
      }
    }
    if (!*(void *)(v228[0] + 16))
    {
      __break(1u);
LABEL_110:
      swift_once();
LABEL_59:
      uint64_t v130 = sub_1A7571E90();
      __swift_project_value_buffer(v130, (uint64_t)qword_1E96F2E00);
      uint64_t v131 = v223;
      uint64_t v132 = v220;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v223 + 16))(v129, v220, v224);
      swift_bridgeObjectRetain();
      uint64_t v133 = sub_1A7571E80();
      os_log_type_t v134 = sub_1A7572FD0();
      BOOL v135 = os_log_type_enabled(v133, v134);
      uint64_t v53 = v225;
      if (v135)
      {
        uint64_t v136 = swift_slowAlloc();
        uint64_t v137 = swift_slowAlloc();
        v228[0] = v137;
        *(_DWORD *)uint64_t v136 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v227 = sub_1A72D1730(v109, v108, v228);
        sub_1A7573250();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v136 + 12) = 2080;
        uint64_t v138 = sub_1A7571890();
        uint64_t v227 = sub_1A72D1730(v138, v139, v228);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        os_log_type_t v140 = *(void (**)(unsigned char *, uint64_t))(v131 + 8);
        uint64_t v141 = v224;
        v140(v129, v224);
        _os_log_impl(&dword_1A72A1000, v133, v134, "unexpected url path component -- failed to parse url {component: %s, url: %s}", (uint8_t *)v136, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v137, -1, -1);
        uint64_t v142 = v136;
        uint64_t v53 = v225;
        MEMORY[0x1AD0CD330](v142, -1, -1);

        v140(v220, v141);
      }
      else
      {

        id v164 = *(void (**)(unsigned char *, uint64_t))(v131 + 8);
        uint64_t v165 = v224;
        v164(v129, v224);
        swift_bridgeObjectRelease_n();

        v164(v132, v165);
      }
      sub_1A72CB560((uint64_t)v216, &qword_1EB704C40);
      (*(void (**)(unsigned char *, uint64_t))(v218 + 8))(v217, v219);
      goto LABEL_18;
    }
    swift_bridgeObjectRetain();
    sub_1A72E0D10(0, 1);
    sub_1A7571B70();
    swift_bridgeObjectRelease();
    uint64_t v146 = v214;
    uint64_t v145 = v215;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v215 + 48))(v109, 1, v214) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A72CB560(v109, &qword_1EB704C40);
      if (qword_1E96F0810 != -1) {
        swift_once();
      }
      uint64_t v147 = sub_1A7571E90();
      __swift_project_value_buffer(v147, (uint64_t)qword_1E96F2E00);
      uint64_t v148 = v209;
      id v149 = v220;
      (*(void (**)(unsigned char *, unsigned char *, unsigned char *))(v115 + 16))(v209, v220, v129);
      id v150 = sub_1A7571E80();
      os_log_type_t v151 = sub_1A7572FD0();
      if (os_log_type_enabled(v150, v151))
      {
        id v152 = (uint8_t *)swift_slowAlloc();
        uint64_t v153 = swift_slowAlloc();
        uint64_t v227 = v153;
        *(_DWORD *)id v152 = 136315138;
        uint64_t v154 = sub_1A7571890();
        uint64_t v226 = sub_1A72D1730(v154, v155, &v227);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        unint64_t v156 = *(void (**)(unsigned char *, uint64_t))(v115 + 8);
        id v157 = v148;
        uint64_t v158 = v224;
        v156(v157, v224);
        _os_log_impl(&dword_1A72A1000, v150, v151, "failed to get object uuid -- failed to parse url {url: %s}", v152, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v153, -1, -1);
        MEMORY[0x1AD0CD330](v152, -1, -1);

        v156(v149, v158);
      }
      else
      {

        int64_t v177 = *(void (**)(unsigned char *, unsigned char *))(v115 + 8);
        v177(v148, v129);
        v177(v149, v129);
      }
      goto LABEL_79;
    }
    uint64_t v159 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v145 + 32);
    uint64_t v160 = v210;
    v159(v210, v109, v146);
    if (v116)
    {
      swift_bridgeObjectRelease();
      unint64_t v161 = v216;
      v159(v216, (uint64_t)v160, v146);
      uint64_t v162 = 0;
      id v90 = 0;
      uint64_t v163 = v215;
      goto LABEL_94;
    }
    uint64_t v178 = sub_1A7572680();
    uint64_t v180 = v179;
    swift_bridgeObjectRelease();
    if (v178 == 0x63636164636D6572 && v180 == 0xEC000000746E756FLL || (sub_1A7573DB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      ObjCClassFromMetadata = self;
      unint64_t v161 = v216;
    }
    else
    {
      if (v178 == 0x73696C64636D6572 && v180 == 0xE900000000000074)
      {
        swift_bridgeObjectRelease();
        unint64_t v161 = v216;
      }
      else
      {
        char v183 = sub_1A7573DB0();
        unint64_t v161 = v216;
        if ((v183 & 1) != 0 || v178 == 0x616D7364636D6572 && v180 == 0xEE007473696C7472)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((sub_1A7573DB0() & 1) == 0)
          {
            if (v178 == 0x6D657264636D6572 && v180 == 0xED00007265646E69 || (sub_1A7573DB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              ObjCClassFromMetadata = self;
            }
            else
            {
              if (v178 == 0xD000000000000010 && v180 == 0x80000001A759DE00 || (sub_1A7573DB0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                uint64_t v192 = &qword_1E96F2D98;
              }
              else
              {
                if (v178 == 0xD000000000000015 && v180 == 0x80000001A759DE20)
                {
                  swift_bridgeObjectRelease();
                }
                else
                {
                  char v193 = sub_1A7573DB0();
                  swift_bridgeObjectRelease();
                  if ((v193 & 1) == 0)
                  {
                    swift_bridgeObjectRelease();
                    if (qword_1E96F0810 != -1) {
                      swift_once();
                    }
                    uint64_t v194 = sub_1A7571E90();
                    __swift_project_value_buffer(v194, (uint64_t)qword_1E96F2E00);
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v223 + 16))(v208, v220, v224);
                    uint64_t v195 = sub_1A7571E80();
                    os_log_type_t v196 = sub_1A7572FD0();
                    if (os_log_type_enabled(v195, v196))
                    {
                      uint64_t v197 = (uint8_t *)swift_slowAlloc();
                      uint64_t v198 = swift_slowAlloc();
                      uint64_t v227 = v198;
                      *(_DWORD *)uint64_t v197 = 136315138;
                      id v199 = v208;
                      uint64_t v200 = sub_1A7571890();
                      uint64_t v226 = sub_1A72D1730(v200, v201, &v227);
                      sub_1A7573250();
                      swift_bridgeObjectRelease();
                      uint64_t v202 = v224;
                      v203 = *(void (**)(unsigned char *, uint64_t))(v223 + 8);
                      v203(v199, v224);
                      _os_log_impl(&dword_1A72A1000, v195, v196, "unexpected entity name in url objectID -- failed to parse url {url: %s}", v197, 0xCu);
                      swift_arrayDestroy();
                      MEMORY[0x1AD0CD330](v198, -1, -1);
                      MEMORY[0x1AD0CD330](v197, -1, -1);

                      v203(v220, v202);
                    }
                    else
                    {

                      uint64_t v204 = v224;
                      id v205 = *(void (**)(unsigned char *, uint64_t))(v223 + 8);
                      v205(v208, v224);
                      v205(v220, v204);
                    }
                    (*(void (**)(unsigned char *, uint64_t))(v215 + 8))(v210, v214);
                    (*(void (**)(unsigned char *, uint64_t))(v218 + 8))(v217, v219);
                    uint64_t v60 = 1;
                    uint64_t v75 = v222;
                    uint64_t v53 = v225;
                    goto LABEL_20;
                  }
                }
                uint64_t v192 = (unint64_t *)&qword_1EB700580;
              }
              sub_1A72BEFEC(0, v192);
              ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
            }
            unint64_t v161 = v216;
            uint64_t v160 = v210;
            goto LABEL_93;
          }
          swift_bridgeObjectRelease();
          unint64_t v161 = v216;
          uint64_t v160 = v210;
        }
      }
      ObjCClassFromMetadata = self;
    }
LABEL_93:
    id v184 = objc_msgSend(ObjCClassFromMetadata, sel_cdEntityName);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    id v185 = objc_allocWithZone(MEMORY[0x1E4F94BB8]);
    uint64_t v186 = (void *)sub_1A7571B90();
    uint64_t v187 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    id v90 = objc_msgSend(v185, sel_initWithUUID_entityName_, v186, v187);

    uint64_t v146 = v214;
    uint64_t v163 = v215;
    (*(void (**)(unsigned char *, uint64_t))(v215 + 8))(v160, v214);
    uint64_t v162 = 1;
LABEL_94:
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v163 + 56))(v161, v162, 1, v146);
    uint64_t v104 = v228[0];
    uint64_t v105 = *(void *)(v228[0] + 16);
    if (v105) {
      goto LABEL_36;
    }
    goto LABEL_95;
  }
  if (qword_1E96F0810 != -1) {
    swift_once();
  }
  uint64_t v78 = sub_1A7571E90();
  __swift_project_value_buffer(v78, (uint64_t)qword_1E96F2E00);
  uint64_t v80 = v223;
  uint64_t v79 = v224;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v223 + 16))(v38, a1, v224);
  uint64_t v81 = sub_1A7571E80();
  os_log_type_t v82 = sub_1A7572FD0();
  if (os_log_type_enabled(v81, v82))
  {
    id v83 = (uint8_t *)swift_slowAlloc();
    uint64_t v84 = swift_slowAlloc();
    v228[0] = v84;
    *(_DWORD *)id v83 = 136315138;
    uint64_t v85 = sub_1A7571890();
    uint64_t v227 = sub_1A72D1730(v85, v86, v228);
    sub_1A7573250();
    swift_bridgeObjectRelease();
    uint64_t v87 = *(void (**)(unsigned char *, uint64_t))(v80 + 8);
    v87(v38, v79);
    _os_log_impl(&dword_1A72A1000, v81, v82, "url has nil host -- failed to parse url {url: %s}", v83, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v84, -1, -1);
    MEMORY[0x1AD0CD330](v83, -1, -1);

    v87(v220, v79);
  }
  else
  {

    uint64_t v102 = *(void (**)(unsigned char *, uint64_t))(v80 + 8);
    v102(v38, v79);
    v102(a1, v79);
  }
  uint64_t v60 = 1;
  uint64_t v76 = v221;
  uint64_t v75 = v222;
  uint64_t v53 = v225;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v75, v60, 1, v53);
}

uint64_t sub_1A73ED8E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ReminderUUID(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB701490);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v40 = v11;
  if (*(void *)(v11 + 16))
  {
    int v12 = *(unsigned __int8 *)(v11 + 32);
    swift_bridgeObjectRetain();
    sub_1A72E0E7C(0, 1);
    switch(v12)
    {
      case 1:
        sub_1A73F932C(a1, type metadata accessor for URLParseResult);
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v14 = 1;
        goto LABEL_11;
      case 2:
        if (*(void *)(v40 + 16))
        {
          int v15 = *(unsigned __int8 *)(v40 + 32);
          swift_bridgeObjectRelease();
          uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
          if (v15 == 5)
          {
            *(void *)a2 = 1;
            *(unsigned char *)(a2 + 8) = 0;
            return result;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
        }
        *(void *)a2 = 0;
        *(unsigned char *)(a2 + 8) = 0;
        return result;
      case 3:
        sub_1A73F932C(a1, type metadata accessor for URLParseResult);
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v14 = 4;
        goto LABEL_11;
      case 4:
        sub_1A73F932C(a1, type metadata accessor for URLParseResult);
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v14 = 2;
LABEL_11:
        *(void *)a2 = v14;
        goto LABEL_12;
      case 13:
        swift_bridgeObjectRelease();
        sub_1A73EEEB0((uint64_t)v10);
        uint64_t v17 = type metadata accessor for ReminderIDQuery(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v10, 1, v17) != 1)
        {
          uint64_t v33 = self;
          uint64_t v34 = (void *)sub_1A7571B90();
          id v35 = objc_msgSend(v33, sel_objectIDWithUUID_, v34);

          sub_1A73F932C((uint64_t)v10, type metadata accessor for ReminderIDQuery);
          uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
          *(void *)a2 = v35;
          *(unsigned char *)(a2 + 8) = 1;
          return result;
        }
        sub_1A72CB560((uint64_t)v10, qword_1EB701490);
        if (qword_1E96F0810 != -1) {
          swift_once();
        }
        uint64_t v18 = sub_1A7571E90();
        __swift_project_value_buffer(v18, (uint64_t)qword_1E96F2E00);
        uint64_t v19 = sub_1A7571E80();
        os_log_type_t v20 = sub_1A7572FD0();
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v21 = 0;
          uint64_t v22 = "Missing query items for select. Failed to create ListPathSpecifier";
          goto LABEL_34;
        }
        goto LABEL_35;
      case 14:
        sub_1A73F932C(a1, type metadata accessor for URLParseResult);
        uint64_t result = swift_bridgeObjectRelease();
        *(void *)a2 = 3;
        *(unsigned char *)(a2 + 8) = 3;
        return result;
      case 17:
        swift_bridgeObjectRelease();
        uint64_t v23 = sub_1A73EF258();
        if (v23)
        {
          uint64_t v24 = v23;
          uint64_t v25 = v23[2];
          if (v25)
          {
            uint64_t v38 = a2;
            uint64_t v39 = MEMORY[0x1E4FBC860];
            swift_bridgeObjectRetain();
            sub_1A75736F0();
            uint64_t v26 = self;
            uint64_t v27 = *(unsigned __int8 *)(v5 + 80);
            uint64_t v37 = v24;
            uint64_t v28 = (uint64_t)v24 + ((v27 + 32) & ~v27);
            uint64_t v29 = *(void *)(v5 + 72);
            do
            {
              sub_1A73F92C4(v28, (uint64_t)v7, type metadata accessor for ReminderUUID);
              uint64_t v30 = (void *)sub_1A7571B90();
              id v31 = objc_msgSend(v26, sel_objectIDWithUUID_, v30, v37);

              sub_1A73F932C((uint64_t)v7, type metadata accessor for ReminderUUID);
              sub_1A75736C0();
              sub_1A7573700();
              sub_1A7573710();
              sub_1A75736D0();
              v28 += v29;
              --v25;
            }
            while (v25);
            uint64_t v32 = v39;
            swift_bridgeObjectRelease_n();
            a2 = v38;
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v32 = MEMORY[0x1E4FBC860];
          }
          uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
          *(void *)a2 = v32;
          char v16 = 2;
        }
        else
        {
          if (qword_1E96F0810 != -1) {
            swift_once();
          }
          uint64_t v36 = sub_1A7571E90();
          __swift_project_value_buffer(v36, (uint64_t)qword_1E96F2E00);
          uint64_t v19 = sub_1A7571E80();
          os_log_type_t v20 = sub_1A7572FD0();
          if (os_log_type_enabled(v19, v20))
          {
            uint64_t v21 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v21 = 0;
            uint64_t v22 = "Missing query items for edits. Failed to create ListPathSpecifier";
LABEL_34:
            _os_log_impl(&dword_1A72A1000, v19, v20, v22, v21, 2u);
            MEMORY[0x1AD0CD330](v21, -1, -1);
          }
LABEL_35:

          uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
          *(void *)a2 = 0;
          char v16 = -1;
        }
        break;
      default:
        sub_1A73F932C(a1, type metadata accessor for URLParseResult);
        goto LABEL_5;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1A73F932C(a1, type metadata accessor for URLParseResult);
LABEL_5:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = 0;
LABEL_12:
    char v16 = 3;
  }
  *(unsigned char *)(a2 + 8) = v16;
  return result;
}

uint64_t sub_1A73EDFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if (!*(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1A73F932C(a1, type metadata accessor for URLParseResult);
LABEL_13:
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 0;
LABEL_14:
    __int16 v10 = 2;
    goto LABEL_15;
  }
  int v5 = *(unsigned __int8 *)(v4 + 32);
  swift_bridgeObjectRetain();
  sub_1A72E0E7C(0, 1);
  if (v5 != 2)
  {
    if (v5 == 11)
    {
      swift_bridgeObjectRelease();
      __int16 v6 = sub_1A73EF530();
      uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
      char v8 = 0;
      if (v6 == 2) {
        __int16 v9 = 0;
      }
      else {
        __int16 v9 = v6 & 0x100;
      }
      __int16 v10 = v9 & 0xFFFE | v6 & 1;
      goto LABEL_15;
    }
    sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    goto LABEL_13;
  }
  if (!*(void *)(v4 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    char v8 = 1;
    goto LABEL_14;
  }
  int v11 = *(unsigned __int8 *)(v4 + 32);
  swift_bridgeObjectRelease();
  switch(v11)
  {
    case 6:
      uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
      __int16 v10 = 1;
      char v8 = 1;
      break;
    case 7:
      uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
      __int16 v10 = 0;
      char v8 = 1;
      break;
    case 8:
      uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
      char v8 = 1;
      __int16 v10 = 3;
      break;
    case 9:
      uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
      char v8 = 1;
      __int16 v10 = 4;
      break;
    case 10:
      uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
      char v8 = 1;
      __int16 v10 = 5;
      break;
    case 11:
      uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
      char v8 = 1;
      __int16 v10 = 6;
      break;
    case 12:
      uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
      char v8 = 1;
      __int16 v10 = 7;
      break;
    default:
      goto LABEL_17;
  }
LABEL_15:
  *(_WORD *)a2 = v10;
  *(unsigned char *)(a2 + 2) = v8;
  return result;
}

uint64_t sub_1A73EE280@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if (*(void *)(v4 + 16))
  {
    int v5 = *(unsigned __int8 *)(v4 + 32);
    swift_bridgeObjectRetain();
    sub_1A72E0E7C(0, 1);
    sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    uint64_t result = swift_bridgeObjectRelease();
    BOOL v7 = v5 == 1;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    uint64_t result = swift_bridgeObjectRelease();
    BOOL v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_1A73EE344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ReminderUUID(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  BOOL v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB701490);
  MEMORY[0x1F4188790](v8 - 8);
  __int16 v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v37 = v11;
  if (*(void *)(v11 + 16))
  {
    int v12 = *(unsigned __int8 *)(v11 + 32);
    swift_bridgeObjectRetain();
    sub_1A72E0E7C(0, 1);
    swift_bridgeObjectRelease();
    switch(v12)
    {
      case 1:
        uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
        char v14 = 2;
        uint64_t v15 = 1;
        break;
      case 4:
        uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
        uint64_t v15 = 2;
        char v14 = 2;
        break;
      case 13:
        sub_1A73EEEB0((uint64_t)v10);
        uint64_t v16 = type metadata accessor for ReminderIDQuery(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v10, 1, v16) != 1)
        {
          id v31 = self;
          uint64_t v32 = (void *)sub_1A7571B90();
          uint64_t v15 = (uint64_t)objc_msgSend(v31, sel_objectIDWithUUID_, v32);

          sub_1A73F932C((uint64_t)v10, type metadata accessor for ReminderIDQuery);
          uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
          char v14 = 0;
          break;
        }
        sub_1A72CB560((uint64_t)v10, qword_1EB701490);
        if (qword_1E96F0810 != -1) {
          swift_once();
        }
        uint64_t v17 = sub_1A7571E90();
        __swift_project_value_buffer(v17, (uint64_t)qword_1E96F2E00);
        uint64_t v18 = sub_1A7571E80();
        os_log_type_t v19 = sub_1A7572FD0();
        if (os_log_type_enabled(v18, v19))
        {
          os_log_type_t v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v20 = 0;
          uint64_t v21 = "Missing query items for select. Failed to create SmartListPathSpecifier";
          goto LABEL_23;
        }
        goto LABEL_24;
      case 17:
        uint64_t v22 = sub_1A73EF258();
        if (v22)
        {
          uint64_t v23 = v22;
          uint64_t v24 = v22[2];
          if (v24)
          {
            uint64_t v35 = a2;
            uint64_t v36 = MEMORY[0x1E4FBC860];
            swift_bridgeObjectRetain();
            sub_1A75736F0();
            uint64_t v25 = self;
            uint64_t v26 = *(unsigned __int8 *)(v5 + 80);
            uint64_t v34 = v23;
            uint64_t v27 = (uint64_t)v23 + ((v26 + 32) & ~v26);
            uint64_t v28 = *(void *)(v5 + 72);
            do
            {
              sub_1A73F92C4(v27, (uint64_t)v7, type metadata accessor for ReminderUUID);
              uint64_t v29 = (void *)sub_1A7571B90();
              id v30 = objc_msgSend(v25, sel_objectIDWithUUID_, v29, v34);

              sub_1A73F932C((uint64_t)v7, type metadata accessor for ReminderUUID);
              sub_1A75736C0();
              sub_1A7573700();
              sub_1A7573710();
              sub_1A75736D0();
              v27 += v28;
              --v24;
            }
            while (v24);
            uint64_t v15 = v36;
            swift_bridgeObjectRelease_n();
            a2 = v35;
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v15 = MEMORY[0x1E4FBC860];
          }
          uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
          char v14 = 1;
        }
        else
        {
          if (qword_1E96F0810 != -1) {
            swift_once();
          }
          uint64_t v33 = sub_1A7571E90();
          __swift_project_value_buffer(v33, (uint64_t)qword_1E96F2E00);
          uint64_t v18 = sub_1A7571E80();
          os_log_type_t v19 = sub_1A7572FD0();
          if (os_log_type_enabled(v18, v19))
          {
            os_log_type_t v20 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v20 = 0;
            uint64_t v21 = "Missing query items for edits. Failed to create SmartListPathSpecifier";
LABEL_23:
            _os_log_impl(&dword_1A72A1000, v18, v19, v21, v20, 2u);
            MEMORY[0x1AD0CD330](v20, -1, -1);
          }
LABEL_24:

          uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
          uint64_t v15 = 0;
          char v14 = -1;
        }
        break;
      default:
        uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
        goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    uint64_t result = swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v15 = 0;
    char v14 = 2;
  }
  *(void *)a2 = v15;
  *(unsigned char *)(a2 + 8) = v14;
  return result;
}

double sub_1A73EE934@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if (!*(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    swift_bridgeObjectRelease();
LABEL_7:
    *a2 = 0;
    a2[1] = 0;
    return result;
  }
  int v5 = *(unsigned __int8 *)(v4 + 32);
  swift_bridgeObjectRetain();
  sub_1A72E0E7C(0, 1);
  swift_bridgeObjectRelease();
  if (v5 != 1)
  {
    sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    goto LABEL_7;
  }
  uint64_t v6 = sub_1A73EF818();
  if (v7)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    *a2 = v8;
    a2[1] = v9;
  }
  else
  {
    if (qword_1E96F0810 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1A7571E90();
    __swift_project_value_buffer(v11, (uint64_t)qword_1E96F2E00);
    int v12 = sub_1A7571E80();
    os_log_type_t v13 = sub_1A7572FD0();
    if (os_log_type_enabled(v12, v13))
    {
      char v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v14 = 0;
      _os_log_impl(&dword_1A72A1000, v12, v13, "Missing query items. Failed to create SearchPathSpecifier", v14, 2u);
      MEMORY[0x1AD0CD330](v14, -1, -1);
    }

    sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    double result = 0.0;
    *(_OWORD *)a2 = xmmword_1A757DB40;
  }
  return result;
}

uint64_t sub_1A73EEB14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1A73EFA8C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
    if (!*(void *)(v4 + 16))
    {
      __break(1u);
      return result;
    }
    int v10 = *(unsigned __int8 *)(v4 + 32);
    sub_1A72E0E7C(0, 1);
    sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    uint64_t result = swift_bridgeObjectRelease();
    char v11 = v10 == 16;
    if (v10 == 15) {
      char v11 = 2;
    }
  }
  else
  {
    sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    uint64_t result = swift_bridgeObjectRelease();
    char v11 = 0;
  }
  if (v7 == 1) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = v7;
  }
  if (v7 == 1) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = v5;
  }
  *(void *)a2 = v13;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v11;
  return result;
}

uint64_t sub_1A73EEC1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if (!*(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    uint64_t result = swift_bridgeObjectRelease();
LABEL_11:
    long long v13 = xmmword_1A7578D90;
LABEL_12:
    *(_OWORD *)a2 = v13;
LABEL_13:
    *(unsigned char *)(a2 + 16) = 0;
    return result;
  }
  int v5 = *(unsigned __int8 *)(v4 + 32);
  swift_bridgeObjectRetain();
  sub_1A72E0E7C(0, 1);
  swift_bridgeObjectRelease();
  if (v5 != 1)
  {
    uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    goto LABEL_11;
  }
  uint64_t v6 = sub_1A73EFD20();
  if (v7 == 1)
  {
LABEL_4:
    if (qword_1E96F0810 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A7571E90();
    __swift_project_value_buffer(v8, (uint64_t)qword_1E96F2E00);
    uint64_t v9 = sub_1A7571E80();
    os_log_type_t v10 = sub_1A7572FD0();
    if (os_log_type_enabled(v9, v10))
    {
      char v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v11 = 0;
      _os_log_impl(&dword_1A72A1000, v9, v10, "Missing query items. Failed to create TagsPathSpecifier", v11, 2u);
      MEMORY[0x1AD0CD330](v11, -1, -1);
    }

    uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    long long v13 = xmmword_1A7581FA0;
    goto LABEL_12;
  }
  uint64_t v14 = v6;
  uint64_t v15 = v7;
  if (v6)
  {
    sub_1A73FF310(v6, v7);
    uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    goto LABEL_13;
  }
  if ((v6 & 0x100) != 0)
  {
    sub_1A73FF310(v6, v7);
    uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
    long long v13 = xmmword_1A7578DA0;
    goto LABEL_12;
  }
  if (!v7)
  {
    sub_1A73FF310(v6, 0);
    goto LABEL_4;
  }
  uint64_t v16 = sub_1A72E6AB4(v7);
  sub_1A73FF310(v14, v15);
  uint64_t result = sub_1A73F932C(a1, type metadata accessor for URLParseResult);
  uint64_t v17 = MEMORY[0x1E4FBC870];
  *(void *)a2 = v16;
  *(void *)(a2 + 8) = v17;
  *(unsigned char *)(a2 + 16) = 1;
  return result;
}

uint64_t sub_1A73EEEB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(int *)(type metadata accessor for URLParseResult(0) + 32);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (*(void *)(v1 + v3)) {
    uint64_t v5 = *(void *)(v1 + v3);
  }
  else {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for QueryItems();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  uint64_t v7 = type metadata accessor for InternalDecoder();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = MEMORY[0x1E4FBC868];
  v8[2] = v4;
  v8[3] = v9;
  v8[4] = v6;
  v12[3] = v7;
  v12[4] = sub_1A73FEF94((unint64_t *)&qword_1E96F1F40, (void (*)(uint64_t))type metadata accessor for InternalDecoder);
  v12[0] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A73F4BB8(v12, a1);
  uint64_t v10 = type metadata accessor for ReminderIDQuery(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 0, 1, v10);

  return swift_bridgeObjectRelease();
}

void *sub_1A73EF258()
{
  uint64_t v1 = *(int *)(type metadata accessor for URLParseResult(0) + 32);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (*(void *)(v0 + v1)) {
    uint64_t v3 = *(void *)(v0 + v1);
  }
  else {
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for QueryItems();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  uint64_t v5 = type metadata accessor for InternalDecoder();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = MEMORY[0x1E4FBC868];
  v6[2] = v2;
  v6[3] = v7;
  v6[4] = v4;
  v9[3] = v5;
  v9[4] = sub_1A73FEF94((unint64_t *)&qword_1E96F1F40, (void (*)(uint64_t))type metadata accessor for InternalDecoder);
  v9[0] = v6;
  swift_bridgeObjectRetain();
  return sub_1A73FB464(v9);
}

uint64_t sub_1A73EF530()
{
  uint64_t v1 = *(int *)(type metadata accessor for URLParseResult(0) + 32);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (*(void *)(v0 + v1)) {
    uint64_t v3 = *(void *)(v0 + v1);
  }
  else {
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for QueryItems();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  uint64_t v5 = type metadata accessor for InternalDecoder();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = MEMORY[0x1E4FBC868];
  v6[2] = v2;
  v6[3] = v7;
  v6[4] = v4;
  v9[3] = v5;
  v9[4] = sub_1A73FEF94((unint64_t *)&qword_1E96F1F40, (void (*)(uint64_t))type metadata accessor for InternalDecoder);
  v9[0] = v6;
  swift_bridgeObjectRetain();
  return sub_1A73FB614(v9) & 0xFFFFFF01;
}

uint64_t sub_1A73EF818()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for URLParseResult(0) + 32));
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A73FB128(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1A73EFA8C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for URLParseResult(0) + 32));
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A73FB2C4(v2, &qword_1E96F2F98, &qword_1E96F2FA0, &qword_1E96F2FA8);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1A73EFD20()
{
  uint64_t v1 = *(int *)(type metadata accessor for URLParseResult(0) + 32);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (*(void *)(v0 + v1)) {
    uint64_t v3 = *(void *)(v0 + v1);
  }
  else {
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for QueryItems();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  uint64_t v5 = type metadata accessor for InternalDecoder();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = MEMORY[0x1E4FBC868];
  v6[2] = v2;
  v6[3] = v7;
  v6[4] = v4;
  v9[3] = v5;
  v9[4] = sub_1A73FEF94((unint64_t *)&qword_1E96F1F40, (void (*)(uint64_t))type metadata accessor for InternalDecoder);
  v9[0] = v6;
  swift_bridgeObjectRetain();
  return (unsigned __int16)sub_1A73FB7B8(v9);
}

uint64_t sub_1A73F0004()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for URLParseResult(0) + 32));
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A73FB2C4(v2, &qword_1E96F2FB8, &qword_1E96F2FC0, &qword_1E96F2FC8);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t REMNavigationSpecifier.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v10 = v9;
  if (v8 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v10 == v11) {
    goto LABEL_13;
  }
  char v13 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_14;
  }
  uint64_t v14 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v16 = v15;
  if (v14 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  char v19 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_14:

    *(void *)uint64_t v7 = 1;
    v7[8] = 2;
    swift_storeEnumTagMultiPayload();
    sub_1A73F923C((uint64_t)v7, a2, type metadata accessor for REMNavigationSpecifier);
    uint64_t v24 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v24, 1, v4);
  }
  uint64_t v20 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v22 = v21;
  if (v20 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v22 == v23) {
    goto LABEL_13;
  }
  char v26 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26) {
    goto LABEL_14;
  }
  uint64_t v27 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v29 = v28;
  if (v27 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v29 == v30) {
    goto LABEL_13;
  }
  char v31 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v31) {
    goto LABEL_14;
  }
  uint64_t v32 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v34 = v33;
  if (v32 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v34 == v35) {
    goto LABEL_13;
  }
  char v36 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v36) {
    goto LABEL_14;
  }
  uint64_t v37 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v39 = v38;
  if (v37 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v39 == v40)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  char v41 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v41) {
    goto LABEL_14;
  }
  if (qword_1E96F0810 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_1A7571E90();
  __swift_project_value_buffer(v42, (uint64_t)qword_1E96F2E00);
  id v43 = a1;
  char v44 = sub_1A7571E80();
  os_log_type_t v45 = sub_1A7572FE0();
  int v46 = v45;
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v47 = swift_slowAlloc();
    int v54 = v46;
    uint64_t v48 = (uint8_t *)v47;
    uint64_t v49 = swift_slowAlloc();
    uint64_t v55 = (uint64_t)v43;
    uint64_t v56 = v49;
    *(_DWORD *)uint64_t v48 = 136315138;
    type metadata accessor for REMSmartListType(0);
    id v50 = v43;
    uint64_t v51 = sub_1A7572670();
    uint64_t v55 = sub_1A72D1730(v51, v52, &v56);
    sub_1A7573250();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v44, (os_log_type_t)v54, "Attempt to create URL for smart list type %s", v48, 0xCu);
    uint64_t v24 = 1;
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v49, -1, -1);
    MEMORY[0x1AD0CD330](v48, -1, -1);
  }
  else
  {

    uint64_t v24 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v24, 1, v4);
}

void REMNavigationSpecifier.url.getter(uint64_t a1@<X8>)
{
  v227[0] = a1;
  uint64_t v222 = sub_1A7571BC0();
  uint64_t v219 = *(void *)(v222 - 8);
  MEMORY[0x1F4188790](v222);
  id v220 = (char *)v187 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  MEMORY[0x1F4188790](v218);
  uint64_t v221 = (uint64_t)v187 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ReminderIDQuery(0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  v225[0] = (char *)v187 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v214 = (uint64_t)v187 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v215 = (char *)v187 - v8;
  uint64_t v223 = sub_1A75719C0();
  uint64_t v224 = *(void *)(v223 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v223);
  uint64_t v216 = (char *)v187 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v217 = (uint64_t)v187 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v198 = (char *)v187 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  id v199 = (char *)v187 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  os_log_type_t v196 = (char *)v187 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v197 = (char *)v187 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v194 = (char *)v187 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v195 = (char *)v187 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v192 = (char *)v187 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  char v193 = (char *)v187 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v188 = (char *)v187 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v190 = (char *)v187 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v189 = (char *)v187 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v191 = (uint64_t)v187 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  v187[0] = (char *)v187 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  v187[1] = (char *)v187 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  id v208 = (char *)v187 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  uint64_t v209 = (uint64_t)v187 - v44;
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  id v211 = (char *)v187 - v46;
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  uint64_t v213 = (uint64_t)v187 - v48;
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  uint64_t v202 = (char *)v187 - v50;
  uint64_t v51 = MEMORY[0x1F4188790](v49);
  v203 = (char *)v187 - v52;
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  uint64_t v210 = (char *)v187 - v54;
  uint64_t v55 = MEMORY[0x1F4188790](v53);
  uint64_t v212 = (uint64_t)v187 - v56;
  uint64_t v57 = MEMORY[0x1F4188790](v55);
  uint64_t v200 = (char *)v187 - v58;
  uint64_t v59 = MEMORY[0x1F4188790](v57);
  unint64_t v201 = (char *)v187 - v60;
  uint64_t v61 = MEMORY[0x1F4188790](v59);
  uint64_t v206 = (char *)v187 - v62;
  uint64_t v63 = MEMORY[0x1F4188790](v61);
  int v207 = (char *)v187 - v64;
  uint64_t v65 = MEMORY[0x1F4188790](v63);
  uint64_t v204 = (char *)v187 - v66;
  uint64_t v67 = MEMORY[0x1F4188790](v65);
  id v205 = (char *)v187 - v68;
  uint64_t v69 = MEMORY[0x1F4188790](v67);
  char v71 = (char *)v187 - v70;
  uint64_t v72 = MEMORY[0x1F4188790](v69);
  char v74 = (char *)v187 - v73;
  uint64_t v75 = MEMORY[0x1F4188790](v72);
  uint64_t v77 = (char *)v187 - v76;
  uint64_t v78 = MEMORY[0x1F4188790](v75);
  uint64_t v80 = (char *)v187 - v79;
  uint64_t v81 = MEMORY[0x1F4188790](v78);
  id v83 = (char *)v187 - v82;
  uint64_t v84 = MEMORY[0x1F4188790](v81);
  unint64_t v86 = (char *)v187 - v85;
  uint64_t v87 = MEMORY[0x1F4188790](v84);
  uint64_t v89 = (char *)v187 - v88;
  MEMORY[0x1F4188790](v87);
  uint64_t v91 = (char *)v187 - v90;
  uint64_t v92 = type metadata accessor for REMNavigationSpecifier(0);
  uint64_t v93 = MEMORY[0x1F4188790](v92);
  v225[1] = (char *)v187 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = MEMORY[0x1F4188790](v93);
  v226[1] = (char *)v187 - v96;
  MEMORY[0x1F4188790](v95);
  uint64_t v98 = (char *)v187 - v97;
  sub_1A73F92C4(v227[1], (uint64_t)v187 - v97, type metadata accessor for REMNavigationSpecifier);
  v226[0] = v92;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      uint64_t v115 = v98[16];
      uint64_t v118 = v98;
      id v117 = *(id *)v98;
      unint64_t v116 = *((void *)v118 + 1);
      switch(v115)
      {
        case 1:
          id v151 = objc_msgSend((id)v116, sel_uuid);
          uint64_t v152 = (uint64_t)v215;
          sub_1A7571BB0();

          id v153 = objc_msgSend(v117, sel_urlRepresentation);
          uint64_t v154 = (uint64_t)v210;
          sub_1A7571940();

          uint64_t v155 = v214;
          sub_1A73F92C4(v152, v214, type metadata accessor for ReminderIDQuery);
          uint64_t v156 = v212;
          sub_1A73F8318(v154, (uint64_t)&unk_1EFC91460, v155, v212);

          sub_1A73F932C(v152, type metadata accessor for ReminderIDQuery);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v224 + 32))(v227[0], v156, v223);
          sub_1A73FBD88((id)v116, 1);
          sub_1A73FBD88((id)v116, 1);
          break;
        case 2:
          sub_1A73FBD68((id)v116, 2);
          uint64_t v147 = sub_1A73FBA74(v116);
          sub_1A73FBD88((id)v116, 2);
          id v148 = objc_msgSend(v117, sel_urlRepresentation);
          uint64_t v149 = (uint64_t)v211;
          sub_1A7571940();

          swift_bridgeObjectRetain();
          uint64_t v150 = v213;
          sub_1A73F7D60(v149, (uint64_t)&unk_1EFC91488, v147, v213);
          swift_bridgeObjectRelease();

          (*(void (**)(uint64_t, uint64_t, uint64_t))(v224 + 32))(v227[0], v150, v223);
          sub_1A73FBD88((id)v116, 2);
          break;
        case 3:
          switch(v116)
          {
            case 1uLL:
              id v169 = objc_msgSend(v117, sel_urlRepresentation);
              sub_1A7571940();

              sub_1A73F6930((uint64_t)v77, (uint64_t)&unk_1EFC91398, (uint64_t)v80);
              (*(void (**)(uint64_t, char *, uint64_t))(v224 + 32))(v227[0], v80, v223);
              break;
            case 2uLL:
              id v170 = objc_msgSend(v117, sel_urlRepresentation);
              sub_1A7571940();

              sub_1A73F6930((uint64_t)v71, (uint64_t)&unk_1EFC913C0, (uint64_t)v74);
              (*(void (**)(uint64_t, char *, uint64_t))(v224 + 32))(v227[0], v74, v223);
              break;
            case 3uLL:
              id v171 = objc_msgSend(v117, sel_urlRepresentation);
              uint64_t v172 = (uint64_t)v202;
              sub_1A7571940();

              uint64_t v173 = (void *)MEMORY[0x1E4FBC860];
              uint64_t v174 = &v230;
              goto LABEL_48;
            case 4uLL:
              id v175 = objc_msgSend(v117, sel_urlRepresentation);
              uint64_t v172 = (uint64_t)v200;
              sub_1A7571940();

              uint64_t v173 = &unk_1EFC91438;
              uint64_t v174 = &v229;
LABEL_48:
              uint64_t v176 = *((void *)v174 - 32);
              sub_1A73F6930(v172, (uint64_t)v173, v176);

              (*(void (**)(uint64_t, uint64_t, uint64_t))(v224 + 32))(v227[0], v176, v223);
              break;
            default:
              id v157 = objc_msgSend(v117, sel_urlRepresentation);
              sub_1A7571940();

              sub_1A73F6930((uint64_t)v83, MEMORY[0x1E4FBC860], (uint64_t)v86);
              (*(void (**)(uint64_t, char *, uint64_t))(v224 + 32))(v227[0], v86, v223);
              break;
          }
          break;
        default:
          id v119 = objc_msgSend(v117, sel_urlRepresentation);
          if (v116)
          {
            uint64_t v120 = (uint64_t)v206;
            sub_1A7571940();

            uint64_t v121 = &unk_1EFC91410;
            os_log_type_t v122 = &v234;
          }
          else
          {
            uint64_t v120 = (uint64_t)v204;
            sub_1A7571940();

            uint64_t v121 = &unk_1EFC913E8;
            os_log_type_t v122 = &v232;
          }
          uint64_t v167 = *(v122 - 32);
          sub_1A73F6930(v120, (uint64_t)v121, v167);
          uint64_t v134 = v227[0];

          goto LABEL_60;
      }
      return;
    case 3u:
      uint64_t v129 = *(void *)v98;
      uint64_t v128 = *((void *)v98 + 1);
      if (v98[16])
      {
        uint64_t v130 = v227[0];
        if (v98[16] == 1)
        {
          swift_bridgeObjectRetain();
          char v131 = sub_1A73F227C();
          sub_1A73F36B0(v131, (uint64_t)&unk_1EFC91708, v129, v128, v130);
          sub_1A738EF38(v129, v128, 1u);
        }
        else
        {
          swift_bridgeObjectRetain();
          char v166 = sub_1A73F227C();
          sub_1A73F36B0(v166, (uint64_t)&unk_1EFC916E0, v129, v128, v130);
          sub_1A738EF38(v129, v128, 2u);
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        char v165 = sub_1A73F227C();
        sub_1A73F36B0(v165, MEMORY[0x1E4FBC860], v129, v128, v227[0]);
        sub_1A738EF38(v129, v128, 0);
      }
      return;
    case 4u:
      uint64_t v132 = *(void **)v98;
      int v133 = *((unsigned __int16 *)v98 + 4);
      if (v98[10] == 1)
      {
        uint64_t v134 = v227[0];
        switch(*((_WORD *)v98 + 4))
        {
          case 2u:
            id v135 = objc_msgSend(*(id *)v98, sel_urlRepresentation);
            uint64_t v136 = v187[0];
            sub_1A7571940();

            uint64_t v137 = &unk_1EFC914D8;
            uint64_t v138 = &v219;
            break;
          case 3u:
            id v182 = objc_msgSend(*(id *)v98, sel_urlRepresentation);
            uint64_t v136 = (uint64_t)v188;
            sub_1A7571940();

            uint64_t v137 = &unk_1EFC91500;
            uint64_t v138 = &v222;
            break;
          case 4u:
            id v183 = objc_msgSend(*(id *)v98, sel_urlRepresentation);
            uint64_t v136 = (uint64_t)v192;
            sub_1A7571940();

            uint64_t v137 = &unk_1EFC91528;
            uint64_t v138 = v225;
            break;
          case 5u:
            id v184 = objc_msgSend(*(id *)v98, sel_urlRepresentation);
            uint64_t v136 = (uint64_t)v194;
            sub_1A7571940();

            uint64_t v137 = &unk_1EFC91550;
            uint64_t v138 = v226;
            break;
          case 6u:
            id v185 = objc_msgSend(*(id *)v98, sel_urlRepresentation);
            uint64_t v136 = (uint64_t)v196;
            sub_1A7571940();

            uint64_t v137 = &unk_1EFC91578;
            uint64_t v138 = v227;
            break;
          case 7u:
            id v186 = objc_msgSend(*(id *)v98, sel_urlRepresentation);
            uint64_t v136 = (uint64_t)v198;
            sub_1A7571940();

            uint64_t v137 = &unk_1EFC915A0;
            uint64_t v138 = (uint64_t *)&v228;
            break;
          default:
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC8);
            uint64_t inited = swift_initStackObject();
            uint64_t v178 = inited;
            *(_OWORD *)(inited + 16) = xmmword_1A7578D60;
            *(unsigned char *)(inited + 32) = 2;
            if (v133) {
              char v179 = 6;
            }
            else {
              char v179 = 7;
            }
            *(unsigned char *)(inited + 33) = v179;
            id v180 = objc_msgSend(v132, sel_urlRepresentation);
            uint64_t v181 = (uint64_t)v189;
            sub_1A7571940();

            uint64_t v113 = v191;
            sub_1A73F6930(v181, v178, v191);
            uint64_t v114 = v227[0];

            goto LABEL_38;
        }
        uint64_t v167 = *(v138 - 32);
        sub_1A73F6930(v136, (uint64_t)v137, v167);
      }
      else
      {
        id v164 = objc_msgSend(*(id *)v98, sel_urlRepresentation);
        if (v133 == 2)
        {
          sub_1A7571940();

          return;
        }
        uint64_t v168 = v208;
        sub_1A7571940();

        uint64_t v167 = v209;
        sub_1A73F88CC(v168, (uint64_t)&unk_1EFC914B0, v133 & 0x1010101, v209);
        uint64_t v134 = v227[0];
      }

LABEL_60:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v224 + 32))(v134, v167, v223);
      return;
    case 5u:
    case 6u:
      char v109 = v98[8];
      id v110 = *(id *)v98;
      id v111 = objc_msgSend(*(id *)v98, sel_urlRepresentation);
      if (v109)
      {
        uint64_t v112 = (uint64_t)v216;
        sub_1A7571940();

        uint64_t v113 = v217;
        sub_1A73F6930(v112, (uint64_t)&unk_1EFC916B8, v217);
        uint64_t v114 = v227[0];

LABEL_38:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v224 + 32))(v114, v113, v223);
      }
      else
      {

        sub_1A7571940();
      }
      return;
    case 7u:
    case 0x12u:
    case 0x13u:
      goto LABEL_18;
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xDu:
    case 0xEu:
    case 0x10u:
      id v99 = *(id *)v98;
      if (v98[8])
      {
        uint64_t v100 = v227[0];
        if (v98[8] == 1)
        {
          swift_bridgeObjectRetain();
          char v101 = sub_1A73F227C();
          uint64_t v102 = sub_1A73FBA74((unint64_t)v99);
          sub_1A73FBD4C(v99, 1);
          sub_1A73F2D08(v101, (uint64_t)&unk_1EFC91640, v102, v100);
          sub_1A73FBD4C(v99, 1);
        }
        else
        {
          if (v99)
          {
            char v107 = sub_1A73F227C();
            if (v99 == (id)1) {
              unint64_t v108 = &unk_1EFC915C8;
            }
            else {
              unint64_t v108 = &unk_1EFC915F0;
            }
          }
          else
          {
            char v107 = sub_1A73F227C();
            unint64_t v108 = (void *)MEMORY[0x1E4FBC860];
          }
          sub_1A73F2608(v107, (uint64_t)v108, v100);
        }
      }
      else
      {
        id v103 = v99;
        int v104 = sub_1A73F227C();
        id v105 = objc_msgSend(v103, sel_uuid);
        uint64_t v106 = v225[0];
        sub_1A7571BB0();
        sub_1A73FBD4C(v99, 0);

        sub_1A73F2930(v104, (uint64_t)&unk_1EFC91618, v106, v227[0]);
        sub_1A73FBD4C(v99, 0);
        sub_1A73FBD4C(v99, 0);
      }
      return;
    case 0xCu:
      uint64_t v123 = *((void *)v98 + 1);
      if (!v123) {
        goto LABEL_18;
      }
      uint64_t v124 = *(void *)v98;
      swift_bridgeObjectRetain();
      char v125 = sub_1A73F227C();
      sub_1A73F303C(v125, (uint64_t)&unk_1EFC91668, v124, v123, v227[0]);
      swift_bridgeObjectRelease();
      return;
    case 0xFu:
      unint64_t v126 = *(void *)v98;
      if (*(void *)v98 == 2)
      {
LABEL_18:
        char v127 = sub_1A73F227C();
        sub_1A73F2608(v127, MEMORY[0x1E4FBC860], v227[0]);
      }
      else
      {
        uint64_t v158 = *((void *)v98 + 1);
        char v159 = v98[16];
        id v231 = *(id *)v98;
        uint64_t v232 = v158;
        char v233 = v159;
        sub_1A7383834(v126);
        unsigned int v160 = sub_1A73FBC58((unint64_t *)&v231);
        uint64_t v162 = v161;
        char v163 = sub_1A73F227C();
        sub_1A73F3374(v163, (uint64_t)&unk_1EFC91690, v160, v162, v227[0]);
        sub_1A73FBD3C(v126);
      }
      return;
    case 0x11u:
      uint64_t v141 = v221;
      sub_1A73F923C((uint64_t)v98, v221, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
      char v142 = sub_1A73F227C();
      uint64_t v143 = (uint64_t)v220;
      (*(void (**)(char *, uint64_t, uint64_t))(v219 + 16))(v220, v141, v222);
      char v144 = (uint64_t *)(v141 + *(int *)(v218 + 20));
      uint64_t v146 = *v144;
      uint64_t v145 = v144[1];
      swift_bridgeObjectRetain();
      sub_1A73F3A08(v142, v143, MEMORY[0x1E4FBC860], v146, v145, v227[0]);
      sub_1A73F932C(v141, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
      return;
    default:
      id v139 = *(id *)v98;
      id v140 = objc_msgSend(*(id *)v98, sel_urlRepresentation);
      sub_1A7571940();

      sub_1A73F6930((uint64_t)v89, MEMORY[0x1E4FBC860], (uint64_t)v91);
      (*(void (**)(uint64_t, char *, uint64_t))(v224 + 32))(v227[0], v91, v223);
      return;
  }
}

uint64_t sub_1A73F227C()
{
  uint64_t v1 = type metadata accessor for REMNavigationSpecifier(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A73F92C4(v0, (uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 6;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 1;
      break;
    case 2:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 2;
      break;
    case 3:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 16;
      break;
    case 4:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 3;
      break;
    case 5:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 4;
      break;
    case 6:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 5;
      break;
    case 7:
      return result;
    case 8:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 7;
      break;
    case 9:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 8;
      break;
    case 10:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 9;
      break;
    case 11:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 10;
      break;
    case 12:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 11;
      break;
    case 13:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 12;
      break;
    case 14:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 13;
      break;
    case 15:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 14;
      break;
    case 16:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 15;
      break;
    case 17:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 19;
      break;
    case 18:
      uint64_t result = 17;
      break;
    case 19:
      uint64_t result = 18;
      break;
    default:
      sub_1A73F932C((uint64_t)v3, type metadata accessor for REMNavigationSpecifier);
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_1A73F2608@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A75719C0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v21 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  unint64_t v22 = v14;
  sub_1A7572740();
  sub_1A73F3EA0(a1);
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7571990();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A72CB560((uint64_t)v6, &qword_1EB704C30);
    uint64_t v15 = self;
    uint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    char v23 = a1;
    sub_1A7573760();
    uint64_t v16 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_internalErrorWithDebugDescription_, v16);

    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    sub_1A73F6930((uint64_t)v11, v20, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
}

uint64_t sub_1A73F2930@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v23 = a4;
  uint64_t v5 = type metadata accessor for ReminderIDQuery(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A75719C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v23 - v16;
  uint64_t v26 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  unint64_t v27 = v18;
  sub_1A7572740();
  int v28 = a1;
  sub_1A73F3EA0(a1);
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7571990();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A72CB560((uint64_t)v10, &qword_1EB704C30);
    uint64_t v19 = self;
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    char v29 = v28;
    sub_1A7573760();
    uint64_t v20 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_internalErrorWithDebugDescription_, v20, v23);

    swift_willThrow();
    return sub_1A73F932C(v25, type metadata accessor for ReminderIDQuery);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    uint64_t v22 = v25;
    sub_1A73F92C4(v25, (uint64_t)v7, type metadata accessor for ReminderIDQuery);
    sub_1A73F8318((uint64_t)v15, v24, (uint64_t)v7, v23);
    sub_1A73F932C(v22, type metadata accessor for ReminderIDQuery);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
}

uint64_t sub_1A73F2D08@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v19 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A75719C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v19 - v13;
  uint64_t v22 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  unint64_t v23 = v15;
  sub_1A7572740();
  sub_1A73F3EA0(a1);
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7571990();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A72CB560((uint64_t)v7, &qword_1EB704C30);
    uint64_t v16 = self;
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    char v24 = a1;
    sub_1A7573760();
    uint64_t v17 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_internalErrorWithDebugDescription_, v17, v19);

    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    sub_1A73F7D60((uint64_t)v12, v20, v21, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
}

uint64_t sub_1A73F303C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v23 = a2;
  uint64_t v24 = a4;
  uint64_t v21 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A75719C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v20 - v14;
  uint64_t v25 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  unint64_t v26 = v16;
  sub_1A7572740();
  sub_1A73F3EA0(a1);
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7571990();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A72CB560((uint64_t)v8, &qword_1EB704C30);
    uint64_t v17 = self;
    uint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    char v27 = a1;
    sub_1A7573760();
    unint64_t v18 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_internalErrorWithDebugDescription_, v18);

    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_1A73F7800((uint64_t)v13, v23, v22, v24, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

uint64_t sub_1A73F3374@<X0>(char a1@<W0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v22 = a4;
  unsigned int v25 = a3;
  uint64_t v20 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A75719C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v20 - v14;
  uint64_t v23 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  unint64_t v24 = v16;
  sub_1A7572740();
  sub_1A73F3EA0(a1);
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7571990();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A72CB560((uint64_t)v8, &qword_1EB704C30);
    uint64_t v17 = self;
    uint64_t v23 = 0;
    unint64_t v24 = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    char v26 = a1;
    sub_1A7573760();
    unint64_t v18 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_internalErrorWithDebugDescription_, v18, v20);

    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_1A73F7378(v13, v21, v25, v22, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

uint64_t sub_1A73F36B0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v23 = a2;
  uint64_t v24 = a4;
  uint64_t v21 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A75719C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v20 - v14;
  uint64_t v25 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  unint64_t v26 = v16;
  sub_1A7572740();
  sub_1A73F3EA0(a1);
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7571990();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A72CB560((uint64_t)v8, &qword_1EB704C30);
    uint64_t v17 = self;
    uint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    char v27 = a1;
    sub_1A7573760();
    unint64_t v18 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_internalErrorWithDebugDescription_, v18);

    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_1A73F6E1C(v13, v23, v22, v24, &qword_1E96F2F48, &qword_1E96F2F50, &qword_1E96F2F58, (uint64_t)&type metadata for NewListQuery.CodingKeys, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

uint64_t sub_1A73F3A08@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v22 = a6;
  uint64_t v11 = sub_1A75719C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v21 - v16;
  sub_1A73F2608(a1, MEMORY[0x1E4FBC860], (uint64_t)&v21 - v16);
  if (v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1A7571BC0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a2, v18);
  }
  else
  {
    uint64_t v21 = a2;
    sub_1A7571B80();
    sub_1A75718F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    sub_1A73F6E1C(v15, a3, v23, a5, &qword_1E96F2F20, &qword_1E96F2F28, &qword_1E96F2F30, (uint64_t)&type metadata for PublicTemplateQuery.CodingKeys, v22);
    uint64_t v20 = sub_1A7571BC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v21, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
}

uint64_t REMNavigationSpecifier.AccountPathSpecifier.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t static REMNavigationSpecifier.AccountPathSpecifier.== infix(_:_:)()
{
  return 1;
}

void static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 2;
  *(unsigned char *)(a1 + 2) = 0;
}

uint64_t static REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier.== infix(_:_:)(__int16 *a1, __int16 *a2)
{
  __int16 v2 = *a1;
  __int16 v3 = *a2;
  if (*a1 == 2) {
    return *a2 == 2;
  }
  if (*a2 == 2 || ((v2 & 1) == 0) == (v3 & 1)) {
    return 0;
  }
  return ((v2 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8);
}

uint64_t sub_1A73F3CF8(__int16 *a1, _WORD *a2)
{
  __int16 v2 = *a1;
  int v3 = (unsigned __int16)*a2;
  if (*a1 == 2) {
    return *a2 == 2;
  }
  if (*a2 == 2 || ((((v2 & 1) == 0) ^ v3) & 1) == 0) {
    return 0;
  }
  return ((v2 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8);
}

uint64_t REMNavigationSpecifier.SectionPathSpecifier.hash(into:)()
{
  return sub_1A75740D0();
}

BOOL static REMNavigationSpecifier.SectionPathSpecifier.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t static REMNavigationSpecifier.RootPathSpecifier.== infix(_:_:)()
{
  return 1;
}

uint64_t *REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  LOBYTE(v3) = 0;
  switch(*((unsigned char *)result + 8))
  {
    case 1:
      break;
    case 2:
      LOBYTE(v3) = 1;
      break;
    case 3:
      char v4 = 8 * v2;
      uint64_t v2 = qword_1A75835E8[v2];
      unint64_t v3 = 0x2020202FFuLL >> (v4 & 0xF8);
      break;
    default:
      uint64_t v2 = 0;
      LOBYTE(v3) = -1;
      break;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

uint64_t *REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  unsigned int v3 = *((unsigned __int8 *)result + 8);
  if (*((unsigned char *)result + 8) && v3 != 1)
  {
    unsigned int v3 = 0x202FFu >> (8 * v2);
    uint64_t v2 = qword_1A7583610[v2];
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_1A73F3EA0(char a1)
{
  uint64_t result = 0x63636164636D6572;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x73696C64636D6572;
      break;
    case 2:
      uint64_t result = 0x616D7364636D6572;
      break;
    case 3:
      uint64_t result = 0x6D657264636D6572;
      break;
    case 4:
      uint64_t result = 0xD000000000000010;
      break;
    case 5:
      uint64_t result = 0xD000000000000015;
      break;
    case 6:
      uint64_t result = 1953460082;
      break;
    case 7:
      uint64_t result = 0x7961646F74;
      break;
    case 8:
      uint64_t result = 0x656C756465686373;
      break;
    case 9:
      unsigned int v3 = 1919708257;
      goto LABEL_20;
    case 10:
      uint64_t result = 0x64656767616C66;
      break;
    case 11:
      uint64_t result = 0x686372616573;
      break;
    case 12:
      uint64_t result = 0x64656E6769737361;
      break;
    case 13:
      uint64_t result = 0x6E756F6669726973;
      break;
    case 14:
      uint64_t result = 0x646567676174;
      break;
    case 15:
      uint64_t result = 0x6574656C706D6F63;
      break;
    case 16:
      uint64_t result = 0x7473696C77656ELL;
      break;
    case 17:
      unsigned int v3 = 1920427374;
LABEL_20:
      uint64_t result = v3 | 0x6E696D6500000000;
      break;
    case 18:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 19:
      uint64_t result = 0x657463696C627570;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A73F4138(unint64_t result)
{
  uint64_t result = result;
  switch((char)result)
  {
    case 1:
      uint64_t result = 0x73746E65746E6F63;
      break;
    case 2:
      uint64_t result = 0x736C6961746564;
      break;
    case 3:
      uint64_t result = 0xD000000000000010;
      break;
    case 4:
      uint64_t result = 0x6E696D657277656ELL;
      break;
    case 5:
      uint64_t result = 0x6E61726165707061;
      break;
    case 6:
      uint64_t result = 0x5F65746164657564;
      break;
    case 7:
      uint64_t result = 0x65746164657564;
      break;
    case 8:
      uint64_t result = 1936154996;
      break;
    case 9:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 10:
      uint64_t result = 0x6165706572646E65;
      break;
    case 11:
      uint64_t result = 0x736B736174627573;
      break;
    case 12:
      uint64_t result = 0x656D6E6769737361;
      break;
    case 13:
      uint64_t result = 0x7463656C6573;
      break;
    case 14:
      uint64_t result = 0xD000000000000013;
      break;
    case 15:
      uint64_t result = 0x6D736D6F74737563;
      break;
    case 16:
      uint64_t result = 0x6C797265636F7267;
      break;
    case 17:
      uint64_t result = 0x7374696465;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A73F4378(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A73F445C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1A73F3EA0);
}

uint64_t sub_1A73F4390(uint64_t a1, uint64_t a2)
{
  return sub_1A73F450C(a1, a2, (void (*)(uint64_t))sub_1A73F3EA0);
}

uint64_t sub_1A73F43A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73F4590(a1, a2, a3, (void (*)(void))sub_1A73F3EA0);
}

uint64_t sub_1A73F43C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73F4600(a1, a2, a3, (void (*)(uint64_t))sub_1A73F3EA0);
}

uint64_t sub_1A73F43D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A73FB9CC();
  *a1 = result;
  return result;
}

uint64_t sub_1A73F4408@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A73F3EA0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1A73F4434(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FCB8;
}

uint64_t sub_1A73F4444(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A73F445C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1A73F4138);
}

uint64_t sub_1A73F445C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1A7573DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_1A73F44F4(uint64_t a1, uint64_t a2)
{
  return sub_1A73F450C(a1, a2, (void (*)(uint64_t))sub_1A73F4138);
}

uint64_t sub_1A73F450C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_1A75740C0();
  a3(v5);
  sub_1A75726F0();
  swift_bridgeObjectRelease();
  return sub_1A7574110();
}

uint64_t sub_1A73F4578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73F4590(a1, a2, a3, (void (*)(void))sub_1A73F4138);
}

uint64_t sub_1A73F4590(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A73F45E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73F4600(a1, a2, a3, (void (*)(uint64_t))sub_1A73F4138);
}

uint64_t sub_1A73F4600(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_1A75740C0();
  a4(v6);
  sub_1A75726F0();
  swift_bridgeObjectRelease();
  return sub_1A7574110();
}

uint64_t sub_1A73F4668@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A73FBA20();
  *a1 = result;
  return result;
}

unint64_t sub_1A73F4698@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1A73F4138(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1A73F46C4(void *a1@<X8>)
{
  *a1 = &unk_1EFC8F9F8;
}

uint64_t sub_1A73F46D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A7571BC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReminderUUID(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571B70();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A72CB560((uint64_t)v4, &qword_1EB704C40);
    uint64_t v13 = 1;
  }
  else
  {
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v8, v4, v5);
    v14(v12, v8, v5);
    sub_1A73F923C((uint64_t)v12, a1, type metadata accessor for ReminderUUID);
    uint64_t v13 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, v13, 1, v9);
}

uint64_t sub_1A73F4924@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_1A7571BC0();
  uint64_t v14 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2E78);
  uint64_t v16 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReminderUUID(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73FEFDC();
  sub_1A7574190();
  if (!v2)
  {
    sub_1A73FEF94(&qword_1EB705A30, MEMORY[0x1E4F27990]);
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_1A73F923C((uint64_t)v11, v15, type metadata accessor for ReminderUUID);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A73F4BB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = a2;
  uint64_t v4 = type metadata accessor for ReminderUUID(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2E50);
  uint64_t v14 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReminderIDQuery(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73FEF40();
  sub_1A7574190();
  if (!v2)
  {
    sub_1A73FEF94(&qword_1E96F2E60, (void (*)(uint64_t))type metadata accessor for ReminderUUID);
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_1A73F923C(v15, (uint64_t)v11, type metadata accessor for ReminderUUID);
    sub_1A73F923C((uint64_t)v11, v13, type metadata accessor for ReminderIDQuery);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A73F4E20()
{
  return 1684632949;
}

uint64_t sub_1A73F4E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A73F4EB8(uint64_t a1)
{
  unint64_t v2 = sub_1A73FEFDC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73F4EF4(uint64_t a1)
{
  unint64_t v2 = sub_1A73FEFDC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A73F4F30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A73F4924(a1, a2);
}

uint64_t sub_1A73F4F48(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2E88);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73FEFDC();
  sub_1A75741B0();
  sub_1A7571BC0();
  sub_1A73FEF94(&qword_1EB7057D0, MEMORY[0x1E4F27990]);
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A73F50C0()
{
  return sub_1A7571B80();
}

uint64_t sub_1A73F50E8(uint64_t a1)
{
  unint64_t v2 = sub_1A73FF1D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73F5124(uint64_t a1)
{
  unint64_t v2 = sub_1A73FF1D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A73F5160(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701680);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73FF1D4();
  sub_1A75741B0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A73F5270()
{
  return sub_1A7398D34();
}

uint64_t sub_1A73F527C()
{
  return sub_1A75726F0();
}

uint64_t sub_1A73F5288()
{
  return sub_1A7398DBC();
}

uint64_t sub_1A73F5294@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398E14(a1);
}

void sub_1A73F52A0(void *a1@<X8>)
{
  *a1 = 113;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_1A73F52B0()
{
  return 113;
}

uint64_t sub_1A73F52BC@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398EAC(a1);
}

uint64_t sub_1A73F52C8(uint64_t a1)
{
  unint64_t v2 = sub_1A73FF0D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73F5304(uint64_t a1)
{
  unint64_t v2 = sub_1A73FF0D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A73F5340@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2F80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73FF0D8();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = sub_1A7573A00();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_1A73F54B8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73F6410(a1, a2, a3, &qword_1E96F2EF0, (void (*)(void))sub_1A73FF0D8, (uint64_t)&type metadata for SearchQuery.CodingKeys, MEMORY[0x1E4FBBDD8]);
}

uint64_t sub_1A73F5508()
{
  return sub_1A7398D34();
}

uint64_t sub_1A73F5520()
{
  return sub_1A75726F0();
}

uint64_t sub_1A73F5538()
{
  return sub_1A7398DBC();
}

uint64_t sub_1A73F5550@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398E14(a1);
}

void sub_1A73F555C(void *a1@<X8>)
{
  *a1 = 0x7265646E696D6572;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1A73F5578()
{
  return 0x7265646E696D6572;
}

uint64_t sub_1A73F5590@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398EAC(a1);
}

uint64_t sub_1A73F559C(uint64_t a1)
{
  unint64_t v2 = sub_1A73FEF40();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73F55D8(uint64_t a1)
{
  unint64_t v2 = sub_1A73FEF40();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A73F5614@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A73F4BB8(a1, a2);
}

uint64_t sub_1A73F562C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2E68);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73FEF40();
  sub_1A75741B0();
  type metadata accessor for ReminderUUID(0);
  sub_1A73FEF94(&qword_1E96F2E70, (void (*)(uint64_t))type metadata accessor for ReminderUUID);
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A73F57A0(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2EB0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73FF030();
  sub_1A75741B0();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2EC8);
  sub_1A73FF27C(&qword_1E96F2ED0, &qword_1E96F2E70);
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A73F5928()
{
  return sub_1A7398D34();
}

uint64_t sub_1A73F5944()
{
  return sub_1A75726F0();
}

uint64_t sub_1A73F5960()
{
  return sub_1A7398DBC();
}

uint64_t sub_1A73F597C@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398E14(a1);
}

void sub_1A73F5988(void *a1@<X8>)
{
  *a1 = 0x7265646E696D6572;
  a1[1] = 0xE900000000000073;
}

uint64_t sub_1A73F59A8()
{
  return 0x7265646E696D6572;
}

uint64_t sub_1A73F59C4@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398EAC(a1);
}

uint64_t sub_1A73F59D0(uint64_t a1)
{
  unint64_t v2 = sub_1A73FF030();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73F5A0C(uint64_t a1)
{
  unint64_t v2 = sub_1A73FF030();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1A73F5A48@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1A73FB464(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A73F5A74(void *a1)
{
  return sub_1A73F57A0(a1, *v1);
}

uint64_t sub_1A73F5A90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2F10);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73FF12C();
  sub_1A75741B0();
  char v14 = 0;
  sub_1A7573AD0();
  if (!v3)
  {
    char v13 = 1;
    sub_1A7573AD0();
    v11[1] = a3;
    char v12 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    sub_1A72A817C(&qword_1EB7003D8);
    sub_1A7573B00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1A73F5C68(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2EE0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73FF084();
  sub_1A75741B0();
  v8[15] = 0;
  sub_1A7573B20();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A7573AD0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A73F5DC8()
{
  uint64_t v1 = 1701736302;
  if (*v0 != 1) {
    uint64_t v1 = 0x736C6562616CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 7105633;
  }
}

uint64_t sub_1A73F5E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74004F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A73F5E38(uint64_t a1)
{
  unint64_t v2 = sub_1A73FF12C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73F5E74(uint64_t a1)
{
  unint64_t v2 = sub_1A73FF12C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A73F5EB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1A73FB7B8(a1);
  if (!v2)
  {
    *(_WORD *)a2 = result;
    *(void *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_1A73F5EE8(void *a1)
{
  return sub_1A73F5A90(a1, *v1, *((void *)v1 + 1));
}

uint64_t sub_1A73F5F08()
{
  return sub_1A7398D34();
}

uint64_t sub_1A73F5F24()
{
  return sub_1A75726F0();
}

uint64_t sub_1A73F5F40()
{
  return sub_1A7398DBC();
}

uint64_t sub_1A73F5F5C@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398E14(a1);
}

void sub_1A73F5F68(void *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001A759DF90;
}

unint64_t sub_1A73F5F88()
{
  return 0xD000000000000012;
}

uint64_t sub_1A73F5FA4@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398EAC(a1);
}

uint64_t sub_1A73F5FB0(uint64_t a1)
{
  unint64_t v2 = sub_1A73FF180();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73F5FEC(uint64_t a1)
{
  unint64_t v2 = sub_1A73FF180();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A73F6028@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A73F6238(a1, &qword_1E96F2FB8, (void (*)(void))sub_1A73FF180, a2);
}

uint64_t sub_1A73F6064(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73F6410(a1, a2, a3, &qword_1E96F2F20, (void (*)(void))sub_1A73FF180, (uint64_t)&type metadata for PublicTemplateQuery.CodingKeys, MEMORY[0x1E4FBBDD0]);
}

uint64_t sub_1A73F60B4()
{
  return sub_1A7398D34();
}

uint64_t sub_1A73F60D8()
{
  return sub_1A75726F0();
}

uint64_t sub_1A73F60FC()
{
  return sub_1A7398DBC();
}

uint64_t sub_1A73F6120@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398E14(a1);
}

void sub_1A73F612C(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1A73F6154()
{
  return 0x7473696C5F77656ELL;
}

uint64_t sub_1A73F6178@<X0>(BOOL *a1@<X8>)
{
  return sub_1A7398EAC(a1);
}

uint64_t sub_1A73F6184(uint64_t a1)
{
  unint64_t v2 = sub_1A73FF228();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73F61C0(uint64_t a1)
{
  unint64_t v2 = sub_1A73FF228();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A73F61FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A73F6238(a1, &qword_1E96F2F98, (void (*)(void))sub_1A73FF228, a2);
}

uint64_t sub_1A73F6238@<X0>(void *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v18 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v17 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A7574190();
  if (v4) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v17;
  uint64_t v11 = v18;
  uint64_t v12 = sub_1A75739B0();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v7);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v11 = v12;
  v11[1] = v14;
  return result;
}

uint64_t sub_1A73F63C0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A73F6410(a1, a2, a3, &qword_1E96F2F48, (void (*)(void))sub_1A73FF228, (uint64_t)&type metadata for NewListQuery.CodingKeys, MEMORY[0x1E4FBBDD0]);
}

uint64_t sub_1A73F6410(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void), uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  uint64_t v18 = a7;
  uint64_t v17 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v7[1];
  uint64_t v16 = *v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17();
  sub_1A75741B0();
  v18(v16, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1A73F6560(char *a1, char *a2)
{
  return sub_1A7544ABC(*a1, *a2);
}

uint64_t sub_1A73F656C()
{
  return sub_1A7574110();
}

uint64_t sub_1A73F65FC()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A73F6678()
{
  return sub_1A7574110();
}

uint64_t sub_1A73F6704@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1A73F6764(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6574656C706D6F63;
  if (*v1) {
    uint64_t v2 = 0x79616C5F7473696CLL;
  }
  unint64_t v3 = 0xE900000000000064;
  if (*v1) {
    unint64_t v3 = 0xEB0000000074756FLL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A73F67B0()
{
  if (*v0) {
    return 0x79616C5F7473696CLL;
  }
  else {
    return 0x6574656C706D6F63;
  }
}

uint64_t sub_1A73F67F8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1A73F685C(uint64_t a1)
{
  unint64_t v2 = sub_1A73FF084();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73F6898(uint64_t a1)
{
  unint64_t v2 = sub_1A73FF084();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A73F68D4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1A73FB614(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result);
  }
  return result;
}

uint64_t sub_1A73F690C(void *a1)
{
  return sub_1A73F5C68(a1);
}

uint64_t sub_1A73F6930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701680);
  uint64_t v5 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A75719C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v24 = a1;
  v12(v11, a1, v8);
  uint64_t v13 = *(void *)(a2 + 16);
  if (v13)
  {
    uint64_t v14 = a2 + 32;
    v20[0] = "ks";
    v20[1] = "lictemplate";
    do
    {
      ++v14;
      sub_1A75718F0();
      swift_bridgeObjectRelease();
      --v13;
    }
    while (v13);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for InternalEncoder();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v16 = (uint64_t *)(v15 + 16);
  uint64_t v23 = v15;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701578);
  sub_1A72AE788(&qword_1EB701570, &qword_1EB701578);
  sub_1A7573B90();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  swift_beginAccess();
  uint64_t v17 = *v16;
  swift_bridgeObjectRetain();
  swift_release();
  sub_1A73F8D50(v17, v22);
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v18(v24, v8);
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v8);
}

uint64_t sub_1A73F6E1C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, unint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v31 = a6;
  uint64_t v32 = a8;
  uint64_t v30 = a7;
  uint64_t v33 = a3;
  uint64_t v37 = a4;
  v29[0] = a9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v35 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1A75719C0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void (**)(char *, char *))(v15 + 16);
  uint64_t v39 = a1;
  uint64_t v36 = v19;
  v18(v17, a1);
  uint64_t v20 = *(void *)(a2 + 16);
  if (v20)
  {
    uint64_t v21 = a2 + 32;
    v29[1] = (uint64_t)"ks";
    v29[2] = (uint64_t)"lictemplate";
    do
    {
      ++v21;
      sub_1A75718F0();
      swift_bridgeObjectRelease();
      --v20;
    }
    while (v20);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for InternalEncoder();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v38 = v22;
  swift_retain();
  uint64_t v23 = v31;
  __swift_instantiateConcreteTypeFromMangledName(v31);
  sub_1A72AE788(v30, v23);
  sub_1A7573B90();
  uint64_t v24 = v34;
  sub_1A7573AC0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
  if (v24)
  {
    swift_release();
  }
  else
  {
    swift_beginAccess();
    uint64_t v25 = *(void *)(v22 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1A73F8D50(v25, v29[0]);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  unint64_t v26 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
  uint64_t v27 = v36;
  v26(v39, v36);
  return v26(v17, v27);
}

uint64_t sub_1A73F7378@<X0>(char *a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v24 = a4;
  unsigned int v22 = a3;
  uint64_t v21 = a5;
  uint64_t v7 = sub_1A75719C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  unint64_t v26 = a1;
  v11(v10, a1, v7);
  uint64_t v12 = *(void *)(a2 + 16);
  if (v12)
  {
    uint64_t v13 = a2 + 32;
    do
    {
      ++v13;
      sub_1A75718F0();
      swift_bridgeObjectRelease();
      --v12;
    }
    while (v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = type metadata accessor for InternalEncoder();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = MEMORY[0x1E4FBC860];
  v25[3] = v14;
  v25[4] = sub_1A73FEF94((unint64_t *)&qword_1E96F1FE8, (void (*)(uint64_t))type metadata accessor for InternalEncoder);
  v25[0] = v15;
  swift_retain();
  uint64_t v16 = v23;
  sub_1A73F5A90(v25, v22, v24);
  if (v16)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    swift_beginAccess();
    uint64_t v17 = *(void *)(v15 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1A73F8D50(v17, v21);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  v18(v26, v7);
  return v18(v10, v7);
}

uint64_t sub_1A73F7800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v32 = a4;
  uint64_t v25 = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2EF0);
  uint64_t v30 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A75719C0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v11 + 16);
  uint64_t v34 = a1;
  uint64_t v31 = v15;
  v14(v13, a1);
  uint64_t v16 = *(void *)(a2 + 16);
  if (v16)
  {
    uint64_t v17 = a2 + 32;
    unint64_t v26 = "ks";
    uint64_t v27 = "lictemplate";
    do
    {
      ++v17;
      sub_1A75718F0();
      swift_bridgeObjectRelease();
      --v16;
    }
    while (v16);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for InternalEncoder();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v33 = v18;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2EF8);
  sub_1A72AE788(&qword_1E96F2F00, &qword_1E96F2EF8);
  sub_1A7573B90();
  uint64_t v19 = v29;
  sub_1A7573B10();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v7);
  if (v19)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_beginAccess();
    uint64_t v20 = *(void *)(v18 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1A73F8D50(v20, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  uint64_t v22 = v31;
  v21(v34, v31);
  return ((uint64_t (*)(char *, uint64_t))v21)(v13, v22);
}

uint64_t sub_1A73F7D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a3;
  v23[0] = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2EB0);
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A75719C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v10 + 16);
  uint64_t v28 = a1;
  uint64_t v25 = v14;
  v13(v12, a1);
  uint64_t v15 = *(void *)(a2 + 16);
  if (v15)
  {
    uint64_t v16 = a2 + 32;
    v23[1] = (uint64_t)"ks";
    v23[2] = (uint64_t)"lictemplate";
    do
    {
      ++v16;
      sub_1A75718F0();
      swift_bridgeObjectRelease();
      --v15;
    }
    while (v15);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for InternalEncoder();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v27 = v17;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2EB8);
  sub_1A72AE788(&qword_1E96F2EC0, &qword_1E96F2EB8);
  sub_1A7573B90();
  uint64_t v27 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2EC8);
  sub_1A73FF27C(&qword_1E96F2ED0, &qword_1E96F2E70);
  uint64_t v18 = v23[3];
  sub_1A7573B60();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  if (v18)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_beginAccess();
    uint64_t v19 = *(void *)(v17 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1A73F8D50(v19, v23[0]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  uint64_t v21 = v25;
  v20(v28, v25);
  return ((uint64_t (*)(char *, uint64_t))v20)(v12, v21);
}

uint64_t sub_1A73F8318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = a3;
  v24[0] = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2E68);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A75719C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v10 + 16);
  uint64_t v29 = a1;
  uint64_t v26 = v14;
  v13(v12, a1);
  uint64_t v15 = *(void *)(a2 + 16);
  if (v15)
  {
    uint64_t v16 = a2 + 32;
    v24[1] = (uint64_t)"ks";
    v24[2] = (uint64_t)"lictemplate";
    do
    {
      ++v16;
      sub_1A75718F0();
      swift_bridgeObjectRelease();
      --v15;
    }
    while (v15);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for InternalEncoder();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v28 = v17;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2E98);
  sub_1A72AE788(&qword_1E96F2EA0, &qword_1E96F2E98);
  sub_1A7573B90();
  type metadata accessor for ReminderUUID(0);
  sub_1A73FEF94(&qword_1E96F2E70, (void (*)(uint64_t))type metadata accessor for ReminderUUID);
  uint64_t v18 = v27;
  uint64_t v19 = v24[3];
  sub_1A7573B60();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v6);
  if (v19)
  {
    swift_release();
  }
  else
  {
    swift_beginAccess();
    uint64_t v20 = *(void *)(v17 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1A73F8D50(v20, v24[0]);
    swift_bridgeObjectRelease();
  }
  sub_1A73F932C(v18, type metadata accessor for ReminderIDQuery);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  uint64_t v22 = v26;
  v21(v29, v26);
  return ((uint64_t (*)(char *, uint64_t))v21)(v12, v22);
}

uint64_t sub_1A73F88CC@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v20 = a3;
  uint64_t v19 = a4;
  uint64_t v6 = sub_1A75719C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v23 = a1;
  v10(v9, a1, v6);
  uint64_t v11 = *(void *)(a2 + 16);
  if (v11)
  {
    uint64_t v12 = a2 + 32;
    do
    {
      ++v12;
      sub_1A75718F0();
      swift_bridgeObjectRelease();
      --v11;
    }
    while (v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = type metadata accessor for InternalEncoder();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = MEMORY[0x1E4FBC860];
  v22[3] = v13;
  v22[4] = sub_1A73FEF94((unint64_t *)&qword_1E96F1FE8, (void (*)(uint64_t))type metadata accessor for InternalEncoder);
  v22[0] = v14;
  swift_retain();
  uint64_t v15 = v21;
  sub_1A73F5C68(v22);
  if (v15)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    swift_beginAccess();
    uint64_t v16 = *(void *)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1A73F8D50(v16, v19);
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  v17(v23, v6);
  return v17(v9, v6);
}

uint64_t sub_1A73F8D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704920);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A75715C0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    sub_1A7571590();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_1A72CB560((uint64_t)v11, &qword_1EB704920);
      uint64_t v16 = self;
      unint64_t v27 = 0;
      unint64_t v28 = 0xE000000000000000;
      sub_1A7573560();
      swift_bridgeObjectRelease();
      unint64_t v27 = 0xD000000000000028;
      unint64_t v28 = 0x80000001A75A1CF0;
      sub_1A75719C0();
      sub_1A73FEF94(&qword_1E96F2CE8, MEMORY[0x1E4F276F0]);
      sub_1A7573BC0();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      uint64_t v17 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_internalErrorWithDebugDescription_, v17);

      return swift_willThrow();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
      uint64_t v20 = sub_1A7571570();
      unint64_t v21 = MEMORY[0x1E4FBC860];
      if (v20) {
        unint64_t v21 = v20;
      }
      unint64_t v27 = v21;
      uint64_t v22 = swift_bridgeObjectRetain();
      sub_1A72D0F24(v22);
      sub_1A7571580();
      sub_1A75715A0();
      uint64_t v23 = sub_1A75719C0();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v8, 1, v23) == 1)
      {
        sub_1A72CB560((uint64_t)v8, &qword_1EB704C30);
        uint64_t v25 = self;
        unint64_t v27 = 0;
        unint64_t v28 = 0xE000000000000000;
        sub_1A7573560();
        swift_bridgeObjectRelease();
        unint64_t v27 = 0xD000000000000025;
        unint64_t v28 = 0x80000001A75A1D20;
        sub_1A73FEF94(&qword_1E96F2EA8, MEMORY[0x1E4F26ED8]);
        sub_1A7573BC0();
        sub_1A7572740();
        swift_bridgeObjectRelease();
        uint64_t v26 = (void *)sub_1A75725E0();
        swift_bridgeObjectRelease();
        objc_msgSend(v25, sel_internalErrorWithDebugDescription_, v26);

        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(a2, v8, v23);
      }
    }
  }
  else
  {
    uint64_t v19 = sub_1A75719C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a2, v3, v19);
  }
}

uint64_t sub_1A73F923C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ReminderIDQuery(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1EB701480);
}

uint64_t sub_1A73F92C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A73F932C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO010SearchPathE0O2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3)
  {
    if (!v4)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    return 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }

  return sub_1A7573DB0();
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO010TaggedPathE0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  unint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  if (*(void *)a1 != 2)
  {
    if (v6 != 2)
    {
      v12[0] = *(void *)a1;
      v12[1] = v2;
      char v13 = v4;
      v10[0] = v6;
      v10[1] = v5;
      char v11 = v7;
      sub_1A7383834(v6);
      sub_1A7383834(v3);
      sub_1A7383834(v6);
      sub_1A7383834(v3);
      char v8 = _s19ReminderKitInternal24REMHashtagLabelSpecifierO2eeoiySbAC_ACtFZ_0((uint64_t)v12, (uint64_t)v10);
      sub_1A73FBD3C(v3);
      sub_1A73FBD3C(v6);
      sub_1A73FBD3C(v6);
      sub_1A73FBD3C(v3);
      return v8 & 1;
    }
    goto LABEL_5;
  }
  if (v6 != 2)
  {
LABEL_5:
    sub_1A7383834(*(void *)a2);
    sub_1A7383834(v3);
    sub_1A73FBD3C(v3);
    sub_1A73FBD3C(v6);
    char v8 = 0;
    return v8 & 1;
  }
  sub_1A73FBD3C(2uLL);
  sub_1A73FBD3C(2uLL);
  char v8 = 1;
  return v8 & 1;
}

BOOL _s19ReminderKitInternal22REMNavigationSpecifierO011NewListPathE0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    if (*(unsigned char *)(a2 + 16)) {
      goto LABEL_22;
    }
    if (v3)
    {
      if (v6)
      {
        if (v2 == v5 && v3 == v6)
        {
          sub_1A738EF10(*(void *)a1, v3, 0);
          sub_1A738EF10(v2, v3, 0);
          sub_1A738EF38(v2, v3, 0);
          uint64_t v9 = v2;
          uint64_t v10 = v3;
          unsigned __int8 v11 = 0;
LABEL_21:
          sub_1A738EF38(v9, v10, v11);
          return 1;
        }
        char v18 = sub_1A7573DB0();
        sub_1A738EF10(v5, v6, 0);
        sub_1A738EF10(v2, v3, 0);
        sub_1A738EF38(v2, v3, 0);
        sub_1A738EF38(v5, v6, 0);
        return (v18 & 1) != 0;
      }
      sub_1A738EF10(*(void *)a2, 0, 0);
      sub_1A738EF10(v2, v3, 0);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1A738EF10(v5, v6, 0);
      sub_1A738EF10(v2, 0, 0);
      sub_1A738EF38(v2, 0, 0);
      sub_1A738EF38(v5, v6, 0);
      if (!v6) {
        return 1;
      }
    }
    sub_1A738EF38(v2, v3, 0);
    uint64_t v12 = v5;
    uint64_t v13 = v6;
    unsigned __int8 v14 = 0;
    goto LABEL_23;
  }
  if (v4 != 1)
  {
    if (v7 != 2) {
      goto LABEL_22;
    }
    if (v3)
    {
      if (v6)
      {
        if (v2 == v5 && v3 == v6)
        {
          sub_1A738EF10(*(void *)a1, v3, 2u);
          sub_1A738EF10(v2, v3, 2u);
          sub_1A738EF38(v2, v3, 2u);
          uint64_t v9 = v2;
          uint64_t v10 = v3;
          unsigned __int8 v11 = 2;
          goto LABEL_21;
        }
        char v17 = sub_1A7573DB0();
        sub_1A738EF10(v5, v6, 2u);
        sub_1A738EF10(v2, v3, 2u);
        sub_1A738EF38(v2, v3, 2u);
        sub_1A738EF38(v5, v6, 2u);
        return (v17 & 1) != 0;
      }
      sub_1A738EF10(*(void *)a2, 0, 2u);
      sub_1A738EF10(v2, v3, 2u);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1A738EF10(v5, v6, 2u);
      sub_1A738EF10(v2, 0, 2u);
      sub_1A738EF38(v2, 0, 2u);
      sub_1A738EF38(v5, v6, 2u);
      if (!v6) {
        return 1;
      }
    }
    sub_1A738EF38(v2, v3, 2u);
    uint64_t v12 = v5;
    uint64_t v13 = v6;
    unsigned __int8 v14 = 2;
    goto LABEL_23;
  }
  if (v7 != 1)
  {
LABEL_22:
    sub_1A738EF10(*(void *)a2, *(void *)(a2 + 8), v7);
    sub_1A738EF10(v2, v3, v4);
    sub_1A738EF38(v2, v3, v4);
    uint64_t v12 = v5;
    uint64_t v13 = v6;
    unsigned __int8 v14 = v7;
LABEL_23:
    sub_1A738EF38(v12, v13, v14);
    return 0;
  }
  if (!v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 1;
    sub_1A738EF10(v5, v6, 1u);
    sub_1A738EF10(v2, 0, 1u);
    sub_1A738EF38(v2, 0, 1u);
    sub_1A738EF38(v5, v6, 1u);
    if (!v6) {
      return v8;
    }
    goto LABEL_33;
  }
  if (!v6)
  {
    sub_1A738EF10(*(void *)a2, 0, 1u);
    sub_1A738EF10(v2, v3, 1u);
LABEL_33:
    sub_1A738EF38(v2, v3, 1u);
    uint64_t v12 = v5;
    uint64_t v13 = v6;
    unsigned __int8 v14 = 1;
    goto LABEL_23;
  }
  if (v2 != v5 || v3 != v6)
  {
    char v16 = sub_1A7573DB0();
    uint64_t v8 = 1;
    sub_1A738EF10(v5, v6, 1u);
    sub_1A738EF10(v2, v3, 1u);
    sub_1A738EF38(v2, v3, 1u);
    sub_1A738EF38(v5, v6, 1u);
    if (v16) {
      return v8;
    }
    return 0;
  }
  uint64_t v8 = 1;
  sub_1A738EF10(*(void *)a1, v3, 1u);
  sub_1A738EF10(v2, v3, 1u);
  sub_1A738EF38(v2, v3, 1u);
  sub_1A738EF38(v2, v3, 1u);
  return v8;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO013SmartListPathE0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  id v4 = *(id *)a2;
  int v5 = *(unsigned __int8 *)(a2 + 8);
  if (!*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8))
    {
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      sub_1A73FC3A0(v4, 0);
      sub_1A73FC3A0(v2, 0);
      int v6 = sub_1A7573190();
      sub_1A73FBD4C(v2, 0);
      int v7 = v4;
      char v8 = 0;
      goto LABEL_7;
    }
    goto LABEL_23;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      sub_1A73FC3A0(*(id *)a2, 1);
      sub_1A73FC3A0(v2, 1);
      LOBYTE(v6) = sub_1A72DE320((uint64_t)v2, (uint64_t)v4);
      sub_1A73FBD4C(v2, 1);
      int v7 = v4;
      char v8 = 1;
LABEL_7:
      sub_1A73FBD4C(v7, v8);
      return v6 & 1;
    }
    goto LABEL_23;
  }
  if (!v2)
  {
    if (v5 != 2 || v4 != 0) {
      goto LABEL_23;
    }
    sub_1A73FBD4C(0, 2);
    uint64_t v11 = 0;
    goto LABEL_22;
  }
  if (v2 != (void *)1)
  {
    if (v5 != 2 || v4 != (id)2) {
      goto LABEL_23;
    }
    sub_1A73FBD4C((id)2, 2);
    uint64_t v11 = 2;
LABEL_22:
    sub_1A73FBD4C((id)v11, 2);
    return 1;
  }
  if (v5 != 2 || v4 != (id)1)
  {
LABEL_23:
    sub_1A73FC3A0(*(id *)a2, *(unsigned char *)(a2 + 8));
    sub_1A73FC3A0(v2, v3);
    sub_1A73FBD4C(v2, v3);
    sub_1A73FBD4C(v4, v5);
    return 0;
  }
  sub_1A73FBD4C((id)1, 2);
  sub_1A73FBD4C((id)1, 2);
  return (uint64_t)v4;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO014CommonListPathE0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  id v4 = *(id *)a2;
  int v5 = *(unsigned __int8 *)(a2 + 8);
  if (!*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8))
    {
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      sub_1A73FC3A0(v4, 0);
      sub_1A73FC3A0(v2, 0);
      int v6 = sub_1A7573190();
      sub_1A73FBD4C(v2, 0);
      int v7 = v4;
      char v8 = 0;
      goto LABEL_16;
    }
    goto LABEL_6;
  }
  if (v3 != 1)
  {
    switch((unint64_t)v2)
    {
      case 1uLL:
        if (v5 != 2 || v4 != (id)1) {
          goto LABEL_6;
        }
        uint64_t v9 = 1;
        sub_1A73FBD4C((id)1, 2);
        sub_1A73FBD4C((id)1, 2);
        return v9;
      case 2uLL:
        if (v5 != 2 || v4 != (id)2) {
          goto LABEL_6;
        }
        sub_1A73FBD4C((id)2, 2);
        uint64_t v12 = 2;
        goto LABEL_29;
      case 3uLL:
        if (v5 != 2 || v4 != (id)3) {
          goto LABEL_6;
        }
        sub_1A73FBD4C((id)3, 2);
        uint64_t v12 = 3;
        goto LABEL_29;
      default:
        if (v5 != 2 || v4 != 0) {
          goto LABEL_6;
        }
        sub_1A73FBD4C(0, 2);
        uint64_t v12 = 0;
LABEL_29:
        sub_1A73FBD4C((id)v12, 2);
        uint64_t v9 = 1;
        break;
    }
    return v9;
  }
  if (v5 != 1)
  {
LABEL_6:
    sub_1A73FC3A0(*(id *)a2, *(unsigned char *)(a2 + 8));
    sub_1A73FC3A0(v2, v3);
    sub_1A73FBD4C(v2, v3);
    sub_1A73FBD4C(v4, v5);
    return 0;
  }
  sub_1A73FC3A0(*(id *)a2, 1);
  sub_1A73FC3A0(v2, 1);
  LOBYTE(v6) = sub_1A72DE320((uint64_t)v2, (uint64_t)v4);
  sub_1A73FBD4C(v2, 1);
  int v7 = v4;
  char v8 = 1;
LABEL_16:
  sub_1A73FBD4C(v7, v8);
  return v6 & 1;
}

BOOL _s19ReminderKitInternal22REMNavigationSpecifierO08ListPathE0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  id v2 = *(id *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  id v4 = *(id *)a2;
  int v5 = *(unsigned __int8 *)(a2 + 8);
  switch(v3)
  {
    case 1:
      if (v5 == 1)
      {
        sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
        sub_1A73FBD68(v4, 1);
        sub_1A73FBD68(v2, 1);
        char v7 = sub_1A7573190();
        sub_1A73FBD88(v2, 1);
        char v8 = v4;
        char v9 = 1;
        goto LABEL_8;
      }
      id v13 = v2;
      goto LABEL_18;
    case 2:
      if (v5 == 2)
      {
        sub_1A73FBD68(*(id *)a2, 2);
        sub_1A73FBD68(v2, 2);
        char v7 = sub_1A72DE320((uint64_t)v2, (uint64_t)v4);
        sub_1A73FBD88(v2, 2);
        char v8 = v4;
        char v9 = 2;
LABEL_8:
        sub_1A73FBD88(v8, v9);
        return v7 & 1;
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_18:
        sub_1A73FBD68(v4, v5);
        sub_1A73FBD88(v2, v3);
        sub_1A73FBD88(v4, v5);
        return 0;
      }
    case 3:
      switch((unint64_t)v2)
      {
        case 1uLL:
          if (v5 != 3 || v4 != (id)1) {
            goto LABEL_18;
          }
          uint64_t v6 = 1;
          sub_1A73FBD88((id)1, 3);
          sub_1A73FBD88((id)1, 3);
          return v6;
        case 2uLL:
          if (v5 != 3 || v4 != (id)2) {
            goto LABEL_18;
          }
          sub_1A73FBD88((id)2, 3);
          uint64_t v12 = 2;
          goto LABEL_38;
        case 3uLL:
          if (v5 != 3 || v4 != (id)3) {
            goto LABEL_18;
          }
          sub_1A73FBD88((id)3, 3);
          uint64_t v12 = 3;
          goto LABEL_38;
        case 4uLL:
          if (v5 != 3 || v4 != (id)4) {
            goto LABEL_18;
          }
          sub_1A73FBD88((id)4, 3);
          uint64_t v12 = 4;
          goto LABEL_38;
        default:
          if (v5 != 3 || v4 != 0) {
            goto LABEL_18;
          }
          sub_1A73FBD88(0, 3);
          uint64_t v12 = 0;
LABEL_38:
          sub_1A73FBD88((id)v12, 3);
          uint64_t v6 = 1;
          break;
      }
      return v6;
    default:
      if (*(unsigned char *)(a2 + 8)) {
        goto LABEL_18;
      }
      sub_1A73FBD88(*(id *)a1, 0);
      sub_1A73FBD88(v4, 0);
      return ((v4 ^ v2) & 1) == 0;
  }
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO0a4PathE0O13DetailSectionO2eeoiySbAG_AGtFZ_0(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  switch(*a1)
  {
    case 2:
      if (v2 != 2) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 3:
      if (v2 != 3) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 4:
      if (v2 != 4) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 5:
      if (v2 != 5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 6:
      if (v2 != 6) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 7:
      if (v2 != 7) {
        goto LABEL_15;
      }
LABEL_13:
      uint64_t result = 1;
      break;
    default:
      if ((v2 - 2) >= 6) {
        uint64_t result = (((*a1 & 1) == 0) ^ v2) & 1;
      }
      else {
LABEL_15:
      }
        uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO0a4PathE0O2eeoiySbAE_AEtFZ_0(__int16 *a1, unsigned __int16 *a2)
{
  __int16 v2 = *a1;
  int v3 = *a2;
  if (*((unsigned char *)a1 + 2) != 1)
  {
    if ((a2[1] & 1) == 0)
    {
      int v5 = *a2;
      if (*a1 == 2)
      {
        if (v5 == 2) {
          return 1;
        }
      }
      else if (v5 != 2 {
             && ((v2 & 1) == 0) != (v3 & 1)
      }
             && ((((v2 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8)) & 1) != 0)
      {
        return 1;
      }
    }
    return 0;
  }
  if ((a2[1] & 1) == 0) {
    return 0;
  }
  switch(*a1)
  {
    case 2u:
      if (*a2 != 2) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 3u:
      if (*a2 != 3) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 4u:
      if (*a2 != 4) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 5u:
      if (*a2 != 5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 6u:
      if (*a2 != 6) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 7u:
      if (*a2 != 7) {
        return 0;
      }
      uint64_t result = 1;
      break;
    default:
      if ((v3 - 2) < 6u || ((((v2 & 1) == 0) ^ v3) & 1) == 0) {
        return 0;
      }
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v145 = (void *)a1;
  uint64_t v146 = (char *)a2;
  uint64_t v132 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  MEMORY[0x1F4188790](v132);
  uint64_t v133 = (uint64_t)&v132 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = type metadata accessor for REMNavigationSpecifier(0);
  uint64_t v3 = MEMORY[0x1F4188790](v144);
  uint64_t v143 = (uint64_t)&v132 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v142 = (uint64_t)&v132 - v6;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v141 = (uint64_t)&v132 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v140 = (uint64_t)&v132 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v139 = (uint64_t)&v132 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v138 = (uint64_t *)((char *)&v132 - v14);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v137 = (uint64_t)&v132 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v136 = (uint64_t)&v132 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v135 = (uint64_t)&v132 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v134 = (uint64_t)&v132 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v132 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  unint64_t v28 = (char *)&v132 - v27;
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  uint64_t v31 = (char *)&v132 - v30;
  uint64_t v32 = MEMORY[0x1F4188790](v29);
  uint64_t v34 = (char *)&v132 - v33;
  uint64_t v35 = MEMORY[0x1F4188790](v32);
  uint64_t v37 = (char *)&v132 - v36;
  uint64_t v38 = MEMORY[0x1F4188790](v35);
  uint64_t v40 = (char *)&v132 - v39;
  MEMORY[0x1F4188790](v38);
  uint64_t v42 = (void **)((char *)&v132 - v41);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2E90);
  uint64_t v44 = MEMORY[0x1F4188790](v43 - 8);
  uint64_t v46 = (char *)&v132 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = (uint64_t)&v46[*(int *)(v44 + 56)];
  sub_1A73F92C4((uint64_t)v145, (uint64_t)v46, type metadata accessor for REMNavigationSpecifier);
  uint64_t v145 = (void *)v47;
  sub_1A73F92C4((uint64_t)v146, v47, type metadata accessor for REMNavigationSpecifier);
  uint64_t v146 = v46;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v48 = (uint64_t)v146;
      sub_1A73F92C4((uint64_t)v146, (uint64_t)v40, type metadata accessor for REMNavigationSpecifier);
      uint64_t v54 = *(void **)v40;
      uint64_t v53 = (void *)*((void *)v40 + 1);
      char v55 = v40[16];
      uint64_t v56 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_8;
      }
      goto LABEL_5;
    case 2u:
      uint64_t v48 = (uint64_t)v146;
      sub_1A73F92C4((uint64_t)v146, (uint64_t)v37, type metadata accessor for REMNavigationSpecifier);
      uint64_t v54 = *(void **)v37;
      uint64_t v53 = (void *)*((void *)v37 + 1);
      char v55 = v37[16];
      uint64_t v56 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() != 2)
      {
LABEL_8:
        sub_1A73FBD88(v53, v55);

        goto LABEL_68;
      }
LABEL_5:
      uint64_t v58 = *(void **)v56;
      uint64_t v57 = *(void **)(v56 + 8);
      char v59 = *(unsigned char *)(v56 + 16);
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      char v60 = sub_1A7573190();

      if (v60)
      {
        unint64_t v150 = (unint64_t)v53;
        LOBYTE(v151) = v55;
        unint64_t v147 = (unint64_t)v57;
        LOBYTE(v148) = v59;
        char v52 = _s19ReminderKitInternal22REMNavigationSpecifierO08ListPathE0O2eeoiySbAE_AEtFZ_0((uint64_t)&v150, (uint64_t)&v147);
        sub_1A73FBD88(v57, v59);
        sub_1A73FBD88(v53, v55);
        goto LABEL_27;
      }
      sub_1A73FBD88(v57, v59);
      sub_1A73FBD88(v53, v55);
      goto LABEL_80;
    case 3u:
      uint64_t v48 = (uint64_t)v146;
      sub_1A73F92C4((uint64_t)v146, (uint64_t)v34, type metadata accessor for REMNavigationSpecifier);
      uint64_t v62 = *(void *)v34;
      uint64_t v61 = *((void *)v34 + 1);
      unsigned __int8 v63 = v34[16];
      uint64_t v64 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v65 = *(void *)v64;
        uint64_t v66 = *(void *)(v64 + 8);
        unsigned __int8 v67 = *(unsigned char *)(v64 + 16);
        unint64_t v150 = v62;
        uint64_t v151 = v61;
        unsigned __int8 v152 = v63;
        unint64_t v147 = v65;
        uint64_t v148 = v66;
        unsigned __int8 v149 = v67;
        char v52 = _s19ReminderKitInternal22REMNavigationSpecifierO011NewListPathE0O2eeoiySbAE_AEtFZ_0((uint64_t)&v150, (uint64_t)&v147);
        sub_1A738EF38(v65, v66, v67);
        sub_1A738EF38(v62, v61, v63);
        goto LABEL_27;
      }
      sub_1A738EF38(v62, v61, v63);
      goto LABEL_68;
    case 4u:
      uint64_t v48 = (uint64_t)v146;
      sub_1A73F92C4((uint64_t)v146, (uint64_t)v31, type metadata accessor for REMNavigationSpecifier);
      uint64_t v49 = *(void **)v31;
      __int16 v68 = *((_WORD *)v31 + 4);
      char v69 = v31[10];
      uint64_t v70 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_17;
      }
      char v71 = *(void **)v70;
      __int16 v72 = *(_WORD *)(v70 + 8);
      char v73 = *(unsigned char *)(v70 + 10);
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      char v74 = sub_1A7573190();

      if ((v74 & 1) == 0) {
        goto LABEL_80;
      }
      LOWORD(v150) = v68;
      BYTE2(v150) = v69;
      LOWORD(v147) = v72;
      BYTE2(v147) = v73;
      char v52 = _s19ReminderKitInternal22REMNavigationSpecifierO0a4PathE0O2eeoiySbAE_AEtFZ_0((__int16 *)&v150, (unsigned __int16 *)&v147);
      goto LABEL_27;
    case 5u:
      uint64_t v48 = (uint64_t)v146;
      sub_1A73F92C4((uint64_t)v146, (uint64_t)v28, type metadata accessor for REMNavigationSpecifier);
      uint64_t v49 = *(void **)v28;
      char v75 = v28[8];
      uint64_t v76 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_17;
      }
      uint64_t v77 = *(void **)v76;
      char v78 = *(unsigned char *)(v76 + 8);
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      char v79 = sub_1A7573190();

      if ((v79 & 1) == 0) {
        goto LABEL_80;
      }
      char v80 = v75 ^ v78;
      uint64_t v81 = v48;
      goto LABEL_21;
    case 6u:
      sub_1A73F92C4((uint64_t)v146, (uint64_t)v25, type metadata accessor for REMNavigationSpecifier);
      uint64_t v82 = *(void **)v25;
      char v83 = v25[8];
      uint64_t v84 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() != 6)
      {

        uint64_t v48 = (uint64_t)v146;
        goto LABEL_68;
      }
      uint64_t v85 = *(void **)v84;
      char v86 = *(unsigned char *)(v84 + 8);
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      char v87 = sub_1A7573190();

      if ((v87 & 1) == 0)
      {
        sub_1A73F932C((uint64_t)v146, type metadata accessor for REMNavigationSpecifier);
        goto LABEL_69;
      }
      char v80 = v83 ^ v86;
      uint64_t v81 = (uint64_t)v146;
LABEL_21:
      sub_1A73F932C(v81, type metadata accessor for REMNavigationSpecifier);
      char v52 = v80 ^ 1;
      return v52 & 1;
    case 7u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v48 = (uint64_t)v146;
      if (EnumCaseMultiPayload != 7) {
        goto LABEL_68;
      }
      goto LABEL_60;
    case 8u:
      uint64_t v48 = (uint64_t)v146;
      uint64_t v89 = v134;
      sub_1A73F92C4((uint64_t)v146, v134, type metadata accessor for REMNavigationSpecifier);
      uint64_t v90 = *(void **)v89;
      char v91 = *(unsigned char *)(v89 + 8);
      uint64_t v92 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() == 8) {
        goto LABEL_25;
      }
      goto LABEL_29;
    case 9u:
      uint64_t v48 = (uint64_t)v146;
      uint64_t v96 = v135;
      sub_1A73F92C4((uint64_t)v146, v135, type metadata accessor for REMNavigationSpecifier);
      uint64_t v90 = *(void **)v96;
      char v91 = *(unsigned char *)(v96 + 8);
      uint64_t v92 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() != 9) {
        goto LABEL_29;
      }
      goto LABEL_25;
    case 0xAu:
      uint64_t v48 = (uint64_t)v146;
      uint64_t v98 = v136;
      sub_1A73F92C4((uint64_t)v146, v136, type metadata accessor for REMNavigationSpecifier);
      id v99 = *(void **)v98;
      char v91 = *(unsigned char *)(v98 + 8);
      uint64_t v100 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() == 10)
      {
        char v101 = *(void **)v100;
        char v102 = *(unsigned char *)(v100 + 8);
        unint64_t v150 = (unint64_t)v99;
        LOBYTE(v151) = v91;
        unint64_t v147 = (unint64_t)v101;
        LOBYTE(v148) = v102;
        char v52 = _s19ReminderKitInternal22REMNavigationSpecifierO013SmartListPathE0O2eeoiySbAE_AEtFZ_0((uint64_t)&v150, (uint64_t)&v147);
        sub_1A73FBD4C(v101, v102);
        uint64_t v95 = v99;
        goto LABEL_26;
      }
      uint64_t v97 = v99;
      goto LABEL_30;
    case 0xBu:
      uint64_t v48 = (uint64_t)v146;
      uint64_t v103 = v137;
      sub_1A73F92C4((uint64_t)v146, v137, type metadata accessor for REMNavigationSpecifier);
      uint64_t v90 = *(void **)v103;
      char v91 = *(unsigned char *)(v103 + 8);
      uint64_t v92 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() != 11) {
        goto LABEL_29;
      }
      goto LABEL_25;
    case 0xCu:
      uint64_t v48 = (uint64_t)v146;
      int v104 = v138;
      sub_1A73F92C4((uint64_t)v146, (uint64_t)v138, type metadata accessor for REMNavigationSpecifier);
      uint64_t v106 = *v104;
      uint64_t v105 = v104[1];
      char v107 = v145;
      if (swift_getEnumCaseMultiPayload() != 12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_68;
      }
      uint64_t v108 = v107[1];
      if (!v105)
      {
        swift_bridgeObjectRelease();
        if (!v108)
        {
          swift_bridgeObjectRelease();
          goto LABEL_60;
        }
        goto LABEL_75;
      }
      if (!v108)
      {
        swift_bridgeObjectRelease();
LABEL_75:
        swift_bridgeObjectRelease();
        goto LABEL_80;
      }
      if (v106 == *v107 && v105 == v108)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_60;
      }
      char v131 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v131 & 1) == 0) {
        goto LABEL_80;
      }
LABEL_60:
      sub_1A73F932C(v48, type metadata accessor for REMNavigationSpecifier);
      char v52 = 1;
      return v52 & 1;
    case 0xDu:
      uint64_t v48 = (uint64_t)v146;
      uint64_t v109 = v139;
      sub_1A73F92C4((uint64_t)v146, v139, type metadata accessor for REMNavigationSpecifier);
      uint64_t v90 = *(void **)v109;
      char v91 = *(unsigned char *)(v109 + 8);
      uint64_t v92 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() != 13) {
        goto LABEL_29;
      }
      goto LABEL_25;
    case 0xEu:
      uint64_t v48 = (uint64_t)v146;
      uint64_t v110 = v140;
      sub_1A73F92C4((uint64_t)v146, v140, type metadata accessor for REMNavigationSpecifier);
      uint64_t v90 = *(void **)v110;
      char v91 = *(unsigned char *)(v110 + 8);
      uint64_t v92 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() != 14) {
        goto LABEL_29;
      }
      goto LABEL_25;
    case 0xFu:
      uint64_t v48 = (uint64_t)v146;
      uint64_t v111 = v141;
      sub_1A73F92C4((uint64_t)v146, v141, type metadata accessor for REMNavigationSpecifier);
      unint64_t v113 = *(void *)v111;
      uint64_t v112 = *(void *)(v111 + 8);
      unsigned __int8 v114 = *(unsigned char *)(v111 + 16);
      uint64_t v115 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() == 15)
      {
        unint64_t v116 = *(void *)v115;
        uint64_t v117 = *(void *)(v115 + 8);
        unsigned __int8 v118 = *(unsigned char *)(v115 + 16);
        unint64_t v150 = v113;
        uint64_t v151 = v112;
        unsigned __int8 v152 = v114;
        unint64_t v147 = v116;
        uint64_t v148 = v117;
        unsigned __int8 v149 = v118;
        char v52 = _s19ReminderKitInternal22REMNavigationSpecifierO010TaggedPathE0O2eeoiySbAE_AEtFZ_0((uint64_t)&v150, (uint64_t)&v147);
        sub_1A73FBD3C(v116);
        sub_1A73FBD3C(v113);
        goto LABEL_27;
      }
      sub_1A73FBD3C(v113);
      goto LABEL_68;
    case 0x10u:
      uint64_t v48 = (uint64_t)v146;
      uint64_t v119 = v142;
      sub_1A73F92C4((uint64_t)v146, v142, type metadata accessor for REMNavigationSpecifier);
      uint64_t v90 = *(void **)v119;
      char v91 = *(unsigned char *)(v119 + 8);
      uint64_t v92 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() == 16)
      {
LABEL_25:
        uint64_t v93 = *(void **)v92;
        char v94 = *(unsigned char *)(v92 + 8);
        unint64_t v150 = (unint64_t)v90;
        LOBYTE(v151) = v91;
        unint64_t v147 = (unint64_t)v93;
        LOBYTE(v148) = v94;
        char v52 = _s19ReminderKitInternal22REMNavigationSpecifierO013SmartListPathE0O2eeoiySbAE_AEtFZ_0((uint64_t)&v150, (uint64_t)&v147);
        sub_1A73FBD4C(v93, v94);
        uint64_t v95 = v90;
LABEL_26:
        sub_1A73FBD4C(v95, v91);
        goto LABEL_27;
      }
LABEL_29:
      uint64_t v97 = v90;
LABEL_30:
      sub_1A73FBD4C(v97, v91);
      goto LABEL_68;
    case 0x11u:
      uint64_t v48 = (uint64_t)v146;
      uint64_t v120 = v143;
      sub_1A73F92C4((uint64_t)v146, v143, type metadata accessor for REMNavigationSpecifier);
      uint64_t v121 = (uint64_t)v145;
      if (swift_getEnumCaseMultiPayload() != 17)
      {
        sub_1A73F932C(v120, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
LABEL_68:
        sub_1A72CB560(v48, &qword_1E96F2E90);
        goto LABEL_69;
      }
      uint64_t v122 = v133;
      sub_1A73F923C(v121, v133, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
      if ((sub_1A7571BA0() & 1) == 0) {
        goto LABEL_79;
      }
      uint64_t v123 = *(int *)(v132 + 20);
      uint64_t v124 = (void *)(v120 + v123);
      uint64_t v125 = *(void *)(v120 + v123 + 8);
      unint64_t v126 = (void *)(v122 + v123);
      uint64_t v127 = v126[1];
      if (v125)
      {
        if (v127 && (*v124 == *v126 && v125 == v127 || (sub_1A7573DB0() & 1) != 0)) {
          goto LABEL_56;
        }
      }
      else if (!v127)
      {
LABEL_56:
        sub_1A73F932C(v122, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
        sub_1A73F932C(v120, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
        goto LABEL_60;
      }
LABEL_79:
      sub_1A73F932C(v122, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
      sub_1A73F932C(v120, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
LABEL_80:
      sub_1A73F932C(v48, type metadata accessor for REMNavigationSpecifier);
LABEL_69:
      char v52 = 0;
      return v52 & 1;
    case 0x12u:
      int v128 = swift_getEnumCaseMultiPayload();
      uint64_t v48 = (uint64_t)v146;
      if (v128 != 18) {
        goto LABEL_68;
      }
      goto LABEL_60;
    case 0x13u:
      int v129 = swift_getEnumCaseMultiPayload();
      uint64_t v48 = (uint64_t)v146;
      if (v129 == 19) {
        goto LABEL_60;
      }
      goto LABEL_68;
    default:
      uint64_t v48 = (uint64_t)v146;
      sub_1A73F92C4((uint64_t)v146, (uint64_t)v42, type metadata accessor for REMNavigationSpecifier);
      uint64_t v49 = *v42;
      uint64_t v50 = (void **)v145;
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_17:

        goto LABEL_68;
      }
      uint64_t v51 = *v50;
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      char v52 = sub_1A7573190();

LABEL_27:
      sub_1A73F932C(v48, type metadata accessor for REMNavigationSpecifier);
      return v52 & 1;
  }
}

uint64_t sub_1A73FB128(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2F80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for QueryItems();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  v9[1] = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2F88);
  sub_1A72AE788(&qword_1E96F2F90, &qword_1E96F2F88);
  sub_1A7573A90();
  uint64_t v7 = sub_1A7573A00();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1A73FB2C4(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for QueryItems();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  v14[1] = v11;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_1A72AE788(a4, a3);
  sub_1A7573A90();
  uint64_t v12 = sub_1A75739B0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

void *sub_1A73FB464(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2F68);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73FF030();
  sub_1A7574190();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2EC8);
    sub_1A73FF27C(&qword_1E96F2F70, &qword_1E96F2E60);
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_1A73FB614(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2F78);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73FF084();
  sub_1A7574190();
  if (v1) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v10[15] = 0;
  char v7 = sub_1A7573A10();
  v10[14] = 1;
  int v8 = sub_1A75739C0();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7 & 1 | (v8 << 8);
}

uint64_t sub_1A73FB7B8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F2FB0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1A73FF12C();
  sub_1A7574190();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11[31] = 0;
    unsigned __int8 v8 = sub_1A75739C0();
    v11[30] = 1;
    int v10 = sub_1A75739C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    v11[15] = 2;
    sub_1A72A817C(&qword_1EB700070);
    sub_1A75739F0();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v8 | (v10 << 8);
  }
  return v7;
}

uint64_t sub_1A73FB9CC()
{
  unint64_t v0 = sub_1A7573F90();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14) {
    return 20;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A73FBA20()
{
  unint64_t v0 = sub_1A7573F90();
  swift_bridgeObjectRelease();
  if (v0 >= 0x12) {
    return 18;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A73FBA74(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReminderUUID(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    uint64_t v6 = sub_1A75738D0();
  }
  else {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v6) {
    return v7;
  }
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1A72D2EE0(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    uint64_t v7 = v16;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1AD0CB800](v9, a1);
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      id v12 = objc_msgSend(v10, sel_uuid);
      sub_1A7571BB0();

      uint64_t v16 = v7;
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v13 = *(void *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1A72D2EE0(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v16;
      }
      ++v9;
      *(void *)(v7 + 16) = v14 + 1;
      sub_1A73F923C((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v14, type metadata accessor for ReminderUUID);
    }
    while (v6 != v9);
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A73FBC58(unint64_t *a1)
{
  unint64_t v1 = *a1;
  if (*a1)
  {
    if (v1 == 1)
    {
      int v2 = 1;
      int v3 = 2;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = swift_bridgeObjectRetain();
      sub_1A7399AAC(v4, v1);
      uint64_t v5 = swift_bridgeObjectRetain();
      uint64_t v6 = sub_1A72D1F58(v5);
      swift_bridgeObjectRelease();
      unsigned __int8 v8 = v6;
      sub_1A735F1F8((uint64_t *)&v8);
      sub_1A7360E88(v1);
      swift_bridgeObjectRelease();
      int v3 = 2;
      int v2 = 2;
    }
  }
  else
  {
    int v2 = 2;
    int v3 = 1;
  }
  return v3 | (v2 << 8);
}

unint64_t sub_1A73FBD3C(unint64_t result)
{
  if (result != 2) {
    return sub_1A7360E88(result);
  }
  return result;
}

void sub_1A73FBD4C(id a1, char a2)
{
  if (a2 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a2)
  {
  }
}

id sub_1A73FBD68(id result, char a2)
{
  if (a2 == 2) {
    return (id)swift_bridgeObjectRetain();
  }
  if (a2 == 1) {
    return result;
  }
  return result;
}

void sub_1A73FBD88(id a1, char a2)
{
  if (a2 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (a2 == 1)
  {
  }
}

unint64_t sub_1A73FBDAC()
{
  unint64_t result = qword_1E96F2E18;
  if (!qword_1E96F2E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2E18);
  }
  return result;
}

unint64_t sub_1A73FBE04()
{
  unint64_t result = qword_1E96F2E20;
  if (!qword_1E96F2E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2E20);
  }
  return result;
}

unint64_t sub_1A73FBE5C()
{
  unint64_t result = qword_1E96F2E28;
  if (!qword_1E96F2E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2E28);
  }
  return result;
}

unint64_t sub_1A73FBEB4()
{
  unint64_t result = qword_1E96F2E30;
  if (!qword_1E96F2E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2E30);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMNavigationSpecifier(uint64_t *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(char **)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)&v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *(void **)a2;
        *a1 = *(void *)a2;
        id v8 = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
        uint64_t v11 = *(void **)a2;
        id v12 = (void *)*((void *)a2 + 1);
        *a1 = *(void *)a2;
        char v13 = a2[16];
        id v14 = v11;
        sub_1A73FBD68(v12, v13);
        a1[1] = (uint64_t)v12;
        *((unsigned char *)a1 + 16) = v13;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v15 = *(void *)a2;
        uint64_t v16 = *((void *)a2 + 1);
        unsigned __int8 v17 = a2[16];
        sub_1A738EF10(v15, v16, v17);
        *a1 = v15;
        a1[1] = v16;
        *((unsigned char *)a1 + 16) = v17;
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v18 = *(void **)a2;
        *a1 = *(void *)a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        *((unsigned char *)a1 + 10) = a2[10];
        id v19 = v18;
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
      case 6u:
        uint64_t v20 = *(void **)a2;
        *a1 = *(void *)a2;
        *((unsigned char *)a1 + 8) = a2[8];
        id v21 = v20;
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xDu:
      case 0xEu:
      case 0x10u:
        uint64_t v23 = *(void **)a2;
        char v24 = a2[8];
        sub_1A73FC3A0(v23, v24);
        *a1 = (uint64_t)v23;
        *((unsigned char *)a1 + 8) = v24;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        uint64_t v22 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v22;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        if (*(void *)a2 <= 2uLL)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((unsigned char *)a1 + 16) = a2[16];
        }
        else
        {
          uint64_t v30 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v30;
          *((unsigned char *)a1 + 16) = a2[16];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 0x11u:
        uint64_t v25 = sub_1A7571BC0();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        uint64_t v26 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
        uint64_t v27 = (uint64_t *)((char *)a1 + v26);
        unint64_t v28 = &a2[v26];
        uint64_t v29 = *((void *)v28 + 1);
        *uint64_t v27 = *(void *)v28;
        v27[1] = v29;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

id sub_1A73FC3A0(id result, char a2)
{
  if (a2 == 1) {
    return (id)swift_bridgeObjectRetain();
  }
  if (!a2) {
    return result;
  }
  return result;
}

void destroy for REMNavigationSpecifier(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
    case 5u:
    case 6u:
      id v4 = *(id *)a1;

      return;
    case 1u:
    case 2u:

      int v5 = *(void **)(a1 + 8);
      char v6 = *(unsigned char *)(a1 + 16);
      sub_1A73FBD88(v5, v6);
      return;
    case 3u:
      id v7 = *(id *)a1;
      uint64_t v8 = *(void *)(a1 + 8);
      unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
      sub_1A738EF38((uint64_t)v7, v8, v9);
      return;
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xDu:
    case 0xEu:
    case 0x10u:
      id v2 = *(id *)a1;
      char v3 = *(unsigned char *)(a1 + 8);
      sub_1A73FBD4C(v2, v3);
      return;
    case 0xCu:
      goto LABEL_18;
    case 0xFu:
      if (*(void *)a1 < 3uLL) {
        return;
      }
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      return;
    case 0x11u:
      uint64_t v10 = sub_1A7571BC0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
      type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
      goto LABEL_18;
    default:
      return;
  }
}

uint64_t *initializeWithCopy for REMNavigationSpecifier(uint64_t *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      char v6 = *(void **)a2;
      *a1 = *(void *)a2;
      id v7 = v6;
      goto LABEL_14;
    case 1u:
    case 2u:
      uint64_t v8 = *(void **)a2;
      unsigned __int8 v9 = (void *)*((void *)a2 + 1);
      *a1 = *(void *)a2;
      char v10 = a2[16];
      id v11 = v8;
      sub_1A73FBD68(v9, v10);
      a1[1] = (uint64_t)v9;
      *((unsigned char *)a1 + 16) = v10;
      goto LABEL_14;
    case 3u:
      uint64_t v12 = *(void *)a2;
      uint64_t v13 = *((void *)a2 + 1);
      unsigned __int8 v14 = a2[16];
      sub_1A738EF10(v12, v13, v14);
      *a1 = v12;
      a1[1] = v13;
      *((unsigned char *)a1 + 16) = v14;
      goto LABEL_14;
    case 4u:
      uint64_t v15 = *(void **)a2;
      *a1 = *(void *)a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      *((unsigned char *)a1 + 10) = a2[10];
      id v16 = v15;
      goto LABEL_14;
    case 5u:
    case 6u:
      unsigned __int8 v17 = *(void **)a2;
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + 8) = a2[8];
      id v18 = v17;
      goto LABEL_14;
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xDu:
    case 0xEu:
    case 0x10u:
      uint64_t v20 = *(void **)a2;
      char v21 = a2[8];
      sub_1A73FC3A0(v20, v21);
      *a1 = (uint64_t)v20;
      *((unsigned char *)a1 + 8) = v21;
      goto LABEL_14;
    case 0xCu:
      uint64_t v19 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v19;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 0xFu:
      if (*(void *)a2 <= 2uLL)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((unsigned char *)a1 + 16) = a2[16];
      }
      else
      {
        uint64_t v27 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v27;
        *((unsigned char *)a1 + 16) = a2[16];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      goto LABEL_14;
    case 0x11u:
      uint64_t v22 = sub_1A7571BC0();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
      uint64_t v23 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
      char v24 = (uint64_t *)((char *)a1 + v23);
      uint64_t v25 = &a2[v23];
      uint64_t v26 = *((void *)v25 + 1);
      *char v24 = *(void *)v25;
      v24[1] = v26;
      swift_bridgeObjectRetain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for REMNavigationSpecifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A73F932C((uint64_t)a1, type metadata accessor for REMNavigationSpecifier);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        char v6 = (void *)*a2;
        *a1 = *a2;
        id v7 = v6;
        goto LABEL_15;
      case 1u:
      case 2u:
        uint64_t v8 = (void *)*a2;
        *a1 = *a2;
        unsigned __int8 v9 = (void *)a2[1];
        char v10 = *((unsigned char *)a2 + 16);
        id v11 = v8;
        sub_1A73FBD68(v9, v10);
        a1[1] = (uint64_t)v9;
        *((unsigned char *)a1 + 16) = v10;
        goto LABEL_15;
      case 3u:
        uint64_t v12 = *a2;
        uint64_t v13 = a2[1];
        unsigned __int8 v14 = *((unsigned char *)a2 + 16);
        sub_1A738EF10(v12, v13, v14);
        *a1 = v12;
        a1[1] = v13;
        *((unsigned char *)a1 + 16) = v14;
        goto LABEL_15;
      case 4u:
        uint64_t v15 = (void *)*a2;
        *a1 = *a2;
        __int16 v16 = *((_WORD *)a2 + 4);
        *((unsigned char *)a1 + 10) = *((unsigned char *)a2 + 10);
        *((_WORD *)a1 + 4) = v16;
        id v17 = v15;
        goto LABEL_15;
      case 5u:
      case 6u:
        id v18 = (void *)*a2;
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        id v19 = v18;
        goto LABEL_15;
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xDu:
      case 0xEu:
      case 0x10u:
        uint64_t v20 = (void *)*a2;
        char v21 = *((unsigned char *)a2 + 8);
        sub_1A73FC3A0(v20, v21);
        *a1 = (uint64_t)v20;
        *((unsigned char *)a1 + 8) = v21;
        goto LABEL_15;
      case 0xCu:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 0xFu:
        if ((unint64_t)*a2 <= 2)
        {
          long long v22 = *(_OWORD *)a2;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          *(_OWORD *)a1 = v22;
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        goto LABEL_15;
      case 0x11u:
        uint64_t v23 = sub_1A7571BC0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        uint64_t v24 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
        uint64_t v25 = (uint64_t *)((char *)a1 + v24);
        uint64_t v26 = (char *)a2 + v24;
        *uint64_t v25 = *(void *)v26;
        v25[1] = *((void *)v26 + 1);
        swift_bridgeObjectRetain();
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for REMNavigationSpecifier(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 17)
  {
    uint64_t v6 = sub_1A7571BC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
    *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for REMNavigationSpecifier(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A73F932C((uint64_t)a1, type metadata accessor for REMNavigationSpecifier);
    if (swift_getEnumCaseMultiPayload() == 17)
    {
      uint64_t v6 = sub_1A7571BC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
      *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A73FCF8C()
{
  uint64_t result = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.AccountPathSpecifier;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.NewListPathSpecifier;
}

uint64_t initializeBufferWithCopyOfBuffer for REMNavigationSpecifier.ListPathSpecifier(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1A73FBD68(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for REMNavigationSpecifier.ListPathSpecifier(uint64_t a1)
{
}

uint64_t *assignWithCopy for REMNavigationSpecifier.ListPathSpecifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A73FD8C0(a1, a2, a3, (void (*)(void, void))sub_1A73FBD68, (void (*)(uint64_t, uint64_t))sub_1A73FBD88);
}

uint64_t assignWithTake for REMNavigationSpecifier.ListPathSpecifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1A73FBD88(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMNavigationSpecifier.ListPathSpecifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMNavigationSpecifier.ListPathSpecifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A73FD1F8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1A73FD210(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.ListPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.ListPathSpecifier;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection()
{
  return &type metadata for REMNavigationSpecifier.ListPathSpecifier.DetailSection;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for REMNavigationSpecifier.ReminderPathSpecifier(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *((unsigned __int8 *)a1 + 2);
  if (v4 <= 1) {
    int v5 = -1;
  }
  else {
    int v5 = v4 ^ 0xFF;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for REMNavigationSpecifier.ReminderPathSpecifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)(result + 2) = -(char)a2;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t sub_1A73FD360(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 2);
}

uint64_t sub_1A73FD368(uint64_t result, char a2)
{
  *(unsigned char *)(result + 2) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.ReminderPathSpecifier;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 65282;
    if (a2 + 65282 <= 0xFFFEFFFF) {
      unsigned int v3 = 2;
    }
    else {
      unsigned int v3 = 4;
    }
    if (v2 < 0xFF0000) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x10000) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = *((unsigned __int8 *)a1 + 2);
        if (!*((unsigned char *)a1 + 2)) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65282;
      case 2:
        int v5 = a1[1];
        if (a1[1]) {
          return (*a1 | (v5 << 16)) - 65282;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A73FD450);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65282;
      default:
        break;
    }
  }
  unsigned int v7 = *(unsigned __int8 *)a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 65282;
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 254;
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = v7;
        break;
      case 2:
        *(_WORD *)(result + 2) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1A73FD538);
      case 4:
        *(_DWORD *)(result + 2) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *(unsigned char *)uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1A73FD560(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

_WORD *sub_1A73FD57C(_WORD *result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *uint64_t result = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier;
}

uint64_t getEnumTagSinglePayload for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9)
  {
    unsigned int v2 = a2 + 7;
    if (a2 + 7 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 7;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A73FD660);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 5;
  if (v8 <= 5) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 7;
  if (a3 + 7 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF9) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v7 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1A73FD748);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

unsigned char *sub_1A73FD770(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection()
{
  return &type metadata for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.SectionPathSpecifier;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.RootPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.RootPathSpecifier;
}

uint64_t initializeBufferWithCopyOfBuffer for REMNavigationSpecifier.SmartListPathSpecifier(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1A73FC3A0(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for REMNavigationSpecifier.SmartListPathSpecifier(uint64_t a1)
{
}

uint64_t *assignWithCopy for REMNavigationSpecifier.SmartListPathSpecifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A73FD8C0(a1, a2, a3, (void (*)(void, void))sub_1A73FC3A0, (void (*)(uint64_t, uint64_t))sub_1A73FBD4C);
}

uint64_t assignWithTake for REMNavigationSpecifier.SmartListPathSpecifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1A73FBD4C(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.SmartListPathSpecifier;
}

uint64_t *assignWithCopy for REMNavigationSpecifier.CommonListPathSpecifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A73FD8C0(a1, a2, a3, (void (*)(void, void))sub_1A740064C, (void (*)(uint64_t, uint64_t))sub_1A7400650);
}

uint64_t *sub_1A73FD8C0(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, void), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  unsigned __int8 v8 = *((unsigned char *)a2 + 8);
  a4(*a2, v8);
  uint64_t v9 = *a1;
  *a1 = v7;
  uint64_t v10 = *((unsigned __int8 *)a1 + 8);
  *((unsigned char *)a1 + 8) = v8;
  a5(v9, v10);
  return a1;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.CommonListPathSpecifier;
}

uint64_t getEnumTagSinglePayload for REMNavigationSpecifier.SearchPathSpecifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for REMNavigationSpecifier.SearchPathSpecifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1A73FD9D8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1A73FD9F0(void *result, int a2)
{
  if (a2 < 0)
  {
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.SearchPathSpecifier;
}

uint64_t sub_1A73FDA24(uint64_t a1, unint64_t *a2)
{
  LODWORD(v3) = -1;
  if (*a2 < 0xFFFFFFFF) {
    unint64_t v3 = *a2;
  }
  if ((v3 + 1) <= 2 && v3 == -1)
  {
    uint64_t v4 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  }
  return a1;
}

unint64_t *assignWithCopy for REMNavigationSpecifier.TaggedPathSpecifier(unint64_t *a1, unint64_t *a2)
{
  if (*a1 >= 0xFFFFFFFF) {
    LODWORD(v4) = -1;
  }
  else {
    unint64_t v4 = *a1;
  }
  unsigned int v5 = v4 + 1;
  unint64_t v6 = *a2;
  if (*a2 >= 0xFFFFFFFF) {
    LODWORD(v7) = -1;
  }
  else {
    unint64_t v7 = *a2;
  }
  unsigned int v8 = v7 + 1;
  if (v5 > 2)
  {
    if (v8 <= 2 && v7 == -1) {
      goto LABEL_14;
    }
LABEL_19:
    long long v9 = *(_OWORD *)a2;
    *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = v9;
    return a1;
  }
  if (v8 > 2)
  {
    if (v5) {
      goto LABEL_19;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (!v5)
  {
    if (v7 == -1)
    {
      *a1 = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      return a1;
    }
    goto LABEL_18;
  }
  if (v7 != -1) {
    goto LABEL_19;
  }
LABEL_14:
  *a1 = v6;
  a1[1] = a2[1];
  *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for REMNavigationSpecifier.TaggedPathSpecifier(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = *(void *)a1;
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF) {
    int v6 = -1;
  }
  else {
    int v6 = v4;
  }
  if (*a2 < 0xFFFFFFFF) {
    unint64_t v5 = *a2;
  }
  if ((v6 + 1) > 2) {
    goto LABEL_13;
  }
  unsigned int v7 = v5 + 1;
  if (v7 > 2)
  {
    if (v6 == -1) {
      goto LABEL_12;
    }
LABEL_13:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_14;
  }
  if (v6 != -1) {
    goto LABEL_13;
  }
  if (v7)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRelease();
LABEL_14:
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMNavigationSpecifier.TaggedPathSpecifier(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 17)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 < 3) {
    unsigned int v5 = 0;
  }
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for REMNavigationSpecifier.TaggedPathSpecifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_1A73FDCFC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  unsigned int v2 = v1 + 1;
  unsigned int v3 = v1 - 1;
  if (v2 >= 3) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A73FDD20(uint64_t result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
  }
  else if (a2)
  {
    *(void *)uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.TaggedPathSpecifier;
}

uint64_t getEnumTagSinglePayload for ParsedPathComponent(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ParsedPathComponent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *uint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73FDEC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParsedPathComponent()
{
  return &type metadata for ParsedPathComponent;
}

uint64_t sub_1A73FDF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A73FDF2C);
}

uint64_t sub_1A73FDF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_1(a1, a2, a3, type metadata accessor for ReminderUUID);
}

uint64_t type metadata accessor for ReminderUUID(uint64_t a1)
{
  return sub_1A72E1CD8(a1, qword_1EB701418);
}

uint64_t sub_1A73FDF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A73FDF78);
}

uint64_t sub_1A73FDF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_1(a1, a2, a3, a4, type metadata accessor for ReminderUUID);
}

uint64_t sub_1A73FDF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571BC0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1A73FE000(uint64_t a1)
{
  uint64_t v2 = sub_1A7571BC0();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1A73FE064(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A73FE0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A73FE12C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A73FE190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A73FE1F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A73FE208);
}

uint64_t sub_1A73FE208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_1(a1, a2, a3, MEMORY[0x1E4F27990]);
}

uint64_t __swift_get_extra_inhabitant_indexTm_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  BOOL v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t sub_1A73FE290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A73FE2A4);
}

uint64_t sub_1A73FE2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_1(a1, a2, a3, a4, MEMORY[0x1E4F27990]);
}

uint64_t __swift_store_extra_inhabitant_indexTm_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = a5(0);
  int v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, a2, a2, v7);
}

uint64_t sub_1A73FE330()
{
  uint64_t result = sub_1A7571BC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A73FE3BC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = a3[6];
    int v8 = (char *)a1 + v7;
    long long v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1A7571BC0();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    id v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + v15) = (uint64_t)v17;
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    id v18 = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1A73FE568(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1A7571BC0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A73FE644(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  int v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1A7571BC0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = *(void **)(a2 + v13);
  *(void *)(a1 + v13) = v15;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  id v16 = v15;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A73FE7A0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  int v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1A7571BC0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  id v16 = *(void **)(a1 + v15);
  id v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  id v18 = v17;

  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A73FE974(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  int v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1A7571BC0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t sub_1A73FEAB4(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  int v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1A7571BC0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  id v16 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);

  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A73FEC74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A73FEC88);
}

uint64_t sub_1A73FEC88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A73FED3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A73FED50);
}

uint64_t sub_1A73FED50(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A73FEDFC()
{
  sub_1A7345B88();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1A73FEEAC()
{
  return sub_1A72AE788(&qword_1E96F2E38, &qword_1E96F2E40);
}

unint64_t sub_1A73FEEEC()
{
  unint64_t result = qword_1E96F2E48;
  if (!qword_1E96F2E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2E48);
  }
  return result;
}

unint64_t sub_1A73FEF40()
{
  unint64_t result = qword_1E96F2E58;
  if (!qword_1E96F2E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2E58);
  }
  return result;
}

uint64_t sub_1A73FEF94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A73FEFDC()
{
  unint64_t result = qword_1E96F2E80;
  if (!qword_1E96F2E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2E80);
  }
  return result;
}

unint64_t sub_1A73FF030()
{
  unint64_t result = qword_1E96F2ED8;
  if (!qword_1E96F2ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2ED8);
  }
  return result;
}

unint64_t sub_1A73FF084()
{
  unint64_t result = qword_1E96F2EE8;
  if (!qword_1E96F2EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2EE8);
  }
  return result;
}

unint64_t sub_1A73FF0D8()
{
  unint64_t result = qword_1E96F2F08;
  if (!qword_1E96F2F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2F08);
  }
  return result;
}

unint64_t sub_1A73FF12C()
{
  unint64_t result = qword_1E96F2F18;
  if (!qword_1E96F2F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2F18);
  }
  return result;
}

unint64_t sub_1A73FF180()
{
  unint64_t result = qword_1E96F2F38;
  if (!qword_1E96F2F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2F38);
  }
  return result;
}

unint64_t sub_1A73FF1D4()
{
  unint64_t result = qword_1E96F2F40;
  if (!qword_1E96F2F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2F40);
  }
  return result;
}

unint64_t sub_1A73FF228()
{
  unint64_t result = qword_1E96F2F60;
  if (!qword_1E96F2F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2F60);
  }
  return result;
}

uint64_t sub_1A73FF27C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F2EC8);
    sub_1A73FEF94(a2, (void (*)(uint64_t))type metadata accessor for ReminderUUID);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A73FF310(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

ValueMetadata *type metadata accessor for NewListQuery()
{
  return &type metadata for NewListQuery;
}

ValueMetadata *type metadata accessor for NewListQuery.CodingKeys()
{
  return &type metadata for NewListQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for EmptyQuery()
{
  return &type metadata for EmptyQuery;
}

ValueMetadata *type metadata accessor for EmptyQuery.CodingKeys()
{
  return &type metadata for EmptyQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for PublicTemplateQuery()
{
  return &type metadata for PublicTemplateQuery;
}

ValueMetadata *type metadata accessor for PublicTemplateQuery.CodingKeys()
{
  return &type metadata for PublicTemplateQuery.CodingKeys;
}

uint64_t sub_1A73FF390(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HashtagSpecifierQuery(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HashtagSpecifierQuery(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMReminderDetailDataView.CheckUpdateResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMReminderDetailDataView.CheckUpdateResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HashtagSpecifierQuery()
{
  return &type metadata for HashtagSpecifierQuery;
}

unsigned char *storeEnumTagSinglePayload for HashtagSpecifierQuery.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73FF5D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HashtagSpecifierQuery.CodingKeys()
{
  return &type metadata for HashtagSpecifierQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchQuery()
{
  return &type metadata for SearchQuery;
}

ValueMetadata *type metadata accessor for SearchQuery.CodingKeys()
{
  return &type metadata for SearchQuery.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SubtaskQuery(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SubtaskQuery(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73FF7A0);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubtaskQuery()
{
  return &type metadata for SubtaskQuery;
}

unsigned char *_s19ReminderKitInternal22REMNavigationSpecifierO17ListPathSpecifierO13DetailSectionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73FF8A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubtaskQuery.CodingKeys()
{
  return &type metadata for SubtaskQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for ReminderIDsQuery()
{
  return &type metadata for ReminderIDsQuery;
}

ValueMetadata *type metadata accessor for ReminderIDsQuery.CodingKeys()
{
  return &type metadata for ReminderIDsQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for ReminderUUID.CodingKeys()
{
  return &type metadata for ReminderUUID.CodingKeys;
}

unsigned char *_s19ReminderKitInternal22REMNavigationSpecifierO20AccountPathSpecifierOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A73FF9A8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReminderIDQuery.CodingKeys()
{
  return &type metadata for ReminderIDQuery.CodingKeys;
}

uint64_t getEnumTagSinglePayload for REMAccountSnapshotSummary.SummaryKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Host(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *uint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A73FFB3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Host()
{
  return &type metadata for Host;
}

uint64_t sub_1A73FFB74()
{
  return sub_1A72AE788(&qword_1E96F2FD0, &qword_1E96F2FD8);
}

unint64_t sub_1A73FFBB4()
{
  unint64_t result = qword_1E96F2FE0;
  if (!qword_1E96F2FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2FE0);
  }
  return result;
}

unint64_t sub_1A73FFC0C()
{
  unint64_t result = qword_1E96F2FE8;
  if (!qword_1E96F2FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2FE8);
  }
  return result;
}

unint64_t sub_1A73FFC64()
{
  unint64_t result = qword_1E96F2FF0;
  if (!qword_1E96F2FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2FF0);
  }
  return result;
}

unint64_t sub_1A73FFCBC()
{
  unint64_t result = qword_1E96F2FF8;
  if (!qword_1E96F2FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2FF8);
  }
  return result;
}

unint64_t sub_1A73FFD14()
{
  unint64_t result = qword_1E96F3000;
  if (!qword_1E96F3000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3000);
  }
  return result;
}

unint64_t sub_1A73FFD6C()
{
  unint64_t result = qword_1E96F3008;
  if (!qword_1E96F3008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3008);
  }
  return result;
}

unint64_t sub_1A73FFDC4()
{
  unint64_t result = qword_1E96F3010;
  if (!qword_1E96F3010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3010);
  }
  return result;
}

unint64_t sub_1A73FFE1C()
{
  unint64_t result = qword_1E96F3018;
  if (!qword_1E96F3018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3018);
  }
  return result;
}

unint64_t sub_1A73FFE74()
{
  unint64_t result = qword_1E96F3020;
  if (!qword_1E96F3020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3020);
  }
  return result;
}

unint64_t sub_1A73FFECC()
{
  unint64_t result = qword_1E96F3028;
  if (!qword_1E96F3028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3028);
  }
  return result;
}

unint64_t sub_1A73FFF24()
{
  unint64_t result = qword_1E96F3030;
  if (!qword_1E96F3030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3030);
  }
  return result;
}

unint64_t sub_1A73FFF7C()
{
  unint64_t result = qword_1EB701628;
  if (!qword_1EB701628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701628);
  }
  return result;
}

unint64_t sub_1A73FFFD4()
{
  unint64_t result = qword_1EB701620;
  if (!qword_1EB701620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701620);
  }
  return result;
}

unint64_t sub_1A740002C()
{
  unint64_t result = qword_1E96F3038;
  if (!qword_1E96F3038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3038);
  }
  return result;
}

unint64_t sub_1A7400084()
{
  unint64_t result = qword_1E96F3040;
  if (!qword_1E96F3040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3040);
  }
  return result;
}

unint64_t sub_1A74000DC()
{
  unint64_t result = qword_1E96F3048;
  if (!qword_1E96F3048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3048);
  }
  return result;
}

unint64_t sub_1A7400134()
{
  unint64_t result = qword_1E96F3050;
  if (!qword_1E96F3050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3050);
  }
  return result;
}

unint64_t sub_1A740018C()
{
  unint64_t result = qword_1E96F3058;
  if (!qword_1E96F3058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3058);
  }
  return result;
}

unint64_t sub_1A74001E4()
{
  unint64_t result = qword_1E96F3060;
  if (!qword_1E96F3060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3060);
  }
  return result;
}

unint64_t sub_1A740023C()
{
  unint64_t result = qword_1E96F3068;
  if (!qword_1E96F3068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3068);
  }
  return result;
}

unint64_t sub_1A7400294()
{
  unint64_t result = qword_1E96F3070;
  if (!qword_1E96F3070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3070);
  }
  return result;
}

unint64_t sub_1A74002EC()
{
  unint64_t result = qword_1E96F3078;
  if (!qword_1E96F3078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3078);
  }
  return result;
}

unint64_t sub_1A7400344()
{
  unint64_t result = qword_1E96F3080;
  if (!qword_1E96F3080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3080);
  }
  return result;
}

unint64_t sub_1A740039C()
{
  unint64_t result = qword_1E96F3088;
  if (!qword_1E96F3088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3088);
  }
  return result;
}

unint64_t sub_1A74003F4()
{
  unint64_t result = qword_1E96F3090;
  if (!qword_1E96F3090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3090);
  }
  return result;
}

unint64_t sub_1A740044C()
{
  unint64_t result = qword_1E96F3098;
  if (!qword_1E96F3098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3098);
  }
  return result;
}

unint64_t sub_1A74004A4()
{
  unint64_t result = qword_1E96F30A0;
  if (!qword_1E96F30A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F30A0);
  }
  return result;
}

uint64_t sub_1A74004F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701736302 && a2 == 0xE400000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t REMRegExTextClassifier.labels.getter()
{
  return swift_bridgeObjectRetain();
}

void *REMRegExTextClassifier.__allocating_init(modelURL:numOfClasses:labels:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1A75719D0();
  if (v3)
  {
    uint64_t v9 = sub_1A75719C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = v7;
    unint64_t v12 = v8;
    sub_1A7571460();
    swift_allocObject();
    sub_1A7571450();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F30A8);
    sub_1A7400830();
    sub_1A7571440();
    swift_release();
    sub_1A72E3460(v11, v12);
    uint64_t v13 = sub_1A75719C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
    unint64_t result = (void *)swift_allocObject();
    result[3] = v14;
    result[4] = a2;
    result[2] = a3;
  }
  return result;
}

unint64_t sub_1A7400830()
{
  unint64_t result = qword_1E96F30B0;
  if (!qword_1E96F30B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F30A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F30B0);
  }
  return result;
}

void *REMRegExTextClassifier.predict(_:)(uint64_t a1, uint64_t a2)
{
  unint64_t result = REMRegExTextClassifier.predictIndices(_:)(a1, a2);
  if (!v3)
  {
    uint64_t v5 = (uint64_t)result;
    swift_retain();
    char v6 = sub_1A7400CA0(v5, v2);
    swift_bridgeObjectRelease();
    swift_release();
    return v6;
  }
  return result;
}

void *REMRegExTextClassifier.predictIndices(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v32 = v2;
  uint64_t v33 = v7 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  unint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v35 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v31 = a2;
  while (v11)
  {
    unint64_t v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v16 = v15 | (v13 << 6);
LABEL_22:
    uint64_t v20 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v16);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = *(void *)(*(void *)(v7 + 56) + 8 * v16);
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = (void *)MEMORY[0x1AD0CC790](v24);
    uint64_t v38 = v40;
    uint64_t v39 = a2;
    uint64_t v36 = v22;
    uint64_t v37 = v21;
    uint64_t v26 = sub_1A7571D30();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v6, 1, 1, v26);
    sub_1A72DF534();
    sub_1A7573300();
    LOBYTE(v22) = v27;
    sub_1A72DF588((uint64_t)v6);
    if ((v22 & 1) == 0 && (v23 & 0x8000000000000000) == 0 && v23 < *(void *)(*(void *)(v32 + 16) + 16))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v35 = sub_1A72AC37C(0, v35[2] + 1, 1, v35);
      }
      unint64_t v29 = v35[2];
      unint64_t v28 = v35[3];
      if (v29 >= v28 >> 1) {
        uint64_t v35 = sub_1A72AC37C((void *)(v28 > 1), v29 + 1, 1, v35);
      }
      uint64_t v14 = v35;
      v35[2] = v29 + 1;
      v14[v29 + 4] = v23;
      a2 = v31;
    }
    unint64_t result = (void *)swift_bridgeObjectRelease();
  }
  int64_t v17 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v17 >= v34) {
    goto LABEL_29;
  }
  unint64_t v18 = *(void *)(v33 + 8 * v17);
  ++v13;
  if (v18) {
    goto LABEL_21;
  }
  int64_t v13 = v17 + 1;
  if (v17 + 1 >= v34) {
    goto LABEL_29;
  }
  unint64_t v18 = *(void *)(v33 + 8 * v13);
  if (v18) {
    goto LABEL_21;
  }
  int64_t v13 = v17 + 2;
  if (v17 + 2 >= v34) {
    goto LABEL_29;
  }
  unint64_t v18 = *(void *)(v33 + 8 * v13);
  if (v18)
  {
LABEL_21:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    goto LABEL_22;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v34)
  {
LABEL_29:
    swift_release();
    return v35;
  }
  unint64_t v18 = *(void *)(v33 + 8 * v19);
  if (v18)
  {
    int64_t v13 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v13 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v13 >= v34) {
      goto LABEL_29;
    }
    unint64_t v18 = *(void *)(v33 + 8 * v13);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t REMRegExTextClassifier.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMRegExTextClassifier.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 40, 7);
}

void *sub_1A7400CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  char v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v8 = *(void *)(a1 + 8 * v5 + 32);
    if ((v8 & 0x8000000000000000) == 0 && v8 < *(void *)(v4 + 16))
    {
      uint64_t v9 = (uint64_t *)(v4 + 32 + 16 * v8);
      uint64_t v10 = *v9;
      uint64_t v11 = v9[1];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v6 = sub_1A72AC148(0, v6[2] + 1, 1, v6);
      }
      unint64_t v13 = v6[2];
      unint64_t v12 = v6[3];
      if (v13 >= v12 >> 1) {
        char v6 = sub_1A72AC148((void *)(v12 > 1), v13 + 1, 1, v6);
      }
      v6[2] = v13 + 1;
      uint64_t v7 = &v6[2 * v13];
      v7[4] = v10;
      v7[5] = v11;
    }
    ++v5;
  }
  while (v2 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t type metadata accessor for REMRegExTextClassifier()
{
  return self;
}

uint64_t method lookup function for REMRegExTextClassifier(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMRegExTextClassifier);
}

Swift::Void __swiftcall ReminderKitInternalVerify()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7040E8);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v0 + 16) = xmmword_1A75785A0;
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 32) = 0x736B726F77;
  *(void *)(v0 + 40) = 0xE500000000000000;
  sub_1A75740A0();

  swift_bridgeObjectRelease();
}

Swift::Bool __swiftcall CLCircularRegion.overlaps(_:)(CLCircularRegion a1)
{
  objc_msgSend(v1, sel_center);
  double v4 = v3;
  objc_msgSend(v1, sel_center);
  double v6 = v5;
  [(objc_class *)a1.super.super.isa center];
  double v8 = v7;
  [(objc_class *)a1.super.super.isa center];
  double v10 = v9;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E5F0]), sel_initWithLatitude_longitude_, v4, v6);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E5F0]), sel_initWithLatitude_longitude_, v8, v10);
  objc_msgSend(v11, sel_distanceFromLocation_, v12);
  double v14 = v13;
  objc_msgSend(v1, sel_radius);
  double v16 = v15;
  [(objc_class *)a1.super.super.isa radius];
  double v18 = v17;

  return v14 < v16 + v18;
}

uint64_t String.firstMatch(regularExpressionPattern:)(uint64_t a1, uint64_t a2)
{
  objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  swift_bridgeObjectRetain();
  id v6 = sub_1A7401680(a1, a2, 0);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F30B8);
  sub_1A740175C();
  sub_1A72DF534();
  uint64_t v7 = sub_1A75731E0();
  uint64_t v9 = v8;
  double v10 = (void *)sub_1A75725E0();
  id v11 = objc_msgSend(v6, sel_firstMatchInString_options_range_, v10, 0, v7, v9);

  if (v11)
  {
    objc_msgSend(v11, sel_range);
    sub_1A7572F10();
    if ((v12 & 1) == 0)
    {
      uint64_t v4 = sub_1A7572860();

      return v4;
    }
  }
  else
  {
  }
  return 0;
}

uint64_t static String.hashtagTokenDefaultPrefix.getter()
{
  return 35;
}

Swift::String __swiftcall String.addingHashtagPrefix()()
{
  sub_1A7572740();
  uint64_t v0 = 35;
  uint64_t v1 = (void *)0xE100000000000000;
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall String.hashtaggedDirectionLocalized(inCurrentContext:)(Swift::Bool inCurrentContext)
{
  unint64_t v3 = v2;
  uint64_t v4 = v1;
  BOOL v27 = inCurrentContext;
  uint64_t v26 = sub_1A7571D30();
  uint64_t v5 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A7571D10();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  char v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  double v14 = (char *)&v26 - v13;
  double v15 = self;
  uint64_t v28 = v4;
  unint64_t v29 = v3;
  double v16 = (void *)sub_1A75725E0();
  id v17 = objc_msgSend(v15, sel_dominantLanguageForString_, v16);

  id v18 = v17;
  if (!v17) {
    id v18 = (id)*MEMORY[0x1E4F386F0];
  }
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  id v19 = v17;

  sub_1A7571CD0();
  uint64_t v20 = sub_1A7571CF0();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v14, v8);
  if (v27
    && (sub_1A7571C80(),
        sub_1A7571D20(),
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v26),
        uint64_t v22 = sub_1A7571CF0(),
        v21(v12, v8),
        v22 == v20)
    || v20 != 2)
  {
    uint64_t v30 = 35;
    unint64_t v31 = 0xE100000000000000;
  }
  else
  {
    uint64_t v30 = v28;
    unint64_t v31 = v29;
    swift_bridgeObjectRetain();
  }
  sub_1A7572740();

  uint64_t v23 = v30;
  uint64_t v24 = (void *)v31;
  result._object = v24;
  result._countAndFlagsBits = v23;
  return result;
}

uint64_t String.asREMObjectIDProvidingModelClass()()
{
  aBlock[6] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = (NSString *)sub_1A75725E0();
  uint64_t ObjCClassMetadata = (uint64_t)NSClassFromString(v0);

  if (!ObjCClassMetadata)
  {
    sub_1A74017B8();
    swift_allocError();
    goto LABEL_5;
  }
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  unint64_t v2 = self;
  unint64_t v3 = (void *)swift_allocObject();
  v3[2] = ObjCClassMetadata;
  aBlock[4] = sub_1A740181C;
  aBlock[5] = v3;
  aBlock[0] = (id)MEMORY[0x1E4F143A8];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1A73322E4;
  aBlock[3] = &block_descriptor_6;
  uint64_t v4 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  unsigned int v5 = objc_msgSend(v2, sel_catchObjCException_error_, v4, aBlock);
  _Block_release(v4);
  id v6 = aBlock[0];
  if (!v5)
  {
    uint64_t v7 = v6;
    sub_1A7571850();

LABEL_5:
    swift_willThrow();
  }
  return ObjCClassMetadata;
}

uint64_t String.urlFragmentRepresentation.getter()
{
  uint64_t v0 = (void *)sub_1A75725E0();
  id v1 = objc_msgSend(v0, sel_CKMangledDocumentNameForURLFragment);

  if (!v1) {
    return 0;
  }
  uint64_t v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v2;
}

id sub_1A7401680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  unsigned int v5 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_1A7571850();

    swift_willThrow();
  }
  return v6;
}

unint64_t sub_1A740175C()
{
  unint64_t result = qword_1E96F30C0;
  if (!qword_1E96F30C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F30B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F30C0);
  }
  return result;
}

unint64_t sub_1A74017B8()
{
  unint64_t result = qword_1E96F30C8;
  if (!qword_1E96F30C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F30C8);
  }
  return result;
}

uint64_t sub_1A740180C()
{
  return swift_deallocObject();
}

void sub_1A740181C()
{
  id v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_newObjectID);
}

ValueMetadata *type metadata accessor for String.ClassNotFoundError()
{
  return &type metadata for String.ClassNotFoundError;
}

uint64_t StringProtocol.foldedStringForWriting(locale:)()
{
  return sub_1A7401874();
}

uint64_t StringProtocol.foldedStringForSearching(locale:)()
{
  return sub_1A7401874();
}

uint64_t sub_1A7401874()
{
  uint64_t v0 = sub_1A7571500();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = sub_1A7573310();
  v7[1] = v4;
  sub_1A75714D0();
  sub_1A72DF534();
  uint64_t v5 = sub_1A75732B0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t StringProtocol.trimmingUnicodeScalars(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v46 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 8) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = sub_1A75738C0();
  MEMORY[0x1F4188790](v7);
  uint64_t v44 = (char *)&v35 - v8;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_1A7574090();
  MEMORY[0x1F4188790](v9);
  uint64_t v39 = (char *)&v35 - v10;
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v11 = sub_1A75738C0();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v36 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v38 = (char *)&v35 - v15;
  uint64_t v16 = *(void *)(a2 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  id v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v35 - v23;
  uint64_t v45 = v5;
  if (sub_1A7572DD0()) {
    return 0;
  }
  uint64_t v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v3, a2);
  MEMORY[0x1F4188790](v26);
  uint64_t v27 = AssociatedTypeWitness;
  uint64_t v28 = v46;
  *(&v35 - 2) = v46;
  sub_1A7572E00();
  uint64_t v29 = v35;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v22, v24, v27);
  uint64_t v30 = sub_1A7572560();
  MEMORY[0x1F4188790](v30);
  *(&v35 - 2) = v28;
  sub_1A7572E00();
  unint64_t v31 = v38;
  sub_1A7572560();
  uint64_t v33 = v40;
  uint64_t v32 = v41;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v36, v31, v41);
  swift_getWitnessTable();
  uint64_t v25 = sub_1A7572840();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v31, v32);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v27);
  return v25;
}

uint64_t sub_1A7401EB8(uint64_t *a1, uint64_t a2, uint64_t (*a3)(void *))
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  void v7[2] = a2;
  swift_bridgeObjectRetain();
  LOBYTE(a3) = sub_1A7417170(a3, (uint64_t)v7, v4, v5);
  swift_bridgeObjectRelease();
  return a3 & 1;
}

uint64_t sub_1A7401F24(uint64_t *a1)
{
  return sub_1A7401EB8(a1, *(void *)(v1 + 16), (uint64_t (*)(void *))sub_1A7401FC0) & 1;
}

uint64_t sub_1A7401F58(uint64_t *a1)
{
  return sub_1A7401EB8(a1, *(void *)(v1 + 16), (uint64_t (*)(void *))sub_1A7401F8C) & 1;
}

uint64_t sub_1A7401F8C()
{
  return sub_1A75714F0() & 1;
}

uint64_t sub_1A7401FC0()
{
  return sub_1A7401F8C() & 1;
}

uint64_t Array<A>.sorted(byFirstObjectIDs:)(unint64_t a1, void *a2)
{
  type metadata accessor for MutableOrderedSet();
  swift_bridgeObjectRetain();
  uint64_t v4 = (uint64_t *)MutableOrderedSet.__allocating_init(_:)();
  id v12 = a2;
  sub_1A73484C0();
  swift_getTupleTypeMetadata2();
  sub_1A7572A80();
  sub_1A72D8FDC();
  sub_1A7572430();
  sub_1A7572B30();
  sub_1A75724A0();
  swift_getWitnessTable();
  sub_1A7572900();
  uint64_t v5 = v13;
  uint64_t v13 = sub_1A75723A0();
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRetain();
    MutableOrderedSet.array.getter();
    uint64_t v11 = sub_1A7572A70();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_release();
    return v11;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A75738D0();
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1AD0CB800](v8, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      ++v8;
      id v12 = v9;
      sub_1A7402300(&v12, v5, (uint64_t)&v13, v4);
    }
    while (v6 != v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7402254(uint64_t a1, id *a2)
{
  return sub_1A75724E0();
}

void sub_1A7402300(id *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = *a4;
  id v11 = *a1;
  unint64_t v6 = sub_1A73484C0();
  uint64_t v7 = *(void *)(v5 + 80);
  unint64_t v8 = sub_1A72D8FDC();
  id v9 = v11;
  MEMORY[0x1AD0CA6D0](&v12, &v11, a2, v6, v7, v8);

  uint64_t v10 = v12;
  if (v12)
  {
    sub_1A7572B30();
    swift_unknownObjectRetain();
    sub_1A7572AE0();
    uint64_t v12 = v10;
    MutableOrderedSet.remove(_:)((uint64_t)&v12);
    swift_unknownObjectRelease();
  }
}

uint64_t Array<A>.sort(byFirstObjectIDs:)(unint64_t a1)
{
  uint64_t v2 = Array<A>.sorted(byFirstObjectIDs:)(a1, *v1);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = (void *)v2;
  return result;
}

uint64_t sub_1A740243C(uint64_t a1, id *a2)
{
  return sub_1A7402254(a1, a2);
}

void *sub_1A7402458(void *a1, uint64_t a2)
{
  return sub_1A7402480(a1, a2, &qword_1E96F1140);
}

void *sub_1A740246C(void *a1, uint64_t a2)
{
  return sub_1A7402480(a1, a2, &qword_1E96F1940);
}

void *sub_1A7402480(void *a1, uint64_t a2, unint64_t *a3)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v8 = sub_1A72B252C((uint64_t)a1);
      if (v9)
      {
        uint64_t v7 = *(void **)(*(void *)(a2 + 56) + 8 * v8);
        id v10 = v7;
        return v7;
      }
    }
    return 0;
  }
  id v5 = a1;
  uint64_t v6 = sub_1A7573810();

  if (!v6) {
    return 0;
  }
  sub_1A72BEFEC(0, a3);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v7 = v12;
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_1A7402564(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_1A72B252C((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 8 * v6);
        swift_retain();
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_1A7573810();

  if (!v4) {
    return 0;
  }
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F30E0);
  swift_dynamicCast();
  uint64_t v5 = v9;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1A7402630(void *a1, unint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    unint64_t v34 = 0;
    uint64_t v2 = 0;
    unint64_t v3 = 0;
    unint64_t v4 = sub_1A75737F0() | 0x8000000000000000;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v2 = ~v5;
    unint64_t v34 = a2 + 64;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v3 = v7 & *(void *)(a2 + 64);
    unint64_t v4 = a2;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v33 = (unint64_t)(v2 + 64) >> 6;
  for (i = v4; ; unint64_t v4 = i)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      if (!sub_1A7573820()) {
        goto LABEL_42;
      }
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v13 = v37;
      swift_unknownObjectRelease();
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F30E0);
      swift_dynamicCast();
      swift_unknownObjectRelease();
      uint64_t v12 = v8;
      uint64_t v10 = v3;
      if (!v37) {
        goto LABEL_42;
      }
    }
    else
    {
      if (v3)
      {
        uint64_t v10 = (v3 - 1) & v3;
        unint64_t v11 = __clz(__rbit64(v3)) | (v8 << 6);
        uint64_t v12 = v8;
      }
      else
      {
        int64_t v14 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_45;
        }
        if (v14 >= v33) {
          goto LABEL_42;
        }
        unint64_t v15 = *(void *)(v34 + 8 * v14);
        uint64_t v12 = v8 + 1;
        if (!v15)
        {
          uint64_t v12 = v8 + 2;
          if (v8 + 2 >= v33) {
            goto LABEL_42;
          }
          unint64_t v15 = *(void *)(v34 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v8 + 3;
            if (v8 + 3 >= v33) {
              goto LABEL_42;
            }
            unint64_t v15 = *(void *)(v34 + 8 * v12);
            if (!v15)
            {
              uint64_t v12 = v8 + 4;
              if (v8 + 4 >= v33) {
                goto LABEL_42;
              }
              unint64_t v15 = *(void *)(v34 + 8 * v12);
              if (!v15)
              {
                uint64_t v12 = v8 + 5;
                if (v8 + 5 >= v33) {
                  goto LABEL_42;
                }
                unint64_t v15 = *(void *)(v34 + 8 * v12);
                if (!v15)
                {
                  uint64_t v16 = v8 + 6;
                  while (v33 != v16)
                  {
                    unint64_t v15 = *(void *)(v34 + 8 * v16++);
                    if (v15)
                    {
                      uint64_t v12 = v16 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_42:
                  sub_1A72D99A4();
                  return (uint64_t)a1;
                }
              }
            }
          }
        }
LABEL_31:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      id v13 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      swift_retain();
      if (!v13) {
        goto LABEL_42;
      }
    }
    id v17 = v13;
    swift_retain();
    uint64_t v18 = sub_1A74032BC();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v37 = a1;
    unint64_t v21 = sub_1A72B252C((uint64_t)v17);
    uint64_t v22 = a1[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      break;
    }
    char v25 = v20;
    if (a1[3] >= v24)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1A72BD3D0();
      }
    }
    else
    {
      sub_1A72B8278(v24, isUniquelyReferenced_nonNull_native);
      unint64_t v26 = sub_1A72B252C((uint64_t)v17);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_46;
      }
      unint64_t v21 = v26;
    }
    if (v25)
    {
      uint64_t v9 = a1[7];
      swift_bridgeObjectRelease();
      *(void *)(v9 + 8 * v21) = v18;
    }
    else
    {
      a1[(v21 >> 6) + 8] |= 1 << v21;
      *(void *)(a1[6] + 8 * v21) = v17;
      *(void *)(a1[7] + 8 * v21) = v18;
      uint64_t v28 = a1[2];
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29) {
        goto LABEL_44;
      }
      a1[2] = v30;
      id v31 = v17;
    }
    swift_release_n();

    swift_bridgeObjectRelease();
    uint64_t v8 = v12;
    unint64_t v3 = v10;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t sub_1A7402A6C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1A72D2D80(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x1AD0CB800](i, a1);
        sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A72D2D80(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1A72D2D80(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_1A72BEE44(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A72D2D80(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1A72D2D80(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_1A72BEE44(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7402CD0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1A72D2F64(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = a1 + 40;
    do
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F30F8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3100);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A72D2F64(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v11;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A72D2F64(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v11;
      }
      *(void *)(v2 + 16) = v6 + 1;
      uint64_t v7 = v2 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A7402E18(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1A72D2FCC(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705490);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A72D2FCC(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v11;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A72D2FCC(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v11;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      uint64_t v7 = v2 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t REMMutableManualOrdering.__allocating_init(immutableManualOrdering:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  REMMutableManualOrdering.init(immutableManualOrdering:)(a1);
  return v2;
}

Swift::Void __swiftcall REMMutableManualOrdering.append(topLevelElementID:)(REMObjectID topLevelElementID)
{
  objc_msgSend(*(id *)(*(void *)(v1+ OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfTopLevelElementIDs)+ 16), sel_addObject_, topLevelElementID.super.isa);
}

uint64_t REMMutableManualOrdering.topLevelElementIDs.getter()
{
  swift_retain();
  uint64_t v0 = sub_1A74032BC();
  swift_release();
  return v0;
}

id REMMutableManualOrdering.immutableCopy()()
{
  uint64_t v1 = sub_1A7571B60();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = *(void **)(v0 + 16);
  unsigned int v22 = *(__int16 *)(v0 + 24);
  id v21 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A74032BC();
  swift_release();
  unint64_t v6 = (unint64_t *)(v0
                          + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfSecondaryLevelElementIDsByTopLevelElementID);
  swift_beginAccess();
  unint64_t v7 = *v6;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_1A72B1334(MEMORY[0x1E4FBC860]);
  sub_1A7402630(v8, v7);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v9 = *(void **)(v0 + 48);
  uint64_t v10 = v0 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_modifiedDate;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v10, v1);
  id v11 = objc_allocWithZone(MEMORY[0x1E4F94BA0]);
  id v12 = v9;
  uint64_t v13 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
  int64_t v14 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13D8);
  sub_1A72D8FDC();
  unint64_t v15 = (void *)sub_1A75723D0();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_1A7571AB0();
  id v17 = v11;
  uint64_t v18 = v21;
  id v19 = objc_msgSend(v17, sel_initWithObjectID_listType_listID_topLevelElementIDs_secondaryLevelElementIDsByTopLevelElementID_uncommitedElementsAccountID_modifiedDate_, v21, v22, v13, v14, v15, v12, v16);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v19;
}

uint64_t sub_1A74032BC()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_array);
  uint64_t v2 = sub_1A7572A10();

  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    uint64_t v5 = v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1A72BEE98(v5, (uint64_t)v10);
      sub_1A72BEE98((uint64_t)v10, (uint64_t)v9);
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
      if (swift_dynamicCast())
      {
        uint64_t v6 = v9[4];
        uint64_t v7 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
        if (v6)
        {
          MEMORY[0x1AD0CABF0](v7);
          if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1A7572A60();
          }
          sub_1A7572AB0();
          sub_1A7572A30();
        }
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      }
      v5 += 32;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v3 = v11;
  }
  swift_bridgeObjectRelease();
  return v3;
}

id REMMutableManualOrdering.objectID.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t REMMutableManualOrdering.listType.getter()
{
  return *(unsigned __int16 *)(v0 + 24);
}

uint64_t REMMutableManualOrdering.listID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void *REMMutableManualOrdering.uncommitedElementsAccountID.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

void REMMutableManualOrdering.uncommitedElementsAccountID.setter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 48);
  *(void *)(v1 + 48) = a1;
}

uint64_t (*REMMutableManualOrdering.uncommitedElementsAccountID.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t REMMutableManualOrdering.modifiedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_modifiedDate;
  swift_beginAccess();
  uint64_t v4 = sub_1A7571B60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t REMMutableManualOrdering.modifiedDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_modifiedDate;
  swift_beginAccess();
  uint64_t v4 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*REMMutableManualOrdering.modifiedDate.modify())()
{
  return j__swift_endAccess;
}

uint64_t REMMutableManualOrdering.init(immutableManualOrdering:)(void *a1)
{
  uint64_t v62 = sub_1A7571B60();
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  char v59 = (char *)v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 48) = 0;
  v58[2] = v1 + 48;
  *(void *)(v1 + 16) = objc_msgSend(a1, sel_objectID);
  *(_WORD *)(v1 + 24) = (unsigned __int16)objc_msgSend(a1, sel_listType);
  id v4 = objc_msgSend(a1, sel_listID);
  uint64_t v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v7 = v6;

  *(void *)(v1 + 32) = v5;
  *(void *)(v1 + 40) = v7;
  id v8 = objc_msgSend(a1, sel_topLevelElementIDs);
  uint64_t v9 = sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
  unint64_t v10 = sub_1A7572A10();

  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F30E0);
  uint64_t v11 = swift_allocObject();
  sub_1A7402A6C(v10);
  swift_bridgeObjectRelease();
  id v12 = objc_allocWithZone(MEMORY[0x1E4F1CA70]);
  uint64_t v13 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithArray_, v13);

  *(void *)(v11 + 16) = v14;
  uint64_t v63 = v1;
  *(void *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfTopLevelElementIDs) = v11;
  id v61 = a1;
  id v15 = objc_msgSend(a1, sel_secondaryLevelElementIDsByTopLevelElementID);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13D8);
  sub_1A72D8FDC();
  v58[1] = v9;
  uint64_t v16 = sub_1A75723F0();

  uint64_t v17 = sub_1A72B1440(MEMORY[0x1E4FBC860]);
  uint64_t v18 = *(void *)(v16 + 64);
  uint64_t v64 = v16 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  int64_t v65 = (unint64_t)(v19 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v22 = 0;
  while (1)
  {
    if (v21)
    {
      unint64_t v24 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v25 = v24 | (v22 << 6);
    }
    else
    {
      int64_t v26 = v22 + 1;
      if (__OFADD__(v22, 1)) {
        goto LABEL_46;
      }
      if (v26 >= v65)
      {
LABEL_42:
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v51 = v63;
        *(void *)(v63
                  + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfSecondaryLevelElementIDsByTopLevelElementID) = v17;
        id v52 = v61;
        id v53 = objc_msgSend(v61, sel_uncommitedElementsAccountID);
        swift_beginAccess();
        uint64_t v54 = *(void **)(v51 + 48);
        *(void *)(v51 + 48) = v53;

        id v55 = objc_msgSend(v52, sel_modifiedDate);
        uint64_t v56 = v59;
        sub_1A7571B20();

        (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(v51 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_modifiedDate, v56, v62);
        return v51;
      }
      unint64_t v27 = *(void *)(v64 + 8 * v26);
      ++v22;
      if (!v27)
      {
        int64_t v22 = v26 + 1;
        if (v26 + 1 >= v65) {
          goto LABEL_42;
        }
        unint64_t v27 = *(void *)(v64 + 8 * v22);
        if (!v27)
        {
          int64_t v22 = v26 + 2;
          if (v26 + 2 >= v65) {
            goto LABEL_42;
          }
          unint64_t v27 = *(void *)(v64 + 8 * v22);
          if (!v27)
          {
            int64_t v22 = v26 + 3;
            if (v26 + 3 >= v65) {
              goto LABEL_42;
            }
            unint64_t v27 = *(void *)(v64 + 8 * v22);
            if (!v27)
            {
              int64_t v22 = v26 + 4;
              if (v26 + 4 >= v65) {
                goto LABEL_42;
              }
              unint64_t v27 = *(void *)(v64 + 8 * v22);
              if (!v27)
              {
                int64_t v28 = v26 + 5;
                if (v28 >= v65) {
                  goto LABEL_42;
                }
                unint64_t v27 = *(void *)(v64 + 8 * v28);
                if (!v27)
                {
                  while (1)
                  {
                    int64_t v22 = v28 + 1;
                    if (__OFADD__(v28, 1)) {
                      goto LABEL_47;
                    }
                    if (v22 >= v65) {
                      goto LABEL_42;
                    }
                    unint64_t v27 = *(void *)(v64 + 8 * v22);
                    ++v28;
                    if (v27) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v22 = v28;
              }
            }
          }
        }
      }
LABEL_25:
      unint64_t v21 = (v27 - 1) & v27;
      unint64_t v25 = __clz(__rbit64(v27)) + (v22 << 6);
    }
    BOOL v29 = *(void **)(*(void *)(v16 + 48) + 8 * v25);
    uint64_t v30 = swift_allocObject();
    id v31 = v29;
    unint64_t v32 = swift_bridgeObjectRetain();
    sub_1A7402A6C(v32);
    id v33 = objc_allocWithZone(MEMORY[0x1E4F1CA70]);
    unint64_t v34 = (void *)sub_1A7572A00();
    swift_bridgeObjectRelease();
    id v35 = objc_msgSend(v33, sel_initWithArray_, v34);

    *(void *)(v30 + 16) = v35;
    if ((v17 & 0xC000000000000001) != 0)
    {
      if (v17 >= 0) {
        v17 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      uint64_t v36 = sub_1A7573400();
      if (__OFADD__(v36, 1)) {
        goto LABEL_44;
      }
      uint64_t v17 = sub_1A7404868(v17, v36 + 1);
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v67 = v17;
    unint64_t v39 = sub_1A72B252C((uint64_t)v31);
    uint64_t v40 = *(void *)(v17 + 16);
    BOOL v41 = (v38 & 1) == 0;
    uint64_t v42 = v40 + v41;
    if (__OFADD__(v40, v41)) {
      break;
    }
    char v43 = v38;
    if (*(void *)(v17 + 24) >= v42)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v17 = v67;
        if (v38) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1A72BCCF4();
        uint64_t v17 = v67;
        if (v43) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1A72B737C(v42, isUniquelyReferenced_nonNull_native);
      unint64_t v44 = sub_1A72B252C((uint64_t)v31);
      if ((v43 & 1) != (v45 & 1)) {
        goto LABEL_48;
      }
      unint64_t v39 = v44;
      uint64_t v17 = v67;
      if (v43)
      {
LABEL_4:
        uint64_t v23 = *(void *)(v17 + 56);
        swift_release();
        *(void *)(v23 + 8 * v39) = v30;
        goto LABEL_5;
      }
    }
    *(void *)(v17 + 8 * (v39 >> 6) + 64) |= 1 << v39;
    uint64_t v46 = 8 * v39;
    *(void *)(*(void *)(v17 + 48) + v46) = v31;
    *(void *)(*(void *)(v17 + 56) + v46) = v30;
    uint64_t v47 = *(void *)(v17 + 16);
    BOOL v48 = __OFADD__(v47, 1);
    uint64_t v49 = v47 + 1;
    if (v48) {
      goto LABEL_45;
    }
    *(void *)(v17 + 16) = v49;
    id v50 = v31;
LABEL_5:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t REMMutableManualOrdering.__allocating_init(objectID:listType:listID:)(void *a1, int a2)
{
  HIDWORD(v15) = a2;
  uint64_t v16 = sub_1A7571B60();
  uint64_t v3 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = a1;
  sub_1A72B1334(MEMORY[0x1E4FBC860]);
  sub_1A7571B50();
  id v7 = objc_allocWithZone(MEMORY[0x1E4F94BA0]);
  id v8 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
  uint64_t v9 = (void *)sub_1A7572A00();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13D8);
  sub_1A72D8FDC();
  unint64_t v10 = (void *)sub_1A75723D0();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)sub_1A7571AB0();
  id v12 = objc_msgSend(v7, sel_initWithObjectID_listType_listID_topLevelElementIDs_secondaryLevelElementIDsByTopLevelElementID_uncommitedElementsAccountID_modifiedDate_, v6, SWORD2(v15), v8, v9, v10, 0, v11);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
  uint64_t v13 = swift_allocObject();
  REMMutableManualOrdering.init(immutableManualOrdering:)(v12);

  return v13;
}

uint64_t REMMutableManualOrdering.secondaryLevelElementIDsByTopLevelElementID.getter()
{
  uint64_t v1 = (unint64_t *)(v0
                          + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfSecondaryLevelElementIDsByTopLevelElementID);
  swift_beginAccess();
  unint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1A72B1334(MEMORY[0x1E4FBC860]);
  uint64_t v4 = sub_1A7402630(v3, v2);
  swift_bridgeObjectRelease();
  return v4;
}

Swift::Void __swiftcall REMMutableManualOrdering.remove(topLevelElementID:)(REMObjectID topLevelElementID)
{
  Class isa = topLevelElementID.super.isa;
  objc_msgSend(*(id *)(*(void *)(v1+ OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfTopLevelElementIDs)+ 16), sel_removeObject_, topLevelElementID.super.isa);
  swift_beginAccess();
  uint64_t v3 = isa;
  sub_1A72D6144((unint64_t)v3);
  swift_endAccess();

  swift_release();
}

Swift::Void __swiftcall REMMutableManualOrdering.append(secondaryLevelElementID:forTopLevelElementID:)(REMObjectID secondaryLevelElementID, REMObjectID forTopLevelElementID)
{
  uuid = secondaryLevelElementID._uuid;
  Class isa = secondaryLevelElementID.super.isa;
  uint64_t v5 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfSecondaryLevelElementIDsByTopLevelElementID);
  swift_beginAccess();
  uint64_t v6 = *v5;
  id v7 = uuid;
  uint64_t v8 = sub_1A7402564(v7, v6);
  swift_endAccess();

  swift_release();
  if (!v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F30E0);
    uint64_t v9 = swift_allocObject();
    unint64_t v10 = v7;
    sub_1A7402A6C(MEMORY[0x1E4FBC860]);
    id v11 = objc_allocWithZone(MEMORY[0x1E4F1CA70]);
    id v12 = (void *)sub_1A7572A00();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v11, sel_initWithArray_, v12);

    *(void *)(v9 + 16) = v13;
    swift_beginAccess();
    sub_1A7404530(v9, v10);
    swift_endAccess();
  }
  swift_beginAccess();
  uint64_t v14 = *v5;
  uint64_t v15 = v7;
  uint64_t v16 = sub_1A7402564(v15, v14);

  swift_endAccess();
  if (v16)
  {
    objc_msgSend(*(id *)(v16 + 16), sel_addObject_, isa);
    swift_release();
  }
}

Swift::Void __swiftcall REMMutableManualOrdering.remove(secondaryLevelElementID:forTopLevelElementID:)(REMObjectID secondaryLevelElementID, REMObjectID forTopLevelElementID)
{
  uuid = secondaryLevelElementID._uuid;
  Class isa = secondaryLevelElementID.super.isa;
  uint64_t v5 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfSecondaryLevelElementIDsByTopLevelElementID);
  swift_beginAccess();
  uint64_t v6 = *v5;
  id v7 = uuid;
  uint64_t v8 = sub_1A7402564(v7, v6);
  swift_endAccess();

  swift_release();
  if (v8)
  {
    swift_beginAccess();
    uint64_t v9 = *v5;
    unint64_t v10 = v7;
    uint64_t v11 = sub_1A7402564(v10, v9);

    swift_endAccess();
    if (v11)
    {
      objc_msgSend(*(id *)(v11 + 16), sel_removeObject_, isa);
      swift_release();
    }
  }
}

uint64_t REMMutableManualOrdering.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_modifiedDate;
  uint64_t v2 = sub_1A7571B60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMMutableManualOrdering.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_modifiedDate;
  uint64_t v2 = sub_1A7571B60();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = *((unsigned int *)*v0 + 12);
  uint64_t v4 = *((unsigned __int16 *)*v0 + 26);

  return MEMORY[0x1F4186488](v0, v3, v4);
}

uint64_t sub_1A7404450(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_1A7573400();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *uint64_t v3 = sub_1A7404614(v7, result + 1, &qword_1E96F11D8, &qword_1E96F1940, 0x1E4F94B28, (void (*)(unint64_t, uint64_t))sub_1A72B5438);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1A72D6900(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v10;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7404530(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_1A7573400();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *uint64_t v3 = sub_1A7404868(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1A72D6F6C(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v10;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74045E4(uint64_t a1, uint64_t a2)
{
  return sub_1A7404614(a1, a2, &qword_1E96F11E0, &qword_1E96F1140, 0x1E4F94A48, (void (*)(unint64_t, uint64_t))sub_1A72B542C);
}

uint64_t sub_1A7404614(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t, uint64_t))
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v7 = sub_1A7573910();
    uint64_t v24 = v7;
    sub_1A75737F0();
    uint64_t v8 = sub_1A7573820();
    if (v8)
    {
      uint64_t v9 = v8;
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
      do
      {
        swift_dynamicCast();
        sub_1A72BEFEC(0, a4);
        swift_dynamicCast();
        uint64_t v7 = v24;
        unint64_t v17 = *(void *)(v24 + 16);
        if (*(void *)(v24 + 24) <= v17)
        {
          a6(v17 + 1, 1);
          uint64_t v7 = v24;
        }
        uint64_t result = sub_1A7573180();
        uint64_t v11 = v7 + 64;
        uint64_t v12 = -1 << *(unsigned char *)(v7 + 32);
        unint64_t v13 = result & ~v12;
        unint64_t v14 = v13 >> 6;
        if (((-1 << v13) & ~*(void *)(v7 + 64 + 8 * (v13 >> 6))) != 0)
        {
          unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v7 + 64 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v18 = 0;
          unint64_t v19 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v20 = v14 == v19;
            if (v14 == v19) {
              unint64_t v14 = 0;
            }
            v18 |= v20;
            uint64_t v21 = *(void *)(v11 + 8 * v14);
          }
          while (v21 == -1);
          unint64_t v15 = __clz(__rbit64(~v21)) + (v14 << 6);
        }
        *(void *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        uint64_t v16 = 8 * v15;
        *(void *)(*(void *)(v7 + 48) + v16) = v23;
        *(void *)(*(void *)(v7 + 56) + v16) = v9;
        ++*(void *)(v7 + 16);
        uint64_t v9 = sub_1A7573820();
      }
      while (v9);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v7;
}

uint64_t sub_1A7404868(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F1100);
    uint64_t v2 = sub_1A7573910();
    uint64_t v18 = v2;
    sub_1A75737F0();
    uint64_t v3 = sub_1A7573820();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
      do
      {
        swift_dynamicCast();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F30E0);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1A72B737C(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1A7573180();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1A7573820();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_1A7404AAC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1138);
    uint64_t v2 = sub_1A7573910();
    uint64_t v18 = v2;
    sub_1A75737F0();
    uint64_t v3 = sub_1A7573820();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1A72BEFEC(0, &qword_1E96F1140);
      do
      {
        swift_dynamicCast();
        sub_1A72BEFEC(0, &qword_1E96F2D90);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1A72B7660(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1A7573180();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1A7573820();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_1A7404D00(uint64_t a1, uint64_t a2)
{
  return sub_1A7404614(a1, a2, &qword_1E96F1118, (unint64_t *)&qword_1E96F1310, 0x1E4F94BE8, (void (*)(unint64_t, uint64_t))sub_1A72B766C);
}

uint64_t sub_1A7404D30()
{
  return type metadata accessor for REMMutableManualOrdering();
}

uint64_t type metadata accessor for REMMutableManualOrdering()
{
  uint64_t result = qword_1E96F30E8;
  if (!qword_1E96F30E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A7404D84()
{
  uint64_t result = sub_1A7571B60();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for REMMutableManualOrdering(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMMutableManualOrdering);
}

uint64_t dispatch thunk of REMMutableManualOrdering.__allocating_init(immutableManualOrdering:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1A7404E8C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  sub_1A72D2F1C(0, v1, 0);
  uint64_t v2 = v29;
  uint64_t result = sub_1A73ABE8C(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v23 = v3 + 80;
  int64_t v24 = v1;
  int v25 = v5;
  uint64_t v26 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    unint64_t v12 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
    uint64_t v13 = v12[1];
    uint64_t v27 = *v12;
    uint64_t v28 = *(void *)(*(void *)(*(void *)(v3 + 56) + 8 * v6) + 16);
    uint64_t v14 = v3;
    unint64_t v15 = *(void *)(v29 + 16);
    unint64_t v16 = *(void *)(v29 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v15 >= v16 >> 1) {
      uint64_t result = sub_1A72D2F1C(v16 > 1, v15 + 1, 1);
    }
    *(void *)(v29 + 16) = v15 + 1;
    uint64_t v17 = (void *)(v29 + 24 * v15);
    v17[4] = v27;
    v17[5] = v13;
    v17[6] = v28;
    int64_t v9 = 1 << *(unsigned char *)(v14 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v26;
    uint64_t v18 = *(void *)(v26 + 8 * v11);
    if ((v18 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    uint64_t v3 = v14;
    int v5 = v25;
    if (*(_DWORD *)(v14 + 36) != v25) {
      goto LABEL_27;
    }
    unint64_t v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      int64_t v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v24;
    }
    else
    {
      unint64_t v20 = v11 + 1;
      unint64_t v21 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v24;
      if (v11 + 1 < v21)
      {
        unint64_t v22 = *(void *)(v26 + 8 * v20);
        if (v22)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            unint64_t v22 = *(void *)(v23 + 8 * v11++);
            if (v22)
            {
              unint64_t v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A74050B4(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_1A7405138()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F3108);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F3108);
  if (qword_1EB7042A8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F18);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

unint64_t static REMkNNByTitleEmbedding.modelFileName.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_1A740521C()
{
  sub_1A7573560();
  swift_bridgeObjectRelease();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x1AD0CAC20](v0, MEMORY[0x1E4FBB1A0]);
  sub_1A7572740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  uint64_t v1 = type metadata accessor for RDVector();
  uint64_t v2 = swift_bridgeObjectRetain();
  MEMORY[0x1AD0CAC20](v2, v1);
  sub_1A7572740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  return 0x3A736C6562616C7BLL;
}

uint64_t sub_1A7405380(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a3;
  uint64_t v15 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3150);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74094BC();
  sub_1A75741B0();
  uint64_t v17 = a2;
  char v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A72A817C(&qword_1EB7003D8);
  sub_1A7573B60();
  if (!v5)
  {
    uint64_t v17 = v14;
    char v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3140);
    sub_1A7409510(&qword_1E96F3158, &qword_1E96F2880);
    sub_1A7573B60();
    LOBYTE(v17) = 2;
    sub_1A7573B10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1A74055BC()
{
  uint64_t v1 = 0x73726F74636576;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F6973726576;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x736C6562616CLL;
  }
}

uint64_t sub_1A7405614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7408DBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A740563C(uint64_t a1)
{
  unint64_t v2 = sub_1A74094BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7405678(uint64_t a1)
{
  unint64_t v2 = sub_1A74094BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A74056B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A7408A90(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1A74056E4(void *a1)
{
  return sub_1A7405380(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t REMkNNByTitleEmbedding.__allocating_init(from:with:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  REMkNNByTitleEmbedding.init(from:with:)(a1);
  return v2;
}

uint64_t REMkNNByTitleEmbedding.init(from:with:)(uint64_t a1)
{
  v19[1] = *(void *)v1;
  uint64_t v4 = sub_1A75719C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  sub_1A7571910();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1A75719D0();
  if (v2)
  {

    uint64_t v10 = self;
    *(void *)&long long v21 = 0;
    *((void *)&v21 + 1) = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    *(void *)&long long v21 = 0xD000000000000023;
    *((void *)&v21 + 1) = 0x80000001A75A20A0;
    sub_1A7571890();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    unint64_t v11 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_internalErrorWithDebugDescription_, v11);

    swift_willThrow();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v14(v20, v4);
    v14((uint64_t)v7, v4);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v12 = v8;
    unint64_t v13 = v9;
    sub_1A7571460();
    swift_allocObject();
    sub_1A7571450();
    sub_1A7405B74();
    sub_1A7571440();
    swift_release();
    sub_1A72E3460(v12, v13);
    char v16 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v16(v20, v4);
    v16((uint64_t)v7, v4);
    uint64_t v17 = v22;
    uint64_t v18 = v23;
    *(_OWORD *)(v1 + 16) = v21;
    *(void *)(v1 + 32) = v17;
    *(void *)(v1 + 40) = v18;
  }
  return v1;
}

unint64_t sub_1A7405B74()
{
  unint64_t result = qword_1E96F3120;
  if (!qword_1E96F3120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3120);
  }
  return result;
}

uint64_t REMkNNByTitleEmbedding.__allocating_init(vectors:labels:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  REMkNNByTitleEmbedding.init(vectors:labels:)(a1, a2);
  return v4;
}

uint64_t REMkNNByTitleEmbedding.init(vectors:labels:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1A7571B60();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[2] = a2;
  v3[3] = a1;
  id v10 = objc_allocWithZone(MEMORY[0x1E4F28C10]);
  swift_bridgeObjectRetain();
  id v11 = objc_msgSend(v10, sel_init);
  uint64_t v12 = (void *)sub_1A75725E0();
  objc_msgSend(v11, sel_setDateFormat_, v12);

  sub_1A7571B50();
  unint64_t v13 = (void *)sub_1A7571AB0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v53 = v11;
  id v14 = objc_msgSend(v11, sel_stringFromDate_, v13);

  uint64_t v15 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v17 = v16;

  uint64_t v57 = (void *)v15;
  uint64_t v58 = v17;
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  uint64_t v18 = v58;
  v3[4] = v57;
  v3[5] = v18;
  uint64_t v54 = v3;
  unint64_t v19 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v57 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v20 = *(void *)(a2 + 16);
  v52[1] = a2;
  if (v20)
  {
    long long v21 = (uint64_t *)(a2 + 40);
    long long v55 = xmmword_1A75785A0;
    do
    {
      uint64_t v24 = *(v21 - 1);
      uint64_t v23 = *v21;
      swift_bridgeObjectRetain_n();
      unint64_t v26 = sub_1A72B2210(v24, v23);
      uint64_t v27 = v19[2];
      BOOL v28 = (v25 & 1) == 0;
      uint64_t v29 = v27 + v28;
      if (__OFADD__(v27, v28))
      {
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      char v30 = v25;
      if (v19[3] < v29)
      {
        sub_1A72B5778(v29, 1);
        unint64_t v19 = v57;
        unint64_t v31 = sub_1A72B2210(v24, v23);
        if ((v30 & 1) != (v32 & 1))
        {
          uint64_t result = sub_1A7574010();
          __break(1u);
          return result;
        }
        unint64_t v26 = v31;
      }
      if (v30)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = (void *)v19[7];
        id v33 = (void *)v3[v26];
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v3[v26] = v33;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          id v33 = sub_1A72AC148(0, v33[2] + 1, 1, v33);
          v3[v26] = v33;
        }
        unint64_t v36 = v33[2];
        unint64_t v35 = v33[3];
        if (v36 >= v35 >> 1)
        {
          id v33 = sub_1A72AC148((void *)(v35 > 1), v36 + 1, 1, v33);
          v3[v26] = v33;
        }
        v33[2] = v36 + 1;
        uint64_t v22 = &v33[2 * v36];
        v22[4] = v24;
        void v22[5] = v23;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
        uint64_t v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = v55;
        *(void *)(v37 + 32) = v24;
        *(void *)(v37 + 40) = v23;
        v19[(v26 >> 6) + 8] |= 1 << v26;
        char v38 = (uint64_t *)(v19[6] + 16 * v26);
        *char v38 = v24;
        v38[1] = v23;
        *(void *)(v19[7] + 8 * v26) = v37;
        uint64_t v39 = v19[2];
        BOOL v40 = __OFADD__(v39, 1);
        uint64_t v41 = v39 + 1;
        if (v40) {
          goto LABEL_22;
        }
        void v19[2] = v41;
      }
      v21 += 2;
      --v20;
    }
    while (v20);
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1A7404E8C((uint64_t)v19);
  swift_release();
  if (qword_1E96F0818 != -1) {
LABEL_23:
  }
    swift_once();
  uint64_t v42 = sub_1A7571E90();
  __swift_project_value_buffer(v42, (uint64_t)qword_1E96F3108);
  swift_bridgeObjectRetain();
  char v43 = sub_1A7571E80();
  os_log_type_t v44 = sub_1A7572FF0();
  if (os_log_type_enabled(v43, v44))
  {
    char v45 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v57 = (void *)v46;
    *(_DWORD *)char v45 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13B0);
    uint64_t v48 = MEMORY[0x1AD0CAC20](v3, v47);
    unint64_t v50 = v49;
    swift_bridgeObjectRelease();
    uint64_t v56 = sub_1A72D1730(v48, v50, (uint64_t *)&v57);
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v43, v44, "kNN Model Statistics: %{public}s", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v46, -1, -1);
    MEMORY[0x1AD0CD330](v45, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (uint64_t)v54;
}

uint64_t REMkNNByTitleEmbedding.save(to:with:)()
{
  uint64_t v13 = sub_1A75719C0();
  uint64_t v1 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v7 = v0[4];
  uint64_t v6 = v0[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A7571910();
  swift_bridgeObjectRelease();
  sub_1A75714B0();
  swift_allocObject();
  sub_1A75714A0();
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v16 = v7;
  uint64_t v17 = v6;
  sub_1A7407408();
  uint64_t v8 = sub_1A7571490();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1A7571A30();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v13);
  sub_1A72E3460(v8, v10);
  return 1;
}

uint64_t REMkNNByTitleEmbedding.neighbors(of:neighborCount:)(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(v2 + 24);
  uint64_t v67 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1A72D2F3C(0, 0, 0);
  uint64_t v5 = v67;
  if (v4 >> 62)
  {
LABEL_72:
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_1A75738D0();
    unint64_t v64 = v4;
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    unint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v64 = v4;
    if (v6)
    {
LABEL_3:
      unint64_t v7 = 0;
      a1 += 2;
      unint64_t v65 = v6;
      while (1)
      {
        if ((v64 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = MEMORY[0x1AD0CB800](v7, v64);
          unint64_t v8 = v7 + 1;
          if (__OFADD__(v7, 1)) {
            goto LABEL_68;
          }
        }
        else
        {
          if (v7 >= *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_71;
          }
          uint64_t v5 = *(void *)(v64 + 32 + 8 * v7);
          swift_retain();
          unint64_t v8 = v7 + 1;
          if (__OFADD__(v7, 1)) {
            goto LABEL_68;
          }
        }
        unint64_t v66 = v8;
        swift_beginAccess();
        unint64_t v9 = *(void *)(v5 + 24);
        if ((v9 & 0x8000000000000000) != 0) {
          goto LABEL_69;
        }
        if (v9)
        {
          uint64_t v10 = v5 + 16;
          swift_beginAccess();
          swift_beginAccess();
          unint64_t v6 = 0;
          id v11 = (void *)MEMORY[0x1E4FBC860];
          while (v6 < *(void *)(*(void *)v10 + 16))
          {
            if (v6 >= *(void *)(*a1 + 16)) {
              goto LABEL_65;
            }
            double v12 = *(double *)(*(void *)v10 + 8 * v6 + 32);
            double v13 = *(double *)(*a1 + 8 * v6 + 32);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v11 = sub_1A72AC59C(0, v11[2] + 1, 1, v11);
            }
            unint64_t v4 = v11[2];
            unint64_t v14 = v11[3];
            if (v4 >= v14 >> 1) {
              id v11 = sub_1A72AC59C((void *)(v14 > 1), v4 + 1, 1, v11);
            }
            ++v6;
            void v11[2] = v4 + 1;
            *(double *)&v11[v4 + 4] = v12 - v13;
            if (v9 == v6) {
              goto LABEL_22;
            }
          }
          __break(1u);
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        id v11 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
        type metadata accessor for RDVector();
        uint64_t inited = swift_initStackObject();
        *(void *)(inited + 16) = v11;
        uint64_t v16 = v11[2];
        *(void *)(inited + 24) = v16;
        if (!v16) {
          goto LABEL_48;
        }
        uint64_t v17 = v11[4];
        if ((v17 & 0x7FF0000000000000) == 0 && (v17 & 0xFFFFFFFFFFFFFLL) == 0)
        {
          if (v16 == 1) {
            goto LABEL_48;
          }
          uint64_t v52 = v11[5];
          if ((v52 & 0x7FF0000000000000) == 0 && (v52 & 0xFFFFFFFFFFFFFLL) == 0) {
            break;
          }
        }
LABEL_25:
        swift_release();
        uint64_t v18 = *(void *)(v5 + 24);
        if (v18 < 0) {
          goto LABEL_70;
        }
        if (v18)
        {
          swift_beginAccess();
          swift_beginAccess();
          uint64_t v19 = *(void *)(v5 + 16);
          uint64_t v20 = *(void *)(v19 + 16);
          if (!v20) {
            goto LABEL_66;
          }
          uint64_t v21 = *a1;
          unint64_t v22 = *(void *)(*a1 + 16);
          if (!v22) {
            goto LABEL_67;
          }
          uint64_t v23 = v19 + 32;
          uint64_t v24 = v21 + 32;
          double v25 = *(double *)(v21 + 32);
          double v26 = *(double *)(v19 + 32);
          double v27 = v26 * v26;
          double v28 = v25 * v25;
          double v29 = v26 * v25 + 0.0;
          if (v18 != 1)
          {
            unint64_t v30 = v22 - 1;
            if (v22 - 1 >= v20 - 1) {
              unint64_t v30 = v20 - 1;
            }
            if (v30 >= v18 - 2) {
              unint64_t v30 = v18 - 2;
            }
            unint64_t v31 = v30 + 1;
            if (v31 > 4)
            {
              uint64_t v33 = v31 & 3;
              if ((v31 & 3) == 0) {
                uint64_t v33 = 4;
              }
              unint64_t v34 = v31 - v33;
              unint64_t v32 = v34 + 1;
              unint64_t v35 = (float64x2_t *)(v19 + 56);
              unint64_t v36 = (float64x2_t *)(v21 + 56);
              do
              {
                float64x2_t v37 = v35[-1];
                float64x2_t v38 = v36[-1];
                float64x2_t v39 = vmulq_f64(v37, v37);
                float64x2_t v40 = vmulq_f64(*v35, *v35);
                float64x2_t v41 = vmulq_f64(v38, v38);
                float64x2_t v42 = vmulq_f64(*v36, *v36);
                float64x2_t v43 = vmulq_f64(v37, v38);
                float64x2_t v44 = vmulq_f64(*v35, *v36);
                double v29 = v29 + v43.f64[0] + v43.f64[1] + v44.f64[0] + v44.f64[1];
                double v27 = v27 + v39.f64[0] + v39.f64[1] + v40.f64[0] + v40.f64[1];
                double v28 = v28 + v41.f64[0] + v41.f64[1] + v42.f64[0] + v42.f64[1];
                v35 += 2;
                v36 += 2;
                v34 -= 4;
              }
              while (v34);
            }
            else
            {
              unint64_t v32 = 1;
            }
            while (v20 != v32)
            {
              if (v32 >= v22) {
                goto LABEL_67;
              }
              double v45 = *(double *)(v23 + 8 * v32);
              double v46 = *(double *)(v24 + 8 * v32);
              double v27 = v27 + v45 * v45;
              double v28 = v28 + v46 * v46;
              double v29 = v29 + v45 * v46;
              if (v18 == ++v32) {
                goto LABEL_44;
              }
            }
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
            goto LABEL_72;
          }
        }
        else
        {
          double v29 = 0.0;
          double v27 = 0.0;
          double v28 = 0.0;
        }
LABEL_44:
        swift_release();
        double v47 = sqrt(v27) * sqrt(v28);
        double v48 = 1.0 - v29 / v47;
        if ((*(void *)&v47 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
          double v48 = 1.0;
        }
        double v49 = sqrt(fabs(v48));
LABEL_49:
        uint64_t v5 = v67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A72D2F3C(0, *(void *)(v67 + 16) + 1, 1);
          uint64_t v5 = v67;
        }
        unint64_t v4 = *(void *)(v5 + 16);
        unint64_t v50 = *(void *)(v5 + 24);
        if (v4 >= v50 >> 1)
        {
          sub_1A72D2F3C(v50 > 1, v4 + 1, 1);
          uint64_t v5 = v67;
        }
        *(void *)(v5 + 16) = v4 + 1;
        unint64_t v51 = v5 + 16 * v4;
        *(void *)(v51 + 32) = v7;
        *(double *)(v51 + 40) = v49;
        unint64_t v7 = v66;
        unint64_t v6 = v65;
        if (v66 == v65) {
          goto LABEL_73;
        }
      }
      if (v16 != 2)
      {
        uint64_t v53 = 6;
        while (1)
        {
          uint64_t v54 = v53 - 3;
          if (__OFADD__(v53 - 4, 1)) {
            break;
          }
          uint64_t v55 = v11[v53];
          if ((v55 & 0x7FF0000000000000) != 0 || (v55 & 0xFFFFFFFFFFFFFLL) != 0) {
            goto LABEL_25;
          }
          ++v53;
          if (v54 == v16) {
            goto LABEL_48;
          }
        }
        __break(1u);
LABEL_83:
        __break(1u);
        goto LABEL_84;
      }
LABEL_48:
      swift_release();
      swift_release();
      double v49 = 0.0;
      goto LABEL_49;
    }
  }
LABEL_73:
  swift_bridgeObjectRelease_n();
  uint64_t v67 = v5;
  swift_retain();
  sub_1A74050B4(&v67, sub_1A74F9E90, sub_1A740745C);
  swift_release();
  unint64_t v4 = sub_1A732B0FC(a2, v67);
  uint64_t v5 = v56;
  unint64_t v6 = v57;
  unint64_t v9 = v58;
  if ((v58 & 1) == 0) {
    goto LABEL_74;
  }
  sub_1A7573DF0();
  swift_unknownObjectRetain_n();
  uint64_t v60 = swift_dynamicCastClass();
  if (!v60)
  {
    swift_unknownObjectRelease();
    uint64_t v60 = MEMORY[0x1E4FBC860];
  }
  uint64_t v61 = *(void *)(v60 + 16);
  swift_release();
  if (__OFSUB__(v9 >> 1, v6)) {
    goto LABEL_83;
  }
  if (v61 != (v9 >> 1) - v6)
  {
LABEL_84:
    swift_unknownObjectRelease();
LABEL_74:
    uint64_t v59 = sub_1A72D2800(v4, v5, v6, v9);
    goto LABEL_81;
  }
  uint64_t v59 = swift_dynamicCastClass();
  if (!v59)
  {
    swift_unknownObjectRelease();
    uint64_t v59 = MEMORY[0x1E4FBC860];
  }
LABEL_81:
  swift_unknownObjectRelease();
  return v59;
}

uint64_t REMkNNByTitleEmbedding.predict(for:neighborCountToConsider:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1E96F0818 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1A7571E90();
  __swift_project_value_buffer(v6, (uint64_t)qword_1E96F3108);
  unint64_t v7 = sub_1A7571E80();
  os_log_type_t v8 = sub_1A7572FB0();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v9 = 134217984;
    uint64_t v42 = a2;
    sub_1A7573250();
    _os_log_impl(&dword_1A72A1000, v7, v8, "kNN with k = %ld", v9, 0xCu);
    MEMORY[0x1AD0CD330](v9, -1, -1);
  }

  uint64_t v10 = REMkNNByTitleEmbedding.neighbors(of:neighborCount:)(a1, a2);
  swift_bridgeObjectRetain_n();
  id v11 = sub_1A7571E80();
  os_log_type_t v12 = sub_1A7572FB0();
  if (os_log_type_enabled(v11, v12))
  {
    double v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v42 = v14;
    *(_DWORD *)double v13 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F30F8);
    uint64_t v16 = MEMORY[0x1AD0CAC20](v10, v15);
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    sub_1A72D1730(v16, v18, &v42);
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v11, v12, "kNN neighbor distances: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v14, -1, -1);
    MEMORY[0x1AD0CD330](v13, -1, -1);

    uint64_t v19 = *(void *)(v10 + 16);
    if (v19) {
      goto LABEL_7;
    }
LABEL_17:
    uint64_t v21 = MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }

  swift_bridgeObjectRelease_n();
  uint64_t v19 = *(void *)(v10 + 16);
  if (!v19) {
    goto LABEL_17;
  }
LABEL_7:
  swift_bridgeObjectRetain();
  uint64_t v20 = (double *)(v10 + 40);
  uint64_t v21 = MEMORY[0x1E4FBC860];
  do
  {
    double v25 = *v20;
    if (*v20 < 0.9)
    {
      uint64_t v26 = *((void *)v20 - 1);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v42 = v21;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A72D2F3C(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v21 = v42;
      }
      unint64_t v23 = *(void *)(v21 + 16);
      unint64_t v22 = *(void *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1A72D2F3C(v22 > 1, v23 + 1, 1);
        uint64_t v21 = v42;
      }
      *(void *)(v21 + 16) = v23 + 1;
      uint64_t v24 = v21 + 16 * v23;
      *(void *)(v24 + 32) = v26;
      *(double *)(v24 + 40) = v25;
    }
    v20 += 2;
    --v19;
  }
  while (v19);
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v28 = *(void *)(v21 + 16);
  swift_release();
  if (v28 >= a2)
  {
    uint64_t v33 = (void *)sub_1A7402CD0(v10);
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v34 = sub_1A7408F0C(v33, v3);
    unint64_t v36 = v35;
    swift_bridgeObjectRelease();
    swift_release();
    if (v36)
    {
      swift_bridgeObjectRetain_n();
      float64x2_t v37 = sub_1A7571E80();
      os_log_type_t v38 = sub_1A7572FB0();
      if (os_log_type_enabled(v37, v38))
      {
        float64x2_t v39 = (uint8_t *)swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        uint64_t v42 = v40;
        *(_DWORD *)float64x2_t v39 = 136315138;
        swift_bridgeObjectRetain();
        sub_1A72D1730(v34, v36, &v42);
        sub_1A7573250();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A72A1000, v37, v38, "kNN model suggesting %s", v39, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v40, -1, -1);
        MEMORY[0x1AD0CD330](v39, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    double v29 = sub_1A7571E80();
    os_log_type_t v30 = sub_1A7572FB0();
    if (os_log_type_enabled(v29, v30))
    {
      unint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v31 = 134217984;
      uint64_t v32 = *(void *)(v10 + 16);
      swift_bridgeObjectRelease();
      uint64_t v42 = v32;
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v29, v30, "Embedding.neighbors returned less than k neighbors {neighbor count: %ld} within distance of 0.9", v31, 0xCu);
      MEMORY[0x1AD0CD330](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  return v34;
}

uint64_t REMkNNByTitleEmbedding.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMkNNByTitleEmbedding.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 48, 7);
}

unint64_t sub_1A7407408()
{
  unint64_t result = qword_1E96F3128;
  if (!qword_1E96F3128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3128);
  }
  return result;
}

uint64_t sub_1A740745C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A7573BB0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 8;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v88 = *(double *)(v84 + 16 * i + 8);
        uint64_t v89 = v86;
        uint64_t v90 = v85;
        do
        {
          if (v88 >= *(double *)v90) {
            break;
          }
          if (!v84) {
            goto LABEL_141;
          }
          uint64_t v91 = *(void *)(v90 + 8);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 8);
          *(void *)(v90 - 8) = v91;
          *(double *)uint64_t v90 = v88;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  char v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      os_log_type_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v93 = v12;
      uint64_t v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v94) {
            goto LABEL_145;
          }
          uint64_t v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_1A7408254((char *)(v94 + 16 * v97), (char *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v96 = sub_1A74F9DDC((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_134;
          }
          id v99 = &v96[16 * v95 + 32];
          *(void *)id v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_135;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F30F8);
    uint64_t v8 = sub_1A7572A90();
    *(void *)(v8 + 16) = v7;
    uint64_t v103 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  os_log_type_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v104 = v6;
  uint64_t v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 16 * v10 + 8);
      double v16 = *(double *)(v11 + 16 * v14 + 8);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        unint64_t v17 = (double *)(v102 + 16 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v15 < v16 == *v17 >= v19) {
            break;
          }
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 16 * v10;
          uint64_t v21 = 16 * v14;
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v20;
              uint64_t v25 = *(void *)(v11 + v21);
              uint64_t v26 = *(void *)(v11 + v21 + 8);
              *(_OWORD *)(v11 + v21) = *(_OWORD *)(v11 + v20 - 16);
              *(void *)(v24 - 16) = v25;
              *(void *)(v24 - 8) = v26;
            }
            ++v23;
            v20 -= 16;
            v21 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v27 >= v3) {
      uint64_t v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      uint64_t v28 = (double *)(v11 + 16 * v10);
      do
      {
        double v29 = *(double *)(v11 + 16 * v10 + 8);
        uint64_t v30 = v14;
        unint64_t v31 = v28;
        do
        {
          if (v29 >= *(v31 - 1)) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          double v32 = *v31;
          *(_OWORD *)unint64_t v31 = *((_OWORD *)v31 - 1);
          *(v31 - 1) = v29;
          *(v31 - 2) = v32;
          v31 -= 2;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 2;
      }
      while (v10 != v27);
      uint64_t v10 = v27;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      os_log_type_t v12 = sub_1A74F9714(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v106;
    if (v34 >= v33 >> 1)
    {
      char v83 = sub_1A74F9714((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v106;
      os_log_type_t v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    unint64_t v35 = v12 + 32;
    unint64_t v36 = &v12[16 * v34 + 32];
    *(void *)unint64_t v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_120;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_121;
          }
          unint64_t v49 = v13 - 2;
          unint64_t v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_123;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_126;
          }
          if (v54 >= v45)
          {
            __int16 v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_130;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_77;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_122;
        }
        unint64_t v49 = v13 - 2;
        uint64_t v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_125;
        }
        uint64_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_128;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_129;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_83:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v60) {
          goto LABEL_124;
        }
        __int16 v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_127;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v77 = v12;
        char v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        char v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_1A7408254((char *)(v11 + 16 * *(void *)v78), (char *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v81 < v79) {
          goto LABEL_117;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_118;
        }
        *(void *)char v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_119;
        }
        os_log_type_t v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v106;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v104;
    uint64_t v3 = v105;
    if (v10 >= v105)
    {
      uint64_t v9 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A7407B40(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A7573BB0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v88 = 0;
      uint64_t v89 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v91 = *(void *)(v89 + 24 * i + 16);
        uint64_t v92 = v88;
        do
        {
          uint64_t v93 = v89 + v92;
          if (*(void *)(v89 + v92 + 16) >= v91) {
            break;
          }
          if (!v89) {
            goto LABEL_140;
          }
          uint64_t v94 = *(void *)(v93 + 24);
          unint64_t v95 = (void *)(v89 + v92);
          uint64_t v96 = *(void *)(v89 + v92 + 32);
          *(_OWORD *)(v93 + 24) = *(_OWORD *)v93;
          uint64_t result = *(void *)(v93 + 16);
          *(void *)(v93 + 40) = result;
          *unint64_t v95 = v94;
          v95[1] = v96;
          *(void *)(v93 + 16) = v91;
          v92 -= 24;
        }
        while (v92 != -24);
        v88 += 24;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  uint64_t v105 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      os_log_type_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_102:
      uint64_t v97 = v12;
      uint64_t v107 = v9;
      if (v13 >= 2)
      {
        uint64_t v98 = *v105;
        do
        {
          unint64_t v99 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v98) {
            goto LABEL_144;
          }
          unint64_t v100 = v97;
          uint64_t v101 = *(void *)&v97[16 * v99 + 32];
          uint64_t v102 = *(void *)&v97[16 * v13 + 24];
          sub_1A74084E0((char *)(v98 + 24 * v101), (char *)(v98 + 24 * *(void *)&v97[16 * v13 + 16]), v98 + 24 * v102, __dst);
          if (v1) {
            break;
          }
          if (v102 < v101) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v100 = sub_1A74F9DDC((uint64_t)v100);
          }
          if (v99 >= *((void *)v100 + 2)) {
            goto LABEL_133;
          }
          uint64_t v103 = &v100[16 * v99 + 32];
          *(void *)uint64_t v103 = v101;
          *((void *)v103 + 1) = v102;
          unint64_t v104 = *((void *)v100 + 2);
          if (v13 > v104) {
            goto LABEL_134;
          }
          memmove(&v100[16 * v13 + 16], &v100[16 * v13 + 32], 16 * (v104 - v13));
          uint64_t v97 = v100;
          *((void *)v100 + 2) = v104 - 1;
          unint64_t v13 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v107 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v107 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13B0);
    uint64_t v8 = sub_1A7572A90();
    *(void *)(v8 + 16) = v7;
    uint64_t v107 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v106 = *a1 + 64;
  os_log_type_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v108 = v6;
  uint64_t v109 = v3;
  uint64_t v110 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 24 * v10 + 16);
      uint64_t v16 = *(void *)(v11 + 24 * v14 + 16);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        unint64_t v17 = (uint64_t *)(v106 + 24 * v14);
        uint64_t v18 = v15;
        while (1)
        {
          uint64_t v20 = *v17;
          v17 += 3;
          uint64_t v19 = v20;
          if (v16 < v15 == v18 >= v20) {
            break;
          }
          ++v10;
          uint64_t v18 = v19;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v21 = 24 * v10;
          uint64_t v22 = 24 * v14;
          uint64_t v23 = v10;
          uint64_t v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = v11 + v22;
              uint64_t v26 = v11 + v21;
              long long v27 = *(_OWORD *)(v11 + v22);
              uint64_t v28 = *(void *)(v11 + v22 + 16);
              uint64_t v29 = *(void *)(v11 + v21 - 8);
              *(_OWORD *)uint64_t v25 = *(_OWORD *)(v11 + v21 - 24);
              *(void *)(v25 + 16) = v29;
              *(_OWORD *)(v26 - 24) = v27;
              *(void *)(v26 - 8) = v28;
            }
            ++v24;
            v21 -= 24;
            v22 += 24;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v30 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v30 >= v3) {
      uint64_t v30 = v3;
    }
    if (v30 < v14) {
      break;
    }
    if (v10 != v30)
    {
      unint64_t v31 = (uint64_t *)(v11 + 24 * v10);
      do
      {
        uint64_t v32 = *(void *)(v11 + 24 * v10 + 16);
        uint64_t v33 = v14;
        unint64_t v34 = v31;
        do
        {
          if (*(v34 - 1) >= v32) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v35 = *v34;
          uint64_t v36 = v34[1];
          *(_OWORD *)unint64_t v34 = *(_OWORD *)(v34 - 3);
          v34[2] = *(v34 - 1);
          *(v34 - 2) = v36;
          *(v34 - 1) = v32;
          *(v34 - 3) = v35;
          v34 -= 3;
          ++v33;
        }
        while (v10 != v33);
        ++v10;
        v31 += 3;
      }
      while (v10 != v30);
      uint64_t v10 = v30;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      os_log_type_t v12 = sub_1A74F9714(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v38 = *((void *)v12 + 2);
    unint64_t v37 = *((void *)v12 + 3);
    unint64_t v13 = v38 + 1;
    uint64_t v11 = v110;
    if (v38 >= v37 >> 1)
    {
      char v87 = sub_1A74F9714((char *)(v37 > 1), v38 + 1, 1, v12);
      uint64_t v11 = v110;
      os_log_type_t v12 = v87;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v39 = v12 + 32;
    uint64_t v40 = &v12[16 * v38 + 32];
    *(void *)uint64_t v40 = v14;
    *((void *)v40 + 1) = v10;
    if (v38)
    {
      while (1)
      {
        unint64_t v41 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v46 = &v39[16 * v13];
          uint64_t v47 = *((void *)v46 - 8);
          uint64_t v48 = *((void *)v46 - 7);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_119;
          }
          uint64_t v51 = *((void *)v46 - 6);
          uint64_t v50 = *((void *)v46 - 5);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_120;
          }
          unint64_t v53 = v13 - 2;
          uint64_t v54 = &v39[16 * v13 - 32];
          uint64_t v56 = *(void *)v54;
          uint64_t v55 = *((void *)v54 + 1);
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_122;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_125;
          }
          if (v58 >= v49)
          {
            unint64_t v76 = &v39[16 * v41];
            uint64_t v78 = *(void *)v76;
            uint64_t v77 = *((void *)v76 + 1);
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_129;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v70 = *((void *)v12 + 4);
            uint64_t v71 = *((void *)v12 + 5);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_77;
          }
          uint64_t v43 = *((void *)v12 + 4);
          uint64_t v42 = *((void *)v12 + 5);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_121;
        }
        unint64_t v53 = v13 - 2;
        uint64_t v59 = &v39[16 * v13 - 32];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_124;
        }
        BOOL v65 = &v39[16 * v41];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_127;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_128;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_83:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v64) {
          goto LABEL_123;
        }
        __int16 v72 = &v39[16 * v41];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_126;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        uint64_t v81 = v12;
        unint64_t v82 = &v39[16 * v80];
        uint64_t v83 = *(void *)v82;
        uint64_t v84 = &v39[16 * v41];
        uint64_t v85 = *((void *)v84 + 1);
        sub_1A74084E0((char *)(v11 + 24 * *(void *)v82), (char *)(v11 + 24 * *(void *)v84), v11 + 24 * v85, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v85 < v83) {
          goto LABEL_116;
        }
        if (v41 > *((void *)v81 + 2)) {
          goto LABEL_117;
        }
        *(void *)unint64_t v82 = v83;
        *(void *)&v39[16 * v80 + 8] = v85;
        unint64_t v86 = *((void *)v81 + 2);
        if (v41 >= v86) {
          goto LABEL_118;
        }
        os_log_type_t v12 = v81;
        unint64_t v13 = v86 - 1;
        memmove(&v39[16 * v41], v84 + 16, 16 * (v86 - 1 - v41));
        *((void *)v81 + 2) = v86 - 1;
        uint64_t v11 = v110;
        if (v86 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v108;
    uint64_t v3 = v109;
    if (v10 >= v109)
    {
      uint64_t v9 = v107;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A7408254(char *__src, char *a2, unint64_t a3, char *__dst)
{
  unint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v25 = __src;
  uint64_t v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v18 = &v4[16 * v13];
      uint64_t v23 = v18;
      uint64_t v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v19 = (char *)(a3 - 16);
        do
        {
          uint64_t v20 = v19 + 16;
          if (*((double *)v18 - 1) >= *((double *)v6 - 1))
          {
            uint64_t v23 = v18 - 16;
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              *(_OWORD *)uint64_t v19 = *((_OWORD *)v18 - 1);
            }
            uint64_t v21 = v6;
            v18 -= 16;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v21 = v6 - 16;
            if (v20 != v6 || v19 >= v6) {
              *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
            }
            uint64_t v25 = v6 - 16;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 16;
          uint64_t v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_1A74F9ADC(&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v23 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      uint64_t v15 = v4;
      while (1)
      {
        if (*((double *)v6 + 1) >= *((double *)v15 + 1))
        {
          unint64_t v4 = v15 + 16;
          unint64_t v17 = v15;
          uint64_t v16 = v6;
          if (v7 == v15)
          {
            v15 += 16;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 16;
          }
        }
        else
        {
          uint64_t v16 = v6 + 16;
          unint64_t v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 16;
        if (v15 < v14)
        {
          uint64_t v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        uint64_t v24 = v4;
        uint64_t v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A74084E0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  unint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v26 = __src;
  uint64_t v25 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[24 * v11] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      unint64_t v17 = &v4[24 * v11];
      uint64_t v24 = v17;
      uint64_t v26 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v18 = a3 - 24;
        do
        {
          uint64_t v19 = (char *)(v18 + 24);
          if (*((void *)v6 - 1) >= *((void *)v17 - 1))
          {
            uint64_t v24 = v17 - 24;
            if (v19 < v17 || v18 >= (unint64_t)v17 || v19 != v17)
            {
              long long v22 = *(_OWORD *)(v17 - 24);
              *(void *)(v18 + 16) = *((void *)v17 - 1);
              *(_OWORD *)unint64_t v18 = v22;
            }
            uint64_t v20 = v6;
            v17 -= 24;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v20 = v6 - 24;
            if (v19 != v6 || v18 >= (unint64_t)v6)
            {
              long long v21 = *(_OWORD *)v20;
              *(void *)(v18 + 16) = *((void *)v6 - 1);
              *(_OWORD *)unint64_t v18 = v21;
            }
            uint64_t v26 = v6 - 24;
            if (v20 <= v7) {
              break;
            }
          }
          v18 -= 24;
          uint64_t v6 = v20;
        }
        while (v17 > v4);
      }
LABEL_40:
      sub_1A74F98CC((void **)&v26, &v25, &v24);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst) {
      memmove(__dst, __src, 24 * v9);
    }
    uint64_t v12 = &v4[24 * v9];
    uint64_t v24 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      uint64_t v13 = v4;
      while (1)
      {
        if (*((void *)v13 + 2) >= *((void *)v6 + 2))
        {
          unint64_t v4 = v13 + 24;
          uint64_t v15 = v13;
          uint64_t v14 = v6;
          if (v7 == v13)
          {
            v13 += 24;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 24;
          }
        }
        else
        {
          uint64_t v14 = v6 + 24;
          uint64_t v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        long long v16 = *(_OWORD *)v15;
        *((void *)v7 + 2) = *((void *)v15 + 2);
        *(_OWORD *)uint64_t v7 = v16;
LABEL_18:
        v7 += 24;
        if (v13 < v12)
        {
          uint64_t v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        uint64_t v25 = v4;
        uint64_t v26 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

unint64_t sub_1A74087A0(unint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a3) {
    return 0;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(a4 + 16);
    if (*(void *)(v4 + 16) > result)
    {
      uint64_t v5 = *(void *)(v4 + 16 * result + 32);
      swift_bridgeObjectRetain();
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A7408800(uint64_t a1, uint64_t a2)
{
  unint64_t v34 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    uint64_t v33 = v4 + 32;
    swift_retain();
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v6 = (uint64_t *)(a1 + 40);
    uint64_t v32 = v4;
    while (1)
    {
      unint64_t v8 = *(v6 - 1);
      if ((v8 & 0x8000000000000000) != 0) {
        break;
      }
      if (v8 >= *(void *)(v4 + 16)) {
        goto LABEL_21;
      }
      uint64_t v9 = *v6;
      uint64_t v10 = (uint64_t *)(v33 + 16 * v8);
      uint64_t v12 = *v10;
      uint64_t v11 = v10[1];
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_1A72B2210(v12, v11);
      uint64_t v15 = v5[2];
      BOOL v16 = (v13 & 1) == 0;
      uint64_t v17 = v15 + v16;
      if (__OFADD__(v15, v16)) {
        goto LABEL_22;
      }
      char v18 = v13;
      if (v5[3] < v17)
      {
        sub_1A72B8550(v17, 1);
        uint64_t v5 = v34;
        unint64_t v19 = sub_1A72B2210(v12, v11);
        if ((v18 & 1) != (v20 & 1)) {
          goto LABEL_24;
        }
        unint64_t v14 = v19;
      }
      if (v18)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = v5[7];
        long long v22 = *(void **)(v21 + 8 * v14);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v21 + 8 * v14) = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          long long v22 = sub_1A72AD804(0, v22[2] + 1, 1, v22);
          *(void *)(v21 + 8 * v14) = v22;
        }
        unint64_t v25 = v22[2];
        unint64_t v24 = v22[3];
        if (v25 >= v24 >> 1)
        {
          long long v22 = sub_1A72AD804((void *)(v24 > 1), v25 + 1, 1, v22);
          *(void *)(v21 + 8 * v14) = v22;
        }
        uint64_t v22[2] = v25 + 1;
        uint64_t v7 = &v22[2 * v25];
        void v7[4] = v8;
        v7[5] = v9;
        uint64_t v4 = v32;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0EE8);
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1A75785A0;
        *(void *)(v26 + 32) = v8;
        *(void *)(v26 + 40) = v9;
        v5[(v14 >> 6) + 8] |= 1 << v14;
        long long v27 = (uint64_t *)(v5[6] + 16 * v14);
        *long long v27 = v12;
        v27[1] = v11;
        *(void *)(v5[7] + 8 * v14) = v26;
        uint64_t v28 = v5[2];
        BOOL v29 = __OFADD__(v28, 1);
        uint64_t v30 = v28 + 1;
        if (v29) {
          goto LABEL_23;
        }
        v5[2] = v30;
      }
      v6 += 2;
      if (!--v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    swift_release_n();
    uint64_t result = sub_1A7574010();
    __break(1u);
  }
  else
  {
    swift_retain();
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
LABEL_19:
    swift_bridgeObjectRelease();
    swift_release();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_1A7408A90(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3130);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1A74094BC();
  sub_1A7574190();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    char v10 = 0;
    sub_1A72A817C(&qword_1EB700070);
    sub_1A7573A50();
    uint64_t v7 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3140);
    char v10 = 1;
    sub_1A7409510(&qword_1E96F3148, &qword_1E96F2870);
    swift_bridgeObjectRetain();
    sub_1A7573A50();
    LOBYTE(v11) = 2;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    sub_1A7573A00();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1A7408DBC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736C6562616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726F74636576 && a2 == 0xE700000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A7408F0C(void *a1, uint64_t a2)
{
  unint64_t v3 = a1[2];
  if (v3 < 2)
  {
    if (v3)
    {
      unint64_t v16 = a1[4];
      uint64_t v17 = a1[5];
    }
    else
    {
      unint64_t v16 = 0;
      uint64_t v17 = 0;
    }
    char v22 = v3 == 0;
    swift_retain_n();
    unint64_t v19 = sub_1A74087A0(v16, v17, v22, a2);
    swift_release_n();
    return v19;
  }
  swift_retain_n();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1A7408800(v4, a2);
  uint64_t v6 = sub_1A7404E8C(v5);
  swift_bridgeObjectRelease();
  unint64_t v24 = (void *)v6;
  swift_bridgeObjectRetain();
  sub_1A74050B4((uint64_t *)&v24, (uint64_t (*)(uint64_t))sub_1A74F9EA4, sub_1A7407B40);
  swift_bridgeObjectRelease();
  uint64_t v7 = v24;
  if (qword_1E96F0818 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1A7571E90();
  __swift_project_value_buffer(v8, (uint64_t)qword_1E96F3108);
  swift_retain();
  uint64_t v9 = sub_1A7571E80();
  os_log_type_t v10 = sub_1A7572FF0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    unint64_t v24 = (void *)v12;
    *(_DWORD *)uint64_t v11 = 136446210;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13B0);
    uint64_t v14 = MEMORY[0x1AD0CAC20](v7, v13);
    sub_1A72D1730(v14, v15, (uint64_t *)&v24);
    sub_1A7573250();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v9, v10, "kNN list index and neighbor counts: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v12, -1, -1);
    MEMORY[0x1AD0CD330](v11, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v18 = v7[2];
  if (v18 == 1)
  {
    unint64_t v19 = v7[4];
    swift_bridgeObjectRetain();
    swift_release_n();
    swift_release();
    return v19;
  }
  if (v18)
  {
    unint64_t v19 = v7[4];
    uint64_t v20 = v7[6];
    uint64_t v21 = v7[9];
    swift_bridgeObjectRetain();
    swift_release();
    swift_release_n();
    if (v21 >= v20)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    return v19;
  }
  __break(1u);
  swift_release_n();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for REMkNNByTitleEmbedding()
{
  return self;
}

uint64_t method lookup function for REMkNNByTitleEmbedding(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMkNNByTitleEmbedding);
}

uint64_t dispatch thunk of REMkNNByTitleEmbedding.__allocating_init(from:with:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of REMkNNByTitleEmbedding.__allocating_init(vectors:labels:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t destroy for REMkNNByTitleEmbedding.ModelData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for REMkNNByTitleEmbedding.ModelData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMkNNByTitleEmbedding.ModelData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMkNNByTitleEmbedding.ModelData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMkNNByTitleEmbedding.ModelData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMkNNByTitleEmbedding.ModelData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMkNNByTitleEmbedding.ModelData()
{
  return &type metadata for REMkNNByTitleEmbedding.ModelData;
}

unint64_t sub_1A74094BC()
{
  unint64_t result = qword_1E96F3138;
  if (!qword_1E96F3138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3138);
  }
  return result;
}

uint64_t sub_1A7409510(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3140);
    sub_1A73B403C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for REMkNNByTitleEmbedding.ModelData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A740965CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMkNNByTitleEmbedding.ModelData.CodingKeys()
{
  return &type metadata for REMkNNByTitleEmbedding.ModelData.CodingKeys;
}

unint64_t sub_1A7409698()
{
  unint64_t result = qword_1E96F3160;
  if (!qword_1E96F3160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3160);
  }
  return result;
}

unint64_t sub_1A74096F0()
{
  unint64_t result = qword_1E96F3168;
  if (!qword_1E96F3168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3168);
  }
  return result;
}

unint64_t sub_1A7409748()
{
  unint64_t result = qword_1E96F3170;
  if (!qword_1E96F3170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3170);
  }
  return result;
}

uint64_t Date.startOfDay.getter()
{
  return sub_1A7409B78(MEMORY[0x1E4F27B48]);
}

uint64_t Date.init(testing_parsedFrom:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1A74097EC(a1, 0xD000000000000012, 0x80000001A75A2150, a2);
}

uint64_t Date.init(testing_allDayParsedFrom:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1A74097EC(a1, 0x79792F64642F4D4DLL, 0xEA00000000007979, a2);
}

uint64_t sub_1A74097EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v27 = a1;
  uint64_t v28 = a4;
  uint64_t v4 = sub_1A7571B60();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v8 - 8);
  os_log_type_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A7571D30();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_allocWithZone(MEMORY[0x1E4F28C10]);
  id v16 = objc_msgSend(v15, sel_init, v25, v26, v27);
  sub_1A7571C00();
  uint64_t v17 = (void *)sub_1A7571C30();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  objc_msgSend(v16, sel_setLocale_, v17);

  uint64_t v18 = (void *)sub_1A75725E0();
  objc_msgSend(v16, sel_setDateFormat_, v18);

  objc_msgSend(v16, sel_setLenient_, 1);
  unint64_t v19 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v16, sel_dateFromString_, v19);

  if (!v20)
  {

    char v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v22(v10, 1, 1, v4);
LABEL_5:
    sub_1A731D4F8((uint64_t)v10);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v22)(v28, 1, 1, v4);
  }
  sub_1A7571B20();

  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v21(v10, v7, v4);
  char v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v22(v10, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
    goto LABEL_5;
  }
  unint64_t v24 = v28;
  v21(v28, v10, v4);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v22)(v24, 0, 1, v4);
}

uint64_t Date.endOfDay.getter()
{
  return sub_1A7409B78((void (*)(uint64_t))Calendar.endOfDay(for:));
}

uint64_t sub_1A7409B78(void (*a1)(uint64_t))
{
  uint64_t v3 = sub_1A7571E00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571DC0();
  a1(v1);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Date.init(fussyParsedFrom:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v32 = a3;
  v35[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1A7571B60();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v12 = a1;
  }
  uint64_t v13 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v13 = 11;
  }
  v35[0] = (id)15;
  v35[1] = (id)(v13 | (v12 << 16));
  uint64_t v33 = a1;
  unint64_t v34 = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F30B8);
  sub_1A740175C();
  sub_1A72DF534();
  uint64_t v14 = sub_1A75731E0();
  uint64_t v16 = v15;
  id v17 = objc_allocWithZone(MEMORY[0x1E4F28BE8]);
  v35[0] = 0;
  id v18 = objc_msgSend(v17, sel_initWithTypes_error_, 8, v35);
  if (v18)
  {
    unint64_t v19 = v18;
    id v20 = v35[0];
    uint64_t v21 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    id v22 = objc_msgSend(v19, sel_firstMatchInString_options_range_, v21, 0, v14, v16);

    if (v22)
    {
      id v23 = objc_msgSend(v22, sel_date);
      if (v23)
      {
        unint64_t v24 = v23;
        sub_1A7571B20();

        uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v25(v11, v8, v5);
        uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
        v26(v11, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) != 1)
        {
          uint64_t v27 = v32;
          v25(v32, v11, v5);
          return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v26)(v27, 0, 1, v5);
        }
      }
      else
      {

        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
      }
      sub_1A731D4F8((uint64_t)v11);
    }
    else
    {
    }
  }
  else
  {
    id v29 = v35[0];
    uint64_t v30 = (void *)sub_1A7571850();

    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v32, 1, 1, v5);
}

uint64_t Date.testing_localizedString.getter()
{
  uint64_t v0 = sub_1A7571D30();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  sub_1A7571C00();
  uint64_t v5 = (void *)sub_1A7571C30();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setLocale_, v5);

  objc_msgSend(v4, sel_setDateStyle_, 1);
  objc_msgSend(v4, sel_setTimeStyle_, 1);
  uint64_t v6 = (void *)sub_1A7571AB0();
  id v7 = objc_msgSend(v4, sel_stringFromDate_, v6);

  uint64_t v8 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v10 = v9;

  v13[4] = v8;
  v13[5] = v10;
  v13[2] = 11501794;
  v13[3] = 0xA300000000000000;
  v13[0] = 32;
  v13[1] = 0xE100000000000000;
  sub_1A72DF534();
  uint64_t v11 = sub_1A75732C0();

  swift_bridgeObjectRelease();
  return v11;
}

BOOL Date.isInThePast.getter()
{
  sub_1A7571AE0();
  return v0 < 0.0;
}

BOOL Date.isAlmostEqual(to:absoluteTolerance:)(double a1)
{
  sub_1A7571B40();
  return fabs(v2) < a1;
}

uint64_t static Date.eveningStartHour.getter()
{
  return 18;
}

uint64_t Optional<A>.orDistantPast.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A740A294(MEMORY[0x1E4F27868], a1);
}

uint64_t Optional<A>.orDistantFuture.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A740A294(MEMORY[0x1E4F27870], a1);
}

uint64_t sub_1A740A294@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A73C3428(v4, (uint64_t)v8);
  uint64_t v9 = sub_1A7571B60();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v8, v9);
  }
  a1();
  return sub_1A731D4F8((uint64_t)v8);
}

uint64_t Array<A>.removeDuplicates()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = Array<A>.removingDuplicates()(*v2, *(void *)(a1 + 16), a2);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = v3;
  return result;
}

uint64_t Array<A>.removingDuplicates()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v34 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v34 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v31 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v30 = (char *)&v27 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v27 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v37 = sub_1A75723A0();
  uint64_t v15 = sub_1A7572A80();
  if (MEMORY[0x1AD0CAD10](v15, a2)) {
    uint64_t v16 = sub_1A740A7D4(v15, a2, a3);
  }
  else {
    uint64_t v16 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  v36[1] = v16;
  uint64_t v17 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1AD0CAD00](v17, a2))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v37;
  }
  uint64_t v27 = v6;
  uint64_t v28 = v14;
  uint64_t v18 = 0;
  uint64_t v35 = (void (**)(char *, unint64_t, uint64_t))(v34 + 16);
  uint64_t v32 = (void (**)(char *, uint64_t))(v34 + 8);
  uint64_t v33 = (void (**)(char *, char *, uint64_t))(v34 + 32);
  uint64_t v29 = v5;
  while (1)
  {
    char v19 = sub_1A7572AA0();
    sub_1A7572A50();
    if (v19)
    {
      id v20 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      v20(v14, v5+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v18, a2);
      uint64_t v21 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_15;
      }
      goto LABEL_10;
    }
    uint64_t result = sub_1A75735F0();
    if (v27 != 8) {
      break;
    }
    v36[0] = result;
    id v20 = *v35;
    (*v35)(v14, (unint64_t)v36, a2);
    swift_unknownObjectRelease();
    uint64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
LABEL_10:
    (*v33)(v12, v14, a2);
    swift_bridgeObjectRetain();
    char v22 = sub_1A7572CE0();
    swift_bridgeObjectRelease();
    if (v22)
    {
      (*v32)(v12, a2);
    }
    else
    {
      id v23 = v30;
      v20(v30, (unint64_t)v12, a2);
      sub_1A7572B30();
      sub_1A7572AE0();
      v20(v31, (unint64_t)v12, a2);
      sub_1A7572CF0();
      sub_1A7572CC0();
      unint64_t v24 = *v32;
      uint64_t v25 = v23;
      uint64_t v14 = v28;
      uint64_t v5 = v29;
      (*v32)(v25, a2);
      v24(v12, a2);
    }
    ++v18;
    if (v21 == MEMORY[0x1AD0CAD00](v5, a2)) {
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A740A7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v51 = (char *)&v39 - v11;
  uint64_t v40 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v39 - v14;
  if (MEMORY[0x1AD0CACC0](v13))
  {
    sub_1A7573520();
    uint64_t v16 = sub_1A7573510();
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC870];
  }
  uint64_t v44 = MEMORY[0x1AD0CAD10](v5, a2);
  if (!v44) {
    return v16;
  }
  uint64_t v17 = 0;
  uint64_t v49 = (void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
  uint64_t v50 = v16 + 56;
  uint64_t v46 = v6 + 32;
  uint64_t v48 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v41 = v6;
  uint64_t v42 = v5;
  uint64_t v43 = v15;
  while (1)
  {
    char v18 = sub_1A7572AA0();
    sub_1A7572A50();
    if (v18)
    {
      char v19 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
      v19(v15, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17), a2);
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = sub_1A75735F0();
      if (v40 != 8) {
        goto LABEL_23;
      }
      uint64_t v52 = result;
      char v19 = *v49;
      (*v49)(v15, &v52, a2);
      swift_unknownObjectRelease();
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20)
      {
LABEL_20:
        __break(1u);
        return v16;
      }
    }
    uint64_t v47 = v21;
    char v45 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v45(v51, v15, a2);
    uint64_t v22 = sub_1A7572510();
    uint64_t v23 = v16;
    uint64_t v24 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v25 = v22 & ~v24;
    unint64_t v26 = v25 >> 6;
    uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
    uint64_t v28 = 1 << v25;
    uint64_t v29 = *(void *)(v6 + 72);
    if (((1 << v25) & v27) != 0)
    {
      uint64_t v30 = ~v24;
      do
      {
        v19(v9, (uint64_t *)(*(void *)(v23 + 48) + v29 * v25), a2);
        uint64_t v31 = a3;
        char v32 = sub_1A75725C0();
        uint64_t v33 = *v48;
        (*v48)(v9, a2);
        if (v32)
        {
          v33(v51, a2);
          a3 = v31;
          uint64_t v6 = v41;
          uint64_t v5 = v42;
          uint64_t v16 = v23;
          goto LABEL_7;
        }
        unint64_t v25 = (v25 + 1) & v30;
        unint64_t v26 = v25 >> 6;
        uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
        uint64_t v28 = 1 << v25;
        a3 = v31;
      }
      while ((v27 & (1 << v25)) != 0);
      uint64_t v6 = v41;
      uint64_t v5 = v42;
    }
    uint64_t v34 = v51;
    *(void *)(v50 + 8 * v26) = v28 | v27;
    unint64_t v35 = *(void *)(v23 + 48) + v29 * v25;
    uint64_t v16 = v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v45)(v35, v34, a2);
    uint64_t v37 = *(void *)(v23 + 16);
    BOOL v20 = __OFADD__(v37, 1);
    uint64_t v38 = v37 + 1;
    if (v20) {
      break;
    }
    *(void *)(v23 + 16) = v38;
LABEL_7:
    uint64_t v15 = v43;
    uint64_t v17 = v47;
    if (v47 == v44) {
      return v16;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1A740AB90()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(const os_unfair_lock **)(v1 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v0 + 24))
  {
    uint64_t v3 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v0 + 24) = 1;
    os_unfair_lock_assert_owner(v2);
    swift_beginAccess();
    uint64_t v4 = *(void **)(v0 + 40);
    *(void *)(v0 + 40) = 0;
    char v5 = *(unsigned char *)(v0 + 48);
    *(unsigned char *)(v0 + 48) = 0;
    sub_1A7413B00(v4, v5);
    swift_beginAccess();
    uint64_t v6 = *(void *)(v0 + 32);
    *(void *)(v0 + 32) = MEMORY[0x1E4FBC860];
    uint64_t v11 = 0;
    char v12 = 0;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    *(void *)(v7 + 24) = v6;
    sub_1A734E5D8((uint64_t)&v11, v7 + 32, &qword_1EB7005B0);
    swift_retain();
    uint64_t v3 = sub_1A7413B2C;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  ((void (*)(uint64_t, uint64_t))v3)(v8, v9);
  return swift_release();
}

uint64_t sub_1A740ACBC(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(const os_unfair_lock **)(v3 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v1 + 24))
  {
    char v5 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v1 + 24) = 1;
    id v6 = a1;
    os_unfair_lock_assert_owner(v4);
    swift_beginAccess();
    uint64_t v7 = *(void **)(v1 + 40);
    *(void *)(v1 + 40) = a1;
    unsigned __int8 v8 = *(unsigned char *)(v1 + 48);
    *(unsigned char *)(v1 + 48) = 0;
    id v9 = v6;
    sub_1A7413B70(v7, v8);
    swift_beginAccess();
    uint64_t v10 = *(void *)(v1 + 32);
    *(void *)(v1 + 32) = MEMORY[0x1E4FBC860];
    uint64_t v15 = a1;
    char v16 = 0;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v3;
    *(void *)(v11 + 24) = v10;
    sub_1A734E5D8((uint64_t)&v15, v11 + 32, &qword_1EB7005A8);
    swift_retain();
    char v5 = sub_1A7413B9C;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  ((void (*)(uint64_t, uint64_t))v5)(v12, v13);
  return swift_release();
}

uint64_t sub_1A740AE08(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  id v6 = *(const os_unfair_lock **)(v5 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v2 + 24))
  {
    uint64_t v7 = (void (*)(void))nullsub_1;
  }
  else
  {
    *(unsigned char *)(v2 + 24) = 1;
    swift_bridgeObjectRetain();
    os_unfair_lock_assert_owner(v6);
    swift_beginAccess();
    unsigned __int8 v8 = *(void **)(v2 + 40);
    id v9 = *(void **)(v2 + 48);
    *(void *)(v2 + 40) = a1;
    *(void *)(v2 + 48) = a2;
    char v10 = *(unsigned char *)(v2 + 56);
    *(unsigned char *)(v2 + 56) = 0;
    swift_bridgeObjectRetain();
    sub_1A74138D8(v8, v9, v10);
    swift_beginAccess();
    uint64_t v11 = *(void *)(v2 + 32);
    *(void *)(v2 + 32) = MEMORY[0x1E4FBC860];
    v14[0] = a1;
    v14[1] = a2;
    char v15 = 0;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v5;
    *(void *)(v12 + 24) = v11;
    sub_1A734E5D8((uint64_t)v14, v12 + 32, &qword_1E96F2820);
    swift_retain();
    uint64_t v7 = (void (*)(void))sub_1A74138F0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  v7();
  return swift_release();
}

uint64_t sub_1A740AF68(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(const os_unfair_lock **)(v3 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v5 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v1 + 24) = 1;
    id v6 = a1;
    os_unfair_lock_assert_owner(v4);
    swift_beginAccess();
    uint64_t v7 = *(void **)(v1 + 40);
    *(void *)(v1 + 40) = a1;
    unsigned __int8 v8 = *(unsigned char *)(v1 + 48);
    *(unsigned char *)(v1 + 48) = 0;
    id v9 = v6;
    sub_1A7413B70(v7, v8);
    swift_beginAccess();
    uint64_t v10 = *(void *)(v1 + 32);
    *(void *)(v1 + 32) = MEMORY[0x1E4FBC860];
    char v15 = a1;
    char v16 = 0;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v3;
    *(void *)(v11 + 24) = v10;
    sub_1A734E5D8((uint64_t)&v15, v11 + 32, (uint64_t *)&unk_1E96F3220);
    swift_retain();
    uint64_t v5 = sub_1A7413B9C;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  ((void (*)(uint64_t, uint64_t))v5)(v12, v13);
  return swift_release();
}

uint64_t sub_1A740B0B4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 16);
  unsigned __int8 v8 = *(const os_unfair_lock **)(v7 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v3 + 24))
  {
    id v9 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v3 + 24) = 1;
    id v10 = a1;
    swift_bridgeObjectRetain();
    os_unfair_lock_assert_owner(v8);
    swift_beginAccess();
    uint64_t v11 = *(void **)(v3 + 40);
    uint64_t v12 = *(void *)(v3 + 48);
    uint64_t v13 = *(void *)(v3 + 56);
    *(void *)(v3 + 40) = a1;
    *(void *)(v3 + 48) = a2;
    *(void *)(v3 + 56) = a3;
    char v14 = *(unsigned char *)(v3 + 64);
    *(unsigned char *)(v3 + 64) = 0;
    id v15 = v10;
    swift_bridgeObjectRetain();
    sub_1A7413658(v11, v12, v13, v14);
    swift_beginAccess();
    uint64_t v16 = *(void *)(v3 + 32);
    *(void *)(v3 + 32) = MEMORY[0x1E4FBC860];
    v23[0] = a1;
    v23[1] = a2;
    v23[2] = a3;
    char v24 = 0;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v7;
    *(void *)(v17 + 24) = v16;
    sub_1A734E5D8((uint64_t)v23, v17 + 32, &qword_1E96F31C0);
    swift_retain();
    id v9 = sub_1A7413670;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v18, v19, v20, v21);
  return swift_release();
}

uint64_t sub_1A740B23C(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(const os_unfair_lock **)(v3 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v5 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v1 + 24) = 1;
    id v6 = a1;
    os_unfair_lock_assert_owner(v4);
    swift_beginAccess();
    uint64_t v7 = *(void **)(v1 + 40);
    *(void *)(v1 + 40) = a1;
    char v8 = *(unsigned char *)(v1 + 48);
    *(unsigned char *)(v1 + 48) = 1;
    id v9 = a1;
    sub_1A7413B00(v7, v8);
    swift_beginAccess();
    uint64_t v10 = *(void *)(v1 + 32);
    *(void *)(v1 + 32) = MEMORY[0x1E4FBC860];
    id v15 = a1;
    char v16 = 1;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v3;
    *(void *)(v11 + 24) = v10;
    sub_1A734E5D8((uint64_t)&v15, v11 + 32, &qword_1EB7005B0);
    swift_retain();
    uint64_t v5 = sub_1A7413B2C;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  ((void (*)(uint64_t, uint64_t))v5)(v12, v13);
  return swift_release();
}

uint64_t sub_1A740B38C(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(const os_unfair_lock **)(v3 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v5 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v1 + 24) = 1;
    id v6 = a1;
    os_unfair_lock_assert_owner(v4);
    swift_beginAccess();
    uint64_t v7 = *(void **)(v1 + 40);
    *(void *)(v1 + 40) = a1;
    unsigned __int8 v8 = *(unsigned char *)(v1 + 48);
    *(unsigned char *)(v1 + 48) = 1;
    id v9 = a1;
    sub_1A7413B70(v7, v8);
    swift_beginAccess();
    uint64_t v10 = *(void *)(v1 + 32);
    *(void *)(v1 + 32) = MEMORY[0x1E4FBC860];
    id v15 = a1;
    char v16 = 1;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v3;
    *(void *)(v11 + 24) = v10;
    sub_1A734E5D8((uint64_t)&v15, v11 + 32, &qword_1EB7005A8);
    swift_retain();
    uint64_t v5 = sub_1A7413B9C;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  ((void (*)(uint64_t, uint64_t))v5)(v12, v13);
  return swift_release();
}

uint64_t sub_1A740B4DC(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(const os_unfair_lock **)(v3 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v5 = (void (*)(void))nullsub_1;
  }
  else
  {
    *(unsigned char *)(v1 + 24) = 1;
    id v6 = a1;
    os_unfair_lock_assert_owner(v4);
    swift_beginAccess();
    uint64_t v7 = *(void **)(v1 + 40);
    unsigned __int8 v8 = *(void **)(v1 + 48);
    *(void *)(v1 + 40) = a1;
    *(void *)(v1 + 48) = 0;
    char v9 = *(unsigned char *)(v1 + 56);
    *(unsigned char *)(v1 + 56) = 1;
    id v10 = a1;
    sub_1A74138D8(v7, v8, v9);
    swift_beginAccess();
    uint64_t v11 = *(void *)(v1 + 32);
    *(void *)(v1 + 32) = MEMORY[0x1E4FBC860];
    v14[0] = a1;
    v14[1] = 0;
    char v15 = 1;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v3;
    *(void *)(v12 + 24) = v11;
    sub_1A734E5D8((uint64_t)v14, v12 + 32, &qword_1E96F2820);
    swift_retain();
    uint64_t v5 = (void (*)(void))sub_1A74138F0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  v5();
  return swift_release();
}

uint64_t sub_1A740B638(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(const os_unfair_lock **)(v3 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v5 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v1 + 24) = 1;
    id v6 = a1;
    os_unfair_lock_assert_owner(v4);
    swift_beginAccess();
    uint64_t v7 = *(void **)(v1 + 40);
    uint64_t v8 = *(void *)(v1 + 48);
    uint64_t v9 = *(void *)(v1 + 56);
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 40) = a1;
    char v10 = *(unsigned char *)(v1 + 64);
    *(unsigned char *)(v1 + 64) = 1;
    id v11 = a1;
    sub_1A7413658(v7, v8, v9, v10);
    swift_beginAccess();
    uint64_t v12 = *(void *)(v1 + 32);
    *(void *)(v1 + 32) = MEMORY[0x1E4FBC860];
    v19[1] = 0;
    void v19[2] = 0;
    v19[0] = a1;
    char v20 = 1;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v3;
    *(void *)(v13 + 24) = v12;
    sub_1A734E5D8((uint64_t)v19, v13 + 32, &qword_1E96F31C0);
    swift_retain();
    uint64_t v5 = sub_1A7413670;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v5)(v14, v15, v16, v17);
  return swift_release();
}

uint64_t sub_1A740B7A4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(const os_unfair_lock **)(v1 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v0 + 24))
  {
    uint64_t v3 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v0 + 24) = 1;
    os_unfair_lock_assert_owner(v2);
    swift_beginAccess();
    uint64_t v4 = *(void **)(v0 + 40);
    *(void *)(v0 + 40) = 0;
    char v5 = *(unsigned char *)(v0 + 48);
    *(unsigned char *)(v0 + 48) = 2;
    sub_1A7413B00(v4, v5);
    swift_beginAccess();
    uint64_t v6 = *(void *)(v0 + 32);
    *(void *)(v0 + 32) = MEMORY[0x1E4FBC860];
    uint64_t v11 = 0;
    char v12 = 2;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    *(void *)(v7 + 24) = v6;
    sub_1A734E5D8((uint64_t)&v11, v7 + 32, &qword_1EB7005B0);
    swift_retain();
    uint64_t v3 = sub_1A7413B2C;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  ((void (*)(uint64_t, uint64_t))v3)(v8, v9);
  return swift_release();
}

uint64_t sub_1A740B8D4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(const os_unfair_lock **)(v1 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v0 + 24))
  {
    uint64_t v3 = (void (*)(void))nullsub_1;
  }
  else
  {
    *(unsigned char *)(v0 + 24) = 1;
    os_unfair_lock_assert_owner(v2);
    swift_beginAccess();
    uint64_t v4 = *(void **)(v0 + 40);
    char v5 = *(void **)(v0 + 48);
    *(void *)(v0 + 40) = 0;
    *(void *)(v0 + 48) = 0;
    char v6 = *(unsigned char *)(v0 + 56);
    *(unsigned char *)(v0 + 56) = 2;
    sub_1A74138D8(v4, v5, v6);
    swift_beginAccess();
    uint64_t v7 = *(void *)(v0 + 32);
    *(void *)(v0 + 32) = MEMORY[0x1E4FBC860];
    v10[0] = 0;
    v10[1] = 0;
    char v11 = 2;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v1;
    *(void *)(v8 + 24) = v7;
    sub_1A734E5D8((uint64_t)v10, v8 + 32, &qword_1E96F2820);
    swift_retain();
    uint64_t v3 = (void (*)(void))sub_1A74138F0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  v3();
  return swift_release();
}

uint64_t sub_1A740BA04()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(const os_unfair_lock **)(v1 + 16);
  os_unfair_lock_lock_with_options();
  if (*(unsigned char *)(v0 + 24))
  {
    uint64_t v3 = nullsub_1;
  }
  else
  {
    *(unsigned char *)(v0 + 24) = 1;
    os_unfair_lock_assert_owner(v2);
    swift_beginAccess();
    uint64_t v4 = *(void **)(v0 + 40);
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v6 = *(void *)(v0 + 56);
    *(void *)(v0 + 48) = 0;
    *(void *)(v0 + 56) = 0;
    *(void *)(v0 + 40) = 0;
    char v7 = *(unsigned char *)(v0 + 64);
    *(unsigned char *)(v0 + 64) = 2;
    sub_1A7413658(v4, v5, v6, v7);
    swift_beginAccess();
    uint64_t v8 = *(void *)(v0 + 32);
    *(void *)(v0 + 32) = MEMORY[0x1E4FBC860];
    memset(v15, 0, sizeof(v15));
    char v16 = 2;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = v8;
    sub_1A734E5D8((uint64_t)v15, v9 + 32, &qword_1E96F31C0);
    swift_retain();
    uint64_t v3 = sub_1A7413670;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v10, v11, v12, v13);
  return swift_release();
}

uint64_t sub_1A740BB40(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB700678);
  swift_allocObject();
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_1A740D51C(v8);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a2;
  v10[3] = a3;
  void v10[4] = v9;
  uint64_t v11 = *(void *)(v7 + 16);
  swift_retain_n();
  swift_retain();
  os_unfair_lock_lock_with_options();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = 0;
  *(unsigned char *)(v12 + 32) = 1;
  *(void *)(v12 + 40) = sub_1A7413A90;
  *(void *)(v12 + 48) = v10;
  *(void *)(v12 + 56) = sub_1A7413A1C;
  *(void *)(v12 + 64) = v9;
  *(void *)(v12 + 72) = sub_1A74139EC;
  *(void *)(v12 + 80) = v9;
  id v13 = a1;
  swift_retain();
  swift_retain_n();
  uint64_t v14 = (void (*)(void))sub_1A73A8C98((uint64_t)sub_1A7413AA4, v12);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  v14();
  swift_release_n();
  swift_release();
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v16 = *(void *)(v9 + 16);
  if (v16)
  {
    swift_retain();
    swift_release();
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A740BD10(void (*a1)(uint64_t))
{
  if (*(void *)(v1 + 24) && swift_weakLoadStrong())
  {
    swift_retain();
    swift_retain();
    uint64_t v3 = swift_release();
    a1(v3);
    swift_release();
    swift_release();
  }
  *(void *)(v1 + 24) = 0;

  return swift_release();
}

uint64_t sub_1A740BDAC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = v2;
  if (*(void *)(v2 + 24) && swift_weakLoadStrong())
  {
    swift_retain();
    swift_retain();
    swift_release();
    a2(a1);
    swift_release();
    swift_release();
  }
  *(void *)(v3 + 24) = 0;

  return swift_release();
}

uint64_t sub_1A740BE50(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v3 = a1;
  a2(&v3);
  return sub_1A740BF4C();
}

uint64_t sub_1A740BF4C()
{
  if (*(void *)(v0 + 24) && swift_weakLoadStrong())
  {
    swift_retain();
    swift_retain();
    swift_release();
    sub_1A740AB90();
    swift_release();
    swift_release();
  }
  *(void *)(v0 + 24) = 0;

  return swift_release();
}

uint64_t sub_1A740BFD8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(v4 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB700678);
  swift_allocObject();
  uint64_t v9 = swift_retain();
  uint64_t v10 = sub_1A740D51C(v9);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = v11;
  v12[3] = v10;
  v12[4] = a3;
  void v12[5] = a4;
  uint64_t v13 = *(void *)(v8 + 16);
  swift_retain_n();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock_with_options();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = 0;
  *(unsigned char *)(v14 + 32) = 1;
  *(void *)(v14 + 40) = sub_1A7413DCC;
  *(void *)(v14 + 48) = v12;
  *(void *)(v14 + 56) = sub_1A7413A1C;
  *(void *)(v14 + 64) = v10;
  *(void *)(v14 + 72) = sub_1A74139EC;
  *(void *)(v14 + 80) = v10;
  id v15 = a1;
  swift_retain();
  swift_retain_n();
  uint64_t v16 = (void (*)(void))sub_1A73A8C98((uint64_t)sub_1A7413AA4, v14);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  v16();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v18 = *(void *)(v10 + 16);
  if (v18)
  {
    swift_retain();
    swift_release();
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A740C1E8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t))
{
  uint64_t v8 = a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    a4(&v8, Strong);
    sub_1A740BF4C();
    swift_release();
  }
  else
  {
    sub_1A72C8344();
    uint64_t v6 = (void *)swift_allocError();
    *(void *)uint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    *(void *)(v7 + 16) = 0;
    *(void *)(v7 + 24) = 1;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_OWORD *)(v7 + 48) = 0u;
    sub_1A740BDAC((uint64_t)v6, (void (*)(uint64_t))sub_1A740B23C);
  }
}

uint64_t sub_1A740C388(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F31F0);
  swift_allocObject();
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_1A740D65C(v8);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a2;
  v10[3] = a3;
  void v10[4] = v9;
  uint64_t v11 = *(void *)(v7 + 16);
  swift_retain_n();
  swift_retain();
  os_unfair_lock_lock_with_options();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = 0;
  *(unsigned char *)(v12 + 32) = 1;
  *(void *)(v12 + 40) = sub_1A74137E8;
  *(void *)(v12 + 48) = v10;
  *(void *)(v12 + 56) = sub_1A74137B4;
  *(void *)(v12 + 64) = v9;
  *(void *)(v12 + 72) = sub_1A7413784;
  *(void *)(v12 + 80) = v9;
  id v13 = a1;
  swift_retain();
  swift_retain_n();
  uint64_t v14 = (void (*)(void))sub_1A73A8E68((uint64_t)sub_1A7413508, v12);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  v14();
  swift_release_n();
  swift_release();
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v16 = *(void *)(v9 + 16);
  if (v16)
  {
    swift_retain();
    swift_release();
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A740C558(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F31A8);
  swift_allocObject();
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_1A740D7A0(v8);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a2;
  v10[3] = a3;
  void v10[4] = v9;
  uint64_t v11 = *(void *)(v7 + 16);
  swift_retain_n();
  swift_retain();
  os_unfair_lock_lock_with_options();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = 0;
  *(unsigned char *)(v12 + 32) = 1;
  *(void *)(v12 + 40) = sub_1A74134F4;
  *(void *)(v12 + 48) = v10;
  *(void *)(v12 + 56) = sub_1A74134C0;
  *(void *)(v12 + 64) = v9;
  *(void *)(v12 + 72) = sub_1A7413490;
  *(void *)(v12 + 80) = v9;
  id v13 = a1;
  swift_retain();
  swift_retain_n();
  uint64_t v14 = (void (*)(void))sub_1A73A8E68((uint64_t)sub_1A7413508, v12);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  v14();
  swift_release_n();
  swift_release();
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v16 = *(void *)(v9 + 16);
  if (v16)
  {
    swift_retain();
    swift_release();
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A740C728(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a1;
  uint64_t v5 = *(void *)(a2(&v13) + 16);
  uint64_t v6 = qword_1EB705720;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_1EB704C70;
  uint64_t v8 = *(void *)(v5 + 16);
  swift_retain_n();
  os_unfair_lock_lock_with_options();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = 0;
  *(unsigned char *)(v9 + 32) = 1;
  *(void *)(v9 + 40) = sub_1A74137FC;
  *(void *)(v9 + 48) = a4;
  *(void *)(v9 + 56) = sub_1A74137B4;
  *(void *)(v9 + 64) = a4;
  *(void *)(v9 + 72) = sub_1A7413784;
  *(void *)(v9 + 80) = a4;
  id v10 = v7;
  swift_retain_n();
  uint64_t v11 = sub_1A73A9038((uint64_t)sub_1A7413810, v9);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  v11();
  swift_release();
  swift_release();
  swift_release_n();

  return swift_release();
}

uint64_t sub_1A740C990(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a1;
  uint64_t v5 = *(void *)(a2(&v13) + 16);
  uint64_t v6 = qword_1EB705720;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_1EB704C70;
  uint64_t v8 = *(void *)(v5 + 16);
  swift_retain_n();
  os_unfair_lock_lock_with_options();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = 0;
  *(unsigned char *)(v9 + 32) = 1;
  *(void *)(v9 + 40) = sub_1A7413564;
  *(void *)(v9 + 48) = a4;
  *(void *)(v9 + 56) = sub_1A74134C0;
  *(void *)(v9 + 64) = a4;
  *(void *)(v9 + 72) = sub_1A7413490;
  *(void *)(v9 + 80) = a4;
  id v10 = v7;
  swift_retain_n();
  uint64_t v11 = sub_1A73A9210((uint64_t)sub_1A741357C, v9);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  v11();
  swift_release();
  swift_release();
  swift_release_n();

  return swift_release();
}

uint64_t sub_1A740CBF8(uint64_t a1, void (*a2)(uint64_t))
{
  if (*(void *)(a1 + 24) && swift_weakLoadStrong())
  {
    swift_retain();
    swift_retain();
    uint64_t v4 = swift_release();
    a2(v4);
    swift_release();
    swift_release();
  }
  *(void *)(a1 + 24) = 0;

  return swift_release();
}

uint64_t sub_1A740CC94(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  if (*(void *)(a2 + 24) && swift_weakLoadStrong())
  {
    swift_retain();
    swift_retain();
    swift_release();
    a3(a1);
    swift_release();
    swift_release();
  }
  *(void *)(a2 + 24) = 0;

  return swift_release();
}

uint64_t sub_1A740CD38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 24) && swift_weakLoadStrong())
  {
    swift_retain();
    swift_retain();
    swift_release();
    sub_1A740AE08(a1, a2);
    swift_release();
    swift_release();
  }
  *(void *)(a3 + 24) = 0;

  return swift_release();
}

uint64_t sub_1A740CDDC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a4 + 24) && swift_weakLoadStrong())
  {
    swift_retain();
    swift_retain();
    swift_release();
    sub_1A740B0B4(a1, a2, a3);
    swift_release();
    swift_release();
  }
  *(void *)(a4 + 24) = 0;

  return swift_release();
}

uint64_t sub_1A740CE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v24 = a5;
  uint64_t v22 = a3;
  uint64_t v12 = sub_1A7572210();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1A7572260();
  uint64_t v16 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a6;
  void v19[3] = a7;
  v19[4] = a1;
  v19[5] = a2;
  v19[6] = v22;
  v19[7] = a4;
  aBlock[4] = sub_1A7413F74;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A73322E4;
  aBlock[3] = &block_descriptor_158;
  char v20 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A7572240();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1A732938C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
  sub_1A73293E4();
  sub_1A7573380();
  MEMORY[0x1AD0CB2C0](0, v18, v15, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v23);
  return swift_release();
}

void sub_1A740D128(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  a1();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  uint64_t v11 = qword_1EB705720;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1EB704C70;
  uint64_t v13 = sub_1A740BB40(v12, (uint64_t)sub_1A7413F84, v10);
  swift_release();
  swift_release();

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a5;
  *(void *)(v14 + 24) = a6;
  id v15 = (void *)qword_1EB704C70;
  uint64_t v16 = *(void *)(*(void *)(v13 + 16) + 16);
  swift_retain();
  id v17 = v15;
  os_unfair_lock_lock_with_options();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = 0;
  *(unsigned char *)(v18 + 32) = 1;
  *(void *)(v18 + 40) = nullsub_1;
  *(void *)(v18 + 48) = 0;
  *(void *)(v18 + 56) = sub_1A7413FC8;
  *(void *)(v18 + 64) = v14;
  *(void *)(v18 + 72) = nullsub_1;
  *(void *)(v18 + 80) = 0;
  id v20 = v17;
  swift_retain();
  uint64_t v19 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v18);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 16));
  v19();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1A740D340(void (*a1)(void **__return_ptr))
{
  a1(&v11);
  uint64_t v1 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C48);
  uint64_t v2 = swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v3 = swift_allocObject();
  id v4 = v1;
  uint64_t v5 = (_DWORD *)swift_slowAlloc();
  *(void *)(v3 + 16) = v5;
  *uint64_t v5 = 0;
  *(_DWORD *)(v3 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB703BB0);
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 40) = 0;
  *(void *)(v6 + 32) = v7;
  *(unsigned char *)(v6 + 48) = -1;
  *(void *)(v6 + 16) = v3;
  *(unsigned char *)(v6 + 24) = 1;
  swift_beginAccess();
  uint64_t v8 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v4;
  unsigned __int8 v9 = *(unsigned char *)(v6 + 48);
  *(unsigned char *)(v6 + 48) = 0;
  sub_1A7413B70(v8, v9);
  *(void *)(v2 + 16) = v6;

  return v2;
}

uint64_t sub_1A740D51C(uint64_t a1)
{
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = 0;
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C50);
  uint64_t v3 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB703BC0);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 40) = 0;
  *(unsigned char *)(v4 + 48) = -1;
  *(void *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 24) = 0;
  *(void *)(v3 + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700688);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_unownedRetainStrong();
  *(void *)(v1 + 24) = v5;
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *(void *)(v1 + 16) = v3;
  swift_release();
  return v1;
}

uint64_t sub_1A740D65C(uint64_t a1)
{
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = 0;
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3200);
  uint64_t v3 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3208);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 40) = 0;
  *(void *)(v4 + 48) = 0;
  *(void *)(v4 + 32) = v5;
  *(unsigned char *)(v4 + 56) = -1;
  *(void *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 24) = 0;
  *(void *)(v3 + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F3210);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_unownedRetainStrong();
  *(void *)(v1 + 24) = v6;
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *(void *)(v1 + 16) = v3;
  swift_release();
  return v1;
}

uint64_t sub_1A740D7A0(uint64_t a1)
{
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = 0;
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F31C8);
  uint64_t v3 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F31D0);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 40) = 0;
  *(void *)(v4 + 48) = 0;
  *(void *)(v4 + 56) = 0;
  *(unsigned char *)(v4 + 64) = -1;
  *(void *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 24) = 0;
  *(void *)(v3 + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F31D8);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_unownedRetainStrong();
  *(void *)(v1 + 24) = v5;
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *(void *)(v1 + 16) = v3;
  swift_release();
  return v1;
}

uint64_t sub_1A740D8E4(void *a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void (*a8)(void, void), uint64_t a9, uint64_t (*a10)(void), uint64_t a11)
{
  if (!a2)
  {
    char v17 = a5 & 1;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a6;
    *(void *)(v18 + 24) = a7;
    swift_retain();
    sub_1A7364A90(a3, a4, v17, sub_1A72C91B4, v18);
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    swift_retain();
    sub_1A73AA0D0(a1, 1);
    sub_1A7366E8C(a3, 0, 1, a8, a9, a1);
    sub_1A73AA050(a1, 1);
LABEL_5:
    return swift_release();
  }

  return sub_1A7364A90(a3, 0, 1, a10, a11);
}

void sub_1A740DA18(void *a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void (*a8)(void, void), uint64_t a9, uint64_t (*a10)(void), uint64_t a11)
{
  if (a2)
  {
    if (a2 == 1)
    {
      sub_1A73A9CB8(a1, 1u);
      swift_retain();
      sub_1A7366E8C(a3, 0, 1, a8, a9, a1);
      sub_1A73A9C84(a1, 1u);
      swift_release();
    }
    else
    {
      sub_1A7364A90(a3, 0, 1, a10, a11);
    }
  }
  else
  {
    char v17 = a5 & 1;
    uint64_t v18 = (void *)swift_allocObject();
    id v18[2] = a6;
    void v18[3] = a7;
    v18[4] = a1;
    sub_1A73A9CB8(a1, 0);
    sub_1A73A9CB8(a1, 0);
    swift_retain();
    sub_1A7364A90(a3, a4, v17, sub_1A7413524, (uint64_t)v18);
    swift_release();
    sub_1A73A9C84(a1, 0);
  }
}

void sub_1A740DBA4(void *a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void (*a8)(void, void), uint64_t a9, uint64_t (*a10)(void), uint64_t a11)
{
  if (a2)
  {
    if (a2 == 1)
    {
      sub_1A73A9CB8(a1, 1u);
      swift_retain();
      sub_1A7366E8C(a3, 0, 1, a8, a9, a1);
      sub_1A73A9C84(a1, 1u);
      swift_release();
    }
    else
    {
      sub_1A7364A90(a3, 0, 1, a10, a11);
    }
  }
  else
  {
    char v17 = a5 & 1;
    uint64_t v19 = a1;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a6;
    *(void *)(v18 + 24) = a7;
    sub_1A734E5D8((uint64_t)&v19, v18 + 32, (uint64_t *)&unk_1E96F31B0);
    sub_1A73A9CB8(a1, 0);
    sub_1A73A9CB8(a1, 0);
    swift_retain();
    sub_1A7364A90(a3, a4, v17, sub_1A7413524, v18);
    swift_release();
    sub_1A73A9C84(a1, 0);
  }
}

void sub_1A740DD48(void *a1, id a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, void (*a9)(void, void), uint64_t a10, uint64_t (*a11)(void), uint64_t a12)
{
  if (a3)
  {
    if (a3 == 1)
    {
      sub_1A73A9FBC(a1, a2, 1);
      swift_retain();
      sub_1A7366E8C(a4, 0, 1, a9, a10, a1);
      sub_1A73A9F2C(a1, a2, 1);
      swift_release();
    }
    else
    {
      sub_1A7364A90(a4, 0, 1, a11, a12);
    }
  }
  else
  {
    char v18 = a6 & 1;
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = a7;
    void v19[3] = a8;
    v19[4] = a1;
    v19[5] = a2;
    sub_1A73A9FBC(a1, a2, 0);
    sub_1A73A9FBC(a1, a2, 0);
    swift_retain();
    sub_1A7364A90(a4, a5, v18, sub_1A7413898, (uint64_t)v19);
    swift_release();
    sub_1A73A9F2C(a1, a2, 0);
  }
}

void sub_1A740DEE8(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, void (*a10)(void, void), uint64_t a11, uint64_t (*a12)(void), uint64_t a13)
{
  if (a4)
  {
    if (a4 == 1)
    {
      sub_1A73A9E38(a1, a2, a3, 1);
      swift_retain();
      sub_1A7366E8C(a5, 0, 1, a10, a11, a1);
      sub_1A73A9D60(a1, a2, a3, 1);
      swift_release();
    }
    else
    {
      sub_1A7364A90(a5, 0, 1, a12, a13);
    }
  }
  else
  {
    char v19 = a7 & 1;
    id v20 = (void *)swift_allocObject();
    void v20[2] = a8;
    v20[3] = a9;
    v20[4] = a1;
    v20[5] = a2;
    v20[6] = a3;
    sub_1A73A9E38(a1, a2, a3, 0);
    sub_1A73A9E38(a1, a2, a3, 0);
    swift_retain();
    sub_1A7364A90(a5, a6, v19, sub_1A7413610, (uint64_t)v20);
    swift_release();
    sub_1A73A9D60(a1, a2, a3, 0);
  }
}

void sub_1A740E0B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(a1 + 16));
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = a2 + 40;
    do
    {
      unsigned __int8 v9 = *(void (**)(uint64_t *))(v8 - 8);
      uint64_t v10 = a3;
      char v11 = a4;
      swift_retain();
      v9(&v10);
      swift_release();
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
}

void sub_1A740E17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  v9[0] = a3;
  v9[1] = a4;
  char v10 = a5;
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(a1 + 16));
  uint64_t v6 = *(void *)(a2 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = a2 + 40;
    do
    {
      uint64_t v8 = *(void (**)(void *))(v7 - 8);
      swift_retain();
      v8(v9);
      swift_release();
      v7 += 16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
}

void sub_1A740E230(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = a3;
  char v9 = a4;
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(a1 + 16));
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = a2 + 40;
    do
    {
      uint64_t v7 = *(void (**)(uint64_t *))(v6 - 8);
      swift_retain();
      v7(&v8);
      swift_release();
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
}

void sub_1A740E2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  v10[0] = a3;
  v10[1] = a4;
  void v10[2] = a5;
  char v11 = a6;
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(a1 + 16));
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = a2 + 40;
    do
    {
      char v9 = *(void (**)(void *))(v8 - 8);
      swift_retain();
      v9(v10);
      swift_release();
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
}

uint64_t REMContactAndName.init(contact:name:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

id REMContactAndName.contact.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t REMContactAndName.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void *REMContactsProvider.__allocating_init(contactStoreCreator:queue:backgroundQueue:)(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = 0;
  v8[5] = a3;
  v8[6] = a4;
  v8[7] = 0;
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1A740E88C;
  *(void *)(v10 + 24) = v9;
  char v11 = (void *)swift_allocObject();
  void v11[2] = a3;
  v11[3] = a4;
  v11[4] = sub_1A740E898;
  v11[5] = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704A80);
  id v12 = (void *)swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v13 = swift_allocObject();
  id v14 = a3;
  swift_retain();
  id v15 = a4;
  swift_retain();
  swift_retain();
  uint64_t v16 = (_DWORD *)swift_slowAlloc();
  *(void *)(v13 + 16) = v16;
  *uint64_t v16 = 0;
  uint64_t v17 = MEMORY[0x1E4FBC868];
  *(_DWORD *)(v13 + 24) = 0;
  v12[9] = v13;
  v12[10] = v17;
  _OWORD v12[2] = v14;
  v12[3] = sub_1A7412438;
  v12[4] = v11;
  void v12[5] = 0;
  v12[7] = sub_1A740E898;
  v12[8] = v10;
  v12[6] = 0;
  swift_release();
  swift_release();
  v8[7] = v12;
  swift_release();
  return v8;
}

void *REMContactsProvider.init(contactStoreCreator:queue:backgroundQueue:)(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = 0;
  v4[5] = a3;
  v4[6] = a4;
  v4[7] = 0;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1A741421C;
  *(void *)(v8 + 24) = v7;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a3;
  v9[3] = a4;
  v9[4] = sub_1A740E898;
  void v9[5] = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704A80);
  uint64_t v10 = (void *)swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v11 = swift_allocObject();
  id v12 = a3;
  swift_retain();
  id v13 = a4;
  swift_retain();
  swift_retain();
  id v14 = (_DWORD *)swift_slowAlloc();
  *(void *)(v11 + 16) = v14;
  *id v14 = 0;
  uint64_t v15 = MEMORY[0x1E4FBC868];
  *(_DWORD *)(v11 + 24) = 0;
  v10[9] = v11;
  v10[10] = v15;
  void v10[2] = v12;
  void v10[3] = sub_1A7412438;
  void v10[4] = v9;
  v10[5] = 0;
  v10[7] = sub_1A740E898;
  v10[8] = v8;
  v10[6] = 0;
  swift_release();
  swift_release();
  v4[7] = v10;
  swift_release();
  return v4;
}

uint64_t sub_1A740E748()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1A740E780(void *a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (a3)
    {
      id v6 = a1;
      uint64_t v7 = (uint64_t)sub_1A7410360(v6);
    }
    else
    {
      uint64_t v7 = (uint64_t)sub_1A7410274();
    }
    swift_release();
  }
  else
  {
    sub_1A72C8344();
    uint64_t v7 = swift_allocError();
    *(void *)uint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    *(void *)(v5 + 16) = 0;
    *(void *)(v5 + 24) = 1;
    *(_OWORD *)(v5 + 32) = 0u;
    *(_OWORD *)(v5 + 48) = 0u;
  }
  return v7;
}

uint64_t sub_1A740E88C(void *a1, uint64_t a2, char a3)
{
  return sub_1A740E780(a1, a2, a3 & 1);
}

uint64_t REMContactsProvider.meCard(keys:)(void *a1)
{
  uint64_t v3 = sub_1A75722A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (void **)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v1 + 40);
  *id v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBF0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_1A75722C0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    if (*(void *)(v1 + 56))
    {
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1A740EA14(a1, 0, 0, (uint64_t *)&v13);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v10 = v13;
      char v11 = v14;
      id v12 = sub_1A740EB88(v13, v14);
      sub_1A741251C(v10, v11);
      return (uint64_t)v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A740EA14@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = sub_1A75722A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v13 = *(void **)(v4 + 16);
  *id v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBF0], v9);
  id v14 = v13;
  LOBYTE(v13) = sub_1A75722C0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    uint64_t v16 = *(os_unfair_lock_s **)(*(void *)(v4 + 72) + 16);
    swift_retain();
    os_unfair_lock_lock_with_options();
    sub_1A74115C0(v4, a1, a2, a3 & 1, a4);
    os_unfair_lock_unlock(v16);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1A740EB88(void *a1, char a2)
{
  if (a2)
  {
    if (a2 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C48);
      uint64_t v3 = swift_allocObject();
      type metadata accessor for UnfairLock();
      uint64_t v4 = swift_allocObject();
      id v5 = a1;
      id v6 = (_DWORD *)swift_slowAlloc();
      *(void *)(v4 + 16) = v6;
      *id v6 = 0;
      *(_DWORD *)(v4 + 24) = 0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB703BB0);
      uint64_t v7 = swift_allocObject();
      uint64_t v8 = MEMORY[0x1E4FBC860];
      *(void *)(v7 + 40) = 0;
      *(void *)(v7 + 32) = v8;
      *(unsigned char *)(v7 + 48) = -1;
      *(void *)(v7 + 16) = v4;
      *(unsigned char *)(v7 + 24) = 1;
      swift_beginAccess();
      uint64_t v9 = *(void **)(v7 + 40);
      *(void *)(v7 + 40) = a1;
      unsigned __int8 v10 = *(unsigned char *)(v7 + 48);
      *(unsigned char *)(v7 + 48) = 0;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C48);
      uint64_t v3 = swift_allocObject();
      type metadata accessor for UnfairLock();
      uint64_t v11 = swift_allocObject();
      id v12 = a1;
      id v13 = (_DWORD *)swift_slowAlloc();
      *(void *)(v11 + 16) = v13;
      *id v13 = 0;
      *(_DWORD *)(v11 + 24) = 0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB703BB0);
      uint64_t v7 = swift_allocObject();
      uint64_t v14 = MEMORY[0x1E4FBC860];
      *(void *)(v7 + 40) = 0;
      *(void *)(v7 + 32) = v14;
      *(unsigned char *)(v7 + 48) = -1;
      *(void *)(v7 + 16) = v11;
      *(unsigned char *)(v7 + 24) = 1;
      swift_beginAccess();
      uint64_t v9 = *(void **)(v7 + 40);
      *(void *)(v7 + 40) = a1;
      unsigned __int8 v10 = *(unsigned char *)(v7 + 48);
      *(unsigned char *)(v7 + 48) = 1;
    }
    sub_1A7413B70(v9, v10);
    *(void *)(v3 + 16) = v7;
    return (void *)v3;
  }
  else
  {
    swift_retain();
  }
  return a1;
}

uint64_t REMContactsProvider.name(for:)(void *a1)
{
  id v29 = a1;
  uint64_t v2 = sub_1A75722A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (id *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = v1;
  id v6 = *(void **)(v1 + 40);
  *id v5 = v6;
  uint64_t v7 = *MEMORY[0x1E4FBCBF0];
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 104);
  v8(v5, v7, v2);
  id v9 = v6;
  char v10 = sub_1A75722C0();
  uint64_t v11 = *(void (**)(void *, uint64_t))(v3 + 8);
  v11(v5, v2);
  if (v10)
  {
    if (qword_1E96F0828 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v12 = qword_1E96F3178;
  *id v5 = v9;
  v8(v5, v7, v2);
  id v13 = v9;
  uint64_t v14 = sub_1A75722C0();
  uint64_t result = ((uint64_t (*)(void *, uint64_t))v11)(v5, v2);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v16 = v30;
  if (*(void *)(v30 + 56))
  {
    swift_bridgeObjectRetain();
    id v17 = v29;
    id v18 = v29;
    swift_retain();
    sub_1A740EA14(v17, v12, 1, (uint64_t *)&v31);
    swift_bridgeObjectRelease();

    swift_release();
    char v19 = v31;
    char v20 = v32;
    sub_1A740EB88(v31, v32);
    sub_1A741251C(v19, v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3188);
    uint64_t v21 = swift_allocObject();
    type metadata accessor for UnfairLock();
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = (_DWORD *)swift_slowAlloc();
    *(void *)(v22 + 16) = v23;
    *uint64_t v23 = 0;
    *(_DWORD *)(v22 + 24) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3190);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 32) = MEMORY[0x1E4FBC860];
    *(void *)(v24 + 40) = 0;
    *(unsigned char *)(v24 + 48) = -1;
    *(void *)(v24 + 16) = v22;
    *(unsigned char *)(v24 + 24) = 0;
    *(void *)(v21 + 16) = v24;
    swift_retain();
    sub_1A741289C((uint64_t)sub_1A7412748, v21);
    swift_release();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v16;
    *(void *)(v14 + 24) = v18;
    uint64_t v25 = qword_1EB705720;
    id v26 = v18;
    swift_retain();
    if (v25 == -1)
    {
LABEL_6:
      id v27 = (id)qword_1EB704C70;
      uint64_t v28 = sub_1A740C388(v27, (uint64_t)sub_1A7412A9C, v14);
      swift_release();
      swift_release();
      swift_release();

      return v28;
    }
LABEL_10:
    swift_once();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t REMContactsProvider.contact(matching:keys:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_1A75722A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v3 + 40);
  *char v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
  id v12 = v11;
  LOBYTE(v11) = sub_1A75722C0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    if (*(void *)(v3 + 56))
    {
      swift_bridgeObjectRetain();
      id v14 = a1;
      swift_retain();
      sub_1A740EA14(a1, a2, 1, a3);
      swift_bridgeObjectRelease();

      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A740F248(void **a1, int a2, id a3)
{
  uint64_t v3 = sub_1A7412AB8(a3, *a1);
  uint64_t v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3200);
  uint64_t v6 = swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = (_DWORD *)swift_slowAlloc();
  *(void *)(v7 + 16) = v8;
  *uint64_t v8 = 0;
  *(_DWORD *)(v7 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3208);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v9 + 40) = 0;
  *(void *)(v9 + 48) = 0;
  *(unsigned char *)(v9 + 56) = -1;
  *(void *)(v9 + 16) = v7;
  *(unsigned char *)(v9 + 24) = 1;
  swift_beginAccess();
  char v10 = *(void **)(v9 + 40);
  uint64_t v11 = *(void **)(v9 + 48);
  *(void *)(v9 + 40) = v3;
  *(void *)(v9 + 48) = v5;
  char v12 = *(unsigned char *)(v9 + 56);
  *(unsigned char *)(v9 + 56) = 0;
  sub_1A74138D8(v10, v11, v12);
  *(void *)(v6 + 16) = v9;
  return v6;
}

void *REMContactsProvider.syncContact(matching:keys:)(void *result, uint64_t a2)
{
  if (*(void *)(v2 + 56))
  {
    uint64_t v4 = result;
    swift_bridgeObjectRetain();
    id v5 = v4;
    swift_retain();
    uint64_t v6 = sub_1A740F3F8(v4, a2, 1);
    swift_bridgeObjectRelease();

    swift_release();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1A740F3F8(void *a1, uint64_t a2, char a3)
{
  int v6 = a3 & 1;
  uint64_t v7 = sub_1A7572210();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A7572260();
  uint64_t v24 = *(void *)(v10 - 8);
  uint64_t v25 = v10;
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = *(os_unfair_lock_s **)(v3[9] + 16);
  swift_retain();
  os_unfair_lock_lock_with_options();
  uint64_t v28 = sub_1A7411B18((uint64_t)v3, a1, a2, v6);
  __int16 v15 = v14;
  int v16 = v14 & 1;
  os_unfair_lock_unlock(v13);
  swift_release();
  if ((v15 & 0x100) != 0 && v3[5])
  {
    uint64_t v23 = v3[2];
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    *(void *)&long long v33 = a1;
    *((void *)&v33 + 1) = a2;
    BOOL v34 = v6 != 0;
    id v18 = v28;
    uint64_t v31 = v28;
    BOOL v32 = v16 != 0;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v17;
    sub_1A741373C(&v33, v19 + 24);
    sub_1A734E5D8((uint64_t)&v31, v19 + 48, (uint64_t *)&unk_1E96F31E0);
    aBlock[4] = sub_1A7413754;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A73322E4;
    aBlock[3] = &block_descriptor_7;
    char v20 = _Block_copy(aBlock);
    sub_1A72BEEF4(a1, a2, v6);
    sub_1A72BEFA4(v18);
    swift_retain();
    sub_1A7572240();
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1A732938C();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
    sub_1A73293E4();
    uint64_t v21 = v27;
    sub_1A7573380();
    MEMORY[0x1AD0CB2C0](0, v12, v9, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v21);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v25);
    swift_release();
    swift_release();
  }
  return v28;
}

void REMContactsProvider.contactAndName(matching:keys:)(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v37 = a3;
  id v38 = a1;
  uint64_t v5 = sub_1A75722A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = v3;
  uint64_t v9 = *(void **)(v3 + 40);
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FBCBF0];
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  id v12 = v9;
  char v13 = sub_1A75722C0();
  __int16 v14 = *(void (**)(void *, uint64_t))(v6 + 8);
  v14(v8, v5);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  *uint64_t v8 = v12;
  v11(v8, v10, v5);
  id v15 = v12;
  char v16 = sub_1A75722C0();
  v14(v8, v5);
  if ((v16 & 1) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v17 = v39;
  if (!*(void *)(v39 + 56))
  {
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  id v18 = v38;
  id v19 = v38;
  swift_retain();
  sub_1A740EA14(v18, (uint64_t)a2, 1, (uint64_t *)&v40);
  swift_bridgeObjectRelease();

  swift_release();
  a2 = v40;
  if (!v41)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3188);
    uint64_t v24 = swift_allocObject();
    type metadata accessor for UnfairLock();
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = (_DWORD *)swift_slowAlloc();
    *(void *)(v25 + 16) = v26;
    *uint64_t v26 = 0;
    *(_DWORD *)(v25 + 24) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3190);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 32) = MEMORY[0x1E4FBC860];
    *(void *)(v27 + 40) = 0;
    *(unsigned char *)(v27 + 48) = -1;
    *(void *)(v27 + 16) = v25;
    *(unsigned char *)(v27 + 24) = 0;
    *(void *)(v24 + 16) = v27;
    swift_retain();
    sub_1A741289C((uint64_t)sub_1A7414214, v24);
    swift_release();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v17;
    v8[3] = v19;
    uint64_t v28 = qword_1EB705720;
    id v29 = v19;
    swift_retain();
    if (v28 == -1)
    {
LABEL_8:
      id v30 = (id)qword_1EB704C70;
      uint64_t v31 = sub_1A740C558(v30, (uint64_t)sub_1A7412D1C, (uint64_t)v8);
      sub_1A741251C(a2, 0);
      swift_release();
      swift_release();

      BOOL v32 = v37;
      v37[1] = 0;
      v32[2] = 0;
      *BOOL v32 = v31;
      *((unsigned char *)v32 + 24) = 0;
      return;
    }
LABEL_12:
    swift_once();
    goto LABEL_8;
  }
  if (v41 == 1)
  {
    sub_1A7412CB0(v40, 1);
    uint64_t v20 = sub_1A7412AB8(v19, a2);
    uint64_t v22 = v21;
    sub_1A741251C(a2, 1);
    uint64_t v23 = v37;
    uint64_t *v37 = (uint64_t)a2;
    v23[1] = v20;
    v23[2] = v22;
    *((unsigned char *)v23 + 24) = 1;
  }
  else
  {
    sub_1A741251C(v40, 2);
    uint64_t v33 = sub_1A7412AB8(v19, 0);
    BOOL v34 = v37;
    uint64_t *v37 = 0;
    v34[1] = v33;
    v34[2] = v35;
    *((unsigned char *)v34 + 24) = 1;
  }
}

uint64_t sub_1A740FB28(void **a1, int a2, id a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = sub_1A7412AB8(a3, *a1);
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F31C8);
  uint64_t v7 = swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v8 = swift_allocObject();
  id v9 = v3;
  uint64_t v10 = (_DWORD *)swift_slowAlloc();
  *(void *)(v8 + 16) = v10;
  *uint64_t v10 = 0;
  *(_DWORD *)(v8 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F31D0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v11 + 40) = 0;
  *(void *)(v11 + 48) = 0;
  *(void *)(v11 + 56) = 0;
  *(unsigned char *)(v11 + 64) = -1;
  *(void *)(v11 + 16) = v8;
  *(unsigned char *)(v11 + 24) = 1;
  swift_beginAccess();
  id v12 = *(void **)(v11 + 40);
  uint64_t v13 = *(void *)(v11 + 48);
  uint64_t v14 = *(void *)(v11 + 56);
  *(void *)(v11 + 40) = v3;
  *(void *)(v11 + 48) = v4;
  *(void *)(v11 + 56) = v6;
  char v15 = *(unsigned char *)(v11 + 64);
  *(unsigned char *)(v11 + 64) = 0;
  sub_1A7413658(v12, v13, v14, v15);
  *(void *)(v7 + 16) = v11;
  return v7;
}

id sub_1A740FC54()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C80);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A7579500;
  uint64_t v1 = (void *)*MEMORY[0x1E4F1AF10];
  *(void *)(v0 + 32) = *MEMORY[0x1E4F1AF10];
  uint64_t v2 = self;
  id v3 = v1;
  id v4 = objc_msgSend(v2, sel_descriptorForRequiredKeysForStyle_, 0);
  uint64_t v7 = (void *)*MEMORY[0x1E4F1AFA8];
  uint64_t v5 = *MEMORY[0x1E4F1AFA8];
  *(void *)(v0 + 40) = v4;
  *(void *)(v0 + 48) = v5;
  sub_1A7572A30();
  qword_1EB703440 = v0;

  return v7;
}

uint64_t static REMContactsProvider.contactKeysForDisplayString.getter()
{
  return sub_1A73814E0(&qword_1EB704140);
}

uint64_t sub_1A740FD44()
{
  uint64_t result = sub_1A740FD64();
  qword_1E96F3178 = result;
  return result;
}

uint64_t sub_1A740FD64()
{
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  sub_1A75736F0();
  swift_bridgeObjectRetain();
  sub_1A75725E0();
  swift_bridgeObjectRelease();
  sub_1A75736C0();
  sub_1A7573700();
  sub_1A7573710();
  sub_1A75736D0();
  swift_bridgeObjectRetain();
  sub_1A75725E0();
  swift_bridgeObjectRelease();
  sub_1A75736C0();
  sub_1A7573700();
  sub_1A7573710();
  sub_1A75736D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v0 = objc_msgSend(self, sel_descriptorForRequiredKeysForStyle_, 0);
  swift_retain();
  uint64_t v1 = swift_unknownObjectRetain();
  MEMORY[0x1AD0CABF0](v1);
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1A7572A60();
  }
  sub_1A7572AB0();
  sub_1A7572A30();
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t static REMContactsProvider.defaultContactsKeys.getter()
{
  return sub_1A73814E0(&qword_1E96F0828);
}

id sub_1A740FF64()
{
  uint64_t v1 = *(void **)(v0 + 32);
  if (v1)
  {
    id v2 = *(id *)(v0 + 32);
  }
  else
  {
    uint64_t v3 = v0;
    id v4 = (void *)(*(uint64_t (**)(void))(v0 + 16))();
    uint64_t v5 = *(void **)(v0 + 32);
    *(void *)(v3 + 32) = v4;
    id v2 = v4;

    uint64_t v1 = 0;
  }
  id v6 = v1;
  return v2;
}

uint64_t sub_1A740FFC0(void *a1, uint64_t a2, char a3)
{
  sub_1A75740C0();
  sub_1A75740D0();
  if (a3)
  {
    id v6 = a1;
    sub_1A75731A0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
    uint64_t v5 = (void *)sub_1A7572A00();
    sub_1A75731A0();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
    uint64_t v5 = (void *)sub_1A7572A00();
    sub_1A75731A0();
  }

  return sub_1A7574110();
}

uint64_t sub_1A7410090()
{
  return sub_1A740FFC0(*(void **)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_1A741009C()
{
  uint64_t v1 = *(void **)v0;
  if (*(unsigned char *)(v0 + 16))
  {
    sub_1A75740D0();
    id v2 = v1;
    sub_1A75731A0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
    id v3 = (id)sub_1A7572A00();
    sub_1A75731A0();
  }
  else
  {
    sub_1A75740D0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
    id v3 = (id)sub_1A7572A00();
    sub_1A75731A0();
  }
}

uint64_t sub_1A741017C()
{
  uint64_t v1 = *(void **)v0;
  char v2 = *(unsigned char *)(v0 + 16);
  sub_1A75740C0();
  sub_1A75740D0();
  if (v2)
  {
    id v3 = v1;
    sub_1A75731A0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
    id v4 = (void *)sub_1A7572A00();
    sub_1A75731A0();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
    id v4 = (void *)sub_1A7572A00();
    sub_1A75731A0();
  }

  return sub_1A7574110();
}

uint64_t sub_1A7410244@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  char v4 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1A72BEEF4(v2, v3, v4);
}

uint64_t sub_1A7410258(uint64_t a1, uint64_t a2)
{
  return sub_1A7412770(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void **)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

id sub_1A7410274()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  id v0 = sub_1A740FF64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
  uint64_t v1 = (void *)sub_1A7572A00();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel__crossPlatformUnifiedMeContactWithKeysToFetch_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_1A7571850();

    swift_willThrow();
  }
  return v2;
}

id sub_1A7410360(void *a1)
{
  uint64_t v1 = a1;
  v31[1] = *(id *)MEMORY[0x1E4F143B8];
  id v2 = objc_msgSend(a1, sel_emails);
  uint64_t v3 = sub_1A7572A10();

  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    id v16 = objc_msgSend(v1, sel_phones);
    uint64_t v17 = sub_1A7572A10();

    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      id v30 = self;
      uint64_t v19 = v17 + 40;
      do
      {
        id v20 = objc_allocWithZone(MEMORY[0x1E4F1BA70]);
        swift_bridgeObjectRetain();
        uint64_t v21 = (void *)sub_1A75725E0();
        swift_bridgeObjectRelease();
        unint64_t v13 = (unint64_t)objc_msgSend(v20, sel_initWithStringValue_, v21);

        id v6 = (char *)objc_msgSend(v30, sel_predicateForContactsMatchingPhoneNumber_, v13);
        id v22 = sub_1A740FF64();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
        uint64_t v23 = (void *)sub_1A7572A00();
        v31[0] = 0;
        id v24 = objc_msgSend(v22, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v6, v23, v31);

        id v16 = v31[0];
        if (!v24)
        {
          id v27 = v31[0];
          swift_bridgeObjectRelease();
          sub_1A7571850();

          swift_willThrow();
          return v16;
        }
        sub_1A72BEFEC(0, &qword_1E96F3240);
        unint64_t v15 = sub_1A7572A10();
        id v25 = v16;

        if (v15 >> 62)
        {
          swift_bridgeObjectRetain();
          id v16 = (id)sub_1A75738D0();
          swift_bridgeObjectRelease();
          if (v16)
          {
LABEL_23:
            if ((v15 & 0xC000000000000001) != 0) {
              goto LABEL_32;
            }
            if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              __break(1u);
            }
            id v26 = *(id *)(v15 + 32);
            goto LABEL_26;
          }
        }
        else
        {
          id v16 = *(id *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v16) {
            goto LABEL_23;
          }
        }
        v19 += 16;
        swift_bridgeObjectRelease();

        --v18;
      }
      while (v18);
    }
    swift_bridgeObjectRelease();
    sub_1A7413FD4();
    swift_allocError();
    swift_willThrow();
    return v16;
  }
  id v29 = v1;
  uint64_t v5 = self;
  id v6 = (char *)(v3 + 40);
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v5, sel_predicateForContactsMatchingEmailAddress_, v7);

    id v9 = sub_1A740FF64();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
    uint64_t v10 = (void *)sub_1A7572A00();
    v31[0] = 0;
    id v11 = objc_msgSend(v9, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v8, v10, v31);

    id v12 = v31[0];
    if (!v11)
    {
      id v16 = v31[0];
      swift_bridgeObjectRelease();
      sub_1A7571850();

      swift_willThrow();
      return v16;
    }
    sub_1A72BEFEC(0, &qword_1E96F3240);
    unint64_t v13 = sub_1A7572A10();
    id v14 = v12;

    if (v13 >> 62) {
      break;
    }
    unint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15) {
      goto LABEL_9;
    }
LABEL_6:
    v6 += 16;
    swift_bridgeObjectRelease();

    if (!--v4)
    {
      swift_bridgeObjectRelease();
      uint64_t v1 = v29;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1A75738D0();
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_6;
  }
LABEL_9:
  if ((v13 & 0xC000000000000001) != 0)
  {
    id v16 = (id)MEMORY[0x1AD0CB800](0, v13);
    goto LABEL_12;
  }
  if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v16 = *(id *)(v13 + 32);
LABEL_12:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return v16;
  }
  __break(1u);
LABEL_32:
  id v26 = (id)MEMORY[0x1AD0CB800](0, v15);
LABEL_26:
  id v16 = v26;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

id *REMContactsProvider.deinit()
{
  swift_release();

  swift_release();
  return v0;
}

uint64_t REMContactsProvider.__deallocating_deinit()
{
  swift_release();

  swift_release();

  return MEMORY[0x1F4186488](v0, 64, 7);
}

uint64_t sub_1A741090C(void *a1)
{
  return REMContactsProvider.meCard(keys:)(a1);
}

uint64_t sub_1A7410930@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return REMContactsProvider.contact(matching:keys:)(a1, a2, a3);
}

void *sub_1A7410954(void *result, uint64_t a2)
{
  if (*(void *)(*(void *)v2 + 56))
  {
    uint64_t v4 = result;
    swift_bridgeObjectRetain();
    id v5 = v4;
    swift_retain();
    id v6 = sub_1A740F3F8(v4, a2, 1);
    swift_bridgeObjectRelease();

    swift_release();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A74109E4(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_1A7410A08(void *a1)
{
  return REMContactsProvider.name(for:)(a1);
}

ReminderKitInternal::REMMeCardAddressType __swiftcall REMMeCardAddressType.init(label:)(Swift::String_optional label)
{
  uint64_t v2 = v1;
  if (!label.value._object) {
    goto LABEL_30;
  }
  object = label.value._object;
  uint64_t countAndFlagsBits = label.value._countAndFlagsBits;
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() != label.value._countAndFlagsBits
    || v5 != object)
  {
    char v7 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_9;
    }
    if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v9 == object)
    {
      swift_bridgeObjectRelease();
LABEL_17:
      LOBYTE(label.value._countAndFlagsBits) = swift_bridgeObjectRelease();
      char v8 = 1;
      goto LABEL_31;
    }
    char v11 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_17;
    }
    if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v12 == object)
    {
      swift_bridgeObjectRelease();
LABEL_25:
      LOBYTE(label.value._countAndFlagsBits) = swift_bridgeObjectRelease();
      char v8 = 2;
      goto LABEL_31;
    }
    char v14 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_25;
    }
    if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() != countAndFlagsBits || v15 != object) {
      sub_1A7573DB0();
    }
    swift_bridgeObjectRelease();
    LOBYTE(label.value._countAndFlagsBits) = swift_bridgeObjectRelease();
LABEL_30:
    char v8 = 3;
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
LABEL_9:
  LOBYTE(label.value._countAndFlagsBits) = swift_bridgeObjectRelease();
  char v8 = 0;
LABEL_31:
  *uint64_t v2 = v8;
  return label.value._countAndFlagsBits;
}

uint64_t REMMeCardAddressType.cnLabel.getter()
{
  uint64_t result = 0;
  switch(*v0)
  {
    case 3:
      return result;
    default:
      uint64_t result = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      break;
  }
  return result;
}

BOOL static REMMeCardAddressType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMMeCardAddressType.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t REMMeCardAddressType.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t CNContact.addressByType.getter()
{
  id v1 = objc_msgSend(v0, sel_postalAddresses);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3198);
  unint64_t v2 = sub_1A7572A10();

  if (v2 >> 62)
  {
LABEL_54:
    swift_bridgeObjectRetain_n();
    uint64_t v3 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_55:
    uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
LABEL_56:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v4;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_55;
  }
LABEL_3:
  uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v39 = v3;
  for (uint64_t i = 0; ; uint64_t i = v8)
  {
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1AD0CB800](i, v2);
      }
      else {
        id v6 = *(id *)(v2 + 8 * i + 32);
      }
      char v7 = v6;
      uint64_t v8 = i + 1;
      if (__OFADD__(i, 1))
      {
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      id v9 = objc_msgSend(v6, sel_label);
      if (!v9) {
        break;
      }
      uint64_t v10 = v9;
      uint64_t v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v13 = v12;

      if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == v11 && v14 == v13)
      {
        unsigned __int8 v17 = 0;
      }
      else
      {
        char v16 = sub_1A7573DB0();
        swift_bridgeObjectRelease();
        if (v16)
        {
          unsigned __int8 v17 = 0;
LABEL_15:
          uint64_t v3 = v39;
          goto LABEL_24;
        }
        if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == v11 && v18 == v13)
        {
          unsigned __int8 v17 = 1;
        }
        else
        {
          char v20 = sub_1A7573DB0();
          swift_bridgeObjectRelease();
          if (v20)
          {
            unsigned __int8 v17 = 1;
            goto LABEL_15;
          }
          if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == v11 && v34 == v13)
          {
            unsigned __int8 v17 = 2;
          }
          else
          {
            char v36 = sub_1A7573DB0();
            swift_bridgeObjectRelease();
            if (v36)
            {
              unsigned __int8 v17 = 2;
              goto LABEL_15;
            }
            if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == v11 && v37 == v13)
            {
              unsigned __int8 v17 = 3;
            }
            else
            {
              sub_1A7573DB0();
              unsigned __int8 v17 = 3;
            }
          }
        }
        uint64_t v3 = v39;
      }
      swift_bridgeObjectRelease();
LABEL_24:
      swift_bridgeObjectRelease();
      if (!v4[2]) {
        goto LABEL_30;
      }
LABEL_25:
      sub_1A72B2844(v17);
      if ((v19 & 1) == 0) {
        goto LABEL_30;
      }

      ++i;
      if (v8 == v3) {
        goto LABEL_56;
      }
    }
    unsigned __int8 v17 = 3;
    if (v4[2]) {
      goto LABEL_25;
    }
LABEL_30:
    id v21 = objc_msgSend(v7, sel_value);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = sub_1A72B2844(v17);
    uint64_t v25 = v4[2];
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26)) {
      goto LABEL_53;
    }
    char v28 = v23;
    if (v4[3] < v27) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v23 & 1) == 0) {
        goto LABEL_34;
      }
    }
    else
    {
      sub_1A72BD78C();
      if ((v28 & 1) == 0) {
        goto LABEL_34;
      }
    }
LABEL_41:
    uint64_t v35 = v4[7];

    *(void *)(v35 + 8 * v24) = v21;
LABEL_42:

    swift_bridgeObjectRelease();
    uint64_t v3 = v39;
    if (v8 == v39) {
      goto LABEL_56;
    }
  }
  sub_1A72B8C80(v27, isUniquelyReferenced_nonNull_native);
  unint64_t v29 = sub_1A72B2844(v17);
  if ((v28 & 1) != (v30 & 1)) {
    goto LABEL_58;
  }
  unint64_t v24 = v29;
  if (v28) {
    goto LABEL_41;
  }
LABEL_34:
  v4[(v24 >> 6) + 8] |= 1 << v24;
  *(unsigned char *)(v4[6] + v24) = v17;
  *(void *)(v4[7] + 8 * v24) = v21;
  uint64_t v31 = v4[2];
  BOOL v32 = __OFADD__(v31, 1);
  uint64_t v33 = v31 + 1;
  if (!v32)
  {
    v4[2] = v33;
    goto LABEL_42;
  }
  __break(1u);
LABEL_58:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t sub_1A7411144()
{
  sub_1A75740C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
  id v0 = (void *)sub_1A7572A00();
  sub_1A75731A0();

  return sub_1A7574110();
}

void sub_1A74111A8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
  id v0 = (id)sub_1A7572A00();
  sub_1A75731A0();
}

uint64_t sub_1A7411214()
{
  sub_1A75740C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
  id v0 = (void *)sub_1A7572A00();
  sub_1A75731A0();

  return sub_1A7574110();
}

uint64_t sub_1A7411274()
{
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
  id v0 = (void *)sub_1A7572A00();
  id v1 = (void *)sub_1A7572A00();
  char v2 = sub_1A7573190();

  return v2 & 1;
}

uint64_t sub_1A741130C(void *a1, uint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_1A75722A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unsigned __int8 v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  void *v17 = a4;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FBCBF0], v14);
  id v18 = a4;
  LOBYTE(a4) = sub_1A75722C0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if (a4)
  {
    *(void *)&long long v28 = a1;
    *((void *)&v28 + 1) = a2;
    char v20 = a3 & 1;
    char v29 = a3 & 1;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a6;
    *(void *)(v21 + 24) = a7;
    sub_1A741373C(&v28, v21 + 32);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_1A7413F04;
    *(void *)(v22 + 24) = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C48);
    uint64_t v23 = swift_allocObject();
    type metadata accessor for UnfairLock();
    uint64_t v24 = swift_allocObject();
    swift_retain();
    sub_1A72BEEF4(a1, a2, v20);
    swift_retain();
    uint64_t v25 = (_DWORD *)swift_slowAlloc();
    *(void *)(v24 + 16) = v25;
    *uint64_t v25 = 0;
    *(_DWORD *)(v24 + 24) = 0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB703BB0);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 32) = MEMORY[0x1E4FBC860];
    *(void *)(v26 + 40) = 0;
    *(unsigned char *)(v26 + 48) = -1;
    *(void *)(v26 + 16) = v24;
    *(unsigned char *)(v26 + 24) = 0;
    *(void *)(v23 + 16) = v26;
    swift_retain_n();
    sub_1A740CE90((uint64_t)sub_1A7414218, v23, (uint64_t)sub_1A741424C, v23, a5, (uint64_t)sub_1A7413F24, v22);
    swift_release();
    swift_release();
    swift_release_n();
    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A74115C0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  char v30 = a5;
  char v8 = a4 & 1;
  uint64_t v9 = sub_1A75722A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t **)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = (uint64_t *)(a1 + 80);
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(v14 + 16);
  sub_1A72BEEF4(a2, a3, v8);
  if (v15)
  {
    unint64_t v16 = sub_1A72B2744(a2, a3, v8);
    if (v17)
    {
      sub_1A734E5D8(*(void *)(v14 + 56) + 40 * v16, (uint64_t)&v35, &qword_1EB703988);
      swift_endAccess();
      sub_1A7413CBC((uint64_t)&v35, (void (*)(void, void, void, void, void))sub_1A72BEF30);
      sub_1A72BEFB0(a2, a3, v8);
      sub_1A74119F8((uint64_t)&v33);
      uint64_t result = sub_1A7413CBC((uint64_t)&v35, (void (*)(void, void, void, void, void))sub_1A7413C60);
      uint64_t v19 = v33;
      char v20 = v34;
LABEL_9:
      char v29 = v30;
      *char v30 = v19;
      *((unsigned char *)v29 + 8) = v20;
      return result;
    }
  }
  swift_endAccess();
  sub_1A72BEFB0(a2, a3, v8);
  uint64_t v21 = *(void **)(a1 + 16);
  *uint64_t v12 = v21;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBF0], v9);
  id v22 = v21;
  char v23 = sub_1A75722C0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v23)
  {
    type metadata accessor for PromiseDisposableToken();
    uint64_t v24 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C48);
    uint64_t v19 = swift_allocObject();
    type metadata accessor for UnfairLock();
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = (_DWORD *)swift_slowAlloc();
    *(void *)(v25 + 16) = v26;
    *uint64_t v26 = 0;
    *(_DWORD *)(v25 + 24) = 0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB703BB0);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 32) = MEMORY[0x1E4FBC860];
    *(void *)(v27 + 40) = 0;
    *(unsigned char *)(v27 + 48) = -1;
    *(void *)(v27 + 16) = v25;
    *(unsigned char *)(v27 + 24) = 0;
    *(void *)(v19 + 16) = v27;
    swift_retain_n();
    sub_1A7411EA0((uint64_t)sub_1A7413BC4, v19, (uint64_t)sub_1A7413BEC, v19, a1, (uint64_t)a2, a3, v8, v24);
    swift_release_n();
    unsigned __int8 v32 = 0;
    swift_beginAccess();
    if (v32 == 255)
    {
      sub_1A72BEEF4(a2, a3, v8);
      swift_retain();
      swift_retain();
      sub_1A72D6364(a2, a3, v8, (uint64_t)&v35);
      sub_1A72BEFB0(a2, a3, v8);
      sub_1A7413C10((uint64_t)&v35);
    }
    else
    {
      long long v35 = xmmword_1A7583960;
      uint64_t v36 = v19;
      uint64_t v37 = v24;
      char v38 = v32 & 1;
      sub_1A72BEEF4(a2, a3, v8);
      swift_retain();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v31 = *v13;
      *uint64_t v13 = 0x8000000000000000;
      sub_1A72D753C((uint64_t)&v35, a2, a3, v8, isUniquelyReferenced_nonNull_native);
      *uint64_t v13 = v31;
      swift_bridgeObjectRelease();
      sub_1A72BEFB0(a2, a3, v8);
    }
    swift_endAccess();
    uint64_t result = swift_release();
    char v20 = 0;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

id sub_1A74119F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1A734E5D8(v1, (uint64_t)&v15, &qword_1EB703988);
  uint64_t v4 = v15;
  unsigned __int8 v5 = v16;
  sub_1A734E5D8(v2, (uint64_t)&v12, &qword_1EB703988);
  sub_1A734E5D8(v2, (uint64_t)v17, &qword_1EB703988);
  if (v17[32])
  {
    sub_1A734E5D8((uint64_t)v17, (uint64_t)v18, (uint64_t *)&unk_1E96F31E0);
    if (v5) {
      char v6 = 2;
    }
    else {
      char v6 = 1;
    }
    *(void *)a1 = v4;
    *(unsigned char *)(a1 + 8) = v6;
    return sub_1A72BEFA4(v4);
  }
  else
  {
    uint64_t v8 = v14;
    swift_retain();
    swift_retain();
    sub_1A72BEF8C(v4, v5);
    id result = (id)swift_release();
    unsigned __int8 v9 = v13;
    if (v13 == 255)
    {
      *(void *)a1 = v8;
      *(unsigned char *)(a1 + 8) = 0;
    }
    else
    {
      uint64_t v10 = v12;
      id result = (id)swift_release();
      if (v9) {
        char v11 = 2;
      }
      else {
        char v11 = 1;
      }
      *(void *)a1 = v10;
      *(unsigned char *)(a1 + 8) = v11;
    }
  }
  return result;
}

void *sub_1A7411B18(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  int v7 = a4 & 1;
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 80);
  if (!*(void *)(v8 + 16))
  {
    swift_endAccess();
LABEL_7:
    char v23 = a2;
    uint64_t v24 = a3;
    BOOL v25 = v7 != 0;
    (*(void (**)(void **__return_ptr, void **))(a1 + 56))(&v26, &v23);
    uint64_t v12 = v26;
    long long v28 = v26;
    uint64_t v29 = v27;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    char v32 = 1;
    swift_beginAccess();
    sub_1A72BEEF4(a2, a3, v7);
    sub_1A72BEFA4(v12);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *(void *)(a1 + 80);
    *(void *)(a1 + 80) = 0x8000000000000000;
    sub_1A72D753C((uint64_t)&v28, a2, a3, v7, isUniquelyReferenced_nonNull_native);
    *(void *)(a1 + 80) = v21;
    swift_bridgeObjectRelease();
    sub_1A72BEFB0(a2, a3, v7);
    swift_endAccess();
    return v12;
  }
  sub_1A72BEEF4(a2, a3, v7);
  unint64_t v9 = sub_1A72B2744(a2, a3, v7);
  if ((v10 & 1) == 0)
  {
    swift_endAccess();
    sub_1A72BEFB0(a2, a3, v7);
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(v8 + 56) + 40 * v9;
  uint64_t v12 = *(void **)v11;
  uint64_t v13 = *(void *)(v11 + 8);
  uint64_t v15 = *(void *)(v11 + 16);
  uint64_t v14 = *(void *)(v11 + 24);
  int v16 = *(unsigned __int8 *)(v11 + 32);
  swift_endAccess();
  sub_1A72BEF30(v12, v13, v15, v14, v16);
  sub_1A72BEFB0(a2, a3, v7);
  if (v16 != 1)
  {
    swift_release();
    swift_release();
    char v23 = a2;
    uint64_t v24 = a3;
    BOOL v25 = v7 != 0;
    (*(void (**)(void **__return_ptr, void **))(a1 + 56))(&v26, &v23);
    uint64_t v19 = v26;
    long long v28 = v26;
    uint64_t v29 = v27;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    char v32 = 1;
    swift_beginAccess();
    sub_1A72BEEF4(a2, a3, v7);
    sub_1A72BEFA4(v19);
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *(void *)(a1 + 80);
    *(void *)(a1 + 80) = 0x8000000000000000;
    sub_1A72D753C((uint64_t)&v28, a2, a3, v7, v20);
    *(void *)(a1 + 80) = v22;
    swift_bridgeObjectRelease();
    sub_1A72BEFB0(a2, a3, v7);
    swift_endAccess();
    sub_1A741376C(v12, v13);
    return v19;
  }
  return v12;
}

uint64_t sub_1A7411DFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  v10[0] = a2;
  v10[1] = a3;
  char v11 = a4 & 1;
  uint64_t v8 = a5;
  char v9 = a6 & 1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    int v7 = *(void (**)(void *, uint64_t *))(result + 40);
    sub_1A738EA74((uint64_t)v7);
    uint64_t result = swift_release();
    if (v7)
    {
      v7(v10, &v8);
      return sub_1A72AE0F8((uint64_t)v7);
    }
  }
  return result;
}

uint64_t sub_1A7411EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  *(void *)&long long v24 = a6;
  *((void *)&v24 + 1) = a7;
  char v25 = a8 & 1;
  (*(void (**)(long long *))(a5 + 24))(&v24);
  char v11 = *(void **)(a5 + 16);
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  long long v13 = v24;
  char v14 = v25;
  long long v22 = v24;
  char v23 = v25;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v12;
  sub_1A741373C(&v22, (uint64_t)(v15 + 3));
  v15[6] = a1;
  v15[7] = a2;
  sub_1A72BEEF4((void *)v13, *((uint64_t *)&v13 + 1), v14);
  swift_retain();
  sub_1A740BFD8(v11, a9, (uint64_t)sub_1A7413D00, (uint64_t)v15);
  swift_release();
  swift_release();
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  long long v22 = v13;
  char v23 = v14;
  char v17 = (void *)swift_allocObject();
  v17[2] = v16;
  sub_1A741373C(&v22, (uint64_t)(v17 + 3));
  v17[6] = a3;
  v17[7] = a4;
  sub_1A72BEEF4((void *)v13, *((uint64_t *)&v13 + 1), v14);
  swift_retain();
  sub_1A752B660(v11, a9, (uint64_t)sub_1A7413D74, (uint64_t)v17);
  swift_release();
  return swift_release();
}

uint64_t sub_1A741207C(void *a1, uint64_t a2, char a3, void *a4, char a5)
{
  uint64_t v11 = sub_1A75722A0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  char v14 = (uint64_t *)((char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v24 = a1;
  uint64_t v25 = a2;
  char v26 = a3 & 1;
  long long v22 = a4;
  char v23 = a5 & 1;
  uint64_t v15 = (void *)v5[2];
  *char v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCBF0], v11);
  id v16 = v15;
  LOBYTE(v15) = sub_1A75722C0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    id v18 = *(os_unfair_lock_s **)(v5[9] + 16);
    swift_retain();
    os_unfair_lock_lock_with_options();
    char v19 = sub_1A7412230((uint64_t)v5, v24, v25, v26, v22, v23);
    os_unfair_lock_unlock(v18);
    uint64_t result = swift_release();
    if (v19)
    {
      char v20 = (uint64_t (*)(void **, void **))v5[5];
      if (v20) {
        return v20(&v24, &v22);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A7412230(uint64_t a1, void *a2, uint64_t a3, char a4, void *a5, char a6)
{
  char v11 = a4 & 1;
  uint64_t v12 = (uint64_t *)(a1 + 80);
  swift_beginAccess();
  uint64_t v13 = *(void *)(a1 + 80);
  if (!*(void *)(v13 + 16))
  {
    swift_endAccess();
LABEL_8:
    v27[0] = a5;
    v27[1] = a6 & 1;
    v27[2] = 0;
    v27[3] = 0;
    uint64_t v22 = 1;
    char v28 = 1;
    swift_beginAccess();
    sub_1A72BEEF4(a2, a3, v11);
    sub_1A72BEFA4(a5);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *v12;
    *uint64_t v12 = 0x8000000000000000;
    sub_1A72D753C((uint64_t)v27, a2, a3, v11, isUniquelyReferenced_nonNull_native);
    *uint64_t v12 = v26;
    swift_bridgeObjectRelease();
    sub_1A72BEFB0(a2, a3, v11);
    swift_endAccess();
    return v22;
  }
  sub_1A72BEEF4(a2, a3, v11);
  unint64_t v14 = sub_1A72B2744(a2, a3, v11);
  if ((v15 & 1) == 0)
  {
    swift_endAccess();
    sub_1A72BEFB0(a2, a3, v11);
    goto LABEL_8;
  }
  char v25 = a6;
  uint64_t v16 = *(void *)(v13 + 56) + 40 * v14;
  char v17 = *(void **)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  uint64_t v20 = *(void *)(v16 + 16);
  uint64_t v19 = *(void *)(v16 + 24);
  int v21 = *(unsigned __int8 *)(v16 + 32);
  swift_endAccess();
  sub_1A72BEF30(v17, v18, v20, v19, v21);
  sub_1A72BEFB0(a2, a3, v11);
  if (v21 != 1)
  {
    swift_release();
    swift_release();
    sub_1A741376C(v17, v18);
    a6 = v25;
    goto LABEL_8;
  }
  sub_1A7413C60(v17, v18, v20, v19, 1);
  return 0;
}

uint64_t sub_1A741243C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7412474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 16))(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v5 & 1;
  return result;
}

uint64_t objectdestroy_5Tm_0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7412504(uint64_t a1)
{
  return sub_1A741130C(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_1A741251C(void *a1, char a2)
{
  if (a2 == 2 || a2 == 1)
  {
  }
  else if (!a2)
  {
    swift_release();
  }
}

void *sub_1A7412544@<X0>(void *(*a1)(uint64_t *__return_ptr, long long *)@<X0>, long long *a2@<X2>, void *a3@<X8>)
{
  char v4 = *((unsigned char *)a2 + 16);
  long long v8 = *a2;
  char v9 = v4;
  uint64_t result = a1(&v6, &v8);
  if (v7) {
    return (void *)swift_willThrow();
  }
  *a3 = v6;
  return result;
}

uint64_t sub_1A74125C4(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *))
{
  uint64_t v6 = *a1;
  char v7 = *(void **)a4;
  uint64_t v8 = *(void *)(a4 + 8);
  char v9 = *(unsigned char *)(a4 + 16);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    id v10 = v6;
    sub_1A741207C(v7, v8, v9, v6, 0);

    swift_release();
  }
  return a5(&v12);
}

uint64_t sub_1A741268C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void *))
{
  char v7 = *(void **)a4;
  uint64_t v8 = *(void *)(a4 + 8);
  char v9 = *(unsigned char *)(a4 + 16);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    id v10 = a1;
    sub_1A741207C(v7, v8, v9, a1, 1);
    swift_release();
  }
  return a5(a1);
}

uint64_t sub_1A7412748(void **a1)
{
  return sub_1A740AF68(*a1);
}

uint64_t sub_1A7412770(void *a1, uint64_t a2, char a3, void *a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a6)
    {
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      id v9 = a1;
      id v10 = a4;
      char v11 = sub_1A7573190();

      if (v11)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
        uint64_t v8 = (void *)sub_1A7572A00();
        goto LABEL_7;
      }
    }
LABEL_8:
    char v13 = 0;
    return v13 & 1;
  }
  if (a6) {
    goto LABEL_8;
  }
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
  uint64_t v8 = (void *)sub_1A7572A00();
LABEL_7:
  uint64_t v12 = (void *)sub_1A7572A00();
  char v13 = sub_1A7573190();

  return v13 & 1;
}

void sub_1A741289C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = qword_1EB705720;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EB704C70;
  uint64_t v7 = sub_1A740BB40(v6, (uint64_t)sub_1A7413958, v4);
  swift_release();

  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  id v9 = (void *)qword_1EB704C70;
  uint64_t v10 = *(void *)(*(void *)(v7 + 16) + 16);
  swift_retain();
  id v11 = v9;
  os_unfair_lock_lock_with_options();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = 0;
  *(unsigned char *)(v12 + 32) = 1;
  *(void *)(v12 + 40) = nullsub_1;
  *(void *)(v12 + 48) = 0;
  *(void *)(v12 + 56) = sub_1A74139B0;
  *(void *)(v12 + 64) = v8;
  *(void *)(v12 + 72) = nullsub_1;
  *(void *)(v12 + 80) = 0;
  id v14 = v11;
  swift_retain();
  char v13 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v12);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  v13();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1A7412A9C(void **a1)
{
  return sub_1A740F248(a1, *(void *)(v1 + 16), *(id *)(v1 + 24));
}

uint64_t sub_1A7412AB8(id a1, void *a2)
{
  if (a2)
  {
    uint64_t v4 = self;
    id v5 = a2;
    id v6 = objc_msgSend(v4, sel_stringFromContact_style_, v5, 0);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

LABEL_11:
      return v8;
    }
  }
  id v9 = objc_msgSend(a1, sel_phones);
  uint64_t v10 = sub_1A7572A10();

  if (*(void *)(v10 + 16))
  {
    uint64_t v8 = *(void *)(v10 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v11 = objc_allocWithZone(MEMORY[0x1E4F1BA70]);
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    id v5 = objc_msgSend(v11, sel_initWithStringValue_, v12);

    id v13 = objc_msgSend(v5, sel_formattedStringValue);
    if (!v13) {
      goto LABEL_11;
    }
    id v14 = v13;
    uint64_t v8 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(a1, sel_emails);
    uint64_t v16 = sub_1A7572A10();

    if (!*(void *)(v16 + 16))
    {
      swift_bridgeObjectRelease();
      id v5 = (id)_REMGetLocalizedString();
      uint64_t v8 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      goto LABEL_11;
    }
    uint64_t v8 = *(void *)(v16 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return v8;
}

id sub_1A7412CB0(id result, char a2)
{
  if (a2 == 2 || a2 == 1) {
    return result;
  }
  if (!a2) {
    return (id)swift_retain();
  }
  return result;
}

uint64_t objectdestroy_18Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7412D1C(void **a1)
{
  return sub_1A740FB28(a1, *(void *)(v1 + 16), *(id *)(v1 + 24));
}

unint64_t sub_1A7412D3C()
{
  unint64_t result = qword_1E96F31A0;
  if (!qword_1E96F31A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F31A0);
  }
  return result;
}

uint64_t dispatch thunk of REMContactsProviderType.meCard(keys:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of REMContactsProviderType.contact(matching:keys:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of REMContactsProviderType.syncContact(matching:keys:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of REMContactsProviderType.contactAndName(matching:keys:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of REMContactsProviderType.name(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t destroy for REMContactAndName(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s19ReminderKitInternal17REMContactAndNameVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMContactAndName(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMContactAndName(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMMatrix(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMMatrix(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMContactAndName()
{
  return &type metadata for REMContactAndName;
}

uint64_t sub_1A7412FD8(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    id v5 = a1;
    return swift_bridgeObjectRetain();
  }
  else
  {
    return swift_retain();
  }
}

void destroy for REMContactAndNameFetchResult(uint64_t a1)
{
}

void sub_1A7413038(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for REMContactAndNameFetchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1A7412FD8(*(void **)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for REMContactAndNameFetchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1A7412FD8(*(void **)a2, v4, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1A7413038(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for REMContactAndNameFetchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1A7413038(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for REMContactAndNameFetchResult()
{
  return &type metadata for REMContactAndNameFetchResult;
}

uint64_t type metadata accessor for REMContactsProvider()
{
  return self;
}

uint64_t method lookup function for REMContactsProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMContactsProvider);
}

uint64_t dispatch thunk of REMContactsProvider.__allocating_init(contactStoreCreator:queue:backgroundQueue:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unsigned char *storeEnumTagSinglePayload for REMMeCardAddressType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74132D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMMeCardAddressType()
{
  return &type metadata for REMMeCardAddressType;
}

uint64_t destroy for REMContactsProvider.OperationParams(uint64_t a1)
{
  return sub_1A72BEFB0(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s19ReminderKitInternal19REMContactsProviderC15OperationParamsOwCP_0(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1A72BEEF4(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMContactsProvider.OperationParams(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1A72BEEF4(*(void **)a2, v4, v5);
  unsigned int v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A72BEFB0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMContactsProvider.OperationParams(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A72BEFB0(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for REMContactsProvider.OperationParams()
{
  return &type metadata for REMContactsProvider.OperationParams;
}

uint64_t sub_1A741341C(uint64_t a1)
{
  return MEMORY[0x1F4186618](a1, &unk_1A75B9440, 1);
}

unint64_t sub_1A741343C()
{
  unint64_t result = qword_1EB703688;
  if (!qword_1EB703688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703688);
  }
  return result;
}

uint64_t sub_1A7413490()
{
  return sub_1A740CBF8(v0, (void (*)(uint64_t))sub_1A740BA04);
}

uint64_t sub_1A74134C0(uint64_t a1)
{
  return sub_1A740CC94(a1, v1, (void (*)(uint64_t))sub_1A740B638);
}

uint64_t sub_1A74134F4(uint64_t *a1)
{
  return sub_1A740C990(*a1, *(uint64_t (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1A7413508(uint64_t a1)
{
  return sub_1A7413DE0(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1A740DBA4);
}

uint64_t sub_1A7413524()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t *))(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 32);
  return v1(&v3);
}

uint64_t sub_1A7413564(uint64_t a1)
{
  return sub_1A740CDDC(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v1);
}

void sub_1A741357C(uint64_t a1)
{
  sub_1A740DEE8(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void (**)(void, void))(v1 + 56), *(void *)(v1 + 64), *(uint64_t (**)(void))(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_1A74135C8()
{
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A7413610()
{
  uint64_t v1 = *(uint64_t (**)(long long *))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 48);
  long long v4 = *(_OWORD *)(v0 + 32);
  uint64_t v5 = v2;
  return v1(&v4);
}

void sub_1A7413658(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1) {
    sub_1A73A9D60(a1, a2, a3, a4);
  }
}

uint64_t objectdestroy_48Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A73A9D60(*(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));

  return swift_deallocObject();
}

void sub_1A74136CC()
{
  sub_1A740E2E4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
}

uint64_t sub_1A74136E0()
{
  swift_release();
  sub_1A72BEFB0(*(void **)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  sub_1A7413730(*(id *)(v0 + 48));

  return swift_deallocObject();
}

void sub_1A7413730(id a1)
{
}

uint64_t sub_1A741373C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  *(unsigned char *)(a2 + 16) = *((unsigned char *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_1A7413754()
{
  return sub_1A7411DFC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
}

void sub_1A741376C(id a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_1A7413730(a1);
  }
}

uint64_t sub_1A7413784()
{
  return sub_1A740CBF8(v0, (void (*)(uint64_t))sub_1A740B8D4);
}

uint64_t sub_1A74137B4(uint64_t a1)
{
  return sub_1A740CC94(a1, v1, (void (*)(uint64_t))sub_1A740B4DC);
}

uint64_t sub_1A74137E8(uint64_t *a1)
{
  return sub_1A740C728(*a1, *(uint64_t (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1A74137FC(uint64_t *a1)
{
  return sub_1A740CD38(*a1, a1[1], v1);
}

void sub_1A7413810(uint64_t a1)
{
  sub_1A740DD48(*(void **)a1, *(id *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void (**)(void, void))(v1 + 56), *(void *)(v1 + 64), *(uint64_t (**)(void))(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_1A7413858()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A7413898()
{
  uint64_t v1 = (uint64_t (*)(void *))v0[2];
  uint64_t v2 = v0[5];
  v4[0] = v0[4];
  v4[1] = v2;
  return v1(v4);
}

void sub_1A74138D8(void *a1, id a2, char a3)
{
  if (a3 != -1) {
    sub_1A73A9F2C(a1, a2, a3);
  }
}

uint64_t objectdestroy_78Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A73A9F2C(*(void **)(v0 + 32), *(id *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return swift_deallocObject();
}

void sub_1A7413948()
{
  sub_1A740E17C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
}

void sub_1A7413958(id *a1)
{
  uint64_t v2 = *(void (**)(id *))(v1 + 16);
  id v4 = *a1;
  id v3 = v4;
  v2(&v4);
}

uint64_t sub_1A74139B0()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t *))(v0 + 16);
  uint64_t v3 = 0;
  return v1(&v3);
}

uint64_t sub_1A74139EC()
{
  return sub_1A740CBF8(v0, (void (*)(uint64_t))sub_1A740B7A4);
}

uint64_t sub_1A7413A1C(uint64_t a1)
{
  return sub_1A740CC94(a1, v1, (void (*)(uint64_t))sub_1A740B23C);
}

uint64_t objectdestroy_33Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7413A90(uint64_t *a1)
{
  return sub_1A740BE50(*a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1A7413AA4(uint64_t a1)
{
  return sub_1A7413DE0(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1A740DA18);
}

uint64_t objectdestroy_39Tm()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1A7413B00(id a1, char a2)
{
  if (a2 != -1) {
    sub_1A73AA050(a1, a2);
  }
}

uint64_t sub_1A7413B14()
{
  return objectdestroy_107Tm((void (*)(void, void))sub_1A73AA050);
}

uint64_t sub_1A7413B30()
{
  return objectdestroy_107Tm((void (*)(void, void))sub_1A73AA050);
}

void sub_1A7413B48()
{
  sub_1A740E0B4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1A7413B58()
{
  return objectdestroy_107Tm((void (*)(void, void))sub_1A73AA050);
}

void sub_1A7413B70(id a1, unsigned __int8 a2)
{
  if (a2 != 0xFF) {
    sub_1A73A9C84(a1, a2);
  }
}

uint64_t sub_1A7413B84()
{
  return objectdestroy_107Tm((void (*)(void, void))sub_1A73A9C84);
}

void sub_1A7413BA0()
{
  sub_1A740E230(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1A7413BC4(void **a1)
{
  return sub_1A740ACBC(*a1);
}

uint64_t sub_1A7413BEC(void *a1)
{
  return sub_1A740B38C(a1);
}

uint64_t sub_1A7413C10(uint64_t a1)
{
  return a1;
}

void sub_1A7413C48(void *a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255) {
    sub_1A7413C60(a1, a2, a3, a4, a5 & 1);
  }
}

void sub_1A7413C60(void *a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    sub_1A7413730(a1);
  }
  else
  {
    sub_1A741376C(a1, a2);
    swift_release();
    swift_release();
  }
}

uint64_t sub_1A7413CBC(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1A7413D00(void **a1, uint64_t a2)
{
  return sub_1A74125C4(a1, a2, *(void *)(v2 + 16), v2 + 24, *(uint64_t (**)(uint64_t *))(v2 + 48));
}

uint64_t objectdestroy_122Tm()
{
  swift_release();
  sub_1A72BEFB0(*(void **)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7413D74(void *a1, uint64_t a2)
{
  return sub_1A741268C(a1, a2, *(void *)(v2 + 16), v2 + 24, *(uint64_t (**)(void *))(v2 + 48));
}

uint64_t sub_1A7413D84()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1A7413DCC(uint64_t *a1)
{
  sub_1A740C1E8(*a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *, uint64_t))(v1 + 32));
}

uint64_t sub_1A7413DE0(uint64_t a1, uint64_t (*a2)(void, void, void, void, void, void, void, void, void, void, void))
{
  return a2(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80));
}

uint64_t sub_1A7413E34()
{
  return objectdestroy_107Tm((void (*)(void, void))sub_1A73AA13C);
}

uint64_t sub_1A7413E4C()
{
  return objectdestroy_107Tm((void (*)(void, void))sub_1A73AA13C);
}

uint64_t objectdestroy_107Tm(void (*a1)(void, void))
{
  swift_release();
  swift_bridgeObjectRelease();
  a1(*(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));

  return swift_deallocObject();
}

uint64_t sub_1A7413EC0()
{
  swift_release();
  sub_1A72BEFB0(*(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return swift_deallocObject();
}

void *sub_1A7413F04@<X0>(void *a1@<X8>)
{
  return sub_1A7412544(*(void *(**)(uint64_t *__return_ptr, long long *))(v1 + 16), (long long *)(v1 + 32), a1);
}

uint64_t sub_1A7413F24()
{
  return sub_1A740D340(*(void (**)(void **__return_ptr))(v0 + 16));
}

uint64_t sub_1A7413F2C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1A7413F74()
{
  sub_1A740D128(*(void (**)(void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1A7413F84(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = *a1;
  return v2(&v4);
}

uint64_t sub_1A7413FC8(uint64_t a1)
{
  return sub_1A7327F68(a1, *(uint64_t (**)(void))(v1 + 16));
}

unint64_t sub_1A7413FD4()
{
  unint64_t result = qword_1E96F3248;
  if (!qword_1E96F3248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3248);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for REMContactsProvider.ContactFetchError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A74140C4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMContactsProvider.ContactFetchError()
{
  return &type metadata for REMContactsProvider.ContactFetchError;
}

ValueMetadata *type metadata accessor for KeysToFetch()
{
  return &type metadata for KeysToFetch;
}

unint64_t sub_1A7414110()
{
  unint64_t result = qword_1E96F3250;
  if (!qword_1E96F3250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3250);
  }
  return result;
}

unint64_t sub_1A7414168()
{
  unint64_t result = qword_1E96F3258;
  if (!qword_1E96F3258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3258);
  }
  return result;
}

unint64_t sub_1A74141C0()
{
  unint64_t result = qword_1E96F3260;
  if (!qword_1E96F3260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3260);
  }
  return result;
}

uint64_t sub_1A7414250()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1EB701860);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB701860);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

unint64_t REMWidgetRefresh.WidgetKind.widgetKindIdentifier.getter()
{
  if (*v0) {
    return 0xD000000000000020;
  }
  else {
    return 0xD00000000000001ALL;
  }
}

BOOL static REMWidgetRefresh.WidgetKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t REMWidgetRefresh.WidgetKind.hash(into:)()
{
  return sub_1A75740D0();
}

void *static REMWidgetRefresh.WidgetKind.allCases.getter()
{
  return &unk_1EFC919B0;
}

uint64_t REMWidgetRefresh.WidgetKind.hashValue.getter()
{
  return sub_1A7574110();
}

void sub_1A74143F0(void *a1@<X8>)
{
  *a1 = &unk_1EFC8F9A8;
}

void *REMWidgetRefresh.__allocating_init(interval:queue:)(void *a1)
{
  swift_allocObject();
  uint64_t v2 = sub_1A74146E0(a1);

  return v2;
}

void *REMWidgetRefresh.init(interval:queue:)(void *a1)
{
  uint64_t v2 = sub_1A74146E0(a1);

  return v2;
}

uint64_t sub_1A741448C()
{
  uint64_t v1 = sub_1A75722A0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + 32);
  *unsigned int v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCBF0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1A75722C0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704050);
    sub_1A72AE788((unint64_t *)&unk_1EB6FFD40, &qword_1EB704050);
    sub_1A75720D0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A74145EC()
{
  uint64_t v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v3 = v0;
  swift_bridgeObjectRetain();
  sub_1A7572740();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB700560 = v2;
  *(void *)algn_1EB700568 = v3;
  return result;
}

uint64_t REMWidgetRefresh.deinit()
{
  swift_release();
  swift_release();

  return v0;
}

uint64_t REMWidgetRefresh.__deallocating_deinit()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186488](v0, 40, 7);
}

void *sub_1A74146E0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v24 = *v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704BB0);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1A7573080();
  uint64_t v7 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704040);
  uint64_t v10 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704050);
  swift_allocObject();
  uint64_t v13 = sub_1A7572040();
  void v1[2] = v13;
  v1[4] = a1;
  uint64_t v26 = v13;
  id v14 = a1;
  swift_retain();
  sub_1A7573070();
  id v25 = v14;
  uint64_t v15 = sub_1A7573060();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
  sub_1A7366C4C();
  sub_1A72AE788(&qword_1EB704048, &qword_1EB704050);
  sub_1A7414FA0();
  sub_1A75721C0();
  sub_1A7414FF8((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  swift_release();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v24;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = j___s19ReminderKitInternal16REMWidgetRefreshC18refreshImmediatelyyyFZ_0;
  *(void *)(v17 + 24) = v16;
  sub_1A72AE788(&qword_1EB704038, &qword_1EB704040);
  uint64_t v18 = v23;
  uint64_t v19 = sub_1A75721D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  v2[3] = v19;
  return v2;
}

void _s19ReminderKitInternal16REMWidgetRefreshC18refreshImmediatelyyyFZ_0()
{
  if (qword_1EB6FFD50 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1A7571E90();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB701860);
  uint64_t v1 = sub_1A7571E80();
  os_log_type_t v2 = sub_1A7572FF0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1A72A1000, v1, v2, "Asking for Widget Refresh", v3, 2u);
    MEMORY[0x1AD0CD330](v3, -1, -1);
  }

  if (qword_1EB7017C8 != -1) {
    swift_once();
  }
  id v4 = objc_allocWithZone(MEMORY[0x1E4F58DA0]);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v6 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v4, sel_initWithExtensionBundleIdentifier_kind_, v5, v6);

  uint64_t v8 = (void *)sub_1A75725E0();
  id v9 = objc_allocWithZone(MEMORY[0x1E4F58DA0]);
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v9, sel_initWithExtensionBundleIdentifier_kind_, v10, v11);

  uint64_t v12 = (void *)sub_1A75725E0();
}

unint64_t sub_1A7414D98()
{
  unint64_t result = qword_1E96F3270;
  if (!qword_1E96F3270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3270);
  }
  return result;
}

uint64_t sub_1A7414DEC()
{
  return sub_1A72AE788(&qword_1E96F3278, &qword_1E96F3280);
}

uint64_t type metadata accessor for REMWidgetRefresh()
{
  return self;
}

uint64_t method lookup function for REMWidgetRefresh(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMWidgetRefresh);
}

uint64_t dispatch thunk of REMWidgetRefresh.__allocating_init(interval:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of REMWidgetRefresh.refresh()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

unsigned char *storeEnumTagSinglePayload for REMWidgetRefresh.WidgetKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7414F68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMWidgetRefresh.WidgetKind()
{
  return &type metadata for REMWidgetRefresh.WidgetKind;
}

unint64_t sub_1A7414FA0()
{
  unint64_t result = qword_1EB704BB8;
  if (!qword_1EB704BB8)
  {
    sub_1A7366C4C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704BB8);
  }
  return result;
}

uint64_t sub_1A7414FF8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704BB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A7415058()
{
  return swift_deallocObject();
}

uint64_t sub_1A741506C()
{
  swift_release();

  return swift_deallocObject();
}

BOOL REMFeatureFlags.isEnabled.getter()
{
  char v3 = *v0;
  uint64_t v2 = 0;
  return REMFeatureFlags.isEnabled(on:)((ReminderKitInternal::REMFeatureFlags::Platforms)&v2);
}

ReminderKitInternal::REMFeatureFlags::DevelopmentPhase_optional __swiftcall REMFeatureFlags.DevelopmentPhase.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t REMFeatureFlags.DevelopmentPhase.rawValue.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x706D6F4365646F43;
      break;
    case 2:
      unint64_t result = 0x5277656976657250;
      break;
    case 3:
      unint64_t result = 0x4365727574616546;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A74151F0(unsigned __int8 *a1, char *a2)
{
  return sub_1A75448F8(*a1, *a2);
}

uint64_t sub_1A74151FC()
{
  return sub_1A75019B4();
}

uint64_t sub_1A7415204()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A74152E8()
{
  return sub_1A750341C();
}

ReminderKitInternal::REMFeatureFlags::DevelopmentPhase_optional sub_1A74152F0(Swift::String *a1)
{
  return REMFeatureFlags.DevelopmentPhase.init(rawValue:)(*a1);
}

void sub_1A74152FC(uint64_t a1@<X8>)
{
  unint64_t v2 = 0x80000001A759DFC0;
  unint64_t v3 = 0xD000000000000010;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC0000006574656CLL;
      unint64_t v3 = 0x706D6F4365646F43;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "PreviewReady");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0x4365727574616546;
      *(void *)(a1 + 8) = 0xEF6574656C706D6FLL;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t REMFeatureFlags.TargetRelease.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t REMFeatureFlags.TargetRelease.rawValue.getter()
{
  return 0x3432303243445757;
}

uint64_t sub_1A7415428()
{
  return sub_1A7574110();
}

uint64_t sub_1A741547C()
{
  return sub_1A75726F0();
}

uint64_t sub_1A7415494()
{
  return sub_1A7574110();
}

uint64_t sub_1A74154E4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A7415538(void *a1@<X8>)
{
  *a1 = 0x3432303243445757;
  a1[1] = 0xE800000000000000;
}

void REMFeatureFlags.currentDevelopmentPhase.getter(unsigned char *a1@<X8>)
{
  *a1 = byte_1A75842C0[*v1];
}

void REMFeatureFlags.targetRelease.getter(unsigned char *a1@<X8>)
{
  *a1 = (0x800Fu >> *v1) & 1;
}

uint64_t REMFeatureFlags.platforms.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = 0x7FFFFFFFFFFFFFFFLL;
  switch(*v1)
  {
    case 1:
    case 6:
    case 9:
    case 0xA:
      if (qword_1E96F0830 != -1) {
        uint64_t result = swift_once();
      }
      uint64_t v3 = qword_1E96F3288 | 0xC;
      break;
    case 3:
      break;
    case 5:
      uint64_t v3 = qword_1EFC91B10;
      break;
    case 0xC:
    case 0xE:
    case 0xF:
      if (qword_1E96F0830 != -1) {
        uint64_t result = swift_once();
      }
      uint64_t v3 = qword_1E96F3288;
      break;
    case 0xD:
      uint64_t v3 = qword_1EFC91B38;
      break;
    default:
      if (qword_1E96F0830 != -1) {
        uint64_t result = swift_once();
      }
      uint64_t v3 = qword_1E96F3288 | 4;
      break;
  }
  *a1 = v3;
  return result;
}

Swift::Bool __swiftcall REMFeatureFlags.isEnabled(on:)(ReminderKitInternal::REMFeatureFlags::Platforms on)
{
  uint64_t v2 = *(void *)on.rawValue;
  unsigned __int8 v3 = *v1;
  if (qword_1EB705A08 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unsigned int v4 = off_1EB705880;
  if (*((void *)off_1EB705880 + 2) && (unint64_t v5 = sub_1A72B25E0(v3), (v6 & 1) != 0))
  {
    char v7 = *(unsigned char *)(v4[7] + v5);
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    if (!v2) {
      goto LABEL_10;
    }
    if (qword_1E96F0830 != -1) {
      swift_once();
    }
    if ((v2 & ~qword_1E96F3288) != 0)
    {
      return 0;
    }
    else
    {
LABEL_10:
      uint64_t v8 = (void *)sub_1A75725E0();
      REMFeatureFlags.rawValue.getter();
      id v9 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      char v7 = rem_feature_enabled();
    }
  }
  return v7;
}

BOOL static REMFeatureFlags.Platforms.matchesCurrent(platform:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (!*a1) {
    return 1;
  }
  if (qword_1E96F0830 != -1) {
    swift_once();
  }
  return (v1 & ~qword_1E96F3288) == 0;
}

unint64_t REMFeatureFlags.rawValue.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6166654469726973;
      break;
    case 2:
      unint64_t result = 0xD000000000000020;
      break;
    case 3:
      unint64_t result = 0x6170655361746164;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 6:
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0x744179426F646E75;
      break;
    case 8:
      unint64_t result = 0x6F65527961646F74;
      break;
    case 0xA:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 0xB:
      unint64_t result = 0x6F6E6E4177656976;
      break;
    case 0xC:
      unint64_t result = 0x65746365746F7270;
      break;
    case 0xD:
      unint64_t result = 0x6174537472616D73;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000011;
      break;
    case 0xF:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static REMFeatureFlags.withOverrides(enabled:disabled:block:)(void **a1, unint64_t a2, void (*a3)(uint64_t))
{
  if (qword_1EB705A08 != -1) {
    goto LABEL_42;
  }
  while (1)
  {
    swift_beginAccess();
    unint64_t v5 = off_1EB705880;
    char v41 = off_1EB705880;
    uint64_t v42 = (char *)a1[2];
    if (!v42) {
      break;
    }
    unint64_t v38 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v6 = 0;
    while (1)
    {
      char v7 = a1;
      unsigned __int8 v8 = v6[(void)a1 + 32];
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      a1 = (void **)off_1EB705880;
      uint64_t v43 = (void **)off_1EB705880;
      off_1EB705880 = (_UNKNOWN *)0x8000000000000000;
      a2 = sub_1A72B25E0(v8);
      uint64_t v11 = a1[2];
      BOOL v12 = (v10 & 1) == 0;
      uint64_t v13 = (uint64_t)v11 + v12;
      if (__OFADD__(v11, v12)) {
        break;
      }
      char v14 = v10;
      if ((uint64_t)a1[3] >= v13)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v17 = v43;
          if ((v10 & 1) == 0) {
            goto LABEL_13;
          }
        }
        else
        {
          a1 = (void **)&v43;
          sub_1A72BD930();
          uint64_t v17 = v43;
          if ((v14 & 1) == 0) {
            goto LABEL_13;
          }
        }
      }
      else
      {
        sub_1A72B8F4C(v13, isUniquelyReferenced_nonNull_native);
        a1 = v43;
        unint64_t v15 = sub_1A72B25E0(v8);
        if ((v14 & 1) != (v16 & 1))
        {
LABEL_43:
          uint64_t result = sub_1A7574010();
          __break(1u);
          return result;
        }
        a2 = v15;
        uint64_t v17 = v43;
        if ((v14 & 1) == 0)
        {
LABEL_13:
          v17[(a2 >> 6) + 8] = (void *)((unint64_t)v17[(a2 >> 6) + 8] | (1 << a2));
          *((unsigned char *)v17[6] + a2) = v8;
          *((unsigned char *)v17[7] + a2) = 1;
          uint64_t v18 = (char *)v17[2];
          BOOL v19 = __OFADD__(v18, 1);
          uint64_t v20 = v18 + 1;
          if (v19) {
            goto LABEL_40;
          }
          v17[2] = v20;
          goto LABEL_5;
        }
      }
      *((unsigned char *)v17[7] + a2) = 1;
LABEL_5:
      ++v6;
      off_1EB705880 = v17;
      swift_bridgeObjectRelease();
      swift_endAccess();
      a1 = v7;
      if (v42 == v6)
      {
        uint64_t v21 = swift_bridgeObjectRelease();
        a2 = v38;
        unint64_t v5 = v41;
        uint64_t v22 = *(void *)(v38 + 16);
        if (!v22) {
          goto LABEL_35;
        }
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v23 = 0;
        while (2)
        {
          unint64_t v24 = a2;
          unsigned __int8 v25 = *(unsigned char *)(a2 + v23 + 32);
          swift_beginAccess();
          char v26 = swift_isUniquelyReferenced_nonNull_native();
          a1 = (void **)off_1EB705880;
          uint64_t v43 = (void **)off_1EB705880;
          off_1EB705880 = (_UNKNOWN *)0x8000000000000000;
          unint64_t v28 = sub_1A72B25E0(v25);
          uint64_t v29 = a1[2];
          BOOL v30 = (v27 & 1) == 0;
          uint64_t v31 = (uint64_t)v29 + v30;
          if (__OFADD__(v29, v30)) {
            goto LABEL_39;
          }
          a2 = v27;
          if ((uint64_t)a1[3] >= v31)
          {
            if (v26)
            {
              char v34 = v43;
              if ((v27 & 1) == 0) {
                goto LABEL_30;
              }
            }
            else
            {
              a1 = (void **)&v43;
              sub_1A72BD930();
              char v34 = v43;
              if ((a2 & 1) == 0) {
                goto LABEL_30;
              }
            }
          }
          else
          {
            sub_1A72B8F4C(v31, v26);
            a1 = v43;
            unint64_t v32 = sub_1A72B25E0(v25);
            if ((a2 & 1) != (v33 & 1)) {
              goto LABEL_43;
            }
            unint64_t v28 = v32;
            char v34 = v43;
            if ((a2 & 1) == 0)
            {
LABEL_30:
              v34[(v28 >> 6) + 8] = (void *)((unint64_t)v34[(v28 >> 6) + 8] | (1 << v28));
              *((unsigned char *)v34[6] + v28) = v25;
              *((unsigned char *)v34[7] + v28) = 0;
              long long v35 = (char *)v34[2];
              BOOL v19 = __OFADD__(v35, 1);
              uint64_t v36 = v35 + 1;
              if (v19) {
                goto LABEL_41;
              }
              v34[2] = v36;
LABEL_22:
              ++v23;
              off_1EB705880 = v34;
              swift_bridgeObjectRelease();
              swift_endAccess();
              a2 = v24;
              if (v22 == v23)
              {
                uint64_t v21 = swift_bridgeObjectRelease();
                unint64_t v5 = v41;
                goto LABEL_35;
              }
              continue;
            }
          }
          break;
        }
        *((unsigned char *)v34[7] + v28) = 0;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    swift_once();
  }
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = *(void *)(a2 + 16);
  if (v22) {
    goto LABEL_20;
  }
LABEL_35:
  a3(v21);
  if (!v40) {
    off_1EB705880 = v5;
  }
  return swift_bridgeObjectRelease();
}

id static REMFeatureFlags.override(enabled:disabled:)(unint64_t a1, void **a2)
{
  if (qword_1EB705A08 != -1) {
    goto LABEL_40;
  }
LABEL_2:
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v39 = off_1EB705880;
  if (!v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = (char *)a2[2];
    if (!v20)
    {
LABEL_35:
      long long v35 = (objc_class *)type metadata accessor for TemporaryOverride();
      uint64_t v36 = objc_allocWithZone(v35);
      v36[OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_finishCalled] = 0;
      *(void *)&v36[OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_overridesToRestore] = v39;
      v40.receiver = v36;
      v40.super_class = v35;
      return objc_msgSendSuper2(&v40, sel_init);
    }
    goto LABEL_20;
  }
  unint64_t v38 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (1)
  {
    unint64_t v6 = a1;
    a1 = *(unsigned __int8 *)(a1 + v5 + 32);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a2 = (void **)off_1EB705880;
    char v41 = (void **)off_1EB705880;
    off_1EB705880 = (_UNKNOWN *)0x8000000000000000;
    unint64_t v9 = sub_1A72B25E0(a1);
    char v10 = a2[2];
    BOOL v11 = (v8 & 1) == 0;
    uint64_t v12 = (uint64_t)v10 + v11;
    if (__OFADD__(v10, v11))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      swift_once();
      goto LABEL_2;
    }
    char v13 = v8;
    if ((uint64_t)a2[3] < v12) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      char v16 = v41;
      if ((v8 & 1) == 0) {
        goto LABEL_13;
      }
    }
    else
    {
      a2 = (void **)&v41;
      sub_1A72BD930();
      char v16 = v41;
      if ((v13 & 1) == 0)
      {
LABEL_13:
        v16[(v9 >> 6) + 8] = (void *)((unint64_t)v16[(v9 >> 6) + 8] | (1 << v9));
        *((unsigned char *)v16[6] + v9) = a1;
        *((unsigned char *)v16[7] + v9) = 1;
        uint64_t v17 = (char *)v16[2];
        BOOL v18 = __OFADD__(v17, 1);
        BOOL v19 = v17 + 1;
        if (v18) {
          goto LABEL_38;
        }
        _OWORD v16[2] = v19;
        goto LABEL_5;
      }
    }
LABEL_4:
    *((unsigned char *)v16[7] + v9) = 1;
LABEL_5:
    ++v5;
    off_1EB705880 = v16;
    swift_bridgeObjectRelease();
    swift_endAccess();
    a1 = v6;
    if (v4 == v5)
    {
      swift_bridgeObjectRelease();
      a2 = v38;
      uint64_t v20 = (char *)v38[2];
      if (!v20) {
        goto LABEL_35;
      }
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t v21 = 0;
      while (1)
      {
        uint64_t v22 = a2;
        unsigned __int8 v23 = v21[(void)a2 + 32];
        swift_beginAccess();
        char v24 = swift_isUniquelyReferenced_nonNull_native();
        a2 = (void **)off_1EB705880;
        char v41 = (void **)off_1EB705880;
        off_1EB705880 = (_UNKNOWN *)0x8000000000000000;
        a1 = sub_1A72B25E0(v23);
        char v26 = a2[2];
        BOOL v27 = (v25 & 1) == 0;
        uint64_t v28 = (uint64_t)v26 + v27;
        if (__OFADD__(v26, v27)) {
          goto LABEL_37;
        }
        char v29 = v25;
        if ((uint64_t)a2[3] >= v28)
        {
          if (v24)
          {
            unint64_t v32 = v41;
            if ((v25 & 1) == 0) {
              goto LABEL_30;
            }
          }
          else
          {
            a2 = (void **)&v41;
            sub_1A72BD930();
            unint64_t v32 = v41;
            if ((v29 & 1) == 0) {
              goto LABEL_30;
            }
          }
        }
        else
        {
          sub_1A72B8F4C(v28, v24);
          a2 = v41;
          unint64_t v30 = sub_1A72B25E0(v23);
          if ((v29 & 1) != (v31 & 1)) {
            goto LABEL_41;
          }
          a1 = v30;
          unint64_t v32 = v41;
          if ((v29 & 1) == 0)
          {
LABEL_30:
            v32[(a1 >> 6) + 8] = (void *)((unint64_t)v32[(a1 >> 6) + 8] | (1 << a1));
            *((unsigned char *)v32[6] + a1) = v23;
            *((unsigned char *)v32[7] + a1) = 0;
            char v33 = (char *)v32[2];
            BOOL v18 = __OFADD__(v33, 1);
            char v34 = v33 + 1;
            if (v18) {
              goto LABEL_39;
            }
            v32[2] = v34;
            goto LABEL_22;
          }
        }
        *((unsigned char *)v32[7] + a1) = 0;
LABEL_22:
        ++v21;
        off_1EB705880 = v32;
        swift_bridgeObjectRelease();
        swift_endAccess();
        a2 = v22;
        if (v20 == v21)
        {
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
      }
    }
  }
  sub_1A72B8F4C(v12, isUniquelyReferenced_nonNull_native);
  a2 = v41;
  unint64_t v14 = sub_1A72B25E0(a1);
  if ((v13 & 1) == (v15 & 1))
  {
    unint64_t v9 = v14;
    char v16 = v41;
    if ((v13 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_4;
  }
LABEL_41:
  id result = (id)sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t REMFeatureFlags.Platforms.rawValue.getter()
{
  return *(void *)v0;
}

void static REMFeatureFlags.Platforms.current.getter(void *a1@<X8>)
{
  *a1 = 0;
}

ReminderKitInternal::REMFeatureFlags::Platforms __swiftcall REMFeatureFlags.Platforms.init(rawValue:)(ReminderKitInternal::REMFeatureFlags::Platforms rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static REMFeatureFlags.Platforms.iphoneOS.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static REMFeatureFlags.Platforms.ipadOS.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void sub_1A7416290()
{
  uint64_t v0 = unk_1EFC8DCB8;
  if ((unk_1EFC8DCB8 & ~qword_1EFC8DCB0) == 0) {
    uint64_t v0 = 0;
  }
  qword_1E96F3288 = v0 | qword_1EFC8DCB0;
}

void static REMFeatureFlags.Platforms.macOS.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static REMFeatureFlags.Platforms.watchOS.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static REMFeatureFlags.Platforms.all.getter(void *a1@<X8>)
{
  *a1 = 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t _s19ReminderKitInternal15REMFeatureFlagsO9PlatformsV3iOSAEvgZ_0@<X0>(void *a1@<X8>)
{
  if (qword_1E96F0830 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_1E96F3288;
  return result;
}

uint64_t REMFeatureFlags.Platforms.description.getter()
{
  uint64_t v1 = *v0;
  if ((~*v0 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
    return 0x5D6C6C615BLL;
  }
  if (!v1) {
    return 23899;
  }
  if (qword_1E96F0830 != -1) {
    swift_once();
  }
  if ((qword_1E96F3288 & ~v1) != 0 && (v1 & 1) == 0 && (v1 & 2) == 0)
  {
    if ((v1 & 4) == 0) {
      goto LABEL_12;
    }
LABEL_16:
    sub_1A7416548();
    swift_beginAccess();
    sub_1A7572740();
    swift_endAccess();
    if ((v1 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  sub_1A7416548();
  swift_beginAccess();
  sub_1A7572740();
  swift_endAccess();
  if ((v1 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_12:
  if ((v1 & 8) != 0)
  {
LABEL_13:
    sub_1A7416548();
    swift_beginAccess();
    sub_1A7572740();
    swift_endAccess();
  }
LABEL_14:
  swift_beginAccess();
  sub_1A7572740();
  swift_endAccess();
  return 0;
}

uint64_t sub_1A7416548()
{
  return swift_bridgeObjectRelease();
}

ReminderKitInternal::REMFeatureFlags::ExternalFeatureFlag __swiftcall REMFeatureFlags.ExternalFeatureFlag.init(domain:feature:)(Swift::String domain, Swift::String feature)
{
  *uint64_t v2 = domain;
  v2[1] = feature;
  result.feature = feature;
  result.domain = domain;
  return result;
}

uint64_t REMFeatureFlags.ExternalFeatureFlag.isEnabled.getter()
{
  uint64_t v0 = (void *)sub_1A75725E0();
  uint64_t v1 = (void *)sub_1A75725E0();
  uint64_t v2 = rem_feature_enabled();

  return v2;
}

uint64_t static REMFeatureFlags.isAppleAccountBrandingEnabled()()
{
  uint64_t v0 = (void *)sub_1A75725E0();
  uint64_t v1 = (void *)sub_1A75725E0();
  uint64_t v2 = rem_feature_enabled();

  return v2;
}

void *sub_1A74166DC()
{
  ReminderKitInternal::REMFeatureFlags::ExternalFeatureFlag result = (void *)sub_1A72B1238(MEMORY[0x1E4FBC860]);
  off_1EB705880 = result;
  return result;
}

ReminderKitInternal::REMFeatureFlags_optional __swiftcall REMFeatureFlags.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 16;
  if (v3 < 0x10) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static REMFeatureFlags.allCases.getter()
{
  return &unk_1EFC8F978;
}

uint64_t sub_1A741676C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A754483C(*a1, *a2);
}

uint64_t sub_1A7416778()
{
  return sub_1A7574110();
}

uint64_t sub_1A74167E0()
{
  REMFeatureFlags.rawValue.getter();
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7416844()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMFeatureFlags_optional sub_1A74168A8(Swift::String *a1)
{
  return REMFeatureFlags.init(rawValue:)(*a1);
}

unint64_t sub_1A74168B4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = REMFeatureFlags.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1A74168DC(void *a1@<X8>)
{
  *a1 = &unk_1EFC8F978;
}

id sub_1A74168EC()
{
  ObjectType = (objc_class *)swift_getObjectType();
  if ((v0[OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_finishCalled] & 1) == 0)
  {
    v0[OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_finishCalled] = 1;
    if (qword_1EB705A08 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_overridesToRestore];
    swift_beginAccess();
    off_1EB705880 = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1A7416A30()
{
  if ((*(unsigned char *)(v0
                 + OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_finishCalled) & 1) == 0)
  {
    *(unsigned char *)(v0
             + OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_finishCalled) = 1;
    if (qword_1EB705A08 != -1) {
      swift_once();
    }
    uint64_t v1 = *(void **)(v0
                  + OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_overridesToRestore);
    swift_beginAccess();
    off_1EB705880 = v1;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for TemporaryOverride()
{
  return self;
}

unint64_t sub_1A7416B0C()
{
  unint64_t result = qword_1E96F32A0;
  if (!qword_1E96F32A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F32A0);
  }
  return result;
}

unint64_t sub_1A7416B64()
{
  unint64_t result = qword_1E96F32A8;
  if (!qword_1E96F32A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F32A8);
  }
  return result;
}

unint64_t sub_1A7416BBC()
{
  unint64_t result = qword_1E96F32B0;
  if (!qword_1E96F32B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F32B0);
  }
  return result;
}

unint64_t sub_1A7416C14()
{
  unint64_t result = qword_1E96F32B8;
  if (!qword_1E96F32B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F32B8);
  }
  return result;
}

unint64_t sub_1A7416C6C()
{
  unint64_t result = qword_1E96F32C0;
  if (!qword_1E96F32C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F32C0);
  }
  return result;
}

unint64_t sub_1A7416CC4()
{
  unint64_t result = qword_1E96F32C8;
  if (!qword_1E96F32C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F32C8);
  }
  return result;
}

unint64_t sub_1A7416D1C()
{
  unint64_t result = qword_1E96F32D0;
  if (!qword_1E96F32D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F32D0);
  }
  return result;
}

unint64_t sub_1A7416D74()
{
  unint64_t result = qword_1E96F32D8;
  if (!qword_1E96F32D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F32E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F32D8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for REMFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for REMFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *unint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7416F2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMFeatureFlags()
{
  return &type metadata for REMFeatureFlags;
}

unsigned char *storeEnumTagSinglePayload for REMFeatureFlags.DevelopmentPhase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7417030);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMFeatureFlags.DevelopmentPhase()
{
  return &type metadata for REMFeatureFlags.DevelopmentPhase;
}

unsigned char *storeEnumTagSinglePayload for REMFeatureFlags.TargetRelease(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A7417104);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMFeatureFlags.TargetRelease()
{
  return &type metadata for REMFeatureFlags.TargetRelease;
}

ValueMetadata *type metadata accessor for REMFeatureFlags.Platforms()
{
  return &type metadata for REMFeatureFlags.Platforms;
}

ValueMetadata *type metadata accessor for REMFeatureFlags.ExternalFeatureFlag()
{
  return &type metadata for REMFeatureFlags.ExternalFeatureFlag;
}

uint64_t dispatch thunk of REMFeatureFlagsTemporaryOverride.finish()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A7417170(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  v17[3] = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    uint64_t v16 = a4 & 0xFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    while (1)
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        int v10 = sub_1A7573550();
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v17[0] = a3;
          v17[1] = v16;
        }
        else if ((a3 & 0x1000000000000000) == 0)
        {
          sub_1A7573680();
        }
        int v10 = sub_1A7573690();
      }
      uint64_t v12 = v11;
      LODWORD(v17[0]) = v10;
      char v13 = a1(v17);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return v14 & 1;
      }
      if ((v13 & 1) == 0) {
        break;
      }
      v9 += v12;
      if (v9 >= v5)
      {
        swift_bridgeObjectRelease();
        char v14 = 1;
        return v14 & 1;
      }
    }
    swift_bridgeObjectRelease();
    char v14 = 0;
  }
  else
  {
    char v14 = 1;
  }
  return v14 & 1;
}

uint64_t sub_1A74172B4(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = HIBYTE(a4) & 0xF;
  v13[2] = a3;
  v13[3] = a4;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  v13[4] = 0;
  v13[5] = v6;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1A7572760();
  if (v8)
  {
    uint64_t v9 = v8;
    while (1)
    {
      v13[0] = v7;
      v13[1] = v9;
      char v10 = a1(v13);
      swift_bridgeObjectRelease();
      if (v4 || (v10 & 1) == 0) {
        break;
      }
      uint64_t v7 = sub_1A7572760();
      uint64_t v9 = v11;
      if (!v11) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 1;
  }
}

Swift::Bool __swiftcall CharacterSet.containsUnicodeScalars(of:)(Swift::String of)
{
  uint64_t v2 = v1;
  object = of._object;
  uint64_t countAndFlagsBits = of._countAndFlagsBits;
  uint64_t v5 = sub_1A7571500();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(&v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v2, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32))(v9 + v8, &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v5);
  swift_bridgeObjectRetain();
  LOBYTE(countAndFlagsBits) = sub_1A7417A94(countAndFlagsBits, (unint64_t)object, (unsigned int (*)(uint64_t))sub_1A74174F0);
  swift_release();
  swift_bridgeObjectRelease();
  return countAndFlagsBits & 1;
}

Swift::Bool __swiftcall CharacterSet.containsUnicodeScalarsOfAllCharacters(in:)(Swift::String in)
{
  return sub_1A74172B4(sub_1A7417CD0, (uint64_t)&v2, in._countAndFlagsBits, (unint64_t)in._object) & 1;
}

uint64_t sub_1A7417548(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571500();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = *a1;
  unint64_t v7 = a1[1];
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_bridgeObjectRetain();
  char v11 = sub_1A7417A94(v8, v7, (unsigned int (*)(uint64_t))sub_1A74174F0);
  swift_release();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

void static CharacterSet.emojis.getter()
{
  uint64_t v0 = (void *)CEMGetSharedEmojiCharacterSet();
  if (v0)
  {
    id v1 = v0;
    sub_1A75714E0();
  }
  else
  {
    __break(1u);
  }
}

void sub_1A7417720()
{
  off_1EB700478 = &unk_1EFC91CE0;
}

uint64_t static CharacterSet.hashtagTokenPrefixCharacterArray.getter()
{
  if (qword_1EB700650 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A7417790()
{
  uint64_t v0 = sub_1A7571500();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_1EB700610);
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB700610);
  if (qword_1EB700650 != -1) {
    swift_once();
  }
  uint64_t v6 = (char *)off_1EB700478;
  sub_1A7417CF0();
  swift_bridgeObjectRetain();
  sub_1A7573370();
  uint64_t v7 = *((void *)v6 + 2);
  if (v7)
  {
    uint64_t v8 = (int *)(v6 + 32);
    do
    {
      int v9 = *v8++;
      void v11[2] = v9;
      sub_1A7573340();
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v4, v0);
}

uint64_t static CharacterSet.hashtagTokenPrefixCharacters.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A74179F8(&qword_1EB700658, (uint64_t)qword_1EB700610, a1);
}

void sub_1A7417944()
{
  uint64_t v0 = sub_1A7571500();
  __swift_allocate_value_buffer(v0, qword_1EB700628);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB700628);
  id v1 = objc_msgSend(self, sel_hashtagTokenAllowedCharacters);
  sub_1A75714E0();
}

uint64_t static CharacterSet.hashtagTokenAllowedCharacters.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A74179F8(&qword_1EB700660, (uint64_t)qword_1EB700628, a1);
}

uint64_t sub_1A74179F8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1A7571500();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_1A7417A94(uint64_t a1, unint64_t a2, unsigned int (*a3)(uint64_t))
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 1;
  }
  uint64_t v17 = a2 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v15 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i < v4; i += v12)
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      uint64_t v10 = sub_1A7573550();
      uint64_t v12 = v11;
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0)
      {
        int v9 = (void *)v15;
        if ((a1 & 0x1000000000000000) == 0) {
          int v9 = (void *)sub_1A7573680();
        }
        uint64_t v10 = *((unsigned __int8 *)v9 + i);
        if (*((char *)v9 + i) < 0)
        {
          switch(__clz(v10 ^ 0xFF))
          {
            case 0x1Au:
              goto LABEL_20;
            case 0x1Bu:
              goto LABEL_22;
            case 0x1Cu:
              goto LABEL_24;
            default:
              break;
          }
        }
LABEL_14:
        uint64_t v12 = 1;
        goto LABEL_15;
      }
      v16[0] = a1;
      v16[1] = v17;
      uint64_t v10 = *((unsigned __int8 *)v16 + i);
      if ((*((char *)v16 + i) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      switch(__clz(v10 ^ 0xFF))
      {
        case 0x1Au:
          int v9 = v16;
LABEL_20:
          uint64_t v10 = *((unsigned char *)v9 + i + 1) & 0x3F | ((v10 & 0x1F) << 6);
          uint64_t v12 = 2;
          break;
        case 0x1Bu:
          int v9 = v16;
LABEL_22:
          uint64_t v10 = ((v10 & 0xF) << 12) | ((*((unsigned char *)v9 + i + 1) & 0x3F) << 6) | *((unsigned char *)v9 + i + 2) & 0x3F;
          uint64_t v12 = 3;
          break;
        case 0x1Cu:
          int v9 = v16;
LABEL_24:
          uint64_t v10 = ((v10 & 0xF) << 18) | ((*((unsigned char *)v9 + i + 1) & 0x3F) << 12) | ((*((unsigned char *)v9 + i + 2) & 0x3F) << 6) | *((unsigned char *)v9 + i + 3) & 0x3F;
          uint64_t v12 = 4;
          break;
        default:
          goto LABEL_14;
      }
    }
LABEL_15:
    uint64_t v13 = (v3 == 0) & a3(v10);
    if (v13 != 1) {
      break;
    }
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1A7417CD0(uint64_t *a1)
{
  return sub_1A7417548(a1, *(void *)(v1 + 16)) & 1;
}

unint64_t sub_1A7417CF0()
{
  unint64_t result = qword_1EB700668;
  if (!qword_1EB700668)
  {
    sub_1A7571500();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700668);
  }
  return result;
}

uint64_t sub_1A7417D4C()
{
  return sub_1A75714F0() & 1;
}

uint64_t sub_1A7417DB4()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1EB700B78);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB700B78);
  if (qword_1EB6FFF40 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F00);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t static REMNLQueryParserUtils.recurrentEventsFromStrings(attrStrings:referenceDate:)(unint64_t a1, uint64_t a2)
{
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A75738D0();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x1AD0CB800](i, a1);
      }
      else {
        id v8 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v7 = v8;
      int v9 = (void *)sub_1A7417FF4(v8, a2);
      if (v9)
      {
        id v10 = v9;
        MEMORY[0x1AD0CABF0]();
        if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1A7572A60();
        }
        sub_1A7572AB0();
        sub_1A7572A30();

        uint64_t v7 = v10;
      }
    }
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1A7417FF4(void *a1, uint64_t a2)
{
  uint64_t v70 = a2;
  id v77 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v69 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v69 + 64);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v67 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v59 - v6;
  uint64_t v72 = (uint64_t)&v59 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v64 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v66 = (uint64_t)&v59 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v65 = (uint64_t)&v59 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v63 = (uint64_t)&v59 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  BOOL v19 = (char *)&v59 - v18;
  uint64_t v75 = (uint64_t)&v59 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v59 - v20;
  uint64_t v76 = (uint64_t)&v59 - v20;
  uint64_t v22 = sub_1A75717A0();
  unsigned __int8 v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v21, 1, 1, v22);
  uint64_t v74 = swift_allocBox();
  uint64_t v62 = v24;
  v23((char *)v24, 1, 1, v22);
  v23(v19, 1, 1, v22);
  unsigned __int8 v83 = 0;
  uint64_t v78 = swift_allocBox();
  uint64_t v26 = v25;
  uint64_t v27 = sub_1A7571B60();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  uint64_t v61 = v26;
  v28(v26, 1, 1, v27);
  uint64_t v73 = swift_allocBox();
  uint64_t v60 = v29;
  v28(v29, 1, 1, v27);
  uint64_t v80 = 0;
  uint64_t v81 = 0;
  char v82 = 1;
  id v30 = objc_msgSend(a1, sel_string);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  uint64_t v68 = sub_1A75727E0();
  swift_bridgeObjectRelease();
  sub_1A72BF1E8(v70, (uint64_t)v7, &qword_1EB704C60);
  unint64_t v31 = (*(unsigned __int8 *)(v69 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  unint64_t v32 = (v4 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v77;
  sub_1A731D558(v72, v39 + v31);
  *(void *)(v39 + v32) = v71;
  *(void *)(v39 + v33) = v75;
  *(void *)(v39 + v34) = v76;
  *(void *)(v39 + v35) = v78;
  *(void *)(v39 + v36) = &v83;
  uint64_t v40 = v73;
  *(void *)(v39 + v37) = v74;
  *(void *)(v39 + v38) = v40;
  *(void *)(v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8)) = &v80;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = sub_1A741B6E4;
  *(void *)(v41 + 24) = v39;
  aBlock[4] = sub_1A741B880;
  aBlock[5] = v41;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A741A2E4;
  aBlock[3] = &block_descriptor_15;
  uint64_t v42 = _Block_copy(aBlock);
  id v43 = v77;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v43, sel_enumerateAttributesInRange_options_usingBlock_, 0, v68, 0, v42);
  _Block_release(v42);
  LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v42)
  {
    __break(1u);
  }
  else
  {
    if (v82)
    {
      swift_release();
      swift_release();
      id v45 = 0;
      uint64_t v47 = v75;
      uint64_t v46 = v76;
    }
    else
    {
      id v77 = v81;
      uint64_t v71 = v80;
      uint64_t v48 = v61;
      swift_beginAccess();
      uint64_t v49 = v72;
      sub_1A72BF1E8(v48, v72, &qword_1EB704C60);
      uint64_t v50 = v60;
      swift_beginAccess();
      uint64_t v51 = v50;
      uint64_t v52 = v67;
      sub_1A72BF1E8(v51, v67, &qword_1EB704C60);
      LODWORD(v70) = v83;
      uint64_t v46 = v76;
      uint64_t v53 = v65;
      sub_1A72BF1E8(v76, v65, &qword_1EB6FFDE0);
      uint64_t v54 = v63;
      sub_1A741A384(v53, v63);
      sub_1A72CB560(v53, &qword_1EB6FFDE0);
      uint64_t v55 = v62;
      swift_beginAccess();
      uint64_t v56 = v66;
      sub_1A72BF1E8(v55, v66, &qword_1EB6FFDE0);
      sub_1A741A384(v56, v53);
      sub_1A72CB560(v56, &qword_1EB6FFDE0);
      uint64_t v47 = v75;
      uint64_t v57 = v64;
      sub_1A72BF1E8(v75, v64, &qword_1EB6FFDE0);
      sub_1A741A384(v57, v56);
      sub_1A72CB560(v57, &qword_1EB6FFDE0);
      id v58 = objc_allocWithZone((Class)TTRNLTextStructuredEventRecurrentEvent);
      id v45 = sub_1A741B1A4(v71, (uint64_t)v77, v49, v52, v70, v54, v53, v56);
      swift_release();
      swift_release();
    }
    sub_1A72CB560(v47, &qword_1EB6FFDE0);
    swift_release();
    sub_1A72CB560(v46, &qword_1EB6FFDE0);
    swift_release();
    return (uint64_t)v45;
  }
  return result;
}

uint64_t static REMNLQueryParserUtils.locationsFromStrings(attrStrings:)(unint64_t a1)
{
  uint64_t v18 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v2)
  {
    while (v2 >= 1)
    {
      uint64_t v4 = 0;
      while (1)
      {
        id v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AD0CB800](v4, a1) : *(id *)(a1 + 8 * v4 + 32);
        uint64_t v6 = v5;
        unint64_t v17 = MEMORY[0x1E4FBC860];
        id v7 = objc_msgSend(v5, sel_string);
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v9 = v8;

        uint64_t v10 = (v9 & 0x1000000000000000) != 0 ? sub_1A75727C0() : sub_1A75727D0();
        uint64_t v11 = v10;
        swift_bridgeObjectRelease();
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = &v17;
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = sub_1A741B484;
        *(void *)(v13 + 24) = v12;
        aBlock[4] = sub_1A741B49C;
        aBlock[5] = v13;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1A741A2E4;
        aBlock[3] = &block_descriptor_8;
        uint64_t v14 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        objc_msgSend(v6, sel_enumerateAttributesInRange_options_usingBlock_, 0, v11, 0, v14);
        _Block_release(v14);
        LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (v14) {
          break;
        }
        ++v4;
        unint64_t v15 = v17;
        swift_release();
        sub_1A72D10C8(v15);

        if (v2 == v4)
        {
          swift_bridgeObjectRelease();
          return v18;
        }
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
      uint64_t result = sub_1A75738D0();
      uint64_t v2 = result;
      if (!result) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1A7418A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned char *a11, uint64_t a12, uint64_t a13, uint64_t *a14)
{
  uint64_t v181 = a8;
  uint64_t v183 = a7;
  uint64_t v174 = a6;
  id v173 = a5;
  uint64_t v189 = a3;
  uint64_t v190 = a2;
  unint64_t v15 = a14;
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
  uint64_t v16 = MEMORY[0x1F4188790](v163);
  uint64_t v165 = (uint64_t)v157 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v169 = (uint64_t)v157 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  int64_t v177 = (char *)v157 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v166 = (uint64_t)v157 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  id v175 = (char *)v157 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)v157 - v27;
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  uint64_t v182 = (uint64_t)v157 - v30;
  MEMORY[0x1F4188790](v29);
  unint64_t v32 = (char *)v157 - v31;
  uint64_t v188 = sub_1A75717A0();
  uint64_t v179 = *(void *)(v188 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v188);
  uint64_t v178 = (char *)v157 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v168 = (char *)v157 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v167 = (char *)v157 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  id v180 = (char *)v157 - v40;
  MEMORY[0x1F4188790](v39);
  uint64_t v42 = (char *)v157 - v41;
  uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v43 = MEMORY[0x1F4188790](v164);
  uint64_t v176 = (uint64_t)v157 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v43);
  uint64_t v46 = (char *)v157 - v45;
  uint64_t v186 = sub_1A7571B60();
  uint64_t v185 = *(void *)(v186 - 8);
  MEMORY[0x1F4188790](v186);
  uint64_t v184 = (uint64_t)v157 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = a10;
  uint64_t v48 = swift_projectBox();
  uint64_t v170 = a12;
  uint64_t v49 = swift_projectBox();
  uint64_t v172 = a13;
  uint64_t v50 = swift_projectBox();
  if (!*(void *)(a1 + 16))
  {
    long long v194 = 0u;
    long long v195 = 0u;
    goto LABEL_10;
  }
  uint64_t v51 = v50;
  uint64_t v187 = a14;
  id v52 = (id)*MEMORY[0x1E4F94560];
  unint64_t v53 = sub_1A72B28B0((uint64_t)v52);
  if ((v54 & 1) == 0)
  {
    long long v194 = 0u;
    long long v195 = 0u;

    unint64_t v15 = v187;
    goto LABEL_10;
  }
  sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v53, (uint64_t)&v194);

  unint64_t v15 = v187;
  if (!*((void *)&v195 + 1))
  {
LABEL_10:
    sub_1A72CB560((uint64_t)&v194, &qword_1EB705938);
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB700060);
  if (swift_dynamicCast())
  {
    uint64_t v159 = v49;
    uint64_t v160 = v51;
    uint64_t v162 = v192;
    if (qword_1EB6FFF38 == -1) {
      goto LABEL_6;
    }
    goto LABEL_75;
  }
LABEL_11:
  if (qword_1EB7000B0 == -1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_13;
    }
LABEL_70:
    long long v194 = 0u;
    long long v195 = 0u;
    return sub_1A72CB560((uint64_t)&v194, &qword_1EB705938);
  }
  swift_once();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_70;
  }
LABEL_13:
  id v72 = (id)qword_1EB7000A0;
  unint64_t v73 = sub_1A72B28B0((uint64_t)v72);
  if (v74)
  {
    sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v73, (uint64_t)&v194);
  }
  else
  {
    long long v194 = 0u;
    long long v195 = 0u;
  }

  if (!*((void *)&v195 + 1)) {
    return sub_1A72CB560((uint64_t)&v194, &qword_1EB705938);
  }
  uint64_t result = sub_1A72CB560((uint64_t)&v194, &qword_1EB705938);
  if (v15[2])
  {
    uint64_t v76 = v189;
    *unint64_t v15 = v190;
    v15[1] = v76;
    *((unsigned char *)v15 + 16) = 0;
    return result;
  }
  uint64_t v77 = *v15;
  uint64_t v78 = v15[1];
  BOOL v79 = __OFADD__(*v15, v78);
  uint64_t v80 = *v15 + v78;
  if (v79)
  {
    __break(1u);
  }
  else if (!__OFADD__(v190, v189))
  {
    if (v80 <= v190 + v189) {
      uint64_t v80 = v190 + v189;
    }
    if (v77 >= v190) {
      uint64_t v77 = v190;
    }
    BOOL v79 = __OFSUB__(v80, v77);
    uint64_t v81 = v80 - v77;
    if (!v79)
    {
      *unint64_t v15 = v77;
      v15[1] = v81;
      return result;
    }
    goto LABEL_74;
  }
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  swift_once();
LABEL_6:
  uint64_t v55 = sub_1A7571E90();
  uint64_t v56 = (void *)__swift_project_value_buffer(v55, (uint64_t)qword_1EB700B78);
  uint64_t v57 = v173;
  id v173 = v56;
  id v58 = sub_1A7571E80();
  os_log_type_t v59 = sub_1A7572FF0();
  int v60 = v59;
  BOOL v61 = os_log_type_enabled(v58, v59);
  uint64_t v62 = v188;
  uint64_t v63 = v186;
  uint64_t v161 = v48;
  if (v61)
  {
    uint64_t v64 = swift_slowAlloc();
    int v158 = v60;
    uint64_t v65 = (uint8_t *)v64;
    uint64_t v66 = (void *)swift_slowAlloc();
    uint64_t v67 = v58;
    *(_DWORD *)uint64_t v65 = 138412290;
    v157[1] = v65 + 4;
    uint64_t v68 = v65;
    *(void *)&long long v194 = v57;
    v157[0] = (char *)&v194 + 8;
    uint64_t v69 = v57;
    sub_1A7573250();
    void *v66 = v57;

    _os_log_impl(&dword_1A72A1000, v58, (os_log_type_t)v158, "QueryParser: found recurrent event for: %@", v68, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
    swift_arrayDestroy();
    uint64_t v70 = v66;
    uint64_t v62 = v188;
    MEMORY[0x1AD0CD330](v70, -1, -1);
    uint64_t v71 = v68;
    uint64_t v63 = v186;
    MEMORY[0x1AD0CD330](v71, -1, -1);
  }
  else
  {

    uint64_t v67 = v57;
  }
  uint64_t v82 = v185;

  sub_1A72BF1E8(v174, (uint64_t)v46, &qword_1EB704C60);
  int v83 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48))(v46, 1, v63);
  uint64_t v84 = v182;
  uint64_t v85 = v162;
  if (v83 == 1)
  {
    sub_1A7571B50();
    sub_1A72CB560((uint64_t)v46, &qword_1EB704C60);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v82 + 32))(v184, v46, v63);
  }
  sub_1A7419F04((void *)*MEMORY[0x1E4F94578], v85, (uint64_t)v32);
  uint64_t v86 = v179;
  char v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v179 + 48);
  if (v87(v32, 1, v62) == 1)
  {
    sub_1A72CB560((uint64_t)v32, &qword_1EB6FFDE0);
  }
  else
  {
    uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v86 + 32);
    v88(v42, v32, v188);
    uint64_t v89 = v181;
    sub_1A72CB560(v181, &qword_1EB6FFDE0);
    v88((char *)v89, v42, v188);
    uint64_t v62 = v188;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v86 + 56))(v89, 0, 1, v188);
  }
  uint64_t v90 = v86;
  sub_1A7419F04((void *)*MEMORY[0x1E4F94568], v85, (uint64_t)v28);
  unsigned int v91 = v87(v28, 1, v62);
  uint64_t v92 = v180;
  if (v91 == 1)
  {
    sub_1A7419F04((void *)*MEMORY[0x1E4F94580], v85, v84);
    sub_1A72CB560((uint64_t)v28, &qword_1EB6FFDE0);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v90 + 32))(v84, v28, v62);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v90 + 56))(v84, 0, 1, v62);
  }
  uint64_t v93 = v84;
  uint64_t v94 = v175;
  sub_1A72BF1E8(v93, (uint64_t)v175, &qword_1EB6FFDE0);
  unsigned int v95 = v87(v94, 1, v62);
  uint64_t v96 = (uint64_t)v177;
  if (v95 == 1)
  {
    sub_1A72CB560((uint64_t)v94, &qword_1EB6FFDE0);
    uint64_t v97 = v178;
    goto LABEL_50;
  }
  uint64_t v98 = a11;
  (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v92, v94, v62);
  uint64_t v99 = v166;
  sub_1A72BF1E8(v181, v166, &qword_1EB6FFDE0);
  unsigned int v100 = v87((char *)v99, 1, v62);
  sub_1A72CB560(v99, &qword_1EB6FFDE0);
  if (v100 != 1)
  {
    sub_1A72CB560(a9, &qword_1EB6FFDE0);
    (*(void (**)(uint64_t, char *, uint64_t))(v90 + 16))(a9, v92, v62);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v90 + 56))(a9, 0, 1, v62);
  }
  sub_1A7571670();
  char v102 = v101;
  uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  unint64_t v104 = v167;
  v103(v167, v92, v62);
  if (v102)
  {
    id v175 = *(char **)(v90 + 8);
    ((void (*)(char *, uint64_t))v175)(v104, v62);
    uint64_t v107 = v180;
  }
  else
  {
    sub_1A75716F0();
    char v106 = v105;
    id v175 = *(char **)(v90 + 8);
    ((void (*)(char *, uint64_t))v175)(v104, v62);
    uint64_t v107 = v180;
    if (v106) {
      goto LABEL_46;
    }
  }
  id v180 = (char *)v103;
  uint64_t v108 = v176;
  DateComponents.nextDate(after:)(v184, v176);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v185 + 56))(v108, 0, 1, v186);
  uint64_t v109 = v161;
  swift_beginAccess();
  uint64_t v110 = v108;
  uint64_t v98 = a11;
  uint64_t v103 = (void (*)(char *, char *, uint64_t))v180;
  sub_1A741B81C(v110, v109, &qword_1EB704C60);
LABEL_46:
  sub_1A75716F0();
  *uint64_t v98 = v111 & 1;
  uint64_t v112 = v168;
  v103(v168, v107, v62);
  swift_retain_n();
  unint64_t v113 = sub_1A7571E80();
  os_log_type_t v114 = sub_1A7572FF0();
  int v115 = v114;
  if (os_log_type_enabled(v113, v114))
  {
    uint64_t v116 = swift_slowAlloc();
    id v180 = (char *)swift_slowAlloc();
    *(void *)&long long v194 = v180;
    *(_DWORD *)uint64_t v116 = 136315394;
    LODWORD(v174) = v115;
    uint64_t v117 = sub_1A7571680();
    uint64_t v192 = sub_1A72D1730(v117, v118, (uint64_t *)&v194);
    sub_1A7573250();
    swift_bridgeObjectRelease();
    uint64_t v167 = (char *)(v90 + 8);
    ((void (*)(char *, uint64_t))v175)(v112, v188);
    *(_WORD *)(v116 + 12) = 2080;
    uint64_t v168 = (char *)(v116 + 14);
    uint64_t v119 = v161;
    swift_beginAccess();
    uint64_t v120 = v119;
    uint64_t v121 = v176;
    sub_1A72BF1E8(v120, v176, &qword_1EB704C60);
    uint64_t v122 = sub_1A7573200();
    unint64_t v124 = v123;
    uint64_t v90 = v179;
    sub_1A72CB560(v121, &qword_1EB704C60);
    uint64_t v192 = sub_1A72D1730(v122, v124, (uint64_t *)&v194);
    uint64_t v96 = (uint64_t)v177;
    uint64_t v62 = v188;
    sub_1A7573250();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v113, (os_log_type_t)v174, "QueryParser: calculated relative date from dateComponents=%s -> startDate=%s", (uint8_t *)v116, 0x16u);
    uint64_t v125 = v180;
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v125, -1, -1);
    MEMORY[0x1AD0CD330](v116, -1, -1);

    ((void (*)(char *, uint64_t))v175)(v107, v62);
  }
  else
  {
    swift_release_n();

    unint64_t v126 = (void (*)(char *, uint64_t))v175;
    ((void (*)(char *, uint64_t))v175)(v112, v62);
    v126(v107, v62);
  }
  uint64_t v97 = v178;
  uint64_t v85 = v162;
LABEL_50:
  sub_1A7419F04((void *)*MEMORY[0x1E4F94570], v85, v96);
  swift_bridgeObjectRelease();
  if (v87((char *)v96, 1, v62) == 1)
  {
    sub_1A72CB560(v96, &qword_1EB6FFDE0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(v97, v96, v62);
    uint64_t v127 = v169;
    sub_1A72BF1E8(v181, v169, &qword_1EB6FFDE0);
    unsigned int v128 = v87((char *)v127, 1, v62);
    sub_1A72CB560(v127, &qword_1EB6FFDE0);
    if (v128 != 1)
    {
      uint64_t v129 = v165;
      (*(void (**)(uint64_t, char *, uint64_t))(v90 + 16))(v165, v97, v62);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v90 + 56))(v129, 0, 1, v62);
      uint64_t v130 = v159;
      swift_beginAccess();
      sub_1A741B81C(v129, v130, &qword_1EB6FFDE0);
    }
    sub_1A7571630();
    if (v131)
    {
      uint64_t v132 = v176;
      DateComponents.nextDate(after:)(v184, v176);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v185 + 56))(v132, 0, 1, v186);
      uint64_t v133 = v160;
      swift_beginAccess();
      sub_1A741B81C(v132, v133, &qword_1EB704C60);
    }
    swift_retain_n();
    swift_retain_n();
    uint64_t v134 = sub_1A7571E80();
    os_log_type_t v135 = sub_1A7572FF0();
    if (os_log_type_enabled(v134, v135))
    {
      uint64_t v136 = swift_slowAlloc();
      uint64_t v183 = swift_slowAlloc();
      uint64_t v193 = v183;
      *(_DWORD *)uint64_t v136 = 136315394;
      uint64_t v137 = v159;
      swift_beginAccess();
      uint64_t v138 = v137;
      uint64_t v139 = v165;
      sub_1A72BF1E8(v138, v165, &qword_1EB6FFDE0);
      uint64_t v140 = sub_1A7573200();
      uint64_t v141 = v90;
      unint64_t v143 = v142;
      sub_1A72CB560(v139, &qword_1EB6FFDE0);
      uint64_t v192 = sub_1A72D1730(v140, v143, &v193);
      sub_1A7573250();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v136 + 12) = 2080;
      uint64_t v144 = v160;
      swift_beginAccess();
      uint64_t v145 = v176;
      sub_1A72BF1E8(v144, v176, &qword_1EB704C60);
      uint64_t v146 = sub_1A7573200();
      unint64_t v148 = v147;
      sub_1A72CB560(v145, &qword_1EB704C60);
      uint64_t v191 = sub_1A72D1730(v146, v148, &v193);
      sub_1A7573250();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v134, v135, "QueryParser: calculated relative date from dateComps=%s -> endDate=%s", (uint8_t *)v136, 0x16u);
      uint64_t v149 = v183;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v149, -1, -1);
      MEMORY[0x1AD0CD330](v136, -1, -1);

      (*(void (**)(char *, uint64_t))(v141 + 8))(v178, v188);
    }
    else
    {
      swift_release_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v90 + 8))(v97, v62);
    }
  }
  unint64_t v150 = v187;
  uint64_t v151 = v185;
  uint64_t result = v182;
  if (v187[2])
  {
    sub_1A72CB560(v182, &qword_1EB6FFDE0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v151 + 8))(v184, v186);
    uint64_t v152 = v189;
    uint64_t *v150 = v190;
    v150[1] = v152;
    *((unsigned char *)v150 + 16) = 0;
    return result;
  }
  uint64_t v153 = *v187;
  uint64_t v154 = v187[1];
  BOOL v79 = __OFADD__(*v187, v154);
  uint64_t v155 = *v187 + v154;
  if (v79)
  {
    __break(1u);
  }
  else if (!__OFADD__(v190, v189))
  {
    if (v155 <= v190 + v189) {
      uint64_t v155 = v190 + v189;
    }
    if (v153 >= v190) {
      uint64_t v153 = v190;
    }
    BOOL v79 = __OFSUB__(v155, v153);
    uint64_t v156 = v155 - v153;
    if (!v79)
    {
      uint64_t *v187 = v153;
      v150[1] = v156;
      sub_1A72CB560(result, &qword_1EB6FFDE0);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v151 + 8))(v184, v186);
    }
    goto LABEL_78;
  }
  __break(1u);
LABEL_78:
  __break(1u);
  return result;
}

uint64_t sub_1A7419F04@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a2 + 16))
  {
    long long v33 = 0u;
    long long v34 = 0u;
    goto LABEL_9;
  }
  id v9 = a1;
  unint64_t v10 = sub_1A72B28B0((uint64_t)v9);
  if ((v11 & 1) == 0)
  {
    long long v33 = 0u;
    long long v34 = 0u;

    goto LABEL_9;
  }
  sub_1A72BEE98(*(void *)(a2 + 56) + 32 * v10, (uint64_t)&v33);

  if (!*((void *)&v34 + 1))
  {
LABEL_9:
    sub_1A72CB560((uint64_t)&v33, &qword_1EB705938);
    uint64_t v18 = sub_1A75717A0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a3, 1, 1, v18);
  }
  sub_1A72BEE44(&v33, v35);
  sub_1A72BEE98((uint64_t)v35, (uint64_t)&v33);
  uint64_t v12 = sub_1A75717A0();
  int v13 = swift_dynamicCast();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  if (!v13)
  {
    v14(v8, 1, 1, v12);
    goto LABEL_11;
  }
  uint64_t v15 = *(void *)(v12 - 8);
  v14(v8, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v12) == 1)
  {
LABEL_11:
    sub_1A72CB560((uint64_t)v8, &qword_1EB6FFDE0);
    if (qword_1EB6FFF38 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB700B78);
    id v21 = v9;
    uint64_t v22 = sub_1A7571E80();
    os_log_type_t v23 = sub_1A7572FE0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v31 = v14;
      uint64_t v26 = v25;
      *(void *)&long long v33 = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      v30[1] = v24 + 4;
      uint64_t v27 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v32 = sub_1A72D1730(v27, v28, (uint64_t *)&v33);
      sub_1A7573250();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v22, v23, "QueryParser: Could not cast to DateComponents value for %s", v24, 0xCu);
      swift_arrayDestroy();
      uint64_t v29 = v26;
      uint64_t v14 = v31;
      MEMORY[0x1AD0CD330](v29, -1, -1);
      MEMORY[0x1AD0CD330](v24, -1, -1);
    }
    else
    {
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    uint64_t v16 = a3;
    uint64_t v17 = 1;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v14)(v16, v17, 1, v12);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a3, v8, v12);
  uint64_t v16 = a3;
  uint64_t v17 = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v14)(v16, v17, 1, v12);
}

uint64_t sub_1A741A2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  sub_1A741B500();
  uint64_t v9 = sub_1A75723F0();
  v8(v9, a3, a4, a5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A741A384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B68);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B60);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A75717A0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A72BF1E8(a1, (uint64_t)v12, &qword_1EB6FFDE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1A72CB560((uint64_t)v12, &qword_1EB6FFDE0);
    uint64_t v17 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    sub_1A7571DC0();
    uint64_t v18 = sub_1A7571E00();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v9, 0, 1, v18);
    id v19 = objc_msgSend(self, sel_defaultTimeZone);
    sub_1A7571E40();

    uint64_t v20 = sub_1A7571E60();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 0, 1, v20);
    uint64_t v21 = sub_1A7571700();
    if (v22) {
      uint64_t v23 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v23 = v21;
    }
    v46[9] = v23;
    uint64_t v24 = sub_1A7571710();
    if (v25) {
      uint64_t v26 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v26 = v24;
    }
    v46[8] = v26;
    uint64_t v27 = sub_1A75716D0();
    if (v28) {
      uint64_t v29 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v29 = v27;
    }
    v46[7] = v29;
    uint64_t v30 = sub_1A75716F0();
    if (v31) {
      uint64_t v32 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v32 = v30;
    }
    v46[6] = v32;
    uint64_t v33 = sub_1A7571720();
    if (v34) {
      uint64_t v35 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v35 = v33;
    }
    v46[5] = v35;
    uint64_t v36 = sub_1A7571730();
    if (v37) {
      uint64_t v38 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v38 = v36;
    }
    v46[4] = v38;
    uint64_t v39 = sub_1A7571620();
    if (v40) {
      uint64_t v41 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v41 = v39;
    }
    v46[3] = v41;
    uint64_t v42 = sub_1A7571750();
    if (v43) {
      uint64_t v44 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v44 = v42;
    }
    v46[1] = v44;
    sub_1A7571670();
    v46[2] = v9;
    sub_1A7571740();
    sub_1A7571660();
    sub_1A7571630();
    sub_1A7571690();
    sub_1A7571760();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, v17, 1, v13);
}

uint64_t sub_1A741A7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (qword_1EB700100 == -1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_3;
    }
LABEL_9:
    long long v43 = 0u;
    long long v44 = 0u;
    goto LABEL_10;
  }
  swift_once();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_9;
  }
LABEL_3:
  id v9 = (id)qword_1EB7000F0;
  unint64_t v10 = sub_1A72B28B0((uint64_t)v9);
  if ((v11 & 1) == 0)
  {
    long long v43 = 0u;
    long long v44 = 0u;

    goto LABEL_10;
  }
  sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v10, (uint64_t)&v43);

  if (!*((void *)&v44 + 1))
  {
LABEL_10:
    sub_1A72CB560((uint64_t)&v43, &qword_1EB705938);
    goto LABEL_11;
  }
  if (swift_dynamicCast())
  {
LABEL_62:
    uint64_t v23 = 0;
    uint64_t v22 = v41;
    unint64_t v21 = v42;
    goto LABEL_63;
  }
LABEL_11:
  if (qword_1EB700118 == -1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_13;
    }
LABEL_20:
    long long v43 = 0u;
    long long v44 = 0u;
LABEL_21:
    sub_1A72CB560((uint64_t)&v43, &qword_1EB705938);
    goto LABEL_22;
  }
  swift_once();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_20;
  }
LABEL_13:
  id v12 = (id)qword_1EB700108;
  unint64_t v13 = sub_1A72B28B0((uint64_t)v12);
  if (v14)
  {
    sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v43);
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
  }

  if (!*((void *)&v44 + 1)) {
    goto LABEL_21;
  }
  if (swift_dynamicCast()) {
    goto LABEL_40;
  }
LABEL_22:
  if (qword_1EB7000C0 == -1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_24;
    }
LABEL_31:
    long long v43 = 0u;
    long long v44 = 0u;
LABEL_32:
    sub_1A72CB560((uint64_t)&v43, &qword_1EB705938);
    goto LABEL_33;
  }
  swift_once();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_31;
  }
LABEL_24:
  id v15 = (id)qword_1EB7000B8;
  unint64_t v16 = sub_1A72B28B0((uint64_t)v15);
  if (v17)
  {
    sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v16, (uint64_t)&v43);
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
  }

  if (!*((void *)&v44 + 1)) {
    goto LABEL_32;
  }
  if (swift_dynamicCast()) {
    goto LABEL_62;
  }
LABEL_33:
  if (qword_1EB7000E8 == -1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_35;
    }
LABEL_42:
    long long v43 = 0u;
    long long v44 = 0u;
LABEL_43:
    sub_1A72CB560((uint64_t)&v43, &qword_1EB705938);
LABEL_44:
    if (qword_1EB7000D0 == -1)
    {
      if (*(void *)(a1 + 16)) {
        goto LABEL_46;
      }
    }
    else
    {
      swift_once();
      if (*(void *)(a1 + 16))
      {
LABEL_46:
        id v24 = (id)qword_1EB7000C8;
        unint64_t v25 = sub_1A72B28B0((uint64_t)v24);
        if (v26)
        {
          sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v25, (uint64_t)&v43);
        }
        else
        {
          long long v43 = 0u;
          long long v44 = 0u;
        }

        if (*((void *)&v44 + 1))
        {
          if (swift_dynamicCast()) {
            goto LABEL_62;
          }
LABEL_55:
          if (qword_1EB700098 == -1)
          {
            if (*(void *)(a1 + 16)) {
              goto LABEL_57;
            }
          }
          else
          {
            swift_once();
            if (*(void *)(a1 + 16))
            {
LABEL_57:
              id v27 = (id)qword_1EB700088;
              unint64_t v28 = sub_1A72B28B0((uint64_t)v27);
              if (v29)
              {
                sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v28, (uint64_t)&v43);
              }
              else
              {
                long long v43 = 0u;
                long long v44 = 0u;
              }

              if (*((void *)&v44 + 1))
              {
                uint64_t result = swift_dynamicCast();
                if ((result & 1) == 0) {
                  return result;
                }
                goto LABEL_62;
              }
              return sub_1A72CB560((uint64_t)&v43, &qword_1EB705938);
            }
          }
          long long v43 = 0u;
          long long v44 = 0u;
          return sub_1A72CB560((uint64_t)&v43, &qword_1EB705938);
        }
LABEL_54:
        sub_1A72CB560((uint64_t)&v43, &qword_1EB705938);
        goto LABEL_55;
      }
    }
    long long v43 = 0u;
    long long v44 = 0u;
    goto LABEL_54;
  }
  swift_once();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_42;
  }
LABEL_35:
  id v18 = (id)qword_1EB7000D8;
  unint64_t v19 = sub_1A72B28B0((uint64_t)v18);
  if (v20)
  {
    sub_1A72BEE98(*(void *)(a1 + 56) + 32 * v19, (uint64_t)&v43);
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
  }

  if (!*((void *)&v44 + 1)) {
    goto LABEL_43;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_44;
  }
LABEL_40:
  uint64_t v22 = v41;
  unint64_t v21 = v42;
  uint64_t v23 = 1;
LABEL_63:
  if (v22 == 1162694472 && v21 == 0xE400000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    uint64_t v31 = 0;
  }
  else if (v22 == 0x454C4349484556 && v21 == 0xE700000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    uint64_t v31 = 2;
  }
  else
  {
    if ((v22 != 1263685463 || v21 != 0xE400000000000000) && (sub_1A7573DB0() & 1) == 0) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v31 = 1;
  }
  if (qword_1EB6FFF38 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1A7571E90();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EB700B78);
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1A7571E80();
  os_log_type_t v34 = sub_1A7572FF0();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v40 = v23;
    uint64_t v36 = swift_slowAlloc();
    *(void *)&long long v43 = v36;
    *(_DWORD *)uint64_t v35 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A72D1730(v22, v21, (uint64_t *)&v43);
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v35 + 12) = 2080;
    uint64_t v37 = sub_1A75731D0();
    sub_1A72D1730(v37, v38, (uint64_t *)&v43);
    sub_1A7573250();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v33, v34, "QueryParser: found event location: %s, range={%s}", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    uint64_t v39 = v36;
    uint64_t v23 = v40;
    MEMORY[0x1AD0CD330](v39, -1, -1);
    MEMORY[0x1AD0CD330](v35, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  objc_msgSend(objc_allocWithZone((Class)TTRNLTextStructuredEventLocation), sel_initWithRange_locationType_proximity_, a2, a3, v31, v23);
  MEMORY[0x1AD0CABF0]();
  if (*(void *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1A7572A60();
  }
  sub_1A7572AB0();
  return sub_1A7572A30();
}

uint64_t REMNLQueryParserUtils.deinit()
{
  return v0;
}

uint64_t REMNLQueryParserUtils.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1A741B018()
{
  uint64_t result = sub_1A75725E0();
  qword_1EB7000F0 = result;
  return result;
}

uint64_t sub_1A741B050()
{
  uint64_t result = sub_1A75725E0();
  qword_1EB700108 = result;
  return result;
}

uint64_t sub_1A741B088()
{
  uint64_t result = sub_1A75725E0();
  qword_1EB7000B8 = result;
  return result;
}

uint64_t sub_1A741B0C0()
{
  uint64_t result = sub_1A75725E0();
  qword_1EB7000D8 = result;
  return result;
}

uint64_t sub_1A741B0F8()
{
  uint64_t result = sub_1A75725E0();
  qword_1EB7000C8 = result;
  return result;
}

uint64_t sub_1A741B130()
{
  uint64_t result = sub_1A75725E0();
  qword_1EB700088 = result;
  return result;
}

uint64_t sub_1A741B16C()
{
  uint64_t result = sub_1A75725E0();
  qword_1EB7000A0 = result;
  return result;
}

id sub_1A741B1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = sub_1A7571B60();
  uint64_t v13 = *(void *)(v12 - 8);
  char v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  id v15 = 0;
  if (v14(a3, 1, v12) != 1)
  {
    id v15 = (void *)sub_1A7571AB0();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a3, v12);
  }
  if (v14(a4, 1, v12) == 1)
  {
    unint64_t v16 = 0;
  }
  else
  {
    unint64_t v16 = (void *)sub_1A7571AB0();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a4, v12);
  }
  uint64_t v17 = sub_1A75717A0();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  char v20 = 0;
  if (v19(a6, 1, v17) != 1)
  {
    char v20 = (void *)sub_1A75716B0();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a6, v17);
  }
  if (v19(a7, 1, v17) == 1)
  {
    unint64_t v21 = 0;
  }
  else
  {
    unint64_t v21 = (void *)sub_1A75716B0();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a7, v17);
  }
  if (v19(a8, 1, v17) == 1)
  {
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = (void *)sub_1A75716B0();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a8, v17);
  }
  id v23 = objc_msgSend(v29, sel_initWithRange_startDate_endDate_isAllDay_startComponents_endComponents_frequencyComponents_, a1, a2, v15, v16, a5 & 1, v20, v21, v22);

  return v23;
}

uint64_t sub_1A741B474()
{
  return swift_deallocObject();
}

uint64_t sub_1A741B484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A741A7F4(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1A741B48C()
{
  return swift_deallocObject();
}

uint64_t sub_1A741B49C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t type metadata accessor for REMNLQueryParserUtils()
{
  return self;
}

uint64_t method lookup function for REMNLQueryParserUtils(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMNLQueryParserUtils);
}

unint64_t sub_1A741B500()
{
  unint64_t result = qword_1EB700120;
  if (!qword_1EB700120)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700120);
  }
  return result;
}

uint64_t sub_1A741B558()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);

  uint64_t v3 = sub_1A7571B60();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A741B6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A7418A50(a1, a2, a3, a4, *(void **)(v4 + 16), v4 + v10, *(void *)(v4 + v11), *(void *)(v4 + v12), *(void *)(v4 + v13), *(void *)(v4 + v14), *(unsigned char **)(v4 + v15), *(void *)(v4 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v4 + ((((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t **)(v4+ ((((((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1A741B80C()
{
  return swift_deallocObject();
}

uint64_t sub_1A741B81C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A741B88C(void **a1)
{
  unint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = (void *)sub_1A74F9EB8(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_1A7421EE8(v5);
  *a1 = v2;
  return result;
}

uint64_t when<A>(on:_:)()
{
  return Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A741C070);
}

uint64_t sub_1A741B974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v62 = a6;
  uint64_t v50 = a4;
  uint64_t v49 = a3;
  uint64_t v11 = sub_1A7572210();
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v56 = v11;
  MEMORY[0x1F4188790](v11);
  char v54 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A7572260();
  uint64_t v52 = *(void *)(v13 - 8);
  uint64_t v53 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v51 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = (void *)swift_allocObject();
  v15[2] = a7;
  void v15[3] = a1;
  uint64_t v48 = v15;
  v15[4] = a2;
  swift_retain();
  unint64_t v16 = dispatch_group_create();
  uint64_t v17 = swift_allocObject();
  swift_getTupleTypeMetadata2();
  uint64_t v18 = sub_1A75723A0();
  uint64_t v61 = v17;
  *(void *)(v17 + 16) = v18;
  uint64_t v59 = swift_allocObject();
  uint64_t v60 = a7;
  *(void *)(v59 + 16) = MEMORY[0x1E4FBC860];
  aBlock[0] = a5;
  type metadata accessor for Promise();
  uint64_t v19 = sub_1A7572B30();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1AD0CAAC0](&v64, v19, WitnessTable);
  uint64_t v66 = v64;
  sub_1A75738B0();
  sub_1A7573880();
  uint64_t v58 = sub_1A75738A0();
  sub_1A7573890();
  if (v65)
  {
    uint64_t v21 = v64;
    uint64_t v57 = MEMORY[0x1E4FBC848] + 8;
    do
    {
      dispatch_group_enter(v16);
      uint64_t v22 = (void *)swift_allocObject();
      uint64_t v22[2] = v60;
      v22[3] = v61;
      v22[4] = v21;
      swift_retain();
      uint64_t v23 = sub_1A72C01A0(v62, (uint64_t)sub_1A7422DEC, (uint64_t)v22);
      swift_release();
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v59;
      *(void *)(v24 + 24) = v21;
      uint64_t v25 = qword_1EB705720;
      swift_retain();
      if (v25 != -1) {
        swift_once();
      }
      uint64_t v26 = *(void *)(*(void *)(v23 + 16) + 16);
      id v27 = (id)qword_1EB704C70;
      os_unfair_lock_lock_with_options();
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v27;
      *(void *)(v28 + 24) = 0;
      *(unsigned char *)(v28 + 32) = 1;
      *(void *)(v28 + 40) = nullsub_1;
      *(void *)(v28 + 48) = 0;
      *(void *)(v28 + 56) = sub_1A7422E44;
      *(void *)(v28 + 64) = v24;
      *(void *)(v28 + 72) = nullsub_1;
      *(void *)(v28 + 80) = 0;
      id v29 = v27;
      swift_retain();
      uint64_t v30 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v28);
      swift_release();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 16));
      v30();
      swift_release();
      swift_release();

      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = v16;
      uint64_t v32 = (void *)qword_1EB704C70;
      uint64_t v33 = *(void *)(*(void *)(v23 + 16) + 16);
      os_log_type_t v34 = v16;
      id v35 = v32;
      os_unfair_lock_lock_with_options();
      uint64_t v36 = (void *)swift_allocObject();
      void v36[2] = v35;
      v36[3] = sub_1A7422E50;
      v36[4] = v31;
      id v37 = v35;
      swift_retain();
      unint64_t v38 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A7422840, (uint64_t)v36);
      swift_release();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
      v38();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      sub_1A7573890();
      uint64_t v21 = v64;
    }
    while (v65);
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = (void *)swift_allocObject();
  uint64_t v40 = v59;
  v39[2] = v60;
  v39[3] = v40;
  uint64_t v41 = v50;
  v39[4] = v49;
  v39[5] = v41;
  v39[6] = v61;
  v39[7] = sub_1A7422CE0;
  _OWORD v39[8] = v48;
  aBlock[4] = sub_1A7422DA0;
  aBlock[5] = v39;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A73322E4;
  aBlock[3] = &block_descriptor_180;
  unint64_t v42 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  long long v43 = v51;
  sub_1A7572240();
  uint64_t v64 = MEMORY[0x1E4FBC860];
  sub_1A732938C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
  sub_1A73293E4();
  long long v44 = v54;
  uint64_t v45 = v56;
  sub_1A7573380();
  sub_1A7573030();
  _Block_release(v42);

  (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v45);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v53);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A741C070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A741B974(a1, a2, a3, a4, *(void *)(v4 + 24), *(void **)(v4 + 32), *(void *)(v4 + 16));
}

uint64_t sub_1A741C07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  unint64_t v10 = (char *)&v12 + *(int *)(v8 + 48) - v9;
  *(uint64_t *)((char *)&v12 - v9) = a3;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v10, a1, a4);
  swift_beginAccess();
  sub_1A7572B30();
  sub_1A7572AE0();
  return swift_endAccess();
}

uint64_t sub_1A741C1A8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(a2 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void **)(a2 + 16);
  id v8 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_1A72ADA50(0, v7[2] + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  unint64_t v11 = v7[2];
  unint64_t v10 = v7[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t v7 = sub_1A72ADA50((void *)(v10 > 1), v11 + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  void v7[2] = v11 + 1;
  uint64_t v12 = &v7[2 * v11];
  v12[4] = a3;
  void v12[5] = a1;
  return swift_endAccess();
}

void sub_1A741C288(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7)
{
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 16) + 16))
  {
    id v29 = *(void **)(a1 + 16);
    swift_bridgeObjectRetain_n();
    sub_1A741B88C(&v29);
    swift_bridgeObjectRelease();
    uint64_t v12 = v29;
    int64_t v13 = v29[2];
    if (v13)
    {
      id v29 = (void *)MEMORY[0x1E4FBC860];
      sub_1A72D2F8C(0, v13, 0);
      uint64_t v14 = 5;
      unint64_t v15 = v29;
      do
      {
        unint64_t v16 = (void *)v12[v14];
        id v17 = v16;
        id v29 = v15;
        unint64_t v19 = v15[2];
        unint64_t v18 = v15[3];
        if (v19 >= v18 >> 1)
        {
          sub_1A72D2F8C(v18 > 1, v19 + 1, 1);
          unint64_t v15 = v29;
        }
        v15[2] = v19 + 1;
        v15[v19 + 4] = v16;
        v14 += 2;
        --v13;
      }
      while (v13);
      swift_release();
    }
    else
    {
      swift_release();
      unint64_t v15 = (void *)MEMORY[0x1E4FBC860];
    }
    sub_1A7422940();
    uint64_t v26 = (void *)swift_allocError();
    *id v27 = v15;
    a2();
  }
  else
  {
    swift_beginAccess();
    MEMORY[0x1F4188790](*(void *)(a4 + 16));
    swift_bridgeObjectRetain();
    swift_getTupleTypeMetadata2();
    uint64_t v20 = sub_1A7572B30();
    swift_getWitnessTable();
    uint64_t v21 = sub_1A7572920();
    uint64_t v22 = swift_bridgeObjectRelease();
    v28[4] = v21;
    MEMORY[0x1F4188790](v22);
    v28[2] = a7;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v25 = sub_1A7320598((void (*)(char *, char *))sub_1A7422EC4, (uint64_t)v28, v20, a7, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v24);
    swift_bridgeObjectRelease();
    a5(v25);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A741C5A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = *(int *)(MEMORY[0x1F4188790](TupleTypeMetadata2 - 8) + 56);
  uint64_t v9 = (char *)&v13 + v8 - v7;
  uint64_t v10 = a1 + v8;
  uint64_t v11 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, v10, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v9, a2);
}

uint64_t when2<A, B>(on:_:_:)()
{
  return Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A741D040);
}

uint64_t sub_1A741C75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, void *a7)
{
  uint64_t v74 = a3;
  uint64_t v75 = a4;
  uint64_t v11 = *a5;
  uint64_t v12 = *a7;
  uint64_t v13 = sub_1A7572210();
  uint64_t v80 = *(void *)(v13 - 8);
  uint64_t v81 = v13;
  MEMORY[0x1F4188790](v13);
  BOOL v79 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A7572260();
  uint64_t v77 = *(void *)(v15 - 8);
  uint64_t v78 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v76 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = (void *)swift_allocObject();
  uint64_t v18 = *(void *)(v11 + 80);
  v17[2] = v18;
  id v72 = a7;
  uint64_t v19 = *(void *)(v12 + 80);
  v17[3] = v19;
  void v17[4] = a1;
  unint64_t v73 = v17;
  v17[5] = a2;
  swift_retain();
  uint64_t v20 = dispatch_group_create();
  sub_1A7573210();
  sub_1A7573210();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v22 = swift_allocBox();
  uint64_t v24 = v23 + *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v23, 1, 1, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  dispatch_group_enter(v20);
  uint64_t v26 = (void *)swift_allocObject();
  uint64_t v83 = v19;
  uint64_t v84 = v18;
  v26[2] = v18;
  v26[3] = v19;
  v26[4] = v22;
  uint64_t v82 = v22;
  swift_retain();
  uint64_t v85 = a6;
  uint64_t v71 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v27 = sub_1A72C01A0(a6, (uint64_t)sub_1A7422C08, (uint64_t)v26);
  swift_release();
  uint64_t v28 = qword_1EB705720;
  swift_retain();
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v29 = *(void *)(*(void *)(v27 + 16) + 16);
  id v30 = (id)qword_1EB704C70;
  os_unfair_lock_lock_with_options();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v30;
  *(void *)(v31 + 24) = 0;
  *(unsigned char *)(v31 + 32) = 1;
  uint64_t v70 = nullsub_1;
  *(void *)(v31 + 40) = nullsub_1;
  *(void *)(v31 + 48) = 0;
  *(void *)(v31 + 56) = sub_1A74210C4;
  *(void *)(v31 + 64) = v25;
  uint64_t v69 = nullsub_1;
  *(void *)(v31 + 72) = nullsub_1;
  *(void *)(v31 + 80) = 0;
  id v32 = v30;
  swift_retain();
  uint64_t v33 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v31);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 16));
  v33();
  swift_release();
  swift_release();

  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v20;
  id v35 = (void *)qword_1EB704C70;
  uint64_t v36 = *(void *)(*(void *)(v27 + 16) + 16);
  id v37 = v20;
  id v38 = v35;
  os_unfair_lock_lock_with_options();
  uint64_t v39 = (void *)swift_allocObject();
  v39[2] = v38;
  v39[3] = sub_1A7422EF0;
  v39[4] = v34;
  id v40 = v38;
  swift_retain();
  uint64_t v41 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A7422840, (uint64_t)v39);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v36 + 16));
  v41();
  swift_release();
  swift_release();
  swift_release();

  dispatch_group_enter(v37);
  unint64_t v42 = (void *)swift_allocObject();
  uint64_t v43 = v83;
  v42[2] = v84;
  v42[3] = v43;
  void v42[4] = v82;
  swift_retain();
  uint64_t v44 = sub_1A72C01A0(v85, (uint64_t)sub_1A7422C30, (uint64_t)v42);
  swift_release();
  uint64_t v45 = (void *)qword_1EB704C70;
  uint64_t v46 = *(void *)(*(void *)(v44 + 16) + 16);
  swift_retain();
  id v47 = v45;
  os_unfair_lock_lock_with_options();
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = v47;
  *(void *)(v48 + 24) = 0;
  *(unsigned char *)(v48 + 32) = 1;
  *(void *)(v48 + 40) = v70;
  *(void *)(v48 + 48) = 0;
  *(void *)(v48 + 56) = sub_1A7422864;
  *(void *)(v48 + 64) = v25;
  *(void *)(v48 + 72) = v69;
  *(void *)(v48 + 80) = 0;
  id v49 = v47;
  swift_retain();
  uint64_t v50 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v48);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 16));
  v50();
  swift_release();
  swift_release();

  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v37;
  uint64_t v52 = (void *)qword_1EB704C70;
  uint64_t v53 = *(void *)(*(void *)(v44 + 16) + 16);
  char v54 = v37;
  id v55 = v52;
  os_unfair_lock_lock_with_options();
  uint64_t v56 = (void *)swift_allocObject();
  v56[2] = v55;
  v56[3] = sub_1A7422EF0;
  v56[4] = v51;
  id v57 = v55;
  swift_retain();
  uint64_t v58 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A7422840, (uint64_t)v56);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + 16));
  v58();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v59 = (void *)swift_allocObject();
  uint64_t v61 = v82;
  uint64_t v60 = v83;
  v59[2] = v84;
  v59[3] = v60;
  v59[4] = v61;
  v59[5] = sub_1A7422BFC;
  v59[6] = v73;
  v59[7] = v25;
  uint64_t v62 = v75;
  v59[8] = v74;
  v59[9] = v62;
  aBlock[4] = sub_1A7422CAC;
  aBlock[5] = v59;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A73322E4;
  aBlock[3] = &block_descriptor_165;
  uint64_t v63 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v64 = v76;
  sub_1A7572240();
  uint64_t v86 = MEMORY[0x1E4FBC860];
  sub_1A732938C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
  sub_1A73293E4();
  uint64_t v65 = v79;
  uint64_t v66 = v81;
  sub_1A7573380();
  sub_1A7573030();
  _Block_release(v63);

  (*(void (**)(char *, uint64_t))(v80 + 8))(v65, v66);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v64, v78);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A741D040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A741C75C(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 32));
}

uint64_t sub_1A741D04C(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))((char *)&v16 - v13, a1, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(&v14[*(int *)(TupleTypeMetadata2 + 48)], a2, a6);
  a3(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, TupleTypeMetadata2);
}

uint64_t sub_1A741D1BC(uint64_t a1, void (*a2)(char *, char *), uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v69 = a6;
  uint64_t v70 = a5;
  uint64_t v73 = a4;
  uint64_t v62 = a3;
  uint64_t v63 = a2;
  uint64_t v66 = *(void *)(a8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  uint64_t v61 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v71 = v11;
  uint64_t v72 = v12;
  MEMORY[0x1F4188790](v9);
  uint64_t v60 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1A7573210();
  uint64_t v74 = *(void *)(v14 - 8);
  uint64_t v15 = v74;
  MEMORY[0x1F4188790](v14);
  uint64_t v65 = (char *)&v59 - v16;
  uint64_t v67 = a8;
  uint64_t v17 = sub_1A7573210();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v68 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v59 - v22;
  uint64_t v24 = swift_projectBox();
  swift_beginAccess();
  uint64_t v25 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v26 = &v23[v25];
  uint64_t v27 = v24 + v25;
  uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v64(v23, v24, v14);
  uint64_t v28 = *(void *)(v17 - 8);
  uint64_t v29 = v27;
  uint64_t v30 = TupleTypeMetadata2;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v26, v29, v17);
  uint64_t v31 = &v21[*(int *)(TupleTypeMetadata2 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v21, v23, v14);
  id v32 = v26;
  uint64_t v33 = v17;
  uint64_t v35 = v72;
  uint64_t v34 = v73;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v31, v32, v33);
  uint64_t v36 = v21;
  uint64_t v37 = v71;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v36, 1, v71) != 1)
  {
    id v38 = v65;
    v64(v65, (uint64_t)v36, v14);
    uint64_t v40 = v66;
    uint64_t v39 = v67;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v31, 1, v67) != 1)
    {
      uint64_t v56 = v60;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v60, v38, v37);
      id v57 = v61;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v61, v31, v39);
      v63(v56, v57);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v57, v39);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v56, v37);
      uint64_t v55 = v74;
      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v36, v14);
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v37);
  }
  swift_beginAccess();
  uint64_t v41 = *(void **)(v34 + 16);
  uint64_t v42 = v34;
  if (v41)
  {
    id v43 = v41;
    id v44 = v41;
    uint64_t v45 = sub_1A72ADB60(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v47 = v45[2];
    unint64_t v46 = v45[3];
    if (v47 >= v46 >> 1) {
      uint64_t v45 = sub_1A72ADB60((void *)(v46 > 1), v47 + 1, 1, v45);
    }
    v45[2] = v47 + 1;
    v45[v47 + 4] = v41;
  }
  else
  {
    uint64_t v45 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_beginAccess();
  uint64_t v48 = *(void **)(v42 + 24);
  if (v48)
  {
    id v49 = v48;
    id v50 = v48;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v45 = sub_1A72ADB60(0, v45[2] + 1, 1, v45);
    }
    unint64_t v52 = v45[2];
    unint64_t v51 = v45[3];
    if (v52 >= v51 >> 1) {
      uint64_t v45 = sub_1A72ADB60((void *)(v51 > 1), v52 + 1, 1, v45);
    }
    v45[2] = v52 + 1;
    v45[v52 + 4] = v48;
  }
  sub_1A7422940();
  uint64_t v53 = (void *)swift_allocError();
  *char v54 = v45;
  v70();

  uint64_t v14 = v30;
  uint64_t v55 = v68;
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v36, v14);
}

uint64_t whenSome<A, B>(on:_:_:)()
{
  return Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A741E1A0);
}

uint64_t sub_1A741D8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, void *a7)
{
  uint64_t v74 = a3;
  uint64_t v75 = a4;
  uint64_t v11 = *a5;
  uint64_t v12 = *a7;
  uint64_t v13 = sub_1A7572210();
  uint64_t v80 = *(void *)(v13 - 8);
  uint64_t v81 = v13;
  MEMORY[0x1F4188790](v13);
  BOOL v79 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A7572260();
  uint64_t v77 = *(void *)(v15 - 8);
  uint64_t v78 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v76 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v18 = *(void *)(v11 + 80);
  v17[2] = v18;
  uint64_t v72 = a7;
  uint64_t v19 = *(void *)(v12 + 80);
  v17[3] = v19;
  void v17[4] = a1;
  uint64_t v73 = v17;
  v17[5] = a2;
  swift_retain();
  uint64_t v20 = dispatch_group_create();
  sub_1A7573210();
  sub_1A7573210();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v22 = swift_allocBox();
  uint64_t v24 = v23 + *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v23, 1, 1, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  dispatch_group_enter(v20);
  uint64_t v26 = (void *)swift_allocObject();
  uint64_t v83 = v19;
  uint64_t v84 = v18;
  v26[2] = v18;
  v26[3] = v19;
  v26[4] = v22;
  uint64_t v82 = v22;
  swift_retain();
  uint64_t v85 = a6;
  uint64_t v71 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v27 = sub_1A72C01A0(a6, (uint64_t)sub_1A7422F60, (uint64_t)v26);
  swift_release();
  uint64_t v28 = qword_1EB705720;
  swift_retain();
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v29 = *(void *)(*(void *)(v27 + 16) + 16);
  id v30 = (id)qword_1EB704C70;
  os_unfair_lock_lock_with_options();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v30;
  *(void *)(v31 + 24) = 0;
  *(unsigned char *)(v31 + 32) = 1;
  uint64_t v70 = nullsub_1;
  *(void *)(v31 + 40) = nullsub_1;
  *(void *)(v31 + 48) = 0;
  *(void *)(v31 + 56) = sub_1A74210C4;
  *(void *)(v31 + 64) = v25;
  uint64_t v69 = nullsub_1;
  *(void *)(v31 + 72) = nullsub_1;
  *(void *)(v31 + 80) = 0;
  id v32 = v30;
  swift_retain();
  uint64_t v33 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v31);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 16));
  v33();
  swift_release();
  swift_release();

  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v20;
  uint64_t v35 = (void *)qword_1EB704C70;
  uint64_t v36 = *(void *)(*(void *)(v27 + 16) + 16);
  uint64_t v37 = v20;
  id v38 = v35;
  os_unfair_lock_lock_with_options();
  uint64_t v39 = (void *)swift_allocObject();
  v39[2] = v38;
  v39[3] = sub_1A7422EF0;
  v39[4] = v34;
  id v40 = v38;
  swift_retain();
  uint64_t v41 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A7422840, (uint64_t)v39);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v36 + 16));
  v41();
  swift_release();
  swift_release();
  swift_release();

  dispatch_group_enter(v37);
  uint64_t v42 = (void *)swift_allocObject();
  uint64_t v43 = v83;
  v42[2] = v84;
  v42[3] = v43;
  void v42[4] = v82;
  swift_retain();
  uint64_t v44 = sub_1A72C01A0(v85, (uint64_t)sub_1A7422F78, (uint64_t)v42);
  swift_release();
  uint64_t v45 = (void *)qword_1EB704C70;
  uint64_t v46 = *(void *)(*(void *)(v44 + 16) + 16);
  swift_retain();
  id v47 = v45;
  os_unfair_lock_lock_with_options();
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = v47;
  *(void *)(v48 + 24) = 0;
  *(unsigned char *)(v48 + 32) = 1;
  *(void *)(v48 + 40) = v70;
  *(void *)(v48 + 48) = 0;
  *(void *)(v48 + 56) = sub_1A7422864;
  *(void *)(v48 + 64) = v25;
  *(void *)(v48 + 72) = v69;
  *(void *)(v48 + 80) = 0;
  id v49 = v47;
  swift_retain();
  id v50 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v48);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 16));
  v50();
  swift_release();
  swift_release();

  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v37;
  unint64_t v52 = (void *)qword_1EB704C70;
  uint64_t v53 = *(void *)(*(void *)(v44 + 16) + 16);
  char v54 = v37;
  id v55 = v52;
  os_unfair_lock_lock_with_options();
  uint64_t v56 = (void *)swift_allocObject();
  v56[2] = v55;
  v56[3] = sub_1A7422EF0;
  v56[4] = v51;
  id v57 = v55;
  swift_retain();
  uint64_t v58 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A7422840, (uint64_t)v56);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + 16));
  v58();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v59 = (void *)swift_allocObject();
  uint64_t v61 = v82;
  uint64_t v60 = v83;
  v59[2] = v84;
  v59[3] = v60;
  v59[4] = v61;
  v59[5] = sub_1A7422ADC;
  v59[6] = v73;
  v59[7] = v25;
  uint64_t v62 = v75;
  v59[8] = v74;
  v59[9] = v62;
  aBlock[4] = sub_1A7422BAC;
  aBlock[5] = v59;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A73322E4;
  aBlock[3] = &block_descriptor_127;
  uint64_t v63 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v64 = v76;
  sub_1A7572240();
  uint64_t v86 = MEMORY[0x1E4FBC860];
  sub_1A732938C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
  sub_1A73293E4();
  uint64_t v65 = v79;
  uint64_t v66 = v81;
  sub_1A7573380();
  sub_1A7573030();
  _Block_release(v63);

  (*(void (**)(char *, uint64_t))(v80 + 8))(v65, v66);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v64, v78);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A741E1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A741D8BC(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 32));
}

uint64_t sub_1A741E1AC(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v6 = sub_1A7573210();
  uint64_t v7 = sub_1A7573210();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))((char *)&v13 - v10, a1, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(&v11[*(int *)(TupleTypeMetadata2 + 48)], a2, v7);
  a3(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, TupleTypeMetadata2);
}

uint64_t sub_1A741E334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A7573210();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - v7;
  sub_1A7573210();
  uint64_t v9 = swift_projectBox();
  uint64_t v10 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, a3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 40))(v9, v8, v5);
}

uint64_t sub_1A741E4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1A7573210();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v14 - v8;
  sub_1A7573210();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = swift_projectBox();
  uint64_t v12 = *(void *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a1, a4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, a4);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 40))(v11 + *(int *)(TupleTypeMetadata2 + 48), v9, v6);
}

void sub_1A741E660(uint64_t a1, void (*a2)(char *, char *), uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  v43[1] = a6;
  uint64_t v44 = a5;
  v43[0] = a4;
  uint64_t v49 = a3;
  id v50 = a2;
  uint64_t v10 = sub_1A7573210();
  uint64_t v45 = a8;
  uint64_t v11 = sub_1A7573210();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v48 = (char *)v43 - v14;
  uint64_t v15 = *(void *)(v11 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)v43 - v17;
  uint64_t v19 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v21 = (char *)v43 - v20;
  uint64_t v22 = swift_projectBox();
  swift_beginAccess();
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v46(v21, v22, v10);
  LODWORD(a7) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 48))(v21, 1, a7);
  id v47 = *(void (**)(char *, uint64_t))(v19 + 8);
  v47(v21, v10);
  if (a7 == 1
    && (swift_beginAccess(),
        (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v22 + *(int *)(TupleTypeMetadata2 + 48), v11),
        int v23 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v45 - 8) + 48))(v18, 1),
        (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v11),
        v23 == 1))
  {
    uint64_t v24 = v43[0];
    uint64_t v25 = (void **)(v43[0] + 16);
    swift_beginAccess();
    uint64_t v26 = *v25;
    if (*v25)
    {
      id v27 = v26;
      id v28 = v26;
      uint64_t v29 = sub_1A72ADB60(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v31 = v29[2];
      unint64_t v30 = v29[3];
      if (v31 >= v30 >> 1) {
        uint64_t v29 = sub_1A72ADB60((void *)(v30 > 1), v31 + 1, 1, v29);
      }
      v29[2] = v31 + 1;
      v29[v31 + 4] = v26;
    }
    else
    {
      uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_beginAccess();
    uint64_t v36 = *(void **)(v24 + 24);
    if (v36)
    {
      id v37 = v36;
      id v38 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v29 = sub_1A72ADB60(0, v29[2] + 1, 1, v29);
      }
      unint64_t v40 = v29[2];
      unint64_t v39 = v29[3];
      if (v40 >= v39 >> 1) {
        uint64_t v29 = sub_1A72ADB60((void *)(v39 > 1), v40 + 1, 1, v29);
      }
      v29[2] = v40 + 1;
      v29[v40 + 4] = v36;
    }
    sub_1A7422940();
    uint64_t v41 = (void *)swift_allocError();
    *uint64_t v42 = v29;
    v44();
  }
  else
  {
    swift_beginAccess();
    uint64_t v32 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v33 = v48;
    uint64_t v34 = &v48[v32];
    uint64_t v35 = v22 + v32;
    v46(v48, v22, v10);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v34, v35, v11);
    v50(v33, v34);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v34, v11);
    v47(v33, v10);
  }
}

uint64_t whenFirst<A, B>(on:_:maybe:)()
{
  return Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A741F558);
}

uint64_t sub_1A741EC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, NSObject *a7)
{
  uint64_t v81 = a4;
  uint64_t v79 = a3;
  uint64_t v11 = *a5;
  v12.Class isa = a7->isa;
  uint64_t v13 = sub_1A7572210();
  uint64_t v86 = *(void *)(v13 - 8);
  uint64_t v87 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v85 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A7572260();
  uint64_t v83 = *(void *)(v15 - 8);
  uint64_t v84 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v82 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v18 = *(void *)(v11 + 80);
  v17[2] = v18;
  uint64_t v76 = a7;
  uint64_t v19 = *((void *)v12.isa + 10);
  v17[3] = v19;
  void v17[4] = a1;
  uint64_t v78 = v17;
  v17[5] = a2;
  swift_retain();
  uint64_t v20 = dispatch_group_create();
  sub_1A7573210();
  uint64_t v21 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v22, 1, 1, v18);
  sub_1A7573210();
  uint64_t v90 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v23, 1, 1, v19);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = 0;
  uint64_t v77 = swift_allocObject();
  *(void *)(v77 + 16) = 0;
  dispatch_group_enter(v20);
  uint64_t v25 = (void *)swift_allocObject();
  uint64_t v88 = v18;
  uint64_t v89 = v19;
  v25[2] = v18;
  v25[3] = v19;
  v25[4] = v21;
  uint64_t v80 = v21;
  uint64_t v26 = v24;
  swift_retain();
  id v27 = a6;
  uint64_t v74 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v28 = sub_1A72C01A0(a6, (uint64_t)sub_1A74229D8, (uint64_t)v25);
  swift_release();
  uint64_t v29 = qword_1EB705720;
  swift_retain();
  if (v29 != -1) {
    swift_once();
  }
  uint64_t v30 = *(void *)(*(void *)(v28 + 16) + 16);
  id v31 = (id)qword_1EB704C70;
  os_unfair_lock_lock_with_options();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v31;
  *(void *)(v32 + 24) = 0;
  *(unsigned char *)(v32 + 32) = 1;
  uint64_t v73 = nullsub_1;
  *(void *)(v32 + 40) = nullsub_1;
  *(void *)(v32 + 48) = 0;
  *(void *)(v32 + 56) = sub_1A74229F8;
  *(void *)(v32 + 64) = v26;
  uint64_t v72 = nullsub_1;
  *(void *)(v32 + 72) = nullsub_1;
  *(void *)(v32 + 80) = 0;
  id v33 = v31;
  swift_retain();
  uint64_t v34 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v32);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v30 + 16));
  v34();
  swift_release();
  swift_release();

  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v20;
  uint64_t v36 = (void *)qword_1EB704C70;
  uint64_t v37 = *(void *)(v28 + 16);
  uint64_t v75 = v26;
  uint64_t v38 = *(void *)(v37 + 16);
  unint64_t v39 = v20;
  id v40 = v36;
  os_unfair_lock_lock_with_options();
  uint64_t v41 = (void *)swift_allocObject();
  v41[2] = v40;
  v41[3] = sub_1A7422EF0;
  v41[4] = v35;
  id v42 = v40;
  swift_retain();
  uint64_t v43 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A7422840, (uint64_t)v41);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v38 + 16));
  v43();
  swift_release();
  swift_release();
  swift_release();

  dispatch_group_enter(v39);
  uint64_t v44 = (void *)swift_allocObject();
  uint64_t v45 = v89;
  v44[2] = v88;
  v44[3] = v45;
  v44[4] = v90;
  swift_retain();
  uint64_t v71 = v27;
  uint64_t v46 = sub_1A72C01A0(v27, (uint64_t)sub_1A7422A1C, (uint64_t)v44);
  swift_release();
  id v47 = (void *)qword_1EB704C70;
  uint64_t v48 = *(void *)(*(void *)(v46 + 16) + 16);
  uint64_t v49 = v77;
  swift_retain();
  id v50 = v47;
  os_unfair_lock_lock_with_options();
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v50;
  *(void *)(v51 + 24) = 0;
  *(unsigned char *)(v51 + 32) = 1;
  *(void *)(v51 + 40) = v73;
  *(void *)(v51 + 48) = 0;
  *(void *)(v51 + 56) = sub_1A74229F8;
  *(void *)(v51 + 64) = v49;
  *(void *)(v51 + 72) = v72;
  *(void *)(v51 + 80) = 0;
  id v52 = v50;
  swift_retain();
  uint64_t v53 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v51);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v48 + 16));
  v53();
  swift_release();
  swift_release();

  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v39;
  id v55 = (void *)qword_1EB704C70;
  uint64_t v56 = *(void *)(*(void *)(v46 + 16) + 16);
  uint64_t v76 = v39;
  id v57 = v55;
  os_unfair_lock_lock_with_options();
  uint64_t v58 = (void *)swift_allocObject();
  v58[2] = v57;
  void v58[3] = sub_1A7422EF0;
  v58[4] = v54;
  id v59 = v57;
  swift_retain();
  uint64_t v60 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A7422840, (uint64_t)v58);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v56 + 16));
  v60();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v61 = (void *)swift_allocObject();
  uint64_t v62 = v89;
  uint64_t v63 = v90;
  v61[2] = v88;
  v61[3] = v62;
  uint64_t v64 = v81;
  v61[4] = v80;
  v61[5] = sub_1A7422994;
  v61[6] = v78;
  v61[7] = v63;
  v61[8] = v75;
  _OWORD v61[9] = v49;
  v61[10] = v79;
  v61[11] = v64;
  aBlock[4] = sub_1A7422AA4;
  aBlock[5] = v61;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A73322E4;
  aBlock[3] = &block_descriptor_87;
  uint64_t v65 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v66 = v82;
  sub_1A7572240();
  uint64_t v91 = MEMORY[0x1E4FBC860];
  sub_1A732938C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
  sub_1A73293E4();
  uint64_t v67 = v85;
  uint64_t v68 = v87;
  sub_1A7573380();
  uint64_t v69 = v76;
  sub_1A7573030();
  _Block_release(v65);

  (*(void (**)(char *, uint64_t))(v86 + 8))(v67, v68);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v66, v84);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A741F558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A741EC18(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), *(void **)(v4 + 24), *(NSObject **)(v4 + 32));
}

uint64_t sub_1A741F564(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1A7573210();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v13 = (char *)&v15 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))((char *)&v15 - v12, a1, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(&v13[*(int *)(TupleTypeMetadata2 + 48)], a2, v9);
  a3(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, TupleTypeMetadata2);
}

uint64_t sub_1A741F6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A7573210();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = swift_projectBox();
  uint64_t v10 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, a3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 40))(v9, v8, v5);
}

uint64_t sub_1A741F84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1A7573210();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = swift_projectBox();
  uint64_t v11 = *(void *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, a4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, a4);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 40))(v10, v9, v6);
}

id sub_1A741F9BC(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = a1;

  return a1;
}

void sub_1A741FA10(uint64_t a1, void (*a2)(char *, char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), uint64_t a8, uint64_t a9)
{
  uint64_t v43 = a8;
  uint64_t v44 = a7;
  uint64_t v38 = a6;
  uint64_t v39 = a5;
  uint64_t v41 = a3;
  id v42 = a2;
  uint64_t v40 = sub_1A7573210();
  uint64_t v9 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v11 = (char *)&v38 - v10;
  uint64_t v12 = sub_1A7573210();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v17 = *(void *)(a9 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_projectBox();
  uint64_t v21 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v20, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, a9) == 1)
  {
    uint64_t v22 = v39;
    uint64_t v23 = (void **)(v38 + 16);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    swift_beginAccess();
    uint64_t v24 = *(void **)(v22 + 16);
    if (v24)
    {
      id v25 = v24;
      id v26 = v24;
      id v27 = sub_1A72ADB60(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v29 = v27[2];
      unint64_t v28 = v27[3];
      if (v29 >= v28 >> 1) {
        id v27 = sub_1A72ADB60((void *)(v28 > 1), v29 + 1, 1, v27);
      }
      v27[2] = v29 + 1;
      v27[v29 + 4] = v24;
    }
    else
    {
      id v27 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_beginAccess();
    id v31 = *v23;
    if (*v23)
    {
      id v32 = v31;
      id v33 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v27 = sub_1A72ADB60(0, v27[2] + 1, 1, v27);
      }
      unint64_t v35 = v27[2];
      unint64_t v34 = v27[3];
      if (v35 >= v34 >> 1) {
        id v27 = sub_1A72ADB60((void *)(v34 > 1), v35 + 1, 1, v27);
      }
      v27[2] = v35 + 1;
      v27[v35 + 4] = v31;
    }
    sub_1A7422940();
    uint64_t v36 = (void *)swift_allocError();
    void *v37 = v27;
    v44();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v16, a9);
    swift_beginAccess();
    uint64_t v30 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, v40);
    v42(v19, v11);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v30);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, a9);
  }
}

uint64_t when3<A, B, C>(on:_:_:_:)()
{
  return Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A7420B24);
}

uint64_t sub_1A741FF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, void *a7, void *a8)
{
  uint64_t v104 = a4;
  uint64_t v103 = a3;
  uint64_t v13 = *a5;
  uint64_t v14 = *a7;
  uint64_t v15 = *a8;
  uint64_t v16 = sub_1A7572210();
  uint64_t v109 = *(void *)(v16 - 8);
  uint64_t v110 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v108 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1A7572260();
  uint64_t v106 = *(void *)(v18 - 8);
  uint64_t v107 = v18;
  MEMORY[0x1F4188790](v18);
  char v105 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = *(void *)(v13 + 80);
  void v20[2] = v21;
  unsigned int v100 = a7;
  uint64_t v22 = *(void *)(v14 + 80);
  v20[3] = v22;
  char v101 = a8;
  uint64_t v23 = *(void *)(v15 + 80);
  v20[4] = v23;
  v20[5] = a1;
  char v102 = v20;
  v20[6] = a2;
  swift_retain();
  uint64_t v24 = dispatch_group_create();
  sub_1A7573210();
  sub_1A7573210();
  sub_1A7573210();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v26 = swift_allocBox();
  uint64_t v28 = v27 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v29 = v27 + *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v27, 1, 1, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v28, 1, 1, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v29, 1, 1, v23);
  uint64_t v30 = (void *)swift_allocObject();
  v30[3] = 0;
  v30[4] = 0;
  void v30[2] = 0;
  dispatch_group_enter(v24);
  id v31 = (void *)swift_allocObject();
  uint64_t v117 = v22;
  uint64_t v118 = v21;
  id v31[2] = v21;
  v31[3] = v22;
  uint64_t v116 = v23;
  v31[4] = v23;
  v31[5] = v26;
  uint64_t v32 = v26;
  swift_retain();
  uint64_t v114 = MEMORY[0x1E4FBC848] + 8;
  int v115 = a6;
  uint64_t v33 = sub_1A72C01A0(a6, (uint64_t)sub_1A7421044, (uint64_t)v31);
  swift_release();
  uint64_t v34 = qword_1EB705720;
  swift_retain();
  if (v34 != -1) {
    swift_once();
  }
  uint64_t v35 = *(void *)(*(void *)(v33 + 16) + 16);
  id v36 = (id)qword_1EB704C70;
  os_unfair_lock_lock_with_options();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v36;
  *(void *)(v37 + 24) = 0;
  *(unsigned char *)(v37 + 32) = 1;
  unint64_t v113 = nullsub_1;
  *(void *)(v37 + 40) = nullsub_1;
  *(void *)(v37 + 48) = 0;
  *(void *)(v37 + 56) = sub_1A74210C4;
  *(void *)(v37 + 64) = v30;
  uint64_t v112 = nullsub_1;
  *(void *)(v37 + 72) = nullsub_1;
  *(void *)(v37 + 80) = 0;
  id v38 = v36;
  swift_retain();
  uint64_t v39 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v37);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v35 + 16));
  v39();
  swift_release();
  swift_release();

  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v24;
  uint64_t v41 = (void *)qword_1EB704C70;
  uint64_t v42 = *(void *)(*(void *)(v33 + 16) + 16);
  uint64_t v43 = v24;
  uint64_t v99 = v43;
  id v44 = v41;
  os_unfair_lock_lock_with_options();
  uint64_t v45 = (void *)swift_allocObject();
  v45[2] = v44;
  v45[3] = sub_1A7422EF0;
  v45[4] = v40;
  id v46 = v44;
  swift_retain();
  id v47 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A7422840, (uint64_t)v45);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v42 + 16));
  v47();
  swift_release();
  swift_release();
  swift_release();

  dispatch_group_enter(v43);
  uint64_t v48 = (void *)swift_allocObject();
  uint64_t v49 = v117;
  v48[2] = v118;
  v48[3] = v49;
  v48[4] = v116;
  v48[5] = v32;
  uint64_t v111 = v32;
  swift_retain();
  id v50 = v115;
  uint64_t v51 = sub_1A72C01A0(v115, (uint64_t)sub_1A7422844, (uint64_t)v48);
  swift_release();
  id v52 = (void *)qword_1EB704C70;
  uint64_t v53 = *(void *)(v51 + 16);
  uint64_t v54 = v51;
  unsigned int v100 = (void *)v51;
  uint64_t v55 = *(void *)(v53 + 16);
  swift_retain();
  id v56 = v52;
  os_unfair_lock_lock_with_options();
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = v56;
  *(void *)(v57 + 24) = 0;
  *(unsigned char *)(v57 + 32) = 1;
  *(void *)(v57 + 40) = v113;
  *(void *)(v57 + 48) = 0;
  *(void *)(v57 + 56) = sub_1A7422864;
  *(void *)(v57 + 64) = v30;
  *(void *)(v57 + 72) = v112;
  *(void *)(v57 + 80) = 0;
  id v58 = v56;
  swift_retain();
  id v59 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v57);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v55 + 16));
  v59();
  swift_release();
  swift_release();

  uint64_t v60 = swift_allocObject();
  uint64_t v61 = v99;
  *(void *)(v60 + 16) = v99;
  uint64_t v62 = (void *)qword_1EB704C70;
  uint64_t v63 = v50;
  uint64_t v64 = *(void *)(*(void *)(v54 + 16) + 16);
  uint64_t v65 = v61;
  id v66 = v62;
  os_unfair_lock_lock_with_options();
  uint64_t v67 = (void *)swift_allocObject();
  v67[2] = v66;
  v67[3] = sub_1A7422EF0;
  v67[4] = v60;
  id v68 = v66;
  swift_retain();
  uint64_t v69 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A7422840, (uint64_t)v67);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v64 + 16));
  v69();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v70 = v65;
  dispatch_group_enter(v65);
  uint64_t v71 = (void *)swift_allocObject();
  uint64_t v72 = v117;
  v71[2] = v118;
  v71[3] = v72;
  v71[4] = v116;
  v71[5] = v111;
  swift_retain();
  uint64_t v73 = sub_1A72C01A0(v63, (uint64_t)sub_1A7422888, (uint64_t)v71);
  swift_release();
  uint64_t v74 = (void *)qword_1EB704C70;
  uint64_t v75 = *(void *)(*(void *)(v73 + 16) + 16);
  swift_retain();
  id v76 = v74;
  os_unfair_lock_lock_with_options();
  uint64_t v77 = swift_allocObject();
  *(void *)(v77 + 16) = v76;
  *(void *)(v77 + 24) = 0;
  *(unsigned char *)(v77 + 32) = 1;
  *(void *)(v77 + 40) = v113;
  *(void *)(v77 + 48) = 0;
  *(void *)(v77 + 56) = sub_1A74228A8;
  *(void *)(v77 + 64) = v30;
  *(void *)(v77 + 72) = v112;
  *(void *)(v77 + 80) = 0;
  id v78 = v76;
  swift_retain();
  uint64_t v79 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v77);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v75 + 16));
  v79();
  swift_release();
  swift_release();

  uint64_t v80 = swift_allocObject();
  uint64_t v81 = v70;
  *(void *)(v80 + 16) = v70;
  uint64_t v82 = (void *)qword_1EB704C70;
  uint64_t v83 = *(void *)(*(void *)(v73 + 16) + 16);
  uint64_t v84 = v81;
  id v85 = v82;
  os_unfair_lock_lock_with_options();
  uint64_t v86 = (void *)swift_allocObject();
  v86[2] = v85;
  v86[3] = sub_1A7422EF0;
  v86[4] = v80;
  id v87 = v85;
  swift_retain();
  uint64_t v88 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A7422840, (uint64_t)v86);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v83 + 16));
  v88();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v89 = (void *)swift_allocObject();
  uint64_t v90 = v117;
  v89[2] = v118;
  v89[3] = v90;
  uint64_t v91 = v111;
  v89[4] = v116;
  v89[5] = v91;
  uint64_t v92 = v102;
  v89[6] = sub_1A7420E54;
  v89[7] = v92;
  uint64_t v93 = v103;
  v89[8] = v30;
  v89[9] = v93;
  v89[10] = v104;
  aBlock[4] = sub_1A7422908;
  aBlock[5] = v89;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A73322E4;
  aBlock[3] = &block_descriptor_9;
  uint64_t v94 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  unsigned int v95 = v105;
  sub_1A7572240();
  uint64_t v119 = MEMORY[0x1E4FBC860];
  sub_1A732938C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
  sub_1A73293E4();
  uint64_t v96 = v108;
  uint64_t v97 = v110;
  sub_1A7573380();
  sub_1A7573030();
  _Block_release(v94);

  (*(void (**)(char *, uint64_t))(v109 + 8))(v96, v97);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v95, v107);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A7420B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A741FF30(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 32), *(void **)(v4 + 40));
}

void *initializeBufferWithCopyOfBuffer for WhenError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WhenError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for WhenError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WhenError(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 8)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WhenError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WhenError()
{
  return &type metadata for WhenError;
}

uint64_t sub_1A7420C64(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v20 = a4;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v15 = *(void *)(TupleTypeMetadata3 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata3);
  uint64_t v17 = (char *)&v19 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))((char *)&v19 - v16, a1, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16))(&v17[*(int *)(TupleTypeMetadata3 + 48)], a2, a7);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 16))(&v17[*(int *)(TupleTypeMetadata3 + 64)], a3, a8);
  v20(v17);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, TupleTypeMetadata3);
}

uint64_t sub_1A7420E1C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7420E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A7420C64(a1, a2, a3, *(void (**)(char *))(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_1A7420E64()
{
  return swift_deallocObject();
}

uint64_t sub_1A7420EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A7573210();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - v7;
  sub_1A7573210();
  sub_1A7573210();
  uint64_t v9 = swift_projectBox();
  uint64_t v10 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, a3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 40))(v9, v8, v5);
}

uint64_t sub_1A7421044(uint64_t a1)
{
  return sub_1A7420EAC(a1, *(void *)(v1 + 40), *(void *)(v1 + 16));
}

void sub_1A7421064(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = a1;
  id v5 = a1;
}

void sub_1A74210C4(void *a1)
{
  sub_1A7421064(a1, v1);
}

uint64_t sub_1A74210E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1A7573210();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v14 - v8;
  sub_1A7573210();
  sub_1A7573210();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v11 = swift_projectBox();
  uint64_t v12 = *(void *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a1, a4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, a4);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 40))(v11 + *(int *)(TupleTypeMetadata3 + 48), v9, v6);
}

void sub_1A74212A4(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a2 + 24) = a1;
  id v5 = a1;
}

uint64_t sub_1A7421304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_1A7573210();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - v9;
  sub_1A7573210();
  sub_1A7573210();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v12 = swift_projectBox();
  uint64_t v13 = *(void *)(a5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v10, a1, a5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, a5);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 40))(v12 + *(int *)(TupleTypeMetadata3 + 64), v10, v7);
}

void sub_1A74214C8(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a2 + 32) = a1;
  id v5 = a1;
}

uint64_t sub_1A7421528(uint64_t a1, void (*a2)(char *, char *, char *), uint64_t a3, void *a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v99 = a6;
  unsigned int v100 = a5;
  char v105 = a4;
  uint64_t v86 = a3;
  id v87 = a2;
  uint64_t v91 = *(void *)(a9 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  id v85 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v84 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v103 = v14;
  uint64_t v104 = v15;
  MEMORY[0x1F4188790](v12);
  uint64_t v83 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = v17;
  uint64_t v106 = sub_1A7573210();
  uint64_t v109 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v90 = (char *)&v82 - v18;
  uint64_t v19 = sub_1A7573210();
  uint64_t v107 = *(void *)(v19 - 8);
  uint64_t v20 = v107;
  MEMORY[0x1F4188790](v19);
  uint64_t v96 = (char *)&v82 - v21;
  uint64_t v92 = a9;
  uint64_t v110 = sub_1A7573210();
  uint64_t v108 = v19;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v98 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](TupleTypeMetadata3);
  id v25 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v82 - v26;
  uint64_t v28 = swift_projectBox();
  swift_beginAccess();
  uint64_t v29 = *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v30 = &v27[v29];
  uint64_t v31 = *(int *)(TupleTypeMetadata3 + 64);
  uint64_t v32 = &v27[v31];
  char v102 = &v27[v31];
  uint64_t v33 = (char *)(v28 + v29);
  uint64_t v101 = v28 + v31;
  uint64_t v93 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v93(v27, v28, v19);
  uint64_t v34 = v109;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
  uint64_t v36 = v106;
  uint64_t v89 = v109 + 16;
  uint64_t v88 = v35;
  v35(v30, v33, v106);
  uint64_t v37 = *(void *)(v110 - 8);
  (*(void (**)(char *, uint64_t))(v37 + 16))(v32, v101);
  id v38 = &v25[*(int *)(TupleTypeMetadata3 + 48)];
  uint64_t v101 = TupleTypeMetadata3;
  uint64_t v39 = *(int *)(TupleTypeMetadata3 + 64);
  uint64_t v40 = v103;
  uint64_t v41 = &v25[v39];
  uint64_t v42 = v27;
  uint64_t v43 = v108;
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v25, v42, v108);
  id v44 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  uint64_t v97 = v38;
  v44(v38, v30, v36);
  uint64_t v45 = v104;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v41, v102, v110);
  id v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  uint64_t v110 = (uint64_t)v25;
  id v47 = v25;
  uint64_t v48 = v105;
  uint64_t v49 = v40;
  if (v46(v47, 1, v40) != 1)
  {
    id v50 = v48;
    uint64_t v51 = v96;
    v93(v96, v110, v43);
    uint64_t v52 = v94;
    uint64_t v53 = v95;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v97, 1, v95) != 1)
    {
      uint64_t v54 = v90;
      v88(v90, v97, v36);
      uint64_t v55 = v91;
      uint64_t v56 = v92;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v41, 1, v92) != 1)
      {
        id v78 = v83;
        (*(void (**)(void))(v45 + 32))();
        uint64_t v79 = v54;
        uint64_t v80 = v84;
        (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v84, v79, v53);
        uint64_t v81 = v85;
        (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v85, v41, v56);
        v87(v78, v80, v81);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v81, v56);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v80, v53);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v78, v49);
        (*(void (**)(char *, uint64_t))(v109 + 8))(v97, v106);
        uint64_t v76 = v107;
        uint64_t v75 = v108;
        return (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 8))(v110, v75);
      }
      (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v53);
      uint64_t v51 = v96;
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v51, v40);
    uint64_t v48 = v50;
  }
  swift_beginAccess();
  uint64_t v57 = (void *)v48[2];
  if (v57)
  {
    id v58 = v57;
    id v59 = v57;
    uint64_t v60 = sub_1A72ADB60(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v62 = v60[2];
    unint64_t v61 = v60[3];
    if (v62 >= v61 >> 1) {
      uint64_t v60 = sub_1A72ADB60((void *)(v61 > 1), v62 + 1, 1, v60);
    }
    v60[2] = v62 + 1;
    v60[v62 + 4] = v57;
  }
  else
  {
    uint64_t v60 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_beginAccess();
  uint64_t v63 = (void *)v48[3];
  if (v63)
  {
    id v64 = v63;
    id v65 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v60 = sub_1A72ADB60(0, v60[2] + 1, 1, v60);
    }
    unint64_t v67 = v60[2];
    unint64_t v66 = v60[3];
    if (v67 >= v66 >> 1) {
      uint64_t v60 = sub_1A72ADB60((void *)(v66 > 1), v67 + 1, 1, v60);
    }
    v60[2] = v67 + 1;
    v60[v67 + 4] = v63;
  }
  swift_beginAccess();
  id v68 = (void *)v48[4];
  if (v68)
  {
    id v69 = v68;
    id v70 = v68;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v60 = sub_1A72ADB60(0, v60[2] + 1, 1, v60);
    }
    unint64_t v72 = v60[2];
    unint64_t v71 = v60[3];
    if (v72 >= v71 >> 1) {
      uint64_t v60 = sub_1A72ADB60((void *)(v71 > 1), v72 + 1, 1, v60);
    }
    v60[2] = v72 + 1;
    v60[v72 + 4] = v68;
  }
  sub_1A7422940();
  uint64_t v73 = (void *)swift_allocError();
  void *v74 = v60;
  v100();

  uint64_t v75 = v101;
  uint64_t v76 = v98;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 8))(v110, v75);
}

uint64_t sub_1A7421EE8(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A7573BB0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v85 = 0;
      uint64_t v86 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v88 = *(void *)(v86 + 16 * i);
        uint64_t v89 = v85;
        do
        {
          if (v88 >= *(void *)(v86 + v89)) {
            break;
          }
          if (!v86) {
            goto LABEL_140;
          }
          uint64_t v90 = (void *)(v86 + v89);
          uint64_t v91 = *(void *)(v86 + v89 + 24);
          *(_OWORD *)(v86 + v89 + 16) = *(_OWORD *)(v86 + v89);
          *uint64_t v90 = v88;
          v90[1] = v91;
          v89 -= 16;
        }
        while (v89 != -16);
        v85 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  uint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_102:
      uint64_t v92 = v12;
      uint64_t v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v93 = *v101;
        do
        {
          unint64_t v94 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v93) {
            goto LABEL_144;
          }
          uint64_t v95 = v92;
          uint64_t v96 = *(void *)&v92[16 * v94 + 32];
          uint64_t v97 = *(void *)&v92[16 * v13 + 24];
          sub_1A74225BC((char *)(v93 + 16 * v96), (char *)(v93 + 16 * *(void *)&v92[16 * v13 + 16]), v93 + 16 * v97, __dst);
          if (v1) {
            break;
          }
          if (v97 < v96) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v95 = sub_1A74F9DDC((uint64_t)v95);
          }
          if (v94 >= *((void *)v95 + 2)) {
            goto LABEL_133;
          }
          uint64_t v98 = &v95[16 * v94 + 32];
          *(void *)uint64_t v98 = v96;
          *((void *)v98 + 1) = v97;
          unint64_t v99 = *((void *)v95 + 2);
          if (v13 > v99) {
            goto LABEL_134;
          }
          memmove(&v95[16 * v13 + 16], &v95[16 * v13 + 32], 16 * (v99 - v13));
          uint64_t v92 = v95;
          *((void *)v95 + 2) = v99 - 1;
          unint64_t v13 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0EC8);
    uint64_t v8 = sub_1A7572A90();
    *(void *)(v8 + 16) = v7;
    uint64_t v103 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 32;
  uint64_t v100 = *a1 - 16;
  uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v104 = v6;
  uint64_t v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 16 * v10);
      uint64_t v16 = 16 * v14;
      uint64_t v17 = *(void *)(v11 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v18 = (uint64_t *)(v102 + 16 * v14);
        uint64_t v19 = v15;
        while (1)
        {
          uint64_t v21 = *v18;
          v18 += 2;
          uint64_t v20 = v21;
          if (v15 < v17 == v21 >= v19) {
            break;
          }
          ++v10;
          uint64_t v19 = v20;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v22 = 16 * v10;
          uint64_t v23 = v10;
          uint64_t v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = v11 + v22;
              uint64_t v26 = *(void *)(v11 + v16);
              uint64_t v27 = *(void *)(v11 + v16 + 8);
              *(_OWORD *)(v11 + v16) = *(_OWORD *)(v11 + v22 - 16);
              *(void *)(v25 - 16) = v26;
              *(void *)(v25 - 8) = v27;
            }
            ++v24;
            v22 -= 16;
            v16 += 16;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v28 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v28 >= v3) {
      uint64_t v28 = v3;
    }
    if (v28 < v14) {
      break;
    }
    if (v10 != v28)
    {
      uint64_t v29 = v100 + 16 * v10;
      do
      {
        uint64_t v30 = *(void *)(v11 + 16 * v10);
        uint64_t v31 = v14;
        uint64_t v32 = v29;
        do
        {
          if (v30 >= *(void *)v32) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v33 = *(void *)(v32 + 24);
          *(_OWORD *)(v32 + 16) = *(_OWORD *)v32;
          *(void *)uint64_t v32 = v30;
          *(void *)(v32 + 8) = v33;
          v32 -= 16;
          ++v31;
        }
        while (v10 != v31);
        ++v10;
        v29 += 16;
      }
      while (v10 != v28);
      uint64_t v10 = v28;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1A74F9714(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v35 = *((void *)v12 + 2);
    unint64_t v34 = *((void *)v12 + 3);
    unint64_t v13 = v35 + 1;
    uint64_t v11 = v106;
    if (v35 >= v34 >> 1)
    {
      uint64_t v84 = sub_1A74F9714((char *)(v34 > 1), v35 + 1, 1, v12);
      uint64_t v11 = v106;
      uint64_t v12 = v84;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v36 = v12 + 32;
    uint64_t v37 = &v12[16 * v35 + 32];
    *(void *)uint64_t v37 = v14;
    *((void *)v37 + 1) = v10;
    if (v35)
    {
      while (1)
      {
        unint64_t v38 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v43 = &v36[16 * v13];
          uint64_t v44 = *((void *)v43 - 8);
          uint64_t v45 = *((void *)v43 - 7);
          BOOL v49 = __OFSUB__(v45, v44);
          uint64_t v46 = v45 - v44;
          if (v49) {
            goto LABEL_119;
          }
          uint64_t v48 = *((void *)v43 - 6);
          uint64_t v47 = *((void *)v43 - 5);
          BOOL v49 = __OFSUB__(v47, v48);
          uint64_t v41 = v47 - v48;
          char v42 = v49;
          if (v49) {
            goto LABEL_120;
          }
          unint64_t v50 = v13 - 2;
          uint64_t v51 = &v36[16 * v13 - 32];
          uint64_t v53 = *(void *)v51;
          uint64_t v52 = *((void *)v51 + 1);
          BOOL v49 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          if (v49) {
            goto LABEL_122;
          }
          BOOL v49 = __OFADD__(v41, v54);
          uint64_t v55 = v41 + v54;
          if (v49) {
            goto LABEL_125;
          }
          if (v55 >= v46)
          {
            uint64_t v73 = &v36[16 * v38];
            uint64_t v75 = *(void *)v73;
            uint64_t v74 = *((void *)v73 + 1);
            BOOL v49 = __OFSUB__(v74, v75);
            uint64_t v76 = v74 - v75;
            if (v49) {
              goto LABEL_129;
            }
            BOOL v66 = v41 < v76;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v67 = *((void *)v12 + 4);
            uint64_t v68 = *((void *)v12 + 5);
            BOOL v49 = __OFSUB__(v68, v67);
            uint64_t v60 = v68 - v67;
            char v61 = v49;
            goto LABEL_77;
          }
          uint64_t v40 = *((void *)v12 + 4);
          uint64_t v39 = *((void *)v12 + 5);
          BOOL v49 = __OFSUB__(v39, v40);
          uint64_t v41 = v39 - v40;
          char v42 = v49;
        }
        if (v42) {
          goto LABEL_121;
        }
        unint64_t v50 = v13 - 2;
        uint64_t v56 = &v36[16 * v13 - 32];
        uint64_t v58 = *(void *)v56;
        uint64_t v57 = *((void *)v56 + 1);
        BOOL v59 = __OFSUB__(v57, v58);
        uint64_t v60 = v57 - v58;
        char v61 = v59;
        if (v59) {
          goto LABEL_124;
        }
        unint64_t v62 = &v36[16 * v38];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v49 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v49) {
          goto LABEL_127;
        }
        if (__OFADD__(v60, v65)) {
          goto LABEL_128;
        }
        if (v60 + v65 >= v41)
        {
          BOOL v66 = v41 < v65;
LABEL_83:
          if (v66) {
            unint64_t v38 = v50;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v61) {
          goto LABEL_123;
        }
        id v69 = &v36[16 * v38];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v49 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v49) {
          goto LABEL_126;
        }
        if (v72 < v60) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v77 = v38 - 1;
        if (v38 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        id v78 = v12;
        uint64_t v79 = &v36[16 * v77];
        uint64_t v80 = *(void *)v79;
        uint64_t v81 = &v36[16 * v38];
        uint64_t v82 = *((void *)v81 + 1);
        sub_1A74225BC((char *)(v11 + 16 * *(void *)v79), (char *)(v11 + 16 * *(void *)v81), v11 + 16 * v82, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v82 < v80) {
          goto LABEL_116;
        }
        if (v38 > *((void *)v78 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v79 = v80;
        *(void *)&v36[16 * v77 + 8] = v82;
        unint64_t v83 = *((void *)v78 + 2);
        if (v38 >= v83) {
          goto LABEL_118;
        }
        uint64_t v12 = v78;
        unint64_t v13 = v83 - 1;
        memmove(&v36[16 * v38], v81 + 16, 16 * (v83 - 1 - v38));
        *((void *)v78 + 2) = v83 - 1;
        uint64_t v11 = v106;
        if (v83 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v104;
    uint64_t v3 = v105;
    if (v10 >= v105)
    {
      uint64_t v9 = v103;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A74225BC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v16 = &v4[16 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v17 = (char *)(a3 - 16);
        uint64_t v18 = v6;
        while (1)
        {
          uint64_t v19 = v17 + 16;
          uint64_t v20 = *((void *)v18 - 2);
          v18 -= 16;
          if (*((void *)v16 - 2) >= v20)
          {
            uint64_t v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16) {
              *(_OWORD *)uint64_t v17 = *((_OWORD *)v16 - 1);
            }
            uint64_t v18 = v6;
            v16 -= 16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= v6) {
              *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
            }
            uint64_t v24 = v18;
            if (v18 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 16;
          uint64_t v6 = v18;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1A74F9810((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A7422844(uint64_t a1)
{
  return sub_1A74210E0(a1, v1[5], v1[2], v1[3]);
}

void sub_1A7422864(void *a1)
{
  sub_1A74212A4(a1, v1);
}

uint64_t sub_1A7422888(uint64_t a1)
{
  return sub_1A7421304(a1, v1[5], v1[2], v1[3], v1[4]);
}

void sub_1A74228A8(void *a1)
{
  sub_1A74214C8(a1, v1);
}

uint64_t sub_1A74228B8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7422908()
{
  return sub_1A7421528(*(void *)(v0 + 40), *(void (**)(char *, char *, char *))(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64), *(void (**)(void))(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

unint64_t sub_1A7422940()
{
  unint64_t result = qword_1E96F32E8;
  if (!qword_1E96F32E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F32E8);
  }
  return result;
}

uint64_t sub_1A7422994(uint64_t a1, uint64_t a2)
{
  return sub_1A741F564(a1, a2, *(void (**)(char *))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 16));
}

uint64_t sub_1A74229A0()
{
  return swift_deallocObject();
}

uint64_t sub_1A74229D8(uint64_t a1)
{
  return sub_1A741F6DC(a1, *(void *)(v1 + 32), *(void *)(v1 + 16));
}

id sub_1A74229F8(void *a1)
{
  return sub_1A741F9BC(a1, v1);
}

uint64_t sub_1A7422A1C(uint64_t a1)
{
  return sub_1A741F84C(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1A7422A44()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1A7422AA4()
{
  sub_1A741FA10(*(void *)(v0 + 32), *(void (**)(char *, char *))(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void (**)(void))(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 16));
}

uint64_t sub_1A7422ADC(uint64_t a1, uint64_t a2)
{
  return sub_1A741E1AC(a1, a2, *(void (**)(char *))(v2 + 32));
}

uint64_t sub_1A7422AE8()
{
  return swift_deallocObject();
}

uint64_t sub_1A7422B2C()
{
  return swift_deallocObject();
}

uint64_t sub_1A7422B68()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7422BAC()
{
  return sub_1A7422CC4((uint64_t (*)(void, void, void, void, void, void, void, void))sub_1A741E660);
}

uint64_t sub_1A7422BC4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7422BFC(uint64_t a1, uint64_t a2)
{
  return sub_1A741D04C(a1, a2, *(void (**)(char *))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1A7422C08(uint64_t a1)
{
  return sub_1A741E334(a1, *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_1A7422C30(uint64_t a1)
{
  return sub_1A741E4B4(a1, v1[4], v1[2], v1[3]);
}

uint64_t objectdestroy_123Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7422CAC()
{
  return sub_1A7422CC4((uint64_t (*)(void, void, void, void, void, void, void, void))sub_1A741D1BC);
}

uint64_t sub_1A7422CC4(uint64_t (*a1)(void, void, void, void, void, void, void, void))
{
  return a1(v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[2], v1[3]);
}

uint64_t sub_1A7422CE0(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 24);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1A7422D18()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A7422D50()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1A7422DA0()
{
  sub_1A741C288(*(void *)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void (**)(uint64_t))(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 16));
}

uint64_t sub_1A7422DB4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7422DEC(uint64_t a1)
{
  return sub_1A741C07C(a1, v1[3], v1[4], v1[2]);
}

uint64_t sub_1A7422E0C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7422E44(void *a1)
{
  return sub_1A741C1A8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1A7422E50()
{
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

uint64_t objectdestroy_14Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7422E9C()
{
  return sub_1A7364A90(*(void *)(v0 + 16), 0, 1, *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

BOOL sub_1A7422EB0(void *a1, void *a2)
{
  return *a1 < *a2;
}

uint64_t sub_1A7422EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A741C5A0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1A7422F60(uint64_t a1)
{
  return sub_1A7422C08(a1);
}

uint64_t sub_1A7422F78(uint64_t a1)
{
  return sub_1A7422C30(a1);
}

uint64_t sub_1A7422F90(uint64_t a1)
{
  unint64_t v2 = sub_1A7423744();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7422FCC(uint64_t a1)
{
  unint64_t v2 = sub_1A7423744();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A7423008(uint64_t a1)
{
  unint64_t v2 = sub_1A74236F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7423044(uint64_t a1)
{
  unint64_t v2 = sub_1A74236F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A7423080()
{
  unint64_t v1 = 0xD000000000000014;
  if (*v0 != 1) {
    unint64_t v1 = 0x6369666963657073;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x756F6363416C6C61;
  }
}

uint64_t sub_1A74230F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7427BB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A742311C(uint64_t a1)
{
  unint64_t v2 = sub_1A7423648();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7423158(uint64_t a1)
{
  unint64_t v2 = sub_1A7423648();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A7423194(uint64_t a1)
{
  unint64_t v2 = sub_1A742369C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A74231D0(uint64_t a1)
{
  unint64_t v2 = sub_1A742369C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void REMListPickerDataView.PickerMode.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F32F0);
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F32F8);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3300);
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3308);
  uint64_t v27 = *(void *)(v11 - 8);
  uint64_t v28 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7423648();
  sub_1A75741B0();
  if (v14)
  {
    if (v14 == (void *)1)
    {
      char v31 = 1;
      sub_1A74236F0();
      uint64_t v15 = v28;
      sub_1A7573AB0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v15);
    }
    else
    {
      char v32 = 2;
      sub_1A742369C();
      id v17 = v14;
      uint64_t v18 = v24;
      uint64_t v19 = v28;
      sub_1A7573AB0();
      id v29 = v17;
      type metadata accessor for REMObjectID_Codable();
      sub_1A74267A8(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
      uint64_t v20 = v26;
      sub_1A7573B60();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v20);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v19);
      sub_1A73765C8(v14);
    }
  }
  else
  {
    char v30 = 0;
    sub_1A7423744();
    uint64_t v16 = v28;
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v16);
  }
}

unint64_t sub_1A7423648()
{
  unint64_t result = qword_1E96F3310;
  if (!qword_1E96F3310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3310);
  }
  return result;
}

unint64_t sub_1A742369C()
{
  unint64_t result = qword_1E96F3318;
  if (!qword_1E96F3318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3318);
  }
  return result;
}

unint64_t sub_1A74236F0()
{
  unint64_t result = qword_1E96F3320;
  if (!qword_1E96F3320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3320);
  }
  return result;
}

unint64_t sub_1A7423744()
{
  unint64_t result = qword_1E96F3328;
  if (!qword_1E96F3328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3328);
  }
  return result;
}

uint64_t REMListPickerDataView.PickerMode.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3330);
  uint64_t v32 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  unint64_t v34 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3338);
  uint64_t v31 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3340);
  uint64_t v28 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3348);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  unint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A7423648();
  uint64_t v14 = v36;
  sub_1A7574190();
  if (v14) {
    goto LABEL_9;
  }
  uint64_t v36 = v6;
  uint64_t v15 = v34;
  uint64_t v16 = v10;
  uint64_t v17 = sub_1A7573A70();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v19 = sub_1A7573640();
    swift_allocError();
    uint64_t v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
    *uint64_t v21 = &type metadata for REMListPickerDataView.PickerMode;
    sub_1A75739A0();
    sub_1A7573620();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x1E4FBBA70], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
LABEL_9:
    uint64_t v27 = (uint64_t)v35;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  if (!*(unsigned char *)(v17 + 32))
  {
    char v38 = 0;
    sub_1A7423744();
    sub_1A7573990();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v36);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v18 = 0;
    goto LABEL_11;
  }
  if (*(unsigned char *)(v17 + 32) == 1)
  {
    char v39 = 1;
    sub_1A74236F0();
    sub_1A7573990();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v18 = 1;
LABEL_11:
    uint64_t v27 = (uint64_t)v35;
    uint64_t *v33 = v18;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  uint64_t v36 = v17;
  char v40 = 2;
  sub_1A742369C();
  sub_1A7573990();
  uint64_t v22 = v33;
  type metadata accessor for REMObjectID_Codable();
  uint64_t v24 = v15;
  uint64_t v25 = v16;
  sub_1A74267A8(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
  uint64_t v26 = v30;
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v26);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v9);
  uint64_t v27 = (uint64_t)v35;
  uint64_t *v22 = v37;
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

uint64_t sub_1A7423D70@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMListPickerDataView.PickerMode.init(from:)(a1, a2);
}

void sub_1A7423D88(void *a1)
{
}

id REMListPickerDataView.Model.Account.account.getter()
{
  return *v0;
}

uint64_t REMListPickerDataView.Model.Account.lists.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMListPickerDataView.Model.Account.init(account:lists:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void REMListPickerDataView.Model.Account.init(account:shouldIncludeCustomSmartLists:)(uint64_t *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v3 = a3;
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_37;
  }
  uint64_t v28 = *a1;
  unint64_t v7 = 0;
  uint64_t v8 = v5 + 32;
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v31 = *(void *)(v5 + 16);
  uint64_t v32 = a1[1];
  uint64_t v30 = v5 + 32;
  while (v7 < *(void *)(v5 + 16))
  {
    uint64_t v10 = (unint64_t *)(v8 + 16 * v7);
    unint64_t v12 = *v10;
    unint64_t v11 = v10[1];
    unint64_t v13 = *v10 >> 62;
    if (!v13)
    {
      id v17 = (id)v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1A72ADC70(0, v9[2] + 1, 1, v9);
      }
      unint64_t v19 = v9[2];
      unint64_t v18 = v9[3];
      if (v19 >= v18 >> 1) {
        uint64_t v9 = sub_1A72ADC70((void *)(v18 > 1), v19 + 1, 1, v9);
      }
      void v9[2] = v19 + 1;
      v9[v19 + 4] = v12;
      goto LABEL_19;
    }
    if (v13 != 1)
    {
      uint64_t v20 = *(void *)(v11 + 16);
      if (!v20) {
        goto LABEL_4;
      }
      sub_1A72E0C18(v12);
      swift_bridgeObjectRetain();
      sub_1A72E0C18(v12);
      swift_bridgeObjectRetain();
      uint64_t v21 = 0;
      while (2)
      {
        unint64_t v22 = *(void *)(v11 + 8 * v21 + 32);
        if ((v22 & 0x8000000000000000) == 0)
        {
          id v23 = (id)v22;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1A72ADC70(0, v9[2] + 1, 1, v9);
          }
          unint64_t v25 = v9[2];
          unint64_t v24 = v9[3];
          unint64_t v26 = v25 + 1;
          if (v25 >= v24 >> 1) {
            uint64_t v9 = sub_1A72ADC70((void *)(v24 > 1), v25 + 1, 1, v9);
          }
          goto LABEL_23;
        }
        if (a2)
        {
          id v23 = (id)(v22 & 0x7FFFFFFFFFFFFFFFLL);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1A72ADC70(0, v9[2] + 1, 1, v9);
          }
          unint64_t v25 = v9[2];
          unint64_t v27 = v9[3];
          unint64_t v26 = v25 + 1;
          if (v25 >= v27 >> 1) {
            uint64_t v9 = sub_1A72ADC70((void *)(v27 > 1), v25 + 1, 1, v9);
          }
          v22 |= 0x8000000000000000;
LABEL_23:
          void v9[2] = v26;
          v9[v25 + 4] = v22;
        }
        if (v20 == ++v21)
        {
          swift_bridgeObjectRelease();
          sub_1A72E0C94(v12);
          sub_1A72E0C94(v12);
          swift_bridgeObjectRelease();
          uint64_t v6 = v31;
          uint64_t v5 = v32;
          uint64_t v8 = v30;
          goto LABEL_4;
        }
        continue;
      }
    }
    if (a2)
    {
      id v14 = (id)(v12 & 0x3FFFFFFFFFFFFFFFLL);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1A72ADC70(0, v9[2] + 1, 1, v9);
      }
      unint64_t v16 = v9[2];
      unint64_t v15 = v9[3];
      if (v16 >= v15 >> 1) {
        uint64_t v9 = sub_1A72ADC70((void *)(v15 > 1), v16 + 1, 1, v9);
      }
      void v9[2] = v16 + 1;
      v9[v16 + 4] = v12 & 0x3FFFFFFFFFFFFFFFLL | 0x8000000000000000;
LABEL_19:
      sub_1A72E0C94(v12);
    }
LABEL_4:
    if (++v7 == v6)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = v28;
      uint64_t v3 = a3;
LABEL_37:
      *uint64_t v3 = v4;
      v3[1] = v9;
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1A74240FC()
{
  if (*v0) {
    return 0x737473696CLL;
  }
  else {
    return 0x746E756F636361;
  }
}

uint64_t sub_1A7424134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7427D40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A742415C(uint64_t a1)
{
  unint64_t v2 = sub_1A742622C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7424198(uint64_t a1)
{
  unint64_t v2 = sub_1A742622C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMListPickerDataView.Model.Account.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3350);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A742622C();
  sub_1A75741B0();
  uint64_t v12 = v8;
  char v11 = 0;
  type metadata accessor for REMAccount_Codable();
  sub_1A74267A8(&qword_1EB703F10, (void (*)(uint64_t))type metadata accessor for REMAccount_Codable);
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3360);
    sub_1A74263D0(&qword_1E96F3368, &qword_1E96F3360, (void (*)(void))sub_1A7426280);
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void REMListPickerDataView.Model.Account.init(from:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3378);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A742622C();
  sub_1A7574190();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for REMAccount_Codable();
    char v13 = 0;
    sub_1A74267A8(qword_1EB7035E0, (void (*)(uint64_t))type metadata accessor for REMAccount_Codable);
    sub_1A7573A50();
    uint64_t v9 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3360);
    char v13 = 1;
    sub_1A74263D0(&qword_1E96F3380, &qword_1E96F3360, (void (*)(void))sub_1A74262D4);
    id v10 = v9;
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v11 = v14;
    *a2 = v10;
    a2[1] = v11;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
}

void sub_1A742466C(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_1A7424684(void *a1)
{
  return REMListPickerDataView.Model.Account.encode(to:)(a1);
}

uint64_t REMListPickerDataView.Model.accounts.getter()
{
  return swift_bridgeObjectRetain();
}

ReminderKitInternal::REMListPickerDataView::Model __swiftcall REMListPickerDataView.Model.init(accounts:)(ReminderKitInternal::REMListPickerDataView::Model accounts)
{
  v1->accounts._rawValue = accounts.accounts._rawValue;
  return accounts;
}

uint64_t sub_1A74246AC()
{
  return 0x73746E756F636361;
}

uint64_t sub_1A74246C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73746E756F636361 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A742475C(uint64_t a1)
{
  unint64_t v2 = sub_1A7426328();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7424798(uint64_t a1)
{
  unint64_t v2 = sub_1A7426328();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMListPickerDataView.Model.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3390);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7426328();
  sub_1A75741B0();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F33A0);
  sub_1A74263D0(&qword_1E96F33A8, &qword_1E96F33A0, (void (*)(void))sub_1A742637C);
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMListPickerDataView.Model.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F33B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7426328();
  sub_1A7574190();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F33A0);
    sub_1A74263D0(&qword_1E96F33C0, &qword_1E96F33A0, (void (*)(void))sub_1A742643C);
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A7424B0C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMListPickerDataView.Model.init(from:)(a1, a2);
}

uint64_t sub_1A7424B24(void *a1)
{
  return REMListPickerDataView.Model.encode(to:)(a1);
}

uint64_t REMListPickerDataView.Result.model.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

void *REMListPickerDataView.Result.latestFetchResultToken.getter()
{
  unint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

void *REMListPickerDataView.Result.init(model:latestFetchResultToken:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

void static REMListPickerDataView.fetch(store:pickerMode:shouldIncludeCustomSmartLists:diffingAgainst:)(void **a1@<X1>, char a2@<W2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = *a1;
  id v9 = objc_allocWithZone((Class)type metadata accessor for REMListPickerDataView.Invocation());
  sub_1A73765B8(v8);
  id v10 = objc_msgSend(v9, sel_initWithFetchResultTokenToDiffAgainst_, a3);
  sub_1A72FB6E0((uint64_t)v10, (uint64_t)v8, a2, v12);

  sub_1A73765C8(v8);
  if (!v4)
  {
    uint64_t v11 = v12[1];
    *a4 = v12[0];
    a4[1] = v11;
  }
}

id REMListPickerDataView.Invocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

uint64_t static REMListPickerDataView.Invocation.supportsSecureCoding.getter()
{
  return 1;
}

id REMListPickerDataView.Invocation.Parameters.pickerMode.getter@<X0>(void **a1@<X8>)
{
  id v2 = *v1;
  *a1 = *v1;
  return sub_1A73765B8(v2);
}

uint64_t REMListPickerDataView.Invocation.Parameters.shouldIncludeCustomSmartLists.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1A7424C9C()
{
  if (*v0) {
    return 0xD00000000000001DLL;
  }
  else {
    return 0x6F4D72656B636970;
  }
}

uint64_t sub_1A7424CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7427E2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A7424D08(uint64_t a1)
{
  unint64_t v2 = sub_1A74264B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7424D44(uint64_t a1)
{
  unint64_t v2 = sub_1A74264B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMListPickerDataView.Invocation.Parameters.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F33D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  void v10[2] = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74264B4();
  sub_1A75741B0();
  uint64_t v13 = v8;
  char v12 = 0;
  sub_1A7426508();
  sub_1A7573B60();
  if (!v2)
  {
    char v11 = 1;
    sub_1A7573B20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void REMListPickerDataView.Invocation.Parameters.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F33E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74264B4();
  sub_1A7574190();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11[15] = 0;
    sub_1A742655C();
    sub_1A7573A50();
    id v9 = v12;
    v11[14] = 1;
    sub_1A73765B8(v12);
    char v10 = sub_1A7573A10();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v10 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1A73765C8(v9);
  }
}

void sub_1A74250E8(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1A7425100(void *a1)
{
  return REMListPickerDataView.Invocation.Parameters.encode(to:)(a1);
}

uint64_t REMListPickerDataView.Invocation.Result.model.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

ReminderKitInternal::REMListPickerDataView::Invocation::Result __swiftcall REMListPickerDataView.Invocation.Result.init(model:)(ReminderKitInternal::REMListPickerDataView::Invocation::Result model)
{
  *unint64_t v1 = *(void *)model.model.accounts._rawValue;
  return model;
}

uint64_t sub_1A7425130()
{
  return 0x6C65646F6DLL;
}

uint64_t sub_1A7425144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A74251D4(uint64_t a1)
{
  unint64_t v2 = sub_1A74265B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7425210(uint64_t a1)
{
  unint64_t v2 = sub_1A74265B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMListPickerDataView.Invocation.Result.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F33F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74265B0();
  sub_1A75741B0();
  v9[1] = v7;
  sub_1A7426604();
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMListPickerDataView.Invocation.Result.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3410);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74265B0();
  sub_1A7574190();
  if (!v2)
  {
    sub_1A7426658();
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A74254FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMListPickerDataView.Invocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A7425514(void *a1)
{
  return REMListPickerDataView.Invocation.Result.encode(to:)(a1);
}

id REMListPickerDataView.Invocation.init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMListPickerDataView.Invocation.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMListPickerDataView.Invocation.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id REMListPickerDataView.Invocation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t REMListPickerDataView.deinit()
{
  return v0;
}

uint64_t REMListPickerDataView.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::CodingKeys_optional __swiftcall REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  objc_super v2 = v1;
  uint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *objc_super v2 = v5;
  return result;
}

ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::CodingKeys_optional __swiftcall REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  objc_super v2 = v1;
  uint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  if (v3)
  {
    if (v3 == 1) {
      char v5 = 1;
    }
    else {
      char v5 = 2;
    }
  }
  else
  {
    char v5 = 0;
  }
  *objc_super v2 = v5;
  return result;
}

ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::CodingKeys_optional __swiftcall REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  *unint64_t v1 = 2;
  return (ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::CodingKeys_optional)intValue;
}

uint64_t REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0x64616F6C796170;
  }
  else {
    return 0x54746E65746E6F63;
  }
}

uint64_t REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys.stringValue.getter()
{
  if (*v0) {
    return 0x64616F6C796170;
  }
  else {
    return 0x54746E65746E6F63;
  }
}

uint64_t sub_1A742586C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A75443A4(*a1, *a2);
}

uint64_t sub_1A7425878()
{
  return sub_1A7574110();
}

uint64_t sub_1A7425904()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A742597C()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::CodingKeys_optional sub_1A7425A04(Swift::String *a1)
{
  return REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys.init(rawValue:)(*a1);
}

void sub_1A7425A10(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x54746E65746E6F63;
  if (*v1) {
    uint64_t v2 = 0x64616F6C796170;
  }
  unint64_t v3 = 0xEB00000000657079;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A7425A58()
{
  if (*v0) {
    return 0x64616F6C796170;
  }
  else {
    return 0x54746E65746E6F63;
  }
}

uint64_t sub_1A7425AA0(uint64_t a1)
{
  unint64_t v2 = sub_1A74266AC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7425ADC(uint64_t a1)
{
  unint64_t v2 = sub_1A74266AC();

  return MEMORY[0x1F41862B0](a1, v2);
}

ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::ContentType_optional __swiftcall REMListPickerDataView.Model.ListOrCustomSmartList.ContentType.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *unint64_t v1 = v2;
  return (ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::ContentType_optional)rawValue;
}

uint64_t REMListPickerDataView.Model.ListOrCustomSmartList.ContentType.rawValue.getter()
{
  return *v0;
}

uint64_t sub_1A7425B3C()
{
  return sub_1A75729E0();
}

uint64_t sub_1A7425B9C()
{
  return sub_1A7572990();
}

uint64_t REMListPickerDataView.Model.ListOrCustomSmartList.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3420);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74266AC();
  sub_1A7574190();
  if (!v2)
  {
    char v13 = 0;
    sub_1A7426700();
    sub_1A7573A50();
    char v10 = (void (**)(char *, uint64_t))(v6 + 8);
    if (v12)
    {
      type metadata accessor for REMSmartList_Codable();
      char v13 = 1;
      sub_1A74267A8(&qword_1EB703698, (void (*)(uint64_t))type metadata accessor for REMSmartList_Codable);
      sub_1A7573A50();
      (*v10)(v8, v5);
      *a2 = v12 | 0x8000000000000000;
    }
    else
    {
      type metadata accessor for REMList_Codable();
      char v13 = 1;
      sub_1A74267A8(&qword_1EB705890, (void (*)(uint64_t))type metadata accessor for REMList_Codable);
      sub_1A7573A50();
      (*v10)(v8, v5);
      *a2 = v12;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void REMListPickerDataView.Model.ListOrCustomSmartList.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3438);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = (unint64_t)*v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74266AC();
  sub_1A75741B0();
  if ((v8 & 0x8000000000000000) != 0)
  {
    LOBYTE(v13) = 1;
    char v14 = 0;
    sub_1A7426754();
    id v9 = (id)(v8 & 0x7FFFFFFFFFFFFFFFLL);
    sub_1A7573B60();
    if (!v2)
    {
      id v13 = v9;
      char v14 = 1;
      type metadata accessor for REMSmartList_Codable();
      char v10 = &qword_1EB703F48;
      uint64_t v11 = type metadata accessor for REMSmartList_Codable;
      goto LABEL_6;
    }
  }
  else
  {
    LOBYTE(v13) = 0;
    char v14 = 0;
    sub_1A7426754();
    id v9 = (id)v8;
    sub_1A7573B60();
    if (!v2)
    {
      id v13 = v9;
      char v14 = 1;
      type metadata accessor for REMList_Codable();
      char v10 = &qword_1EB705888;
      uint64_t v11 = type metadata accessor for REMList_Codable;
LABEL_6:
      sub_1A74267A8(v10, (void (*)(uint64_t))v11);
      sub_1A7573B60();
    }
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A7426100@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return REMListPickerDataView.Model.ListOrCustomSmartList.init(from:)(a1, a2);
}

void sub_1A7426118(void *a1)
{
}

uint64_t REMListPickerDataView.Model.Account.allREMLists.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v2; ++i)
    {
      unint64_t v4 = *(void *)(v1 + 8 * i + 32);
      if ((v4 & 0x8000000000000000) == 0)
      {
        id v5 = (id)v4;
        MEMORY[0x1AD0CABF0]();
        if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1A7572A60();
        }
        sub_1A7572AB0();
        sub_1A7572A30();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = v8;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1A742622C()
{
  unint64_t result = qword_1E96F3358;
  if (!qword_1E96F3358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3358);
  }
  return result;
}

unint64_t sub_1A7426280()
{
  unint64_t result = qword_1E96F3370;
  if (!qword_1E96F3370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3370);
  }
  return result;
}

unint64_t sub_1A74262D4()
{
  unint64_t result = qword_1E96F3388;
  if (!qword_1E96F3388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3388);
  }
  return result;
}

unint64_t sub_1A7426328()
{
  unint64_t result = qword_1E96F3398;
  if (!qword_1E96F3398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3398);
  }
  return result;
}

unint64_t sub_1A742637C()
{
  unint64_t result = qword_1E96F33B0;
  if (!qword_1E96F33B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F33B0);
  }
  return result;
}

uint64_t sub_1A74263D0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A742643C()
{
  unint64_t result = qword_1E96F33C8;
  if (!qword_1E96F33C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F33C8);
  }
  return result;
}

uint64_t type metadata accessor for REMListPickerDataView.Invocation()
{
  return self;
}

unint64_t sub_1A74264B4()
{
  unint64_t result = qword_1E96F33D8;
  if (!qword_1E96F33D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F33D8);
  }
  return result;
}

unint64_t sub_1A7426508()
{
  unint64_t result = qword_1E96F33E0;
  if (!qword_1E96F33E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F33E0);
  }
  return result;
}

unint64_t sub_1A742655C()
{
  unint64_t result = qword_1E96F33F0;
  if (!qword_1E96F33F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F33F0);
  }
  return result;
}

unint64_t sub_1A74265B0()
{
  unint64_t result = qword_1E96F3400;
  if (!qword_1E96F3400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3400);
  }
  return result;
}

unint64_t sub_1A7426604()
{
  unint64_t result = qword_1E96F3408;
  if (!qword_1E96F3408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3408);
  }
  return result;
}

unint64_t sub_1A7426658()
{
  unint64_t result = qword_1E96F3418;
  if (!qword_1E96F3418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3418);
  }
  return result;
}

unint64_t sub_1A74266AC()
{
  unint64_t result = qword_1E96F3428;
  if (!qword_1E96F3428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3428);
  }
  return result;
}

unint64_t sub_1A7426700()
{
  unint64_t result = qword_1E96F3430;
  if (!qword_1E96F3430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3430);
  }
  return result;
}

unint64_t sub_1A7426754()
{
  unint64_t result = qword_1E96F3440;
  if (!qword_1E96F3440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3440);
  }
  return result;
}

uint64_t sub_1A74267A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A74267F4()
{
  unint64_t result = qword_1E96F3448;
  if (!qword_1E96F3448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3448);
  }
  return result;
}

unint64_t sub_1A7426854()
{
  unint64_t result = qword_1E96F3450;
  if (!qword_1E96F3450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3450);
  }
  return result;
}

unint64_t sub_1A74268AC()
{
  unint64_t result = qword_1E96F3458;
  if (!qword_1E96F3458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3458);
  }
  return result;
}

unint64_t sub_1A7426904()
{
  unint64_t result = qword_1E96F3460;
  if (!qword_1E96F3460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3460);
  }
  return result;
}

unint64_t sub_1A742695C()
{
  unint64_t result = qword_1E96F3468;
  if (!qword_1E96F3468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3468);
  }
  return result;
}

unint64_t sub_1A74269B4()
{
  unint64_t result = qword_1E96F3470;
  if (!qword_1E96F3470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3470);
  }
  return result;
}

uint64_t type metadata accessor for REMListPickerDataView()
{
  return self;
}

uint64_t method lookup function for REMListPickerDataView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMListPickerDataView);
}

uint64_t getEnumTagSinglePayload for REMListPickerDataView.PickerMode(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for REMListPickerDataView.PickerMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.PickerMode()
{
  return &type metadata for REMListPickerDataView.PickerMode;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Model()
{
  return &type metadata for REMListPickerDataView.Model;
}

void *initializeBufferWithCopyOfBuffer for REMListPickerDataView.Model.ListOrCustomSmartList(void *a1, void *a2)
{
  uint64_t v3 = (void *)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void destroy for REMListPickerDataView.Model.ListOrCustomSmartList(void *a1)
{
}

uint64_t *assignWithCopy for REMListPickerDataView.Model.ListOrCustomSmartList(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = (void *)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v4 = *a1;
  *a1 = *a2;
  unsigned int v5 = (void *)(v4 & 0x7FFFFFFFFFFFFFFFLL);
  id v6 = v3;

  return a1;
}

uint64_t *assignWithTake for REMListPickerDataView.Model.ListOrCustomSmartList(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for REMListPickerDataView.Model.ListOrCustomSmartList(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for REMListPickerDataView.Model.ListOrCustomSmartList(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)unint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A7426C78(void *a1)
{
  return *a1 >> 63;
}

void *sub_1A7426C84(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1A7426C94(uint64_t *result, uint64_t a2)
{
  *unint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Model.ListOrCustomSmartList()
{
  return &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList;
}

void *initializeBufferWithCopyOfBuffer for REMAccountSnapshotSummary(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for REMAccountSnapshotSummary(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for REMAccountSnapshotSummary(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for REMAccountSnapshotSummary(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Model.Account()
{
  return &type metadata for REMListPickerDataView.Model.Account;
}

void *initializeBufferWithCopyOfBuffer for REMListPickerDataView.Result(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

void *assignWithCopy for REMListPickerDataView.Result(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a1[1];
  id v5 = (void *)a2[1];
  a1[1] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for REMListPickerDataView.Result(uint64_t a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Result()
{
  return &type metadata for REMListPickerDataView.Result;
}

uint64_t initializeBufferWithCopyOfBuffer for REMListPickerDataView.Invocation.Parameters(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  if (*(void *)a2 >= 2uLL) {
    id v5 = v4;
  }
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

void destroy for REMListPickerDataView.Invocation.Parameters(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 2) {
}
  }

uint64_t assignWithCopy for REMListPickerDataView.Invocation.Parameters(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  id v5 = *(void **)a2;
  if (*(void *)a1 >= 2uLL)
  {
    if ((unint64_t)v5 >= 2)
    {
      *(void *)a1 = v5;
      id v7 = v5;

      goto LABEL_8;
    }

    id v5 = *(void **)a2;
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 2)
  {
LABEL_6:
    *(void *)a1 = v5;
    goto LABEL_8;
  }
  *(void *)a1 = v5;
  id v6 = v5;
LABEL_8:
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for REMListPickerDataView.Invocation.Parameters(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  unint64_t v5 = *(void *)a2;
  if (*(void *)a1 >= 2uLL)
  {
    if (v5 >= 2)
    {
      *(void *)a1 = v5;

      goto LABEL_6;
    }
  }
  *(void *)a1 = v5;
LABEL_6:
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMListPickerDataView.Invocation.Parameters(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *((unsigned char *)a1 + 9)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 2;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMListPickerDataView.Invocation.Parameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Invocation.Parameters()
{
  return &type metadata for REMListPickerDataView.Invocation.Parameters;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Invocation.Result()
{
  return &type metadata for REMListPickerDataView.Invocation.Result;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys()
{
  return &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Model.ListOrCustomSmartList.ContentType()
{
  return &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList.ContentType;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Invocation.Result.CodingKeys()
{
  return &type metadata for REMListPickerDataView.Invocation.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Invocation.Parameters.CodingKeys()
{
  return &type metadata for REMListPickerDataView.Invocation.Parameters.CodingKeys;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Model.CodingKeys()
{
  return &type metadata for REMListPickerDataView.Model.CodingKeys;
}

unsigned char *_s19ReminderKitInternal21REMListPickerDataViewC5ModelV21ListOrCustomSmartListO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74271F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Model.Account.CodingKeys()
{
  return &type metadata for REMListPickerDataView.Model.Account.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for REMListPickerDataView.PickerMode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74272F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.PickerMode.CodingKeys()
{
  return &type metadata for REMListPickerDataView.PickerMode.CodingKeys;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.PickerMode.AllAccountsCodingKeys()
{
  return &type metadata for REMListPickerDataView.PickerMode.AllAccountsCodingKeys;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.PickerMode.CloudKitOnlyAccountsCodingKeys()
{
  return &type metadata for REMListPickerDataView.PickerMode.CloudKitOnlyAccountsCodingKeys;
}

unsigned char *_s19ReminderKitInternal21REMListPickerDataViewC10InvocationC6ResultV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A74273ECLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.PickerMode.SpecificAccountCodingKeys()
{
  return &type metadata for REMListPickerDataView.PickerMode.SpecificAccountCodingKeys;
}

unint64_t sub_1A7427428()
{
  unint64_t result = qword_1E96F3478;
  if (!qword_1E96F3478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3478);
  }
  return result;
}

unint64_t sub_1A7427480()
{
  unint64_t result = qword_1E96F3480;
  if (!qword_1E96F3480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3480);
  }
  return result;
}

unint64_t sub_1A74274D8()
{
  unint64_t result = qword_1E96F3488;
  if (!qword_1E96F3488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3488);
  }
  return result;
}

unint64_t sub_1A7427530()
{
  unint64_t result = qword_1E96F3490;
  if (!qword_1E96F3490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3490);
  }
  return result;
}

unint64_t sub_1A7427588()
{
  unint64_t result = qword_1E96F3498;
  if (!qword_1E96F3498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3498);
  }
  return result;
}

unint64_t sub_1A74275E0()
{
  unint64_t result = qword_1E96F34A0;
  if (!qword_1E96F34A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F34A0);
  }
  return result;
}

unint64_t sub_1A7427638()
{
  unint64_t result = qword_1E96F34A8;
  if (!qword_1E96F34A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F34A8);
  }
  return result;
}

unint64_t sub_1A7427690()
{
  unint64_t result = qword_1E96F34B0;
  if (!qword_1E96F34B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F34B0);
  }
  return result;
}

unint64_t sub_1A74276E8()
{
  unint64_t result = qword_1E96F34B8;
  if (!qword_1E96F34B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F34B8);
  }
  return result;
}

unint64_t sub_1A7427740()
{
  unint64_t result = qword_1E96F34C0;
  if (!qword_1E96F34C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F34C0);
  }
  return result;
}

unint64_t sub_1A7427798()
{
  unint64_t result = qword_1E96F34C8;
  if (!qword_1E96F34C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F34C8);
  }
  return result;
}

unint64_t sub_1A74277F0()
{
  unint64_t result = qword_1E96F34D0;
  if (!qword_1E96F34D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F34D0);
  }
  return result;
}

unint64_t sub_1A7427848()
{
  unint64_t result = qword_1E96F34D8;
  if (!qword_1E96F34D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F34D8);
  }
  return result;
}

unint64_t sub_1A74278A0()
{
  unint64_t result = qword_1E96F34E0;
  if (!qword_1E96F34E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F34E0);
  }
  return result;
}

unint64_t sub_1A74278F8()
{
  unint64_t result = qword_1E96F34E8;
  if (!qword_1E96F34E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F34E8);
  }
  return result;
}

unint64_t sub_1A7427950()
{
  unint64_t result = qword_1E96F34F0;
  if (!qword_1E96F34F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F34F0);
  }
  return result;
}

unint64_t sub_1A74279A8()
{
  unint64_t result = qword_1E96F34F8;
  if (!qword_1E96F34F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F34F8);
  }
  return result;
}

unint64_t sub_1A7427A00()
{
  unint64_t result = qword_1E96F3500;
  if (!qword_1E96F3500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3500);
  }
  return result;
}

unint64_t sub_1A7427A58()
{
  unint64_t result = qword_1E96F3508;
  if (!qword_1E96F3508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3508);
  }
  return result;
}

unint64_t sub_1A7427AB0()
{
  unint64_t result = qword_1E96F3510;
  if (!qword_1E96F3510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3510);
  }
  return result;
}

unint64_t sub_1A7427B08()
{
  unint64_t result = qword_1E96F3518;
  if (!qword_1E96F3518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3518);
  }
  return result;
}

unint64_t sub_1A7427B60()
{
  unint64_t result = qword_1E96F3520;
  if (!qword_1E96F3520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3520);
  }
  return result;
}

uint64_t sub_1A7427BB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x756F6363416C6C61 && a2 == 0xEB0000000073746ELL;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A75A25B0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6369666963657073 && a2 == 0xEF746E756F636341)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A7427D40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737473696CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A7427E2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F4D72656B636970 && a2 == 0xEA00000000006564;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001A75A25D0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1A7427F28()
{
  unint64_t result = qword_1E96F3528;
  if (!qword_1E96F3528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3528);
  }
  return result;
}

uint64_t OrderedSet.index(of:)(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1AD0CA6D0](&v4, a1, *(void *)(v2 + 8), *(void *)(a2 + 16), MEMORY[0x1E4FBB550], *(void *)(a2 + 24));
  return v4;
}

void OrderedSet.count.getter()
{
}

uint64_t OrderedSet.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A7572A80();
  uint64_t v10 = sub_1A7572390();
  uint64_t v20 = v9;
  uint64_t v21 = v10;
  if (MEMORY[0x1AD0CAD00](a1, a2))
  {
    uint64_t v17 = v7;
    unint64_t v18 = a3;
    uint64_t v11 = 0;
    while (1)
    {
      char v12 = sub_1A7572AA0();
      sub_1A7572A50();
      if (v12)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, a1+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v11, a2);
        uint64_t v13 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t result = sub_1A75735F0();
        if (v17 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v19 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v6 + 16))(v8, &v19, a2);
        swift_unknownObjectRelease();
        uint64_t v13 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_10:
          __break(1u);
LABEL_11:
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v9 = v20;
          uint64_t v10 = v21;
          a3 = v18;
          goto LABEL_13;
        }
      }
      uint64_t v14 = type metadata accessor for OrderedSet();
      OrderedSet.append(_:)((uint64_t)v8, v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
      ++v11;
      if (v13 == MEMORY[0x1AD0CAD00](a1, a2)) {
        goto LABEL_11;
      }
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
LABEL_13:
  *a3 = v9;
  a3[1] = v10;
  return result;
}

uint64_t OrderedSet.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1A7572A80();
  uint64_t result = sub_1A7572390();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t OrderedSet.append(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  MEMORY[0x1AD0CA6D0](&v14, v6, v2[1], v4, MEMORY[0x1E4FBB550], *(void *)(v10 + 24));
  uint64_t v11 = v15;
  if (v15 == 1)
  {
    char v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v12(v8, a1, v4);
    uint64_t v14 = MEMORY[0x1AD0CACC0](v9, v4);
    unsigned __int8 v15 = 0;
    sub_1A75724A0();
    sub_1A75724E0();
    v12(v8, a1, v4);
    sub_1A7572B30();
    sub_1A7572AE0();
  }
  return v11;
}

uint64_t OrderedSet.isEmpty.getter()
{
  return sub_1A7572E30() & 1;
}

uint64_t OrderedSet.contents.getter()
{
  sub_1A7429358();

  return swift_bridgeObjectRetain();
}

BOOL OrderedSet.contains(_:)(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1AD0CA6D0](&v4, a1, *(void *)(v2 + 8), *(void *)(a2 + 16), MEMORY[0x1E4FBB550], *(void *)(a2 + 24));
  return (v5 & 1) == 0;
}

uint64_t OrderedSet.removeFirst()(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v37 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v38 = sub_1A7573210();
  uint64_t v36 = *(uint64_t (***)(char *, char *, uint64_t))(v38 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v38);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v28 - v9;
  sub_1A7572B30();
  swift_getWitnessTable();
  sub_1A7572EC0();
  uint64_t v39 = v2;
  uint64_t v35 = sub_1A75724A0();
  sub_1A7572410();
  uint64_t v11 = *(void *)(v1 + 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v30 = v11 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v32 = v3 + 16;
  uint64_t v33 = v3;
  uint64_t v16 = (void (**)(char *, char *, uint64_t))(v36 + 4);
  uint64_t v36 = (uint64_t (**)(char *, char *, uint64_t))(v3 + 32);
  int64_t v31 = (unint64_t)(v13 + 63) >> 6;
  int64_t v29 = v31 - 1;
  uint64_t v34 = v11;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v15) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  unint64_t v20 = v19 | (v18 << 6);
LABEL_5:
  uint64_t v21 = v34;
  (*(void (**)(char *, unint64_t, uint64_t))(v33 + 16))(v8, *(void *)(v34 + 48) + *(void *)(v33 + 72) * v20, v39);
  uint64_t v22 = 0;
  *(void *)&v8[*(int *)(TupleTypeMetadata2 + 48)] = *(void *)(*(void *)(v21 + 56) + 8 * v20);
  while (1)
  {
LABEL_18:
    uint64_t v26 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v8, v22, 1, TupleTypeMetadata2);
    (*v16)(v10, v8, v38);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v10, 1, TupleTypeMetadata2) == 1) {
      return swift_release();
    }
    uint64_t v27 = *(void *)&v10[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t result = (*v36)(v37, v10, v39);
    if (__OFSUB__(v27, 1)) {
      break;
    }
    uint64_t v40 = v27 - 1;
    char v41 = 0;
    uint64_t result = sub_1A75724E0();
    if (v15) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      goto LABEL_29;
    }
    if (v23 >= v31) {
      goto LABEL_17;
    }
    unint64_t v24 = *(void *)(v30 + 8 * v23);
    if (v24) {
      goto LABEL_9;
    }
    v18 += 2;
    if (v23 + 1 >= v31)
    {
      unint64_t v15 = 0;
      uint64_t v22 = 1;
      int64_t v18 = v23;
    }
    else
    {
      unint64_t v24 = *(void *)(v30 + 8 * v18);
      if (v24)
      {
        ++v23;
        goto LABEL_9;
      }
      int64_t v25 = v23 + 2;
      if (v23 + 2 < v31)
      {
        unint64_t v24 = *(void *)(v30 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v23 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_30;
            }
            if (v23 >= v31)
            {
              unint64_t v15 = 0;
              uint64_t v22 = 1;
              int64_t v18 = v29;
              goto LABEL_18;
            }
            unint64_t v24 = *(void *)(v30 + 8 * v23);
            ++v25;
            if (v24) {
              goto LABEL_9;
            }
          }
        }
        v23 += 2;
LABEL_9:
        unint64_t v15 = (v24 - 1) & v24;
        unint64_t v20 = __clz(__rbit64(v24)) + (v23 << 6);
        int64_t v18 = v23;
        goto LABEL_5;
      }
LABEL_17:
      unint64_t v15 = 0;
      uint64_t v22 = 1;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t OrderedSet.removeLast()()
{
  return sub_1A7572410();
}

Swift::Void __swiftcall OrderedSet.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
}

uint64_t sub_1A7428A90()
{
  return == infix<A>(_:_:)();
}

uint64_t == infix<A>(_:_:)()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v0 = sub_1A7572B50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t OrderedSet.startIndex.getter()
{
  return 0;
}

uint64_t sub_1A7428B14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = OrderedSet.endIndex.getter(a1);
  *a2 = result;
  return result;
}

uint64_t OrderedSet.endIndex.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = MEMORY[0x1AD0CAD00](v2, v1);
  swift_bridgeObjectRelease();
  return v3;
}

void (*sub_1A7428B80(void *a1, uint64_t *a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_1A7428BF0(v6, *a2, a3);
  return sub_1A72D82C4;
}

void (*sub_1A7428BF0(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v3 = *(void *)(a3 + 16);
  *a1 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  a1[1] = v4;
  a1[2] = malloc(*(void *)(v4 + 64));
  OrderedSet.subscript.getter();
  return sub_1A7428CA8;
}

void sub_1A7428CA8(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

uint64_t sub_1A7428CF8()
{
  swift_getWitnessTable();

  return sub_1A7572D70();
}

uint64_t sub_1A7428D78(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842A8](a1, a2, WitnessTable, v5);
}

void *sub_1A7428DE8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A7429010(a1, a2, a3, MEMORY[0x1E4FBB610]);
}

uint64_t sub_1A7428E00(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1A7428E54()
{
  swift_getWitnessTable();
  uint64_t v0 = sub_1A749CA68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

double OrderedSet.init(arrayLiteral:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  OrderedSet.init(_:)(a1, a2, (uint64_t *)&v5);
  double result = *(double *)&v5;
  *a3 = v5;
  return result;
}

double sub_1A7428EFC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  return OrderedSet.init(arrayLiteral:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t OrderedSet.subscript.getter()
{
  swift_bridgeObjectRetain();
  sub_1A7572B70();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7428F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41842B8](a1, a2, a3, a4, MEMORY[0x1E4FBB590]);
}

uint64_t sub_1A7428F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41842C8](a1, a2, a3, a4, MEMORY[0x1E4FBB590]);
}

uint64_t sub_1A7428F88(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B0](a1, a2, WitnessTable, v5);
}

void *sub_1A7428FF8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A7429010(a1, a2, a3, MEMORY[0x1E4FBB618]);
}

void *sub_1A7429010(void *a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, void))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  double result = a4(&v9, a1, a2, WitnessTable, MEMORY[0x1E4FBB590]);
  *a1 = v9;
  return result;
}

uint64_t sub_1A7429088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A742910C()
{
  swift_getWitnessTable();

  return sub_1A7572D30();
}

uint64_t sub_1A7429190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t OrderedSet.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1A7572B40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A75724C0();

  return swift_bridgeObjectRelease();
}

uint64_t OrderedSet.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t sub_1A74292FC()
{
  return sub_1A7574110();
}

uint64_t type metadata accessor for OrderedSet()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A7429358()
{
  return *(void *)v0;
}

uint64_t sub_1A7429360()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A742937C()
{
  return sub_1A74294EC((unint64_t *)&qword_1EB703C80);
}

uint64_t sub_1A74293B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A74293CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A74293E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A7429404()
{
  return sub_1A74294EC(&qword_1E96F3530);
}

uint64_t sub_1A7429438()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A742949C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A74294B8()
{
  return sub_1A74294EC(qword_1E96F3538);
}

uint64_t sub_1A74294EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB703C78);
    sub_1A72E9340();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A742955C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A74295C0()
{
  return swift_getWitnessTable();
}

double static REMSuggestedAttributesHarvester.harvestedAttributesResponse(for:in:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  long long v4 = *(_OWORD *)(a1 + 80);
  v28[4] = *(_OWORD *)(a1 + 64);
  v29[0] = v4;
  *(_DWORD *)((char *)v29 + 15) = *(_DWORD *)(a1 + 95);
  long long v5 = *(_OWORD *)(a1 + 16);
  v28[0] = *(_OWORD *)a1;
  v28[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  v28[2] = *(_OWORD *)(a1 + 32);
  v28[3] = v6;
  type metadata accessor for REMSuggestedAttributesHarvester.Invocation();
  id v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A7429764((uint64_t)v28);
  sub_1A72FC264((uint64_t)v7, v28, (uint64_t)v26);

  sub_1A74297B4((uint64_t)v28);
  if (!v2)
  {
    *(_OWORD *)unint64_t v24 = v26[10];
    *(_OWORD *)&v24[16] = v26[11];
    uint64_t v25 = v27;
    long long v20 = v26[6];
    long long v21 = v26[7];
    long long v22 = v26[8];
    long long v23 = v26[9];
    long long v16 = v26[2];
    long long v17 = v26[3];
    long long v18 = v26[4];
    long long v19 = v26[5];
    long long v14 = v26[0];
    long long v15 = v26[1];
    sub_1A73173B0((uint64_t)&v14, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A7317270);
    sub_1A7429804((uint64_t)&v14);
    long long v9 = v23;
    a2[8] = v22;
    a2[9] = v9;
    a2[10] = *(_OWORD *)v24;
    *(_OWORD *)((char *)a2 + 169) = *(_OWORD *)&v24[9];
    long long v10 = v19;
    a2[4] = v18;
    a2[5] = v10;
    long long v11 = v21;
    a2[6] = v20;
    a2[7] = v11;
    long long v12 = v15;
    *a2 = v14;
    a2[1] = v12;
    double result = *(double *)&v16;
    long long v13 = v17;
    a2[2] = v16;
    a2[3] = v13;
  }
  return result;
}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester.Invocation()
{
  return self;
}

uint64_t sub_1A7429764(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v3 = v2;
  return a1;
}

uint64_t sub_1A74297B4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A7429804(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 104);
  uint64_t v8 = *(void *)(a1 + 112);
  char v9 = *(unsigned char *)(a1 + 120);
  uint64_t v10 = *(void *)(a1 + 128);
  uint64_t v17 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 136);
  uint64_t v15 = *(void *)(a1 + 160);
  uint64_t v16 = *(void *)(a1 + 152);
  uint64_t v13 = *(void *)(a1 + 176);
  uint64_t v14 = *(void *)(a1 + 168);
  char v12 = *(unsigned char *)(a1 + 184);
  long long v19 = *(void **)(a1 + 192);
  sub_1A73172BC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  sub_1A73172BC(v2, v3, v4, v5, v6, v7, v8, v9);
  sub_1A73172BC(v10, v18, v17, v16, v15, v14, v13, v12);

  return a1;
}

void static REMSuggestedAttributesHarvester.mentionsExtractionResponse(for:in:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionInvocation();
  id v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A7429AD8(a1, (uint64_t)v7);
  sub_1A72FCDC8((uint64_t)v8, (uint64_t)v7, &v21);

  sub_1A7429B3C((uint64_t)v7);
  if (!v2)
  {
    uint64_t v9 = v21;
    uint64_t v10 = v22;
    uint64_t v11 = v23;
    uint64_t v12 = v24;
    uint64_t v13 = v25;
    uint64_t v14 = v26;
    uint64_t v19 = v27;
    uint64_t v20 = v21;
    char v15 = v28;
    id v30 = v29;
    sub_1A7317270(v21, v22, v23, v24, v25, v26, v27, v28);
    uint64_t v16 = v9;
    uint64_t v17 = v19;
    sub_1A73172BC(v16, v10, v11, v12, v13, v14, v19, v15);

    *(void *)a2 = v20;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v11;
    *(void *)(a2 + 24) = v12;
    *(void *)(a2 + 32) = v13;
    *(void *)(a2 + 40) = v14;
    *(void *)(a2 + 48) = v17;
    *(unsigned char *)(a2 + 56) = v15;
  }
}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest()
{
  uint64_t result = qword_1EB7051E0;
  if (!qword_1EB7051E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionInvocation()
{
  return self;
}

uint64_t sub_1A7429AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A7429B3C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static REMSuggestedAttributesHarvester.feedback(for:in:)(uint64_t a1, char a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)(a1 + 8);
  type metadata accessor for REMSuggestedAttributesHarvester.FeedbackInvocation();
  id v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A72FDA44((uint64_t)v6, v4, v8, v5);

  if (!v2)
  {
    a2 = v8[0];
  }
  return a2 & 1;
}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester.FeedbackInvocation()
{
  return self;
}

void static REMSuggestedAttributesHarvester.postSuggestionAnalytics(for:in:)(void **a1)
{
  uint64_t v2 = *a1;
  type metadata accessor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsInvocation();
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  swift_retain();
  sub_1A72FE5E8((uint64_t)v3, v2, v4);
  if (!v1)
  {

    id v3 = v5;
  }
  swift_release();
}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsInvocation()
{
  return self;
}

void static REMSuggestedAttributesHarvester.recordSuggestion(for:in:)(uint64_t a1)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 24);
  unsigned int v5 = *(unsigned __int16 *)(a1 + 16);
  type metadata accessor for REMSuggestedAttributesHarvester.RecordSuggestionInvocation();
  id v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  swift_bridgeObjectRetain();
  id v7 = v4;
  sub_1A72FF174((uint64_t)v6, v3, v2, v5, (uint64_t)v7, v8);
  if (!v1)
  {

    id v6 = v9;
  }

  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester.RecordSuggestionInvocation()
{
  return self;
}

id REMSuggestedAttributesHarvester.suggestedAttributesPerformer.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t REMSuggestedAttributesHarvester.__allocating_init(suggestedAttributesPerformer:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t REMSuggestedAttributesHarvester.init(suggestedAttributesPerformer:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t REMSuggestedAttributesHarvester.harvestAttributes(for:elector:)(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 80);
  long long v31 = *(_OWORD *)(a1 + 64);
  v32[0] = v4;
  *(_DWORD *)((char *)v32 + 15) = *(_DWORD *)(a1 + 95);
  long long v5 = *(_OWORD *)(a1 + 16);
  long long v27 = *(_OWORD *)a1;
  long long v28 = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  long long v29 = *(_OWORD *)(a1 + 32);
  long long v30 = v6;
  type metadata accessor for REMSuggestedAttributesHarvester.Invocation();
  id v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A7429764((uint64_t)&v27);
  sub_1A72FC264((uint64_t)v7, &v27, (uint64_t)v25);

  sub_1A74297B4((uint64_t)&v27);
  if (!v2)
  {
    *(_OWORD *)uint64_t v23 = v25[10];
    *(_OWORD *)&v23[16] = v25[11];
    uint64_t v24 = v26;
    long long v19 = v25[6];
    long long v20 = v25[7];
    long long v21 = v25[8];
    long long v22 = v25[9];
    long long v15 = v25[2];
    long long v16 = v25[3];
    long long v17 = v25[4];
    long long v18 = v25[5];
    long long v13 = v25[0];
    long long v14 = v25[1];
    sub_1A73173B0((uint64_t)&v13, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A7317270);
    sub_1A7429804((uint64_t)&v13);
    v11[4] = v31;
    v12[0] = v32[0];
    *(_DWORD *)((char *)v12 + 15) = *(_DWORD *)((char *)v32 + 15);
    v11[0] = v27;
    v11[1] = v28;
    void v11[2] = v29;
    _DWORD v11[3] = v30;
    v9[8] = v21;
    v9[9] = v22;
    v10[0] = *(_OWORD *)v23;
    *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)&v23[9];
    v9[4] = v17;
    void v9[5] = v18;
    v9[6] = v19;
    v9[7] = v20;
    v9[0] = v13;
    v9[1] = v14;
    void v9[2] = v15;
    v9[3] = v16;
    a2 = REMSuggestedAttributesElector.electionFor(request:response:)((uint64_t)v11, (uint64_t)v9);
    sub_1A73173B0((uint64_t)&v13, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A73172BC);
  }
  return a2;
}

uint64_t REMSuggestedAttributesHarvester.extractMentions(for:)(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest();
  MEMORY[0x1F4188790](v4 - 8);
  long long v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionInvocation();
  id v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A7429AD8(a1, (uint64_t)v6);
  sub_1A72FCDC8((uint64_t)v8, (uint64_t)v6, &v18);

  sub_1A7429B3C((uint64_t)v6);
  if (!v2)
  {
    uint64_t v7 = v18;
    uint64_t v9 = v19;
    uint64_t v10 = v20;
    uint64_t v11 = v21;
    uint64_t v12 = v22;
    uint64_t v13 = v23;
    uint64_t v14 = v24;
    char v15 = v25;
    id v27 = v26;
    sub_1A7317270(v18, v19, v20, v21, v22, v23, v24, v25);
    sub_1A73172BC(v7, v9, v10, v11, v12, v13, v14, v15);

    if (v15)
    {
      uint64_t v18 = v7;
      uint64_t v19 = v9;
      uint64_t v20 = v10;
      uint64_t v21 = v11;
      uint64_t v22 = v12;
      uint64_t v23 = v13;
      uint64_t v24 = v14;
      sub_1A7373908();
      swift_willThrowTypedImpl();
      sub_1A73172BC(v7, v9, v10, v11, v12, v13, v14, 1);
      return MEMORY[0x1E4FBC860];
    }
  }
  return v7;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> REMSuggestedAttributesHarvester.feedback(for:)(ReminderKitInternal::REMSuggestedAttributesHarvester::FeedbackRequest a1)
{
  uint64_t v3 = *(void **)a1.source.predictors._rawValue;
  uint64_t v4 = (void *)*((void *)a1.source.predictors._rawValue + 1);
  uint64_t v5 = *(void *)(v1 + 16);
  type metadata accessor for REMSuggestedAttributesHarvester.FeedbackInvocation();
  id v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A72FDA44((uint64_t)v6, v3, v8, v4);

  if (!v2)
  {
    LOBYTE(v5) = v8[0];
  }
  return v5 & 1;
}

void REMSuggestedAttributesHarvester.postSuggestionAnalytics(for:)(void **a1)
{
  uint64_t v2 = *a1;
  type metadata accessor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsInvocation();
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  swift_retain();
  sub_1A72FE5E8((uint64_t)v3, v2, v4);
  if (!v1)
  {

    id v3 = v5;
  }
  swift_release();
}

void REMSuggestedAttributesHarvester.recordSuggestion(for:)(uint64_t a1)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 24);
  unsigned int v5 = *(unsigned __int16 *)(a1 + 16);
  type metadata accessor for REMSuggestedAttributesHarvester.RecordSuggestionInvocation();
  id v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  swift_bridgeObjectRetain();
  id v7 = v4;
  sub_1A72FF174((uint64_t)v6, v3, v2, v5, (uint64_t)v7, v8);
  if (!v1)
  {

    id v6 = v9;
  }

  swift_bridgeObjectRelease();
}

uint64_t static REMSuggestedAttributesHarvester.Invocation.supportsSecureCoding.getter()
{
  return 1;
}

id REMSuggestedAttributesHarvester.Invocation.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMSuggestedAttributesHarvester.Invocation.init(coder:)(void *a1)
{
  id v3 = objc_msgSend(v1, sel_init);

  return v3;
}

id REMSuggestedAttributesHarvester.Invocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

uint64_t static REMSuggestedAttributesHarvester.MentionsExtractionInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t static REMSuggestedAttributesHarvester.FeedbackInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t static REMSuggestedAttributesHarvester.PostSuggestionAnalyticsInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t static REMSuggestedAttributesHarvester.RecordSuggestionInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMSuggestedAttributesHarvester.deinit()
{
  return v0;
}

uint64_t REMSuggestedAttributesHarvester.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_1A742A554(uint64_t a1, uint64_t a2)
{
  return REMSuggestedAttributesHarvester.harvestAttributes(for:elector:)(a1, a2);
}

uint64_t sub_1A742A578(uint64_t a1)
{
  return REMSuggestedAttributesHarvester.extractMentions(for:)(a1);
}

uint64_t sub_1A742A59C(uint64_t a1)
{
  id v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  uint64_t v5 = *(void *)(*(void *)v1 + 16);
  type metadata accessor for REMSuggestedAttributesHarvester.FeedbackInvocation();
  id v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A72FDA44((uint64_t)v6, v3, v8, v4);

  if (!v2)
  {
    LOBYTE(v5) = v8[0];
  }
  return v5 & 1;
}

void sub_1A742A638(void **a1)
{
}

void sub_1A742A65C(uint64_t a1)
{
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior::CodingKeys_optional __swiftcall REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior::CodingKeys_optional __swiftcall REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  if (v3)
  {
    if (v3 == 1) {
      char v5 = 1;
    }
    else {
      char v5 = 2;
    }
  }
  else
  {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior::CodingKeys_optional __swiftcall REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  *uint64_t v1 = 2;
  return (ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.allCases.getter()
{
  return &unk_1EFC91E48;
}

uint64_t REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0x6E656469666E6F63;
  }
  else {
    return 0x65766974616C6572;
  }
}

uint64_t REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.stringValue.getter()
{
  if (*v0) {
    return 0x6E656469666E6F63;
  }
  else {
    return 0x65766974616C6572;
  }
}

uint64_t sub_1A742A810(char *a1, char *a2)
{
  return sub_1A7541500(*a1, *a2);
}

uint64_t sub_1A742A81C()
{
  return sub_1A7574110();
}

uint64_t sub_1A742A8B0()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A742A930()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior::CodingKeys_optional sub_1A742A9C0(Swift::String *a1)
{
  return REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.init(rawValue:)(*a1);
}

void sub_1A742A9CC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x65766974616C6572;
  if (*v1) {
    uint64_t v2 = 0x6E656469666E6F63;
  }
  unint64_t v3 = 0xEF74726F70707553;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006563;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A742AA1C()
{
  if (*v0) {
    return 0x6E656469666E6F63;
  }
  else {
    return 0x65766974616C6572;
  }
}

void sub_1A742AA6C(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FC40;
}

uint64_t sub_1A742AA7C(uint64_t a1)
{
  unint64_t v2 = sub_1A742ACCC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A742AAB8(uint64_t a1)
{
  unint64_t v2 = sub_1A742ACCC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static REMSuggestedAttributesHarvester.Request.CoreBehavior.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesHarvester.Request.CoreBehavior.relativeSupport.getter()
{
  return *(void *)v0;
}

uint64_t REMSuggestedAttributesHarvester.Request.CoreBehavior.confidence.getter()
{
  return *(void *)(v0 + 16);
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior __swiftcall REMSuggestedAttributesHarvester.Request.CoreBehavior.init(relativeSupport:confidence:)(Swift::Double_optional relativeSupport, Swift::Double_optional confidence)
{
  *(void *)uint64_t v4 = *(void *)&relativeSupport.is_nil;
  *(unsigned char *)(v4 + 8) = confidence.is_nil;
  *(void *)(v4 + 16) = v2;
  *(unsigned char *)(v4 + 24) = v3 & 1;
  result.confidence.value = confidence.value;
  result.relativeSupport.value = relativeSupport.value;
  result.confidence.is_nil = confidence.is_nil;
  result.relativeSupport.is_nil = relativeSupport.is_nil;
  return result;
}

uint64_t REMSuggestedAttributesHarvester.Request.CoreBehavior.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703D18);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(void *)(v1 + 16);
  int v10 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A742ACCC();
  sub_1A75741B0();
  char v12 = 0;
  uint64_t v7 = v9[1];
  sub_1A7573AE0();
  if (!v7)
  {
    char v11 = 1;
    sub_1A7573AE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A742ACCC()
{
  unint64_t result = qword_1EB7052A8;
  if (!qword_1EB7052A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7052A8);
  }
  return result;
}

uint64_t REMSuggestedAttributesHarvester.Request.CoreBehavior.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7040A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A742ACCC();
  sub_1A7574190();
  if (!v2)
  {
    char v19 = 0;
    uint64_t v9 = sub_1A75739D0();
    char v11 = v10;
    char v18 = 1;
    uint64_t v13 = sub_1A75739D0();
    uint64_t v14 = v8;
    char v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v11 & 1;
    *(void *)(a2 + 16) = v13;
    *(unsigned char *)(a2 + 24) = v16 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A742AED8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesHarvester.Request.CoreBehavior.init(from:)(a1, a2);
}

uint64_t sub_1A742AEF0(void *a1)
{
  return REMSuggestedAttributesHarvester.Request.CoreBehavior.encode(to:)(a1);
}

uint64_t sub_1A742AF08()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys.init(stringValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys.init(intValue:)(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void *static REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys.allCases.getter()
{
  return &unk_1EFC91EE0;
}

uint64_t REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys.intValue.getter()
{
  return 0;
}

unint64_t REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys.rawValue.getter()
{
  return 0xD000000000000013;
}

unint64_t REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys.stringValue.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1A742B034()
{
  return sub_1A7574110();
}

uint64_t sub_1A742B08C()
{
  return sub_1A75726F0();
}

uint64_t sub_1A742B0A8()
{
  return sub_1A7574110();
}

uint64_t sub_1A742B0FC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A742B150(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000001A759E1C0;
}

unint64_t sub_1A742B170()
{
  return 0xD000000000000013;
}

uint64_t sub_1A742B18C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A742B1E4(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FC68;
}

uint64_t sub_1A742B1F4(uint64_t a1)
{
  unint64_t v2 = sub_1A742B3D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A742B230(uint64_t a1)
{
  unint64_t v2 = sub_1A742B3D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static REMSuggestedAttributesHarvester.Request.Embedding.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesHarvester.Request.Embedding.neighborsToConsider.getter()
{
  return *(void *)v0;
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::Embedding __swiftcall REMSuggestedAttributesHarvester.Request.Embedding.init(neighborsToConsider:)(ReminderKitInternal::REMSuggestedAttributesHarvester::Request::Embedding neighborsToConsider)
{
  *(void *)uint64_t v1 = neighborsToConsider.neighborsToConsider.value;
  *(unsigned char *)(v1 + 8) = neighborsToConsider.neighborsToConsider.is_nil;
  return neighborsToConsider;
}

uint64_t REMSuggestedAttributesHarvester.Request.Embedding.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703D20);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A742B3D0();
  sub_1A75741B0();
  sub_1A7573AF0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1A742B3D0()
{
  unint64_t result = qword_1EB7052C0;
  if (!qword_1EB7052C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7052C0);
  }
  return result;
}

uint64_t REMSuggestedAttributesHarvester.Request.Embedding.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7040A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A742B3D0();
  sub_1A7574190();
  if (!v2)
  {
    uint64_t v9 = sub_1A75739E0();
    char v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v11 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A742B59C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesHarvester.Request.Embedding.init(from:)(a1, a2);
}

uint64_t sub_1A742B5B4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703D20);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A742B3D0();
  sub_1A75741B0();
  sub_1A7573AF0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A742B6F0()
{
  return swift_getKeyPath();
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional __swiftcall REMSuggestedAttributesHarvester.Request.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 12;
  if (v3 < 0xC) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional __swiftcall REMSuggestedAttributesHarvester.Request.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  result.value = REMSuggestedAttributesHarvester.Request.CodingKeys.init(rawValue:)(stringValue).value;
  *uint64_t v2 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional __swiftcall REMSuggestedAttributesHarvester.Request.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  *uint64_t v1 = 12;
  return (ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributesHarvester.Request.CodingKeys.allCases.getter()
{
  return &unk_1EFC8FC10;
}

uint64_t REMSuggestedAttributesHarvester.Request.CodingKeys.intValue.getter()
{
  return 0;
}

unint64_t REMSuggestedAttributesHarvester.Request.CodingKeys.rawValue.getter()
{
  unint64_t result = 0x4F64656C62616E65;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
    case 7:
      unint64_t result = 0x7265646E696D6572;
      break;
    case 4:
      unint64_t result = 0x49746E756F636361;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0x6168654265726F63;
      break;
    case 9:
      unint64_t result = 0x6E69646465626D65;
      break;
    case 0xA:
    case 0xB:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t REMSuggestedAttributesHarvester.Request.CodingKeys.stringValue.getter()
{
  unint64_t result = 0x4F64656C62616E65;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
    case 7:
      unint64_t result = 0x7265646E696D6572;
      break;
    case 4:
      unint64_t result = 0x49746E756F636361;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0x6168654265726F63;
      break;
    case 9:
      unint64_t result = 0x6E69646465626D65;
      break;
    case 0xA:
    case 0xB:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A742BAC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A75415B8(*a1, *a2);
}

uint64_t sub_1A742BAD0()
{
  return sub_1A7574110();
}

uint64_t sub_1A742BB38()
{
  REMSuggestedAttributesHarvester.Request.CodingKeys.rawValue.getter();
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A742BB9C()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional sub_1A742BC00(Swift::String *a1)
{
  return REMSuggestedAttributesHarvester.Request.CodingKeys.init(rawValue:)(*a1);
}

unint64_t sub_1A742BC0C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = REMSuggestedAttributesHarvester.Request.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional sub_1A742BC38@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.value = REMSuggestedAttributesHarvester.Request.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A742BC70(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FC10;
}

uint64_t sub_1A742BC80(uint64_t a1)
{
  unint64_t v2 = sub_1A7430190();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A742BCBC(uint64_t a1)
{
  unint64_t v2 = sub_1A7430190();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesHarvester.Request.enabledOnmacOS.getter()
{
  return *v0;
}

uint64_t REMSuggestedAttributesHarvester.Request.enabledOniOS.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t REMSuggestedAttributesHarvester.Request.modelPipelineSwitcher.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesHarvester.Request.reminder.getter()
{
  return swift_retain();
}

void *REMSuggestedAttributesHarvester.Request.accountID.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

uint64_t REMSuggestedAttributesHarvester.Request.languageIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMSuggestedAttributesHarvester.Request.hasPasteboardURL.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t REMSuggestedAttributesHarvester.Request.reminderHasURL.getter()
{
  return *(unsigned __int8 *)(v0 + 49);
}

void REMSuggestedAttributesHarvester.Request.coreBehavior.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 72);
  char v4 = *(unsigned char *)(v1 + 80);
  *(void *)a1 = *(void *)(v1 + 56);
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
}

void REMSuggestedAttributesHarvester.Request.embedding.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 96);
  *(void *)a1 = *(void *)(v1 + 88);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t REMSuggestedAttributesHarvester.Request.allowLocalOverrides.getter()
{
  return *(unsigned __int8 *)(v0 + 97);
}

uint64_t REMSuggestedAttributesHarvester.Request.allowCloudOverrides.getter()
{
  return *(unsigned __int8 *)(v0 + 98);
}

uint64_t REMSuggestedAttributesHarvester.Request.init(enabledOnmacOS:enabledOniOS:modelPipelineSwitcher:reminderInput:accountID:languageIdentifier:hasPasteboardURL:reminderHasURL:coreBehavior:embedding:allowLocalOverrides:allowCloudOverrides:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t *a11, uint64_t *a12, char a13, char a14)
{
  uint64_t v14 = *a11;
  char v15 = *((unsigned char *)a11 + 8);
  uint64_t v16 = a11[2];
  char v17 = *((unsigned char *)a11 + 24);
  uint64_t v18 = *a12;
  char v19 = *((unsigned char *)a12 + 8);
  *(unsigned char *)a9 = (result == 2) | result & 1;
  *(unsigned char *)(a9 + 1) = (a2 == 2) | a2 & 1;
  *(void *)(a9 + 8) = a3;
  *(void *)(a9 + 16) = a4;
  *(void *)(a9 + 24) = a5;
  *(void *)(a9 + 32) = a6;
  *(void *)(a9 + 40) = a7;
  *(unsigned char *)(a9 + 48) = a8;
  *(unsigned char *)(a9 + 49) = a10;
  *(void *)(a9 + 56) = v14;
  *(unsigned char *)(a9 + 64) = v15;
  *(void *)(a9 + 72) = v16;
  *(unsigned char *)(a9 + 80) = v17;
  *(void *)(a9 + 88) = v18;
  *(unsigned char *)(a9 + 96) = v19;
  *(unsigned char *)(a9 + 97) = a13;
  *(unsigned char *)(a9 + 98) = a14;
  return result;
}

uint64_t REMSuggestedAttributesHarvester.Request.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703D10);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v37 = *(unsigned __int8 *)(v1 + 1);
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v30 = *(void *)(v1 + 16);
  uint64_t v31 = v7;
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v27 = *(void *)(v1 + 32);
  uint64_t v28 = *(void *)(v1 + 40);
  uint64_t v29 = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 48);
  int v25 = *(unsigned __int8 *)(v1 + 49);
  int v26 = v8;
  uint64_t v21 = *(void *)(v1 + 56);
  int v24 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v23 = *(void *)(v1 + 72);
  int v22 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v19 = *(void *)(v1 + 88);
  int v20 = *(unsigned __int8 *)(v1 + 96);
  uint64_t v9 = a1[3];
  char v10 = a1;
  uint64_t v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1A7430190();
  uint64_t v13 = v6;
  sub_1A75741B0();
  LOBYTE(v33) = 0;
  uint64_t v14 = v32;
  sub_1A7573B20();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v12);
  }
  uint64_t v15 = v30;
  uint64_t v16 = v31;
  LOBYTE(v33) = 1;
  sub_1A7573B20();
  uint64_t v33 = v16;
  char v38 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701CE0);
  sub_1A743028C(&qword_1EB700058);
  sub_1A7573B60();
  uint64_t v33 = v15;
  char v38 = 3;
  type metadata accessor for REMSuggestedAttributeInput(0);
  sub_1A7430A84(&qword_1EB703990, (void (*)(uint64_t))type metadata accessor for REMSuggestedAttributeInput);
  sub_1A7573B60();
  uint64_t v33 = v29;
  char v38 = 4;
  type metadata accessor for REMObjectID_Codable();
  sub_1A7430A84(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
  sub_1A7573B00();
  LOBYTE(v33) = 5;
  sub_1A7573AC0();
  LOBYTE(v33) = 6;
  sub_1A7573B20();
  LOBYTE(v33) = 7;
  sub_1A7573B20();
  uint64_t v33 = v21;
  char v34 = v24;
  uint64_t v35 = v23;
  char v36 = v22;
  char v38 = 8;
  sub_1A74301E4();
  sub_1A7573B60();
  uint64_t v33 = v19;
  char v34 = v20;
  char v38 = 9;
  sub_1A7430238();
  sub_1A7573B60();
  LOBYTE(v33) = 10;
  sub_1A7573B20();
  LOBYTE(v33) = 11;
  sub_1A7573B20();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v13, v12);
}

void REMSuggestedAttributesHarvester.Request.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704098);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7430190();
  sub_1A7574190();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v36) = 0;
    char v9 = sub_1A7573A10();
    LOBYTE(v36) = 1;
    int v10 = sub_1A7573A10();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701CE0);
    char v41 = 2;
    sub_1A743028C(&qword_1EB7003D0);
    sub_1A7573A50();
    int v40 = v10;
    uint64_t v11 = v36;
    type metadata accessor for REMSuggestedAttributeInput(0);
    char v41 = 3;
    sub_1A7430A84(&qword_1EB703F98, (void (*)(uint64_t))type metadata accessor for REMSuggestedAttributeInput);
    uint64_t v35 = v11;
    swift_bridgeObjectRetain();
    sub_1A7573A50();
    uint64_t v12 = (uint64_t)v36;
    type metadata accessor for REMObjectID_Codable();
    char v41 = 4;
    sub_1A7430A84(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    uint64_t v34 = v12;
    swift_retain();
    sub_1A75739F0();
    uint64_t v13 = v36;
    LOBYTE(v36) = 5;
    uint64_t v33 = v13;
    id v14 = v13;
    uint64_t v31 = sub_1A75739B0();
    uint64_t v32 = v15;
    LOBYTE(v36) = 6;
    swift_bridgeObjectRetain();
    int v29 = sub_1A7573A10();
    id v30 = v14;
    uint64_t v16 = v32;
    LOBYTE(v36) = 7;
    int v28 = sub_1A7573A10();
    char v41 = 8;
    sub_1A74302F4();
    sub_1A7573A50();
    uint64_t v27 = v36;
    int v26 = v37;
    uint64_t v25 = v38;
    int v24 = v39;
    char v41 = 9;
    sub_1A7430348();
    sub_1A7573A50();
    uint64_t v23 = v36;
    int v22 = v37;
    LOBYTE(v36) = 10;
    int v21 = sub_1A7573A10();
    LOBYTE(v36) = 11;
    LOBYTE(v12) = sub_1A7573A10();
    HIDWORD(v20) = v9 & 1;
    char v17 = v40 & 1;
    v28 &= 1u;
    v29 &= 1u;
    int v40 = v21 & 1;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = BYTE4(v20);
    *(unsigned char *)(a2 + 1) = v17;
    uint64_t v18 = v34;
    *(void *)(a2 + 8) = v35;
    *(void *)(a2 + 16) = v18;
    uint64_t v19 = v31;
    *(void *)(a2 + 24) = v33;
    *(void *)(a2 + 32) = v19;
    *(void *)(a2 + 40) = v16;
    *(unsigned char *)(a2 + 48) = v29;
    *(unsigned char *)(a2 + 49) = v28;
    *(void *)(a2 + 56) = v27;
    *(unsigned char *)(a2 + 64) = v26;
    *(void *)(a2 + 72) = v25;
    *(unsigned char *)(a2 + 80) = v24;
    *(void *)(a2 + 88) = v23;
    *(unsigned char *)(a2 + 96) = v22;
    *(unsigned char *)(a2 + 97) = v40;
    *(unsigned char *)(a2 + 98) = v12 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();

    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_1A742CAA4(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1A742CABC(void *a1)
{
  return REMSuggestedAttributesHarvester.Request.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesHarvester.MentionsExtractionRequest.reminderTitle.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id REMSuggestedAttributesHarvester.MentionsExtractionRequest.listID.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t REMSuggestedAttributesHarvester.MentionsExtractionRequest.editingSessionID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest() + 24);
  uint64_t v4 = sub_1A7571BC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t REMSuggestedAttributesHarvester.MentionsExtractionRequest.init(reminderTitle:listID:editingSessionID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  uint64_t v6 = (char *)a5
     + *(int *)(type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest() + 24);
  uint64_t v7 = sub_1A7571BC0();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a4, v7);
}

uint64_t sub_1A742CC0C()
{
  unint64_t v1 = 0x44497473696CLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7265646E696D6572;
  }
}

uint64_t sub_1A742CC74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74335C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A742CC9C(uint64_t a1)
{
  unint64_t v2 = sub_1A743039C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A742CCD8(uint64_t a1)
{
  unint64_t v2 = sub_1A743039C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesHarvester.MentionsExtractionRequest.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703D08);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A743039C();
  sub_1A75741B0();
  char v12 = 0;
  sub_1A7573B10();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 16);
    v10[15] = 1;
    type metadata accessor for REMObjectID_Codable();
    sub_1A7430A84(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    sub_1A7573B60();
    type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest();
    v10[14] = 2;
    sub_1A7571BC0();
    sub_1A7430A84(&qword_1EB7057D0, MEMORY[0x1E4F27990]);
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void REMSuggestedAttributesHarvester.MentionsExtractionRequest.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_1A7571BC0();
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704090);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest();
  MEMORY[0x1F4188790](v10);
  char v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1[3];
  uint64_t v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A743039C();
  sub_1A7574190();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  else
  {
    uint64_t v14 = v23;
    uint64_t v15 = v6;
    char v29 = 0;
    *char v12 = sub_1A7573A00();
    v12[1] = v16;
    type metadata accessor for REMObjectID_Codable();
    char v28 = 1;
    sub_1A7430A84(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    sub_1A7573A50();
    _OWORD v12[2] = v26;
    char v27 = 2;
    sub_1A7430A84(&qword_1EB705A30, MEMORY[0x1E4F27990]);
    uint64_t v17 = (uint64_t)v12;
    uint64_t v20 = v15;
    uint64_t v18 = v24;
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v18);
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v17 + *(int *)(v10 + 24), v20, v4);
    sub_1A7429AD8(v17, v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    sub_1A7429B3C(v17);
  }
}

void sub_1A742D2F8(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1A742D310(void *a1)
{
  return REMSuggestedAttributesHarvester.MentionsExtractionRequest.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesHarvester.FeedbackRequest.source.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

double REMSuggestedAttributesHarvester.FeedbackRequest.feedbackFactor.getter()
{
  return *(double *)(v0 + 8);
}

ReminderKitInternal::REMSuggestedAttributesHarvester::FeedbackRequest __swiftcall REMSuggestedAttributesHarvester.FeedbackRequest.init(source:feedbackFactor:)(ReminderKitInternal::REMSuggestedAttributeOutput::Source source, Swift::Double feedbackFactor)
{
  *(void *)uint64_t v2 = *(void *)source.predictors._rawValue;
  *(Swift::Double *)(v2 + 8) = feedbackFactor;
  result.feedbackFactor = feedbackFactor;
  result.source = source;
  return result;
}

uint64_t sub_1A742D34C()
{
  if (*v0) {
    return 0x6B63616264656566;
  }
  else {
    return 0x656372756F73;
  }
}

uint64_t sub_1A742D390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7433738(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A742D3B8(uint64_t a1)
{
  unint64_t v2 = sub_1A74303F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A742D3F4(uint64_t a1)
{
  unint64_t v2 = sub_1A74303F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesHarvester.FeedbackRequest.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB7042B8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74303F0();
  sub_1A75741B0();
  uint64_t v11 = v8;
  v10[7] = 0;
  sub_1A73A24B4();
  sub_1A7573B60();
  if (!v2)
  {
    v10[6] = 1;
    sub_1A7573B30();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesHarvester.FeedbackRequest.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704500);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74303F0();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v13[7] = 0;
  sub_1A73A240C();
  sub_1A7573A50();
  uint64_t v9 = v14;
  void v13[6] = 1;
  swift_bridgeObjectRetain();
  sub_1A7573A20();
  uint64_t v11 = v10;
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A742D7A0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMSuggestedAttributesHarvester.FeedbackRequest.init(from:)(a1, a2);
}

uint64_t sub_1A742D7B8(void *a1)
{
  return REMSuggestedAttributesHarvester.FeedbackRequest.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.reminder.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.init(reminder:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1A742D7E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7265646E696D6572 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A742D878(uint64_t a1)
{
  unint64_t v2 = sub_1A7430444();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A742D8B4(uint64_t a1)
{
  unint64_t v2 = sub_1A7430444();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C68);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7430444();
  sub_1A75741B0();
  v9[1] = v7;
  type metadata accessor for REMSuggestedAttributeInput(0);
  sub_1A7430A84(&qword_1EB703990, (void (*)(uint64_t))type metadata accessor for REMSuggestedAttributeInput);
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701058);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7430444();
  sub_1A7574190();
  if (!v2)
  {
    type metadata accessor for REMSuggestedAttributeInput(0);
    sub_1A7430A84(&qword_1EB703F98, (void (*)(uint64_t))type metadata accessor for REMSuggestedAttributeInput);
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A742DC10@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.init(from:)(a1, a2);
}

uint64_t sub_1A742DC28(void *a1)
{
  return REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesHarvester.RecordSuggestionRequest.suggestionValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void REMSuggestedAttributesHarvester.RecordSuggestionRequest.suggestionType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

void REMSuggestedAttributesHarvester.RecordSuggestionRequest.pipeline.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

id REMSuggestedAttributesHarvester.RecordSuggestionRequest.reminderID.getter()
{
  return *(id *)(v0 + 24);
}

uint64_t REMSuggestedAttributesHarvester.RecordSuggestionRequest.init(suggestionValue:suggestionType:pipeline:reminderID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v6 = *a3;
  char v7 = *a4;
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = v6;
  *(unsigned char *)(a6 + 17) = v7;
  *(void *)(a6 + 24) = a5;
  return result;
}

uint64_t sub_1A742DCAC()
{
  uint64_t result = 0x6974736567677573;
  switch(*v0)
  {
    case 2:
      uint64_t result = 0x656E696C65706970;
      break;
    case 3:
      uint64_t result = 0x7265646E696D6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A742DD48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7433848(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A742DD70(uint64_t a1)
{
  unint64_t v2 = sub_1A7430498();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A742DDAC(uint64_t a1)
{
  unint64_t v2 = sub_1A7430498();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesHarvester.RecordSuggestionRequest.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C60);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(v1 + 16);
  int v18 = *(unsigned __int8 *)(v1 + 17);
  int v19 = v8;
  uint64_t v17 = *(void *)(v1 + 24);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1;
  uint64_t v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1A7430498();
  sub_1A75741B0();
  char v26 = 0;
  sub_1A7573B10();
  if (!v2)
  {
    char v13 = v18;
    uint64_t v14 = v17;
    char v25 = v19;
    char v24 = 1;
    sub_1A74304EC();
    sub_1A7573B60();
    char v23 = v13;
    char v22 = 2;
    sub_1A73A2310();
    sub_1A7573B60();
    uint64_t v20 = v14;
    char v21 = 3;
    type metadata accessor for REMObjectID_Codable();
    sub_1A7430A84(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t REMSuggestedAttributesHarvester.RecordSuggestionRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701050);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7430498();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v23 = 0;
  uint64_t v9 = sub_1A7573A00();
  uint64_t v11 = v10;
  char v21 = 1;
  sub_1A7430540();
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  int v16 = v22;
  char v19 = 2;
  sub_1A73A221C();
  sub_1A7573A50();
  int v15 = v20;
  type metadata accessor for REMObjectID_Codable();
  char v18 = 3;
  sub_1A7430A84(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v13 = v17;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v16;
  *(unsigned char *)(a2 + 17) = v15;
  *(void *)(a2 + 24) = v13;
  id v14 = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A742E31C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesHarvester.RecordSuggestionRequest.init(from:)(a1, a2);
}

uint64_t sub_1A742E334(void *a1)
{
  return REMSuggestedAttributesHarvester.RecordSuggestionRequest.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesHarvester.Response.heuristicResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = v9;
  return sub_1A7317270(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t REMSuggestedAttributesHarvester.Response.embeddingResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 88);
  uint64_t v6 = *(void *)(v1 + 96);
  uint64_t v7 = *(void *)(v1 + 104);
  uint64_t v8 = *(void *)(v1 + 112);
  char v9 = *(unsigned char *)(v1 + 120);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = v9;
  return sub_1A7317270(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t REMSuggestedAttributesHarvester.Response.coreBehaviorResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 136);
  uint64_t v4 = *(void *)(v1 + 144);
  uint64_t v5 = *(void *)(v1 + 152);
  uint64_t v6 = *(void *)(v1 + 160);
  uint64_t v7 = *(void *)(v1 + 168);
  uint64_t v8 = *(void *)(v1 + 176);
  char v9 = *(unsigned char *)(v1 + 184);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = v9;
  return sub_1A7317270(v2, v3, v4, v5, v6, v7, v8, v9);
}

__n128 REMSuggestedAttributesHarvester.Response.init(heuristicResult:embeddingResult:coreBehaviorResult:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a3 + 48);
  char v5 = *(unsigned char *)(a1 + 56);
  char v13 = *(unsigned char *)(a2 + 56);
  char v12 = *(unsigned char *)(a3 + 56);
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v8;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a4 + 48) = v4;
  *(unsigned char *)(a4 + 56) = v5;
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a4 + 64) = *(_OWORD *)a2;
  *(_OWORD *)(a4 + 80) = v9;
  *(_OWORD *)(a4 + 96) = *(_OWORD *)(a2 + 32);
  *(void *)(a4 + 112) = v6;
  *(unsigned char *)(a4 + 120) = v13;
  long long v10 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 128) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 144) = v10;
  __n128 result = *(__n128 *)(a3 + 32);
  *(__n128 *)(a4 + 160) = result;
  *(void *)(a4 + 176) = v7;
  *(unsigned char *)(a4 + 184) = v12;
  return result;
}

uint64_t sub_1A742E44C()
{
  unint64_t v1 = 0x6E69646465626D65;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6974736972756568;
  }
}

uint64_t sub_1A742E4B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7433A50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A742E4E0(uint64_t a1)
{
  unint64_t v2 = sub_1A7430594();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A742E51C(uint64_t a1)
{
  unint64_t v2 = sub_1A7430594();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesHarvester.Response.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7040E0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v34 = v1[1];
  long long v35 = v7;
  long long v33 = v1[2];
  uint64_t v8 = *((void *)v1 + 6);
  char v9 = *((unsigned char *)v1 + 56);
  uint64_t v10 = *((void *)v1 + 8);
  uint64_t v31 = *((void *)v1 + 9);
  uint64_t v32 = v10;
  uint64_t v11 = *((void *)v1 + 10);
  uint64_t v29 = *((void *)v1 + 11);
  uint64_t v30 = v11;
  uint64_t v12 = *((void *)v1 + 12);
  uint64_t v27 = *((void *)v1 + 13);
  uint64_t v28 = v12;
  uint64_t v26 = *((void *)v1 + 14);
  int v42 = *((unsigned __int8 *)v1 + 120);
  uint64_t v25 = *((void *)v1 + 16);
  uint64_t v24 = *((void *)v1 + 17);
  uint64_t v23 = *((void *)v1 + 18);
  uint64_t v22 = *((void *)v1 + 19);
  uint64_t v21 = *((void *)v1 + 20);
  uint64_t v20 = *((void *)v1 + 21);
  uint64_t v19 = *((void *)v1 + 22);
  int v18 = *((unsigned __int8 *)v1 + 184);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7430594();
  sub_1A75741B0();
  long long v37 = v35;
  long long v38 = v34;
  long long v39 = v33;
  uint64_t v40 = v8;
  char v41 = v9;
  char v43 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701D10);
  sub_1A74307A8(&qword_1EB700420);
  uint64_t v13 = v36;
  sub_1A7573B60();
  if (!v13)
  {
    uint64_t v14 = v24;
    uint64_t v15 = v25;
    *(void *)&long long v37 = v32;
    *((void *)&v37 + 1) = v31;
    *(void *)&long long v38 = v30;
    *((void *)&v38 + 1) = v29;
    *(void *)&long long v39 = v28;
    *((void *)&v39 + 1) = v27;
    uint64_t v40 = v26;
    char v41 = v42;
    char v43 = 1;
    sub_1A7573B60();
    *(void *)&long long v37 = v15;
    *((void *)&v37 + 1) = v14;
    *(void *)&long long v38 = v23;
    *((void *)&v38 + 1) = v22;
    *(void *)&long long v39 = v21;
    *((void *)&v39 + 1) = v20;
    uint64_t v40 = v19;
    char v41 = v18;
    char v43 = 2;
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMSuggestedAttributesHarvester.Response.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703CF0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1A7430594();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  uint64_t v55 = v6;
  uint64_t v53 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701D10);
  LOBYTE(v57) = 0;
  sub_1A74307A8(qword_1EB700170);
  sub_1A7573A50();
  uint64_t v10 = v74;
  int v11 = v75;
  unsigned __int8 v99 = v75;
  LOBYTE(v57) = 1;
  uint64_t v54 = v68;
  uint64_t v50 = v70;
  uint64_t v51 = v69;
  uint64_t v48 = v72;
  uint64_t v49 = v71;
  uint64_t v47 = v73;
  sub_1A7317270(v68, v69, v70, v71, v72, v73, v74, v75);
  sub_1A7573A50();
  uint64_t v52 = v10;
  int v40 = v11;
  LOBYTE(v10) = v75;
  unsigned __int8 v98 = v75;
  char v100 = 2;
  uint64_t v12 = v68;
  uint64_t v44 = v70;
  uint64_t v45 = v69;
  uint64_t v42 = v72;
  uint64_t v43 = v71;
  uint64_t v41 = v73;
  uint64_t v46 = v74;
  sub_1A7317270(v68, v69, v70, v71, v72, v73, v74, v75);
  uint64_t v38 = 0;
  sub_1A7573A50();
  uint64_t v39 = v12;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v5);
  uint64_t v55 = v92;
  uint64_t v37 = v93;
  uint64_t v38 = *((void *)&v92 + 1);
  uint64_t v35 = v94;
  uint64_t v36 = *((void *)&v93 + 1);
  uint64_t v33 = v95;
  uint64_t v34 = *((void *)&v94 + 1);
  char v97 = v96;
  *(void *)&long long v57 = v54;
  *((void *)&v57 + 1) = v51;
  *(void *)&long long v58 = v50;
  *((void *)&v58 + 1) = v49;
  *(void *)&long long v59 = v48;
  *((void *)&v59 + 1) = v47;
  *(void *)&long long v60 = v52;
  BYTE8(v60) = v40;
  uint64_t v13 = v12;
  uint64_t v14 = v44;
  uint64_t v15 = v45;
  *(void *)&long long v61 = v12;
  *((void *)&v61 + 1) = v45;
  uint64_t v17 = v42;
  uint64_t v16 = v43;
  *(void *)&long long v62 = v44;
  *((void *)&v62 + 1) = v43;
  uint64_t v18 = v41;
  *(void *)&long long v63 = v42;
  *((void *)&v63 + 1) = v41;
  *(void *)&long long v64 = v46;
  BYTE8(v64) = v10;
  long long v65 = v92;
  long long v66 = v93;
  v67[0] = v94;
  *(void *)&v67[1] = v95;
  BYTE8(v67[1]) = v96;
  sub_1A73173B0((uint64_t)&v57, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A7317270);
  sub_1A73172BC(v13, v15, v14, v16, v17, v18, v46, v10);
  uint64_t v19 = v54;
  uint64_t v21 = v50;
  uint64_t v20 = v51;
  uint64_t v23 = v48;
  uint64_t v22 = v49;
  uint64_t v24 = v47;
  sub_1A73172BC(v54, v51, v50, v49, v48, v47, v52, v40);
  long long v25 = v66;
  uint64_t v26 = v53;
  v53[8] = v65;
  v26[9] = v25;
  v26[10] = v67[0];
  *(_OWORD *)((char *)v26 + 169) = *(_OWORD *)((char *)v67 + 9);
  long long v27 = v62;
  v26[4] = v61;
  v26[5] = v27;
  long long v28 = v64;
  v26[6] = v63;
  v26[7] = v28;
  long long v29 = v58;
  *uint64_t v26 = v57;
  v26[1] = v29;
  long long v30 = v60;
  v26[2] = v59;
  v26[3] = v30;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  uint64_t v68 = v19;
  uint64_t v69 = v20;
  uint64_t v70 = v21;
  uint64_t v71 = v22;
  uint64_t v72 = v23;
  uint64_t v73 = v24;
  uint64_t v74 = v52;
  unsigned __int8 v75 = v99;
  uint64_t v76 = v39;
  uint64_t v77 = v45;
  uint64_t v78 = v44;
  uint64_t v79 = v43;
  uint64_t v80 = v42;
  uint64_t v81 = v41;
  uint64_t v82 = v46;
  unsigned __int8 v83 = v98;
  uint64_t v84 = v55;
  uint64_t v85 = v38;
  uint64_t v86 = v37;
  uint64_t v87 = v36;
  uint64_t v88 = v35;
  uint64_t v89 = v34;
  uint64_t v90 = v33;
  char v91 = v97;
  return sub_1A73173B0((uint64_t)&v68, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A73172BC);
}

uint64_t sub_1A742EEA0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return REMSuggestedAttributesHarvester.Response.init(from:)(a1, a2);
}

uint64_t sub_1A742EEB8(void *a1)
{
  return REMSuggestedAttributesHarvester.Response.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesHarvester.MentionsExtractionResponse.result.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = v9;
  return sub_1A7317270(v2, v3, v4, v5, v6, v7, v8, v9);
}

__n128 REMSuggestedAttributesHarvester.MentionsExtractionResponse.init(result:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 56);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 32) = result;
  *(void *)(a2 + 48) = v2;
  *(unsigned char *)(a2 + 56) = v3;
  return result;
}

uint64_t sub_1A742EF20()
{
  return 0x746C75736572;
}

uint64_t sub_1A742EF38(uint64_t a1)
{
  unint64_t v2 = sub_1A7430894();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A742EF74(uint64_t a1)
{
  unint64_t v2 = sub_1A7430894();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesHarvester.MentionsExtractionResponse.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7040D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v12 = v1[1];
  long long v13 = v7;
  long long v11 = v1[2];
  uint64_t v8 = *((void *)v1 + 6);
  char v9 = *((unsigned char *)v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7430894();
  sub_1A75741B0();
  long long v14 = v13;
  long long v15 = v12;
  long long v16 = v11;
  uint64_t v17 = v8;
  char v18 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701D10);
  sub_1A74307A8(&qword_1EB700420);
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMSuggestedAttributesHarvester.MentionsExtractionResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703CE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7430894();
  sub_1A7574190();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701D10);
    sub_1A74307A8(qword_1EB700170);
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v15;
    char v10 = v16;
    long long v11 = v14[1];
    long long v12 = v14[2];
    *(_OWORD *)a2 = v14[0];
    *(_OWORD *)(a2 + 16) = v11;
    *(_OWORD *)(a2 + 32) = v12;
    *(void *)(a2 + 48) = v9;
    *(unsigned char *)(a2 + 56) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A742F300@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesHarvester.MentionsExtractionResponse.init(from:)(a1, a2);
}

uint64_t sub_1A742F318(void *a1)
{
  return REMSuggestedAttributesHarvester.MentionsExtractionResponse.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesHarvester.BooleanResponse.result.getter()
{
  return *v0;
}

ReminderKitInternal::REMSuggestedAttributesHarvester::BooleanResponse __swiftcall REMSuggestedAttributesHarvester.BooleanResponse.init(result:)(ReminderKitInternal::REMSuggestedAttributesHarvester::BooleanResponse result)
{
  v1->__n128 result = result.result;
  return result;
}

uint64_t sub_1A742F340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A742F3D0(uint64_t a1)
{
  unint64_t v2 = sub_1A74308E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A742F40C(uint64_t a1)
{
  unint64_t v2 = sub_1A74308E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesHarvester.BooleanResponse.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7010E0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74308E8();
  sub_1A75741B0();
  sub_1A7573B20();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t REMSuggestedAttributesHarvester.BooleanResponse.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74308E8();
  sub_1A7574190();
  if (!v2)
  {
    char v9 = sub_1A7573A10();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A742F6D0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMSuggestedAttributesHarvester.BooleanResponse.init(from:)(a1, a2);
}

uint64_t sub_1A742F6E8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7010E0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74308E8();
  sub_1A75741B0();
  sub_1A7573B20();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

ReminderKitInternal::REMSuggestedAttributesHarvester::CachedSuggestionType_optional __swiftcall REMSuggestedAttributesHarvester.CachedSuggestionType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t REMSuggestedAttributesHarvester.CachedSuggestionType.rawValue.getter()
{
  uint64_t result = 1953720684;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E65727275636572;
      break;
    case 2:
      uint64_t result = 0x664F796144657564;
      break;
    case 3:
      uint64_t result = 0x6144657544706C6ELL;
      break;
    case 4:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 5:
      uint64_t result = 0x656C6369686576;
      break;
    case 6:
      uint64_t result = 0x64656767616C66;
      break;
    case 7:
      uint64_t result = 0x797469726F697270;
      break;
    case 8:
      uint64_t result = 6775156;
      break;
    case 9:
      uint64_t result = 0x746361746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A742F9B4(unsigned __int8 *a1, char *a2)
{
  return sub_1A75415D0(*a1, *a2);
}

uint64_t sub_1A742F9C0()
{
  return sub_1A7574110();
}

uint64_t sub_1A742FA08()
{
  return sub_1A7502544();
}

uint64_t sub_1A742FA10()
{
  return sub_1A7574110();
}

ReminderKitInternal::REMSuggestedAttributesHarvester::CachedSuggestionType_optional sub_1A742FA54(Swift::String *a1)
{
  return REMSuggestedAttributesHarvester.CachedSuggestionType.init(rawValue:)(*a1);
}

uint64_t sub_1A742FA60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = REMSuggestedAttributesHarvester.CachedSuggestionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A742FA88()
{
  return sub_1A75729D0();
}

uint64_t sub_1A742FAE8()
{
  return sub_1A7572980();
}

uint64_t static REMSuggestedAttributesHarvester.modelPipelineValueFromUserDefaults(for:)(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  id v2 = objc_msgSend(self, sel_daemonUserDefaults);
  id v3 = objc_msgSend(v2, sel_suggestedAttributesHarvestingOverrides);

  if (v3)
  {
    unint64_t v4 = sub_1A75723F0();
  }
  else
  {
    unint64_t v4 = sub_1A72B10F4(MEMORY[0x1E4FBC860]);
  }
  *(void *)&long long v16 = 0xD000000000000015;
  *((void *)&v16 + 1) = 0x80000001A759E1F0;
  sub_1A7573490();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1A72B24E8((uint64_t)v15), (v6 & 1) != 0))
  {
    sub_1A72BEE98(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v16);
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A72BF194((uint64_t)v15);
  if (!*((void *)&v17 + 1))
  {
    sub_1A7315924((uint64_t)&v16);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701CE0);
  if (!swift_dynamicCast())
  {
LABEL_12:
    uint64_t v7 = MEMORY[0x1E4FBC868];
    goto LABEL_13;
  }
  uint64_t v7 = v14;
LABEL_13:
  uint64_t v8 = 0xED00007265737261;
  uint64_t v9 = 0x5079726575516C6ELL;
  switch(v1)
  {
    case 1:
      uint64_t v8 = 0xE300000000000000;
      uint64_t v9 = 5131883;
      if (*(void *)(v7 + 16)) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      uint64_t v8 = 0xEC000000726F6976;
      uint64_t v9 = 0x6168654265726F63;
      if (!*(void *)(v7 + 16)) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      uint64_t v9 = 0x6974736972756568;
      uint64_t v8 = 0xE900000000000063;
      if (!*(void *)(v7 + 16)) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      uint64_t v8 = 0xEE00656C62627542;
      uint64_t v9 = 0x6465726F68636E61;
      goto LABEL_21;
    case 5:
      uint64_t v8 = 0xE900000000000074;
      uint64_t v9 = 0x6867696C746F7073;
      if (!*(void *)(v7 + 16)) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (!*(void *)(v7 + 16)) {
        goto LABEL_25;
      }
LABEL_22:
      unint64_t v10 = sub_1A72B2210(v9, v8);
      if (v11) {
        uint64_t v12 = *(unsigned __int8 *)(*(void *)(v7 + 56) + v10);
      }
      else {
LABEL_25:
      }
        uint64_t v12 = 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
  }
}

void static REMSuggestedAttributesHarvester.setModelPipelineValueInUserDefaults(for:value:)(unsigned __int8 *a1, char a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_daemonUserDefaults);
  id v6 = objc_msgSend(v5, sel_suggestedAttributesHarvestingOverrides);

  if (v6)
  {
    unint64_t v7 = sub_1A75723F0();
  }
  else
  {
    unint64_t v7 = sub_1A72B10F4(MEMORY[0x1E4FBC860]);
  }
  *(void *)&v18[0] = 0xD000000000000015;
  *((void *)&v18[0] + 1) = 0x80000001A759E1F0;
  sub_1A7573490();
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1A72B24E8((uint64_t)v19), (v9 & 1) != 0))
  {
    sub_1A72BEE98(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v20);
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  sub_1A72BF194((uint64_t)v19);
  if (*((void *)&v21 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701CE0);
    if (swift_dynamicCast())
    {
      uint64_t v10 = *(void *)&v18[0];
      goto LABEL_13;
    }
  }
  else
  {
    sub_1A7315924((uint64_t)&v20);
  }
  uint64_t v10 = MEMORY[0x1E4FBC868];
LABEL_13:
  uint64_t v11 = 0xED00007265737261;
  uint64_t v12 = 0x5079726575516C6ELL;
  switch(v3)
  {
    case 1:
      uint64_t v11 = 0xE300000000000000;
      uint64_t v12 = 5131883;
      break;
    case 2:
      uint64_t v11 = 0xEC000000726F6976;
      uint64_t v12 = 0x6168654265726F63;
      break;
    case 3:
      uint64_t v12 = 0x6974736972756568;
      uint64_t v11 = 0xE900000000000063;
      break;
    case 4:
      uint64_t v11 = 0xEE00656C62627542;
      uint64_t v12 = 0x6465726F68636E61;
      break;
    case 5:
      uint64_t v11 = 0xE900000000000074;
      uint64_t v12 = 0x6867696C746F7073;
      break;
    default:
      break;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19[0] = v10;
  sub_1A72D7EFC(a2 & 1, v12, v11, isUniquelyReferenced_nonNull_native);
  uint64_t v14 = v19[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v20 = 0xD000000000000015;
  *((void *)&v20 + 1) = 0x80000001A759E1F0;
  sub_1A7573490();
  *((void *)&v21 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701CE0);
  *(void *)&long long v20 = v14;
  sub_1A72BEE44(&v20, v18);
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_1A72D6488(v18, (uint64_t)v19, v15);
  swift_bridgeObjectRelease();
  sub_1A72BF194((uint64_t)v19);
  id v16 = objc_msgSend(v4, sel_daemonUserDefaults, v7);
  swift_bridgeObjectRetain();
  long long v17 = (void *)sub_1A75723D0();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setSuggestedAttributesHarvestingOverrides_, v17);
  swift_bridgeObjectRelease();
}

uint64_t _s19ReminderKitInternal31REMSuggestedAttributesHarvesterC7RequestV14partialKeyPath3fors07PartialiJ0CyAEGAE10CodingKeysO_tFZ_0()
{
  return swift_getKeyPath();
}

unint64_t sub_1A7430190()
{
  unint64_t result = qword_1EB705290;
  if (!qword_1EB705290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705290);
  }
  return result;
}

unint64_t sub_1A74301E4()
{
  unint64_t result = qword_1EB703A58;
  if (!qword_1EB703A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703A58);
  }
  return result;
}

unint64_t sub_1A7430238()
{
  unint64_t result = qword_1EB703A60;
  if (!qword_1EB703A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703A60);
  }
  return result;
}

uint64_t sub_1A743028C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB701CE0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A74302F4()
{
  unint64_t result = qword_1EB703FA0;
  if (!qword_1EB703FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703FA0);
  }
  return result;
}

unint64_t sub_1A7430348()
{
  unint64_t result = qword_1EB703FA8;
  if (!qword_1EB703FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703FA8);
  }
  return result;
}

unint64_t sub_1A743039C()
{
  unint64_t result = qword_1EB7051C8;
  if (!qword_1EB7051C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7051C8);
  }
  return result;
}

unint64_t sub_1A74303F0()
{
  unint64_t result = qword_1EB705790;
  if (!qword_1EB705790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705790);
  }
  return result;
}

unint64_t sub_1A7430444()
{
  unint64_t result = qword_1EB702808;
  if (!qword_1EB702808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702808);
  }
  return result;
}

unint64_t sub_1A7430498()
{
  unint64_t result = qword_1EB7027F0;
  if (!qword_1EB7027F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7027F0);
  }
  return result;
}

unint64_t sub_1A74304EC()
{
  unint64_t result = qword_1EB700AE8;
  if (!qword_1EB700AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700AE8);
  }
  return result;
}

unint64_t sub_1A7430540()
{
  unint64_t result = qword_1EB700FA0;
  if (!qword_1EB700FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700FA0);
  }
  return result;
}

unint64_t sub_1A7430594()
{
  unint64_t result = qword_1EB7052D8;
  if (!qword_1EB7052D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7052D8);
  }
  return result;
}

unint64_t sub_1A74305E8()
{
  unint64_t result = qword_1EB701CD8;
  if (!qword_1EB701CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701CD8);
  }
  return result;
}

uint64_t sub_1A743063C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB701CE8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A74306AC()
{
  unint64_t result = qword_1EB701CD0;
  if (!qword_1EB701CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701CD0);
  }
  return result;
}

unint64_t sub_1A7430700()
{
  unint64_t result = qword_1EB704C90;
  if (!qword_1EB704C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704C90);
  }
  return result;
}

unint64_t sub_1A7430754()
{
  unint64_t result = qword_1EB704C88;
  if (!qword_1EB704C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704C88);
  }
  return result;
}

uint64_t sub_1A74307A8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB701D10);
    sub_1A743063C(&qword_1EB701CF8, (void (*)(void))sub_1A74305E8);
    sub_1A743063C(&qword_1EB701CF0, (void (*)(void))sub_1A74306AC);
    sub_1A7430700();
    sub_1A7430754();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A7430894()
{
  unint64_t result = qword_1EB705278;
  if (!qword_1EB705278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705278);
  }
  return result;
}

unint64_t sub_1A74308E8()
{
  unint64_t result = qword_1EB7027D0;
  if (!qword_1EB7027D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7027D0);
  }
  return result;
}

unint64_t sub_1A7430940()
{
  unint64_t result = qword_1EB703FB0[0];
  if (!qword_1EB703FB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB703FB0);
  }
  return result;
}

unint64_t sub_1A74309A0()
{
  unint64_t result = qword_1E96F35C0;
  if (!qword_1E96F35C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F35C0);
  }
  return result;
}

uint64_t sub_1A74309F4()
{
  return sub_1A7430A84(&qword_1E96F35C8, (void (*)(uint64_t))type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest);
}

uint64_t sub_1A7430A3C()
{
  return sub_1A7430A84(&qword_1EB703A48, (void (*)(uint64_t))type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest);
}

uint64_t sub_1A7430A84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A7430AD4()
{
  unint64_t result = qword_1E96F35D0;
  if (!qword_1E96F35D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F35D0);
  }
  return result;
}

unint64_t sub_1A7430B2C()
{
  unint64_t result = qword_1E96F35D8;
  if (!qword_1E96F35D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F35D8);
  }
  return result;
}

unint64_t sub_1A7430B8C()
{
  unint64_t result = qword_1E96F35E0;
  if (!qword_1E96F35E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F35E0);
  }
  return result;
}

unint64_t sub_1A7430BE4()
{
  unint64_t result = qword_1E96F35E8;
  if (!qword_1E96F35E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F35E8);
  }
  return result;
}

unint64_t sub_1A7430C40()
{
  unint64_t result = qword_1E96F35F0;
  if (!qword_1E96F35F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F35F0);
  }
  return result;
}

unint64_t sub_1A7430C9C()
{
  unint64_t result = qword_1E96F35F8;
  if (!qword_1E96F35F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F35F8);
  }
  return result;
}

uint64_t sub_1A7430CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A74310DC(a1, a2, a3, (uint64_t (*)(void))sub_1A7430D1C, (uint64_t (*)(void))sub_1A742ACCC);
}

unint64_t sub_1A7430D1C()
{
  unint64_t result = qword_1EB7043E0;
  if (!qword_1EB7043E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7043E0);
  }
  return result;
}

unint64_t sub_1A7430D74()
{
  unint64_t result = qword_1EB7052B8;
  if (!qword_1EB7052B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7052B8);
  }
  return result;
}

unint64_t sub_1A7430DCC()
{
  unint64_t result = qword_1EB7052B0;
  if (!qword_1EB7052B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7052B0);
  }
  return result;
}

uint64_t sub_1A7430E20()
{
  return sub_1A72D99AC(&qword_1EB7044E8, &qword_1EB7044E0);
}

unint64_t sub_1A7430E50(uint64_t a1)
{
  unint64_t result = sub_1A74302F4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A7430E7C()
{
  unint64_t result = qword_1E96F3600;
  if (!qword_1E96F3600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3600);
  }
  return result;
}

uint64_t sub_1A7430ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A74310DC(a1, a2, a3, (uint64_t (*)(void))sub_1A7430EFC, (uint64_t (*)(void))sub_1A742B3D0);
}

unint64_t sub_1A7430EFC()
{
  unint64_t result = qword_1EB7043F0;
  if (!qword_1EB7043F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7043F0);
  }
  return result;
}

unint64_t sub_1A7430F54()
{
  unint64_t result = qword_1EB7052D0;
  if (!qword_1EB7052D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7052D0);
  }
  return result;
}

unint64_t sub_1A7430FAC()
{
  unint64_t result = qword_1EB7052C8;
  if (!qword_1EB7052C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7052C8);
  }
  return result;
}

uint64_t sub_1A7431000()
{
  return sub_1A72D99AC(&qword_1EB7044F8, &qword_1EB7044F0);
}

unint64_t sub_1A7431030(uint64_t a1)
{
  unint64_t result = sub_1A7430348();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A743105C()
{
  unint64_t result = qword_1E96F3608;
  if (!qword_1E96F3608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3608);
  }
  return result;
}

uint64_t sub_1A74310B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A74310DC(a1, a2, a3, (uint64_t (*)(void))sub_1A7431118, (uint64_t (*)(void))sub_1A7430190);
}

uint64_t sub_1A74310DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A7431118()
{
  unint64_t result = qword_1EB704238;
  if (!qword_1EB704238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704238);
  }
  return result;
}

unint64_t sub_1A7431170()
{
  unint64_t result = qword_1EB7052A0;
  if (!qword_1EB7052A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7052A0);
  }
  return result;
}

unint64_t sub_1A74311C8()
{
  unint64_t result = qword_1EB705298;
  if (!qword_1EB705298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705298);
  }
  return result;
}

uint64_t sub_1A743121C()
{
  return sub_1A72D99AC(&qword_1EB7044D8, &qword_1EB7044D0);
}

unint64_t sub_1A743124C(uint64_t a1)
{
  unint64_t result = sub_1A7430940();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A7431278()
{
  unint64_t result = qword_1EB700F98;
  if (!qword_1EB700F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700F98);
  }
  return result;
}

uint64_t dispatch thunk of REMSuggestedAttributesHarvesterType.harvestAttributes(for:elector:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of REMSuggestedAttributesHarvesterType.extractMentions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of REMSuggestedAttributesHarvesterType.feedback(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))() & 1;
}

uint64_t dispatch thunk of REMSuggestedAttributesHarvesterType.postSuggestionAnalytics(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of REMSuggestedAttributesHarvesterType.recordSuggestion(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester()
{
  return self;
}

uint64_t method lookup function for REMSuggestedAttributesHarvester(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMSuggestedAttributesHarvester);
}

uint64_t dispatch thunk of REMSuggestedAttributesHarvester.__allocating_init(suggestedAttributesPerformer:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t destroy for REMSuggestedAttributesHarvester.Request(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMSuggestedAttributesHarvester.Request(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  id v5 = *(void **)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_WORD *)(a1 + 97) = *(_WORD *)(a2 + 97);
  swift_bridgeObjectRetain();
  swift_retain();
  id v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesHarvester.Request(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a1 + 24);
  id v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  id v6 = v5;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v7 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v9;
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  return a1;
}

__n128 __swift_memcpy99_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_DWORD *)(a1 + 95) = *(_DWORD *)((char *)a2 + 95);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for REMSuggestedAttributesHarvester.Request(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  uint64_t v4 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesHarvester.Request(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 99)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.Request(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 98) = 0;
    *(_WORD *)(result + 96) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 99) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 99) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Request()
{
  return &type metadata for REMSuggestedAttributesHarvester.Request;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesHarvester.Request.CoreBehavior(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.Request.CoreBehavior(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Request.CoreBehavior()
{
  return &type metadata for REMSuggestedAttributesHarvester.Request.CoreBehavior;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Request.Embedding()
{
  return &type metadata for REMSuggestedAttributesHarvester.Request.Embedding;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.Request.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *__n128 result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74318C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Request.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.Request.CodingKeys;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMSuggestedAttributesHarvester.MentionsExtractionRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    unsigned int v6 = (void *)a2[2];
    a1[2] = (uint64_t)v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1A7571BC0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    id v12 = v6;
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for REMSuggestedAttributesHarvester.MentionsExtractionRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1A7571BC0();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for REMSuggestedAttributesHarvester.MentionsExtractionRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)a2[2];
  a1[2] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A7571BC0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  id v11 = v5;
  v10(v7, v8, v9);
  return a1;
}

void *assignWithCopy for REMSuggestedAttributesHarvester.MentionsExtractionRequest(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  id v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1A7571BC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for REMSuggestedAttributesHarvester.MentionsExtractionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for REMSuggestedAttributesHarvester.MentionsExtractionRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1A7571BC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesHarvester.MentionsExtractionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A7431CF8);
}

uint64_t sub_1A7431CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A7571BC0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.MentionsExtractionRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A7431DBC);
}

uint64_t sub_1A7431DBC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A7571BC0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A7431E64()
{
  uint64_t result = sub_1A7571BC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.FeedbackRequest()
{
  return &type metadata for REMSuggestedAttributesHarvester.FeedbackRequest;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest()
{
  return &type metadata for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest;
}

void destroy for REMSuggestedAttributesHarvester.RecordSuggestionRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for REMSuggestedAttributesHarvester.RecordSuggestionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  unint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesHarvester.RecordSuggestionRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  unint64_t v4 = *(void **)(a2 + 24);
  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for REMSuggestedAttributesHarvester.RecordSuggestionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.RecordSuggestionRequest()
{
  return &type metadata for REMSuggestedAttributesHarvester.RecordSuggestionRequest;
}

uint64_t destroy for REMSuggestedAttributesHarvester.Response(uint64_t a1)
{
  sub_1A73172BC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  sub_1A73172BC(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(unsigned char *)(a1 + 120));
  uint64_t v2 = *(void *)(a1 + 128);
  uint64_t v3 = *(void *)(a1 + 136);
  uint64_t v4 = *(void *)(a1 + 144);
  uint64_t v5 = *(void *)(a1 + 152);
  uint64_t v6 = *(void *)(a1 + 160);
  uint64_t v7 = *(void *)(a1 + 168);
  uint64_t v8 = *(void *)(a1 + 176);
  char v9 = *(unsigned char *)(a1 + 184);

  return sub_1A73172BC(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t initializeWithCopy for REMSuggestedAttributesHarvester.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  sub_1A7317270(*(void *)a2, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  uint64_t v12 = *(void *)(v2 + 64);
  uint64_t v13 = *(void *)(v2 + 72);
  uint64_t v14 = *(void *)(v2 + 80);
  uint64_t v15 = *(void *)(v2 + 88);
  uint64_t v16 = *(void *)(v2 + 96);
  uint64_t v17 = *(void *)(v2 + 104);
  uint64_t v18 = *(void *)(v2 + 112);
  char v19 = *(unsigned char *)(v2 + 120);
  sub_1A7317270(v12, v13, v14, v15, v16, v17, v18, v19);
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(unsigned char *)(a1 + 120) = v19;
  uint64_t v20 = *(void *)(v2 + 128);
  uint64_t v21 = *(void *)(v2 + 136);
  uint64_t v22 = *(void *)(v2 + 144);
  uint64_t v23 = *(void *)(v2 + 152);
  uint64_t v24 = *(void *)(v2 + 160);
  uint64_t v25 = *(void *)(v2 + 168);
  uint64_t v26 = *(void *)(v2 + 176);
  LOBYTE(v2) = *(unsigned char *)(v2 + 184);
  sub_1A7317270(v20, v21, v22, v23, v24, v25, v26, v2);
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v23;
  *(void *)(a1 + 160) = v24;
  *(void *)(a1 + 168) = v25;
  *(void *)(a1 + 176) = v26;
  *(unsigned char *)(a1 + 184) = v2;
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesHarvester.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  sub_1A7317270(*(void *)a2, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  char v19 = *(unsigned char *)(a1 + 56);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  sub_1A73172BC(v12, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v20 = *(void *)(v2 + 64);
  uint64_t v21 = *(void *)(v2 + 72);
  uint64_t v22 = *(void *)(v2 + 80);
  uint64_t v23 = *(void *)(v2 + 88);
  uint64_t v24 = *(void *)(v2 + 96);
  uint64_t v25 = *(void *)(v2 + 104);
  uint64_t v26 = *(void *)(v2 + 112);
  char v27 = *(unsigned char *)(v2 + 120);
  sub_1A7317270(v20, v21, v22, v23, v24, v25, v26, v27);
  uint64_t v28 = *(void *)(a1 + 64);
  uint64_t v29 = *(void *)(a1 + 72);
  uint64_t v30 = *(void *)(a1 + 80);
  uint64_t v31 = *(void *)(a1 + 88);
  uint64_t v32 = *(void *)(a1 + 96);
  uint64_t v33 = *(void *)(a1 + 104);
  uint64_t v34 = *(void *)(a1 + 112);
  char v35 = *(unsigned char *)(a1 + 120);
  *(void *)(a1 + 64) = v20;
  *(void *)(a1 + 72) = v21;
  *(void *)(a1 + 80) = v22;
  *(void *)(a1 + 88) = v23;
  *(void *)(a1 + 96) = v24;
  *(void *)(a1 + 104) = v25;
  *(void *)(a1 + 112) = v26;
  *(unsigned char *)(a1 + 120) = v27;
  sub_1A73172BC(v28, v29, v30, v31, v32, v33, v34, v35);
  uint64_t v36 = *(void *)(v2 + 128);
  uint64_t v37 = *(void *)(v2 + 136);
  uint64_t v38 = *(void *)(v2 + 144);
  uint64_t v39 = *(void *)(v2 + 152);
  uint64_t v40 = *(void *)(v2 + 160);
  uint64_t v41 = *(void *)(v2 + 168);
  uint64_t v42 = *(void *)(v2 + 176);
  LOBYTE(v2) = *(unsigned char *)(v2 + 184);
  sub_1A7317270(v36, v37, v38, v39, v40, v41, v42, v2);
  uint64_t v43 = *(void *)(a1 + 128);
  uint64_t v44 = *(void *)(a1 + 136);
  uint64_t v45 = *(void *)(a1 + 144);
  uint64_t v46 = *(void *)(a1 + 152);
  uint64_t v47 = *(void *)(a1 + 160);
  uint64_t v48 = *(void *)(a1 + 168);
  uint64_t v49 = *(void *)(a1 + 176);
  char v50 = *(unsigned char *)(a1 + 184);
  *(void *)(a1 + 128) = v36;
  *(void *)(a1 + 136) = v37;
  *(void *)(a1 + 144) = v38;
  *(void *)(a1 + 152) = v39;
  *(void *)(a1 + 160) = v40;
  *(void *)(a1 + 168) = v41;
  *(void *)(a1 + 176) = v42;
  *(unsigned char *)(a1 + 184) = v2;
  sub_1A73172BC(v43, v44, v45, v46, v47, v48, v49, v50);
  return a1;
}

__n128 __swift_memcpy185_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(_OWORD *)(a1 + 169) = *(long long *)((char *)a2 + 169);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for REMSuggestedAttributesHarvester.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 48);
  char v5 = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  char v13 = *(unsigned char *)(a1 + 56);
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = v5;
  sub_1A73172BC(v6, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = *(void *)(a2 + 112);
  char v16 = *(unsigned char *)(a2 + 120);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 72);
  uint64_t v19 = *(void *)(a1 + 80);
  uint64_t v20 = *(void *)(a1 + 88);
  uint64_t v21 = *(void *)(a1 + 96);
  uint64_t v22 = *(void *)(a1 + 104);
  uint64_t v23 = *(void *)(a1 + 112);
  char v24 = *(unsigned char *)(a1 + 120);
  long long v25 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v25;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = v15;
  *(unsigned char *)(a1 + 120) = v16;
  sub_1A73172BC(v17, v18, v19, v20, v21, v22, v23, v24);
  uint64_t v26 = *(void *)(a2 + 176);
  char v27 = *(unsigned char *)(a2 + 184);
  uint64_t v28 = *(void *)(a1 + 128);
  uint64_t v29 = *(void *)(a1 + 136);
  uint64_t v30 = *(void *)(a1 + 144);
  uint64_t v31 = *(void *)(a1 + 152);
  uint64_t v32 = *(void *)(a1 + 160);
  uint64_t v33 = *(void *)(a1 + 168);
  uint64_t v34 = *(void *)(a1 + 176);
  char v35 = *(unsigned char *)(a1 + 184);
  long long v36 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v36;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = v26;
  *(unsigned char *)(a1 + 184) = v27;
  sub_1A73172BC(v28, v29, v30, v31, v32, v33, v34, v35);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesHarvester.Response(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 185)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.Response(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 184) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 185) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 185) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Response()
{
  return &type metadata for REMSuggestedAttributesHarvester.Response;
}

uint64_t destroy for REMSuggestedAttributesHarvester.MentionsExtractionResponse(uint64_t a1)
{
  return sub_1A73172BC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
}

uint64_t initializeWithCopy for REMSuggestedAttributesHarvester.MentionsExtractionResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 56);
  sub_1A7317270(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesHarvester.MentionsExtractionResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 56);
  sub_1A7317270(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  char v18 = *(unsigned char *)(a1 + 56);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  sub_1A73172BC(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for REMSuggestedAttributesHarvester.MentionsExtractionResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  char v4 = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  char v12 = *(unsigned char *)(a1 + 56);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 56) = v4;
  sub_1A73172BC(v5, v7, v6, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesHarvester.MentionsExtractionResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.MentionsExtractionResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionResponse()
{
  return &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionResponse;
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.BooleanResponse(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74328B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.BooleanResponse()
{
  return &type metadata for REMSuggestedAttributesHarvester.BooleanResponse;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesHarvester.CachedSuggestionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.CachedSuggestionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7432A44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.CachedSuggestionType()
{
  return &type metadata for REMSuggestedAttributesHarvester.CachedSuggestionType;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.BooleanResponse.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.BooleanResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionResponse.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Response.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.Response.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.RecordSuggestionRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7432B7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.RecordSuggestionRequest.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.RecordSuggestionRequest.CodingKeys;
}

unsigned char *_s19ReminderKitInternal31REMSuggestedAttributesHarvesterC7RequestV9EmbeddingV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A7432C50);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.CodingKeys;
}

unsigned char *_s19ReminderKitInternal31REMSuggestedAttributesHarvesterC7RequestV12CoreBehaviorV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7432D54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.FeedbackRequest.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.FeedbackRequest.CodingKeys;
}

unsigned char *_s19ReminderKitInternal31REMSuggestedAttributesHarvesterC8ResponseV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7432E58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionRequest.CodingKeys;
}

unint64_t sub_1A7432E94()
{
  unint64_t result = qword_1E96F3610;
  if (!qword_1E96F3610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3610);
  }
  return result;
}

unint64_t sub_1A7432EEC()
{
  unint64_t result = qword_1E96F3618;
  if (!qword_1E96F3618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3618);
  }
  return result;
}

unint64_t sub_1A7432F44()
{
  unint64_t result = qword_1E96F3620;
  if (!qword_1E96F3620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3620);
  }
  return result;
}

unint64_t sub_1A7432F9C()
{
  unint64_t result = qword_1E96F3628;
  if (!qword_1E96F3628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3628);
  }
  return result;
}

unint64_t sub_1A7432FF4()
{
  unint64_t result = qword_1E96F3630;
  if (!qword_1E96F3630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3630);
  }
  return result;
}

unint64_t sub_1A743304C()
{
  unint64_t result = qword_1E96F3638;
  if (!qword_1E96F3638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3638);
  }
  return result;
}

unint64_t sub_1A74330A4()
{
  unint64_t result = qword_1E96F3640;
  if (!qword_1E96F3640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3640);
  }
  return result;
}

unint64_t sub_1A74330FC()
{
  unint64_t result = qword_1EB7027E0;
  if (!qword_1EB7027E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7027E0);
  }
  return result;
}

unint64_t sub_1A7433154()
{
  unint64_t result = qword_1EB7027D8;
  if (!qword_1EB7027D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7027D8);
  }
  return result;
}

unint64_t sub_1A74331AC()
{
  unint64_t result = qword_1EB705288;
  if (!qword_1EB705288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705288);
  }
  return result;
}

unint64_t sub_1A7433204()
{
  unint64_t result = qword_1EB705280;
  if (!qword_1EB705280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705280);
  }
  return result;
}

unint64_t sub_1A743325C()
{
  unint64_t result = qword_1EB7052E8[0];
  if (!qword_1EB7052E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB7052E8);
  }
  return result;
}

unint64_t sub_1A74332B4()
{
  unint64_t result = qword_1EB7052E0;
  if (!qword_1EB7052E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7052E0);
  }
  return result;
}

unint64_t sub_1A743330C()
{
  unint64_t result = qword_1EB702800;
  if (!qword_1EB702800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702800);
  }
  return result;
}

unint64_t sub_1A7433364()
{
  unint64_t result = qword_1EB7027F8;
  if (!qword_1EB7027F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7027F8);
  }
  return result;
}

unint64_t sub_1A74333BC()
{
  unint64_t result = qword_1EB702818;
  if (!qword_1EB702818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702818);
  }
  return result;
}

unint64_t sub_1A7433414()
{
  unint64_t result = qword_1EB702810;
  if (!qword_1EB702810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702810);
  }
  return result;
}

unint64_t sub_1A743346C()
{
  unint64_t result = qword_1EB7057A0;
  if (!qword_1EB7057A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7057A0);
  }
  return result;
}

unint64_t sub_1A74334C4()
{
  unint64_t result = qword_1EB705798;
  if (!qword_1EB705798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705798);
  }
  return result;
}

unint64_t sub_1A743351C()
{
  unint64_t result = qword_1EB7051D8;
  if (!qword_1EB7051D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7051D8);
  }
  return result;
}

unint64_t sub_1A7433574()
{
  unint64_t result = qword_1EB7051D0;
  if (!qword_1EB7051D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7051D0);
  }
  return result;
}

uint64_t sub_1A74335C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265646E696D6572 && a2 == 0xED0000656C746954;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44497473696CLL && a2 == 0xE600000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A75A2790)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A7433738(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B63616264656566 && a2 == 0xEE00726F74636146)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A7433848(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974736567677573 && a2 == 0xEF65756C61566E6FLL;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00657079546E6FLL || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E696C65706970 && a2 == 0xE800000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A7433A50(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974736972756568 && a2 == 0xEF746C7573655263;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69646465626D65 && a2 == 0xEF746C7573655267 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A75A27B0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_1A7433BCC()
{
  unint64_t result = qword_1EB7027E8;
  if (!qword_1EB7027E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7027E8);
  }
  return result;
}

uint64_t MersenneTwister.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  unint64_t v1 = sub_1A7433FA8(0x7FFFFFFFFFFFFFFFuLL);
  if ((v1 & 0x8000000000000000) == 0)
  {
    id v2 = objc_msgSend(objc_allocWithZone((Class)RMDMersenneTwisterRandomSource), sel_initWithSeed_, v1);
    if (v2)
    {
      *(void *)(v0 + 16) = v2;
      return v0;
    }
    __break(1u);
  }
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t MersenneTwister.init()()
{
  unint64_t v1 = sub_1A7433FA8(0x7FFFFFFFFFFFFFFFuLL);
  if ((v1 & 0x8000000000000000) == 0)
  {
    id v2 = objc_msgSend(objc_allocWithZone((Class)RMDMersenneTwisterRandomSource), sel_initWithSeed_, v1);
    if (v2)
    {
      *(void *)(v0 + 16) = v2;
      return v0;
    }
    __break(1u);
  }
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t MersenneTwister.__allocating_init(seed:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(objc_allocWithZone((Class)RMDMersenneTwisterRandomSource), sel_initWithSeed_, a1);
    if (v4)
    {
      *(void *)(v3 + 16) = v4;
      return v3;
    }
    __break(1u);
  }
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t MersenneTwister.init(seed:)(uint64_t a1)
{
  if ((a1 & 0x8000000000000000) == 0)
  {
    id v2 = objc_msgSend(objc_allocWithZone((Class)RMDMersenneTwisterRandomSource), sel_initWithSeed_, a1);
    if (v2)
    {
      *(void *)(v1 + 16) = v2;
      return v1;
    }
    __break(1u);
  }
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

id sub_1A7433F2C()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_nextInt);
}

uint64_t MersenneTwister.deinit()
{
  return v0;
}

uint64_t MersenneTwister.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 24, 7);
}

id sub_1A7433F94()
{
  return objc_msgSend(*(id *)(*(void *)v0 + 16), sel_nextInt);
}

unint64_t sub_1A7433FA8(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x1AD0CD350](&v3, 8);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x1AD0CD350](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for MersenneTwister()
{
  return self;
}

uint64_t method lookup function for MersenneTwister(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MersenneTwister);
}

uint64_t dispatch thunk of MersenneTwister.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MersenneTwister.__allocating_init(seed:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of MersenneTwister.next()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

Swift::Void __swiftcall Dictionary.merge(takingValuesIn:)(Swift::OpaquePointer takingValuesIn)
{
}

uint64_t sub_1A7434124@<X0>(uint64_t a1@<X8>)
{
  return sub_1A74341D0(a1);
}

uint64_t Dictionary.merging(takingValuesIn:)()
{
  return sub_1A7572470();
}

uint64_t sub_1A74341D0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v1 + 24) - 8) + 16))(a1);
}

uint64_t Dictionary.removingNils<A>()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7573210();
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  long long v61 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v76 = *(void *)(a3 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  long long v60 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = *(void *)(a2 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  long long v59 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v45 - v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v19 = sub_1A7573210();
  unint64_t v75 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v73 = (char *)&v45 - v23;
  uint64_t v77 = sub_1A7572390();
  uint64_t v74 = (void (**)(char *, char *, uint64_t))sub_1A7572440();
  uint64_t v56 = sub_1A75724A0();
  sub_1A7572420();
  uint64_t v24 = *(void *)(a1 + 64);
  uint64_t v49 = a1 + 64;
  uint64_t v25 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & v24;
  unint64_t v28 = (unint64_t)(v25 + 63) >> 6;
  uint64_t v74 = (void (**)(char *, char *, uint64_t))(v65 + 16);
  uint64_t v62 = v66 + 16;
  uint64_t v71 = (void (**)(char *, char *, uint64_t))(v75 + 32);
  uint64_t v72 = TupleTypeMetadata2 - 8;
  uint64_t v70 = (void (**)(char *, char *, uint64_t))(v65 + 32);
  uint64_t v69 = (void (**)(char *, char *, uint64_t))(v66 + 32);
  uint64_t v68 = (unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
  uint64_t v55 = (void (**)(char *, char *, uint64_t))(v76 + 32);
  uint64_t v54 = (void (**)(char *, char *, uint64_t))(v76 + 16);
  uint64_t v53 = (void (**)(char *, void, uint64_t, uint64_t))(v76 + 56);
  uint64_t v52 = (void (**)(char *, uint64_t))(v76 + 8);
  uint64_t v67 = (void (**)(char *, uint64_t))(v65 + 8);
  uint64_t v51 = (uint64_t (**)(char *, uint64_t))(v66 + 8);
  unint64_t v46 = v28 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v30 = 0;
  int64_t v50 = v28;
  unint64_t v47 = v28 - 4;
  uint64_t v64 = result;
  uint64_t v48 = result + 96;
  uint64_t v63 = v6;
  uint64_t v57 = TupleTypeMetadata2;
  uint64_t v58 = v19;
  while (1)
  {
    if (v27)
    {
      unint64_t v75 = v30;
      uint64_t v76 = (v27 - 1) & v27;
      unint64_t v31 = __clz(__rbit64(v27)) | (v30 << 6);
      goto LABEL_8;
    }
    int64_t v43 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v43 >= v50)
    {
      unint64_t v75 = v30;
      uint64_t v76 = 0;
      uint64_t v33 = 1;
      goto LABEL_9;
    }
    unint64_t v44 = *(void *)(v49 + 8 * v43);
    uint64_t v34 = v73;
    if (v44) {
      goto LABEL_16;
    }
    if ((uint64_t)(v30 + 2) >= v50)
    {
      unint64_t v75 = v30 + 1;
      uint64_t v76 = 0;
      uint64_t v33 = 1;
    }
    else
    {
      unint64_t v44 = *(void *)(v49 + 8 * (v30 + 2));
      if (v44)
      {
        int64_t v43 = v30 + 2;
LABEL_16:
        unint64_t v75 = v43;
        uint64_t v76 = (v44 - 1) & v44;
        unint64_t v31 = __clz(__rbit64(v44)) + (v43 << 6);
LABEL_8:
        uint64_t v32 = v64;
        (*(void (**)(char *, unint64_t, uint64_t))(v65 + 16))(v22, *(void *)(v64 + 48) + *(void *)(v65 + 72) * v31, a2);
        uint64_t v6 = v63;
        (*(void (**)(char *, unint64_t, uint64_t))(v66 + 16))(&v22[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v32 + 56) + *(void *)(v66 + 72) * v31, v63);
        uint64_t v33 = 0;
LABEL_9:
        uint64_t v34 = v73;
        goto LABEL_10;
      }
      int64_t v43 = v30 + 3;
      if ((uint64_t)(v30 + 3) >= v50)
      {
        unint64_t v75 = v30 + 2;
        uint64_t v76 = 0;
        uint64_t v33 = 1;
      }
      else
      {
        unint64_t v44 = *(void *)(v49 + 8 * v43);
        if (v44) {
          goto LABEL_16;
        }
        while (v47 != v30)
        {
          unint64_t v44 = *(void *)(v48 + 8 * v30++);
          if (v44)
          {
            int64_t v43 = v30 + 3;
            goto LABEL_16;
          }
        }
        uint64_t v76 = 0;
        uint64_t v33 = 1;
        unint64_t v75 = v46;
      }
    }
LABEL_10:
    uint64_t v35 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v22, v33, 1, TupleTypeMetadata2);
    (*v71)(v34, v22, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v34, 1, TupleTypeMetadata2) == 1)
    {
      swift_release();
      return v77;
    }
    long long v36 = &v34[*(int *)(TupleTypeMetadata2 + 48)];
    (*v70)(v17, v34, a2);
    (*v69)(v11, v36, v6);
    if ((*v68)(v11, 1, a3) == 1)
    {
      (*v67)(v17, a2);
      uint64_t result = (*v51)(v11, v6);
    }
    else
    {
      uint64_t v37 = v60;
      (*v55)(v60, v11, a3);
      (*v74)(v59, v17, a2);
      uint64_t v38 = a2;
      uint64_t v39 = v11;
      uint64_t v40 = a3;
      uint64_t v41 = v61;
      (*v54)(v61, v37, v40);
      (*v53)(v41, 0, 1, v40);
      a3 = v40;
      uint64_t v11 = v39;
      a2 = v38;
      sub_1A75724E0();
      uint64_t v42 = v37;
      TupleTypeMetadata2 = v57;
      uint64_t v19 = v58;
      (*v52)(v42, a3);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))*v67)(v17, v38);
    }
    unint64_t v30 = v75;
    unint64_t v27 = v76;
  }
  __break(1u);
  return result;
}

uint64_t Dictionary<>.append(_:toCollectionUnderKey:)(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v53 = a1;
  uint64_t v9 = a3[3];
  uint64_t v50 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v47 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v43 - v14;
  uint64_t v16 = a3[2];
  uint64_t v17 = MEMORY[0x1F4188790](v13);
  unint64_t v46 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v43 - v19;
  uint64_t v49 = v21;
  unint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v45 = v21 + 16;
  v44((char *)&v43 - v19, a2, v16);
  uint64_t v22 = (void *)swift_allocObject();
  uint64_t v22[2] = v16;
  v22[3] = v9;
  uint64_t v51 = a4;
  uint64_t v52 = v9;
  uint64_t v23 = a3[4];
  v22[4] = v23;
  void v22[5] = a4;
  uint64_t v24 = *(void (**)(char *, uint64_t *, uint64_t))(v12 + 16);
  uint64_t v48 = v15;
  v24(v15, v53, AssociatedTypeWitness);
  if ((*v5 & 0xC000000000000001) != 0)
  {
    uint64_t v25 = (uint64_t)v20;
    uint64_t v26 = v5;
    if (__OFADD__(sub_1A7573400(), 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v27 = sub_1A75737E0();
      uint64_t v54 = v27;
      sub_1A7434EFC(v25, v16, v23);
      uint64_t v29 = *(void *)(v27 + 16);
      BOOL v30 = (v28 & 1) == 0;
      uint64_t v31 = v29 + v30;
      if (!__OFADD__(v29, v30))
      {
        char v32 = v28;
        if (*(void *)(v27 + 24) >= v31
          || (uint64_t v33 = sub_1A75737D0(),
              sub_1A74350E0(v31, 1, v33),
              uint64_t v27 = v54,
              sub_1A7434EFC(v25, v16, v23),
              (v32 & 1) == (v34 & 1)))
        {
          *uint64_t v26 = v27;
          uint64_t v20 = (char *)v25;
          if (v32)
          {
LABEL_7:
            swift_bridgeObjectRetain();
LABEL_13:
            swift_bridgeObjectRelease();
            sub_1A7572E90();
            (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v16);
            return swift_release();
          }
LABEL_12:
          swift_bridgeObjectRetain();
          sub_1A7572F00();
          v44(v46, (uint64_t)v20, v16);
          sub_1A75737C0();
          goto LABEL_13;
        }
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v35 = *v5;
  uint64_t v53 = v5;
  uint64_t v54 = v35;
  *uint64_t v5 = 0x8000000000000000;
  sub_1A7434EFC((uint64_t)v20, v16, v23);
  if (__OFADD__(*(void *)(v35 + 16), (v36 & 1) == 0)) {
    goto LABEL_16;
  }
  char v37 = v36;
  sub_1A75737D0();
  char v38 = sub_1A75737A0();
  uint64_t v40 = v53;
  uint64_t v39 = v54;
  if ((v38 & 1) == 0 || (sub_1A7434EFC((uint64_t)v20, v16, v23), (v37 & 1) == (v41 & 1)))
  {
    *uint64_t v40 = v39;
    swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_17:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t sub_1A7434EEC()
{
  return swift_deallocObject();
}

unint64_t sub_1A7434EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7572510();

  return sub_1A7434F58(a1, v6, a2, a3);
}

unint64_t sub_1A7434F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[1] = a1;
  v21[2] = a4;
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v4;
  uint64_t v9 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v10 & ~v9;
  v21[0] = v4 + 64;
  if ((*(void *)(v4 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v9;
    uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    uint64_t v14 = v15;
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v13 - 8);
    do
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v22 + 48) + v16 * v11, a3);
      char v19 = sub_1A75725C0();
      (*v17)(v8, a3);
      if (v19) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v12;
      uint64_t v13 = v18;
    }
    while (((*(void *)(v21[0] + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

uint64_t sub_1A74350E0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v3;
  uint64_t v41 = *(void *)(v17 + 32);
  sub_1A7573930();
  int v42 = a2;
  uint64_t v43 = sub_1A7573900();
  if (*(void *)(v16 + 16))
  {
    char v18 = *(unsigned char *)(v16 + 32);
    uint64_t v19 = *(void *)(v16 + 64);
    char v34 = v3;
    uint64_t v35 = (void *)(v16 + 64);
    uint64_t v20 = 1 << v18;
    uint64_t v21 = -1;
    if (v20 < 64) {
      uint64_t v21 = ~(-1 << v20);
    }
    unint64_t v22 = v21 & v19;
    int64_t v23 = (unint64_t)(v20 + 63) >> 6;
    uint64_t v38 = v7 + 16;
    uint64_t v39 = (void (**)(char *, unint64_t, uint64_t))(v13 + 16);
    uint64_t v40 = v13;
    uint64_t v36 = v7 + 32;
    char v37 = (void (**)(char *, unint64_t, uint64_t))(v13 + 32);
    uint64_t result = swift_retain();
    int64_t v25 = 0;
    while (1)
    {
      if (v22)
      {
        unint64_t v26 = __clz(__rbit64(v22));
        v22 &= v22 - 1;
        unint64_t v27 = v26 | (v25 << 6);
      }
      else
      {
        if (__OFADD__(v25++, 1)) {
          goto LABEL_29;
        }
        uint64_t v29 = v35;
        if (v25 >= v23)
        {
LABEL_20:
          swift_release();
          if ((v42 & 1) == 0)
          {
            uint64_t result = swift_release();
            uint64_t v4 = v34;
            goto LABEL_27;
          }
          uint64_t v33 = 1 << *(unsigned char *)(v16 + 32);
          if (v33 >= 64) {
            bzero(v29, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          }
          else {
            void *v29 = -1 << v33;
          }
          uint64_t v4 = v34;
          *(void *)(v16 + 16) = 0;
          break;
        }
        unint64_t v30 = v35[v25];
        if (!v30)
        {
          if (++v25 >= v23) {
            goto LABEL_20;
          }
          unint64_t v30 = v35[v25];
          int64_t v31 = v25;
          if (!v30)
          {
            while (1)
            {
              int64_t v25 = v31 + 1;
              if (__OFADD__(v31, 1)) {
                break;
              }
              if (v25 >= v23) {
                goto LABEL_20;
              }
              unint64_t v30 = v35[v25];
              ++v31;
              if (v30) {
                goto LABEL_17;
              }
            }
            __break(1u);
LABEL_29:
            __break(1u);
            return result;
          }
        }
LABEL_17:
        unint64_t v22 = (v30 - 1) & v30;
        unint64_t v27 = __clz(__rbit64(v30)) + (v25 << 6);
      }
      unint64_t v32 = *(void *)(v16 + 48) + *(void *)(v40 + 72) * v27;
      if (v42)
      {
        (*v37)(v15, v32, v12);
        (*(void (**)(char *, unint64_t, uint64_t))(v7 + 32))(v10, *(void *)(v16 + 56) + *(void *)(v7 + 72) * v27, v6);
      }
      else
      {
        (*v39)(v15, v32, v12);
        (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v10, *(void *)(v16 + 56) + *(void *)(v7 + 72) * v27, v6);
      }
      uint64_t result = sub_1A75737B0();
    }
  }
  uint64_t result = swift_release();
LABEL_27:
  *uint64_t v4 = v43;
  return result;
}

unint64_t REMAnalyticsEvent.id.getter()
{
  uint64_t v1 = type metadata accessor for REMAnalyticsEvent();
  MEMORY[0x1F4188790](v1);
  unint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A73E96BC(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t result = 0xD00000000000001BLL;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v6 = (uint64_t *)&unk_1EB701650;
      goto LABEL_5;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v6 = (uint64_t *)&unk_1E96F3648;
      goto LABEL_5;
    case 3:
      sub_1A7435730((uint64_t)v3);
      return 0xD00000000000001ELL;
    case 4:
      return result;
    case 5:
      sub_1A7435730((uint64_t)v3);
      return 0xD00000000000002BLL;
    case 6:
      sub_1A7435730((uint64_t)v3);
      return 0xD000000000000023;
    case 7:
      sub_1A7435730((uint64_t)v3);
      return 0xD000000000000035;
    case 8:
    case 9:
      sub_1A7435730((uint64_t)v3);
      return 0xD000000000000024;
    case 10:
      return 0xD00000000000002BLL;
    case 11:
      return 0xD000000000000030;
    case 12:
      sub_1A7435730((uint64_t)v3);
      return 0xD000000000000020;
    case 13:
      return 0xD000000000000023;
    case 14:
      return 0xD000000000000025;
    default:
      swift_bridgeObjectRelease();
      uint64_t v6 = (uint64_t *)&unk_1EB701630;
LABEL_5:
      uint64_t v7 = (uint64_t)&v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(v6) + 64)];
      swift_bridgeObjectRelease();
      sub_1A731D4F8(v7);
      return 0xD000000000000021;
  }
}

uint64_t type metadata accessor for REMAnalyticsEvent()
{
  uint64_t result = qword_1EB701E28;
  if (!qword_1EB701E28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A7435730(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for REMAnalyticsEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t REMAnalyticsEvent.isUsed.getter()
{
  REMAnalyticsEvent.id.getter();
  uint64_t v0 = (void *)sub_1A75725E0();
  uint64_t IsEventUsed = AnalyticsIsEventUsed();
  swift_bridgeObjectRelease();

  return IsEventUsed;
}

uint64_t REMAnalyticsEvent.payload.getter()
{
  uint64_t v1 = sub_1A7571DE0();
  uint64_t v174 = *(void (***)(void, void, void))(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v3 = (char *)v169 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A7571E00();
  uint64_t v172 = *(void *)(v4 - 8);
  uint64_t v173 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v169 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A7571B60();
  uint64_t v175 = *(void *)(v7 - 8);
  uint64_t v176 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v171 = (char *)v169 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v169 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)v169 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v169 - v16;
  uint64_t v18 = type metadata accessor for REMAnalyticsEvent();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (unsigned __int8 *)v169 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = swift_allocObject();
  uint64_t v177 = v21;
  *(void *)(v21 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v178 = (unint64_t *)(v21 + 16);
  sub_1A73E96BC(v0, (uint64_t)v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      __int16 v68 = *(_WORD *)v20;
      uint64_t v69 = *((void *)v20 + 1);
      uint64_t v70 = *((void *)v20 + 2);
      uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701650);
      uint64_t v72 = (uint64_t)&v20[*(int *)(v71 + 64)];
      uint64_t v73 = (uint64_t *)&v20[*(int *)(v71 + 80)];
      uint64_t v74 = *v73;
      uint64_t v75 = v73[1];
      sub_1A731D558(v72, (uint64_t)v17);
      LOWORD(v181[0]) = v68;
      unint64_t v76 = sub_1A7437C88();
      sub_1A74371C8(v76, v77, 0, 0, v69, v70, (uint64_t)v17, v74, v75, v177);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 2u:
      int v78 = *v20;
      uint64_t v80 = *((void *)v20 + 1);
      uint64_t v79 = *((void *)v20 + 2);
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3648);
      uint64_t v82 = (uint64_t *)&v20[*(int *)(v81 + 80)];
      uint64_t v84 = *v82;
      uint64_t v83 = v82[1];
      sub_1A731D558((uint64_t)&v20[*(int *)(v81 + 64)], (uint64_t)v15);
      unint64_t v85 = 0xD000000000000016;
      if (v78 == 1)
      {
        unint64_t v85 = 0xD00000000000001ALL;
        unint64_t v86 = 0x80000001A75A2C40;
      }
      else
      {
        unint64_t v86 = 0x80000001A75A2C20;
      }
      if (v78) {
        uint64_t v87 = v85;
      }
      else {
        uint64_t v87 = 0x694C657461657263;
      }
      if (v78) {
        uint64_t v88 = v86;
      }
      else {
        uint64_t v88 = 0xEF7473696C2E7473;
      }
      sub_1A74371C8(v87, v88, 0, 0, v80, v79, (uint64_t)v15, v84, v83, v177);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A731D4F8((uint64_t)v15);
      goto LABEL_53;
    case 3u:
      uint64_t v35 = *((void *)v20 + 7);
      uint64_t v36 = *((void *)v20 + 8);
      uint64_t v37 = *((void *)v20 + 9);
      uint64_t v175 = *((void *)v20 + 6);
      uint64_t v176 = v36;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700588);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A7578790;
      strcpy((char *)(inited + 32), "appIntentName");
      *(_WORD *)(inited + 46) = -4864;
      uint64_t v39 = sub_1A75725E0();
      swift_bridgeObjectRelease();
      *(void *)(inited + 48) = v39;
      *(void *)(inited + 56) = 0x656372756F73;
      *(void *)(inited + 64) = 0xE600000000000000;
      uint64_t v40 = sub_1A75725E0();
      swift_bridgeObjectRelease();
      *(void *)(inited + 72) = v40;
      *(void *)(inited + 80) = 0xD000000000000011;
      *(void *)(inited + 88) = 0x80000001A75A2BE0;
      uint64_t v41 = sub_1A75725E0();
      swift_bridgeObjectRelease();
      *(void *)(inited + 96) = v41;
      unint64_t v42 = sub_1A72B1658(inited);
      uint64_t v43 = v178;
      *uint64_t v178 = v42;
      swift_bridgeObjectRelease();
      if (v35)
      {
        uint64_t v44 = sub_1A75725E0();
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v181[0] = *v43;
        unint64_t *v43 = 0x8000000000000000;
        sub_1A72D726C(v44, 0xD000000000000011, 0x80000001A75A2C00, isUniquelyReferenced_nonNull_native);
        unint64_t *v43 = v181[0];
        swift_bridgeObjectRelease();
      }
      if (!v37) {
        goto LABEL_53;
      }
      uint64_t v46 = sub_1A75725E0();
      swift_bridgeObjectRelease();
      unint64_t v47 = v178;
      char v48 = swift_isUniquelyReferenced_nonNull_native();
      v181[0] = *v47;
      *unint64_t v47 = 0x8000000000000000;
      uint64_t v49 = v46;
      uint64_t v50 = 0x7463617265746E69;
      uint64_t v51 = 0xEF65646F4D6E6F69;
      goto LABEL_43;
    case 4u:
      uint64_t v89 = *((void *)v20 + 7);
      LODWORD(v176) = v20[64];
      uint64_t v90 = *((void *)v20 + 9);
      v169[0] = v89;
      v169[1] = v90;
      v169[2] = *((void *)v20 + 10);
      int v170 = v20[88];
      uint64_t v91 = *((void *)v20 + 13);
      uint64_t v171 = (char *)*((void *)v20 + 12);
      uint64_t v172 = v91;
      LODWORD(v173) = v20[112];
      LODWORD(v174) = v20[113];
      uint64_t v175 = *((void *)v20 + 15);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700588);
      uint64_t v92 = swift_allocObject();
      *(_OWORD *)(v92 + 16) = xmmword_1A75869F0;
      *(void *)(v92 + 32) = 0x756F635F62726576;
      *(void *)(v92 + 40) = 0xEA0000000000746ELL;
      *(void *)(v92 + 48) = sub_1A7572D00();
      *(void *)(v92 + 56) = 0x756F635F6E756F6ELL;
      *(void *)(v92 + 64) = 0xEA0000000000746ELL;
      *(void *)(v92 + 72) = sub_1A7572D00();
      *(void *)(v92 + 80) = 0x6E756F635F6A6461;
      *(void *)(v92 + 88) = 0xE900000000000074;
      *(void *)(v92 + 96) = sub_1A7572D00();
      *(void *)(v92 + 104) = 0x6E756F635F766461;
      *(void *)(v92 + 112) = 0xE900000000000074;
      *(void *)(v92 + 120) = sub_1A7572D00();
      *(void *)(v92 + 128) = 0xD000000000000011;
      *(void *)(v92 + 136) = 0x80000001A75A2B60;
      *(void *)(v92 + 144) = sub_1A7572D00();
      strcpy((char *)(v92 + 152), "creation_time");
      *(_WORD *)(v92 + 166) = -4864;
      *(void *)(v92 + 168) = sub_1A7572D00();
      *(void *)(v92 + 176) = 0x6575645F736168;
      *(void *)(v92 + 184) = 0xE700000000000000;
      *(void *)(v92 + 192) = sub_1A7572B80();
      *(void *)(v92 + 200) = 0xD000000000000010;
      *(void *)(v92 + 208) = 0x80000001A75A2B80;
      *(void *)(v92 + 216) = sub_1A7572D00();
      *(void *)(v92 + 224) = 0xD000000000000014;
      *(void *)(v92 + 232) = 0x80000001A75A2BA0;
      *(void *)(v92 + 240) = sub_1A7572D00();
      strcpy((char *)(v92 + 248), "is_recurrent");
      *(unsigned char *)(v92 + 261) = 0;
      *(_WORD *)(v92 + 262) = -5120;
      *(void *)(v92 + 264) = sub_1A7572B80();
      *(void *)(v92 + 272) = 0x64656767616C66;
      *(void *)(v92 + 280) = 0xE700000000000000;
      *(void *)(v92 + 288) = sub_1A7572D00();
      *(void *)(v92 + 296) = 0x797469726F697270;
      *(void *)(v92 + 304) = 0xE800000000000000;
      *(void *)(v92 + 312) = sub_1A7573240();
      *(void *)(v92 + 320) = 0xD000000000000010;
      *(void *)(v92 + 328) = 0x80000001A75A2BC0;
      *(void *)(v92 + 336) = sub_1A7572B80();
      *(void *)(v92 + 344) = 0x67616D695F736168;
      *(void *)(v92 + 352) = 0xE900000000000065;
      *(void *)(v92 + 360) = sub_1A7572B80();
      strcpy((char *)(v92 + 368), "title_length");
      *(unsigned char *)(v92 + 381) = 0;
      *(_WORD *)(v92 + 382) = -5120;
      *(void *)(v92 + 384) = sub_1A7572D00();
      unint64_t v93 = sub_1A72B1658(v92);
      *uint64_t v178 = v93;
      swift_bridgeObjectRelease();
      if (v176) {
        goto LABEL_53;
      }
      uint64_t v94 = sub_1A7572D00();
      uint64_t v95 = v178;
      char v96 = swift_isUniquelyReferenced_nonNull_native();
      v181[0] = *v95;
      *uint64_t v95 = 0x8000000000000000;
      uint64_t v97 = v94;
      uint64_t v98 = 0x656D69745F657564;
      uint64_t v99 = 0xE800000000000000;
      goto LABEL_31;
    case 5u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700588);
      uint64_t v100 = swift_initStackObject();
      *(_OWORD *)(v100 + 16) = xmmword_1A7578790;
      *(void *)(v100 + 32) = 0x726F68747561;
      *(void *)(v100 + 40) = 0xE600000000000000;
      uint64_t v101 = sub_1A75725E0();
      swift_bridgeObjectRelease();
      *(void *)(v100 + 48) = v101;
      *(void *)(v100 + 56) = 0x6E756F4365766173;
      *(void *)(v100 + 64) = 0xE900000000000074;
      *(void *)(v100 + 72) = sub_1A7572D00();
      *(void *)(v100 + 80) = 0x756F436863746566;
      *(void *)(v100 + 88) = 0xEA0000000000746ELL;
      *(void *)(v100 + 96) = sub_1A7572D00();
      goto LABEL_45;
    case 6u:
      uint64_t v102 = *((void *)v20 + 1);
      uint64_t v175 = *((void *)v20 + 2);
      LODWORD(v176) = v20[25];
      uint64_t v103 = (void (**)(void, void, void))*((void *)v20 + 6);
      uint64_t v173 = v102;
      uint64_t v174 = v103;
      uint64_t v104 = *((void *)v20 + 11);
      uint64_t v172 = *((void *)v20 + 10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700588);
      uint64_t v105 = swift_initStackObject();
      *(_OWORD *)(v105 + 16) = xmmword_1A75808C0;
      *(void *)(v105 + 32) = 0xD000000000000010;
      *(void *)(v105 + 40) = 0x80000001A75A2AE0;
      *(void *)(v105 + 48) = sub_1A7572C10();
      *(void *)(v105 + 56) = 0xD000000000000010;
      *(void *)(v105 + 64) = 0x80000001A75A2B00;
      *(void *)(v105 + 72) = sub_1A7572B80();
      *(void *)(v105 + 80) = 0xD000000000000011;
      *(void *)(v105 + 88) = 0x80000001A75A2A80;
      uint64_t v106 = sub_1A75725E0();
      swift_bridgeObjectRelease();
      *(void *)(v105 + 96) = v106;
      strcpy((char *)(v105 + 104), "loadingReason");
      *(_WORD *)(v105 + 118) = -4864;
      uint64_t v107 = sub_1A75725E0();
      swift_bridgeObjectRelease();
      *(void *)(v105 + 120) = v107;
      *(void *)(v105 + 128) = 0x636F4C6C65646F6DLL;
      *(void *)(v105 + 136) = 0xEB00000000656C61;
      uint64_t v108 = sub_1A75725E0();
      swift_bridgeObjectRelease();
      *(void *)(v105 + 144) = v108;
      unint64_t v109 = sub_1A72B1658(v105);
      uint64_t v110 = v178;
      *uint64_t v178 = v109;
      swift_bridgeObjectRelease();
      if (v104)
      {
        uint64_t v111 = sub_1A75725E0();
        swift_bridgeObjectRelease();
        char v112 = swift_isUniquelyReferenced_nonNull_native();
        v181[0] = *v110;
        unint64_t *v110 = 0x8000000000000000;
        sub_1A72D726C(v111, 0x73654D726F727265, 0xEC00000065676173, v112);
        unint64_t *v110 = v181[0];
        swift_bridgeObjectRelease();
      }
      if (v175)
      {
        uint64_t v113 = sub_1A75725E0();
        swift_bridgeObjectRelease();
        char v114 = swift_isUniquelyReferenced_nonNull_native();
        v181[0] = *v110;
        unint64_t *v110 = 0x8000000000000000;
        sub_1A72D726C(v113, 0xD000000000000015, 0x80000001A75A2B40, v114);
        unint64_t *v110 = v181[0];
        swift_bridgeObjectRelease();
      }
      if (v176 == 2) {
        goto LABEL_53;
      }
      uint64_t v115 = sub_1A7572B80();
      uint64_t v95 = v178;
      char v96 = swift_isUniquelyReferenced_nonNull_native();
      v181[0] = *v95;
      *uint64_t v95 = 0x8000000000000000;
      uint64_t v99 = 0x80000001A75A2B20;
      uint64_t v97 = v115;
      uint64_t v98 = 0xD000000000000011;
LABEL_31:
      sub_1A72D726C(v97, v98, v99, v96);
      *uint64_t v95 = v181[0];
      goto LABEL_51;
    case 7u:
      uint64_t v116 = *((void *)v20 + 1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700588);
      uint64_t v117 = swift_initStackObject();
      *(_OWORD *)(v117 + 16) = xmmword_1A75785A0;
      *(void *)(v117 + 32) = 0xD000000000000013;
      *(void *)(v117 + 40) = 0x80000001A75A2AC0;
      *(void *)(v117 + 48) = sub_1A7572B80();
      unint64_t v118 = sub_1A72B1658(v117);
      uint64_t v119 = v178;
      *uint64_t v178 = v118;
      swift_bridgeObjectRelease();
      if (v116)
      {
        if (*(void *)(v116 + 16))
        {
          v181[0] = v116;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
          sub_1A72E3500();
          sub_1A7572570();
          swift_bridgeObjectRelease();
          uint64_t v120 = (void *)sub_1A75725E0();
          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
        swift_bridgeObjectRelease();
        sub_1A7439254();
      }
      else
      {
        sub_1A7439254();
      }
      uint64_t v120 = (void *)sub_1A75731B0();
LABEL_50:
      id v159 = v120;
      char v160 = swift_isUniquelyReferenced_nonNull_native();
      v181[0] = *v119;
      unint64_t *v119 = 0x8000000000000000;
      sub_1A72D726C((uint64_t)v159, 0x65676175676E616CLL, 0xE900000000000073, v160);
      unint64_t *v119 = v181[0];

LABEL_51:
      swift_bridgeObjectRelease();
LABEL_53:
      swift_beginAccess();
      uint64_t v167 = *(void *)(v177 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      return v167;
    case 8u:
      uint64_t v121 = *((void *)v20 + 4);
      uint64_t v122 = *((void *)v20 + 6);
      uint64_t v123 = *((void *)v20 + 9);
      uint64_t v174 = (void (**)(void, void, void))*((void *)v20 + 5);
      uint64_t v175 = v123;
      uint64_t v124 = *((void *)v20 + 10);
      uint64_t v176 = *((void *)v20 + 11);
      uint64_t v125 = *((void *)v20 + 12);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700588);
      uint64_t v126 = swift_initStackObject();
      *(_OWORD *)(v126 + 16) = xmmword_1A7578D60;
      *(void *)(v126 + 32) = 0x656372756F73;
      *(void *)(v126 + 40) = 0xE600000000000000;
      uint64_t v127 = sub_1A75725E0();
      swift_bridgeObjectRelease();
      *(void *)(v126 + 48) = v127;
      strcpy((char *)(v126 + 56), "uncategorized");
      *(_WORD *)(v126 + 70) = -4864;
      *(void *)(v126 + 72) = sub_1A7572B80();
      unint64_t v128 = sub_1A72B1658(v126);
      uint64_t v129 = v178;
      *uint64_t v178 = v128;
      swift_bridgeObjectRelease();
      if (v121)
      {
        uint64_t v130 = sub_1A75725E0();
        swift_bridgeObjectRelease();
        char v131 = swift_isUniquelyReferenced_nonNull_native();
        v181[0] = *v129;
        *uint64_t v129 = 0x8000000000000000;
        sub_1A72D726C(v130, 0x636F4C6C65646F6DLL, 0xEB00000000656C61, v131);
        *uint64_t v129 = v181[0];
        swift_bridgeObjectRelease();
      }
      if (v122)
      {
        uint64_t v132 = sub_1A75725E0();
        swift_bridgeObjectRelease();
        char v133 = swift_isUniquelyReferenced_nonNull_native();
        v181[0] = *v129;
        *uint64_t v129 = 0x8000000000000000;
        sub_1A72D726C(v132, 0x6552656C61636F6CLL, 0xEC0000006E6F7361, v133);
        *uint64_t v129 = v181[0];
        swift_bridgeObjectRelease();
      }
      if (v124)
      {
        uint64_t v134 = sub_1A75725E0();
        swift_bridgeObjectRelease();
        char v135 = swift_isUniquelyReferenced_nonNull_native();
        v181[0] = *v129;
        *uint64_t v129 = 0x8000000000000000;
        sub_1A72D726C(v134, 0xD000000000000011, 0x80000001A75A2AA0, v135);
        *uint64_t v129 = v181[0];
        swift_bridgeObjectRelease();
      }
      if (!v125) {
        goto LABEL_53;
      }
      uint64_t v136 = sub_1A75725E0();
      swift_bridgeObjectRelease();
      unint64_t v47 = v178;
      char v48 = swift_isUniquelyReferenced_nonNull_native();
      v181[0] = *v47;
      *unint64_t v47 = 0x8000000000000000;
      uint64_t v51 = 0x80000001A75A2A80;
      uint64_t v49 = v136;
      uint64_t v50 = 0xD000000000000011;
LABEL_43:
      sub_1A72D726C(v49, v50, v51, v48);
      *unint64_t v47 = v181[0];
      goto LABEL_51;
    case 9u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700588);
      uint64_t v100 = swift_initStackObject();
      *(_OWORD *)(v100 + 16) = xmmword_1A7578790;
      *(void *)(v100 + 32) = 1836020326;
      *(void *)(v100 + 40) = 0xE400000000000000;
      uint64_t v137 = sub_1A75725E0();
      swift_bridgeObjectRelease();
      *(void *)(v100 + 48) = v137;
      *(void *)(v100 + 56) = 28532;
      *(void *)(v100 + 64) = 0xE200000000000000;
      uint64_t v138 = sub_1A75725E0();
      swift_bridgeObjectRelease();
      *(void *)(v100 + 72) = v138;
      strcpy((char *)(v100 + 80), "groceryLocale");
      *(_WORD *)(v100 + 94) = -4864;
      uint64_t v139 = sub_1A75725E0();
      swift_bridgeObjectRelease();
      *(void *)(v100 + 96) = v139;
LABEL_45:
      unint64_t v140 = sub_1A72B1658(v100);
      *uint64_t v178 = v140;
      goto LABEL_51;
    case 0xAu:
      uint64_t v52 = v11;
      sub_1A7571B50();
      sub_1A7571DC0();
      uint64_t v53 = v174;
      ((void (**)(char *, void, uint64_t))v174)[13](v3, *MEMORY[0x1E4F27C10], v1);
      uint64_t v54 = sub_1A7571DF0();
      ((void (*)(char *, uint64_t))v53[1])(v3, v1);
      (*(void (**)(char *, uint64_t))(v172 + 8))(v6, v173);
      uint64_t v55 = v178;
      id v161 = objc_allocWithZone(NSString);
      uint64_t v162 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      id v163 = objc_msgSend(v161, sel_initWithString_, v162);

      char v164 = swift_isUniquelyReferenced_nonNull_native();
      v181[0] = *v55;
      *uint64_t v55 = 0x8000000000000000;
      sub_1A72D726C((uint64_t)v163, 0x6F6974617265706FLL, 0xEB0000000064496ELL, v164);
      *uint64_t v55 = v181[0];
      swift_bridgeObjectRelease();
      id v165 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v54);
      char v166 = swift_isUniquelyReferenced_nonNull_native();
      v181[0] = *v55;
      *uint64_t v55 = 0x8000000000000000;
      goto LABEL_52;
    case 0xBu:
      uint64_t v52 = v171;
      sub_1A7571B50();
      sub_1A7571DC0();
      uint64_t v56 = v174;
      ((void (**)(char *, void, uint64_t))v174)[13](v3, *MEMORY[0x1E4F27C10], v1);
      uint64_t v57 = sub_1A7571DF0();
      ((void (*)(char *, uint64_t))v56[1])(v3, v1);
      (*(void (**)(char *, uint64_t))(v172 + 8))(v6, v173);
      id v58 = objc_allocWithZone(NSString);
      long long v59 = (void *)sub_1A75725E0();
      id v60 = objc_msgSend(v58, sel_initWithString_, v59);

      uint64_t v55 = v178;
      char v61 = swift_isUniquelyReferenced_nonNull_native();
      v181[0] = *v55;
      *uint64_t v55 = 0x8000000000000000;
      sub_1A72D726C((uint64_t)v60, 0x6F6974617265706FLL, 0xEB0000000064496ELL, v61);
      *uint64_t v55 = v181[0];
      swift_bridgeObjectRelease();
      id v165 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v57);
      char v166 = swift_isUniquelyReferenced_nonNull_native();
      v181[0] = *v55;
      *uint64_t v55 = 0x8000000000000000;
LABEL_52:
      sub_1A72D726C((uint64_t)v165, 0x6144664F72756F68, 0xE900000000000079, v166);
      *uint64_t v55 = v181[0];
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v175 + 8))(v52, v176);
      goto LABEL_53;
    case 0xCu:
      uint64_t v141 = *((void *)v20 + 1);
      uint64_t v174 = *(void (***)(void, void, void))v20;
      uint64_t v179 = v174;
      uint64_t v180 = v141;
      sub_1A756E0FC(v181);
      unint64_t v142 = (void *)v181[0];
      unint64_t v143 = REMAccountSnapshotSummary.nsPayload.getter();
      sub_1A7347540((uint64_t)v143);
      uint64_t v145 = v144;
      swift_bridgeObjectRelease();
      uint64_t v146 = v178;
      char v147 = swift_isUniquelyReferenced_nonNull_native();
      v181[0] = *v146;
      *uint64_t v146 = 0x8000000000000000;
      sub_1A7438764(v145, (uint64_t)sub_1A7438A4C, 0, v147, v181);
      *uint64_t v146 = v181[0];
      swift_bridgeObjectRelease();
      id v148 = sub_1A74390D8();
      uint64_t v149 = v171;
      sub_1A7571B50();
      unint64_t v150 = (void *)sub_1A7571AB0();
      (*(void (**)(char *, uint64_t))(v175 + 8))(v149, v176);
      id v151 = objc_msgSend(v148, sel_stringFromDate_, v150);

      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      id v152 = objc_msgSend(v142, sel_stringRepresentation);
      uint64_t v153 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v155 = v154;

      v181[0] = v153;
      v181[1] = v155;
      swift_bridgeObjectRetain();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v156 = sub_1A7572810();
      swift_bridgeObjectRelease();
      v181[0] = v156;
      sub_1A7573BC0();
      uint64_t v157 = sub_1A75725E0();
      swift_bridgeObjectRelease();
      char v158 = swift_isUniquelyReferenced_nonNull_native();
      v181[0] = *v146;
      *uint64_t v146 = 0x8000000000000000;
      sub_1A72D726C(v157, 0x48746E756F636361, 0xED00004449687361, v158);
      *uint64_t v146 = v181[0];
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      goto LABEL_51;
    case 0xDu:
      uint64_t v62 = v171;
      sub_1A7571B50();
      sub_1A7571DC0();
      uint64_t v63 = v174;
      ((void (**)(char *, void, uint64_t))v174)[13](v3, *MEMORY[0x1E4F27C10], v1);
      uint64_t v64 = sub_1A7571DF0();
      ((void (*)(char *, uint64_t))v63[1])(v3, v1);
      (*(void (**)(char *, uint64_t))(v172 + 8))(v6, v173);
      id v65 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v64);
      uint64_t v66 = v178;
      char v67 = swift_isUniquelyReferenced_nonNull_native();
      v181[0] = *v66;
      unint64_t *v66 = 0x8000000000000000;
      sub_1A72D726C((uint64_t)v65, 0x6144664F72756F68, 0xE900000000000079, v67);
      unint64_t *v66 = v181[0];
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v175 + 8))(v62, v176);
      goto LABEL_53;
    case 0xEu:
      goto LABEL_53;
    default:
      char v22 = *v20;
      unsigned __int8 v23 = v20[1];
      uint64_t v24 = *((void *)v20 + 2);
      uint64_t v176 = *((void *)v20 + 1);
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB701630);
      uint64_t v26 = (uint64_t)&v20[*(int *)(v25 + 64)];
      unint64_t v27 = (uint64_t *)&v20[*(int *)(v25 + 80)];
      uint64_t v28 = *v27;
      uint64_t v29 = v27[1];
      sub_1A731D558(v26, (uint64_t)v17);
      LOBYTE(v181[0]) = v22;
      BYTE1(v181[0]) = v23;
      unint64_t v30 = sub_1A7437948();
      uint64_t v32 = v31;
      LOBYTE(v181[0]) = v22;
      BYTE1(v181[0]) = v23;
      unint64_t v33 = sub_1A7437BE8();
      sub_1A74371C8(v30, v32, v33, v34, v176, v24, (uint64_t)v17, v28, v29, v177);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A731D4F8((uint64_t)v17);
      goto LABEL_53;
  }
}

uint64_t sub_1A74371C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v55[1] = a5;
  v55[2] = a8;
  uint64_t v59 = a7;
  v55[3] = a3;
  uint64_t v56 = a6;
  uint64_t v63 = a4;
  uint64_t v57 = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v58 = (uint64_t)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A7571DE0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1A7571E00();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1A7571B60();
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v62 = v20;
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  v55[0] = (char *)v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v55 - v23;
  uint64_t v25 = (uint64_t *)(a10 + 16);
  sub_1A7571B50();
  sub_1A7571DC0();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4F27C10], v12);
  id v60 = v24;
  uint64_t v26 = sub_1A7571DF0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v27 = v56;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  id v28 = objc_allocWithZone(NSString);
  swift_bridgeObjectRetain();
  uint64_t v29 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v28, sel_initWithString_, v29);

  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v64 = *(void *)(a10 + 16);
  *(void *)(a10 + 16) = 0x8000000000000000;
  sub_1A72D726C((uint64_t)v30, 0x6F6974617265706FLL, 0xEB0000000064496ELL, isUniquelyReferenced_nonNull_native);
  *(void *)(a10 + 16) = v64;
  swift_bridgeObjectRelease();
  swift_endAccess();
  id v32 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v26);
  swift_beginAccess();
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v64 = *(void *)(a10 + 16);
  *(void *)(a10 + 16) = 0x8000000000000000;
  sub_1A72D726C((uint64_t)v32, 0x6144664F72756F68, 0xE900000000000079, v33);
  *(void *)(a10 + 16) = v64;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (v27)
  {
    id v34 = objc_allocWithZone(NSString);
    swift_bridgeObjectRetain();
    uint64_t v35 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    id v36 = objc_msgSend(v34, sel_initWithString_, v35);

    swift_beginAccess();
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v64 = *v25;
    *uint64_t v25 = 0x8000000000000000;
    sub_1A72D726C((uint64_t)v36, 0x496E6F6973736573, 0xE900000000000064, v37);
    *uint64_t v25 = v64;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  uint64_t v38 = v58;
  sub_1A73C3428(v59, v58);
  uint64_t v40 = v61;
  uint64_t v39 = v62;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v38, 1, v62) != 1)
  {
    uint64_t v42 = v55[0];
    (*(void (**)(void, uint64_t, uint64_t))(v40 + 32))(v55[0], v38, v39);
    uint64_t v41 = v60;
    sub_1A7571A90();
    id v44 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v43);
    swift_beginAccess();
    char v45 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v64 = *v25;
    *uint64_t v25 = 0x8000000000000000;
    sub_1A72D726C((uint64_t)v44, 0x5464657370616C65, 0xEB00000000656D69, v45);
    *uint64_t v25 = v64;
    swift_bridgeObjectRelease();
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v39);
    if (!a9) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  sub_1A731D4F8(v38);
  uint64_t v41 = v60;
  if (a9)
  {
LABEL_7:
    id v46 = objc_allocWithZone(NSString);
    swift_bridgeObjectRetain();
    unint64_t v47 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    id v48 = objc_msgSend(v46, sel_initWithString_, v47);

    swift_beginAccess();
    char v49 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v64 = *v25;
    *uint64_t v25 = 0x8000000000000000;
    sub_1A72D726C((uint64_t)v48, 0x61636F4C77656976, 0xEC0000006E6F6974, v49);
    *uint64_t v25 = v64;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
LABEL_8:
  if (v63)
  {
    id v50 = objc_allocWithZone(NSString);
    swift_bridgeObjectRetain();
    uint64_t v51 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    id v52 = objc_msgSend(v50, sel_initWithString_, v51);

    swift_beginAccess();
    char v53 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v64 = *v25;
    *uint64_t v25 = 0x8000000000000000;
    sub_1A72D726C((uint64_t)v52, 0x6F6974617265706FLL, 0xEF6C69617465446ELL, v53);
    *uint64_t v25 = v64;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v41, v39);
}

unint64_t sub_1A7437948()
{
  unint64_t result = 0x65526574656C6564;
  switch(v0[1])
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
LABEL_6:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x6552657461657263;
      switch(*v0)
      {
        case 1:
        case 5:
          goto LABEL_6;
        case 2:
          unint64_t result = 0xD000000000000017;
          break;
        case 3:
          unint64_t result = 0xD000000000000021;
          break;
        case 4:
          unint64_t result = 0xD000000000000018;
          break;
        case 6:
          unint64_t result = 0xD000000000000014;
          break;
        case 7:
        case 8:
          unint64_t result = 0xD00000000000001BLL;
          break;
        case 9:
          unint64_t result = 0xD000000000000015;
          break;
        case 0xA:
          unint64_t result = 0xD000000000000014;
          break;
        case 0xB:
          unint64_t result = 0x694C64656B636970;
          break;
        case 0xC:
          unint64_t result = 0x6853746567646977;
          break;
        case 0xD:
          unint64_t result = 0xD000000000000012;
          break;
        case 0xE:
          unint64_t result = 0xD000000000000013;
          break;
        case 0xF:
          unint64_t result = 0x6F43734177656976;
          break;
        default:
          return result;
      }
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A7437BE8()
{
  unsigned int v1 = *v0;
  unsigned int v2 = v0[1];
  BOOL v3 = v2 >= 3;
  unsigned int v4 = v2 - 3;
  if (v3)
  {
    uint64_t v6 = 0x5641446C6163;
    if ((v1 & 1) == 0) {
      uint64_t v6 = 0x74694B64756F6C63;
    }
    if (v1 == 2) {
      uint64_t v7 = 0;
    }
    else {
      uint64_t v7 = v6;
    }
    if (v4 >= 2) {
      return 0;
    }
    else {
      return v7;
    }
  }
  else if (v1 <= 0xFD)
  {
    return sub_1A7438044();
  }
  else
  {
    return 0;
  }
}

unint64_t sub_1A7437C88()
{
  unsigned int v1 = (unsigned __int16)*v0;
  if (v1 >> 14)
  {
    if (v1 >> 14 == 1)
    {
      uint64_t v3 = 0x7473694C6E65706FLL;
      sub_1A7572740();
      swift_bridgeObjectRelease();
      return v3;
    }
    unint64_t result = 0xD000000000000018;
    switch(*v0)
    {
      case 0x8001:
      case 0x8002:
        unint64_t result = 0x7473694C6E65706FLL;
        break;
      default:
        return result;
    }
  }
  else
  {
    if (v1) {
      unint64_t result = 0xD000000000000014;
    }
    else {
      unint64_t result = 0x7473694C6E65706FLL;
    }
    uint64_t v3 = result;
    if ((v1 & 0x100) != 0)
    {
      sub_1A7572740();
      return v3;
    }
  }
  return result;
}

unint64_t REMRemindersInCalendarUserOperation.rawValue.getter()
{
  unint64_t result = 0xD000000000000014;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0x65526574656C6564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A7437FF0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t REMRemindersWidgetUserOperation.rawValue.getter()
{
  return 0xD000000000000010;
}

unint64_t sub_1A7438044()
{
  unint64_t v1 = 0xD000000000000018;
  unsigned int v2 = *v0;
  unint64_t result = 0xD00000000000002BLL;
  switch(v2 >> 5)
  {
    case 1u:
      unint64_t v4 = 0xD00000000000002FLL;
      unint64_t v1 = 0xD000000000000032;
      goto LABEL_4;
    case 2u:
      if (v2 == 64) {
        return 0xD000000000000010;
      }
      else {
        return 0xD000000000000019;
      }
    case 3u:
      unint64_t v4 = 0xD000000000000011;
      BOOL v5 = v2 == 96;
      goto LABEL_11;
    case 4u:
      unint64_t v4 = 0xD00000000000001CLL;
      BOOL v5 = v2 == 128;
      goto LABEL_11;
    case 5u:
      unint64_t v4 = 0xD000000000000017;
      unint64_t v1 = 0xD000000000000021;
      BOOL v5 = v2 == 160;
      goto LABEL_11;
    case 6u:
      return result;
    default:
      unint64_t v4 = 0xD000000000000025;
      unint64_t v1 = 0xD000000000000028;
LABEL_4:
      BOOL v5 = (v2 & 1) == 0;
LABEL_11:
      if (v5) {
        return v4;
      }
      else {
        return v1;
      }
  }
}

ReminderKitInternal::REMRemindersInCalendarUserOperation_optional __swiftcall REMRemindersInCalendarUserOperation.init(rawValue:)(Swift::String rawValue)
{
  return (ReminderKitInternal::REMRemindersInCalendarUserOperation_optional)sub_1A74383A4(v1);
}

uint64_t sub_1A74381A8(char *a1, char *a2)
{
  return sub_1A7541208(*a1, *a2);
}

uint64_t sub_1A74381B4()
{
  return sub_1A75043D0();
}

uint64_t sub_1A74381C0()
{
  return sub_1A7502418();
}

uint64_t sub_1A74381C8()
{
  return sub_1A75043D0();
}

ReminderKitInternal::REMRemindersInCalendarUserOperation_optional sub_1A74381D0(Swift::String *a1)
{
  return REMRemindersInCalendarUserOperation.init(rawValue:)(*a1);
}

unint64_t sub_1A74381DC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = REMRemindersInCalendarUserOperation.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t REMRemindersWidgetUserOperation.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1A743825C()
{
  return sub_1A7574110();
}

uint64_t sub_1A74382B4()
{
  return sub_1A75726F0();
}

uint64_t sub_1A74382D0()
{
  return sub_1A7574110();
}

uint64_t sub_1A7438324@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A7438378(void *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x80000001A759E320;
}

ReminderKitInternal::REMRemindersOpenUserOperation::SmartListType_optional __swiftcall REMRemindersOpenUserOperation.SmartListType.init(rawValue:)(Swift::String rawValue)
{
  return (ReminderKitInternal::REMRemindersOpenUserOperation::SmartListType_optional)sub_1A74383A4(v1);
}

uint64_t sub_1A74383A4@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1A7573970();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 8;
  if (v2 < 8) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t REMRemindersOpenUserOperation.SmartListType.rawValue.getter()
{
  uint64_t result = 0x7961646F74;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64656767616C66;
      break;
    case 2:
      uint64_t result = 0x656C756465686373;
      break;
    case 3:
      uint64_t result = 7105633;
      break;
    case 4:
      uint64_t result = 0x64656E6769737361;
      break;
    case 5:
      uint64_t result = 0x6E756F4669726973;
      break;
    case 6:
      uint64_t result = 0x646567676174;
      break;
    case 7:
      uint64_t result = 0x6574656C706D6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A74384F8(unsigned __int8 *a1, char *a2)
{
  return sub_1A7542814(*a1, *a2);
}

uint64_t sub_1A7438504()
{
  return sub_1A7503D28();
}

uint64_t sub_1A7438510()
{
  return sub_1A7502CD0();
}

uint64_t sub_1A7438518()
{
  return sub_1A7503D28();
}

ReminderKitInternal::REMRemindersOpenUserOperation::SmartListType_optional sub_1A7438520(Swift::String *a1)
{
  return REMRemindersOpenUserOperation.SmartListType.init(rawValue:)(*a1);
}

void sub_1A743852C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x7961646F74;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x64656767616C66;
      goto LABEL_3;
    case 2:
      uint64_t v4 = 0x656C756465686373;
      goto LABEL_10;
    case 3:
      *a1 = 7105633;
      a1[1] = 0xE300000000000000;
      return;
    case 4:
      *a1 = 0x64656E6769737361;
      a1[1] = 0xE800000000000000;
      return;
    case 5:
      *a1 = 0x6E756F4669726973;
      a1[1] = 0xEF737070416E4964;
      return;
    case 6:
      *a1 = 0x646567676174;
      a1[1] = 0xE600000000000000;
      return;
    case 7:
      uint64_t v4 = 0x6574656C706D6F63;
LABEL_10:
      *a1 = v4;
      a1[1] = 0xE900000000000064;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t REMRemindersCreateListUserOperation.hash(into:)()
{
  return sub_1A75740D0();
}

BOOL static REMRemindersCreateListUserOperation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMRemindersCreateListUserOperation.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t REMSharedListUserOperationDetail.hash(into:)()
{
  return sub_1A75740D0();
}

BOOL static REMSharedListUserOperationDetail.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t REMSharedListUserOperationDetail.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t sub_1A7438764(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A7438A98();
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  uint64_t v12 = v9;
  uint64_t v13 = (void *)*a5;
  unint64_t v15 = sub_1A72B2210(v7, v8);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      uint64_t v22 = (void *)*a5;
      if (v14) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1A72BD07C();
      uint64_t v22 = (void *)*a5;
      if (v19) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v22[(v15 >> 6) + 8] |= 1 << v15;
    uint64_t v25 = (uint64_t *)(v22[6] + 16 * v15);
    *uint64_t v25 = v10;
    v25[1] = v11;
    *(void *)(v22[7] + 8 * v15) = v12;
    uint64_t v26 = v22[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v22[2] = v28;
LABEL_13:
    sub_1A7438A98();
    if (v30)
    {
      uint64_t v32 = v29;
      uint64_t v33 = v30;
      uint64_t v34 = v31;
      do
      {
        uint64_t v40 = (void *)*a5;
        unint64_t v42 = sub_1A72B2210(v32, v33);
        uint64_t v43 = v40[2];
        BOOL v44 = (v41 & 1) == 0;
        uint64_t v45 = v43 + v44;
        if (__OFADD__(v43, v44)) {
          goto LABEL_25;
        }
        char v46 = v41;
        if (v40[3] < v45)
        {
          sub_1A72B7960(v45, 1);
          unint64_t v47 = sub_1A72B2210(v32, v33);
          if ((v46 & 1) != (v48 & 1)) {
            goto LABEL_27;
          }
          unint64_t v42 = v47;
        }
        char v49 = (void *)*a5;
        if (v46)
        {
          swift_bridgeObjectRelease();
          uint64_t v35 = v49[7];
          uint64_t v36 = 8 * v42;

          *(void *)(v35 + v36) = v34;
        }
        else
        {
          v49[(v42 >> 6) + 8] |= 1 << v42;
          id v50 = (uint64_t *)(v49[6] + 16 * v42);
          uint64_t *v50 = v32;
          v50[1] = v33;
          *(void *)(v49[7] + 8 * v42) = v34;
          uint64_t v51 = v49[2];
          BOOL v27 = __OFADD__(v51, 1);
          uint64_t v52 = v51 + 1;
          if (v27) {
            goto LABEL_26;
          }
          v49[2] = v52;
        }
        sub_1A7438A98();
        uint64_t v32 = v37;
        uint64_t v33 = v38;
        uint64_t v34 = v39;
      }
      while (v38);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A72D99A4();
    return swift_release();
  }
  sub_1A72B7960(v18, a4 & 1);
  unint64_t v20 = sub_1A72B2210(v10, v11);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    uint64_t v22 = (void *)*a5;
    if ((v19 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v23 = v22[7];
    uint64_t v24 = 8 * v15;

    *(void *)(v23 + v24) = v12;
    goto LABEL_13;
  }
LABEL_27:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

id sub_1A7438A4C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  id v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain();

  return v4;
}

void sub_1A7438A98()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  id v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  void v20[3];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = *(void **)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    void v20[2] = v10;
    swift_bridgeObjectRetain();
    uint64_t v12 = v10;
    v11(&v19, v20);

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    char v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      unint64_t v15 = v0[1];
      uint64_t v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      BOOL v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        uint64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          uint64_t v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          uint64_t v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            uint64_t v13 = v3 + 3;
            goto LABEL_7;
          }
          BOOL v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            uint64_t v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            uint64_t v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              uint64_t v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              uint64_t v18 = v3 + 6;
              while (v14 != v18)
              {
                uint64_t v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  uint64_t v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

uint64_t _s19ReminderKitInternal25REMRDLUserOperationDetailO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  switch(v2 >> 5)
  {
    case 1u:
      if ((v3 & 0xE0) != 0x20) {
        return 0;
      }
      return (((v2 & 1) == 0) ^ v3) & 1;
    case 2u:
      if (v2 == 64) {
        return v3 == 64;
      }
      return v3 == 65;
    case 3u:
      if (v2 == 96)
      {
        if (v3 == 96) {
          return 1;
        }
      }
      else if (v3 == 97)
      {
        return 1;
      }
      return 0;
    case 4u:
      if (v2 == 128)
      {
        if (v3 == 128) {
          return 1;
        }
      }
      else if (v3 == 129)
      {
        return 1;
      }
      return 0;
    case 5u:
      if (v2 != 160) {
        return v3 == 161;
      }
      return v3 == 160;
    case 6u:
      return v3 == 192;
    default:
      if (v3 >= 0x20) {
        return 0;
      }
      return (((v2 & 1) == 0) ^ v3) & 1;
  }
}

uint64_t _s19ReminderKitInternal16REMUserOperationO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  int v4 = a2[1];
  switch(a1[1])
  {
    case 1u:
      if (v4 != 1) {
        return 0;
      }
      unsigned __int8 v27 = *a2;
      if (v2 > 0xFD) {
        return v3 > 0xFD;
      }
      unsigned __int8 v26 = v2;
      return v3 <= 0xFD && (_s19ReminderKitInternal25REMRDLUserOperationDetailO2eeoiySbAC_ACtFZ_0(&v26, &v27) & 1) != 0;
    case 2u:
      if (v4 != 2) {
        return 0;
      }
      unsigned __int8 v29 = *a2;
      if (v2 > 0xFD) {
        return v3 > 0xFD;
      }
      unsigned __int8 v28 = v2;
      return v3 <= 0xFD && (_s19ReminderKitInternal25REMRDLUserOperationDetailO2eeoiySbAC_ACtFZ_0(&v28, &v29) & 1) != 0;
    case 3u:
      if (v4 != 3) {
        return 0;
      }
      if (v2 == 2) {
        goto LABEL_18;
      }
      goto LABEL_22;
    case 4u:
      if (v4 != 4) {
        return 0;
      }
      if (v2 == 2)
      {
LABEL_18:
        if (v3 == 2) {
          return 1;
        }
      }
      else
      {
LABEL_22:
        int v5 = (v3 ^ v2) & 1;
        if (v3 != 2 && v5 == 0) {
          return 1;
        }
      }
      return 0;
    case 5u:
      switch(*a1)
      {
        case 1u:
          return v4 == 5 && v3 == 1;
        case 2u:
          return v4 == 5 && v3 == 2;
        case 3u:
          return v4 == 5 && v3 == 3;
        case 4u:
          return v4 == 5 && v3 == 4;
        case 5u:
          return v4 == 5 && v3 == 5;
        case 6u:
          return v4 == 5 && v3 == 6;
        case 7u:
          return v4 == 5 && v3 == 7;
        case 8u:
          return v4 == 5 && v3 == 8;
        case 9u:
          return v4 == 5 && v3 == 9;
        case 0xAu:
          return v4 == 5 && v3 == 10;
        case 0xBu:
          return v4 == 5 && v3 == 11;
        case 0xCu:
          return v4 == 5 && v3 == 12;
        case 0xDu:
          return v4 == 5 && v3 == 13;
        case 0xEu:
          return v4 == 5 && v3 == 14;
        case 0xFu:
          return v4 == 5 && v3 == 15;
        default:
          return v4 == 5 && v3 == 0;
      }
    default:
      if (a2[1]) {
        return 0;
      }
      unsigned __int8 v25 = *a2;
      if (v2 <= 0xFD)
      {
        unsigned __int8 v24 = v2;
        return v3 <= 0xFD
            && (_s19ReminderKitInternal25REMRDLUserOperationDetailO2eeoiySbAC_ACtFZ_0(&v24, &v25) & 1) != 0;
      }
      return v3 > 0xFD;
  }
}

uint64_t _s19ReminderKitInternal29REMRemindersOpenUserOperationO2eeoiySbAC_ACtFZ_0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  if (!(v2 >> 14))
  {
    if (v3 < 0x4000 && ((v2 & 1) == 0) != (v3 & 1)) {
      return ((v2 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8);
    }
    return 0;
  }
  if (v2 >> 14 == 1)
  {
    if ((v3 & 0xC000) == 0x4000) {
      return sub_1A7542814(v2, v3);
    }
    return 0;
  }
  switch(v2)
  {
    case 0x8001u:
      if (v3 != 32769) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 0x8002u:
      if (v3 != 32770) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 0x8003u:
      if (v3 != 32771) {
        return 0;
      }
      uint64_t result = 1;
      break;
    default:
      if (v3 != 0x8000) {
        return 0;
      }
      uint64_t result = 1;
      break;
  }
  return result;
}

id sub_1A74390D8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B68);
  MEMORY[0x1F4188790](v0 - 8);
  unsigned int v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  sub_1A7571E10();
  uint64_t v4 = sub_1A7571E60();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) != 1)
  {
    unint64_t v6 = (void *)sub_1A7571E30();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
  }
  objc_msgSend(v3, sel_setTimeZone_, v6);

  uint64_t v7 = (void *)sub_1A75725E0();
  objc_msgSend(v3, sel_setDateFormat_, v7);

  return v3;
}

unint64_t sub_1A7439254()
{
  unint64_t result = qword_1E96F1510;
  if (!qword_1E96F1510)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E96F1510);
  }
  return result;
}

unint64_t sub_1A7439298()
{
  unint64_t result = qword_1E96F3650;
  if (!qword_1E96F3650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3650);
  }
  return result;
}

unint64_t sub_1A74392F0()
{
  unint64_t result = qword_1E96F3658;
  if (!qword_1E96F3658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3658);
  }
  return result;
}

unint64_t sub_1A7439348()
{
  unint64_t result = qword_1E96F3660;
  if (!qword_1E96F3660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3660);
  }
  return result;
}

unint64_t sub_1A74393A0()
{
  unint64_t result = qword_1E96F3668;
  if (!qword_1E96F3668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3668);
  }
  return result;
}

unint64_t sub_1A74393F8()
{
  unint64_t result = qword_1E96F3670;
  if (!qword_1E96F3670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3670);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for REMAnalyticsEvent(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_WORD *)a1 = *(_WORD *)a2;
        uint64_t v7 = a2[2];
        a1[1] = a2[1];
        a1[2] = v7;
        swift_bridgeObjectRetain();
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB701630);
        uint64_t v9 = *(int *)(v8 + 64);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_1A7571B60();
        uint64_t v13 = *(void *)(v12 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
          goto LABEL_19;
        }
        goto LABEL_10;
      case 1u:
        *(_WORD *)a1 = *(_WORD *)a2;
        uint64_t v16 = a2[2];
        a1[1] = a2[1];
        a1[2] = v16;
        swift_bridgeObjectRetain();
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701650);
        uint64_t v17 = *(int *)(v8 + 64);
        uint64_t v10 = (char *)a1 + v17;
        uint64_t v11 = (char *)a2 + v17;
        uint64_t v12 = sub_1A7571B60();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
          goto LABEL_10;
        }
        goto LABEL_19;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v18 = a2[2];
        a1[1] = a2[1];
        a1[2] = v18;
        swift_bridgeObjectRetain();
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3648);
        uint64_t v19 = *(int *)(v8 + 64);
        uint64_t v10 = (char *)a1 + v19;
        uint64_t v11 = (char *)a2 + v19;
        uint64_t v12 = sub_1A7571B60();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
LABEL_10:
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(v10, v11, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
LABEL_19:
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
        uint64_t v47 = *(int *)(v8 + 80);
        char v48 = (void *)((char *)a1 + v47);
        char v49 = (void *)((char *)a2 + v47);
        uint64_t v50 = v49[1];
        *char v48 = *v49;
        v48[1] = v50;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        uint64_t v22 = a2[3];
        a1[2] = a2[2];
        a1[3] = v22;
        uint64_t v23 = a2[5];
        a1[4] = a2[4];
        a1[5] = v23;
        uint64_t v24 = a2[7];
        a1[6] = a2[6];
        a1[7] = v24;
        uint64_t v25 = a2[8];
        uint64_t v26 = a2[9];
        a1[8] = v25;
        a1[9] = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v27 = a2[1];
        *a1 = *a2;
        a1[1] = v27;
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        uint64_t v28 = a2[5];
        a1[4] = a2[4];
        a1[5] = v28;
        uint64_t v29 = a2[7];
        a1[6] = a2[6];
        a1[7] = v29;
        uint64_t v30 = a2[9];
        a1[8] = a2[8];
        a1[9] = v30;
        uint64_t v31 = a2[10];
        uint64_t v32 = a2[11];
        a1[10] = v31;
        a1[11] = v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        uint64_t v33 = a2[1];
        *a1 = *a2;
        a1[1] = v33;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v34 = a2[4];
        a1[3] = a2[3];
        a1[4] = v34;
        uint64_t v35 = a2[6];
        a1[5] = a2[5];
        a1[6] = v35;
        uint64_t v36 = a2[8];
        a1[7] = a2[7];
        a1[8] = v36;
        uint64_t v37 = a2[10];
        a1[9] = a2[9];
        a1[10] = v37;
        uint64_t v38 = a2[11];
        uint64_t v39 = a2[12];
        a1[11] = v38;
        a1[12] = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v40 = a2[1];
        *a1 = *a2;
        a1[1] = v40;
        uint64_t v41 = a2[3];
        a1[2] = a2[2];
        a1[3] = v41;
        uint64_t v42 = a2[4];
        uint64_t v43 = a2[5];
        a1[4] = v42;
        a1[5] = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        BOOL v44 = (void *)*a2;
        uint64_t v45 = a2[1];
        *a1 = v44;
        a1[1] = v45;
        id v46 = v44;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for REMAnalyticsEvent(id *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      id v3 = (uint64_t *)&unk_1EB701630;
      goto LABEL_5;
    case 1:
      swift_bridgeObjectRelease();
      id v3 = &qword_1EB701650;
      goto LABEL_5;
    case 2:
      swift_bridgeObjectRelease();
      id v3 = &qword_1E96F3648;
LABEL_5:
      uint64_t v4 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v3) + 64);
      uint64_t v5 = sub_1A7571B60();
      uint64_t v6 = *(void *)(v5 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
      }
      goto LABEL_12;
    case 3:
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 5:
    case 7:
      goto LABEL_12;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 12:

LABEL_12:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for REMAnalyticsEvent(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v6 = a2[2];
      a1[1] = a2[1];
      a1[2] = v6;
      swift_bridgeObjectRetain();
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB701630);
      uint64_t v8 = *(int *)(v7 + 64);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1A7571B60();
      uint64_t v12 = *(void *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
        goto LABEL_16;
      }
      goto LABEL_7;
    case 1u:
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v13 = a2[2];
      a1[1] = a2[1];
      a1[2] = v13;
      swift_bridgeObjectRetain();
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701650);
      uint64_t v14 = *(int *)(v7 + 64);
      uint64_t v9 = (char *)a1 + v14;
      uint64_t v10 = (char *)a2 + v14;
      uint64_t v11 = sub_1A7571B60();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
        goto LABEL_7;
      }
      goto LABEL_16;
    case 2u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v15 = a2[2];
      a1[1] = a2[1];
      a1[2] = v15;
      swift_bridgeObjectRetain();
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3648);
      uint64_t v16 = *(int *)(v7 + 64);
      uint64_t v9 = (char *)a1 + v16;
      uint64_t v10 = (char *)a2 + v16;
      uint64_t v11 = sub_1A7571B60();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
LABEL_7:
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
LABEL_16:
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v44 = *(int *)(v7 + 80);
      uint64_t v45 = (void *)((char *)a1 + v44);
      id v46 = (void *)((char *)a2 + v44);
      uint64_t v47 = v46[1];
      *uint64_t v45 = *v46;
      v45[1] = v47;
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 3u:
      uint64_t v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      uint64_t v19 = a2[3];
      a1[2] = a2[2];
      a1[3] = v19;
      uint64_t v20 = a2[5];
      a1[4] = a2[4];
      a1[5] = v20;
      uint64_t v21 = a2[7];
      a1[6] = a2[6];
      a1[7] = v21;
      uint64_t v22 = a2[8];
      uint64_t v23 = a2[9];
      a1[8] = v22;
      a1[9] = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 5u:
      uint64_t v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 6u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      uint64_t v25 = a2[5];
      a1[4] = a2[4];
      a1[5] = v25;
      uint64_t v26 = a2[7];
      a1[6] = a2[6];
      a1[7] = v26;
      uint64_t v27 = a2[9];
      a1[8] = a2[8];
      a1[9] = v27;
      uint64_t v28 = a2[10];
      uint64_t v29 = a2[11];
      a1[10] = v28;
      a1[11] = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 7u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 8u:
      uint64_t v30 = a2[1];
      *a1 = *a2;
      a1[1] = v30;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v31 = a2[4];
      a1[3] = a2[3];
      a1[4] = v31;
      uint64_t v32 = a2[6];
      a1[5] = a2[5];
      a1[6] = v32;
      uint64_t v33 = a2[8];
      a1[7] = a2[7];
      a1[8] = v33;
      uint64_t v34 = a2[10];
      a1[9] = a2[9];
      a1[10] = v34;
      uint64_t v35 = a2[11];
      uint64_t v36 = a2[12];
      a1[11] = v35;
      a1[12] = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 9u:
      uint64_t v37 = a2[1];
      *a1 = *a2;
      a1[1] = v37;
      uint64_t v38 = a2[3];
      a1[2] = a2[2];
      a1[3] = v38;
      uint64_t v39 = a2[4];
      uint64_t v40 = a2[5];
      a1[4] = v39;
      a1[5] = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 0xCu:
      uint64_t v41 = (void *)*a2;
      uint64_t v42 = a2[1];
      *a1 = v41;
      a1[1] = v42;
      id v43 = v41;
      swift_bridgeObjectRetain();
LABEL_18:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for REMAnalyticsEvent(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A7435730((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_WORD *)a1 = *(_WORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB701630);
        uint64_t v7 = *(int *)(v6 + 64);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_1A7571B60();
        uint64_t v11 = *(void *)(v10 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
          goto LABEL_17;
        }
        goto LABEL_8;
      case 1u:
        *(_WORD *)a1 = *(_WORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701650);
        uint64_t v12 = *(int *)(v6 + 64);
        uint64_t v8 = (char *)a1 + v12;
        uint64_t v9 = (char *)a2 + v12;
        uint64_t v10 = sub_1A7571B60();
        uint64_t v11 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
          goto LABEL_8;
        }
        goto LABEL_17;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3648);
        uint64_t v13 = *(int *)(v6 + 64);
        uint64_t v8 = (char *)a1 + v13;
        uint64_t v9 = (char *)a2 + v13;
        uint64_t v10 = sub_1A7571B60();
        uint64_t v11 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
        {
LABEL_8:
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
LABEL_17:
          (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        }
        uint64_t v17 = *(int *)(v6 + 80);
        uint64_t v18 = (void *)((char *)a1 + v17);
        uint64_t v19 = (void *)((char *)a2 + v17);
        *uint64_t v18 = *v19;
        v18[1] = v19[1];
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 7u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 0xCu:
        uint64_t v15 = (void *)*a2;
        *a1 = *a2;
        a1[1] = a2[1];
        id v16 = v15;
        swift_bridgeObjectRetain();
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for REMAnalyticsEvent(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3648);
      uint64_t v15 = *(int *)(v14 + 64);
      id v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = sub_1A7571B60();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      *(_OWORD *)&a1[*(int *)(v14 + 80)] = *(_OWORD *)&a2[*(int *)(v14 + 80)];
      goto LABEL_17;
    case 1:
      *(_WORD *)a1 = *(_WORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701650);
      uint64_t v22 = *(int *)(v21 + 64);
      uint64_t v23 = &a1[v22];
      uint64_t v24 = &a2[v22];
      uint64_t v25 = sub_1A7571B60();
      uint64_t v26 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      *(_OWORD *)&a1[*(int *)(v21 + 80)] = *(_OWORD *)&a2[*(int *)(v21 + 80)];
      goto LABEL_17;
    case 0:
      *(_WORD *)a1 = *(_WORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB701630);
      uint64_t v8 = *(int *)(v7 + 64);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_1A7571B60();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(_OWORD *)&a1[*(int *)(v7 + 80)] = *(_OWORD *)&a2[*(int *)(v7 + 80)];
LABEL_17:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for REMAnalyticsEvent(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A7435730((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *a1 = *a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3648);
        uint64_t v15 = *(int *)(v14 + 64);
        id v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        uint64_t v18 = sub_1A7571B60();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        *(_OWORD *)&a1[*(int *)(v14 + 80)] = *(_OWORD *)&a2[*(int *)(v14 + 80)];
        goto LABEL_18;
      case 1:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701650);
        uint64_t v22 = *(int *)(v21 + 64);
        uint64_t v23 = &a1[v22];
        uint64_t v24 = &a2[v22];
        uint64_t v25 = sub_1A7571B60();
        uint64_t v26 = *(void *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        *(_OWORD *)&a1[*(int *)(v21 + 80)] = *(_OWORD *)&a2[*(int *)(v21 + 80)];
        goto LABEL_18;
      case 0:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB701630);
        uint64_t v8 = *(int *)(v7 + 64);
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = sub_1A7571B60();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        *(_OWORD *)&a1[*(int *)(v7 + 80)] = *(_OWORD *)&a2[*(int *)(v7 + 80)];
LABEL_18:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_1A743B1E0()
{
  uint64_t v5 = &unk_1A7586D48;
  uint64_t v6 = &unk_1A7586D60;
  sub_1A73C3DCC();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(v0 - 8) + 64;
    swift_getTupleTypeLayout();
    uint64_t v10 = &v9;
    swift_getTupleTypeLayout();
    uint64_t v11 = &v4;
    uint64_t v5 = &unk_1A7586D90;
    uint64_t v6 = &unk_1A7586D60;
    uint64_t v7 = v2;
    uint64_t v8 = &unk_1A7586D60;
    swift_getTupleTypeLayout();
    uint64_t v12 = &v3;
    uint64_t v13 = &unk_1A7586DA8;
    uint64_t v14 = &unk_1A7586DC0;
    uint64_t v15 = &unk_1A7586DD8;
    id v16 = &unk_1A7586DF0;
    uint64_t v17 = &unk_1A7586D60;
    uint64_t v18 = &unk_1A7586E08;
    uint64_t v19 = &unk_1A7586E20;
    uint64_t v20 = &unk_1A7586E38;
    uint64_t v21 = MEMORY[0x1E4FBC850] + 64;
    uint64_t v22 = &unk_1A7586E50;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t getEnumTagSinglePayload for REMUserOperation(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 65285 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65285 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65285;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65285;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65285;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  if (v6 <= 5) {
    int v7 = -1;
  }
  else {
    int v7 = v6 ^ 0xFF;
  }
  return (v7 + 1);
}

uint64_t storeEnumTagSinglePayload for REMUserOperation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65285 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65285 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 251;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A743B4C4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = -(char)a2;
        break;
    }
  }
  return result;
}

uint64_t sub_1A743B4EC(unsigned __int8 *a1)
{
  if (a1[1] <= 4u) {
    return a1[1];
  }
  else {
    return *a1 + 5;
  }
}

unsigned char *sub_1A743B504(unsigned char *result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *uint64_t result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  result[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMUserOperation()
{
  return &type metadata for REMUserOperation;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarUserOperation()
{
  return &type metadata for REMRemindersInCalendarUserOperation;
}

unsigned char *storeEnumTagSinglePayload for REMRemindersWidgetUserOperation(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A743B5E0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersWidgetUserOperation()
{
  return &type metadata for REMRemindersWidgetUserOperation;
}

uint64_t getEnumTagSinglePayload for REMRemindersOpenUserOperation(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFFE) {
    goto LABEL_17;
  }
  if (a2 + 61442 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 61442 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 61442;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 61442;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 61442;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 14) | (4 * ((*a1 >> 4) & 0x3E0 | (*a1 >> 3)))) ^ 0xFFF;
  if (v6 >= 0xFFD) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for REMRemindersOpenUserOperation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 61442 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 61442 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFFD)
  {
    unsigned int v6 = ((a2 - 4094) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 4094;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A743B7A4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2)
        {
LABEL_18:
          unsigned int v7 = ((-a2 >> 2) & 0x3FF) - (a2 << 10);
          *(_WORD *)uint64_t result = (16 * v7) & 0xFE00 | (8 * (v7 & 0x1F));
        }
        break;
    }
  }
  return result;
}

uint64_t sub_1A743B7CC(unsigned __int16 *a1)
{
  unsigned int v1 = *a1;
  int v2 = (__int16)v1;
  unsigned int v3 = v1 >> 14;
  unsigned int v4 = (v1 & 7 | (8 * ((v1 >> 8) & 1))) + 2;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return v4;
  }
}

_WORD *sub_1A743B7F4(_WORD *result)
{
  *result &= 0x3FFFu;
  return result;
}

_WORD *sub_1A743B804(_WORD *result, unsigned int a2)
{
  if (a2 < 2) {
    *uint64_t result = *result & 0x107 | ((_WORD)a2 << 14);
  }
  else {
    *uint64_t result = (32 * (a2 - 2)) & 0x100 | (a2 - 2) & 7 | 0x8000;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersOpenUserOperation()
{
  return &type metadata for REMRemindersOpenUserOperation;
}

unsigned char *_s19ReminderKitInternal29REMRemindersOpenUserOperationO13SmartListTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A743B918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersOpenUserOperation.SmartListType()
{
  return &type metadata for REMRemindersOpenUserOperation.SmartListType;
}

unsigned char *storeEnumTagSinglePayload for REMRemindersCreateListUserOperation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A743BA1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersCreateListUserOperation()
{
  return &type metadata for REMRemindersCreateListUserOperation;
}

uint64_t getEnumTagSinglePayload for REMRDLUserOperationDetail(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7A) {
    goto LABEL_17;
  }
  if (a2 + 134 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 134) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 134;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 134;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 134;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v6 >= 0x79) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for REMRDLUserOperationDetail(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 134 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 134) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7A) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x79)
  {
    unsigned int v6 = ((a2 - 122) >> 8) + 1;
    *uint64_t result = a2 - 122;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A743BBCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1A743BBF4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 <= 0x3F) {
    return v1 >> 5;
  }
  else {
    return (v1 | 0xFFFFFFFE) + 2 * (v1 >> 5);
  }
}

unsigned char *sub_1A743BC10(unsigned char *result)
{
  *result &= 0x1Fu;
  return result;
}

unsigned char *sub_1A743BC20(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *uint64_t result = *result & 1 | (32 * a2);
  }
  else {
    *uint64_t result = (a2 & 1 | (32 * (a2 >> 1))) + 32;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRDLUserOperationDetail()
{
  return &type metadata for REMRDLUserOperationDetail;
}

unsigned char *storeEnumTagSinglePayload for REMSharedListUserOperationDetail(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A743BD30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSharedListUserOperationDetail()
{
  return &type metadata for REMSharedListUserOperationDetail;
}

id REMSearchableItemAttributeName.attributeKey.getter()
{
  BOOL v1 = *v0 < 2u;
  id v2 = objc_allocWithZone(MEMORY[0x1E4F237C0]);
  int v3 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v3, 0, 0, v1, 0);

  if (!v4)
  {
    __break(1u);
    JUMPOUT(0x1A743BF10);
  }
  return v4;
}

unint64_t REMSearchableItemAttributeName.rawValue.getter()
{
  unint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656A624F4D45525FLL;
      break;
    case 2:
      unint64_t result = 0x6F6363414D45525FLL;
      break;
    case 3:
      unint64_t result = 0x7473694C4D45525FLL;
      break;
    case 4:
      unint64_t result = 0x6D6574494D45525FLL;
      break;
    case 5:
      unint64_t result = 0x67616C464D45525FLL;
      break;
    case 6:
      unint64_t result = 0x655273494D45525FLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

ReminderKitInternal::REMSearchableItemAttributeName_optional __swiftcall REMSearchableItemAttributeName.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *id v2 = v5;
  return result;
}

void *static REMSearchableItemAttributeName.allCases.getter()
{
  return &unk_1EFC8FBE8;
}

uint64_t sub_1A743C0D4(unsigned __int8 *a1, char *a2)
{
  return sub_1A7541C2C(*a1, *a2);
}

uint64_t sub_1A743C0E0()
{
  return sub_1A75040B8();
}

uint64_t sub_1A743C0EC()
{
  return sub_1A75027B4();
}

uint64_t sub_1A743C0F4()
{
  return sub_1A75040B8();
}

ReminderKitInternal::REMSearchableItemAttributeName_optional sub_1A743C0FC(Swift::String *a1)
{
  return REMSearchableItemAttributeName.init(rawValue:)(*a1);
}

unint64_t sub_1A743C108@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = REMSearchableItemAttributeName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1A743C130(void *a1@<X8>)
{
  *a1 = &unk_1EFC8FBE8;
}

uint64_t REMSearchableItemType.entityName.getter()
{
  id v0 = objc_msgSend(self, sel_cdEntityName);
  uint64_t v1 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v1;
}

ReminderKitInternal::REMSearchableItemType_optional __swiftcall REMSearchableItemType.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (ReminderKitInternal::REMSearchableItemType_optional)rawValue;
}

uint64_t REMSearchableItemType.rawValue.getter()
{
  return *v0;
}

uint64_t sub_1A743C1DC()
{
  return sub_1A75729E0();
}

uint64_t sub_1A743C23C()
{
  return sub_1A7572990();
}

BOOL static REMSearchableListType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t REMSearchableListType.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t sub_1A743C2D0()
{
  if (*v0) {
    return 1701736302;
  }
  else {
    return 0x797265636F7267;
  }
}

uint64_t sub_1A743C304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74433C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A743C32C(uint64_t a1)
{
  unint64_t v2 = sub_1A743C738();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A743C368(uint64_t a1)
{
  unint64_t v2 = sub_1A743C738();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A743C3A4(uint64_t a1)
{
  unint64_t v2 = sub_1A743C7E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A743C3E0(uint64_t a1)
{
  unint64_t v2 = sub_1A743C7E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A743C41C(uint64_t a1)
{
  unint64_t v2 = sub_1A743C78C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A743C458(uint64_t a1)
{
  unint64_t v2 = sub_1A743C78C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSearchableListType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3680);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3688);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  unsigned int v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3690);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A743C738();
  sub_1A75741B0();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A743C78C();
    uint64_t v14 = v18;
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A743C7E0();
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_1A743C738()
{
  unint64_t result = qword_1E96F3698;
  if (!qword_1E96F3698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3698);
  }
  return result;
}

unint64_t sub_1A743C78C()
{
  unint64_t result = qword_1E96F36A0;
  if (!qword_1E96F36A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F36A0);
  }
  return result;
}

unint64_t sub_1A743C7E0()
{
  unint64_t result = qword_1E96F36A8;
  if (!qword_1E96F36A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F36A8);
  }
  return result;
}

uint64_t REMSearchableListType.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t REMSearchableListType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F36B0);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F36B8);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unsigned int v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F36C0);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A743C738();
  uint64_t v11 = v32;
  sub_1A7574190();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_1A7573A70();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A7573640();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
    void *v22 = &type metadata for REMSearchableListType;
    sub_1A75739A0();
    sub_1A7573620();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A743C78C();
    uint64_t v18 = v14;
    sub_1A7573990();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A743C7E0();
    sub_1A7573990();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_1A743CCD4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMSearchableListType.init(from:)(a1, a2);
}

uint64_t sub_1A743CCEC(void *a1)
{
  return REMSearchableListType.encode(to:)(a1);
}

ReminderKitInternal::REMStringMatchingStyle_optional __swiftcall REMStringMatchingStyle.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (ReminderKitInternal::REMStringMatchingStyle_optional)rawValue;
}

uint64_t REMStringMatchingStyle.rawValue.getter()
{
  return *v0;
}

ReminderKitInternal::REMStringMatchingStyle_optional sub_1A743CD20(Swift::Int *a1)
{
  return REMStringMatchingStyle.init(rawValue:)(*a1);
}

uint64_t sub_1A743CD28()
{
  return sub_1A75729E0();
}

uint64_t sub_1A743CD88()
{
  return sub_1A7572990();
}

uint64_t REMSearchCriterion.Inclusion.description.getter()
{
  uint64_t v1 = 0x6564756C636E69;
  if (*v0 != 1) {
    uint64_t v1 = 0x466564756C636E69;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6564756C637865;
  }
}

BOOL static REMSearchCriterion.Inclusion.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMSearchCriterion.Inclusion.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t sub_1A743CE74()
{
  uint64_t v1 = 0x6564756C636E69;
  if (*v0 != 1) {
    uint64_t v1 = 0x466564756C636E69;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6564756C637865;
  }
}

uint64_t sub_1A743CED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A74434A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A743CEF8(uint64_t a1)
{
  unint64_t v2 = sub_1A743D43C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A743CF34(uint64_t a1)
{
  unint64_t v2 = sub_1A743D43C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A743CF70(uint64_t a1)
{
  unint64_t v2 = sub_1A743D538();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A743CFAC(uint64_t a1)
{
  unint64_t v2 = sub_1A743D538();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A743CFE8(uint64_t a1)
{
  unint64_t v2 = sub_1A743D4E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A743D024(uint64_t a1)
{
  unint64_t v2 = sub_1A743D4E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A743D060(uint64_t a1)
{
  unint64_t v2 = sub_1A743D490();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A743D09C(uint64_t a1)
{
  unint64_t v2 = sub_1A743D490();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSearchCriterion.Inclusion.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F36D0);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F36D8);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F36E0);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F36E8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A743D43C();
  sub_1A75741B0();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_1A743D4E4();
      sub_1A7573AB0();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_1A743D490();
      char v17 = v23;
      sub_1A7573AB0();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_1A743D538();
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_1A743D43C()
{
  unint64_t result = qword_1E96F36F0;
  if (!qword_1E96F36F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F36F0);
  }
  return result;
}

unint64_t sub_1A743D490()
{
  unint64_t result = qword_1E96F36F8;
  if (!qword_1E96F36F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F36F8);
  }
  return result;
}

unint64_t sub_1A743D4E4()
{
  unint64_t result = qword_1E96F3700;
  if (!qword_1E96F3700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3700);
  }
  return result;
}

unint64_t sub_1A743D538()
{
  unint64_t result = qword_1E96F3708;
  if (!qword_1E96F3708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3708);
  }
  return result;
}

uint64_t REMSearchCriterion.Inclusion.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t REMSearchCriterion.Inclusion.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3710);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3718);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3720);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F3728);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A743D43C();
  uint64_t v12 = (uint64_t)v39;
  sub_1A7574190();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_1A7573A70();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_1A7573640();
    swift_allocError();
    uint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
    *uint64_t v23 = &type metadata for REMSearchCriterion.Inclusion;
    sub_1A75739A0();
    sub_1A7573620();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x1E4FBBA70], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_1A743D4E4();
      uint64_t v18 = v30;
      sub_1A7573990();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_1A743D490();
      uint64_t v25 = v30;
      sub_1A7573990();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_1A743D538();
    uint64_t v24 = v30;
    sub_1A7573990();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_1A743DB8C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMSearchCriterion.Inclusion.init(from:)(a1, a2);
}

uint64_t sub_1A743DBA4(void *a1)
{
  return REMSearchCriterion.Inclusion.encode(to:)(a1);
}

id CSSearchableItemAttributeSet.rem_objectID.getter()
{
  return sub_1A743E2E4(1);
}

void CSSearchableItemAttributeSet.rem_objectID.setter(void *a1)
{
}

uint64_t CSSearchableItemAttributeSet.rem_objectIDString.getter()
{
  return sub_1A743E6B8(1);
}

void CSSearchableItemAttributeSet.rem_objectIDString.setter(uint64_t a1, uint64_t a2)
{
}

void (*CSSearchableItemAttributeSet.rem_objectID.modify(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[1] = v1;
  uint64_t v4 = sub_1A75719C0();
  v3[2] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[3] = v5;
  v3[4] = malloc(*(void *)(v5 + 64));
  *uint64_t v3 = CSSearchableItemAttributeSet.rem_objectID.getter();
  return sub_1A743DCC8;
}

void sub_1A743DCC8(id **a1, char a2)
{
}

uint64_t sub_1A743DCEC(uint64_t a1, unint64_t *a2)
{
  uint64_t v4 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v2, sel_attributeForKey_, v4);

  if (v5
    && (sub_1A7573330(),
        swift_unknownObjectRelease(),
        sub_1A72BEE44(v8, v9),
        sub_1A72BEE44(v9, v8),
        sub_1A72BEFEC(0, a2),
        (swift_dynamicCast() & 1) != 0))
  {
    return v7;
  }
  else
  {
    return 0;
  }
}

void (*CSSearchableItemAttributeSet.rem_objectIDString.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = sub_1A743DCEC(1, (unint64_t *)&qword_1E96F1510);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1A743DF94;
}

void sub_1A743DF94(uint64_t a1, char a2)
{
}

id CSSearchableItemAttributeSet.rem_accountID.getter()
{
  return sub_1A743E2E4(2);
}

void sub_1A743DFC0(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = sub_1A75719C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  if (*a1)
  {
    id v12 = objc_msgSend(v11, sel_urlRepresentation);
    sub_1A7571940();

    uint64_t v13 = sub_1A7571890();
    uint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  a5(v13, v15);
}

void CSSearchableItemAttributeSet.rem_accountID.setter(void *a1)
{
}

uint64_t CSSearchableItemAttributeSet.rem_accountIDString.getter()
{
  return sub_1A743E6B8(2);
}

void CSSearchableItemAttributeSet.rem_accountIDString.setter(uint64_t a1, uint64_t a2)
{
}

void (*CSSearchableItemAttributeSet.rem_accountID.modify(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[1] = v1;
  uint64_t v4 = sub_1A75719C0();
  v3[2] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[3] = v5;
  v3[4] = malloc(*(void *)(v5 + 64));
  *uint64_t v3 = CSSearchableItemAttributeSet.rem_accountID.getter();
  return sub_1A743E204;
}

void sub_1A743E204(id **a1, char a2)
{
}

void (*CSSearchableItemAttributeSet.rem_accountIDString.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = sub_1A743DCEC(2, (unint64_t *)&qword_1E96F1510);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1A743E2B4;
}

void sub_1A743E2B4(uint64_t a1, char a2)
{
}

id CSSearchableItemAttributeSet.rem_listID.getter()
{
  return sub_1A743E2E4(3);
}

id sub_1A743E2E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C30);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A75719C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (id)sub_1A743DCEC(a1, (unint64_t *)&qword_1E96F1510);
  if (v9)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    sub_1A7571990();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1A736F038((uint64_t)v4);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      uint64_t v10 = (void *)sub_1A75718E0();
      id v9 = objc_msgSend(self, sel_objectIDWithURL_, v10);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  return v9;
}

void CSSearchableItemAttributeSet.rem_listID.setter(void *a1)
{
}

void sub_1A743E4F8(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = v4;
  uint64_t v8 = sub_1A75719C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v12 = objc_msgSend(a1, sel_urlRepresentation);
    sub_1A7571940();

    sub_1A7571890();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v13 = sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  id v14 = objc_allocWithZone(MEMORY[0x1E4F237C0]);
  uint64_t v15 = (void *)sub_1A75725E0();
  id v16 = objc_msgSend(v14, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v15, 0, 0, a4 & 1, 0);

  if (v16)
  {
    objc_msgSend(v6, sel_setValue_forCustomKey_, v13, v16);
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t CSSearchableItemAttributeSet.rem_listIDString.getter()
{
  return sub_1A743E6B8(3);
}

uint64_t sub_1A743E6B8(uint64_t a1)
{
  uint64_t v1 = sub_1A743DCEC(a1, (unint64_t *)&qword_1E96F1510);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = (void *)v1;
  uint64_t v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v3;
}

void CSSearchableItemAttributeSet.rem_listIDString.setter(uint64_t a1, uint64_t a2)
{
}

void sub_1A743E73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a2)
  {
    uint64_t v7 = sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  id v8 = objc_allocWithZone(MEMORY[0x1E4F237C0]);
  uint64_t v9 = (void *)sub_1A75725E0();
  id v10 = objc_msgSend(v8, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v9, 0, 0, a5 & 1, 0);

  if (v10)
  {
    objc_msgSend(v5, sel_setValue_forCustomKey_, v7, v10);
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void (*CSSearchableItemAttributeSet.rem_listID.modify(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[1] = v1;
  uint64_t v4 = sub_1A75719C0();
  v3[2] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[3] = v5;
  v3[4] = malloc(*(void *)(v5 + 64));
  *uint64_t v3 = CSSearchableItemAttributeSet.rem_listID.getter();
  return sub_1A743E8DC;
}

void sub_1A743E8DC(id **a1, char a2)
{
}

void sub_1A743E8FC(id **a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = *a1;
  id v7 = **a1;
  if ((a2 & 1) == 0)
  {
    if (v7)
    {
      id v14 = (void (**)(void *, void *))v6[3];
      uint64_t v13 = v6[4];
      uint64_t v15 = v6[2];
      id v16 = objc_msgSend(**a1, sel_urlRepresentation);
      sub_1A7571940();

      sub_1A7571890();
      v14[1](v13, v15);
      uint64_t v17 = sub_1A75725E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = 0;
    }
    id v22 = objc_allocWithZone(MEMORY[0x1E4F237C0]);
    uint64_t v23 = (void *)sub_1A75725E0();
    id v24 = objc_msgSend(v22, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v23, 0, 0, a5 & 1, 0);

    if (v24)
    {
      uint64_t v21 = v6[4];
      objc_msgSend(v6[1], sel_setValue_forCustomKey_, v17, v24);

      swift_unknownObjectRelease();
      goto LABEL_12;
    }
LABEL_16:
    __break(1u);
    return;
  }
  if (v7)
  {
    uint64_t v9 = (void (**)(void *, void *))v6[3];
    id v8 = v6[4];
    id v10 = v6[2];
    id v11 = objc_msgSend(v7, sel_urlRepresentation);
    sub_1A7571940();

    sub_1A7571890();
    v9[1](v8, v10);
    uint64_t v12 = sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  id v18 = objc_allocWithZone(MEMORY[0x1E4F237C0]);
  uint64_t v19 = (void *)sub_1A75725E0();
  id v20 = objc_msgSend(v18, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v19, 0, 0, a5 & 1, 0);

  if (!v20)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v21 = v6[4];
  objc_msgSend(v6[1], sel_setValue_forCustomKey_, v12, v20);

  swift_unknownObjectRelease();
  id v7 = *v6;
LABEL_12:

  free(v21);

  free(v6);
}

void sub_1A743EB64(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1A743DCEC(a1, (unint64_t *)&qword_1E96F1510);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void (*CSSearchableItemAttributeSet.rem_listIDString.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = sub_1A743DCEC(3, (unint64_t *)&qword_1E96F1510);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1A743EC58;
}

void sub_1A743EC58(uint64_t a1, char a2)
{
}

void sub_1A743EC78(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v7 = *(void *)(a1 + 8);
  if (a2)
  {
    if (v7)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1A75725E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = 0;
    }
    id v10 = objc_allocWithZone(MEMORY[0x1E4F237C0]);
    id v11 = (void *)sub_1A75725E0();
    id v12 = objc_msgSend(v10, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v11, 0, 0, a5 & 1, 0);

    if (v12)
    {
      objc_msgSend(*(id *)(a1 + 16), sel_setValue_forCustomKey_, v8, v12);

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  if (v7)
  {
    uint64_t v9 = sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v13 = objc_allocWithZone(MEMORY[0x1E4F237C0]);
  id v14 = (void *)sub_1A75725E0();
  id v15 = objc_msgSend(v13, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v14, 0, 0, a5 & 1, 0);

  if (!v15) {
    goto LABEL_17;
  }
  objc_msgSend(*(id *)(a1 + 16), sel_setValue_forCustomKey_, v9, v15);

  swift_unknownObjectRelease();
}

void CSSearchableItemAttributeSet.rem_itemType.getter(char *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1A743DCEC(4, (unint64_t *)&unk_1E96F3860);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_integerValue);

    if (v4 == (id)1) {
      char v5 = 1;
    }
    else {
      char v5 = 2;
    }
    if (!v4) {
      char v5 = 0;
    }
  }
  else
  {
    char v5 = 2;
  }
  *a1 = v5;
}

void CSSearchableItemAttributeSet.rem_itemType.setter(unsigned __int8 *a1)
{
  int v2 = *a1;
  if (v2 == 2 || (id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v2 & 1)) == 0) {
    id v4 = 0;
  }
  else {
    id v4 = v3;
  }
  id v5 = objc_allocWithZone(MEMORY[0x1E4F237C0]);
  uint64_t v6 = (void *)sub_1A75725E0();
  id v7 = objc_msgSend(v5, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v6, 0, 0, 0, 0);

  if (v7)
  {
    objc_msgSend(v1, sel_setValue_forCustomKey_, v4, v7);

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void (*CSSearchableItemAttributeSet.rem_itemType.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)a1 = v1;
  id v3 = (void *)sub_1A743DCEC(4, (unint64_t *)&unk_1E96F3860);
  if (v3)
  {
    id v4 = v3;
    id v5 = objc_msgSend(v3, sel_integerValue);

    if (v5 == (id)1) {
      char v6 = 1;
    }
    else {
      char v6 = 2;
    }
    if (!v5) {
      char v6 = 0;
    }
  }
  else
  {
    char v6 = 2;
  }
  *(unsigned char *)(a1 + 8) = v6;
  return sub_1A743F06C;
}

void sub_1A743F06C(uint64_t a1, char a2)
{
  if (a2)
  {
    char v3 = *(unsigned char *)(a1 + 8);
    int v2 = (unsigned __int8 *)&v3;
  }
  else
  {
    char v4 = *(unsigned char *)(a1 + 8);
    int v2 = (unsigned __int8 *)&v4;
  }
  CSSearchableItemAttributeSet.rem_itemType.setter(v2);
}

id CSSearchableItemAttributeSet.rem_flagged.getter()
{
  id v0 = (void *)sub_1A743DCEC(5, (unint64_t *)&unk_1E96F3860);
  uint64_t v1 = v0;
  if (!v0) {
    return 0;
  }
  id v2 = objc_msgSend(v0, sel_integerValue);

  return v2;
}

void sub_1A743F11C(uint64_t a1@<X8>)
{
  id v2 = (void *)sub_1A743DCEC(5, (unint64_t *)&unk_1E96F3860);
  char v3 = v2;
  if (v2)
  {
    id v4 = objc_msgSend(v2, sel_integerValue);
  }
  else
  {
    id v4 = 0;
  }
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v3 == 0;
}

void CSSearchableItemAttributeSet.rem_flagged.setter(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0 || (id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1)) == 0) {
    id v4 = 0;
  }
  else {
    id v4 = v3;
  }
  id v5 = objc_allocWithZone(MEMORY[0x1E4F237C0]);
  char v6 = (void *)sub_1A75725E0();
  id v7 = objc_msgSend(v5, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v6, 0, 0, 0, 0);

  if (v7)
  {
    objc_msgSend(v2, sel_setValue_forCustomKey_, v4, v7);

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void (*CSSearchableItemAttributeSet.rem_flagged.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  id v3 = (void *)sub_1A743DCEC(5, (unint64_t *)&unk_1E96F3860);
  id v4 = v3;
  if (v3)
  {
    id v5 = objc_msgSend(v3, sel_integerValue);
  }
  else
  {
    id v5 = 0;
  }
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v4 == 0;
  return sub_1A743F338;
}

void sub_1A743F338(uint64_t a1)
{
}

uint64_t CSSearchableItemAttributeSet.rem_isRecurrent.getter()
{
  return sub_1A743F450(6);
}

void CSSearchableItemAttributeSet.rem_isRecurrent.setter(char a1)
{
}

void (*CSSearchableItemAttributeSet.rem_isRecurrent.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  id v3 = (void *)sub_1A743DCEC(6, (unint64_t *)&unk_1E96F3860);
  if (v3)
  {
    id v4 = v3;
    unsigned __int8 v5 = objc_msgSend(v3, sel_BOOLValue);
  }
  else
  {
    unsigned __int8 v5 = 2;
  }
  *(unsigned char *)(a1 + 8) = v5;
  return sub_1A743F420;
}

void sub_1A743F420(uint64_t a1)
{
}

uint64_t CSSearchableItemAttributeSet.rem_shouldCategorizeGroceryItems.getter()
{
  return sub_1A743F450(7);
}

uint64_t sub_1A743F450(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1A743DCEC(a1, (unint64_t *)&unk_1E96F3860);
  if (!v1) {
    return 2;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v1, sel_BOOLValue);

  return (uint64_t)v3;
}

void sub_1A743F4A8(uint64_t a1@<X3>, unsigned __int8 *a2@<X8>)
{
  id v3 = (void *)sub_1A743DCEC(a1, (unint64_t *)&unk_1E96F3860);
  if (v3)
  {
    id v4 = v3;
    unsigned __int8 v5 = objc_msgSend(v3, sel_BOOLValue);
  }
  else
  {
    unsigned __int8 v5 = 2;
  }
  *a2 = v5;
}

void CSSearchableItemAttributeSet.rem_shouldCategorizeGroceryItems.setter(char a1)
{
}

void sub_1A743F530(char a1)
{
  if (a1 == 2 || (id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, a1 & 1)) == 0) {
    id v4 = 0;
  }
  else {
    id v4 = v3;
  }
  id v5 = objc_allocWithZone(MEMORY[0x1E4F237C0]);
  char v6 = (void *)sub_1A75725E0();
  id v7 = objc_msgSend(v5, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v6, 0, 0, 0, 0);

  if (v7)
  {
    objc_msgSend(v1, sel_setValue_forCustomKey_, v4, v7);

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void (*CSSearchableItemAttributeSet.rem_shouldCategorizeGroceryItems.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  id v3 = (void *)sub_1A743DCEC(7, (unint64_t *)&unk_1E96F3860);
  if (v3)
  {
    id v4 = v3;
    unsigned __int8 v5 = objc_msgSend(v3, sel_BOOLValue);
  }
  else
  {
    unsigned __int8 v5 = 2;
  }
  *(unsigned char *)(a1 + 8) = v5;
  return sub_1A743F6C8;
}

void sub_1A743F6C8(uint64_t a1)
{
}

uint64_t REMReminder.displayString.getter()
{
  uint64_t v1 = v0;
  objc_msgSend(v0, sel_priority);
  uint64_t v2 = REMReminderPriorityLevelForPriority();
  if (v2 == 3
    || v2 == 2
    || (v2 == 1 ? (unint64_t v3 = 0xE100000000000000) : (unint64_t v3 = 0xE000000000000000), (v3 & 0x300000000000000) != 0))
  {
    swift_bridgeObjectRetain();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
  }
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v0, sel_titleAsString);
  if (!v4) {
    id v4 = (id)_REMGetLocalizedString();
  }
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  sub_1A7572740();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v1, sel_notesAsString);
  if (v5)
  {
    char v6 = v5;
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t REMList.displayString.getter()
{
  id v1 = objc_msgSend(v0, sel_displayName);
  uint64_t v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v2;
}

unint64_t sub_1A743F900()
{
  unint64_t result = qword_1E96F3738;
  if (!qword_1E96F3738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3738);
  }
  return result;
}

unint64_t sub_1A743F958()
{
  unint64_t result = qword_1E96F3740;
  if (!qword_1E96F3740)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3748);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3740);
  }
  return result;
}

unint64_t sub_1A743F9B8()
{
  unint64_t result = qword_1E96F3750;
  if (!qword_1E96F3750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3750);
  }
  return result;
}

unint64_t sub_1A743FA10()
{
  unint64_t result = qword_1E96F3758;
  if (!qword_1E96F3758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3758);
  }
  return result;
}

unint64_t sub_1A743FA68()
{
  unint64_t result = qword_1E96F3760;
  if (!qword_1E96F3760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3760);
  }
  return result;
}

unint64_t sub_1A743FAC0()
{
  unint64_t result = qword_1E96F3768;
  if (!qword_1E96F3768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3768);
  }
  return result;
}

uint64_t sub_1A743FB14()
{
  id v1 = objc_msgSend(v0, sel_displayName);
  uint64_t v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v2;
}

id sub_1A743FB6C@<X0>(void *a1@<X8>)
{
  id result = CSSearchableItemAttributeSet.rem_objectID.getter();
  *a1 = result;
  return result;
}

void sub_1A743FB98(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1A743FBC4(uint64_t *a1@<X8>)
{
}

uint64_t sub_1A743FBE0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))CSSearchableItemAttributeSet.rem_objectIDString.setter);
}

id sub_1A743FBF8@<X0>(void *a1@<X8>)
{
  id result = CSSearchableItemAttributeSet.rem_accountID.getter();
  *a1 = result;
  return result;
}

void sub_1A743FC24(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1A743FC50(uint64_t *a1@<X8>)
{
}

uint64_t sub_1A743FC6C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))CSSearchableItemAttributeSet.rem_accountIDString.setter);
}

uint64_t keypath_set_8Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

id sub_1A743FCCC@<X0>(void *a1@<X8>)
{
  id result = CSSearchableItemAttributeSet.rem_listID.getter();
  *a1 = result;
  return result;
}

void sub_1A743FCF8(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1A743FD24(uint64_t *a1@<X8>)
{
}

uint64_t sub_1A743FD40(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))CSSearchableItemAttributeSet.rem_listIDString.setter);
}

void sub_1A743FD58(unsigned char *a1@<X8>)
{
  CSSearchableItemAttributeSet.rem_itemType.getter(&v2);
  *a1 = v2;
}

void sub_1A743FD94(unsigned __int8 *a1)
{
  unsigned __int8 v1 = *a1;
  CSSearchableItemAttributeSet.rem_itemType.setter(&v1);
}

void sub_1A743FDD0(uint64_t a1)
{
}

void sub_1A743FE04(unsigned __int8 *a1@<X8>)
{
}

void sub_1A743FE20(char *a1)
{
}

void sub_1A743FE48(unsigned __int8 *a1@<X8>)
{
}

void sub_1A743FE64(char *a1)
{
}

unsigned char *storeEnumTagSinglePayload for REMSearchableItemAttributeName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *id result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A743FF58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSearchableItemAttributeName()
{
  return &type metadata for REMSearchableItemAttributeName;
}

ValueMetadata *type metadata accessor for REMSearchableItemType()
{
  return &type metadata for REMSearchableItemType;
}

uint64_t dispatch thunk of REMSearchableItem.displayString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for REMSearchableListType()
{
  return &type metadata for REMSearchableListType;
}

ValueMetadata *type metadata accessor for REMStringMatchingStyle()
{
  return &type metadata for REMStringMatchingStyle;
}

char *initializeBufferWithCopyOfBuffer for REMSearchCriterion(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        *(void *)a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 3u:
        uint64_t v9 = *a2;
        *(void *)a1 = *a2;
        a1[8] = *((unsigned char *)a2 + 8);
        id v10 = v9;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
      case 5u:
      case 9u:
        id v15 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v15;
        a1[16] = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 7u:
        uint64_t v11 = sub_1A7571B60();
        uint64_t v12 = *(void *)(v11 - 8);
        id v13 = *(unsigned int (**)(char **, uint64_t, uint64_t))(v12 + 48);
        if (v13(a2, 1, v11))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v12 + 16))(a1, a2, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        }
        uint64_t v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
        id v24 = &a1[v23];
        uint64_t v25 = (char *)a2 + v23;
        if (!v13((char **)v25, 1, v11)) {
          goto LABEL_30;
        }
        goto LABEL_29;
      case 0xAu:
        uint64_t v11 = sub_1A7571B60();
        uint64_t v12 = *(void *)(v11 - 8);
        id v16 = *(unsigned int (**)(char **, uint64_t, uint64_t))(v12 + 48);
        if (v16(a2, 1, v11))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v12 + 16))(a1, a2, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        }
        uint64_t v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
        id v24 = &a1[v26];
        uint64_t v25 = (char *)a2 + v26;
        if (v16((char **)v25, 1, v11)) {
          goto LABEL_29;
        }
        goto LABEL_30;
      case 0xCu:
        uint64_t v11 = sub_1A7571B60();
        uint64_t v12 = *(void *)(v11 - 8);
        id v18 = *(unsigned int (**)(char **, uint64_t, uint64_t))(v12 + 48);
        if (v18(a2, 1, v11))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v12 + 16))(a1, a2, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        }
        uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
        id v24 = &a1[v27];
        uint64_t v25 = (char *)a2 + v27;
        if (v18((char **)v25, 1, v11)) {
          goto LABEL_29;
        }
        goto LABEL_30;
      case 0xDu:
        uint64_t v11 = sub_1A7571B60();
        uint64_t v12 = *(void *)(v11 - 8);
        id v20 = *(unsigned int (**)(char **, uint64_t, uint64_t))(v12 + 48);
        if (v20(a2, 1, v11))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v12 + 16))(a1, a2, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        }
        uint64_t v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
        id v24 = &a1[v28];
        uint64_t v25 = (char *)a2 + v28;
        if (v20((char **)v25, 1, v11))
        {
LABEL_29:
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
LABEL_30:
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v24, v25, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
      case 0x11u:
        id v22 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v22;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void destroy for REMSearchCriterion(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 4u:
    case 5u:
    case 9u:
    case 0x10u:
    case 0x11u:
      swift_bridgeObjectRelease();
      break;
    case 3u:
      uint64_t v6 = *a1;

      break;
    case 7u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
      uint64_t v2 = sub_1A7571B60();
      uint64_t v7 = *(void *)(v2 - 8);
      int v3 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48);
      if (!v3(a1, 1, v2)) {
        (*(void (**)(void **, uint64_t))(v7 + 8))(a1, v2);
      }
      unsigned int v4 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
      if (!v3((void **)v4, 1, v2))
      {
        int v5 = *(void (**)(char *, uint64_t))(v7 + 8);
        v5(v4, v2);
      }
      break;
    default:
      return;
  }
}

void *initializeWithCopy for REMSearchCriterion(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 3u:
      uint64_t v6 = (void *)*a2;
      *a1 = *a2;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      id v7 = v6;
      goto LABEL_27;
    case 4u:
    case 5u:
    case 9u:
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 7u:
      uint64_t v8 = sub_1A7571B60();
      uint64_t v9 = *(void *)(v8 - 8);
      id v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      if (v10((char *)a2, 1, v8))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
      uint64_t v21 = (char *)a1 + v20;
      id v22 = (char *)a2 + v20;
      if (v10(v22, 1, v8)) {
        goto LABEL_23;
      }
      goto LABEL_26;
    case 0xAu:
      uint64_t v8 = sub_1A7571B60();
      uint64_t v9 = *(void *)(v8 - 8);
      id v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      if (v13((char *)a2, 1, v8))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
      uint64_t v21 = (char *)a1 + v23;
      id v22 = (char *)a2 + v23;
      if (v13(v22, 1, v8)) {
        goto LABEL_23;
      }
      goto LABEL_26;
    case 0xCu:
      uint64_t v8 = sub_1A7571B60();
      uint64_t v9 = *(void *)(v8 - 8);
      id v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      if (v15((char *)a2, 1, v8))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
      uint64_t v21 = (char *)a1 + v24;
      id v22 = (char *)a2 + v24;
      if (v15(v22, 1, v8)) {
        goto LABEL_23;
      }
      goto LABEL_26;
    case 0xDu:
      uint64_t v8 = sub_1A7571B60();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      if (v17((char *)a2, 1, v8))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
      uint64_t v21 = (char *)a1 + v26;
      id v22 = (char *)a2 + v26;
      if (v17(v22, 1, v8))
      {
LABEL_23:
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
LABEL_26:
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v21, v22, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v21, 0, 1, v8);
      }
      goto LABEL_27;
    case 0x10u:
    case 0x11u:
      uint64_t v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      swift_bridgeObjectRetain();
LABEL_27:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for REMSearchCriterion(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A7441BAC((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_28;
      case 3u:
        uint64_t v6 = (void *)*a2;
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        id v7 = v6;
        goto LABEL_28;
      case 4u:
      case 5u:
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_28;
      case 7u:
        uint64_t v8 = sub_1A7571B60();
        uint64_t v9 = *(void *)(v8 - 8);
        id v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
        if (v10((char *)a2, 1, v8))
        {
          uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v9 + 16))(a1, a2, v8);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        }
        uint64_t v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        if (v10(v20, 1, v8)) {
          goto LABEL_24;
        }
        goto LABEL_27;
      case 0xAu:
        uint64_t v8 = sub_1A7571B60();
        uint64_t v9 = *(void *)(v8 - 8);
        uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
        if (v12((char *)a2, 1, v8))
        {
          uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v9 + 16))(a1, a2, v8);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        }
        uint64_t v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
        uint64_t v19 = (char *)a1 + v21;
        uint64_t v20 = (char *)a2 + v21;
        if (v12(v20, 1, v8)) {
          goto LABEL_24;
        }
        goto LABEL_27;
      case 0xCu:
        uint64_t v8 = sub_1A7571B60();
        uint64_t v9 = *(void *)(v8 - 8);
        uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
        if (v14((char *)a2, 1, v8))
        {
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v9 + 16))(a1, a2, v8);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        }
        uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
        uint64_t v19 = (char *)a1 + v22;
        uint64_t v20 = (char *)a2 + v22;
        if (v14(v20, 1, v8)) {
          goto LABEL_24;
        }
        goto LABEL_27;
      case 0xDu:
        uint64_t v8 = sub_1A7571B60();
        uint64_t v9 = *(void *)(v8 - 8);
        uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
        if (v16((char *)a2, 1, v8))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v9 + 16))(a1, a2, v8);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        }
        uint64_t v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
        uint64_t v19 = (char *)a1 + v24;
        uint64_t v20 = (char *)a2 + v24;
        if (v16(v20, 1, v8))
        {
LABEL_24:
          uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
LABEL_27:
          (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v19, v20, v8);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v19, 0, 1, v8);
        }
        goto LABEL_28;
      case 0x10u:
      case 0x11u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
LABEL_28:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1A7441BAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for REMSearchCriterion();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for REMSearchCriterion()
{
  uint64_t result = qword_1EB704B00;
  if (!qword_1EB704B00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *initializeWithTake for REMSearchCriterion(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 7u:
      uint64_t v6 = sub_1A7571B60();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
      if (v8(a2, 1, v6))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      if (!v8(v18, 1, v6)) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 0xAu:
      uint64_t v6 = sub_1A7571B60();
      uint64_t v7 = *(void *)(v6 - 8);
      id v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
      if (v10(a2, 1, v6))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
      uint64_t v17 = &a1[v19];
      uint64_t v18 = &a2[v19];
      if (v10(v18, 1, v6)) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 0xCu:
      uint64_t v6 = sub_1A7571B60();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
      if (v12(a2, 1, v6))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
      uint64_t v17 = &a1[v20];
      uint64_t v18 = &a2[v20];
      if (v12(v18, 1, v6)) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 0xDu:
      uint64_t v6 = sub_1A7571B60();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
      if (v14(a2, 1, v6))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
      uint64_t v17 = &a1[v22];
      uint64_t v18 = &a2[v22];
      if (v14(v18, 1, v6))
      {
LABEL_19:
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
LABEL_22:
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v17, v18, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for REMSearchCriterion(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A7441BAC((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 7u:
        uint64_t v6 = sub_1A7571B60();
        uint64_t v7 = *(void *)(v6 - 8);
        uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
        if (v8(a2, 1, v6))
        {
          uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
        uint64_t v17 = &a1[v16];
        uint64_t v18 = &a2[v16];
        if (!v8(v18, 1, v6)) {
          goto LABEL_23;
        }
        goto LABEL_20;
      case 0xAu:
        uint64_t v6 = sub_1A7571B60();
        uint64_t v7 = *(void *)(v6 - 8);
        id v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
        if (v10(a2, 1, v6))
        {
          uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        uint64_t v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
        uint64_t v17 = &a1[v19];
        uint64_t v18 = &a2[v19];
        if (v10(v18, 1, v6)) {
          goto LABEL_20;
        }
        goto LABEL_23;
      case 0xCu:
        uint64_t v6 = sub_1A7571B60();
        uint64_t v7 = *(void *)(v6 - 8);
        uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
        if (v12(a2, 1, v6))
        {
          uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
        uint64_t v17 = &a1[v20];
        uint64_t v18 = &a2[v20];
        if (v12(v18, 1, v6)) {
          goto LABEL_20;
        }
        goto LABEL_23;
      case 0xDu:
        uint64_t v6 = sub_1A7571B60();
        uint64_t v7 = *(void *)(v6 - 8);
        uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
        if (v14(a2, 1, v6))
        {
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48);
        uint64_t v17 = &a1[v22];
        uint64_t v18 = &a2[v22];
        if (v14(v18, 1, v6))
        {
LABEL_20:
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
LABEL_23:
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v17, v18, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
        }
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_1A7442A9C()
{
  uint64_t v5 = MEMORY[0x1E4FBAD80] + 64;
  uint64_t v6 = MEMORY[0x1E4FBAD80] + 64;
  uint64_t v7 = MEMORY[0x1E4FBAD80] + 64;
  uint64_t v8 = "\t";
  uint64_t v9 = &unk_1A7587650;
  id v10 = &unk_1A7587650;
  uint64_t v11 = &unk_1A7587668;
  sub_1A73C3DCC();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v12 = &v4;
    uint64_t v13 = &unk_1A7587668;
    uint64_t v14 = &unk_1A7587650;
    swift_getTupleTypeLayout2();
    uint64_t v15 = &v3;
    uint64_t v16 = &unk_1A7587668;
    swift_getTupleTypeLayout2();
    uint64_t v17 = &v2;
    swift_getTupleTypeLayout2();
    uint64_t v18 = &v1;
    uint64_t v19 = &unk_1A7587668;
    uint64_t v20 = &unk_1A7587668;
    uint64_t v21 = &unk_1A7587680;
    uint64_t v22 = &unk_1A7587680;
    uint64_t v23 = &unk_1A7587668;
    swift_initEnumMetadataMultiPayload();
  }
}

ValueMetadata *type metadata accessor for REMSearchCriterion.Inclusion()
{
  return &type metadata for REMSearchCriterion.Inclusion;
}

unsigned char *_s19ReminderKitInternal18REMSearchCriterionO9InclusionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7442CB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSearchCriterion.Inclusion.CodingKeys()
{
  return &type metadata for REMSearchCriterion.Inclusion.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSearchCriterion.Inclusion.ExcludeCodingKeys()
{
  return &type metadata for REMSearchCriterion.Inclusion.ExcludeCodingKeys;
}

ValueMetadata *type metadata accessor for REMSearchCriterion.Inclusion.IncludeCodingKeys()
{
  return &type metadata for REMSearchCriterion.Inclusion.IncludeCodingKeys;
}

ValueMetadata *type metadata accessor for REMSearchCriterion.Inclusion.IncludeForSiriCodingKeys()
{
  return &type metadata for REMSearchCriterion.Inclusion.IncludeForSiriCodingKeys;
}

unsigned char *_s19ReminderKitInternal21REMSearchableItemTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7442DE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSearchableListType.CodingKeys()
{
  return &type metadata for REMSearchableListType.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSearchableListType.GroceryCodingKeys()
{
  return &type metadata for REMSearchableListType.GroceryCodingKeys;
}

ValueMetadata *type metadata accessor for REMSearchableListType.NoneCodingKeys()
{
  return &type metadata for REMSearchableListType.NoneCodingKeys;
}

unint64_t sub_1A7442E44()
{
  unint64_t result = qword_1E96F37D0;
  if (!qword_1E96F37D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F37D0);
  }
  return result;
}

unint64_t sub_1A7442E9C()
{
  unint64_t result = qword_1E96F37D8;
  if (!qword_1E96F37D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F37D8);
  }
  return result;
}

unint64_t sub_1A7442EF4()
{
  unint64_t result = qword_1E96F37E0;
  if (!qword_1E96F37E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F37E0);
  }
  return result;
}

unint64_t sub_1A7442F4C()
{
  unint64_t result = qword_1E96F37E8;
  if (!qword_1E96F37E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F37E8);
  }
  return result;
}

unint64_t sub_1A7442FA4()
{
  unint64_t result = qword_1E96F37F0;
  if (!qword_1E96F37F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F37F0);
  }
  return result;
}

unint64_t sub_1A7442FFC()
{
  unint64_t result = qword_1E96F37F8;
  if (!qword_1E96F37F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F37F8);
  }
  return result;
}

unint64_t sub_1A7443054()
{
  unint64_t result = qword_1E96F3800;
  if (!qword_1E96F3800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3800);
  }
  return result;
}

unint64_t sub_1A74430AC()
{
  unint64_t result = qword_1E96F3808;
  if (!qword_1E96F3808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3808);
  }
  return result;
}

unint64_t sub_1A7443104()
{
  unint64_t result = qword_1E96F3810;
  if (!qword_1E96F3810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3810);
  }
  return result;
}

unint64_t sub_1A744315C()
{
  unint64_t result = qword_1E96F3818;
  if (!qword_1E96F3818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3818);
  }
  return result;
}

unint64_t sub_1A74431B4()
{
  unint64_t result = qword_1E96F3820;
  if (!qword_1E96F3820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3820);
  }
  return result;
}

unint64_t sub_1A744320C()
{
  unint64_t result = qword_1E96F3828;
  if (!qword_1E96F3828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3828);
  }
  return result;
}

unint64_t sub_1A7443264()
{
  unint64_t result = qword_1E96F3830;
  if (!qword_1E96F3830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3830);
  }
  return result;
}

unint64_t sub_1A74432BC()
{
  unint64_t result = qword_1E96F3838;
  if (!qword_1E96F3838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3838);
  }
  return result;
}

unint64_t sub_1A7443314()
{
  unint64_t result = qword_1E96F3840;
  if (!qword_1E96F3840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3840);
  }
  return result;
}

unint64_t sub_1A744336C()
{
  unint64_t result = qword_1E96F3848;
  if (!qword_1E96F3848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3848);
  }
  return result;
}

uint64_t sub_1A74433C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x797265636F7267 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701736302 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A74434A4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6564756C637865 && a2 == 0xE700000000000000;
  if (v3 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6564756C636E69 && a2 == 0xE700000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x466564756C636E69 && a2 == 0xEE0069726953726FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_1A744360C()
{
  unint64_t result = qword_1E96F3850;
  if (!qword_1E96F3850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3850);
  }
  return result;
}

unint64_t sub_1A7443660()
{
  unint64_t result = qword_1E96F3858;
  if (!qword_1E96F3858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3858);
  }
  return result;
}

uint64_t sub_1A74436B8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7443718()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A7443750(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1A74437B0()
{
  return swift_retain();
}

double sub_1A74437E8()
{
  swift_beginAccess();
  return *(double *)(v0 + 32);
}

uint64_t sub_1A744381C()
{
  swift_beginAccess();
  return *(void *)(v0 + 40);
}

uint64_t sub_1A7443850()
{
  swift_beginAccess();
  return *(void *)(v0 + 48);
}

void PointCloud.metric.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 57);
}

uint64_t PointCloud.__allocating_init(points:distanceCalculator:)(unint64_t a1, char *a2)
{
  uint64_t v4 = swift_allocObject();
  PointCloud.init(points:distanceCalculator:)(a1, a2);
  return v4;
}

uint64_t PointCloud.init(points:distanceCalculator:)(unint64_t a1, char *a2)
{
  *(void *)(v2 + 48) = 0;
  char v4 = *a2;
  *(unsigned char *)(v2 + 56) = 1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = 0;
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_1A75738D0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v11) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_7;
    }
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = MEMORY[0x1AD0CB800](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = *(void *)(a1 + 32);
    swift_retain();
  }
  swift_beginAccess();
  uint64_t v9 = *(void *)(v8 + 24);
  swift_release();
  swift_beginAccess();
  *(void *)(v2 + 48) = v9;
  *(unsigned char *)(v2 + 56) = 0;
LABEL_7:
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(unsigned char *)(v2 + 57) = v4;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = v10;
  sub_1A7443BD4();
  return v2;
}

uint64_t sub_1A7443A48(uint64_t a1)
{
  uint64_t v2 = v1;
  char v4 = (void *)(v1 + 16);
  swift_beginAccess();
  unint64_t v5 = *(void *)(v2 + 16);
  if (!(v5 >> 62))
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1A75738D0();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_3:
    swift_beginAccess();
    uint64_t v6 = *(void *)(a1 + 24);
    swift_beginAccess();
    *(void *)(v2 + 48) = v6;
    *(unsigned char *)(v2 + 56) = 0;
  }
LABEL_4:
  swift_beginAccess();
  uint64_t v7 = swift_retain();
  MEMORY[0x1AD0CABF0](v7);
  if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1A7572A60();
  }
  sub_1A7572AB0();
  sub_1A7572A30();
  swift_endAccess();
  if (*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = swift_beginAccess();
  *(void *)(v2 + 40) = v8;
  return result;
}

uint64_t sub_1A7443BD4()
{
  swift_beginAccess();
  unint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = Array<A>.average()(v1);
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_retain();
    swift_retain();
    unint64_t v3 = swift_bridgeObjectRetain();
    double v4 = sub_1A7444174(v3, v0, v2, 0.0);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_beginAccess();
    double v5 = v4 / (double)*(uint64_t *)(v2 + 24);
    swift_beginAccess();
    *(double *)(v0 + 32) = v5;
    swift_beginAccess();
    *(void *)(v0 + 24) = v2;
    swift_retain();
    swift_release();
    uint64_t v6 = *(void *)(v2 + 24);
    swift_release();
    uint64_t result = swift_beginAccess();
    *(void *)(v0 + 48) = v6;
  }
  else
  {
    swift_beginAccess();
    *(void *)(v0 + 24) = 0;
    swift_release();
    uint64_t result = swift_beginAccess();
    *(void *)(v0 + 48) = 0;
  }
  *(unsigned char *)(v0 + 56) = v2 == 0;
  return result;
}

uint64_t PointCloud.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t PointCloud.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186488](v0, 58, 7);
}

uint64_t sub_1A7443DC0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A7443E10@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 24);
  return swift_retain();
}

double sub_1A7443E60@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  double result = *(double *)(v3 + 32);
  *a2 = result;
  return result;
}

uint64_t sub_1A7443EA8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 32) = v2;
  return result;
}

uint64_t sub_1A7443EF4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return result;
}

uint64_t sub_1A7443F3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 40) = v2;
  return result;
}

uint64_t sub_1A7443F80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 56);
  *(void *)a2 = *(void *)(v3 + 48);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1A7443FD0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v4 + 48) = v2;
  *(unsigned char *)(v4 + 56) = v3;
  return result;
}

uint64_t type metadata accessor for PointCloud()
{
  return self;
}

uint64_t method lookup function for PointCloud(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PointCloud);
}

uint64_t dispatch thunk of PointCloud.points.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of PointCloud.center.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of PointCloud.variance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of PointCloud.numOfPoints.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of PointCloud.dimension.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of PointCloud.__allocating_init(points:distanceCalculator:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of PointCloud.addPoint(point:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

double sub_1A7444174(unint64_t a1, unint64_t a2, uint64_t a3, double a4)
{
  if (a1 >> 62) {
    goto LABEL_64;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v7)
  {
    while (1)
    {
      uint64_t v8 = 0;
      uint64_t v9 = a3 + 16;
      int v10 = *(unsigned __int8 *)(a2 + 57);
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v13 = MEMORY[0x1AD0CB800](v8, a1);
          BOOL v14 = __OFADD__(v8++, 1);
          if (v14) {
            goto LABEL_61;
          }
        }
        else
        {
          uint64_t v13 = *(void *)(a1 + 32 + 8 * v8);
          swift_retain();
          BOOL v14 = __OFADD__(v8++, 1);
          if (v14) {
            goto LABEL_61;
          }
        }
        if (!v10) {
          break;
        }
        if (v10 == 1)
        {
          a2 = (unint64_t)&v66;
          sub_1A73706F4(v13, a3);
          double v12 = v11;
          swift_release();
        }
        else
        {
          swift_beginAccess();
          a2 = *(void *)(v13 + 24);
          if ((a2 & 0x8000000000000000) != 0) {
            goto LABEL_62;
          }
          if (a2)
          {
            swift_beginAccess();
            swift_beginAccess();
            uint64_t v15 = *(void *)(v13 + 16);
            uint64_t v16 = *(void *)(v15 + 16);
            if (!v16) {
              goto LABEL_57;
            }
            uint64_t v17 = *(void *)v9;
            unint64_t v18 = *(void *)(*(void *)v9 + 16);
            if (!v18) {
              goto LABEL_58;
            }
            uint64_t v19 = v15 + 32;
            uint64_t v20 = v17 + 32;
            double v21 = *(double *)(v17 + 32);
            double v22 = *(double *)(v15 + 32);
            double v23 = v22 * v22;
            double v24 = v21 * v21;
            double v25 = v22 * v21 + 0.0;
            if (a2 != 1)
            {
              unint64_t v26 = v18 - 1;
              if (v18 - 1 >= v16 - 1) {
                unint64_t v26 = v16 - 1;
              }
              if (v26 >= a2 - 2) {
                unint64_t v26 = a2 - 2;
              }
              unint64_t v27 = v26 + 1;
              if (v27 > 4)
              {
                uint64_t v40 = v27 & 3;
                if ((v27 & 3) == 0) {
                  uint64_t v40 = 4;
                }
                unint64_t v41 = v27 - v40;
                unint64_t v28 = v41 + 1;
                char v42 = (float64x2_t *)(v15 + 56);
                id v43 = (float64x2_t *)(v17 + 56);
                do
                {
                  float64x2_t v44 = v42[-1];
                  float64x2_t v45 = v43[-1];
                  float64x2_t v46 = vmulq_f64(v44, v44);
                  float64x2_t v47 = vmulq_f64(*v42, *v42);
                  float64x2_t v48 = vmulq_f64(v45, v45);
                  float64x2_t v49 = vmulq_f64(*v43, *v43);
                  float64x2_t v50 = vmulq_f64(v44, v45);
                  float64x2_t v51 = vmulq_f64(*v42, *v43);
                  double v25 = v25 + v50.f64[0] + v50.f64[1] + v51.f64[0] + v51.f64[1];
                  double v23 = v23 + v46.f64[0] + v46.f64[1] + v47.f64[0] + v47.f64[1];
                  double v24 = v24 + v48.f64[0] + v48.f64[1] + v49.f64[0] + v49.f64[1];
                  v42 += 2;
                  v43 += 2;
                  v41 -= 4;
                }
                while (v41);
              }
              else
              {
                unint64_t v28 = 1;
              }
              while (v16 != v28)
              {
                if (v28 >= v18) {
                  goto LABEL_58;
                }
                double v52 = *(double *)(v19 + 8 * v28);
                double v53 = *(double *)(v20 + 8 * v28);
                double v23 = v23 + v52 * v52;
                double v24 = v24 + v53 * v53;
                double v25 = v25 + v52 * v53;
                if (a2 == ++v28) {
                  goto LABEL_44;
                }
              }
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
              goto LABEL_59;
            }
          }
          else
          {
            double v25 = 0.0;
            double v23 = 0.0;
            double v24 = 0.0;
          }
LABEL_44:
          swift_release();
          double v54 = sqrt(v23) * sqrt(v24);
          if ((*(void *)&v54 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
            double v55 = v25 / v54;
          }
          else {
            double v55 = 0.0;
          }
          double v12 = acos(v55) / 3.14159265;
        }
LABEL_5:
        a4 = a4 + v12;
        if (v8 == v7) {
          goto LABEL_65;
        }
      }
      swift_beginAccess();
      a2 = *(void *)(v13 + 24);
      if ((a2 & 0x8000000000000000) != 0) {
        goto LABEL_63;
      }
      if (!a2) {
        break;
      }
      swift_beginAccess();
      swift_beginAccess();
      uint64_t v29 = *(void *)(v13 + 16);
      uint64_t v30 = *(void *)(v29 + 16);
      if (!v30) {
        goto LABEL_59;
      }
      uint64_t v31 = *(void *)v9;
      unint64_t v32 = *(void *)(*(void *)v9 + 16);
      if (!v32) {
        goto LABEL_60;
      }
      uint64_t v33 = v29 + 32;
      uint64_t v34 = v31 + 32;
      double v35 = *(double *)(v29 + 32) - *(double *)(v31 + 32);
      double v36 = v35 * v35;
      if (a2 == 1) {
        goto LABEL_55;
      }
      unint64_t v37 = v32 - 1;
      if (v32 - 1 >= v30 - 1) {
        unint64_t v37 = v30 - 1;
      }
      if (v37 >= a2 - 2) {
        unint64_t v37 = a2 - 2;
      }
      unint64_t v38 = v37 + 1;
      if (v38 > 4)
      {
        uint64_t v56 = v38 & 3;
        if ((v38 & 3) == 0) {
          uint64_t v56 = 4;
        }
        unint64_t v57 = v38 - v56;
        unint64_t v39 = v57 + 1;
        uint64_t v58 = (float64x2_t *)(v29 + 56);
        uint64_t v59 = (float64x2_t *)(v31 + 56);
        do
        {
          float64x2_t v60 = vsubq_f64(v58[-1], v59[-1]);
          float64x2_t v61 = vsubq_f64(*v58, *v59);
          float64x2_t v62 = vmulq_f64(v60, v60);
          float64x2_t v63 = vmulq_f64(v61, v61);
          double v36 = v36 + v62.f64[0] + v62.f64[1] + v63.f64[0] + v63.f64[1];
          v58 += 2;
          v59 += 2;
          v57 -= 4;
        }
        while (v57);
      }
      else
      {
        unint64_t v39 = 1;
      }
      while (v30 != v39)
      {
        if (v39 >= v32) {
          goto LABEL_60;
        }
        double v36 = v36
            + (*(double *)(v33 + 8 * v39) - *(double *)(v34 + 8 * v39))
            * (*(double *)(v33 + 8 * v39) - *(double *)(v34 + 8 * v39));
        if (a2 == ++v39) {
          goto LABEL_55;
        }
      }
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1A75738D0();
      if (!v7) {
        goto LABEL_65;
      }
    }
    double v36 = 0.0;
LABEL_55:
    swift_release();
    double v12 = sqrt(v36);
    goto LABEL_5;
  }
LABEL_65:
  swift_bridgeObjectRelease();
  return a4;
}

id REMStructuredLocation.clCircularRegion.getter()
{
  objc_msgSend(v0, sel_latitude);
  double v2 = v1;
  objc_msgSend(v0, sel_longitude);
  double v4 = v3;
  objc_msgSend(v0, sel_radius);
  double v6 = v5;
  id v7 = objc_msgSend(v0, sel_title);
  if (v7)
  {
    uint64_t v8 = v7;
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  }
  id v9 = objc_allocWithZone(MEMORY[0x1E4F1E5A8]);
  int v10 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithCenter_radius_identifier_, v10, v2, v4, v6);

  objc_msgSend(v11, sel_setGeoReferenceFrame_, REMStructuredLocation.referenceFrame.getter());
  return v11;
}

CLCircularRegion __swiftcall CLCircularRegion.init(circularRegion:radius:)(CLCircularRegion circularRegion, Swift::Double radius)
{
  [(objc_class *)circularRegion.super.super.isa center];
  double v5 = v4;
  double v7 = v6;
  id v8 = [(objc_class *)circularRegion.super.super.isa identifier];
  if (!v8)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    id v8 = (id)sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  id v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCenter_radius_identifier_, v8, v5, v7, radius);

  id v10 = v9;
  objc_msgSend(v10, sel_setNotifyOnExit_, -[objc_class notifyOnExit](circularRegion.super.super.isa, sel_notifyOnExit));
  id v11 = v10;
  objc_msgSend(v11, sel_setNotifyOnEntry_, -[objc_class notifyOnEntry](circularRegion.super.super.isa, sel_notifyOnEntry));

  id v12 = v11;
  objc_msgSend(v12, sel_setConservativeEntry_, -[objc_class conservativeEntry](circularRegion.super.super.isa, sel_conservativeEntry));

  objc_msgSend(v12, sel_setGeoReferenceFrame_, -[objc_class geoReferenceFrame](circularRegion.super.super.isa, sel_geoReferenceFrame));
  return (CLCircularRegion)v12;
}

void __swiftcall REMStructuredLocation.init(title:location:)(REMStructuredLocation *__return_ptr retstr, Swift::String title, CLLocation location)
{
  Class isa = location.super.isa;
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  double v5 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithTitle_, v5);

  id v7 = v6;
  [(objc_class *)isa coordinate];
  objc_msgSend(v7, sel_setLatitude_);
  [(objc_class *)isa coordinate];
  objc_msgSend(v7, sel_setLongitude_, v8);
  [(objc_class *)isa horizontalAccuracy];
  double v10 = v9;
  [(objc_class *)isa verticalAccuracy];
  if (v10 > v11) {
    double v11 = v10;
  }
  objc_msgSend(v7, sel_setRadius_, v11);
  [(objc_class *)isa referenceFrame];
  sub_1A7573BC0();
  id v12 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setReferenceFrameString_, v12);
}

void __swiftcall REMStructuredLocation.init(title:circularRegion:placemark:)(REMStructuredLocation *__return_ptr retstr, Swift::String title, CLCircularRegion circularRegion, CLPlacemark_optional placemark)
{
  Class isa = placemark.value.super.isa;
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v7 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithTitle_, v7);

  id v9 = v8;
  [(objc_class *)circularRegion.super.super.isa center];
  double v11 = v10;
  objc_msgSend(v9, sel_setLatitude_);
  objc_msgSend(v9, sel_setLongitude_, v11);
  [(objc_class *)circularRegion.super.super.isa radius];
  objc_msgSend(v9, sel_setRadius_);
  [(objc_class *)circularRegion.super.super.isa geoReferenceFrame];
  sub_1A7573BC0();
  id v12 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setReferenceFrameString_, v12);

  if (isa)
  {
    id v13 = [(objc_class *)isa postalAddress];
    id v14 = v9;
    if (v13)
    {
      uint64_t v15 = v13;
      id v14 = objc_msgSend(self, sel_stringFromPostalAddress_style_, v13, 0);
      if (!v14)
      {
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        id v14 = (id)sub_1A75725E0();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v9, sel_setAddress_, v14);
    }
    Class v16 = circularRegion.super.super.isa;
    circularRegion.super.super.Class isa = isa;
  }
  else
  {
    Class v16 = (Class)v9;
  }
}

id static REMStructuredLocation.createFromCLLocation(title:location:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    swift_bridgeObjectRetain();
    double v5 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!a3) {
      return 0;
    }
    id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    double v5 = 0;
  }
  id v6 = objc_msgSend(v4, sel_initWithTitle_, v5);

  if (a3)
  {
    id v7 = a3;
    objc_msgSend(v7, sel_horizontalAccuracy);
    double v9 = v8;
    objc_msgSend(v7, sel_verticalAccuracy);
    if (v9 <= v10) {
      double v9 = v10;
    }
    if (v9 > 0.0)
    {
      objc_msgSend(v7, sel_coordinate);
      objc_msgSend(v6, sel_setLatitude_);
      objc_msgSend(v7, sel_coordinate);
      objc_msgSend(v6, sel_setLongitude_, v11);
      objc_msgSend(v6, sel_setRadius_, v9);
      objc_msgSend(v7, sel_referenceFrame);
      sub_1A7573BC0();
      id v12 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setReferenceFrameString_, v12);

      return v6;
    }

    return 0;
  }
  return v6;
}

uint64_t REMStructuredLocation.referenceFrame.getter()
{
  id v1 = objc_msgSend(v0, sel_referenceFrameString);
  if (v1)
  {
    double v2 = v1;
    uint64_t v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v5 = v4;

    if (v3 == 49 && v5 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    char v7 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
  }
  id v9 = objc_msgSend(v0, sel_referenceFrameString);
  if (!v9) {
    return 0;
  }
  double v10 = v9;
  uint64_t v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v13 = v12;

  if (v11 == 50 && v13 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      return 0;
    }
  }
  return 2;
}

id REMStructuredLocation.clLocation.getter()
{
  uint64_t v1 = sub_1A7571B60();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, sel_latitude);
  CLLocationDegrees v6 = v5;
  objc_msgSend(v0, sel_longitude);
  CLLocationDegrees v8 = v7;
  uint64_t v9 = REMStructuredLocation.referenceFrame.getter();
  id v10 = objc_allocWithZone(MEMORY[0x1E4F1E5F0]);
  CLLocationCoordinate2D v11 = CLLocationCoordinate2DMake(v6, v8);
  sub_1A7571B50();
  uint64_t v12 = (void *)sub_1A7571AB0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  id v13 = objc_msgSend(v10, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_referenceFrame_, v12, v9, v11.latitude, v11.longitude, -1.0, -1.0, -1.0);

  return v13;
}

id REMStructuredLocation.clPlacemark.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A7571B60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  double v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, sel_latitude);
  CLLocationDegrees v7 = v6;
  objc_msgSend(v0, sel_longitude);
  CLLocationDegrees v9 = v8;
  uint64_t v10 = REMStructuredLocation.referenceFrame.getter();
  id v11 = objc_allocWithZone(MEMORY[0x1E4F1E5F0]);
  CLLocationCoordinate2D v12 = CLLocationCoordinate2DMake(v7, v9);
  sub_1A7571B50();
  id v13 = (void *)sub_1A7571AB0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v14 = objc_msgSend(v11, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_referenceFrame_, v13, v10, v12.latitude, v12.longitude, -1.0, -1.0, -1.0);

  id v15 = objc_msgSend(v1, sel_displayName);
  if (v15)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    id v15 = (id)sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  id v16 = objc_msgSend(self, sel_placemarkWithLocation_name_postalAddress_, v14, v15, 0);

  return v16;
}

Swift::Bool __swiftcall REMStructuredLocation.isCloseTo(_:maxDistanceInMeters:)(REMStructuredLocation *_, Swift::Double maxDistanceInMeters)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1A7571B60();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  CLLocationDegrees v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  [(REMStructuredLocation *)_ latitude];
  CLLocationDegrees v11 = v10;
  [(REMStructuredLocation *)_ longitude];
  CLLocationDegrees v13 = v12;
  uint64_t v14 = REMStructuredLocation.referenceFrame.getter();
  id v15 = objc_allocWithZone(MEMORY[0x1E4F1E5F0]);
  CLLocationCoordinate2D v16 = CLLocationCoordinate2DMake(v11, v13);
  sub_1A7571B50();
  uint64_t v17 = (void *)sub_1A7571AB0();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  id v19 = objc_msgSend(v15, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_referenceFrame_, v17, v14, v16.latitude, v16.longitude, -1.0, -1.0, -1.0);

  objc_msgSend(v3, sel_latitude);
  CLLocationDegrees v21 = v20;
  objc_msgSend(v3, sel_longitude);
  CLLocationDegrees v23 = v22;
  uint64_t v24 = REMStructuredLocation.referenceFrame.getter();
  id v25 = objc_allocWithZone(MEMORY[0x1E4F1E5F0]);
  CLLocationCoordinate2D v26 = CLLocationCoordinate2DMake(v21, v23);
  sub_1A7571B50();
  unint64_t v27 = (void *)sub_1A7571AB0();
  v18(v9, v6);
  id v28 = objc_msgSend(v25, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_referenceFrame_, v27, v24, v26.latitude, v26.longitude, -1.0, -1.0, -1.0);

  objc_msgSend(v28, sel_distanceFromLocation_, v19);
  double v30 = v29;

  return v30 <= maxDistanceInMeters;
}

Swift::Bool __swiftcall REMStructuredLocation.isCloseTo(_:maxDistanceInMeters:)(CLLocation _, Swift::Double maxDistanceInMeters)
{
  Class isa = _.super.isa;
  uint64_t v5 = sub_1A7571B60();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v2, sel_latitude);
  CLLocationDegrees v10 = v9;
  objc_msgSend(v2, sel_longitude);
  CLLocationDegrees v12 = v11;
  uint64_t v13 = REMStructuredLocation.referenceFrame.getter();
  id v14 = objc_allocWithZone(MEMORY[0x1E4F1E5F0]);
  CLLocationCoordinate2D v15 = CLLocationCoordinate2DMake(v10, v12);
  sub_1A7571B50();
  CLLocationCoordinate2D v16 = (void *)sub_1A7571AB0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v17 = objc_msgSend(v14, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_referenceFrame_, v16, v13, v15.latitude, v15.longitude, -1.0, -1.0, -1.0);

  objc_msgSend(v17, sel_distanceFromLocation_, isa);
  double v19 = v18;

  return v19 <= maxDistanceInMeters;
}

id CLCircularRegion.clLocation.getter()
{
  uint64_t v1 = sub_1A7571B60();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, sel_center);
  CLLocationDegrees v6 = v5;
  objc_msgSend(v0, sel_center);
  CLLocationDegrees v8 = v7;
  id v9 = objc_msgSend(v0, sel_geoReferenceFrame);
  id v10 = objc_allocWithZone(MEMORY[0x1E4F1E5F0]);
  CLLocationCoordinate2D v11 = CLLocationCoordinate2DMake(v6, v8);
  sub_1A7571B50();
  CLLocationDegrees v12 = (void *)sub_1A7571AB0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  id v13 = objc_msgSend(v10, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_referenceFrame_, v12, v9, v11.latitude, v11.longitude, -1.0, -1.0, -1.0);

  return v13;
}

uint64_t REMReminderDetailDataView.CheckUpdateResult.reminderHasUpdates.getter()
{
  return *v0;
}

void *REMReminderDetailDataView.CheckUpdateResult.latestFetchResultToken.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

void static REMReminderDetailDataView.fetchHasReminderUpdates(store:reminderID:diffingAgainst:)(void *a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v5 = sub_1A7571BC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  CLLocationDegrees v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  id v10 = objc_allocWithZone(v9);
  id v11 = a1;
  id v12 = objc_msgSend(v11, sel_uuid);
  sub_1A7571BB0();

  id v13 = (void *)sub_1A7571B90();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v14 = objc_msgSend(v11, sel_entityName);
  if (!v14)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    id v14 = (id)sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  v24.receiver = v10;
  v24.super_class = v9;
  id v15 = objc_msgSendSuper2(&v24, sel_initWithUUID_entityName_, v13, v14);

  id v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMReminderDetailDataView.CheckUpdateInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a2);
  uint64_t v17 = v25;
  sub_1A72FFD0C((uint64_t)v16, (uint64_t)v15, v22);

  if (!v17)
  {
    uint64_t v18 = v23;
    double v19 = v21;
    *uint64_t v21 = v22[0];
    *((void *)v19 + 1) = v18;
  }
}

uint64_t REMReminderDetailDataView.CheckUpdateInvocation.Parameters.init(reminderID:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

id REMReminderDetailDataView.CheckUpdateInvocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

uint64_t static REMReminderDetailDataView.CheckUpdateInvocation.supportsSecureCoding.getter()
{
  return 1;
}

id REMReminderDetailDataView.CheckUpdateInvocation.Parameters.reminderID.getter()
{
  return *v0;
}

uint64_t sub_1A7445A30(uint64_t a1)
{
  unint64_t v2 = sub_1A74464DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7445A6C(uint64_t a1)
{
  unint64_t v2 = sub_1A74464DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMReminderDetailDataView.CheckUpdateInvocation.Parameters.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F38D0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74464DC();
  sub_1A75741B0();
  v9[1] = v7;
  type metadata accessor for REMObjectID_Codable();
  sub_1A7327230(&qword_1EB704E40);
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMReminderDetailDataView.CheckUpdateInvocation.Parameters.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F38E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  CLLocationDegrees v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A74464DC();
  sub_1A7574190();
  if (!v2)
  {
    type metadata accessor for REMObjectID_Codable();
    sub_1A7327230(&qword_1EB705A50);
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A7445DA0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMReminderDetailDataView.CheckUpdateInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A7445DB8(void *a1)
{
  return REMReminderDetailDataView.CheckUpdateInvocation.Parameters.encode(to:)(a1);
}

uint64_t REMReminderDetailDataView.CheckUpdateInvocation.Result.hasUpdates.getter()
{
  return *v0;
}

ReminderKitInternal::REMReminderDetailDataView::CheckUpdateInvocation::Result __swiftcall REMReminderDetailDataView.CheckUpdateInvocation.Result.init(hasUpdates:)(ReminderKitInternal::REMReminderDetailDataView::CheckUpdateInvocation::Result hasUpdates)
{
  v1->hasUpdates = hasUpdates.hasUpdates;
  return hasUpdates;
}

uint64_t sub_1A7445DE0()
{
  return 0x7461647055736168;
}

uint64_t sub_1A7445DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7461647055736168 && a2 == 0xEA00000000007365)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A7445EA0(uint64_t a1)
{
  unint64_t v2 = sub_1A7446530();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7445EDC(uint64_t a1)
{
  unint64_t v2 = sub_1A7446530();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMReminderDetailDataView.CheckUpdateInvocation.Result.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F38E8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7446530();
  sub_1A75741B0();
  sub_1A7573B20();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t REMReminderDetailDataView.CheckUpdateInvocation.Result.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F38F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  CLLocationDegrees v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7446530();
  sub_1A7574190();
  if (!v2)
  {
    char v9 = sub_1A7573A10();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A74461A0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMReminderDetailDataView.CheckUpdateInvocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A74461B8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F38E8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7446530();
  sub_1A75741B0();
  sub_1A7573B20();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id REMReminderDetailDataView.CheckUpdateInvocation.init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMReminderDetailDataView.CheckUpdateInvocation.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMReminderDetailDataView.CheckUpdateInvocation.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id REMReminderDetailDataView.CheckUpdateInvocation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t REMReminderDetailDataView.deinit()
{
  return v0;
}

uint64_t REMReminderDetailDataView.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t type metadata accessor for REMReminderDetailDataView.CheckUpdateInvocation()
{
  return self;
}

unint64_t sub_1A74464DC()
{
  unint64_t result = qword_1E96F38D8;
  if (!qword_1E96F38D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F38D8);
  }
  return result;
}

unint64_t sub_1A7446530()
{
  unint64_t result = qword_1E96F38F0;
  if (!qword_1E96F38F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F38F0);
  }
  return result;
}

unint64_t sub_1A7446588()
{
  unint64_t result = qword_1E96F3900;
  if (!qword_1E96F3900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3900);
  }
  return result;
}

unint64_t sub_1A74465E8()
{
  unint64_t result = qword_1E96F3908;
  if (!qword_1E96F3908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3908);
  }
  return result;
}

uint64_t type metadata accessor for REMReminderDetailDataView()
{
  return self;
}

uint64_t method lookup function for REMReminderDetailDataView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMReminderDetailDataView);
}

uint64_t assignWithCopy for REMReminderDetailDataView.CheckUpdateResult(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  id v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  id v5 = v4;

  return a1;
}

uint64_t assignWithTake for REMReminderDetailDataView.CheckUpdateResult(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  id v3 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for REMReminderDetailDataView.CheckUpdateResult()
{
  return &type metadata for REMReminderDetailDataView.CheckUpdateResult;
}

ValueMetadata *type metadata accessor for REMReminderDetailDataView.CheckUpdateInvocation.Parameters()
{
  return &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Parameters;
}

unsigned char *storeEnumTagSinglePayload for REMReminderDetailDataView.CheckUpdateInvocation.Result(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A74467E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMReminderDetailDataView.CheckUpdateInvocation.Result()
{
  return &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Result;
}

ValueMetadata *type metadata accessor for REMReminderDetailDataView.CheckUpdateInvocation.Result.CodingKeys()
{
  return &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Result.CodingKeys;
}

unsigned char *_s19ReminderKitInternal25REMReminderDetailDataViewC21CheckUpdateInvocationC6ResultV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A74468C8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMReminderDetailDataView.CheckUpdateInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Parameters.CodingKeys;
}

unint64_t sub_1A7446904()
{
  unint64_t result = qword_1E96F3910;
  if (!qword_1E96F3910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3910);
  }
  return result;
}

unint64_t sub_1A744695C()
{
  unint64_t result = qword_1E96F3918;
  if (!qword_1E96F3918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3918);
  }
  return result;
}

unint64_t sub_1A74469B4()
{
  unint64_t result = qword_1E96F3920;
  if (!qword_1E96F3920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3920);
  }
  return result;
}

unint64_t sub_1A7446A0C()
{
  unint64_t result = qword_1E96F3928;
  if (!qword_1E96F3928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3928);
  }
  return result;
}

unint64_t sub_1A7446A64()
{
  unint64_t result = qword_1E96F3930;
  if (!qword_1E96F3930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3930);
  }
  return result;
}

unint64_t sub_1A7446ABC()
{
  unint64_t result = qword_1E96F3938;
  if (!qword_1E96F3938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3938);
  }
  return result;
}

uint64_t dispatch thunk of Identifiable.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t REMSortableElement.element.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t REMSortableElement.sortIndex.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 28));
}

uint64_t REMSortableElement.init(element:sortIndex:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for REMSortableElement();
  uint64_t v9 = a5 + *(int *)(result + 28);
  *(void *)uint64_t v9 = a2;
  *(unsigned char *)(v9 + 8) = a3 & 1;
  return result;
}

uint64_t type metadata accessor for REMSortableElement()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A7446C0C(uint64_t a1)
{
  return REMSortableElement.sortIndex.getter(a1);
}

uint64_t Array<A>.sorted(by:)()
{
  return sub_1A7572920();
}

BOOL sub_1A7446CBC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 32);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v5 = v4(v1, v2);
  if (v6) {
    return 0;
  }
  double v7 = *(double *)&v5;
  double v8 = COERCE_DOUBLE(v4(v1, v2));
  if (v9) {
    return 1;
  }
  if (v3) {
    return v8 < v7;
  }
  else {
    return v7 < v8;
  }
}

uint64_t Array<A>.sort(by:)()
{
  uint64_t v1 = Array<A>.sorted(by:)();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t *v0 = v1;
  return result;
}

uint64_t dispatch thunk of REMSortable.sortIndex.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A7446E0C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A7446EA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    char v11 = *(unsigned char *)(v10 + 8);
    unint64_t v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v12 = *(void *)v10;
    *(unsigned char *)(v12 + 8) = v11;
  }
  return v4;
}

uint64_t sub_1A7446FA4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1A7446FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1A7447054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1A74470D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1A744715C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1A74471E0(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v7 = (a2 - v5 + 255) >> (8 * v6);
    if (v6 < 4) {
      unsigned int v8 = v7 + 1;
    }
    else {
      unsigned int v8 = 2;
    }
    if (v8 >= 0x10000) {
      unsigned int v9 = 4;
    }
    else {
      unsigned int v9 = 2;
    }
    if (v8 < 0x100) {
      unsigned int v9 = 1;
    }
    if (v8 >= 2) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    switch(v10)
    {
      case 1:
        int v11 = a1[v6];
        if (!a1[v6]) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v11 = *(unsigned __int16 *)&a1[v6];
        if (*(_WORD *)&a1[v6]) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A7447310);
      case 4:
        int v11 = *(_DWORD *)&a1[v6];
        if (!v11) {
          break;
        }
LABEL_18:
        int v12 = (v11 - 1) << (8 * v6);
        if (v6 >= 4) {
          int v12 = 0;
        }
        if (((*(_DWORD *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v13 = *a1;
        }
        else {
          int v13 = *(_DWORD *)a1;
        }
        return v5 + (v13 | v12) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    return 0;
  }
}

void sub_1A7447324(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v9 = 8 * v8;
  if (v7 >= a3)
  {
    int v13 = 0;
    if (v7 >= a2)
    {
LABEL_14:
      switch(v13)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_31;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_31;
        case 3:
          goto LABEL_38;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          goto LABEL_30;
        default:
LABEL_30:
          if (a2)
          {
LABEL_31:
            uint64_t v17 = *(void (**)(void))(v6 + 56);
            v17();
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v10 = (a3 - v7 + 255) >> v9;
    if (v8 <= 3) {
      unsigned int v11 = v10 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
    if (v7 >= a2) {
      goto LABEL_14;
    }
  }
  unsigned int v14 = (~v7 + a2) >> v9;
  if (v8 < 4) {
    int v15 = v14 + 1;
  }
  else {
    int v15 = 1;
  }
  if (v8 >= 4) {
    unsigned int v16 = ~v7 + a2;
  }
  else {
    unsigned int v16 = (~(_BYTE)v7 + a2);
  }
  bzero(a1, v8);
  if (v8 == 1) {
    *a1 = v16;
  }
  else {
    *(_DWORD *)a1 = v16;
  }
  switch(v13)
  {
    case 1:
      a1[v8] = v15;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v15;
      break;
    case 3:
LABEL_38:
      __break(1u);
      JUMPOUT(0x1A74474F8);
    case 4:
      *(_DWORD *)&a1[v8] = v15;
      break;
    default:
      return;
  }
}

uint64_t Collection.subscript.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unsigned int v5 = &v14[-v4];
  sub_1A7572DC0();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  char v6 = sub_1A7572960();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
  if (v6)
  {
    unsigned int v7 = (void (*)(unsigned char *, void))sub_1A7572E80();
    uint64_t v9 = v8;
    uint64_t v10 = swift_getAssociatedTypeWitness();
    uint64_t v11 = *(void *)(v10 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, v9, v10);
    v7(v14, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
  }
  else
  {
    uint64_t v13 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
}

uint64_t Collection.single.getter@<X0>(uint64_t a1@<X8>)
{
  if (sub_1A7572DA0() == 1)
  {
    return sub_1A7572E20();
  }
  else
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
    return v4(a1, 1, 1, AssociatedTypeWitness);
  }
}

uint64_t sub_1A7447898(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1A72BEE44((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1A72D6728(v9, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1A7573790();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_1A72CB560(a1, &qword_1EB705938);
    sub_1A72D5F20(a2, v9);
    uint64_t v7 = sub_1A7573790();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_1A72CB560((uint64_t)v9, &qword_1EB705938);
  }
}

uint64_t sub_1A74479B8(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1A72BEE44((_OWORD *)a1, v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1A72D6CF0(v7, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A72CB560(a1, &qword_1EB705938);
    sub_1A72D604C((uint64_t)a2, v7);

    return sub_1A72CB560((uint64_t)v7, &qword_1EB705938);
  }
}

id sub_1A7447A74(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t))
{
  return sub_1A7447A9C(a1, a2, a3, &qword_1EB705480, &qword_1E96F3A20);
}

id sub_1A7447A88(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t))
{
  return sub_1A7447A9C(a1, a2, a3, &qword_1E96F1F28, &qword_1E96F3A10);
}

id sub_1A7447A9C(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t), uint64_t *a4, uint64_t *a5)
{
  uint64_t v92 = a3;
  uint64_t v89 = a2;
  uint64_t v8 = sub_1A7574140();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v86 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v87 = (char *)&v82 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v84 = (void (*)(char *, char *, uint64_t))((char *)&v82 - v15);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v88 = (char *)&v82 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v91 = (char *)&v82 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1508);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v83 = (uint64_t)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  objc_super v24 = (char *)&v82 - v23;
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  uint64_t v85 = (uint64_t)&v82 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  double v29 = (char *)&v82 - v28;
  uint64_t v30 = MEMORY[0x1F4188790](v27);
  uint64_t v32 = (char *)&v82 - v31;
  uint64_t v33 = MEMORY[0x1F4188790](v30);
  double v35 = (char *)&v82 - v34;
  MEMORY[0x1F4188790](v33);
  unint64_t v37 = (char *)&v82 - v36;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1A72BF1E8(a1, (uint64_t)&v95, &qword_1EB705938);
  uint64_t v90 = v37;
  if (v96)
  {
    sub_1A72BEE44(&v95, v94);
    sub_1A72BEE98((uint64_t)v94, (uint64_t)v93);
    sub_1A7574120();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v37, 0, 1, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v37, 1, 1, v8);
  }
  uint64_t v39 = v9;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(a5);
  *(void *)&long long v95 = v38;
  uint64_t v40 = v91;
  sub_1A7574120();
  if (v92)
  {
    if (qword_1E96F06F0 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1A7571E90();
    __swift_project_value_buffer(v41, (uint64_t)qword_1E96F14F0);
    uint64_t v42 = (uint64_t)v90;
    sub_1A72BF1E8((uint64_t)v90, (uint64_t)v35, &qword_1E96F1508);
    id v43 = v88;
    uint64_t v84 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
    v84(v88, v40, v8);
    swift_bridgeObjectRetain_n();
    float64x2_t v44 = sub_1A7571E80();
    int v45 = sub_1A7572FE0();
    if (os_log_type_enabled(v44, (os_log_type_t)v45))
    {
      LODWORD(v83) = v45;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      *(void *)&long long v95 = v82;
      *(_DWORD *)uint64_t v46 = 136315650;
      sub_1A72BF1E8((uint64_t)v35, (uint64_t)v29, &qword_1E96F1508);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v29, 1, v8) == 1)
      {
        unint64_t v47 = 0xE300000000000000;
        uint64_t v48 = 7104878;
      }
      else
      {
        unint64_t v57 = v87;
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v87, v29, v8);
        v84(v86, v57, v8);
        uint64_t v48 = sub_1A7572670();
        unint64_t v47 = v58;
        (*(void (**)(char *, uint64_t))(v39 + 8))(v57, v8);
      }
      uint64_t v59 = v88;
      *(void *)&v94[0] = sub_1A72D1730(v48, v47, (uint64_t *)&v95);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      sub_1A72CB560((uint64_t)v35, &qword_1E96F1508);
      *(_WORD *)(v46 + 12) = 2080;
      uint64_t v60 = sub_1A7574130();
      *(void *)&v94[0] = sub_1A72D1730(v60, v61, (uint64_t *)&v95);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      uint64_t v56 = *(void (**)(char *, uint64_t))(v39 + 8);
      v56(v59, v8);
      *(_WORD *)(v46 + 22) = 2080;
      unint64_t v62 = (unint64_t)v92;
      swift_bridgeObjectRetain();
      *(void *)&v94[0] = sub_1A72D1730(v89, v62, (uint64_t *)&v95);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A72A1000, v44, (os_log_type_t)v83, "Failed cast {given: %s, expect: %s, message: \"%s}\"", (uint8_t *)v46, 0x20u);
      uint64_t v63 = v82;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v63, -1, -1);
      MEMORY[0x1AD0CD330](v46, -1, -1);

      uint64_t v42 = (uint64_t)v90;
    }
    else
    {
      sub_1A72CB560((uint64_t)v35, &qword_1E96F1508);
      uint64_t v56 = *(void (**)(char *, uint64_t))(v39 + 8);
      v56(v43, v8);

      swift_bridgeObjectRelease_n();
    }
    *(void *)&long long v95 = 0;
    *((void *)&v95 + 1) = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    *(void *)&long long v95 = 0xD000000000000014;
    *((void *)&v95 + 1) = 0x80000001A759F360;
    uint64_t v64 = v85;
    sub_1A72BF1E8(v42, v85, &qword_1E96F1508);
    int v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v64, 1, v8);
    char v66 = v91;
    if (v65 != 1)
    {
      char v67 = v87;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v87, v64, v8);
      v84(v86, v67, v8);
      sub_1A7572670();
      v56(v67, v8);
    }
    __int16 v68 = self;
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7574130();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7572740();
    sub_1A7572740();
    uint64_t v69 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    id v70 = objc_msgSend(v68, sel_internalErrorWithDebugDescription_, v69);
  }
  else
  {
    if (qword_1E96F06F0 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_1A7571E90();
    __swift_project_value_buffer(v49, (uint64_t)qword_1E96F14F0);
    sub_1A72BF1E8((uint64_t)v90, (uint64_t)v32, &qword_1E96F1508);
    float64x2_t v50 = (char *)v84;
    uint64_t v92 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
    v92((char *)v84, v91, v8);
    float64x2_t v51 = sub_1A7571E80();
    int v52 = sub_1A7572FE0();
    if (os_log_type_enabled(v51, (os_log_type_t)v52))
    {
      LODWORD(v89) = v52;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v88 = (char *)swift_slowAlloc();
      *(void *)&long long v95 = v88;
      *(_DWORD *)uint64_t v53 = 136315394;
      sub_1A72BF1E8((uint64_t)v32, (uint64_t)v24, &qword_1E96F1508);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v24, 1, v8) == 1)
      {
        unint64_t v54 = 0xE300000000000000;
        uint64_t v55 = 7104878;
      }
      else
      {
        uint64_t v71 = v87;
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v87, v24, v8);
        v92(v86, v71, v8);
        uint64_t v55 = sub_1A7572670();
        unint64_t v54 = v72;
        (*(void (**)(char *, uint64_t))(v39 + 8))(v71, v8);
      }
      *(void *)&v94[0] = sub_1A72D1730(v55, v54, (uint64_t *)&v95);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      sub_1A72CB560((uint64_t)v32, &qword_1E96F1508);
      *(_WORD *)(v53 + 12) = 2080;
      uint64_t v73 = (char *)v84;
      uint64_t v74 = sub_1A7574130();
      *(void *)&v94[0] = sub_1A72D1730(v74, v75, (uint64_t *)&v95);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      uint64_t v56 = *(void (**)(char *, uint64_t))(v39 + 8);
      v56(v73, v8);
      _os_log_impl(&dword_1A72A1000, v51, (os_log_type_t)v89, "Failed cast {given: %s, expect: %s}", (uint8_t *)v53, 0x16u);
      unint64_t v76 = v88;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v76, -1, -1);
      MEMORY[0x1AD0CD330](v53, -1, -1);
    }
    else
    {
      sub_1A72CB560((uint64_t)v32, &qword_1E96F1508);
      uint64_t v56 = *(void (**)(char *, uint64_t))(v39 + 8);
      v56(v50, v8);
    }
    *(void *)&long long v95 = 0;
    *((void *)&v95 + 1) = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    *(void *)&long long v95 = 0xD000000000000014;
    *((void *)&v95 + 1) = 0x80000001A759F360;
    uint64_t v77 = v83;
    sub_1A72BF1E8((uint64_t)v90, v83, &qword_1E96F1508);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v77, 1, v8) != 1)
    {
      int v78 = v87;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v87, v77, v8);
      v92(v86, v78, v8);
      sub_1A7572670();
      v56(v78, v8);
    }
    uint64_t v79 = self;
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    char v66 = v91;
    sub_1A7574130();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    uint64_t v69 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    id v70 = objc_msgSend(v79, sel_internalErrorWithDebugDescription_, v69);
    uint64_t v42 = (uint64_t)v90;
  }
  id v80 = v70;

  v56(v66, v8);
  sub_1A72CB560(v42, &qword_1E96F1508);
  return v80;
}

id sub_1A74487BC(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t))
{
  return sub_1A7447A9C(a1, a2, a3, &qword_1E96F1F18, &qword_1E96F3A18);
}

id sub_1A74487D0(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t))
{
  return sub_1A7448824(a1, a2, a3, MEMORY[0x1E4F27928], &qword_1E96F3A00);
}

id sub_1A74487F0(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t))
{
  return sub_1A7447A9C(a1, a2, a3, &qword_1EB704C40, &qword_1E96F3A08);
}

id sub_1A7448804(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t))
{
  return sub_1A7448824(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for REMStoreObjectsContainer, &qword_1E96F39F8);
}

id sub_1A7448824(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t), uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v92 = a3;
  uint64_t v89 = a2;
  uint64_t v8 = sub_1A7574140();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v86 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v87 = (char *)&v82 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v84 = (void (*)(char *, char *, uint64_t))((char *)&v82 - v15);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v88 = (char *)&v82 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v91 = (char *)&v82 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1508);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v83 = (uint64_t)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  objc_super v24 = (char *)&v82 - v23;
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  uint64_t v85 = (uint64_t)&v82 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  double v29 = (char *)&v82 - v28;
  uint64_t v30 = MEMORY[0x1F4188790](v27);
  uint64_t v32 = (char *)&v82 - v31;
  uint64_t v33 = MEMORY[0x1F4188790](v30);
  double v35 = (char *)&v82 - v34;
  MEMORY[0x1F4188790](v33);
  unint64_t v37 = (char *)&v82 - v36;
  uint64_t v38 = a4(0);
  sub_1A72BF1E8(a1, (uint64_t)&v95, &qword_1EB705938);
  uint64_t v90 = v37;
  if (v96)
  {
    sub_1A72BEE44(&v95, v94);
    sub_1A72BEE98((uint64_t)v94, (uint64_t)v93);
    sub_1A7574120();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v37, 0, 1, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v37, 1, 1, v8);
  }
  uint64_t v39 = v9;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(a5);
  *(void *)&long long v95 = v38;
  uint64_t v40 = v91;
  sub_1A7574120();
  if (v92)
  {
    if (qword_1E96F06F0 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1A7571E90();
    __swift_project_value_buffer(v41, (uint64_t)qword_1E96F14F0);
    uint64_t v42 = (uint64_t)v90;
    sub_1A72BF1E8((uint64_t)v90, (uint64_t)v35, &qword_1E96F1508);
    id v43 = v88;
    uint64_t v84 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
    v84(v88, v40, v8);
    swift_bridgeObjectRetain_n();
    float64x2_t v44 = sub_1A7571E80();
    int v45 = sub_1A7572FE0();
    if (os_log_type_enabled(v44, (os_log_type_t)v45))
    {
      LODWORD(v83) = v45;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      *(void *)&long long v95 = v82;
      *(_DWORD *)uint64_t v46 = 136315650;
      sub_1A72BF1E8((uint64_t)v35, (uint64_t)v29, &qword_1E96F1508);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v29, 1, v8) == 1)
      {
        unint64_t v47 = 0xE300000000000000;
        uint64_t v48 = 7104878;
      }
      else
      {
        unint64_t v57 = v87;
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v87, v29, v8);
        v84(v86, v57, v8);
        uint64_t v48 = sub_1A7572670();
        unint64_t v47 = v58;
        (*(void (**)(char *, uint64_t))(v39 + 8))(v57, v8);
      }
      uint64_t v59 = v88;
      *(void *)&v94[0] = sub_1A72D1730(v48, v47, (uint64_t *)&v95);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      sub_1A72CB560((uint64_t)v35, &qword_1E96F1508);
      *(_WORD *)(v46 + 12) = 2080;
      uint64_t v60 = sub_1A7574130();
      *(void *)&v94[0] = sub_1A72D1730(v60, v61, (uint64_t *)&v95);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      uint64_t v56 = *(void (**)(char *, uint64_t))(v39 + 8);
      v56(v59, v8);
      *(_WORD *)(v46 + 22) = 2080;
      unint64_t v62 = (unint64_t)v92;
      swift_bridgeObjectRetain();
      *(void *)&v94[0] = sub_1A72D1730(v89, v62, (uint64_t *)&v95);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A72A1000, v44, (os_log_type_t)v83, "Failed cast {given: %s, expect: %s, message: \"%s}\"", (uint8_t *)v46, 0x20u);
      uint64_t v63 = v82;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v63, -1, -1);
      MEMORY[0x1AD0CD330](v46, -1, -1);

      uint64_t v42 = (uint64_t)v90;
    }
    else
    {
      sub_1A72CB560((uint64_t)v35, &qword_1E96F1508);
      uint64_t v56 = *(void (**)(char *, uint64_t))(v39 + 8);
      v56(v43, v8);

      swift_bridgeObjectRelease_n();
    }
    *(void *)&long long v95 = 0;
    *((void *)&v95 + 1) = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    *(void *)&long long v95 = 0xD000000000000014;
    *((void *)&v95 + 1) = 0x80000001A759F360;
    uint64_t v64 = v85;
    sub_1A72BF1E8(v42, v85, &qword_1E96F1508);
    int v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v64, 1, v8);
    char v66 = v91;
    if (v65 != 1)
    {
      char v67 = v87;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v87, v64, v8);
      v84(v86, v67, v8);
      sub_1A7572670();
      v56(v67, v8);
    }
    __int16 v68 = self;
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7574130();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7572740();
    sub_1A7572740();
    uint64_t v69 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    id v70 = objc_msgSend(v68, sel_internalErrorWithDebugDescription_, v69);
  }
  else
  {
    if (qword_1E96F06F0 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_1A7571E90();
    __swift_project_value_buffer(v49, (uint64_t)qword_1E96F14F0);
    sub_1A72BF1E8((uint64_t)v90, (uint64_t)v32, &qword_1E96F1508);
    float64x2_t v50 = (char *)v84;
    uint64_t v92 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
    v92((char *)v84, v91, v8);
    float64x2_t v51 = sub_1A7571E80();
    int v52 = sub_1A7572FE0();
    if (os_log_type_enabled(v51, (os_log_type_t)v52))
    {
      LODWORD(v89) = v52;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v88 = (char *)swift_slowAlloc();
      *(void *)&long long v95 = v88;
      *(_DWORD *)uint64_t v53 = 136315394;
      sub_1A72BF1E8((uint64_t)v32, (uint64_t)v24, &qword_1E96F1508);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v24, 1, v8) == 1)
      {
        unint64_t v54 = 0xE300000000000000;
        uint64_t v55 = 7104878;
      }
      else
      {
        uint64_t v71 = v87;
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v87, v24, v8);
        v92(v86, v71, v8);
        uint64_t v55 = sub_1A7572670();
        unint64_t v54 = v72;
        (*(void (**)(char *, uint64_t))(v39 + 8))(v71, v8);
      }
      *(void *)&v94[0] = sub_1A72D1730(v55, v54, (uint64_t *)&v95);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      sub_1A72CB560((uint64_t)v32, &qword_1E96F1508);
      *(_WORD *)(v53 + 12) = 2080;
      uint64_t v73 = (char *)v84;
      uint64_t v74 = sub_1A7574130();
      *(void *)&v94[0] = sub_1A72D1730(v74, v75, (uint64_t *)&v95);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      uint64_t v56 = *(void (**)(char *, uint64_t))(v39 + 8);
      v56(v73, v8);
      _os_log_impl(&dword_1A72A1000, v51, (os_log_type_t)v89, "Failed cast {given: %s, expect: %s}", (uint8_t *)v53, 0x16u);
      unint64_t v76 = v88;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v76, -1, -1);
      MEMORY[0x1AD0CD330](v53, -1, -1);
    }
    else
    {
      sub_1A72CB560((uint64_t)v32, &qword_1E96F1508);
      uint64_t v56 = *(void (**)(char *, uint64_t))(v39 + 8);
      v56(v50, v8);
    }
    *(void *)&long long v95 = 0;
    *((void *)&v95 + 1) = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    *(void *)&long long v95 = 0xD000000000000014;
    *((void *)&v95 + 1) = 0x80000001A759F360;
    uint64_t v77 = v83;
    sub_1A72BF1E8((uint64_t)v90, v83, &qword_1E96F1508);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v77, 1, v8) != 1)
    {
      int v78 = v87;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v87, v77, v8);
      v92(v86, v78, v8);
      sub_1A7572670();
      v56(v78, v8);
    }
    uint64_t v79 = self;
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    char v66 = v91;
    sub_1A7574130();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    uint64_t v69 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    id v70 = objc_msgSend(v79, sel_internalErrorWithDebugDescription_, v69);
    uint64_t v42 = (uint64_t)v90;
  }
  id v80 = v70;

  v56(v66, v8);
  sub_1A72CB560(v42, &qword_1E96F1508);
  return v80;
}

void REMSwiftInvocator.performSwiftInvocation<A>(_:parameters:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, char *a7@<X8>)
{
  uint64_t v114 = a2;
  id v109 = a1;
  uint64_t v102 = a7;
  id v118 = a6;
  uint64_t v119 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v101 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v100 = (char *)v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v107 = (char *)v96 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v99 = (char *)v96 - v14;
  uint64_t v15 = sub_1A7573790();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v117 = (char *)v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571830();
  swift_allocObject();
  uint64_t v18 = sub_1A7571820();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 8);
  uint64_t v111 = v7;
  uint64_t v110 = a3;
  uint64_t v112 = a5;
  uint64_t v104 = a5 + 8;
  uint64_t v103 = v19;
  uint64_t v20 = v19(a3, a5);
  uint64_t v21 = MEMORY[0x1E4FBC860];
  unint64_t v22 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v116 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v20;
  uint64_t v24 = (uint64_t)v23;
  void v23[3] = v22;
  uint64_t v25 = v23 + 3;
  uint64_t v23[4] = sub_1A72B0A88(v21);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v26 = __swift_project_value_buffer(v15, (uint64_t)qword_1EB705A18);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v28 = (uint64_t)v117;
  uint64_t v105 = v16 + 16;
  v27(v117, v26, v15);
  uint64_t v125 = v116;
  uint64_t v124 = (void *)v24;
  uint64_t v113 = v24;
  swift_retain();
  uint64_t v106 = v15;
  double v29 = (void (*)(uint64_t *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v124, v28);
  v29(&v123, 0);
  id v30 = v118;
  uint64_t v31 = v119;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v114 = v18;
  uint64_t v32 = v115;
  uint64_t v33 = sub_1A7571800();
  if (v32)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1A7571E90();
    __swift_project_value_buffer(v35, (uint64_t)qword_1E96F3940);
    id v36 = v32;
    id v37 = v32;
    uint64_t v38 = sub_1A7571E80();
    os_log_type_t v39 = sub_1A7572FD0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v124 = (void *)v41;
      *(_DWORD *)uint64_t v40 = 136315394;
      swift_getErrorValue();
      uint64_t v42 = Error.rem_errorDescription.getter((uint64_t)v122[5]);
      uint64_t v123 = sub_1A72D1730(v42, v43, (uint64_t *)&v124);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v40 + 12) = 2080;
      uint64_t v123 = v31;
      swift_getMetatypeMetadata();
      uint64_t v44 = sub_1A7572670();
      uint64_t v123 = sub_1A72D1730(v44, v45, (uint64_t *)&v124);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v38, v39, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v41, -1, -1);
      MEMORY[0x1AD0CD330](v40, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    id v46 = v30;
    uint64_t v47 = v33;
    unint64_t v48 = v34;
    uint64_t v97 = v27;
    uint64_t v98 = v26;
    id v49 = v46;
    swift_beginAccess();
    uint64_t v50 = *v25;
    id v51 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v47, v48);
    swift_bridgeObjectRetain();
    v122[0] = objc_msgSend(v51, sel_init);
    uint64_t v124 = (void *)v31;
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    uint64_t v53 = sub_1A7572670();
    unint64_t v55 = v54;
    uint64_t v115 = v96;
    MEMORY[0x1F4188790](v53);
    v96[-10] = v110;
    v96[-9] = v31;
    v96[-8] = v112;
    v96[-7] = v49;
    unint64_t v56 = v48;
    v96[-6] = v122;
    id v57 = v109;
    v96[-5] = v111;
    v96[-4] = v57;
    v96[-3] = v47;
    v96[-2] = v48;
    v96[-1] = v50;
    int v58 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v53, v55, v58, (void (*)(void))sub_1A744A8F0, (uint64_t)&v96[-12]);
    v96[1] = MetatypeMetadata;
    id v109 = 0;
    sub_1A72E3460(v47, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v59 = v47;
    uint64_t v60 = sub_1A75717E0();
    id v61 = objc_msgSend(v122[0], sel_resultStorages);
    uint64_t v62 = sub_1A75723F0();

    uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    uint64_t v124 = (void *)v62;
    sub_1A72BEE98((uint64_t)&v124, (uint64_t)&v123);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v115 = (void *)v56;
      uint64_t v63 = v121;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
      uint64_t v64 = v103(v110, v112);
      uint64_t v65 = v116;
      char v66 = (void *)swift_allocObject();
      v66[2] = v64;
      v66[3] = v63;
      v66[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v67 = (uint64_t)v117;
      v97(v117, v98, v106);
      uint64_t v125 = v65;
      uint64_t v124 = v66;
      swift_retain();
      __int16 v68 = (void (*)(uint64_t *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)&v124, v67);
      v68(&v123, 0);
      id v69 = v122[0];
      id v70 = objc_msgSend(v122[0], sel_resultData);
      uint64_t v71 = sub_1A7571A20();
      unint64_t v73 = v72;

      uint64_t v74 = AssociatedTypeWitness;
      swift_getAssociatedConformanceWitness();
      unint64_t v75 = v107;
      id v76 = v109;
      sub_1A75717C0();
      id v109 = v76;
      if (!v76)
      {
        sub_1A72E3460(v71, v73);
        uint64_t v119 = v60;
        uint64_t v89 = v101;
        uint64_t v90 = v59;
        uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v101 + 32);
        uint64_t v92 = v99;
        v91(v99, v75, v74);
        unint64_t v93 = v100;
        (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v100, v92, v74);
        id v94 = v69;
        id v118 = objc_msgSend(v94, sel_latestFetchResultToken);
        sub_1A72E3460(v90, (unint64_t)v115);
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v89 + 8))(v92, v74);
        long long v95 = v102;
        v91(v102, v93, v74);
        *(void *)&v95[*(int *)(type metadata accessor for REMInvocationResult() + 28)] = v118;

        return;
      }
      sub_1A72E3460(v71, v73);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v77 = sub_1A7571E90();
      __swift_project_value_buffer(v77, (uint64_t)qword_1E96F3940);
      id v78 = v109;
      id v79 = v109;
      id v80 = v78;
      uint64_t v81 = sub_1A7571E80();
      os_log_type_t v82 = sub_1A7572FD0();
      if (os_log_type_enabled(v81, v82))
      {
        uint64_t v83 = swift_slowAlloc();
        uint64_t v84 = swift_slowAlloc();
        uint64_t v124 = (void *)v84;
        *(_DWORD *)uint64_t v83 = 136315394;
        id v118 = (id)v59;
        swift_getErrorValue();
        uint64_t v85 = Error.rem_errorDescription.getter(v120);
        uint64_t v123 = sub_1A72D1730(v85, v86, (uint64_t *)&v124);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v83 + 12) = 2080;
        uint64_t v123 = v119;
        uint64_t v87 = sub_1A7572670();
        uint64_t v123 = sub_1A72D1730(v87, v88, (uint64_t *)&v124);
        sub_1A7573250();
        uint64_t v59 = (uint64_t)v118;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v81, v82, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v83, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v84, -1, -1);
        MEMORY[0x1AD0CD330](v83, -1, -1);
      }
      else
      {
      }
      swift_willThrow();
      sub_1A72E3460(v59, (unint64_t)v115);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)&v124, (uint64_t)&v123);
      sub_1A7447A9C((uint64_t)&v123, 0, 0, &qword_1EB705480, &qword_1E96F3A20);
      sub_1A72CB560((uint64_t)&v123, &qword_1EB705938);
      swift_willThrow();
      sub_1A72E3460(v47, v56);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
    }
  }
}

uint64_t sub_1A744A354()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F3940);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F3940);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1A744A41C(uint64_t a1)
{
  unint64_t v2 = sub_1A744A958();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A744A458(uint64_t a1)
{
  unint64_t v2 = sub_1A744A958();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VoidParameters.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3958);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A744A958();
  sub_1A75741B0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t VoidParameters.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1A744A5CC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3958);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A744A958();
  sub_1A75741B0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t REMInvocationResult.result.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

void *REMInvocationResult.latestFetchResultToken.getter(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + *(int *)(a1 + 28));
  id v3 = v2;
  return v2;
}

void REMSwiftInvocator.performSwiftInvocation<A>(_:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, char *a6@<X8>)
{
}

id REMStore.store.getter()
{
  return v0;
}

id sub_1A744A76C()
{
  return *v0;
}

id sub_1A744A774()
{
  id v1 = objc_msgSend(*v0, sel_store);

  return v1;
}

id sub_1A744A7AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1A744A7D0(a1, a2, a3, a4);
}

id sub_1A744A7D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = (void *)sub_1A7571A00();
  if (a4)
  {
    sub_1A73484C0();
    sub_1A72D8FDC();
    a4 = (void *)sub_1A75723D0();
  }
  v12[0] = 0;
  id v8 = objc_msgSend(v4, sel_resultFromPerformingSwiftInvocation_parametersData_storages_error_, a1, v7, a4, v12);

  if (v8)
  {
    id v9 = v12[0];
  }
  else
  {
    id v10 = v12[0];
    sub_1A7571850();

    swift_willThrow();
  }
  return v8;
}

void sub_1A744A8F0()
{
  uint64_t v2 = (void **)v0[6];
  uint64_t v3 = (*(uint64_t (**)(void, void, void, void, void))(v0[4] + 16))(v0[8], v0[9], v0[10], v0[11], v0[2]);
  if (!v1)
  {
    uint64_t v4 = *v2;
    *uint64_t v2 = (void *)v3;
  }
}

unint64_t sub_1A744A958()
{
  unint64_t result = qword_1E96F3960[0];
  if (!qword_1E96F3960[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96F3960);
  }
  return result;
}

uint64_t dispatch thunk of REMSwiftInvocableProtocol.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

ValueMetadata *type metadata accessor for VoidParameters()
{
  return &type metadata for VoidParameters;
}

uint64_t sub_1A744A9D0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A744AA68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    id v10 = *(void **)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = v10;
    id v11 = v10;
  }
  return v4;
}

void sub_1A744AB64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void **)((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1A744ABD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  id v8 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = v8;
  id v9 = v8;
  return a1;
}

uint64_t sub_1A744AC54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  id v8 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  id v9 = *v7;
  void *v7 = v8;
  id v10 = v8;

  return a1;
}

uint64_t sub_1A744ACDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A744AD58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  id v8 = *v7;
  void *v7 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_1A744ADDC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A744AF30);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  if ((v17 + 1) >= 2) {
    return v17;
  }
  else {
    return 0;
  }
}

void sub_1A744AF44(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      unsigned int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1A744B130);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFE)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            *uint64_t v18 = 0;
            *(_DWORD *)uint64_t v18 = a2 - 0x7FFFFFFF;
          }
          else
          {
            *uint64_t v18 = a2;
          }
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for REMInvocationResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of REMSwiftInvocator.store.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of REMSwiftInvocator.result(fromPerforming:parametersData:storages:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

ValueMetadata *type metadata accessor for VoidParameters.CodingKeys()
{
  return &type metadata for VoidParameters.CodingKeys;
}

unint64_t sub_1A744B1C0()
{
  unint64_t result = qword_1E96F39E8;
  if (!qword_1E96F39E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F39E8);
  }
  return result;
}

unint64_t sub_1A744B218()
{
  unint64_t result = qword_1E96F39F0;
  if (!qword_1E96F39F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F39F0);
  }
  return result;
}

id sub_1A744B26C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1A744A7AC(a1, a2, a3, a4);
}

uint64_t sub_1A744B284()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F3A28);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F3A28);
  if (qword_1EB704BF8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F68);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t REMRemindersListDataView.GroceryAutoCategorizationMessage.encodedString.getter()
{
  uint64_t v1 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A7572660();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1A7571470();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unsigned int v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A75714B0();
  swift_allocObject();
  sub_1A75714A0();
  if (qword_1E96F0850 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v5, (uint64_t)qword_1E96F3A58);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_1A7571480();
  sub_1A74507CC(&qword_1E96F3A70, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage);
  uint64_t v10 = sub_1A7571490();
  unint64_t v12 = v11;
  sub_1A7572650();
  uint64_t v13 = sub_1A7572630();
  if (v14)
  {
    uint64_t v15 = v13;
    sub_1A72E3460(v10, v12);
    swift_release();
  }
  else
  {
    if (qword_1E96F0840 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1A7571E90();
    __swift_project_value_buffer(v17, (uint64_t)qword_1E96F3A28);
    sub_1A744F744(v0, (uint64_t)v3);
    uint64_t v18 = sub_1A7571E80();
    os_log_type_t v19 = sub_1A7572FD0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v25 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      v24[0] = v20 + 4;
      uint64_t v22 = REMRemindersListDataView.GroceryAutoCategorizationMessage.description.getter();
      v24[1] = sub_1A72D1730(v22, v23, &v25);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      sub_1A744F7A8((uint64_t)v3);
      _os_log_impl(&dword_1A72A1000, v18, v19, "GroceryAutoCategorizationMessage: Cannot encode to JSON data to UTF8 {message: %s}", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v21, -1, -1);
      MEMORY[0x1AD0CD330](v20, -1, -1);
      sub_1A72E3460(v10, v12);

      swift_release();
    }
    else
    {
      sub_1A72E3460(v10, v12);
      swift_release();
      sub_1A744F7A8((uint64_t)v3);
    }
    return 0;
  }
  return v15;
}

uint64_t type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage()
{
  uint64_t result = qword_1EB7009A0;
  if (!qword_1EB7009A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t REMRemindersListDataView.GroceryAutoCategorizationMessage.description.getter()
{
  uint64_t v1 = sub_1A7571B60();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A7571BC0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A744F744(v0, (uint64_t)v14);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = *(void *)v14;
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
      uint64_t v18 = &v14[*(int *)(v17 + 64)];
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, &v14[*(int *)(v17 + 48)], v5);
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v18, v1);
      uint64_t v38 = 0;
      unint64_t v39 = 0xE000000000000000;
      sub_1A7573560();
      sub_1A7572740();
      uint64_t v37 = v16;
      sub_1A7573BC0();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      sub_1A7571B80();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      sub_1A74507CC(&qword_1E96F3A80, MEMORY[0x1E4F27928]);
      sub_1A7573BC0();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      uint64_t v19 = v38;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
    else
    {
      uint64_t v31 = *(void *)v14;
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78);
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, &v14[*(int *)(v32 + 48)], v1);
      uint64_t v38 = 0;
      unint64_t v39 = 0xE000000000000000;
      sub_1A7573560();
      sub_1A7572740();
      uint64_t v37 = v31;
      sub_1A7573BC0();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      sub_1A74507CC(&qword_1E96F3A80, MEMORY[0x1E4F27928]);
      sub_1A7573BC0();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      uint64_t v19 = v38;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
  else
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
    uint64_t v21 = &v14[*(int *)(v20 + 48)];
    uint64_t v22 = &v14[*(int *)(v20 + 64)];
    unint64_t v34 = v11;
    uint64_t v35 = v2;
    uint64_t v23 = v5;
    uint64_t v24 = v1;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v26 = v14;
    uint64_t v27 = v23;
    uint64_t v36 = v23;
    v25(v11, v26, v23);
    v25(v9, v21, v27);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v22, v24);
    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    uint64_t v28 = v34;
    sub_1A7571B80();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7571B80();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A74507CC(&qword_1E96F3A80, MEMORY[0x1E4F27928]);
    sub_1A7573BC0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    uint64_t v19 = v38;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v4, v24);
    double v29 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v30 = v36;
    v29(v9, v36);
    v29(v28, v30);
  }
  return v19;
}

uint64_t static REMRemindersListDataView.GroceryAutoCategorizationMessage.message(from:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v31 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A7572660();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A7571420();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571460();
  swift_allocObject();
  sub_1A7571450();
  if (qword_1E96F0848 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v11, (uint64_t)qword_1E96F3A40);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  sub_1A7571430();
  sub_1A7572650();
  uint64_t v16 = sub_1A7572620();
  unint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v18 >> 60 == 15)
  {
    if (qword_1E96F0840 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1A7571E90();
    __swift_project_value_buffer(v19, (uint64_t)qword_1E96F3A28);
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_1A7571E80();
    os_log_type_t v21 = sub_1A7572FD0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v33 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1A72D1730(a1, a2, &v33);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A72A1000, v20, v21, "GroceryAutoCategorizationMessage: Cannot decode JSON string into utf8 data {encodedMessage: %s}", v22, 0xCu);
      uint64_t v24 = 1;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v23, -1, -1);
      MEMORY[0x1AD0CD330](v22, -1, -1);

      swift_release();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release();
      uint64_t v24 = 1;
    }
    uint64_t v26 = v30;
    uint64_t v25 = v31;
  }
  else
  {
    sub_1A74507CC(&qword_1E96F3A98, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage);
    uint64_t v25 = v31;
    uint64_t v24 = 0;
    sub_1A7571440();
    sub_1A7360424(v16, v18);
    swift_release();
    uint64_t v26 = v30;
    sub_1A744F804((uint64_t)v6, v30);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v26, v24, 1, v25);
}

void static REMRemindersListDataView.GroceryAutoCategorizationMessage.coalesceRecent(encodedMessageStrings:)(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t v293 = a2;
  uint64_t v309 = sub_1A7571BC0();
  uint64_t v3 = *(void *)(v309 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v309);
  uint64_t v286 = (char *)&v280 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v298 = (char *)&v280 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  int64_t v284 = (char *)&v280 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v287 = (char *)&v280 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v283 = (char *)&v280 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v285 = (char *)&v280 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v281 = (char *)&v280 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v282 = (char *)&v280 - v18;
  uint64_t v297 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB700450);
  MEMORY[0x1F4188790](v297);
  uint64_t v299 = (char *)&v280 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1A7571B60();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  id v290 = (char *)&v280 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v289 = (char *)&v280 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v288 = (char *)&v280 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v291 = (char *)&v280 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v307 = (char *)&v280 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  int64_t v306 = (char *)&v280 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v318 = (char *)&v280 - v35;
  MEMORY[0x1F4188790](v34);
  uint64_t v317 = (char *)&v280 - v36;
  uint64_t v37 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v301 = (uint64_t)&v280 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  uint64_t v316 = (char *)&v280 - v42;
  MEMORY[0x1F4188790](v41);
  uint64_t v321 = (uint64_t)&v280 - v43;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7005A0);
  uint64_t v45 = MEMORY[0x1F4188790](v44 - 8);
  uint64_t v47 = (char *)&v280 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v45);
  id v49 = *(void (**)(void))(v38 + 56);
  uint64_t v48 = v38 + 56;
  uint64_t v310 = (uint64_t)&v280 - v50;
  v294 = v49;
  v49();
  uint64_t v51 = *(void *)(a1 + 56);
  uint64_t v311 = a1 + 56;
  uint64_t v52 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v53 = v37;
  uint64_t v54 = -1;
  if (v52 < 64) {
    uint64_t v54 = ~(-1 << v52);
  }
  unint64_t v55 = v54 & v51;
  int64_t v312 = (unint64_t)(v52 + 63) >> 6;
  uint64_t v295 = v48;
  unint64_t v56 = (uint64_t (**)(char *, uint64_t, uint64_t))(v48 - 8);
  unint64_t v304 = v21 + 32;
  uint64_t v292 = v3;
  v308 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v313 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v319 = a1;
  swift_bridgeObjectRetain();
  int64_t v57 = 0;
  *(void *)&long long v58 = 136315138;
  long long v300 = v58;
  uint64_t v296 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v315 = v20;
  uint64_t v320 = v53;
  uint64_t v305 = v56;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v55)
        {
          unint64_t v59 = __clz(__rbit64(v55));
          v55 &= v55 - 1;
          unint64_t v60 = v59 | (v57 << 6);
        }
        else
        {
          int64_t v61 = v57 + 1;
          if (__OFADD__(v57, 1))
          {
            __break(1u);
            goto LABEL_87;
          }
          if (v61 >= v312) {
            goto LABEL_48;
          }
          unint64_t v62 = *(void *)(v311 + 8 * v61);
          ++v57;
          if (!v62)
          {
            int64_t v57 = v61 + 1;
            if (v61 + 1 >= v312) {
              goto LABEL_48;
            }
            unint64_t v62 = *(void *)(v311 + 8 * v57);
            if (!v62)
            {
              int64_t v57 = v61 + 2;
              if (v61 + 2 >= v312) {
                goto LABEL_48;
              }
              unint64_t v62 = *(void *)(v311 + 8 * v57);
              if (!v62)
              {
                int64_t v63 = v61 + 3;
                if (v63 >= v312)
                {
LABEL_48:
                  swift_release();
                  sub_1A744F930(v310, (uint64_t)v293);
                  return;
                }
                unint64_t v62 = *(void *)(v311 + 8 * v63);
                if (!v62)
                {
                  while (1)
                  {
                    int64_t v57 = v63 + 1;
                    if (__OFADD__(v63, 1)) {
                      break;
                    }
                    if (v57 >= v312) {
                      goto LABEL_48;
                    }
                    unint64_t v62 = *(void *)(v311 + 8 * v57);
                    ++v63;
                    if (v62) {
                      goto LABEL_20;
                    }
                  }
LABEL_87:
                  __break(1u);
LABEL_88:
                  __break(1u);
LABEL_89:
                  __break(1u);
LABEL_90:
                  __break(1u);
LABEL_91:
                  __break(1u);
LABEL_92:
                  __break(1u);
LABEL_93:
                  __break(1u);
LABEL_94:
                  __break(1u);
                  goto LABEL_95;
                }
                int64_t v57 = v63;
              }
            }
          }
LABEL_20:
          unint64_t v55 = (v62 - 1) & v62;
          unint64_t v60 = __clz(__rbit64(v62)) + (v57 << 6);
        }
        uint64_t v64 = (uint64_t *)(*(void *)(v319 + 48) + 16 * v60);
        uint64_t v65 = *v64;
        unint64_t v66 = v64[1];
        swift_bridgeObjectRetain();
        static REMRemindersListDataView.GroceryAutoCategorizationMessage.message(from:)(v65, v66, (uint64_t)v47);
        uint64_t v67 = *v56;
        if ((*v56)(v47, 1, v53) != 1) {
          break;
        }
        sub_1A744F868((uint64_t)v47);
        if (qword_1E96F0840 != -1) {
          swift_once();
        }
        uint64_t v68 = sub_1A7571E90();
        __swift_project_value_buffer(v68, (uint64_t)qword_1E96F3A28);
        swift_bridgeObjectRetain();
        id v69 = sub_1A7571E80();
        os_log_type_t v70 = sub_1A7572FD0();
        if (os_log_type_enabled(v69, v70))
        {
          uint64_t v71 = swift_slowAlloc();
          uint64_t v72 = swift_slowAlloc();
          v322[0] = v72;
          *(_DWORD *)uint64_t v71 = v300;
          swift_bridgeObjectRetain();
          *(void *)(v71 + 4) = sub_1A72D1730(v65, v66, v322);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1A72A1000, v69, v70, "GroceryAutoCategorizationMessage: Cannot get message from {encodedMessageString: %s", (uint8_t *)v71, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AD0CD330](v72, -1, -1);
          uint64_t v73 = v71;
          uint64_t v20 = v315;
          MEMORY[0x1AD0CD330](v73, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v53 = v320;
      }
      swift_bridgeObjectRelease();
      uint64_t v74 = v321;
      sub_1A744F804((uint64_t)v47, v321);
      sub_1A7571B50();
      sub_1A7571AA0();
      sub_1A744F744(v74, (uint64_t)v316);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      unint64_t v314 = v55;
      if (EnumCaseMultiPayload)
      {
        id v76 = v307;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
          id v78 = &v316[*(int *)(v77 + 48)];
          id v79 = *(void (**)(void, uint64_t, uint64_t))v304;
          uint64_t v80 = v304 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
          (*(void (**)(char *, char *, uint64_t))v304)(v76, &v316[*(int *)(v77 + 64)], v20);
          (*v308)(v78, v309);
        }
        else
        {
          uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78);
          id v79 = *(void (**)(void, uint64_t, uint64_t))v304;
          uint64_t v80 = v304 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
          (*(void (**)(char *, char *, uint64_t))v304)(v76, &v316[*(int *)(v92 + 48)], v20);
        }
      }
      else
      {
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
        os_log_type_t v82 = v316;
        uint64_t v83 = &v316[*(int *)(v81 + 48)];
        uint64_t v84 = &v316[*(int *)(v81 + 64)];
        uint64_t v303 = (void (*)(char *, char *, uint64_t))v57;
        uint64_t v85 = v47;
        unint64_t v86 = *(void (**)(void, uint64_t, uint64_t))v304;
        uint64_t v80 = v304 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
        uint64_t v87 = v307;
        (*(void (**)(char *, char *, uint64_t))v304)(v307, v84, v20);
        unint64_t v88 = *v308;
        uint64_t v89 = v83;
        uint64_t v90 = v309;
        (*v308)(v89, v309);
        uint64_t v91 = v82;
        id v79 = v86;
        uint64_t v47 = v85;
        int64_t v57 = (int64_t)v303;
        v88(v91, v90);
        id v76 = v87;
      }
      unint64_t v93 = v306;
      uint64_t v303 = (void (*)(char *, char *, uint64_t))v79;
      v79(v306, (uint64_t)v76, v20);
      sub_1A74507CC((unint64_t *)&qword_1EB7057C8, MEMORY[0x1E4F27928]);
      id v94 = v318;
      uint64_t v95 = v20;
      char v96 = sub_1A7572580();
      uint64_t v97 = *v313;
      (*v313)(v93, v95);
      v97(v94, v95);
      v97(v317, v95);
      if ((v96 & 1) == 0) {
        break;
      }
      uint64_t v98 = v301;
      if (qword_1E96F0840 != -1) {
        swift_once();
      }
      uint64_t v99 = sub_1A7571E90();
      __swift_project_value_buffer(v99, (uint64_t)qword_1E96F3A28);
      uint64_t v100 = v321;
      sub_1A744F744(v321, v98);
      uint64_t v101 = sub_1A7571E80();
      os_log_type_t v102 = sub_1A7572FD0();
      BOOL v103 = os_log_type_enabled(v101, v102);
      unint64_t v55 = v314;
      if (v103)
      {
        uint64_t v104 = swift_slowAlloc();
        uint64_t v105 = swift_slowAlloc();
        uint64_t v323 = v105;
        *(_DWORD *)uint64_t v104 = v300;
        uint64_t v106 = REMRemindersListDataView.GroceryAutoCategorizationMessage.encodedString.getter();
        if (v107)
        {
          v322[0] = v106;
          v322[1] = v107;
          uint64_t v108 = sub_1A7572670();
          unint64_t v110 = v109;
        }
        else
        {
          unint64_t v110 = 0xE300000000000000;
          uint64_t v108 = 7104878;
        }
        unint64_t v56 = v305;
        *(void *)(v104 + 4) = sub_1A72D1730(v108, v110, &v323);
        swift_bridgeObjectRelease();
        sub_1A744F7A8(v301);
        _os_log_impl(&dword_1A72A1000, v101, v102, "GroceryAutoCategorizationMessage: Skipping coalescing message as it was too old {message: '%s'}", (uint8_t *)v104, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v105, -1, -1);
        MEMORY[0x1AD0CD330](v104, -1, -1);

        sub_1A744F7A8(v321);
        uint64_t v20 = v315;
        uint64_t v53 = v320;
      }
      else
      {

        sub_1A744F7A8(v98);
        sub_1A744F7A8(v100);
        uint64_t v20 = v315;
        uint64_t v53 = v320;
        unint64_t v56 = v305;
      }
    }
    id v302 = v97;
    uint64_t v111 = v299;
    uint64_t v112 = (char **)&v299[*(int *)(v297 + 48)];
    uint64_t v113 = v310;
    sub_1A744F8C8(v310, (uint64_t)v299);
    sub_1A744F744(v321, (uint64_t)v112);
    uint64_t v114 = v111;
    uint64_t v53 = v320;
    unint64_t v56 = v305;
    int v115 = v67(v114, 1, v320);
    uint64_t v116 = v298;
    if (v115 != 1) {
      break;
    }
    sub_1A744F868(v113);
    int v117 = swift_getEnumCaseMultiPayload();
    if (v117)
    {
      id v118 = v302;
      unint64_t v55 = v314;
      if (v117 == 1)
      {
        uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
        uint64_t v120 = (char *)v112 + *(int *)(v119 + 48);
        v118((char *)v112 + *(int *)(v119 + 64), v315);
        uint64_t v121 = v120;
        uint64_t v53 = v320;
        (*v308)(v121, v309);
      }
      else
      {
        uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78);
        v118((char *)v112 + *(int *)(v128 + 48), v315);
      }
    }
    else
    {
      uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
      uint64_t v123 = (char *)v112 + *(int *)(v122 + 48);
      v302((char *)v112 + *(int *)(v122 + 64), v315);
      uint64_t v124 = *v308;
      uint64_t v125 = v123;
      uint64_t v126 = v309;
      (*v308)(v125, v309);
      uint64_t v127 = v126;
      uint64_t v53 = v320;
      v124((char *)v112, v127);
      unint64_t v55 = v314;
    }
    uint64_t v129 = v310;
    sub_1A744F804(v321, v310);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v294)(v129, 0, 1, v53);
    uint64_t v20 = v315;
  }
  int v130 = swift_getEnumCaseMultiPayload();
  if (v130)
  {
    char v131 = v302;
    if (v130 != 1)
    {
      sub_1A744F7A8(v321);
      swift_release();
      sub_1A744F868(v310);
      uint64_t v184 = v299;
      uint64_t v185 = *(char **)v299;
      uint64_t v186 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78) + 48);
      uint64_t v187 = (char *)v184 + v186;
      int v188 = swift_getEnumCaseMultiPayload();
      if (!v188)
      {
        uint64_t v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
        uint64_t v252 = *(int *)(v251 + 48);
        uint64_t v253 = *(int *)(v251 + 64);
        uint64_t v254 = (char *)v293 + v186;
        uint64_t v255 = v293;
        uint64_t v256 = v315;
        v303(v254, v187, v315);
        if (!__OFADD__(v185, 1))
        {
          *uint64_t v255 = v185 + 1;
          uint64_t v257 = v320;
          swift_storeEnumTagMultiPayload();
          ((void (*)(char **, void, uint64_t, uint64_t))v294)(v255, 0, 1, v257);
          v131((char *)v112 + v253, v256);
          uint64_t v258 = *v308;
          uint64_t v259 = v309;
          (*v308)((char *)v112 + v252, v309);
          v258((char *)v112, v259);
          return;
        }
        goto LABEL_94;
      }
      if (v188 == 1)
      {
        uint64_t v189 = *v112;
        uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
        uint64_t v191 = *(int *)(v190 + 48);
        uint64_t v192 = *(int *)(v190 + 64);
        uint64_t v193 = (char *)v293 + v186;
        long long v194 = v293;
        long long v195 = v187;
        uint64_t v196 = v315;
        v303(v193, v195, v315);
        if (!__OFADD__(v185, v189))
        {
          *long long v194 = &v189[(void)v185];
          uint64_t v197 = v320;
          swift_storeEnumTagMultiPayload();
          ((void (*)(char **, void, uint64_t, uint64_t))v294)(v194, 0, 1, v197);
          v131((char *)v112 + v192, v196);
          (*v308)((char *)v112 + v191, v309);
          return;
        }
        goto LABEL_90;
      }
      uint64_t v260 = *v112;
      unint64_t v261 = v293;
      uint64_t v262 = v315;
      v303((char *)v293 + v186, v187, v315);
      if (!__OFADD__(v185, v260))
      {
        uint64_t v263 = (char *)v112 + v186;
        *unint64_t v261 = &v260[(void)v185];
        uint64_t v264 = v320;
        swift_storeEnumTagMultiPayload();
        ((void (*)(char **, void, uint64_t, uint64_t))v294)(v261, 0, 1, v264);
        v131(v263, v262);
        return;
      }
LABEL_95:
      __break(1u);
      return;
    }
    uint64_t v318 = (char *)v80;
    uint64_t v132 = v299;
    uint64_t v317 = *(char **)v299;
    uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
    uint64_t v134 = *(int *)(v133 + 48);
    char v135 = (char *)v132 + v134;
    uint64_t v136 = *(int *)(v133 + 64);
    uint64_t v137 = (char *)v132 + v136;
    int v138 = swift_getEnumCaseMultiPayload();
    uint64_t v139 = v310;
    if (v138)
    {
      if (v138 != 1)
      {
        sub_1A744F7A8(v321);
        swift_release();
        sub_1A744F868(v139);
        id v220 = *v112;
        uint64_t v221 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78) + 48);
        uint64_t v222 = v293;
        uint64_t v223 = v137;
        uint64_t v224 = v315;
        v303((char *)v293 + v221, v223, v315);
        if (!__OFADD__(v317, v220))
        {
          uint64_t v225 = (char *)v112 + v221;
          *uint64_t v222 = &v220[(void)v317];
          uint64_t v226 = v320;
          swift_storeEnumTagMultiPayload();
          ((void (*)(char **, void, uint64_t, uint64_t))v294)(v222, 0, 1, v226);
          v131(v225, v224);
          (*v308)(v135, v309);
          return;
        }
        goto LABEL_92;
      }
      uint64_t v316 = *v112;
      unint64_t v140 = v116;
      uint64_t v142 = v292 + 32;
      uint64_t v141 = *(void (**)(char *, char *, uint64_t))(v292 + 32);
      unint64_t v143 = v135;
      uint64_t v144 = v309;
      v141(v140, v143, v309);
      v303(v290, v137, v315);
      uint64_t v145 = v286;
      uint64_t v146 = (char *)v112 + v134;
      uint64_t v147 = v144;
      uint64_t v292 = v142;
      v141(v286, v146, v144);
      id v148 = &v316[(void)v317];
      if (__OFADD__(v317, v316)) {
        goto LABEL_88;
      }
      uint64_t v149 = (char *)v112 + v136;
      char v150 = sub_1A7571BA0();
      id v151 = *v308;
      (*v308)(v145, v147);
      sub_1A744F7A8(v321);
      swift_release();
      sub_1A744F868(v310);
      if (v150)
      {
        id v152 = v293;
        uint64_t v153 = (char *)v293 + *(int *)(v133 + 48);
        uint64_t v154 = (char *)v293 + *(int *)(v133 + 64);
        *uint64_t v293 = v148;
        v141(v153, v140, v147);
        uint64_t v155 = v154;
        uint64_t v156 = v315;
        v303(v155, v290, v315);
        uint64_t v157 = v320;
        swift_storeEnumTagMultiPayload();
        ((void (*)(char **, void, uint64_t, uint64_t))v294)(v152, 0, 1, v157);
        char v158 = v149;
        uint64_t v159 = v156;
      }
      else
      {
        v151(v140, v147);
        uint64_t v269 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78);
        v270 = v293;
        uint64_t v271 = (char *)v293 + *(int *)(v269 + 48);
        *uint64_t v293 = v148;
        uint64_t v272 = v315;
        v303(v271, v290, v315);
        uint64_t v273 = v320;
        swift_storeEnumTagMultiPayload();
        ((void (*)(char **, void, uint64_t, uint64_t))v294)(v270, 0, 1, v273);
        char v158 = v149;
        uint64_t v159 = v272;
      }
      v302(v158, v159);
    }
    else
    {
      uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
      id v199 = (char *)v112 + *(int *)(v198 + 48);
      uint64_t v200 = *(int *)(v198 + 64);
      uint64_t v202 = v292 + 32;
      unint64_t v201 = *(void (**)(char *, char *, uint64_t))(v292 + 32);
      v203 = v287;
      uint64_t v204 = v135;
      uint64_t v205 = v309;
      v201(v287, v204, v309);
      v303(v289, v137, v315);
      uint64_t v206 = v284;
      uint64_t v292 = v202;
      uint64_t v316 = (char *)v201;
      v201(v284, v199, v205);
      int v207 = v317 + 1;
      if (__OFADD__(v317, 1)) {
        goto LABEL_91;
      }
      id v208 = (char *)v112 + v200;
      char v209 = sub_1A7571BA0();
      uint64_t v210 = v206;
      id v211 = *v308;
      (*v308)(v210, v205);
      sub_1A744F7A8(v321);
      swift_release();
      sub_1A744F868(v310);
      if (v209)
      {
        uint64_t v212 = v293;
        uint64_t v213 = (char *)v293 + *(int *)(v133 + 48);
        uint64_t v214 = (char *)v293 + *(int *)(v133 + 64);
        *uint64_t v293 = v207;
        ((void (*)(char *, char *, uint64_t))v316)(v213, v203, v205);
        uint64_t v215 = v214;
        uint64_t v216 = v315;
        v303(v215, v289, v315);
        uint64_t v217 = v320;
        swift_storeEnumTagMultiPayload();
        ((void (*)(char **, void, uint64_t, uint64_t))v294)(v212, 0, 1, v217);
        uint64_t v218 = v208;
        uint64_t v219 = v216;
      }
      else
      {
        v211(v203, v205);
        uint64_t v275 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78);
        uint64_t v276 = v293;
        uint64_t v277 = (char *)v293 + *(int *)(v275 + 48);
        *uint64_t v293 = v207;
        uint64_t v278 = v315;
        v303(v277, v289, v315);
        uint64_t v279 = v320;
        swift_storeEnumTagMultiPayload();
        ((void (*)(char **, void, uint64_t, uint64_t))v294)(v276, 0, 1, v279);
        uint64_t v218 = v208;
        uint64_t v219 = v278;
      }
      v302(v218, v219);
      v211((char *)v112, v205);
    }
  }
  else
  {
    uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
    uint64_t v161 = *(int *)(v160 + 48);
    uint64_t v162 = &v299[v161];
    uint64_t v163 = *(int *)(v160 + 64);
    char v164 = &v299[v163];
    int v165 = swift_getEnumCaseMultiPayload();
    char v166 = v302;
    if (v165)
    {
      if (v165 != 1)
      {
        sub_1A744F7A8(v321);
        swift_release();
        sub_1A744F868(v310);
        id v242 = *v112;
        uint64_t v243 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78) + 48);
        id v244 = v293;
        uint64_t v245 = v164;
        uint64_t v246 = v315;
        v303((char *)v293 + v243, v245, v315);
        if (!__OFADD__(v242, 1))
        {
          uint64_t v247 = (char *)v112 + v243;
          uint64_t *v244 = v242 + 1;
          uint64_t v248 = v320;
          swift_storeEnumTagMultiPayload();
          ((void (*)(char **, void, uint64_t, uint64_t))v294)(v244, 0, 1, v248);
          v166(v247, v246);
          uint64_t v249 = v309;
          v250 = *v308;
          (*v308)(v162, v309);
          v250(v299, v249);
          return;
        }
        goto LABEL_93;
      }
      uint64_t v318 = *v112;
      uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
      uint64_t v168 = (char *)v112 + *(int *)(v167 + 48);
      uint64_t v169 = *(int *)(v167 + 64);
      int v170 = *(void (**)(char *, char *, uint64_t))(v292 + 32);
      uint64_t v171 = v285;
      uint64_t v172 = v162;
      uint64_t v173 = v309;
      v170(v285, v172, v309);
      v303(v288, v164, v315);
      uint64_t v174 = v283;
      v170(v283, v168, v173);
      if (__OFADD__(v318++, 1)) {
        goto LABEL_89;
      }
      uint64_t v317 = (char *)v112 + v169;
      char v176 = sub_1A7571BA0();
      uint64_t v177 = *v308;
      (*v308)(v174, v173);
      sub_1A744F7A8(v321);
      swift_release();
      sub_1A744F868(v310);
      if (v176)
      {
        uint64_t v178 = v293;
        uint64_t v179 = (char *)v293 + *(int *)(v167 + 48);
        uint64_t v180 = (char *)v293 + *(int *)(v167 + 64);
        *uint64_t v293 = v318;
        v170(v179, v171, v173);
        uint64_t v181 = v180;
      }
      else
      {
        v177(v171, v173);
        uint64_t v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78);
        uint64_t v178 = v293;
        uint64_t v181 = (char *)v293 + *(int *)(v274 + 48);
        *uint64_t v293 = v318;
      }
      uint64_t v182 = v315;
      v303(v181, v288, v315);
      uint64_t v183 = v320;
      swift_storeEnumTagMultiPayload();
      ((void (*)(char **, void, uint64_t, uint64_t))v294)(v178, 0, 1, v183);
      v302(v317, v182);
      v177(v299, v173);
    }
    else
    {
      uint64_t v227 = (char *)v112 + v161;
      uint64_t v317 = (char *)v112 + v163;
      uint64_t v229 = v292 + 32;
      char v228 = *(void (**)(char *, char *, uint64_t))(v292 + 32);
      char v230 = v282;
      id v231 = v162;
      uint64_t v232 = v309;
      v228(v282, v231, v309);
      uint64_t v318 = (char *)v80;
      v303(v291, v164, v315);
      char v233 = v281;
      uint64_t v234 = v232;
      v228(v281, v227, v232);
      LOBYTE(v232) = sub_1A7571BA0();
      uint64_t v235 = *(void (**)(char *, uint64_t))(v229 - 24);
      v235(v233, v234);
      sub_1A744F7A8(v321);
      swift_release();
      sub_1A744F868(v310);
      if (v232)
      {
        uint64_t v236 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
        uint64_t v237 = v293;
        uint64_t v238 = (char *)v293 + *(int *)(v236 + 48);
        uint64_t v239 = (char *)v293 + *(int *)(v236 + 64);
        *uint64_t v293 = (char *)2;
        v228(v238, v230, v234);
        uint64_t v240 = v315;
        v303(v239, v291, v315);
        uint64_t v241 = v320;
        swift_storeEnumTagMultiPayload();
        ((void (*)(char **, void, uint64_t, uint64_t))v294)(v237, 0, 1, v241);
      }
      else
      {
        v235(v230, v234);
        uint64_t v265 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78);
        uint64_t v266 = v293;
        uint64_t v267 = (char *)v293 + *(int *)(v265 + 48);
        *uint64_t v293 = (char *)2;
        uint64_t v240 = v315;
        v303(v267, v291, v315);
        uint64_t v268 = v320;
        swift_storeEnumTagMultiPayload();
        ((void (*)(char **, void, uint64_t, uint64_t))v294)(v266, 0, 1, v268);
      }
      v302(v317, v240);
      v235((char *)v112, v234);
      v235(v299, v234);
    }
  }
}

uint64_t sub_1A744E378(uint64_t a1)
{
  return sub_1A744E3C8(a1, MEMORY[0x1E4F26CB0], qword_1E96F3A40, MEMORY[0x1E4F26C88]);
}

uint64_t sub_1A744E3A0(uint64_t a1)
{
  return sub_1A744E3C8(a1, MEMORY[0x1E4F26D28], qword_1E96F3A58, MEMORY[0x1E4F26CF8]);
}

uint64_t sub_1A744E3C8(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, unsigned int *a4)
{
  uint64_t v6 = a2(0);
  __swift_allocate_value_buffer(v6, a3);
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)a3);
  uint64_t v8 = *a4;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v9(v7, v8, v6);
}

unint64_t sub_1A744E458()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
    case 3:
      unint64_t result = 0x7265646E696D6572;
      break;
    case 2:
      unint64_t result = 0x496E6F6974636573;
      break;
    case 4:
      unint64_t result = 0x7441646575657571;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A744E50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A745189C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A744E534(uint64_t a1)
{
  unint64_t v2 = sub_1A7450778();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A744E570(uint64_t a1)
{
  unint64_t v2 = sub_1A7450778();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersListDataView.GroceryAutoCategorizationMessage.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A7571B60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v74 = v4;
  uint64_t v75 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  unint64_t v66 = (char *)&v64 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v67 = (char *)&v64 - v11;
  uint64_t v12 = sub_1A7571BC0();
  uint64_t v69 = *(void *)(v12 - 8);
  uint64_t v70 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v65 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v64 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v68 = (char *)&v64 - v18;
  uint64_t v19 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3AA0);
  uint64_t v71 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v23 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7450778();
  uint64_t v73 = v23;
  sub_1A75741B0();
  sub_1A744F744(v2, (uint64_t)v21);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v68 = *(char **)v21;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
      uint64_t v26 = &v21[*(int *)(v25 + 48)];
      uint64_t v27 = &v21[*(int *)(v25 + 64)];
      uint64_t v29 = v69;
      uint64_t v28 = v70;
      uint64_t v30 = v65;
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v65, v26, v70);
      uint64_t v32 = v74;
      uint64_t v31 = v75;
      uint64_t v33 = v66;
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v66, v27, v74);
      char v84 = 0;
      uint64_t v34 = v72;
      uint64_t v35 = v73;
      sub_1A7573B10();
      if (v34)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v32);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v28);
      }
      else
      {
        char v83 = 3;
        sub_1A7573B40();
        sub_1A7571B80();
        char v82 = 2;
        sub_1A7573B10();
        swift_bridgeObjectRelease();
        unint64_t v60 = v66;
        sub_1A7571B00();
        char v81 = 4;
        sub_1A7573B30();
        uint64_t v61 = v70;
        (*(void (**)(char *, uint64_t))(v31 + 8))(v60, v32);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v30, v61);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v35, v76);
    }
    else
    {
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78);
      uint64_t v54 = v74;
      uint64_t v53 = v75;
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v8, &v21[*(int *)(v52 + 48)], v74);
      char v87 = 0;
      uint64_t v55 = v76;
      uint64_t v56 = v72;
      int64_t v57 = v73;
      sub_1A7573B10();
      if (!v56)
      {
        char v86 = 3;
        sub_1A7573B40();
        sub_1A7571B00();
        char v85 = 4;
        sub_1A7573B30();
      }
      (*(void (**)(char *, uint64_t))(v53 + 8))(v8, v54);
      return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v57, v55);
    }
  }
  else
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
    uint64_t v38 = &v21[*(int *)(v37 + 48)];
    uint64_t v39 = &v21[*(int *)(v37 + 64)];
    uint64_t v40 = v69;
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
    uint64_t v42 = v21;
    uint64_t v43 = v70;
    v41(v68, v42, v70);
    v41(v17, v38, v43);
    uint64_t v45 = v74;
    uint64_t v44 = v75;
    uint64_t v46 = v67;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v67, v39, v74);
    char v80 = 0;
    uint64_t v47 = v72;
    uint64_t v48 = v73;
    sub_1A7573B10();
    if (v47)
    {
      (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v45);
      id v49 = *(void (**)(char *, uint64_t))(v40 + 8);
      v49(v17, v43);
      uint64_t v50 = v68;
      uint64_t v51 = v43;
    }
    else
    {
      long long v58 = v17;
      unint64_t v59 = v68;
      sub_1A7571B80();
      char v79 = 1;
      sub_1A7573B10();
      swift_bridgeObjectRelease();
      sub_1A7571B80();
      char v78 = 2;
      sub_1A7573B10();
      swift_bridgeObjectRelease();
      unint64_t v62 = v67;
      sub_1A7571B00();
      char v77 = 4;
      sub_1A7573B30();
      uint64_t v63 = v70;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v62, v45);
      id v49 = *(void (**)(char *, uint64_t))(v40 + 8);
      v49(v58, v63);
      uint64_t v50 = v59;
      uint64_t v51 = v63;
    }
    v49(v50, v51);
    return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v48, v76);
  }
}

uint64_t REMRemindersListDataView.GroceryAutoCategorizationMessage.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v3 = sub_1A7573630();
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v61 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1A7571B60();
  uint64_t v66 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v65 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1A7571BC0();
  uint64_t v72 = *(void *)(v70 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v70);
  uint64_t v67 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v69 = (char *)&v58 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v58 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3AB0);
  uint64_t v71 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (uint64_t *)((char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = a1[3];
  uint64_t v73 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  unint64_t v19 = sub_1A7450778();
  uint64_t v20 = v74;
  sub_1A7574190();
  if (v20) {
    goto LABEL_20;
  }
  uint64_t v74 = v11;
  uint64_t v22 = v71;
  uint64_t v21 = v72;
  unint64_t v59 = v17;
  uint64_t v60 = v15;
  char v83 = 0;
  uint64_t v24 = sub_1A7573A00();
  if (v24 == 0xD000000000000017 && v23 == 0x80000001A75A3270 || (uint64_t v25 = v23, (sub_1A7573DB0() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = v70;
    char v77 = 1;
    sub_1A74507CC(&qword_1EB705A30, MEMORY[0x1E4F27990]);
    sub_1A7573A50();
    char v76 = 2;
    sub_1A7573A50();
    char v75 = 4;
    sub_1A7573A20();
    uint64_t v33 = v65;
    sub_1A7571AF0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v12);
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
    uint64_t v35 = (uint64_t)v59;
    uint64_t v36 = (char *)v59 + *(int *)(v34 + 48);
    uint64_t v37 = (char *)v59 + *(int *)(v34 + 64);
    uint64_t v38 = *(void (**)(uint64_t *, char *, uint64_t))(v21 + 32);
    v38(v59, v74, v26);
    v38((uint64_t *)v36, v69, v26);
    uint64_t v39 = v33;
LABEL_15:
    uint64_t v57 = (uint64_t)v73;
    uint64_t v30 = v68;
    goto LABEL_16;
  }
  if (v24 != 0xD000000000000019 || v25 != 0x80000001A75A3250)
  {
    if (sub_1A7573DB0())
    {
      uint64_t v27 = v21;
      uint64_t v28 = v12;
      goto LABEL_11;
    }
    if (v24 == 0xD00000000000001BLL && v25 == 0x80000001A75A3230)
    {
      swift_bridgeObjectRelease();
LABEL_18:
      char v82 = 3;
      uint64_t v42 = sub_1A7573A30();
      char v81 = 4;
      sub_1A7573A20();
      uint64_t v43 = v65;
      sub_1A7571AF0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v12);
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78);
      uint64_t v39 = v43;
      uint64_t v35 = (uint64_t)v59;
      uint64_t v37 = (char *)v59 + *(int *)(v44 + 48);
      *unint64_t v59 = v42;
      goto LABEL_15;
    }
    char v41 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v41) {
      goto LABEL_18;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1FD8);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1A75785A0;
    *(void *)(v45 + 56) = &_s14descr1EFC8D8B9O32GroceryAutoCategorizationMessageO10CodingKeysON;
    *(void *)(v45 + 64) = v19;
    *(unsigned char *)(v45 + 32) = 0;
    uint64_t v46 = v61;
    sub_1A7573620();
    uint64_t v47 = sub_1A7573640();
    swift_allocError();
    uint64_t v49 = v48;
    uint64_t v51 = v62;
    uint64_t v50 = v63;
    (*(void (**)(uint64_t, char *, uint64_t))(v62 + 16))(v48, v46, v63);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v47 - 8) + 104))(v49, *MEMORY[0x1E4FBBA78], v47);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v46, v50);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v12);
LABEL_20:
    uint64_t v40 = (uint64_t)v73;
    return __swift_destroy_boxed_opaque_existential_1(v40);
  }
  uint64_t v27 = v21;
  uint64_t v28 = v12;
LABEL_11:
  swift_bridgeObjectRelease();
  uint64_t v29 = v22;
  uint64_t v31 = v67;
  uint64_t v30 = v68;
  char v80 = 2;
  sub_1A74507CC(&qword_1EB705A30, MEMORY[0x1E4F27990]);
  sub_1A7573A50();
  char v79 = 3;
  uint64_t v32 = sub_1A7573A30();
  char v78 = 4;
  sub_1A7573A20();
  uint64_t v53 = v65;
  sub_1A7571AF0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v28);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
  uint64_t v35 = (uint64_t)v59;
  uint64_t v55 = (char *)v59 + *(int *)(v54 + 48);
  uint64_t v56 = v31;
  uint64_t v37 = (char *)v59 + *(int *)(v54 + 64);
  *unint64_t v59 = v32;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v55, v56, v70);
  uint64_t v39 = v53;
  uint64_t v57 = (uint64_t)v73;
LABEL_16:
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v37, v39, v64);
  swift_storeEnumTagMultiPayload();
  sub_1A744F804(v35, v30);
  uint64_t v40 = v57;
  return __swift_destroy_boxed_opaque_existential_1(v40);
}

uint64_t sub_1A744F710@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.GroceryAutoCategorizationMessage.init(from:)(a1, a2);
}

uint64_t sub_1A744F728(void *a1)
{
  return REMRemindersListDataView.GroceryAutoCategorizationMessage.encode(to:)(a1);
}

uint64_t sub_1A744F744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A744F7A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A744F804(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A744F868(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7005A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A744F8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7005A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A744F930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7005A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL _s19ReminderKitInternal24REMRemindersListDataViewO32GroceryAutoCategorizationMessageO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v193 = (char *)a2;
  uint64_t v3 = sub_1A7571B60();
  uint64_t v4 = *(void **)(v3 - 8);
  uint64_t v194 = v3;
  long long v195 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v181 = (char *)&v177 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v180 = (char *)&v177 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v179 = (char *)&v177 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v178 = (char *)&v177 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  int v188 = (char *)&v177 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v187 = (char *)&v177 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v186 = (char *)&v177 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v192 = (char *)&v177 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v182 = (char *)&v177 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v185 = (char *)&v177 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v191 = (char *)&v177 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v177 - v27;
  uint64_t v29 = sub_1A7571BC0();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v196 = v29;
  uint64_t v197 = v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v184 = (char *)&v177 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v183 = (char *)&v177 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v189 = (char *)&v177 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v190 = (char *)&v177 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  char v41 = (char *)&v177 - v40;
  uint64_t v42 = MEMORY[0x1F4188790](v39);
  uint64_t v44 = (char *)&v177 - v43;
  uint64_t v45 = MEMORY[0x1F4188790](v42);
  uint64_t v47 = (char *)&v177 - v46;
  uint64_t v48 = MEMORY[0x1F4188790](v45);
  uint64_t v50 = (char *)&v177 - v49;
  uint64_t v51 = MEMORY[0x1F4188790](v48);
  uint64_t v53 = (char *)&v177 - v52;
  MEMORY[0x1F4188790](v51);
  uint64_t v55 = (char *)&v177 - v54;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3AD0);
  uint64_t v57 = MEMORY[0x1F4188790](v56 - 8);
  unint64_t v59 = (uint64_t *)((char *)&v177 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v60 = (char **)((char *)v59 + *(int *)(v57 + 56));
  sub_1A744F744(a1, (uint64_t)v59);
  sub_1A744F744((uint64_t)v193, (uint64_t)v60);
  type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
      uint64_t v63 = *(int *)(v62 + 48);
      uint64_t v64 = (char *)v59 + v63;
      uint64_t v65 = *(int *)(v62 + 64);
      uint64_t v66 = (char *)v59 + v65;
      int v67 = swift_getEnumCaseMultiPayload();
      if (v67)
      {
        if (v67 == 1)
        {
          uint64_t v193 = (char *)*v59;
          uint64_t v191 = *v60;
          uint64_t v68 = (char *)v60 + v63;
          uint64_t v185 = (char *)v60 + v65;
          uint64_t v70 = v196;
          uint64_t v69 = v197;
          uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v197 + 32);
          uint64_t v72 = v190;
          v71(v190, v64, v196);
          uint64_t v73 = (void (*)(char *, char *, uint64_t))v195[4];
          uint64_t v74 = v66;
          uint64_t v75 = v194;
          v73(v192, v74, v194);
          char v76 = v189;
          v71(v189, v68, v70);
          uint64_t v77 = v75;
          char v78 = v186;
          v73(v186, v185, v75);
          char v79 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
          char v80 = v183;
          v79(v183, v72, v70);
          char v81 = v184;
          v79(v184, v76, v70);
          if (v193 == v191) {
            char v82 = sub_1A7571BA0();
          }
          else {
            char v82 = 0;
          }
          uint64_t v153 = v187;
          id v152 = v188;
          uint64_t v154 = v80;
          uint64_t v155 = v196;
          uint64_t v156 = *(void (**)(char *, uint64_t))(v197 + 8);
          v156(v81, v196);
          v156(v154, v155);
          uint64_t v157 = v195;
          char v158 = (void (*)(char *, char *, uint64_t))v195[2];
          v158(v153, v192, v77);
          v158(v152, v78, v77);
          if (v82)
          {
            sub_1A7571B40();
            BOOL v140 = fabs(v159) < 0.001;
          }
          else
          {
            BOOL v140 = 0;
          }
          uint64_t v171 = (void (*)(char *, uint64_t))v157[1];
          v171(v152, v77);
          v171(v153, v77);
          v171(v78, v77);
          uint64_t v172 = v196;
          v156(v189, v196);
          v171(v192, v77);
          v156(v190, v172);
          return v140;
        }
        uint64_t v113 = (char *)v60 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78) + 48);
        uint64_t v114 = v194;
        int v115 = (void (*)(char *, uint64_t))v195[1];
        v115(v113, v194);
        v115((char *)v59 + v65, v114);
        (*(void (**)(char *, uint64_t))(v197 + 8))((char *)v59 + v63, v196);
      }
      else
      {
        uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
        uint64_t v107 = (char *)v60 + *(int *)(v106 + 48);
        uint64_t v108 = v194;
        unint64_t v109 = (void (*)(char *, uint64_t))v195[1];
        v109((char *)v60 + *(int *)(v106 + 64), v194);
        unint64_t v110 = *(void (**)(char *, uint64_t))(v197 + 8);
        uint64_t v111 = v107;
        uint64_t v112 = v196;
        v110(v111, v196);
        v110((char *)v60, v112);
        v109(v66, v108);
        v110(v64, v112);
      }
      return 0;
    }
    uint64_t v98 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78) + 48);
    uint64_t v99 = (char *)v59 + v98;
    int v100 = swift_getEnumCaseMultiPayload();
    uint64_t v101 = v194;
    if (!v100)
    {
      uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
      char v135 = (char *)v60 + *(int *)(v134 + 48);
      uint64_t v136 = (void (*)(char *, uint64_t))v195[1];
      v136((char *)v60 + *(int *)(v134 + 64), v101);
      uint64_t v137 = *(void (**)(char *, uint64_t))(v197 + 8);
      int v138 = v135;
      uint64_t v139 = v196;
      v137(v138, v196);
      v137((char *)v60, v139);
      v136(v99, v101);
      return 0;
    }
    if (v100 == 1)
    {
      uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
      BOOL v103 = (char *)v60 + *(int *)(v102 + 48);
      uint64_t v104 = (char *)v60 + *(int *)(v102 + 64);
      uint64_t v105 = (void (*)(char *, uint64_t))v195[1];
      v105(v104, v101);
      (*(void (**)(char *, uint64_t))(v197 + 8))(v103, v196);
      v105(v99, v101);
      return 0;
    }
    uint64_t v142 = *v59;
    unint64_t v143 = *v60;
    uint64_t v144 = v195;
    uint64_t v145 = (void (*)(char *, char *, uint64_t))v195[4];
    uint64_t v146 = v178;
    v145(v178, v99, v194);
    uint64_t v147 = v179;
    v145(v179, (char *)v60 + v98, v101);
    id v148 = (void (*)(char *, char *, uint64_t))v144[2];
    uint64_t v149 = v180;
    v148(v180, v146, v101);
    char v150 = v181;
    v148(v181, v147, v101);
    if ((char *)v142 == v143)
    {
      sub_1A7571B40();
      BOOL v140 = fabs(v151) < 0.001;
    }
    else
    {
      BOOL v140 = 0;
    }
    int v170 = (void (*)(char *, uint64_t))v144[1];
    v170(v150, v101);
    v170(v149, v101);
    v170(v147, v101);
    v170(v146, v101);
  }
  else
  {
    uint64_t v186 = v44;
    uint64_t v187 = v41;
    int v188 = v55;
    uint64_t v189 = v47;
    uint64_t v190 = v53;
    uint64_t v192 = v50;
    uint64_t v193 = v28;
    uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
    uint64_t v84 = *(int *)(v83 + 48);
    char v85 = (char *)v59 + v84;
    uint64_t v86 = *(int *)(v83 + 64);
    char v87 = (char *)v59 + v86;
    int v88 = swift_getEnumCaseMultiPayload();
    if (v88)
    {
      if (v88 == 1)
      {
        uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
        uint64_t v90 = (char *)v60 + *(int *)(v89 + 48);
        uint64_t v91 = (char *)v60 + *(int *)(v89 + 64);
        uint64_t v92 = v194;
        unint64_t v93 = (void (*)(char *, uint64_t))v195[1];
        v93(v91, v194);
        id v94 = (char *)v59 + v84;
        uint64_t v95 = *(void (**)(char *, uint64_t))(v197 + 8);
        char v96 = v90;
        uint64_t v97 = v196;
        v95(v96, v196);
        v93(v87, v92);
        v95(v94, v97);
        v95((char *)v59, v97);
      }
      else
      {
        uint64_t v129 = (char *)v60 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78) + 48);
        uint64_t v130 = v194;
        char v131 = (void (*)(char *, uint64_t))v195[1];
        v131(v129, v194);
        v131((char *)v59 + v86, v130);
        uint64_t v132 = v196;
        uint64_t v133 = *(void (**)(char *, uint64_t))(v197 + 8);
        v133(v85, v196);
        v133((char *)v59, v132);
      }
      return 0;
    }
    uint64_t v183 = (char *)v60 + v84;
    uint64_t v184 = (char *)v60 + v86;
    uint64_t v116 = *(void (**)(char *, uint64_t *, uint64_t))(v197 + 32);
    int v117 = v59;
    uint64_t v118 = v196;
    v116(v188, v117, v196);
    v116(v190, (uint64_t *)v60, v118);
    uint64_t v119 = v192;
    v116(v192, (uint64_t *)v85, v118);
    uint64_t v120 = (void (*)(char *, char *, uint64_t))v195[4];
    uint64_t v121 = v194;
    v120(v193, v87, v194);
    uint64_t v122 = v189;
    v116(v189, (uint64_t *)v183, v118);
    v120(v191, v184, v121);
    uint64_t v123 = v197;
    char v124 = sub_1A7571BA0();
    uint64_t v125 = *(void (**)(char *, char *, uint64_t))(v123 + 16);
    uint64_t v126 = v186;
    v125(v186, v119, v118);
    uint64_t v127 = v187;
    v125(v187, v122, v118);
    if (v124) {
      char v128 = sub_1A7571BA0();
    }
    else {
      char v128 = 0;
    }
    uint64_t v160 = v182;
    uint64_t v161 = v185;
    uint64_t v162 = *(void (**)(char *, uint64_t))(v123 + 8);
    uint64_t v163 = v196;
    v162(v127, v196);
    uint64_t v197 = v123 + 8;
    v162(v126, v163);
    uint64_t v165 = v194;
    char v164 = v195;
    char v166 = (void (*)(char *, char *, uint64_t))v195[2];
    uint64_t v167 = (uint64_t)v193;
    v166(v161, v193, v194);
    uint64_t v168 = v191;
    v166(v160, v191, v165);
    if (v128)
    {
      sub_1A7571B40();
      BOOL v140 = fabs(v169) < 0.001;
    }
    else
    {
      BOOL v140 = 0;
    }
    uint64_t v173 = v189;
    uint64_t v174 = (void (*)(char *, uint64_t))v164[1];
    v174(v160, v165);
    v174(v161, v165);
    v174(v168, v165);
    uint64_t v175 = v173;
    uint64_t v176 = v196;
    v162(v175, v196);
    v174((char *)v167, v165);
    v162(v192, v176);
    v162(v190, v176);
    v162(v188, v176);
  }
  return v140;
}

unint64_t sub_1A7450778()
{
  unint64_t result = qword_1E96F3AA8;
  if (!qword_1E96F3AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3AA8);
  }
  return result;
}

uint64_t sub_1A74507CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *_s14descr1EFC8D8B9O32GroceryAutoCategorizationMessageOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78) + 48);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_1A7571B60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
        uint64_t v8 = *(int *)(v7 + 48);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1A7571BC0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        uint64_t v12 = *(int *)(v7 + 64);
      }
      else
      {
        uint64_t v21 = sub_1A7571BC0();
        uint64_t v22 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16);
        v22(a1, a2, v21);
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
        v22((uint64_t *)((char *)a1 + *(int *)(v23 + 48)), (uint64_t *)((char *)a2 + *(int *)(v23 + 48)), v21);
        uint64_t v12 = *(int *)(v23 + 64);
      }
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_1A7571B60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s14descr1EFC8D8B9O32GroceryAutoCategorizationMessageOwxx(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78) + 48);
  }
  else if (result == 1)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
    uint64_t v8 = a1 + *(int *)(v7 + 48);
    uint64_t v9 = sub_1A7571BC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    uint64_t v6 = *(int *)(v7 + 64);
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_1A7571BC0();
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    v4(a1, v3);
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
    v4(a1 + *(int *)(v5 + 48), v3);
    uint64_t v6 = *(int *)(v5 + 64);
  }
  uint64_t v10 = a1 + v6;
  uint64_t v11 = sub_1A7571B60();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);

  return v12(v10, v11);
}

void *_s14descr1EFC8D8B9O32GroceryAutoCategorizationMessageOwcp(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78) + 48);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_1A7571B60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
      uint64_t v6 = *(int *)(v5 + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1A7571BC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      uint64_t v10 = *(int *)(v5 + 64);
    }
    else
    {
      uint64_t v18 = sub_1A7571BC0();
      uint64_t v19 = *(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16);
      v19(a1, a2, v18);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
      v19((void *)((char *)a1 + *(int *)(v20 + 48)), (void *)((char *)a2 + *(int *)(v20 + 48)), v18);
      uint64_t v10 = *(int *)(v20 + 64);
    }
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1A7571B60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *_s14descr1EFC8D8B9O32GroceryAutoCategorizationMessageOwca(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1A744F7A8((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78) + 48);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_1A7571B60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
        uint64_t v6 = *(int *)(v5 + 48);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_1A7571BC0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        uint64_t v10 = *(int *)(v5 + 64);
      }
      else
      {
        uint64_t v18 = sub_1A7571BC0();
        uint64_t v19 = *(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16);
        v19(a1, a2, v18);
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
        v19((void *)((char *)a1 + *(int *)(v20 + 48)), (void *)((char *)a2 + *(int *)(v20 + 48)), v18);
        uint64_t v10 = *(int *)(v20 + 64);
      }
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_1A7571B60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s14descr1EFC8D8B9O32GroceryAutoCategorizationMessageOwtk(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78) + 48);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_1A7571B60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
      uint64_t v6 = *(int *)(v5 + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1A7571BC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      uint64_t v10 = *(int *)(v5 + 64);
    }
    else
    {
      uint64_t v18 = sub_1A7571BC0();
      uint64_t v19 = *(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32);
      v19(a1, a2, v18);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
      v19((void *)((char *)a1 + *(int *)(v20 + 48)), (void *)((char *)a2 + *(int *)(v20 + 48)), v18);
      uint64_t v10 = *(int *)(v20 + 64);
    }
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1A7571B60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *_s14descr1EFC8D8B9O32GroceryAutoCategorizationMessageOwta(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1A744F7A8((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A78) + 48);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_1A7571B60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A88);
        uint64_t v6 = *(int *)(v5 + 48);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_1A7571BC0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        uint64_t v10 = *(int *)(v5 + 64);
      }
      else
      {
        uint64_t v18 = sub_1A7571BC0();
        uint64_t v19 = *(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32);
        v19(a1, a2, v18);
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F3A90);
        v19((void *)((char *)a1 + *(int *)(v20 + 48)), (void *)((char *)a2 + *(int *)(v20 + 48)), v18);
        uint64_t v10 = *(int *)(v20 + 64);
      }
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_1A7571B60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A7451564()
{
  uint64_t result = sub_1A7571BC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1A7571B60();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      uint64_t v6 = &v5;
      swift_getTupleTypeLayout3();
      uint64_t v7 = &v4;
      swift_getTupleTypeLayout2();
      uint64_t v8 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *_s14descr1EFC8D8B9O32GroceryAutoCategorizationMessageO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A745175CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr1EFC8D8B9O32GroceryAutoCategorizationMessageO10CodingKeysOMa()
{
  return &_s14descr1EFC8D8B9O32GroceryAutoCategorizationMessageO10CodingKeysON;
}

unint64_t sub_1A7451798()
{
  unint64_t result = qword_1E96F3AB8;
  if (!qword_1E96F3AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3AB8);
  }
  return result;
}

unint64_t sub_1A74517F0()
{
  unint64_t result = qword_1E96F3AC0;
  if (!qword_1E96F3AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3AC0);
  }
  return result;
}

unint64_t sub_1A7451848()
{
  unint64_t result = qword_1E96F3AC8;
  if (!qword_1E96F3AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3AC8);
  }
  return result;
}

uint64_t sub_1A745189C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001A75A32C0 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEA00000000004449 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6974636573 && a2 == 0xE900000000000044 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEE00746E756F4373 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7441646575657571 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

char *REMSmartListCustomContext.filter.getter()
{
  id v1 = objc_msgSend(v0, sel_smartlist);
  id v2 = objc_msgSend(v1, sel_filterData);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1A7571A20();
  unint64_t v5 = v4;

  id v6 = objc_msgSend(v0, sel_smartlist);
  id v7 = objc_msgSend(v6, sel_minimumSupportedVersion);

  BOOL v9 = v7 != (id)*MEMORY[0x1E4F95118] && v7 == (id)*MEMORY[0x1E4F95108];
  BOOL v11 = v9;
  return sub_1A73B9D80(v3, v5, (unsigned __int8 *)&v11);
}

void *sub_1A7451BE8()
{
  uint64_t v1 = sub_1A7571860();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = v0;
  sub_1A7572FA0();

  sub_1A74535C0();
  sub_1A7573230();
  uint64_t v14 = v2;
  id v6 = (void *)MEMORY[0x1E4FBC860];
  while (v20)
  {
    sub_1A72BEE44(&v19, v18);
    sub_1A72BEE98((uint64_t)v18, (uint64_t)v15);
    if (swift_dynamicCast())
    {
      uint64_t v7 = v16;
      uint64_t v8 = v17;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      if (v8)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v6 = sub_1A72AC148(0, v6[2] + 1, 1, v6);
        }
        unint64_t v10 = v6[2];
        unint64_t v9 = v6[3];
        if (v10 >= v9 >> 1) {
          id v6 = sub_1A72AC148((void *)(v9 > 1), v10 + 1, 1, v6);
        }
        id v6[2] = v10 + 1;
        BOOL v11 = &v6[2 * v10];
        v11[4] = v7;
        _OWORD v11[5] = v8;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
    sub_1A7573230();
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v1);
  return v6;
}

uint64_t sub_1A7451DF4()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F3AD8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F3AD8);
  if (qword_1EB704BF8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F68);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> REMAccount.isConsideredEmpty()()
{
  return sub_1A7451F6C((SEL *)&selRef_isConsideredEmptyWithResultPtr_withError_) & 1;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> REMAccount.mcisManaged()()
{
  return sub_1A7451F6C((SEL *)&selRef_MCIsManagedWithResultPtr_error_) & 1;
}

uint64_t sub_1A7451F6C(SEL *a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  char v6 = 0;
  id v5 = 0;
  if (objc_msgSend(v1, *a1, &v6, &v5))
  {
    LOBYTE(v2) = v6;
    id v3 = v5;
  }
  else
  {
    id v2 = v5;
    sub_1A7571850();

    swift_willThrow();
  }
  return v2 & 1;
}

void *REMAccount.mergeableOrderingNodeIdentifiers()()
{
  id v1 = objc_msgSend(v0, sel_listIDsOrdering);
  id v2 = sub_1A7451BE8();

  return v2;
}

uint64_t REMAccount.mergeableOrderingNodeObjectIDs(entityName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = MEMORY[0x1E4FBC860];
  id v6 = objc_msgSend(v2, sel_listIDsMergeableOrdering);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v5;
  v7[3] = a1;
  void v7[4] = a2;
  v11[4] = sub_1A7452608;
  _OWORD v11[5] = v7;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  void v11[2] = sub_1A7452614;
  _DWORD v11[3] = &block_descriptor_10;
  uint64_t v8 = _Block_copy(v11);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v6, sel_enumerateObjectsUsingBlock_, v8);
  _Block_release(v8);

  swift_beginAccess();
  uint64_t v9 = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v9;
}

uint64_t sub_1A74521D4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1A745220C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A7571BC0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A7571B70();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A72EF338((uint64_t)v8);
    if (qword_1E96F0858 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1A7571E90();
    __swift_project_value_buffer(v13, (uint64_t)qword_1E96F3AD8);
    id v14 = a1;
    uint64_t v15 = sub_1A7571E80();
    os_log_type_t v16 = sub_1A7572FE0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138543362;
      v25[1] = v14;
      id v19 = v14;
      sub_1A7573250();
      *uint64_t v18 = a1;

      _os_log_impl(&dword_1A72A1000, v15, v16, "Invalid UUID found in listIDsMergeableOrdering when converting to REMObjectID {uuidString: %{public}@}", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v18, -1, -1);
      MEMORY[0x1AD0CD330](v17, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    uint64_t v20 = (void *)(a4 + 16);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    id v21 = objc_allocWithZone(MEMORY[0x1E4F94BB8]);
    swift_bridgeObjectRetain();
    uint64_t v22 = (void *)sub_1A7571B90();
    uint64_t v23 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_initWithUUID_entityName_, v22, v23);

    uint64_t v24 = swift_beginAccess();
    MEMORY[0x1AD0CABF0](v24);
    if (*(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1A7572A60();
    }
    sub_1A7572AB0();
    sub_1A7572A30();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_1A74525C8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1A7452608(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1A745220C(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_1A7452614(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t REMAccountType.asInt16.getter(uint64_t a1)
{
  uint64_t v1 = 0x7FFFLL;
  if (a1 < 0x7FFF) {
    uint64_t v1 = a1;
  }
  if (v1 <= -32768) {
    return -32768;
  }
  else {
    return v1;
  }
}

uint64_t REMAccountType.loggableDescription.getter(uint64_t a1)
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94A68]), sel_initWithType_, a1);
  id v2 = objc_msgSend(v1, sel_internalDescription);

  uint64_t v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  return v3;
}

BOOL static REMAccountTypeHost.REMAccountTypeSwitchError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t REMAccountTypeHost.REMAccountTypeSwitchError.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t REMAccountTypeHost.REMAccountTypeSwitchError.hashValue.getter()
{
  return sub_1A7574110();
}

id REMAccountTypeHost.switchByAccountType<A>(primaryCloudKitBlock:nonPrimaryCloudKitBlock:calDavBlock:exchangeBlock:localBlock:localInternalBlock:anyCloudKitBlock:anyCloudAccountBlock:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, void (*a10)(void), uint64_t a11, void (*a12)(void), uint64_t a13, void (*a14)(uint64_t), uint64_t a15, void (*a16)(uint64_t), uint64_t a17, uint64_t a18)
{
  uint64_t v96 = a6;
  uint64_t v97 = a8;
  id v94 = a5;
  uint64_t v95 = a7;
  uint64_t v100 = a4;
  uint64_t v98 = a3;
  uint64_t v89 = a1;
  uint64_t v90 = a2;
  uint64_t v19 = sub_1A7573210();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v105 = v19;
  uint64_t v106 = v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v102 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v101 = (char *)&v88 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  unint64_t v93 = (char *)&v88 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v88 - v28;
  uint64_t v30 = MEMORY[0x1F4188790](v27);
  uint64_t v92 = (char *)&v88 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v34 = (char *)&v88 - v33;
  uint64_t v35 = MEMORY[0x1F4188790](v32);
  uint64_t v99 = (char *)&v88 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v91 = (char *)&v88 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  char v41 = (char *)&v88 - v40;
  uint64_t v42 = MEMORY[0x1F4188790](v39);
  int v88 = (char *)&v88 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  uint64_t v46 = (char *)&v88 - v45;
  MEMORY[0x1F4188790](v44);
  uint64_t v48 = (char *)&v88 - v47;
  uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a18 - 8) + 56);
  uint64_t v104 = a9;
  v49(a9, 1, 1, a18);
  id result = objc_msgSend(v107, sel__accountType);
  uint64_t v51 = a16;
  uint64_t v52 = a14;
  switch((unint64_t)result)
  {
    case 0uLL:
      sub_1A7453168();
      swift_allocError();
      *uint64_t v53 = 0;
      goto LABEL_4;
    case 1uLL:
      uint64_t v55 = a10;
      if (a10)
      {
        uint64_t v56 = v101;
        goto LABEL_18;
      }
      uint64_t v65 = v105;
      uint64_t v60 = v106;
      uint64_t v61 = v104;
      (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
      uint64_t v56 = v101;
      goto LABEL_37;
    case 2uLL:
      if (a16)
      {
        uint64_t v107 = a14;
        uint64_t v57 = swift_retain();
        uint64_t v58 = v103;
        a16(v57);
        uint64_t v59 = v58;
        uint64_t v60 = v106;
        uint64_t v61 = v104;
        if (v58)
        {
          (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
          return (id)sub_1A72AE0F8((uint64_t)v51);
        }
        uint64_t v83 = v105;
        (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
        sub_1A72AE0F8((uint64_t)a16);
        uint64_t v84 = v48;
        uint64_t v65 = v83;
        id result = (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v61, v84, v83);
        uint64_t v52 = v107;
        if (!v107) {
          goto LABEL_51;
        }
      }
      else
      {
        uint64_t v59 = v103;
        uint64_t v61 = v104;
        uint64_t v65 = v105;
        uint64_t v60 = v106;
        if (!a14) {
          goto LABEL_51;
        }
      }
      char v81 = v52;
      uint64_t v85 = swift_retain();
      v81(v85);
      if (v59) {
        goto LABEL_40;
      }
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v65);
      sub_1A72AE0F8((uint64_t)v81);
      id result = (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v61, v46, v65);
LABEL_51:
      uint64_t v51 = v89;
      uint64_t v56 = v88;
      if (!v89) {
        return result;
      }
      uint64_t v87 = swift_retain();
      v51(v87);
      if (v59) {
        goto LABEL_53;
      }
      goto LABEL_56;
    case 3uLL:
      if (a16)
      {
        uint64_t v62 = swift_retain();
        uint64_t v63 = v103;
        a16(v62);
        uint64_t v64 = v63;
        uint64_t v65 = v105;
        uint64_t v60 = v106;
        if (v63)
        {
LABEL_31:
          char v78 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
          uint64_t v79 = v104;
          goto LABEL_54;
        }
        uint64_t v66 = v104;
        (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
        sub_1A72AE0F8((uint64_t)a16);
        id result = (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v66, v34, v65);
      }
      else
      {
        uint64_t v64 = v103;
        uint64_t v65 = v105;
        uint64_t v60 = v106;
      }
      uint64_t v51 = v94;
      uint64_t v56 = v92;
      if (!v94) {
        return result;
      }
      uint64_t v77 = swift_retain();
      v51(v77);
      if (v64) {
        goto LABEL_31;
      }
      uint64_t v61 = v104;
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v104, v65);
      goto LABEL_57;
    case 4uLL:
      if (a16)
      {
        uint64_t v67 = swift_retain();
        uint64_t v68 = v103;
        a16(v67);
        uint64_t v69 = v68;
        uint64_t v61 = v104;
        uint64_t v65 = v105;
        if (v68)
        {
LABEL_35:
          (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v61, v65);
          return (id)sub_1A72AE0F8((uint64_t)v51);
        }
        uint64_t v70 = v106;
        (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
        sub_1A72AE0F8((uint64_t)a16);
        id result = (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v70 + 32))(v61, v29, v65);
      }
      else
      {
        uint64_t v69 = v103;
        uint64_t v61 = v104;
        uint64_t v65 = v105;
      }
      uint64_t v51 = v95;
      uint64_t v56 = v93;
      if (!v95) {
        return result;
      }
      uint64_t v80 = swift_retain();
      v51(v80);
      if (v69) {
        goto LABEL_35;
      }
      uint64_t v60 = v106;
LABEL_56:
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v65);
LABEL_57:
      sub_1A72AE0F8((uint64_t)v51);
      return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v61, v56, v65);
    case 5uLL:
      uint64_t v55 = a12;
      if (a12)
      {
        uint64_t v56 = v102;
LABEL_18:
        uint64_t v71 = v103;
        v55();
        uint64_t v65 = v105;
        uint64_t v60 = v106;
        uint64_t v61 = v104;
        if (v71) {
          return (id)(*(uint64_t (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
        }
        (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
      }
      else
      {
        uint64_t v65 = v105;
        uint64_t v60 = v106;
        uint64_t v61 = v104;
        (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
        uint64_t v56 = v102;
LABEL_37:
        v49((uint64_t)v56, 1, 1, a18);
      }
      return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v61, v56, v65);
    case 6uLL:
      if (!a16)
      {
        uint64_t v74 = v103;
        uint64_t v61 = v104;
        uint64_t v65 = v105;
        uint64_t v60 = v106;
        uint64_t v75 = v99;
        uint64_t v51 = v98;
        char v76 = v91;
        if (!a14) {
          goto LABEL_47;
        }
        goto LABEL_39;
      }
      uint64_t v72 = swift_retain();
      uint64_t v73 = v103;
      a16(v72);
      uint64_t v74 = v73;
      uint64_t v65 = v105;
      uint64_t v60 = v106;
      uint64_t v61 = v104;
      if (v73) {
        goto LABEL_53;
      }
      (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
      sub_1A72AE0F8((uint64_t)a16);
      id result = (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v61, v41, v65);
      uint64_t v75 = v99;
      uint64_t v51 = v98;
      uint64_t v52 = a14;
      char v76 = v91;
      if (a14)
      {
LABEL_39:
        char v81 = v52;
        uint64_t v82 = swift_retain();
        v81(v82);
        if (v74)
        {
LABEL_40:
          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v65);
          return (id)sub_1A72AE0F8((uint64_t)v81);
        }
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v65);
        sub_1A72AE0F8((uint64_t)v81);
        id result = (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v61, v76, v65);
        uint64_t v75 = v99;
      }
LABEL_47:
      if (!v51) {
        return result;
      }
      uint64_t v86 = swift_retain();
      v51(v86);
      if (!v74)
      {
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v65);
        sub_1A72AE0F8((uint64_t)v51);
        uint64_t v56 = v75;
        return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v61, v56, v65);
      }
LABEL_53:
      char v78 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
      uint64_t v79 = v61;
LABEL_54:
      v78(v79, v65);
      return (id)sub_1A72AE0F8((uint64_t)v51);
    default:
      sub_1A7453168();
      swift_allocError();
      *uint64_t v54 = 1;
LABEL_4:
      swift_willThrow();
      return (id)(*(uint64_t (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
  }
}

unint64_t sub_1A7453168()
{
  unint64_t result = qword_1E96F3AF0;
  if (!qword_1E96F3AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3AF0);
  }
  return result;
}

void static REMAccountTypeHost.enumerateAccountTypeHostsAndAccountCapabilities(_:)(void (*a1)(id, id))
{
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  for (uint64_t i = 1; i != 7; ++i)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_1A72ACF90(0, v3[2] + 1, 1, v3);
    }
    unint64_t v6 = v3[2];
    unint64_t v5 = v3[3];
    if (v6 >= v5 >> 1) {
      uint64_t v3 = sub_1A72ACF90((void *)(v5 > 1), v6 + 1, 1, v3);
    }
    v3[2] = v6 + 1;
    v3[v6 + 4] = i;
  }
  uint64_t v7 = v3[2];
  if (v7)
  {
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = v3[v8 + 4];
      id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94A68]), sel_initWithType_, v9);
      id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94A50]), sel_initWithAccountType_, v9);
      a1(v10, v11);
      if (v1) {
        break;
      }
      ++v8;

      if (v7 == v8) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
  }
}

void *sub_1A7453330@<X0>(void *a1@<X8>)
{
  unint64_t result = _sSo14REMAccountTypeV19ReminderKitInternalE8allCasesSayABGvgZ_0();
  *a1 = result;
  return result;
}

void *_sSo14REMAccountTypeV19ReminderKitInternalE8allCasesSayABGvgZ_0()
{
  uint64_t v0 = (void *)MEMORY[0x1E4FBC860];
  for (uint64_t i = 1; i != 7; ++i)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v0 = sub_1A72ACF90(0, v0[2] + 1, 1, v0);
    }
    unint64_t v3 = v0[2];
    unint64_t v2 = v0[3];
    if (v3 >= v2 >> 1) {
      uint64_t v0 = sub_1A72ACF90((void *)(v2 > 1), v3 + 1, 1, v0);
    }
    v0[2] = v3 + 1;
    v0[v3 + 4] = i;
  }
  return v0;
}

unint64_t sub_1A7453408()
{
  unint64_t result = qword_1E96F3AF8;
  if (!qword_1E96F3AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3AF8);
  }
  return result;
}

unint64_t sub_1A7453460()
{
  unint64_t result = qword_1E96F3B00;
  if (!qword_1E96F3B00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F3B08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3B00);
  }
  return result;
}

unsigned char *_s25REMAccountTypeSwitchErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7453588);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMAccountTypeHost.REMAccountTypeSwitchError()
{
  return &type metadata for REMAccountTypeHost.REMAccountTypeSwitchError;
}

unint64_t sub_1A74535C0()
{
  unint64_t result = qword_1E96F2C88;
  if (!qword_1E96F2C88)
  {
    sub_1A7571860();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F2C88);
  }
  return result;
}

unint64_t measureTimeElapsed(_:level:block:)(uint64_t a1, unint64_t a2, int a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v51 = a5;
  uint64_t v49 = a1;
  uint64_t v10 = sub_1A7572290();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v50 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v44 - v14;
  if (qword_1EB7057B0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1A7571E90();
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1EB704C08);
  swift_bridgeObjectRetain_n();
  uint64_t v47 = v17;
  uint64_t v18 = sub_1A7571E80();
  os_log_type_t v19 = a3;
  if (os_log_type_enabled(v18, (os_log_type_t)a3))
  {
    uint64_t v48 = v15;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v44 = a4;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v45 = v5;
    uint64_t v23 = v22;
    uint64_t v53 = v22;
    int v46 = a3;
    *(_DWORD *)uint64_t v21 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1A72D1730(v49, a2, &v53);
    uint64_t v15 = v48;
    LOBYTE(a3) = v46;
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A72A1000, v18, v19, "START %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v24 = v23;
    uint64_t v6 = v45;
    MEMORY[0x1AD0CD330](v24, -1, -1);
    uint64_t v25 = v21;
    a4 = v44;
    MEMORY[0x1AD0CD330](v25, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v26 = sub_1A7572280();
  a4(v26);
  if (v6) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  }
  sub_1A7572280();
  unint64_t v28 = sub_1A7572270();
  if (v28 >= sub_1A7572270())
  {
    unint64_t v35 = sub_1A7572270();
    uint64_t v48 = v15;
    unint64_t result = sub_1A7572270();
    if (v35 < result)
    {
      __break(1u);
    }
    else
    {
      double v36 = (double)(v35 - result) / 1000000.0;
      swift_bridgeObjectRetain_n();
      uint64_t v37 = sub_1A7571E80();
      if (os_log_type_enabled(v37, (os_log_type_t)a3))
      {
        uint64_t v38 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        uint64_t v51 = v10;
        uint64_t v40 = v39;
        uint64_t v53 = v39;
        *(_DWORD *)uint64_t v38 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_1A72D1730(v49, a2, &v53);
        sub_1A7573250();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v38 + 12) = 2048;
        uint64_t v52 = *(void *)&v36;
        sub_1A7573250();
        _os_log_impl(&dword_1A72A1000, v37, (os_log_type_t)a3, "END %{public}s, {elapsed: %f ms}", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v40, -1, -1);
        MEMORY[0x1AD0CD330](v38, -1, -1);

        char v41 = *(void (**)(char *, uint64_t))(v11 + 8);
        uint64_t v42 = v51;
        v41(v50, v51);
        return ((uint64_t (*)(char *, uint64_t))v41)(v48, v42);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        uint64_t v43 = *(void (**)(char *, uint64_t))(v11 + 8);
        v43(v50, v10);
        return ((uint64_t (*)(char *, uint64_t))v43)(v48, v10);
      }
    }
  }
  else
  {
    uint64_t v51 = v10;
    swift_bridgeObjectRetain_n();
    uint64_t v29 = sub_1A7571E80();
    if (os_log_type_enabled(v29, (os_log_type_t)a3))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v53 = v31;
      uint64_t v48 = v15;
      *(_DWORD *)uint64_t v30 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1A72D1730(v49, a2, &v53);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A72A1000, v29, (os_log_type_t)a3, "END %{public}s, {elapsed: UNDEFINED ms}", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v31, -1, -1);
      MEMORY[0x1AD0CD330](v30, -1, -1);

      uint64_t v32 = *(void (**)(char *, uint64_t))(v11 + 8);
      uint64_t v33 = v51;
      v32(v50, v51);
      uint64_t v34 = v48;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v32 = *(void (**)(char *, uint64_t))(v11 + 8);
      uint64_t v33 = v51;
      v32(v50, v51);
      uint64_t v34 = v15;
    }
    return ((uint64_t (*)(char *, uint64_t))v32)(v34, v33);
  }
  return result;
}

uint64_t sub_1A7453C3C()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1EB704C08);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB704C08);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

double Date.rem_elapsedInMilliseconds.getter()
{
  uint64_t v0 = sub_1A7571B60();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571B50();
  sub_1A7571A90();
  double v5 = v4;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5 * 1000.0;
}

uint64_t sub_1A7453DEC()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F3B10);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F3B10);
  if (qword_1EB704BF8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F68);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t REMStore.asyncFetch<A>(on:body:)()
{
  return Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A74541E0);
}

uint64_t sub_1A7453F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v26 = a6;
  uint64_t v27 = a3;
  uint64_t v29 = a5;
  uint64_t v25 = a1;
  uint64_t v13 = sub_1A7572210();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1A7572260();
  uint64_t v17 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  os_log_type_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = v26;
  void v20[2] = a9;
  v20[3] = v21;
  v20[4] = a7;
  v20[5] = a8;
  v20[6] = v25;
  v20[7] = a2;
  v20[8] = v27;
  v20[9] = a4;
  aBlock[4] = sub_1A745B32C;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A73322E4;
  aBlock[3] = &block_descriptor_176;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  id v23 = a8;
  swift_retain();
  swift_retain();
  sub_1A7572240();
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1A732938C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
  sub_1A73293E4();
  sub_1A7573380();
  MEMORY[0x1AD0CB2C0](0, v19, v16, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v28);
  return swift_release();
}

uint64_t sub_1A74541E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A7453F34(a1, a2, a3, a4, *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void **)(v4 + 48), *(void *)(v4 + 16));
}

uint64_t sub_1A7454210(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = *(void *)(a8 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14(v13);
  a4(v12);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, a8);
}

id REMStore.fetchOrCreateNonCustomSmartList(withType:)(char *a1)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = *a1;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94CB0]), sel_initWithStore_, v1);
  uint64_t v4 = **((void **)&unk_1E5CC9400 + v2);
  v9[0] = 0;
  id v5 = objc_msgSend(v3, sel_fetchNonCustomSmartListWithSmartListType_createIfNeeded_error_, v4, 1, v9);
  if (v5)
  {
    id v6 = v9[0];
  }
  else
  {
    id v7 = v9[0];
    sub_1A7571850();

    swift_willThrow();
  }

  return v5;
}

id REMStore.fetchNonCustomSmartList(withType:)(char *a1)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = *a1;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94CB0]), sel_initWithStore_, v1);
  uint64_t v4 = **((void **)&unk_1E5CC9400 + v2);
  v9[0] = 0;
  id v5 = objc_msgSend(v3, sel_fetchNonCustomSmartListWithSmartListType_createIfNeeded_error_, v4, 0, v9);
  if (v5)
  {
    id v6 = v9[0];
  }
  else
  {
    id v7 = v9[0];
    sub_1A7571850();

    swift_willThrow();
  }

  return v5;
}

void REMStore.fetchContentAttributes(of:completionHandlerQueue:completion:)(void *a1, uint64_t a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  id v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  id v10 = objc_msgSend(v5, sel_daemonController);
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = objc_msgSend(a1, sel_objectID);
    uint64_t v13 = (void *)swift_allocObject();
    void v13[2] = v12;
    v13[3] = a3;
    v13[4] = a4;
    v13[5] = ObjectType;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a3;
    *(void *)(v14 + 24) = a4;
    swift_retain_n();
    id v15 = v12;
    uint64_t v16 = (void *)sub_1A75725E0();
    uint64_t v27 = sub_1A7454938;
    uint64_t v28 = v13;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_1A7454CC4;
    uint64_t v26 = &block_descriptor_11;
    uint64_t v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v27 = sub_1A745B448;
    uint64_t v28 = (void *)v14;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_1A7454D24;
    uint64_t v26 = &block_descriptor_6;
    uint64_t v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v16, v17, v18);
    _Block_release(v18);
    _Block_release(v17);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();
  }
  else
  {
    os_log_type_t v19 = self;
    sub_1A72BEFEC(0, (unint64_t *)&unk_1E96F3B28);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v21 = (void *)sub_1A75725E0();
    id v22 = objc_msgSend(v19, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v21);

    a3(v22, 1);
  }
}

void sub_1A745482C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v10 = (void *)swift_allocObject();
  void v10[2] = a2;
  _DWORD v10[3] = a3;
  void v10[4] = a4;
  v10[5] = a5;
  v13[4] = sub_1A745B2D0;
  v13[5] = v10;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  void v13[2] = sub_1A7454CC0;
  v13[3] = &block_descriptor_170;
  uint64_t v11 = _Block_copy(v13);
  id v12 = a2;
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_fetchContentAttributesOfTemplateWithObjectID_completion_, v12, v11);
  _Block_release(v11);
}

uint64_t sub_1A7454930()
{
  return objectdestroyTm_1();
}

void sub_1A7454938(void *a1)
{
  sub_1A745482C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_1A7454944(void *a1, id a2, void *a3, void (*a4)(id, uint64_t), uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    uint64_t v8 = 1;
    id v9 = a2;
  }
  else
  {
    id v9 = a1;
    if (a1)
    {
      id v10 = a1;
      uint64_t v8 = 0;
    }
    else
    {
      if (qword_1E96F0868 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_1A7571E90();
      __swift_project_value_buffer(v13, (uint64_t)qword_1E96F3B10);
      id v14 = a3;
      id v15 = sub_1A7571E80();
      os_log_type_t v16 = sub_1A7572FE0();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v25 = (void *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        uint64_t v27 = v26;
        *(_DWORD *)uint64_t v17 = 136315394;
        uint64_t v28 = a6;
        swift_getMetatypeMetadata();
        uint64_t v18 = sub_1A7572670();
        uint64_t v28 = sub_1A72D1730(v18, v19, &v27);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2112;
        uint64_t v28 = (uint64_t)v14;
        id v20 = v14;
        sub_1A7573250();
        *uint64_t v25 = v14;

        _os_log_impl(&dword_1A72A1000, v15, v16, "%s: 'templateContentAttributes' and 'error' in completion of '-[REMXPCStorePerformer fetchContentAttributesOfTemplateWithObjectID:completion:]' were both nil {remTemplate.objectID: %@}", (uint8_t *)v17, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v25, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v26, -1, -1);
        MEMORY[0x1AD0CD330](v17, -1, -1);
      }
      else
      {
      }
      uint64_t v21 = self;
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
      sub_1A7573560();
      sub_1A7572740();
      id v22 = objc_msgSend(v14, sel_description);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      id v23 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      id v9 = objc_msgSend(v21, sel_internalErrorWithDebugDescription_, v23);

      uint64_t v8 = 1;
    }
  }
  id v24 = a2;
  a4(v9, v8);
  sub_1A7413730(v9);
}

uint64_t sub_1A7454CC4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_1A7454D24(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}