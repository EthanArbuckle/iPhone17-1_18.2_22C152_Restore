unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *result = *a2;
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)result = v2;
  return result;
}

uint64_t objectdestroy_81Tm()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v1 = sub_1A7572BC0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t objectdestroy_24Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = sub_1A7571500();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t __swift_memcpy6_1(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)__n128 result = v2;
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t objectdestroy_93Tm()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm(void (*a1)(void, void))
{
  swift_release();
  swift_release();
  a1(*(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));

  return swift_deallocObject();
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

void sub_1A72A4410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void rdi_os_crash()
{
}

void sub_1A72A567C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

std::mersenne_twister_engine<unsigned long long, 64, 312, 156, 31, 13043109905998158313, 29, 6148914691236517205, 17, 8202884508482404352, 37, 18444473444759240704, 43, 6364136223846793005>::result_type std::mersenne_twister_engine<unsigned long long,64ul,312ul,156ul,31ul,13043109905998158313ull,29ul,6148914691236517205ull,17ul,8202884508482404352ull,37ul,18444473444759240704ull,43ul,6364136223846793005ull>::operator()(std::mersenne_twister_engine<unsigned long long, 64, 312, 156, 31, 13043109905998158313, 29, 6148914691236517205, 17, 8202884508482404352, 37, 18444473444759240704, 43, 6364136223846793005> *this)
{
  size_t i = this->__i_;
  size_t v2 = (i + 1) % 0x138;
  std::mersenne_twister_engine<unsigned long long, 64, 312, 156, 31, 13043109905998158313, 29, 6148914691236517205, 17, 8202884508482404352, 37, 18444473444759240704, 43, 6364136223846793005>::result_type v3 = this->__x_[(i + 156) % 0x138] ^ ((this->__x_[v2] & 0x7FFFFFFE | this->__x_[i] & 0xFFFFFFFF80000000) >> 1) ^ ((uint64_t)(this->__x_[v2] << 63) >> 63) & 0xB5026F5AA96619E9;
  this->__x_[i] = v3;
  this->__i_ = v2;
  uint64_t v4 = (((v3 >> 29) & 0x5555555555555555 ^ v3) << 17) & 0x71D67FFFEDA60000 ^ (v3 >> 29) & 0x5555555555555555 ^ v3;
  return (v4 << 37) & 0xFFF7EEE000000000 ^ v4 ^ (((v4 << 37) & 0xFFF7EEE000000000 ^ v4) >> 43);
}

void sub_1A72A6AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

id soft_getCTGreenTeaOsLogHandle(uint64_t a1)
{
  uint64_t v7 = 0;
  v8 = &v7;
  uint64_t v9 = 0x2020000000;
  size_t v2 = (void (*)(uint64_t))getgetCTGreenTeaOsLogHandleSymbolLoc_ptr;
  v10 = getgetCTGreenTeaOsLogHandleSymbolLoc_ptr;
  if (!getgetCTGreenTeaOsLogHandleSymbolLoc_ptr)
  {
    std::mersenne_twister_engine<unsigned long long, 64, 312, 156, 31, 13043109905998158313, 29, 6148914691236517205, 17, 8202884508482404352, 37, 18444473444759240704, 43, 6364136223846793005>::result_type v3 = (void *)libCTGreenTeaLoggerLibrary();
    v8[3] = (uint64_t)dlsym(v3, "getCTGreenTeaOsLogHandle");
    getgetCTGreenTeaOsLogHandleSymbolLoc_ptr = (_UNKNOWN *)v8[3];
    size_t v2 = (void (*)(uint64_t))v8[3];
  }
  _Block_object_dispose(&v7, 8);
  if (!v2)
  {
    long long v6 = (_Unwind_Exception *)-[REMRegulatoryLogger init]();
    _Block_object_dispose(&v7, 8);
    _Unwind_Resume(v6);
  }
  uint64_t v4 = v2(a1);

  return v4;
}

void *__getct_green_tea_logger_createSymbolLoc_block_invoke(uint64_t a1)
{
  size_t v2 = (void *)libCTGreenTeaLoggerLibrary();
  __n128 result = dlsym(v2, "ct_green_tea_logger_create");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getct_green_tea_logger_createSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t libCTGreenTeaLoggerLibrary()
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v0 = libCTGreenTeaLoggerLibraryCore_frameworkLibrary;
  uint64_t v9 = libCTGreenTeaLoggerLibraryCore_frameworkLibrary;
  if (!libCTGreenTeaLoggerLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __libCTGreenTeaLoggerLibraryCore_block_invoke;
    v3[4] = &unk_1E5CC8D88;
    uint64_t v4 = &v6;
    long long v5 = v3;
    long long v10 = xmmword_1E5CC8D68;
    uint64_t v11 = 0;
    v7[3] = _sl_dlopen();
    libCTGreenTeaLoggerLibraryCore_frameworkLibrary = *(void *)(v4[1] + 24);
    uint64_t v0 = v7[3];
  }
  _Block_object_dispose(&v6, 8);
  uint64_t v1 = v3[0];
  if (!v0)
  {
    uint64_t v1 = (void *)abort_report_np();
    __break(1u);
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void sub_1A72A74A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __libCTGreenTeaLoggerLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  libCTGreenTeaLoggerLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getgetCTGreenTeaOsLogHandleSymbolLoc_block_invoke(uint64_t a1)
{
  size_t v2 = (void *)libCTGreenTeaLoggerLibrary();
  uint64_t result = dlsym(v2, "getCTGreenTeaOsLogHandle");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getgetCTGreenTeaOsLogHandleSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

uint64_t REMSuggestedAttributesAccuracy.correctSample.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesAccuracy.incorrectSample.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesAccuracy.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = *(void *)(v1 + 72);
  uint64_t v9 = *(void *)(v1 + 80);
  uint64_t v10 = *(void *)(v1 + 88);
  uint64_t v11 = *(void *)(v1 + 96);
  uint64_t v12 = *(void *)(v1 + 120);
  uint64_t v13 = *(void *)(v1 + 128);
  *(void *)a1 = *(void *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(v1 + 104);
  *(void *)(a1 + 104) = v12;
  *(void *)(a1 + 112) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesAccuracy.droppingSensitiveFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v8 = *(void *)(v1 + 72);
  uint64_t v11 = *(void *)(v1 + 80);
  uint64_t v10 = *(void *)(v1 + 88);
  uint64_t v12 = *(void *)(v1 + 96);
  uint64_t v13 = *(void *)(v1 + 120);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t v15 = *(void *)(v1 + 128);
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = v14;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v12;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(v1 + 104);
  *(void *)(a1 + 120) = v13;
  *(void *)(a1 + 128) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void __swiftcall REMSuggestedAttributesAccuracy.init(correctSample:incorrectSample:metrics:)(ReminderKitInternal::REMSuggestedAttributesAccuracy *__return_ptr retstr, Swift::OpaquePointer correctSample, Swift::OpaquePointer incorrectSample, ReminderKitInternal::MultiClassificationMetric *metrics)
{
  rawValue = metrics->typeIIErrors._rawValue;
  Swift::Double recall = metrics->recall;
  uint64_t v6 = metrics->indexedClasses._rawValue;
  retstr->correctSample = correctSample;
  retstr->incorrectSample = incorrectSample;
  long long v7 = *(_OWORD *)&metrics->confusionMatrix._rawValue;
  *(_OWORD *)&retstr->metrics.correctIndices._rawValue = *(_OWORD *)&metrics->correctIndices._rawValue;
  *(_OWORD *)&retstr->metrics.confusionMatrix._rawValue = v7;
  long long v8 = *(_OWORD *)&metrics->falseNegatives._rawValue;
  *(_OWORD *)&retstr->metrics.trueNegatives._rawValue = *(_OWORD *)&metrics->trueNegatives._rawValue;
  *(_OWORD *)&retstr->metrics.falseNegatives._rawValue = v8;
  *(_OWORD *)&retstr->metrics.recalls._rawValue = *(_OWORD *)&metrics->recalls._rawValue;
  retstr->metrics.typeIIErrors._rawValue = rawValue;
  *(_OWORD *)&retstr->metrics.accuracy = *(_OWORD *)&metrics->accuracy;
  retstr->metrics.Swift::Double recall = recall;
  retstr->metrics.indexedClasses._rawValue = v6;
}

BOOL sub_1A72A782C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO08ListPathE0O13DetailSectionO9hashValueSivg_0()
{
  return sub_1A7574110();
}

uint64_t sub_1A72A7888()
{
  return sub_1A75740D0();
}

uint64_t sub_1A72A78B4()
{
  return sub_1A7574110();
}

uint64_t sub_1A72A78F8()
{
  uint64_t v1 = 0x636572726F636E69;
  if (*v0 != 1) {
    uint64_t v1 = 0x7363697274656DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x5374636572726F63;
  }
}

uint64_t sub_1A72A796C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A72AA32C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A72A7994()
{
  return 0;
}

void sub_1A72A79A0(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1A72A79AC(uint64_t a1)
{
  unint64_t v2 = sub_1A72A7CD4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A72A79E8(uint64_t a1)
{
  unint64_t v2 = sub_1A72A7CD4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSuggestedAttributesAccuracy.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0990);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790]();
  long long v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v22 = v1[1];
  long long v19 = *((_OWORD *)v1 + 1);
  long long v18 = *((_OWORD *)v1 + 2);
  long long v17 = *((_OWORD *)v1 + 3);
  long long v16 = *((_OWORD *)v1 + 4);
  long long v15 = *((_OWORD *)v1 + 5);
  uint64_t v21 = v1[12];
  uint64_t v9 = v1[13];
  uint64_t v10 = v1[14];
  uint64_t v11 = v1[15];
  uint64_t v20 = v1[16];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A72A7CD4();
  sub_1A75741B0();
  *(void *)&long long v23 = v8;
  char v33 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A72A817C(&qword_1EB7003D8);
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v12 = v20;
    uint64_t v13 = v21;
    *(void *)&long long v23 = v22;
    char v33 = 1;
    sub_1A7573B60();
    long long v23 = v19;
    long long v24 = v18;
    long long v25 = v17;
    long long v26 = v16;
    long long v27 = v15;
    uint64_t v28 = v13;
    uint64_t v29 = v9;
    uint64_t v30 = v10;
    uint64_t v31 = v11;
    uint64_t v32 = v12;
    char v33 = 2;
    sub_1A72A7D28();
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A72A7CD4()
{
  unint64_t result = qword_1E96F0998;
  if (!qword_1E96F0998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F0998);
  }
  return result;
}

unint64_t sub_1A72A7D28()
{
  unint64_t result = qword_1E96F09A0;
  if (!qword_1E96F09A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F09A0);
  }
  return result;
}

uint64_t REMSuggestedAttributesAccuracy.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F09A8);
  uint64_t v5 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790]();
  long long v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A72A7CD4();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v30 = a2;
  uint64_t v31 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  LOBYTE(v33) = 0;
  sub_1A72A817C(&qword_1EB700070);
  uint64_t v8 = v32;
  sub_1A7573A50();
  uint64_t v9 = v42[0];
  LOBYTE(v33) = 1;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  uint64_t v10 = v42[0];
  char v52 = 2;
  sub_1A72A81E0();
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v8);
  uint64_t v31 = *((void *)&v53 + 1);
  uint64_t v32 = v53;
  uint64_t v11 = *((void *)&v54 + 1);
  long long v12 = v55;
  uint64_t v28 = v56;
  uint64_t v29 = v54;
  uint64_t v26 = v57;
  uint64_t v27 = *((void *)&v56 + 1);
  uint64_t v24 = v58;
  uint64_t v25 = *((void *)&v57 + 1);
  uint64_t v13 = *((void *)&v58 + 1);
  long long v14 = v59;
  uint64_t v23 = v60;
  uint64_t v15 = v9;
  *(void *)&long long v33 = v9;
  *((void *)&v33 + 1) = v10;
  long long v34 = v53;
  long long v35 = v54;
  long long v36 = v55;
  long long v37 = v56;
  long long v38 = v57;
  long long v39 = v58;
  long long v40 = v59;
  uint64_t v41 = v60;
  sub_1A72A8234((uint64_t)&v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v16 = v40;
  uint64_t v17 = v30;
  *(_OWORD *)(v30 + 96) = v39;
  *(_OWORD *)(v17 + 112) = v16;
  *(void *)(v17 + 128) = v41;
  long long v18 = v36;
  *(_OWORD *)(v17 + 32) = v35;
  *(_OWORD *)(v17 + 48) = v18;
  long long v19 = v38;
  *(_OWORD *)(v17 + 64) = v37;
  *(_OWORD *)(v17 + 80) = v19;
  long long v20 = v34;
  *(_OWORD *)uint64_t v17 = v33;
  *(_OWORD *)(v17 + 16) = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v42[0] = v15;
  v42[1] = v10;
  v42[2] = v32;
  v42[3] = v31;
  v42[4] = v29;
  v42[5] = v11;
  long long v43 = v12;
  uint64_t v44 = v28;
  uint64_t v45 = v27;
  uint64_t v46 = v26;
  uint64_t v47 = v25;
  uint64_t v48 = v24;
  uint64_t v49 = v13;
  long long v50 = v14;
  uint64_t v51 = v23;
  return sub_1A72A8318((uint64_t)v42);
}

uint64_t sub_1A72A817C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB704AC0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A72A81E0()
{
  unint64_t result = qword_1E96F09B8;
  if (!qword_1E96F09B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F09B8);
  }
  return result;
}

uint64_t sub_1A72A8234(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A72A8318(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A72A83FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesAccuracy.init(from:)(a1, a2);
}

uint64_t sub_1A72A8414(void *a1)
{
  return REMSuggestedAttributesAccuracy.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for MultiClassificationMetric(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for REMSuggestedAttributesAccuracy()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMSuggestedAttributesAccuracy(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v8 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMSuggestedAttributesAccuracy(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for REMSuggestedAttributesAccuracy(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesAccuracy(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesAccuracy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesAccuracy()
{
  return &type metadata for REMSuggestedAttributesAccuracy;
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t sub_1A72A8984(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A72A89A4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

void type metadata accessor for os_unfair_recursive_lock_s(uint64_t a1)
{
}

void type metadata accessor for REMManualOrderingListType(uint64_t a1)
{
}

void type metadata accessor for REMShareeStatus(uint64_t a1)
{
}

void type metadata accessor for REMListSharingStatus(uint64_t a1)
{
}

void type metadata accessor for REMAlarmProximity(uint64_t a1)
{
}

void type metadata accessor for REMAlarmVehicleTriggerEvent(uint64_t a1)
{
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1A72A8A58(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A72A8A78(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for _opaque_pthread_mutex_t(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_options_t(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for NLTag(uint64_t a1)
{
}

void type metadata accessor for Options(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for Diff.RemainingIndex(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Diff.RemainingIndex(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for os_activity_scope_state_s(uint64_t a1)
{
}

void type metadata accessor for REMAccountType(uint64_t a1)
{
}

void type metadata accessor for REMSortingStyle(uint64_t a1)
{
}

void type metadata accessor for CLAccuracyAuthorization(uint64_t a1)
{
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for REMSmartListUserDefinedVisibility(uint64_t a1)
{
}

void type metadata accessor for REMRecurrenceFrequency(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for Dataclass(uint64_t a1)
{
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for REMReminderPriorityLevel(uint64_t a1)
{
}

void type metadata accessor for REMSmartListType(uint64_t a1)
{
}

void type metadata accessor for NLTagScheme(uint64_t a1)
{
}

void type metadata accessor for NLLanguage(uint64_t a1)
{
}

void type metadata accessor for REMReminderNextThirdsHour(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesAccuracy.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for REMSuggestedAttributesAccuracy.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A72A8DE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1A72A8E10(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1A72A8E1C(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesAccuracy.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesAccuracy.CodingKeys;
}

unint64_t sub_1A72A8E38()
{
  unint64_t result = qword_1E96F0B50;
  if (!qword_1E96F0B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F0B50);
  }
  return result;
}

uint64_t sub_1A72A8E8C(uint64_t a1, uint64_t a2)
{
  return sub_1A72A9A24(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1A72A8EB0(uint64_t a1, uint64_t a2)
{
  return sub_1A72A9A24(a1, a2, MEMORY[0x1E4FBB198]);
}

void sub_1A72A8ED0(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1A72A8ED8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1A72A8EEC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1A72A8F00@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1A72A8F14(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1A72A8F44@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1A72A8F70@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1A72A8F94(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1A72A8FA8(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_1A72A8FBC(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1A72A8FD0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A72A8FE4(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A72A8FF8(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1A72A900C(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A72A9020()
{
  return *v0 == 0;
}

uint64_t sub_1A72A9030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_1A72A9048(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_1A72A9060@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A72A9098()
{
  return sub_1A75740D0();
}

uint64_t sub_1A72A90C4()
{
  return sub_1A7574110();
}

uint64_t sub_1A72A910C()
{
  return sub_1A7574110();
}

uint64_t sub_1A72A9150(uint64_t a1, id *a2)
{
  uint64_t result = sub_1A75725F0();
  *a2 = 0;
  return result;
}

uint64_t sub_1A72A91C8(uint64_t a1, id *a2)
{
  char v3 = sub_1A7572600();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1A72A9248@<X0>(uint64_t *a1@<X8>)
{
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v2 = sub_1A75725E0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_1A72A928C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A72A92A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1A72AA4CC(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_1A72A92E0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_1A72A92EC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1A72A92FC(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1A72A9308(uint64_t a1)
{
  uint64_t v2 = sub_1A72A9454(&qword_1E96F0CB0, type metadata accessor for NLLanguage);
  uint64_t v3 = sub_1A72A9454(&qword_1E96F0CB8, type metadata accessor for NLLanguage);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A72A93C4()
{
  return sub_1A72A9454(&qword_1E96F0B58, type metadata accessor for NLLanguage);
}

uint64_t sub_1A72A940C()
{
  return sub_1A72A9454(&qword_1E96F0B60, type metadata accessor for NLLanguage);
}

uint64_t sub_1A72A9454(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A72A949C()
{
  return sub_1A72A9454(&qword_1E96F0B68, type metadata accessor for NLLanguage);
}

uint64_t sub_1A72A94E4(uint64_t a1)
{
  uint64_t v2 = sub_1A72A9454(&qword_1E96F0C50, type metadata accessor for NLTag);
  uint64_t v3 = sub_1A72A9454(&qword_1E96F0C58, type metadata accessor for NLTag);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A72A95A0(uint64_t a1)
{
  uint64_t v2 = sub_1A72A9454(&qword_1E96F0CA0, type metadata accessor for NLTagScheme);
  uint64_t v3 = sub_1A72A9454(&qword_1E96F0CA8, type metadata accessor for NLTagScheme);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A72A965C()
{
  return sub_1A72A9454(&qword_1E96F0B70, type metadata accessor for NLTagScheme);
}

uint64_t sub_1A72A96A4()
{
  return sub_1A72A9454(&qword_1E96F0B78, type metadata accessor for NLTagScheme);
}

uint64_t sub_1A72A96EC(uint64_t a1)
{
  uint64_t v2 = sub_1A72A9454(&qword_1E96F0C60, type metadata accessor for REMSortingStyle);
  uint64_t v3 = sub_1A72A9454((unint64_t *)&unk_1E96F0C68, type metadata accessor for REMSortingStyle);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A72A97A8(uint64_t a1)
{
  uint64_t v2 = sub_1A72A9454(&qword_1E96F0C90, type metadata accessor for REMSmartListType);
  uint64_t v3 = sub_1A72A9454(&qword_1E96F0C98, type metadata accessor for REMSmartListType);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A72A9864(uint64_t a1)
{
  uint64_t v2 = sub_1A72A9454(&qword_1E96F0C80, type metadata accessor for Dataclass);
  uint64_t v3 = sub_1A72A9454(&qword_1E96F0C88, type metadata accessor for Dataclass);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A72A9920@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1A75725E0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A72A9968(uint64_t a1)
{
  uint64_t v2 = sub_1A72A9454((unint64_t *)&qword_1EB700120, type metadata accessor for Key);
  uint64_t v3 = sub_1A72A9454(&qword_1E96F0C78, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A72A9A24(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A72A9A68()
{
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A72A9ABC()
{
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A75740C0();
  sub_1A75726F0();
  uint64_t v0 = sub_1A7574110();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A72A9B30()
{
  uint64_t v0 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v2 = v1;
  if (v0 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1A7573DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A72A9BBC()
{
  return sub_1A72A9454(&qword_1E96F0B80, type metadata accessor for NLTagScheme);
}

uint64_t sub_1A72A9C04()
{
  return sub_1A72A9454(&qword_1E96F0B88, type metadata accessor for REMSmartListType);
}

uint64_t sub_1A72A9C4C()
{
  return sub_1A72A9454((unint64_t *)&unk_1E96F0B90, type metadata accessor for REMSmartListType);
}

uint64_t sub_1A72A9C94()
{
  return sub_1A72A9454(&qword_1EB702848, type metadata accessor for REMSmartListType);
}

uint64_t sub_1A72A9CDC()
{
  return sub_1A72A9454(&qword_1E96F0BA0, type metadata accessor for REMReminderPriorityLevel);
}

uint64_t sub_1A72A9D24()
{
  return sub_1A72A9454(&qword_1E96F0BA8, type metadata accessor for Dataclass);
}

uint64_t sub_1A72A9D6C()
{
  return sub_1A72A9454(&qword_1E96F0BB0, type metadata accessor for Dataclass);
}

uint64_t sub_1A72A9DB4()
{
  return sub_1A72A9454(&qword_1E96F0BB8, type metadata accessor for Key);
}

uint64_t sub_1A72A9DFC()
{
  return sub_1A72A9454((unint64_t *)&unk_1E96F0BC0, type metadata accessor for Key);
}

uint64_t sub_1A72A9E44()
{
  return sub_1A72A9454(&qword_1EB700128, type metadata accessor for Key);
}

uint64_t sub_1A72A9E8C()
{
  return sub_1A72A9454(&qword_1E96F0BD0, type metadata accessor for REMRecurrenceFrequency);
}

uint64_t sub_1A72A9ED4()
{
  return sub_1A72A9454(&qword_1E96F0BD8, type metadata accessor for REMSortingStyle);
}

uint64_t sub_1A72A9F1C()
{
  return sub_1A72A9454(&qword_1E96F0BE0, type metadata accessor for REMSortingStyle);
}

uint64_t sub_1A72A9F64()
{
  return sub_1A72A9454(&qword_1E96F0BE8, type metadata accessor for REMSortingStyle);
}

uint64_t sub_1A72A9FAC()
{
  return sub_1A72A9454(&qword_1E96F0BF0, type metadata accessor for Options);
}

uint64_t sub_1A72A9FF4()
{
  return sub_1A72A9454(&qword_1E96F0BF8, type metadata accessor for Options);
}

uint64_t sub_1A72AA03C()
{
  return sub_1A72A9454(&qword_1E96F0C00, type metadata accessor for Options);
}

uint64_t sub_1A72AA084()
{
  return sub_1A72A9454(&qword_1E96F0C08, type metadata accessor for Options);
}

uint64_t sub_1A72AA0CC()
{
  return sub_1A72A9454(&qword_1E96F0C10, type metadata accessor for NLTag);
}

uint64_t sub_1A72AA114()
{
  return sub_1A72A9454(&qword_1E96F0C18, type metadata accessor for NLTag);
}

uint64_t sub_1A72AA15C()
{
  return sub_1A72A9454(&qword_1E96F0C20, type metadata accessor for NLTag);
}

uint64_t sub_1A72AA1A4()
{
  return sub_1A72A9454(&qword_1E96F0C28, type metadata accessor for REMAlarmVehicleTriggerEvent);
}

uint64_t sub_1A72AA1EC()
{
  return sub_1A72A9454(&qword_1E96F0C30, type metadata accessor for REMAlarmProximity);
}

uint64_t sub_1A72AA234()
{
  return sub_1A72A9454(&qword_1E96F0C38, type metadata accessor for Dataclass);
}

unint64_t sub_1A72AA280()
{
  unint64_t result = qword_1E96F0C40;
  if (!qword_1E96F0C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F0C40);
  }
  return result;
}

unint64_t sub_1A72AA2D8()
{
  unint64_t result = qword_1E96F0C48;
  if (!qword_1E96F0C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F0C48);
  }
  return result;
}

uint64_t sub_1A72AA32C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5374636572726F63 && a2 == 0xED0000656C706D61;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636572726F636E69 && a2 == 0xEF656C706D615374 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A72AA4CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void type metadata accessor for REMHashtagType(uint64_t a1)
{
}

void sub_1A72AA518(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t Diff.RemainingIndex.from.getter()
{
  return *(void *)v0;
}

uint64_t Diff.RemainingIndex.from.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*Diff.RemainingIndex.from.modify())()
{
  return nullsub_1;
}

uint64_t Diff.RemainingIndex.to.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t Diff.RemainingIndex.to.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*Diff.RemainingIndex.to.modify())()
{
  return nullsub_1;
}

BOOL static Diff.RemainingIndex.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

BOOL sub_1A72AA600(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

Swift::Int __swiftcall Diff.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t Diff.elements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Diff.elements.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v1 = a1;
  return result;
}

uint64_t (*Diff.elements.modify())()
{
  return nullsub_1;
}

uint64_t Diff.remainingIndexes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Diff.remainingIndexes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Diff.remainingIndexes.modify())()
{
  return nullsub_1;
}

ReminderKitInternal::Diff __swiftcall Diff.init(elements:remainingIndexes:)(Swift::OpaquePointer elements, Swift::OpaquePointer remainingIndexes)
{
  v2->_rawValue = elements._rawValue;
  v2[1]._rawValue = remainingIndexes._rawValue;
  result.remainingIndexes = remainingIndexes;
  result.elements = elements;
  return result;
}

uint64_t sub_1A72AA6D8()
{
  return swift_bridgeObjectRetain();
}

uint64_t DiffProtocol.startIndex.getter(uint64_t a1, uint64_t a2)
{
  return 0;
}

void sub_1A72AA710(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16);
}

uint64_t DiffProtocol.endIndex.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 24))();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = MEMORY[0x1AD0CAD00](v2, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t (*sub_1A72AA79C(uint64_t (*result)(), unint64_t *a2))()
{
  unint64_t v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(void *)(*(void *)v2 + 16))
  {
    uint64_t v4 = *(void *)v2 + 24 * v3;
    char v5 = *(unsigned char *)(v4 + 48);
    *(_OWORD *)ReminderKitInternal::Diff result = *(_OWORD *)(v4 + 32);
    *((unsigned char *)result + 16) = v5;
    return nullsub_1;
  }
  __break(1u);
  return result;
}

uint64_t *sub_1A72AA7F8@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *result;
  if (*result < 0 || (v4 = result[1], ReminderKitInternal::Diff result = *v2, (*v2)[2] < v4))
  {
    __break(1u);
  }
  else
  {
    char v5 = v2[1];
    a2[2] = result;
    a2[3] = v5;
    *a2 = v3;
    a2[1] = v4;
    swift_bridgeObjectRetain();
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A72AA858@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  uint64_t v4 = *(void *)(v2 + 16);
  a1[2] = 0;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

BOOL sub_1A72AA89C()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

void sub_1A72AA8B0(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t *sub_1A72AA8C0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *result;
    if (!a2)
    {
LABEL_6:
      *a3 = v3;
      return result;
    }
    unint64_t v4 = v3 ^ 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v5 = a2 - 1;
    while (v4 > v5)
    {
      ++v3;
      if (!--a2) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A72AA8F8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1A748F3D4(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t *sub_1A72AA930(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = *a2;
  if (*a2 < *result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 == *result) {
    return 0;
  }
  unint64_t v4 = (uint64_t *)(v3 - v2);
  if (v3 > v2)
  {
    uint64_t result = 0;
    unint64_t v5 = v3 + ~v2;
    while (v5 <= 0x7FFFFFFFFFFFFFFELL)
    {
      uint64_t result = (uint64_t *)((char *)result + 1);
      if (v4 == result) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_1A72AA988(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = a2[1];
  if (*result >= *a2)
  {
    BOOL v5 = __OFSUB__(v2, v3);
    BOOL v4 = v2 - v3 < 0;
  }
  else
  {
    BOOL v5 = 0;
    BOOL v4 = 0;
  }
  if (v4 == v5) {
    __break(1u);
  }
  return result;
}

void *sub_1A72AA9A4(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < *result) {
    __break(1u);
  }
  return result;
}

void *sub_1A72AA9C0(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < result[1]) {
    __break(1u);
  }
  return result;
}

void *sub_1A72AA9DC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *sub_1A72AA9F4(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

__n128 sub_1A72AAA0C@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_1A72AAA1C()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t sub_1A72AAA28()
{
  return 2;
}

void *sub_1A72AAA30()
{
  uint64_t v1 = sub_1A72D1D58(*v0, v0[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

void *sub_1A72AAA7C(void *a1, uint64_t a2, unint64_t a3)
{
  return sub_1A748D24C(a1, a2, a3, *v3, v3[1]);
}

uint64_t sub_1A72AAA84()
{
  return sub_1A75728E0();
}

void *Diff.Element.init(trace:)@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  if (__OFADD__(*result, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = result[3];
  uint64_t v3 = result[1];
  if (*result + 1 == result[2])
  {
    if (!__OFADD__(v3, 1))
    {
      if (v3 + 1 == v2)
      {
        *(void *)a2 = 0;
        *(void *)(a2 + 8) = 0;
        *(unsigned char *)(a2 + 16) = -1;
        return result;
      }
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return result;
  }
LABEL_6:
  if (v3 >= v2)
  {
    *(void *)a2 = *result;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 16) = 1;
  }
  else
  {
    *(void *)a2 = v3;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 16) = 0;
  }
  return result;
}

uint64_t Point.x.getter()
{
  return *(void *)v0;
}

uint64_t Point.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t Point.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t sub_1A72AABB0()
{
  return sub_1A7574110();
}

uint64_t sub_1A72AAC0C()
{
  return sub_1A75740D0();
}

uint64_t sub_1A72AAC48()
{
  return sub_1A7574110();
}

__n128 Trace.from.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  return result;
}

__n128 Trace.to.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = v1[1];
  *a1 = result;
  return result;
}

uint64_t Trace.D.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t Trace.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t Trace.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t sub_1A72AADB8()
{
  return sub_1A7574110();
}

uint64_t sub_1A72AAE48()
{
  return sub_1A75740D0();
}

uint64_t sub_1A72AAEAC()
{
  return sub_1A7574110();
}

uint64_t Collection.diff(_:isEqual:)@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  return Collection.diff(_:identitiesEqual:contentsEqual:)(a1, a2, a3, 0, 0, a4, a5, a6);
}

uint64_t Collection.diff(_:identitiesEqual:contentsEqual:)@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v53 = a5;
  v62 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v50 = (uint64_t)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v61 = (uint64_t)v47 - v18;
  unint64_t v52 = a1;
  uint64_t v54 = a6;
  uint64_t v55 = a7;
  uint64_t v56 = v8;
  uint64_t result = (uint64_t)Collection.outputDiffPathTraces(to:isEqual:)(a1, a2, a3, a6, a7);
  uint64_t v20 = *(void *)(result + 16);
  if (!v20)
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v22 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
LABEL_34:
    *a8 = v23;
    a8[1] = v22;
    return result;
  }
  uint64_t v48 = a8;
  uint64_t v49 = (uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
  v47[1] = result;
  uint64_t v21 = (uint64_t *)(result + 56);
  uint64_t v22 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    long long v24 = *(_OWORD *)(v21 - 3);
    uint64_t v25 = *(v21 - 3);
    if (__OFADD__(v25, 1)) {
      break;
    }
    uint64_t v26 = *(v21 - 1);
    uint64_t v27 = *v21;
    uint64_t v28 = *(v21 - 2);
    long long v63 = *(_OWORD *)(v21 - 3);
    if (v25 + 1 != v26)
    {
      BOOL v30 = 0;
      char v39 = 0;
      if (*((uint64_t *)&v24 + 1) >= v27) {
        goto LABEL_20;
      }
      goto LABEL_21;
    }
    uint64_t v29 = *((void *)&v24 + 1) + 1;
    if (__OFADD__(*((void *)&v24 + 1), 1)) {
      goto LABEL_36;
    }
    BOOL v30 = v29 == v27;
    if (v29 == v27 && v62 != 0)
    {
      long long v59 = v22;
      swift_retain();
      BOOL v57 = v29 == v27;
      long long v58 = v23;
      sub_1A748BC4C(v61);
      *(void *)&long long v60 = v20;
      uint64_t v32 = v50;
      long long v33 = v62;
      sub_1A748BC4C(v50);
      char v34 = v33(v61, v32);
      sub_1A72AE0F8((uint64_t)v33);
      long long v35 = *v49;
      uint64_t v36 = v32;
      uint64_t v20 = v60;
      uint64_t v37 = AssociatedTypeWitness;
      (*v49)(v36, AssociatedTypeWitness);
      uint64_t v38 = v37;
      uint64_t v22 = v59;
      uint64_t result = v35(v61, v38);
      BOOL v30 = v57;
      uint64_t v23 = v58;
      if ((v34 & 1) == 0)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        BOOL v30 = 1;
        char v39 = 2;
        long long v40 = v63;
        if (result)
        {
          long long v40 = v63;
          goto LABEL_22;
        }
LABEL_31:
        long long v60 = v40;
        uint64_t result = (uint64_t)sub_1A72ACB1C(0, v23[2] + 1, 1, v23, &qword_1EB703D38);
        long long v40 = v60;
        uint64_t v23 = (void *)result;
LABEL_22:
        unint64_t v42 = v23[2];
        unint64_t v41 = v23[3];
        if (v42 >= v41 >> 1)
        {
          long long v60 = v40;
          uint64_t result = (uint64_t)sub_1A72ACB1C((void *)(v41 > 1), v42 + 1, 1, v23, &qword_1EB703D38);
          long long v40 = v60;
          uint64_t v23 = (void *)result;
        }
        v23[2] = v42 + 1;
        long long v43 = &v23[3 * v42];
        *((_OWORD *)v43 + 2) = v40;
        *((unsigned char *)v43 + 48) = v39;
        if (!v30) {
          goto LABEL_4;
        }
LABEL_25:
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1A72AC48C(0, v22[2] + 1, 1, v22);
          uint64_t v22 = (void *)result;
        }
        unint64_t v45 = v22[2];
        unint64_t v44 = v22[3];
        long long v46 = v63;
        if (v45 >= v44 >> 1)
        {
          uint64_t result = (uint64_t)sub_1A72AC48C((void *)(v44 > 1), v45 + 1, 1, v22);
          long long v46 = v63;
          uint64_t v22 = (void *)result;
        }
        v22[2] = v45 + 1;
        *(_OWORD *)&v22[2 * v45 + 4] = v46;
        goto LABEL_4;
      }
    }
    if (v28 + 1 != v27)
    {
      if (v28 < v27)
      {
        char v39 = 0;
        goto LABEL_21;
      }
LABEL_20:
      char v39 = 1;
      uint64_t v28 = v25;
LABEL_21:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      long long v40 = (unint64_t)v28;
      if (result) {
        goto LABEL_22;
      }
      goto LABEL_31;
    }
    if (v29 == v27) {
      goto LABEL_25;
    }
LABEL_4:
    v21 += 5;
    if (!--v20)
    {
      uint64_t result = swift_bridgeObjectRelease();
      a8 = v48;
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void *Collection.outputDiffPathTraces(to:isEqual:)(unint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5 = (unint64_t *)Collection.diffTraces(to:isEqual:)(a1, a2, a3, a4, a5);
  sub_1A7572DA0();
  sub_1A7572DA0();
  char v6 = sub_1A72AE3D4(v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t Collection.diffTraces(to:isEqual:)(unint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  long long v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A7572DA0();
  (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, a1, a4);
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, a4);
  }
  else
  {
    uint64_t v14 = sub_1A7572DA0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, a4);
    if (!v14) {
      return MEMORY[0x1E4FBC860];
    }
  }
  if (!sub_1A7572DA0()) {
    return sub_1A72AE108();
  }
  if (sub_1A7572DA0()) {
    return sub_1A72AB678(a1, a2, a3, a4, a5);
  }
  return sub_1A72AB598();
}

uint64_t sub_1A72AB598()
{
  uint64_t result = sub_1A7572DA0();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    int64_t v1 = result;
    uint64_t result = MEMORY[0x1E4FBC860];
    if (v1)
    {
      uint64_t v7 = MEMORY[0x1E4FBC860];
      sub_1A72D2C98(0, v1, 0);
      uint64_t v2 = 0;
      uint64_t result = v7;
      uint64_t v3 = *(void *)(v7 + 16);
      uint64_t v4 = 40 * v3;
      do
      {
        uint64_t v8 = result;
        unint64_t v5 = *(void *)(result + 24);
        if (v3 + v2 >= v5 >> 1)
        {
          sub_1A72D2C98(v5 > 1, v3 + v2 + 1, 1);
          uint64_t result = v8;
        }
        *(void *)(result + 16) = v3 + v2 + 1;
        char v6 = (void *)(result + v4);
        v6[4] = v2;
        v6[5] = 0;
        v6[7] = 0;
        v6[8] = 0;
        v6[6] = v2 + 1;
        v4 += 40;
        ++v2;
      }
      while (v1 != v2);
    }
  }
  return result;
}

uint64_t sub_1A72AB678(unint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v64 = a3;
  long long v63 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v69 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v68 = (uint64_t)&v53 - v13;
  uint64_t v72 = v5;
  uint64_t v14 = sub_1A7572DA0();
  unint64_t v62 = a1;
  uint64_t v15 = sub_1A7572DA0();
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if (__OFADD__(v16, 1))
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  uint64_t v6 = v15;
  uint64_t v54 = v14 + v15;
  uint64_t v17 = (void *)sub_1A73295A0(0xFFFFFFFFFFFFFFFFLL, v16 + 1);
  a1 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  v65 = v17;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((a1 & 0x8000000000000000) == 0) {
      goto LABEL_6;
    }
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
LABEL_85:
  uint64_t result = (uint64_t)sub_1A74DAED0(v65);
  v65 = (void *)result;
  if ((a1 & 0x8000000000000000) != 0) {
    goto LABEL_86;
  }
LABEL_6:
  if (a1 >= v65[2])
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  v71 = v65 + 4;
  v65[a1 + 4] = 0;
  if (v54 < 0)
  {
LABEL_88:
    __break(1u);
    return result;
  }
  uint64_t v19 = 0;
  uint64_t v75 = -v6;
  BOOL v20 = __OFSUB__(0, v6);
  BOOL v76 = v20;
  long long v59 = (void (**)(uint64_t, uint64_t))(v10 + 8);
  v70 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v66 = a5;
  a1 = (unint64_t)v65;
  uint64_t v67 = a4;
  uint64_t v60 = v14;
  while (2)
  {
    int v77 = 0;
    uint64_t v73 = v19;
    unint64_t v74 = 0;
    LOBYTE(v21) = 0;
    uint64_t v22 = -v19;
LABEL_13:
    a4 = v67;
    while (1)
    {
      uint64_t v23 = v22;
      if (v22 >= v19) {
        break;
      }
      BOOL v21 = !__OFADD__(v22, 2);
      unint64_t v24 = 0x8000000000000000;
      if (!__OFADD__(v22, 2)) {
        unint64_t v24 = 0;
      }
      unint64_t v74 = v24;
      if (__OFADD__(v22, 2)) {
        uint64_t v22 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        v22 += 2;
      }
      if (v76)
      {
LABEL_75:
        __break(1u);
LABEL_76:
        swift_bridgeObjectRelease();
        return (uint64_t)v70;
      }
LABEL_31:
      if (v23 >= v75 && v14 >= v23)
      {
        unint64_t v25 = v23 + v6;
        if (__OFADD__(v23, v6))
        {
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
          goto LABEL_82;
        }
        unint64_t v26 = v25 - 1;
        if (__OFSUB__(v25, 1)) {
          goto LABEL_78;
        }
        if ((v26 & 0x8000000000000000) != 0 || v26 >= *(void *)(a1 + 16))
        {
          uint64_t v28 = 0;
          char v27 = 1;
          unint64_t v29 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            goto LABEL_79;
          }
        }
        else
        {
          char v27 = 0;
          uint64_t v28 = v71[v26];
          unint64_t v29 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            goto LABEL_79;
          }
        }
        BOOL v30 = v21;
        if ((v29 & 0x8000000000000000) != 0 || v29 >= *(void *)(a1 + 16))
        {
          uint64_t v32 = 0;
          char v31 = 1;
        }
        else
        {
          char v31 = 0;
          uint64_t v32 = v71[v29];
        }
        v81[0] = v19;
        v81[1] = v23;
        v81[2] = v28;
        char v82 = v27;
        uint64_t v83 = v32;
        char v84 = v31;
        sub_1A72ABD2C(v81, (uint64_t *)&v78);
        uint64_t v19 = v73;
        uint64_t v10 = v79;
        BOOL v21 = v30;
        if (v79 <= v14)
        {
          uint64_t v33 = v80;
          if ((uint64_t)v80 <= v6)
          {
            long long v58 = v80;
            uint64_t v55 = v22;
            BOOL v56 = v21;
            long long v57 = v78;
            if (swift_isUniquelyReferenced_nonNull_native()) {
              char v34 = v70;
            }
            else {
              char v34 = sub_1A72AC258(0, v70[2] + 1, 1, v70);
            }
            unint64_t v36 = v34[2];
            unint64_t v35 = v34[3];
            long long v37 = v58;
            if (v36 >= v35 >> 1)
            {
              uint64_t v51 = sub_1A72AC258((void *)(v35 > 1), v36 + 1, 1, v34);
              long long v37 = v58;
              char v34 = v51;
            }
            v34[2] = v36 + 1;
            uint64_t v38 = &v34[5 * v36];
            *((_OWORD *)v38 + 2) = v57;
            v38[6] = v10;
            *(_OWORD *)(v38 + 7) = v37;
            v70 = v34;
            if (v10 < 0 || v33 < 0 || v10 >= v14 || v33 >= v6)
            {
              a4 = v33;
              a5 = v10;
LABEL_62:
              if ((v25 & 0x8000000000000000) == 0) {
                goto LABEL_65;
              }
              goto LABEL_80;
            }
            while (1)
            {
              uint64_t v39 = v6;
              uint64_t v40 = v68;
              sub_1A748BC4C(v68);
              uint64_t v41 = v69;
              sub_1A748BC4C(v69);
              if ((v63(v41, v40) & 1) == 0) {
                break;
              }
              unint64_t v42 = v70;
              unint64_t v44 = v70[2];
              unint64_t v43 = v70[3];
              if (v44 >= v43 >> 1) {
                unint64_t v42 = sub_1A72AC258((void *)(v43 > 1), v44 + 1, 1, v70);
              }
              uint64_t v6 = v39;
              a5 = v10 + 1;
              a4 = v33 + 1;
              v42[2] = v44 + 1;
              v70 = v42;
              unint64_t v45 = &v42[5 * v44];
              v45[4] = v10;
              v45[5] = v33;
              v45[6] = v10 + 1;
              v45[7] = v33 + 1;
              v45[8] = v73;
              long long v46 = *v59;
              uint64_t v47 = AssociatedTypeWitness;
              (*v59)(v69, AssociatedTypeWitness);
              v46(v68, v47);
              uint64_t v14 = v60;
              a1 = (unint64_t)v65;
              if (v10 + 1 < v60)
              {
                ++v33;
                ++v10;
                if (a4 < v6) {
                  continue;
                }
              }
              goto LABEL_62;
            }
            uint64_t v48 = *v59;
            uint64_t v49 = AssociatedTypeWitness;
            (*v59)(v69, AssociatedTypeWitness);
            v48(v68, v49);
            a4 = v33;
            a5 = v10;
            uint64_t v14 = v60;
            uint64_t v6 = v39;
            a1 = (unint64_t)v65;
            if ((v25 & 0x8000000000000000) != 0) {
              goto LABEL_80;
            }
LABEL_65:
            if (v25 >= *(void *)(a1 + 16)) {
              goto LABEL_81;
            }
            v71[v25] = a5;
            BOOL v50 = a5 < v14;
            a5 = v66;
            uint64_t v19 = v73;
            LOBYTE(v21) = v56;
            uint64_t v22 = v55;
            if (!v50 && a4 >= v6) {
              goto LABEL_76;
            }
            goto LABEL_13;
          }
        }
      }
    }
    if ((v22 != v19) | v77 & 1) {
      goto LABEL_70;
    }
    if (v21)
    {
      int v77 = 1;
      uint64_t v22 = v19;
      BOOL v21 = 1;
      if (v76) {
        goto LABEL_75;
      }
      goto LABEL_31;
    }
    if (v74 != 0x8000000000000000)
    {
      BOOL v21 = 0;
      int v77 = 1;
      uint64_t v22 = v19;
      if (v76) {
        goto LABEL_75;
      }
      goto LABEL_31;
    }
LABEL_70:
    if (v19 != v54)
    {
      if (!__OFADD__(v19++, 1)) {
        continue;
      }
      __break(1u);
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

void *sub_1A72ABD2C@<X0>(void *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *result;
  if (__OFSUB__(0, *result))
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v3 = result[1];
  uint64_t v4 = result[4];
  if (v3 == -*result)
  {
LABEL_3:
    if (*((unsigned char *)result + 40)) {
      uint64_t v4 = -1;
    }
    uint64_t v5 = v4 - v3;
    if (!__OFSUB__(v4, v3))
    {
      uint64_t v6 = v5 - 1;
      if (!__OFSUB__(v5, 1))
      {
        uint64_t v7 = v4;
LABEL_21:
        *a2 = v4;
        a2[1] = v6;
        a2[2] = v7;
        a2[3] = v5;
        a2[4] = v2;
        return result;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = result[2];
  if (v3 == v2)
  {
    if (!*((unsigned char *)result + 24)) {
      goto LABEL_17;
    }
LABEL_12:
    uint64_t v8 = 0;
    goto LABEL_17;
  }
  if (result[3]) {
    goto LABEL_12;
  }
  if (v8 >= v4) {
    char v9 = 1;
  }
  else {
    char v9 = *((unsigned char *)result + 40);
  }
  if ((v9 & 1) == 0) {
    goto LABEL_3;
  }
LABEL_17:
  BOOL v10 = __OFADD__(v8, 1);
  uint64_t v7 = v8 + 1;
  if (v10)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v4 = v7 - 1;
  if (__OFSUB__(v7, 1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  BOOL v10 = __OFSUB__(v7, v3);
  uint64_t v6 = v7 - v3;
  if (!v10)
  {
    uint64_t v5 = v6;
    goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t Collection<>.diff(_:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a4;
  return Collection.diff(_:identitiesEqual:contentsEqual:)(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1A72AE584, (uint64_t)v6, 0, 0, a2, a3, a5);
}

uint64_t Collection<>.diffTraces(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A72ABE88(a1, a2, a3, a4, (uint64_t)sub_1A72AE584, (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t))Collection.diffTraces(to:isEqual:));
}

uint64_t Collection<>.outputDiffPathTraces(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A72ABE88(a1, a2, a3, a4, (uint64_t)sub_1A72AE584, (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t))Collection.outputDiffPathTraces(to:isEqual:));
}

uint64_t sub_1A72ABE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, void *, uint64_t, uint64_t))
{
  v7[2] = a2;
  v7[3] = a3;
  v7[4] = a4;
  return a6(a1, a5, v7, a2, a3);
}

uint64_t DiffProtocol.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  swift_getAssociatedTypeWitness();
  sub_1A7572B70();

  return swift_bridgeObjectRelease();
}

uint64_t Diff.Element.debugDescription.getter()
{
  if (*(unsigned char *)(v0 + 16))
  {
    if (*(unsigned char *)(v0 + 16) != 1)
    {
      uint64_t v3 = 10325;
      sub_1A7573BC0();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      goto LABEL_7;
    }
    uint64_t v1 = 10308;
  }
  else
  {
    uint64_t v1 = 10313;
  }
  uint64_t v3 = v1;
LABEL_7:
  sub_1A7573BC0();
  sub_1A7572740();
  swift_bridgeObjectRelease();
  sub_1A7572740();
  return v3;
}

uint64_t Diff.RemainingIndex.debugDescription.getter()
{
  return 40;
}

void *sub_1A72AC148(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
      BOOL v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      BOOL v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AEC80(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72AC258(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703D40);
      BOOL v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      BOOL v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A72AE2E4(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72AC37C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD8);
      BOOL v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      BOOL v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AE1F8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72AC48C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703D30);
      BOOL v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      BOOL v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AEB94(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72AC59C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F78);
      BOOL v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      BOOL v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AE1F8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72AC6AC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F40);
      BOOL v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      BOOL v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AED74(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72AC7BC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F70);
      BOOL v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      BOOL v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A72AEE68(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72AC8E4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A72AD920(a1, a2, a3, a4, &qword_1EB700608);
}

void *sub_1A72AC8F0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7040E8);
      BOOL v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      BOOL v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AEF60(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72ACA00(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703D58);
      BOOL v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      BOOL v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AF25C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72ACB10(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A72ACB1C(a1, a2, a3, a4, &qword_1EB703D28);
}

void *sub_1A72ACB1C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
          memmove(v13, a4 + 4, 24 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A72AF350(0, v9, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1A72ACC3C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F68);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AF440(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72ACD4C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F58);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A72AF534(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72ACE70(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F50);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A72AF058(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72ACF90(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A72ACFDC(a1, a2, a3, a4, &qword_1E96F0EA8);
}

uint64_t sub_1A72ACF9C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A72AD11C(a1, a2, a3, a4, &qword_1E96F0EF0, MEMORY[0x1E4F26EA0], MEMORY[0x1E4F26EA0]);
}

void *sub_1A72ACFD0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A72ACFDC(a1, a2, a3, a4, &qword_1E96F0F48);
}

void *sub_1A72ACFDC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AE1F8(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A72AD0E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A72AD11C(a1, a2, a3, a4, (uint64_t *)&unk_1E96F23A0, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
}

uint64_t sub_1A72AD11C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1A7573830();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A72AF93C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_1A72AD39C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F30);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AF738(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72AD4AC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F28);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A72AF844(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A72AD5D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A72AD11C(a1, a2, a3, a4, &qword_1E96F0F20, type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment, type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment);
}

uint64_t sub_1A72AD604(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A72AD11C(a1, a2, a3, a4, &qword_1E96F0F18, type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment, type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment);
}

uint64_t sub_1A72AD638(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A72AD11C(a1, a2, a3, a4, &qword_1E96F0F10, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment);
}

uint64_t sub_1A72AD66C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A72AD11C(a1, a2, a3, a4, &qword_1E96F0F08, type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag, type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag);
}

uint64_t sub_1A72AD6A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A72AD11C(a1, a2, a3, a4, &qword_1E96F0F00, type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert, type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert);
}

uint64_t sub_1A72AD6D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A72AD11C(a1, a2, a3, a4, &qword_1E96F0EF8, (uint64_t (*)(void))type metadata accessor for REMAnalyticsEvent, (uint64_t (*)(void))type metadata accessor for REMAnalyticsEvent);
}

char *sub_1A72AD708(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC8);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A72AFA98(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72AD804(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0EE8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AEB94(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72AD914(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A72AD920(a1, a2, a3, a4, &qword_1EB700470);
}

void *sub_1A72AD920(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AF150(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1A72ADA2C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A72AD920(a1, a2, a3, a4, &qword_1E96F0ED0);
}

void *sub_1A72ADA38(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A72AD920(a1, a2, a3, a4, &qword_1E96F0EE0);
}

void *sub_1A72ADA44(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A72AD920(a1, a2, a3, a4, &qword_1E96F0ED8);
}

void *sub_1A72ADA50(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0EC0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AFB80(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72ADB60(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0EB8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AFC8C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72ADC70(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0EB0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AFD98(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72ADD80(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7010E8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AF644(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A72ADE90(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0E98);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AFE8C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1A72ADFA0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0E90);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1A72AFF98(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

BOOL _s19ReminderKitInternal5TraceV2eeoiySbAC_ACtFZ_0(int64x2_t *a1, int64x2_t *a2)
{
  return (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*a1, *a2), (int32x4_t)vceqq_s64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].i64[0] == a2[2].i64[0];
}

uint64_t sub_1A72AE0F8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1A72AE108()
{
  uint64_t result = sub_1A7572DA0();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    int64_t v1 = result;
    uint64_t result = MEMORY[0x1E4FBC860];
    if (v1)
    {
      uint64_t v7 = MEMORY[0x1E4FBC860];
      sub_1A72D2C98(0, v1, 0);
      uint64_t v2 = 0;
      uint64_t result = v7;
      uint64_t v3 = *(void *)(v7 + 16);
      uint64_t v4 = 40 * v3 + 32;
      do
      {
        uint64_t v8 = result;
        unint64_t v5 = *(void *)(result + 24);
        if (v3 + v2 >= v5 >> 1)
        {
          sub_1A72D2C98(v5 > 1, v3 + v2 + 1, 1);
          uint64_t result = v8;
        }
        *(void *)(result + 16) = v3 + v2 + 1;
        unint64_t v6 = (void *)(result + v4);
        *unint64_t v6 = 0;
        v6[1] = v2;
        v6[2] = 0;
        v6[3] = v2 + 1;
        v6[4] = 0;
        v4 += 40;
        ++v2;
      }
      while (v1 != v2);
    }
  }
  return result;
}

char *sub_1A72AE1F8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1A7573940();
  __break(1u);
  return result;
}

char *sub_1A72AE2E4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 40 * a1 + 32);
    size_t v6 = 40 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1A7573940();
  __break(1u);
  return result;
}

void *sub_1A72AE3D4(unint64_t *a1)
{
  int64_t v1 = a1[2];
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = a1;
  uint64_t v3 = &a1[5 * v1];
  uint64_t v4 = *(v3 - 1);
  long long v16 = *((_OWORD *)v3 + 1);
  long long v17 = *(_OWORD *)v3;
  unint64_t v5 = sub_1A72AC258(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v7 = v5[2];
  unint64_t v6 = v5[3];
  int64_t v8 = v7 + 1;
  if (v7 >= v6 >> 1) {
    goto LABEL_20;
  }
  while (1)
  {
    v5[2] = v8;
    uint64_t v9 = &v5[5 * v7];
    v9[4] = v4;
    *(_OWORD *)(v9 + 5) = v17;
    *(_OWORD *)(v9 + 7) = v16;
    int64_t v8 = v17;
    if (!(v4 | (unint64_t)v17)) {
      return v5;
    }
    swift_bridgeObjectRetain();
    uint64_t v10 = v1 - 1;
    *(void *)&long long v17 = v2;
    unint64_t v6 = (unint64_t)&v2[5 * v1];
    uint64_t v2 = (unint64_t *)(v6 + 8);
    while (v10 < v1)
    {
      unint64_t v6 = *v2;
      if (*v2 == v4 && v2[1] == v8)
      {
        uint64_t v12 = *(v2 - 2);
        int64_t v13 = *(v2 - 1);
        unint64_t v14 = v2[2];
        unint64_t v7 = v5[2];
        if (v7 >= v5[3] >> 1)
        {
          unint64_t v5 = sub_1A72AC258((void *)1, v7 + 1, 1, v5);
          unint64_t v7 = v5[2];
        }
        memmove(v5 + 9, v5 + 4, 40 * v7);
        v5[2] = v7 + 1;
        v5[4] = v12;
        v5[5] = v13;
        v5[6] = v4;
        v5[7] = v8;
        v5[8] = v14;
        unint64_t v6 = v12 | v13;
        if (!(v12 | v13))
        {
LABEL_17:
          swift_bridgeObjectRelease();
          return v5;
        }
        uint64_t v4 = v12;
        int64_t v8 = v13;
      }
      --v10;
      v2 -= 5;
      if (v10 == -1) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_20:
    unint64_t v5 = sub_1A72AC258((void *)(v6 > 1), v8, 1, v5);
  }
}

uint64_t sub_1A72AE588()
{
  return sub_1A75725C0() & 1;
}

unint64_t sub_1A72AE5F4(uint64_t a1)
{
  unint64_t result = sub_1A72AE61C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A72AE61C()
{
  unint64_t result = qword_1EB703BA8;
  if (!qword_1EB703BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703BA8);
  }
  return result;
}

unint64_t sub_1A72AE674()
{
  unint64_t result = qword_1EB703BA0;
  if (!qword_1EB703BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703BA0);
  }
  return result;
}

uint64_t sub_1A72AE6C8()
{
  return MEMORY[0x1E4FBB568];
}

uint64_t sub_1A72AE6D4()
{
  return sub_1A72AE788(&qword_1E96F0E50, &qword_1E96F0E58);
}

uint64_t sub_1A72AE710()
{
  return sub_1A72AE788(&qword_1E96F0E60, &qword_1E96F0E68);
}

uint64_t sub_1A72AE74C()
{
  return sub_1A72AE788(&qword_1E96F0E70, &qword_1E96F0E78);
}

uint64_t sub_1A72AE788(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A72AE7D0()
{
  unint64_t result = qword_1E96F0E80;
  if (!qword_1E96F0E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F0E80);
  }
  return result;
}

unint64_t sub_1A72AE828()
{
  unint64_t result = qword_1E96F0E88;
  if (!qword_1E96F0E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F0E88);
  }
  return result;
}

uint64_t dispatch thunk of DiffProtocol.elements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t destroy for Diff()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s19ReminderKitInternal4DiffVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Diff(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for Diff(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Diff(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Diff(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Diff()
{
  return &type metadata for Diff;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Diff.Element(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Diff.Element(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A72AEADC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1A72AEAE4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Diff.Element()
{
  return &type metadata for Diff.Element;
}

ValueMetadata *type metadata accessor for Diff.RemainingIndex()
{
  return &type metadata for Diff.RemainingIndex;
}

ValueMetadata *type metadata accessor for Point()
{
  return &type metadata for Point;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for Trace(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Trace(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Trace()
{
  return &type metadata for Trace;
}

char *sub_1A72AEB94(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  __n128 result = (char *)sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AEC80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AED74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AEE68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AEF60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AF058(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AF150(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB703D60);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AF25C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

char *sub_1A72AF350(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 24 * a1 + 32);
    size_t v6 = 24 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AF440(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AF534(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F60);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AF644(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AF738(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F38);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AF844(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AF93C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

char *sub_1A72AFA98(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AFB80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0EC8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AFC8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB7054F8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AFD98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72AFE8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0EA0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

char *sub_1A72AFF98(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t KMeansAutoTuner.KMeanTuningHistory.minK.getter()
{
  return *(void *)v0;
}

uint64_t KMeansAutoTuner.KMeanTuningHistory.maxK.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t KMeansAutoTuner.KMeanTuningHistory.bestK.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t KMeansAutoTuner.KMeanTuningHistory.modelMetricHistory.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static KMeansAutoTuner.TuningMethod.== infix(_:_:)()
{
  return 1;
}

uint64_t KMeansAutoTuner.TuningMethod.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t KMeansAutoTuner.TuningMethod.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t sub_1A72B013C()
{
  return 1;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO011AccountPathE0O9hashValueSivg_0()
{
  return sub_1A7574110();
}

uint64_t sub_1A72B0188()
{
  return sub_1A75740D0();
}

uint64_t sub_1A72B01B0()
{
  return sub_1A7574110();
}

uint64_t KMeansAutoTuner.__allocating_init(pointCloud:mathod:minK:maxK:maxIter:randomGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = swift_allocObject();
  KMeansAutoTuner.init(pointCloud:mathod:minK:maxK:maxIter:randomGenerator:)(a1, v12, a3, a4, a5, a6);
  return v11;
}

uint64_t KMeansAutoTuner.init(pointCloud:mathod:minK:maxK:maxIter:randomGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int64_t v8 = v6;
  uint64_t v63 = a5;
  uint64_t v10 = a4;
  if (a3 >= a4)
  {
    sub_1A72B2158();
    swift_allocError();
    *long long v16 = a3;
    v16[1] = v10;
    goto LABEL_5;
  }
  uint64_t v13 = v7;
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 40);
  if (v14 < v10)
  {
    sub_1A72BEA74();
    swift_allocError();
    *uint64_t v15 = v10;
    v15[1] = v14;
LABEL_5:
    swift_willThrow();
    swift_release();
    goto LABEL_6;
  }
  v6[4] = a3;
  v6[5] = v10;
  sub_1A72B21AC(a6, (uint64_t)(v6 + 6));
  if (__OFSUB__(v10, a3))
  {
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    uint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
  long long v59 = v6 + 6;
  if (v10 - a3 == 1)
  {
    v6[2] = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F88);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
    *(void *)(inited + 32) = a3;
    sub_1A72B21AC(a6, (uint64_t)v62);
    type metadata accessor for KMeans();
    swift_allocObject();
    swift_retain();
    size_t v19 = KMeans.init(k:pointCloud:maxIter:tolerance:randomGenerator:)(a3, a1, v63, (uint64_t)v62, 0.0001);
    if (!v7)
    {
      *(void *)(inited + 40) = v19;
      unint64_t v55 = sub_1A72BE974((void *)inited);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F90);
      swift_arrayDestroy();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(a6);
      v6[3] = v55;
      return (uint64_t)v8;
    }
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F90);
    swift_arrayDestroy();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(a6);
    a6 = (uint64_t)(v6 + 6);
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1(a6);
    swift_deallocPartialClassInstance();
    return (uint64_t)v8;
  }
  uint64_t v57 = v10 - a3;
  long long v58 = v6;
  uint64_t v56 = a3;
  if (a3 == v10)
  {
    uint64_t v61 = (void *)MEMORY[0x1E4FBC860];
    BOOL v20 = (void *)MEMORY[0x1E4FBC868];
    double v21 = INFINITY;
    double v22 = -INFINITY;
    goto LABEL_14;
  }
  uint64_t v28 = a3;
  uint64_t v61 = (void *)MEMORY[0x1E4FBC860];
  BOOL v20 = (void *)MEMORY[0x1E4FBC868];
  double v21 = INFINITY;
  double v22 = -INFINITY;
  uint64_t v60 = v10;
  while (1)
  {
    if (v28 >= v10)
    {
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    sub_1A72B21AC(a6, (uint64_t)v62);
    type metadata accessor for KMeans();
    swift_allocObject();
    swift_retain();
    unint64_t v29 = (double *)KMeans.init(k:pointCloud:maxIter:tolerance:randomGenerator:)(v28, a1, v63, (uint64_t)v62, 0.0001);
    if (v13)
    {
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(a6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v8 = v58;
      a6 = (uint64_t)v59;
      goto LABEL_6;
    }
    BOOL v30 = v29;
    uint64_t v31 = a1;
    uint64_t v32 = a6;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v62[0] = v20;
    unint64_t v35 = sub_1A72B23E4(v28);
    uint64_t v36 = v20[2];
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37)) {
      goto LABEL_64;
    }
    char v39 = v34;
    if (v20[3] >= v38)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        BOOL v20 = (void *)v62[0];
        if (v34) {
          goto LABEL_34;
        }
      }
      else
      {
        sub_1A72BC574((uint64_t *)&unk_1E96F1200);
        BOOL v20 = (void *)v62[0];
        if (v39) {
          goto LABEL_34;
        }
      }
    }
    else
    {
      sub_1A72B687C(v38, isUniquelyReferenced_nonNull_native, (uint64_t *)&unk_1E96F1200);
      unint64_t v40 = sub_1A72B23E4(v28);
      if ((v39 & 1) != (v41 & 1)) {
        goto LABEL_71;
      }
      unint64_t v35 = v40;
      BOOL v20 = (void *)v62[0];
      if (v39)
      {
LABEL_34:
        uint64_t v42 = v20[7];
        swift_release();
        *(void *)(v42 + 8 * v35) = v30;
        goto LABEL_38;
      }
    }
    v20[(v35 >> 6) + 8] |= 1 << v35;
    uint64_t v43 = 8 * v35;
    *(void *)(v20[6] + v43) = v28;
    *(void *)(v20[7] + v43) = v30;
    uint64_t v44 = v20[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45) {
      goto LABEL_67;
    }
    v20[2] = v46;
LABEL_38:
    swift_bridgeObjectRelease();
    uint64_t v47 = v28 - 1;
    if (__OFSUB__(v28, 1)) {
      goto LABEL_65;
    }
    if (v20[2])
    {
      unint64_t v48 = sub_1A72B23E4(v28 - 1);
      if (v49) {
        break;
      }
    }
    swift_release();
    a6 = v32;
    a1 = v31;
    uint64_t v13 = 0;
LABEL_24:
    ++v28;
    uint64_t v10 = v60;
    if (v60 == v28) {
      goto LABEL_14;
    }
  }
  uint64_t v50 = *(void *)(v20[7] + 8 * v48);
  swift_beginAccess();
  double v51 = v30[15];
  swift_beginAccess();
  double v52 = v51 - *(double *)(v50 + 120);
  if (v52 < 0.0)
  {
    if (v52 < v21) {
      double v21 = v52;
    }
    if (v22 <= v52) {
      double v22 = v52;
    }
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v61 = sub_1A72AC59C(0, v61[2] + 1, 1, v61);
    }
    a6 = v32;
    unint64_t v54 = v61[2];
    unint64_t v53 = v61[3];
    a1 = v31;
    if (v54 >= v53 >> 1) {
      uint64_t v61 = sub_1A72AC59C((void *)(v53 > 1), v54 + 1, 1, v61);
    }
    uint64_t v13 = 0;
    v61[2] = v54 + 1;
    *(double *)&v61[v54 + 4] = v52;
    swift_release();
    swift_release();
    goto LABEL_24;
  }
  swift_release();
  if (v28)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v32);
    swift_bridgeObjectRelease();
    goto LABEL_59;
  }
  a6 = v32;
  uint64_t v10 = v60;
LABEL_14:
  uint64_t v23 = v57;
  unint64_t v24 = v57 - 2;
  if (__OFSUB__(v57, 2)) {
    goto LABEL_69;
  }
  if ((v24 & 0x8000000000000000) != 0) {
    goto LABEL_54;
  }
  unint64_t v25 = v61[2];
  if (v24 >= v25) {
    goto LABEL_70;
  }
  double v26 = (v22 + v21) * 0.5;
  if (v26 < *(double *)&v61[v24 + 4])
  {
    while (v23 - 2 >= 1)
    {
      if (v57 - 3 >= (uint64_t)v25) {
        goto LABEL_66;
      }
      double v27 = *(double *)&v61[v23-- + 1];
      if (v26 >= v27)
      {
        unint64_t v24 = v23 - 2;
        goto LABEL_54;
      }
    }
    unint64_t v24 = -1;
  }
LABEL_54:
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a6);
  swift_bridgeObjectRelease();
  if (v24 == -1) {
    goto LABEL_58;
  }
  uint64_t v47 = v56 + v24;
  if (__OFADD__(v56, v24))
  {
    __break(1u);
LABEL_58:
    uint64_t v47 = v10 - 1;
  }
LABEL_59:
  int64_t v8 = v58;
  v58[2] = v47;
  v58[3] = v20;
  return (uint64_t)v8;
}

unint64_t sub_1A72B0944(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    char v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11F0);
  uint64_t v2 = sub_1A7573920();
  char v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A72BF1E8(v6, (uint64_t)&v15, &qword_1E96F11F8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1A72B2210(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1A72BEE44(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B0A7C(uint64_t a1)
{
  return sub_1A72B0CC8(a1, &qword_1E96F11B8);
}

unint64_t sub_1A72B0A88(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    char v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705920);
  uint64_t v2 = sub_1A7573920();
  char v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A72BF1E8(v6, (uint64_t)&v13, &qword_1E96F11E8);
    uint64_t v7 = v13;
    unint64_t result = sub_1A72B252C(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1A72BEE44(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B0BB8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700140);
  uint64_t v2 = (void *)sub_1A7573920();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A72B2288(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B0CBC(uint64_t a1)
{
  return sub_1A72B0CC8(a1, &qword_1E96F0FE8);
}

unint64_t sub_1A72B0CC8(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_1A7573920();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  unsigned __int8 v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A72B2210(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B0DE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F0FA8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned __int8 v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7054D0);
  uint64_t v6 = sub_1A7573920();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1A72BF1E8(v12, (uint64_t)v5, (uint64_t *)&unk_1E96F0FA8);
    unint64_t result = sub_1A72B257C((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1A7573790();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    unint64_t result = (unint64_t)sub_1A72BEE44(v9, (_OWORD *)(v7[7] + 32 * v16));
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B0FE0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11B0);
  uint64_t v2 = (void *)sub_1A7573920();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A72B2210(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B10F4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFD38);
  uint64_t v2 = sub_1A7573920();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A72BF1E8(v6, (uint64_t)v15, &qword_1E96F10A0);
    unint64_t result = sub_1A72B24E8((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1A72BEE44(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B1238(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F10E0);
  uint64_t v2 = (void *)sub_1A7573920();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 33);
  while (1)
  {
    unsigned __int8 v5 = *(v4 - 1);
    char v6 = *v4;
    unint64_t result = sub_1A72B25E0(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(unsigned char *)(v2[7] + result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B1334(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1110);
  uint64_t v2 = (void *)sub_1A7573920();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A72B252C((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B1440(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F1100);
  uint64_t v2 = (void *)sub_1A7573920();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_retain();
    unint64_t result = sub_1A72B252C((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B154C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1118);
  uint64_t v2 = (void *)sub_1A7573920();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1A72B252C((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B1658(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7054C8);
  uint64_t v2 = (void *)sub_1A7573920();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    id v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1A72B2210(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B1774(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1078);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    id v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1070);
  uint64_t v6 = sub_1A7573920();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1A72BF1E8(v12, (uint64_t)v5, &qword_1E96F1078);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_1A72B2210(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_1A7571B60();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B1974(uint64_t a1)
{
  return sub_1A72B19E4(a1, &qword_1E96F1028, &qword_1E96F1030, &qword_1E96F1008);
}

unint64_t sub_1A72B1990(uint64_t a1)
{
  return sub_1A72B19E4(a1, &qword_1E96F1038, &qword_1E96F1040, &qword_1E96F1018);
}

unint64_t sub_1A72B19AC(uint64_t a1)
{
  return sub_1A72B19E4(a1, &qword_1E96F1048, &qword_1E96F1050, &qword_1E96F1010);
}

unint64_t sub_1A72B19C8(uint64_t a1)
{
  return sub_1A72B19E4(a1, &qword_1E96F1058, &qword_1E96F1060, &qword_1E96F1020);
}

unint64_t sub_1A72B19E4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_1A7573920();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A72BF1E8(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = sub_1A72B2A4C(v18, a4);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_1A72BEE44(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B1B14(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703020);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F0FD8);
  uint64_t v6 = sub_1A7573920();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1A72BF1E8(v12, (uint64_t)v5, &qword_1EB703020);
    unint64_t result = sub_1A72B2464((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1A7571BC0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B1D08(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F0FC8);
  uint64_t v2 = (void *)sub_1A7573920();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 40);
  while (1)
  {
    long long v11 = *v4;
    id v5 = *((id *)v4 - 1);
    unint64_t result = sub_1A72B2420((uint64_t)v5);
    if (v7) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v11;
    uint64_t v8 = v2[2];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      goto LABEL_11;
    }
    v2[2] = v10;
    uint64_t v4 = (_OWORD *)((char *)v4 + 24);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A72B1E18(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0FC0);
  uint64_t v2 = (void *)sub_1A7573920();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_1A72B28B0((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

ReminderKitInternal::KMeansAutoTuner::KMeanTuningHistory __swiftcall KMeansAutoTuner.tuningSnapshot()()
{
  uint64_t v3 = v2[4];
  uint64_t v4 = v2[5];
  if (v4 < v3)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v5 = v1;
  uint64_t v6 = v2[2];
  if (v3 != v4)
  {
    uint64_t v19 = v2[2];
    uint64_t v8 = v2[3];
    Swift::Int isUniquelyReferenced_nonNull_native = swift_retain();
    char v7 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v20 = v3;
    while (v3 < v4)
    {
      if (*(void *)(v8 + 16))
      {
        Swift::Int isUniquelyReferenced_nonNull_native = sub_1A72B23E4(v3);
        if (v9)
        {
          uint64_t v13 = *(void **)(*(void *)(v8 + 56) + 8 * isUniquelyReferenced_nonNull_native);
          swift_beginAccess();
          uint64_t v14 = v13[13];
          uint64_t v15 = v13[14];
          uint64_t v16 = v13[15];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          Swift::Int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            Swift::Int isUniquelyReferenced_nonNull_native = (Swift::Int)sub_1A72AC7BC(0, v7[2] + 1, 1, v7);
            char v7 = (void *)isUniquelyReferenced_nonNull_native;
          }
          unint64_t v18 = v7[2];
          unint64_t v17 = v7[3];
          if (v18 >= v17 >> 1)
          {
            Swift::Int isUniquelyReferenced_nonNull_native = (Swift::Int)sub_1A72AC7BC((void *)(v17 > 1), v18 + 1, 1, v7);
            char v7 = (void *)isUniquelyReferenced_nonNull_native;
          }
          v7[2] = v18 + 1;
          uint64_t v12 = &v7[3 * v18];
          v12[4] = v14;
          v12[5] = v15;
          v12[6] = v16;
        }
      }
      if (v4 == ++v3)
      {
        Swift::Int isUniquelyReferenced_nonNull_native = swift_release();
        uint64_t v6 = v19;
        uint64_t v3 = v20;
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
  char v7 = (void *)MEMORY[0x1E4FBC860];
LABEL_15:
  *uint64_t v5 = v3;
  v5[1] = v4;
  v5[2] = v6;
  v5[3] = (uint64_t)v7;
LABEL_18:
  result.modelMetricHistory._rawValue = v11;
  result.bestK = v10;
  result.maxK = v9;
  result.minK = isUniquelyReferenced_nonNull_native;
  return result;
}

unint64_t KMeansAutoTuner.bestModel()()
{
  if (!*(void *)(*(void *)(v0 + 24) + 16))
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t result = sub_1A72B23E4(*(void *)(v0 + 16));
  if ((v2 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }

  return swift_retain();
}

uint64_t KMeansAutoTuner.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  return v0;
}

uint64_t KMeansAutoTuner.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);

  return MEMORY[0x1F4186488](v0, 88, 7);
}

unint64_t sub_1A72B2158()
{
  unint64_t result = qword_1E96F0F80;
  if (!qword_1E96F0F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F0F80);
  }
  return result;
}

uint64_t sub_1A72B21AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1A72B2210(uint64_t a1, uint64_t a2)
{
  sub_1A75740C0();
  sub_1A75726F0();
  uint64_t v4 = sub_1A7574110();

  return sub_1A72B2AFC(a1, a2, v4);
}

unint64_t sub_1A72B2288(unsigned __int8 a1)
{
  sub_1A75740C0();
  sub_1A75726F0();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1A7574110();

  return sub_1A72B2BE0(a1, v2);
}

unint64_t sub_1A72B23E4(uint64_t a1)
{
  uint64_t v2 = sub_1A75740B0();
  return sub_1A72B44C0(a1, v2);
}

unint64_t sub_1A72B2420(uint64_t a1)
{
  uint64_t v2 = sub_1A7573180();

  return sub_1A72B2EB0(a1, v2);
}

unint64_t sub_1A72B2464(uint64_t a1)
{
  sub_1A7571BC0();
  sub_1A72BEE54((unint64_t *)&qword_1EB701400);
  uint64_t v2 = sub_1A7572510();

  return sub_1A72B2FBC(a1, v2);
}

unint64_t sub_1A72B24E8(uint64_t a1)
{
  uint64_t v2 = sub_1A7573470();

  return sub_1A72B3168(a1, v2);
}

unint64_t sub_1A72B252C(uint64_t a1)
{
  uint64_t v2 = sub_1A7573180();
  return sub_1A72B3230(a1, v2, (unint64_t *)&qword_1EB705BA8);
}

unint64_t sub_1A72B257C(uint64_t a1)
{
  sub_1A7573790();
  uint64_t v2 = sub_1A7572510();

  return sub_1A72B3344(a1, v2);
}

unint64_t sub_1A72B25E0(unsigned __int8 a1)
{
  sub_1A75740C0();
  REMFeatureFlags.rawValue.getter();
  sub_1A75726F0();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1A7574110();

  return sub_1A72B34DC(a1, v2);
}

unint64_t sub_1A72B266C(uint64_t a1)
{
  uint64_t v2 = sub_1A7573180();
  return sub_1A72B3230(a1, v2, &qword_1E96F1140);
}

unint64_t sub_1A72B26BC(char a1)
{
  sub_1A75740C0();
  sub_1A756EF2C(a1);
  sub_1A75726F0();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1A7574110();

  return sub_1A72B3A78(a1, v2);
}

unint64_t sub_1A72B2744(void *a1, uint64_t a2, char a3)
{
  char v6 = a3 & 1;
  sub_1A75740C0();
  sub_1A75740D0();
  if (a3)
  {
    id v8 = a1;
    sub_1A75731A0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
    char v7 = (void *)sub_1A7572A00();
    sub_1A75731A0();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
    char v7 = (void *)sub_1A7572A00();
    sub_1A75731A0();
  }

  uint64_t v9 = sub_1A7574110();

  return sub_1A72B406C(a1, a2, v6, v9);
}

unint64_t sub_1A72B2844(unsigned __int8 a1)
{
  sub_1A75740C0();
  sub_1A75740D0();
  uint64_t v2 = sub_1A7574110();

  return sub_1A72B42A8(a1, v2);
}

unint64_t sub_1A72B28B0(uint64_t a1)
{
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A75740C0();
  sub_1A75726F0();
  uint64_t v2 = sub_1A7574110();
  swift_bridgeObjectRelease();

  return sub_1A72B4348(a1, v2);
}

unint64_t sub_1A72B2948(uint64_t a1)
{
  sub_1A75740C0();
  swift_bridgeObjectRetain();
  sub_1A75726F0();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1A7574110();
  return sub_1A72B455C(a1, v2);
}

unint64_t sub_1A72B29C8(uint64_t a1)
{
  sub_1A75740C0();
  sub_1A75740D0();
  uint64_t v2 = sub_1A7574110();

  return sub_1A72B44C0(a1, v2);
}

unint64_t sub_1A72B2A34(uint64_t a1)
{
  return sub_1A72B2A4C(a1, &qword_1E96F1068);
}

unint64_t sub_1A72B2A40(uint64_t a1)
{
  return sub_1A72B2A4C(a1, &qword_1E96F1008);
}

unint64_t sub_1A72B2A4C(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v4 = sub_1A7572510();
  return sub_1A72B4640(a1, v4, a2);
}

unint64_t sub_1A72B2ACC(uint64_t a1)
{
  return sub_1A72B2A4C(a1, &qword_1E96F1010);
}

unint64_t sub_1A72B2AD8(uint64_t a1)
{
  return sub_1A72B2A4C(a1, &qword_1E96F1018);
}

unint64_t sub_1A72B2AE4(uint64_t a1)
{
  return sub_1A72B2A4C(a1, &qword_1E96F1020);
}

unint64_t sub_1A72B2AF0(uint64_t a1)
{
  return sub_1A72B2A4C(a1, &qword_1E96F0FF8);
}

unint64_t sub_1A72B2AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    Swift::Int v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1A7573DB0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1A7573DB0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1A72B2BE0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xED00007265737261;
      uint64_t v8 = 0x5079726575516C6ELL;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE300000000000000;
          uint64_t v8 = 5131883;
          break;
        case 2:
          uint64_t v8 = 0x6168654265726F63;
          unint64_t v7 = 0xEC000000726F6976;
          break;
        case 3:
          uint64_t v8 = 0x6974736972756568;
          unint64_t v7 = 0xE900000000000063;
          break;
        case 4:
          uint64_t v8 = 0x6465726F68636E61;
          unint64_t v7 = 0xEE00656C62627542;
          break;
        case 5:
          unint64_t v7 = 0xE900000000000074;
          uint64_t v8 = 0x6867696C746F7073;
          break;
        default:
          break;
      }
      uint64_t v9 = 0x5079726575516C6ELL;
      unint64_t v10 = 0xED00007265737261;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE300000000000000;
          if (v8 == 5131883) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v10 = 0xEC000000726F6976;
          if (v8 != 0x6168654265726F63) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          unint64_t v10 = 0xE900000000000063;
          if (v8 != 0x6974736972756568) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          uint64_t v9 = 0x6465726F68636E61;
          unint64_t v10 = 0xEE00656C62627542;
          goto LABEL_17;
        case 5:
          unint64_t v10 = 0xE900000000000074;
          if (v8 != 0x6867696C746F7073) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
LABEL_17:
          if (v8 != v9) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v11 = sub_1A7573DB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1A72B2EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for REMObjectID_Codable();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1A7573190();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1A7573190();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1A72B2FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1A7571BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    char v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1A72BEE54((unint64_t *)&qword_1EB701410);
      char v15 = sub_1A75725C0();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_1A72B3168(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1A72BF138(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1AD0CB680](v9, a1);
      sub_1A72BF194((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1A72B3230(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1A72BEFEC(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_1A7573190();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_1A7573190();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1A72B3344(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_1A7573790();
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    char v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_1A75725C0();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_1A72B34DC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0x80000001A759E010;
      unint64_t v8 = 0xD000000000000010;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v8 = 0x6166654469726973;
          unint64_t v7 = 0xEF656D6954746C75;
          break;
        case 2:
          unint64_t v8 = 0xD000000000000020;
          unint64_t v9 = "";
          goto LABEL_19;
        case 3:
          unint64_t v8 = 0x6170655361746164;
          unint64_t v7 = 0xEE006E6F69746172;
          break;
        case 4:
          unint64_t v8 = 0xD000000000000014;
          unint64_t v9 = "ommittedReminder";
          goto LABEL_19;
        case 5:
          unint64_t v8 = 0xD00000000000001CLL;
          unint64_t v9 = "subtasksInSmartLists";
          goto LABEL_19;
        case 6:
          uint64_t v10 = "subtasksInSmartLists_watchOS";
          goto LABEL_16;
        case 7:
          unint64_t v8 = 0x744179426F646E75;
          unint64_t v7 = 0xEF65747562697274;
          break;
        case 8:
          unint64_t v8 = 0x6F65527961646F74;
          unint64_t v7 = 0xEF676E6972656472;
          break;
        case 9:
          uint64_t v10 = "ute";
LABEL_16:
          unint64_t v7 = (unint64_t)v10 | 0x8000000000000000;
          unint64_t v8 = 0xD000000000000013;
          break;
        case 0xA:
          unint64_t v8 = 0xD00000000000001BLL;
          unint64_t v9 = "groceryMultilingual";
          goto LABEL_19;
        case 0xB:
          unint64_t v7 = 0xEE006E6F69746174;
          unint64_t v8 = 0x6F6E6E4177656976;
          break;
        case 0xC:
          unint64_t v8 = 0x65746365746F7270;
          unint64_t v7 = 0xED00007370704164;
          break;
        case 0xD:
          unint64_t v8 = 0x6174537472616D73;
          unint64_t v7 = 0xEA00000000006B63;
          break;
        case 0xE:
          unint64_t v8 = 0xD000000000000011;
          unint64_t v9 = "ctedApps";
          goto LABEL_19;
        case 0xF:
          unint64_t v8 = 0xD00000000000001BLL;
          unint64_t v9 = "accentableWidgets";
LABEL_19:
          unint64_t v7 = (unint64_t)v9 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v11 = 0x80000001A759E010;
      unint64_t v12 = 0xD000000000000010;
      switch(v6)
      {
        case 1:
          uint64_t v13 = 0x6166654469726973;
          uint64_t v14 = 0x6D6954746C75;
          goto LABEL_27;
        case 2:
          unint64_t v12 = 0xD000000000000020;
          char v15 = "";
          goto LABEL_44;
        case 3:
          unint64_t v11 = 0xEE006E6F69746172;
          if (v8 != 0x6170655361746164) {
            goto LABEL_47;
          }
          goto LABEL_46;
        case 4:
          unint64_t v12 = 0xD000000000000014;
          char v15 = "ommittedReminder";
          goto LABEL_44;
        case 5:
          unint64_t v12 = 0xD00000000000001CLL;
          char v15 = "subtasksInSmartLists";
          goto LABEL_44;
        case 6:
          uint64_t v16 = "subtasksInSmartLists_watchOS";
          goto LABEL_39;
        case 7:
          uint64_t v13 = 0x744179426F646E75;
          uint64_t v14 = 0x747562697274;
LABEL_27:
          unint64_t v11 = v14 & 0xFFFFFFFFFFFFLL | 0xEF65000000000000;
          if (v8 != v13) {
            goto LABEL_47;
          }
          goto LABEL_46;
        case 8:
          unint64_t v11 = 0xEF676E6972656472;
          if (v8 != 0x6F65527961646F74) {
            goto LABEL_47;
          }
          goto LABEL_46;
        case 9:
          uint64_t v16 = "ute";
LABEL_39:
          unint64_t v11 = (unint64_t)v16 | 0x8000000000000000;
          if (v8 != 0xD000000000000013) {
            goto LABEL_47;
          }
          goto LABEL_46;
        case 10:
          unint64_t v12 = 0xD00000000000001BLL;
          char v15 = "groceryMultilingual";
          goto LABEL_44;
        case 11:
          unint64_t v11 = 0xEE006E6F69746174;
          if (v8 != 0x6F6E6E4177656976) {
            goto LABEL_47;
          }
          goto LABEL_46;
        case 12:
          unint64_t v11 = 0xED00007370704164;
          if (v8 != 0x65746365746F7270) {
            goto LABEL_47;
          }
          goto LABEL_46;
        case 13:
          unint64_t v11 = 0xEA00000000006B63;
          if (v8 != 0x6174537472616D73) {
            goto LABEL_47;
          }
          goto LABEL_46;
        case 14:
          unint64_t v12 = 0xD000000000000011;
          char v15 = "ctedApps";
          goto LABEL_44;
        case 15:
          unint64_t v12 = 0xD00000000000001BLL;
          char v15 = "accentableWidgets";
LABEL_44:
          unint64_t v11 = (unint64_t)v15 | 0x8000000000000000;
          break;
        default:
          break;
      }
      if (v8 == v12)
      {
LABEL_46:
        if (v7 == v11)
        {
          swift_bridgeObjectRelease_n();
          return v4;
        }
      }
LABEL_47:
      char v17 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_1A72B3A78(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEB00000000657079;
      unint64_t v8 = 0x54746E756F636361;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v8 = 0x6C6562614C676174;
          unint64_t v7 = 0xED0000746E756F43;
          break;
        case 2:
          unint64_t v7 = 0xEE00746E756F4374;
          unint64_t v8 = 0x73694C6C61746F74;
          break;
        case 3:
          unint64_t v8 = 0xD000000000000015;
          unint64_t v7 = 0x80000001A759EB70;
          break;
        case 4:
          unint64_t v8 = 0xD000000000000012;
          unint64_t v7 = 0x80000001A759EB90;
          break;
        case 5:
          unint64_t v8 = 0xD000000000000018;
          unint64_t v7 = 0x80000001A759EBB0;
          break;
        case 6:
          unint64_t v8 = 0xD000000000000017;
          unint64_t v7 = 0x80000001A759EBD0;
          break;
        case 7:
          unint64_t v8 = 0xD00000000000001ELL;
          unint64_t v7 = 0x80000001A759EBF0;
          break;
        case 8:
          unint64_t v8 = 0xD000000000000010;
          unint64_t v7 = 0x80000001A759EC10;
          break;
        case 9:
          unint64_t v8 = 0x756F4370756F7267;
          unint64_t v7 = 0xEA0000000000746ELL;
          break;
        case 0xA:
          unint64_t v8 = 0xD000000000000013;
          unint64_t v7 = 0x80000001A759EC30;
          break;
        case 0xB:
          unint64_t v9 = "parentReminderCount";
          goto LABEL_20;
        case 0xC:
          unint64_t v9 = "flaggedReminderCount";
          goto LABEL_20;
        case 0xD:
          unint64_t v8 = 0x6154656E696C6E69;
          unint64_t v7 = 0xEE00746E756F4367;
          break;
        case 0xE:
          unint64_t v8 = 0xD000000000000012;
          unint64_t v7 = 0x80000001A759ECA0;
          break;
        case 0xF:
          unint64_t v8 = 0x656D686361747461;
          unint64_t v7 = 0xEF746E756F43746ELL;
          break;
        case 0x10:
          unint64_t v9 = "nt";
LABEL_20:
          unint64_t v7 = (unint64_t)v9 | 0x8000000000000000;
          unint64_t v8 = 0xD000000000000014;
          break;
        case 0x11:
          unint64_t v8 = 0xD000000000000015;
          unint64_t v7 = 0x80000001A759ECF0;
          break;
        case 0x12:
          unint64_t v8 = 0xD00000000000001DLL;
          unint64_t v7 = 0x80000001A759ED10;
          break;
        case 0x13:
          unint64_t v8 = 0xD000000000000019;
          unint64_t v7 = 0x80000001A759ED30;
          break;
        default:
          break;
      }
      unint64_t v10 = 0x54746E756F636361;
      unint64_t v11 = 0xEB00000000657079;
      switch(v6)
      {
        case 1:
          unint64_t v11 = 0xED0000746E756F43;
          if (v8 == 0x6C6562614C676174) {
            goto LABEL_53;
          }
          goto LABEL_54;
        case 2:
          unint64_t v11 = 0xEE00746E756F4374;
          if (v8 != 0x73694C6C61746F74) {
            goto LABEL_54;
          }
          goto LABEL_53;
        case 3:
          unint64_t v12 = 0xD000000000000015;
          uint64_t v13 = "";
          goto LABEL_49;
        case 4:
          unint64_t v12 = 0xD000000000000012;
          uint64_t v13 = "totalGroceryListCount";
          goto LABEL_49;
        case 5:
          unint64_t v12 = 0xD000000000000018;
          uint64_t v13 = "totalReminderCount";
          goto LABEL_49;
        case 6:
          unint64_t v12 = 0xD000000000000017;
          uint64_t v13 = "softDeletedReminderCount";
          goto LABEL_49;
        case 7:
          unint64_t v12 = 0xD00000000000001ELL;
          uint64_t v13 = "incompleteReminderCount";
          goto LABEL_49;
        case 8:
          unint64_t v12 = 0xD000000000000010;
          uint64_t v13 = "incompleteGroceryReminderCount";
          goto LABEL_49;
        case 9:
          unint64_t v11 = 0xEA0000000000746ELL;
          if (v8 != 0x756F4370756F7267) {
            goto LABEL_54;
          }
          goto LABEL_53;
        case 10:
          unint64_t v12 = 0xD000000000000013;
          uint64_t v13 = "sharedListsCount";
          goto LABEL_49;
        case 11:
          uint64_t v14 = "parentReminderCount";
          goto LABEL_46;
        case 12:
          uint64_t v14 = "flaggedReminderCount";
          goto LABEL_46;
        case 13:
          unint64_t v11 = 0xEE00746E756F4367;
          if (v8 != 0x6154656E696C6E69) {
            goto LABEL_54;
          }
          goto LABEL_53;
        case 14:
          unint64_t v12 = 0xD000000000000012;
          uint64_t v13 = "ount";
          goto LABEL_49;
        case 15:
          unint64_t v11 = 0xEF746E756F43746ELL;
          if (v8 != 0x656D686361747461) {
            goto LABEL_54;
          }
          goto LABEL_53;
        case 16:
          uint64_t v14 = "nt";
LABEL_46:
          unint64_t v11 = (unint64_t)v14 | 0x8000000000000000;
          if (v8 != 0xD000000000000014) {
            goto LABEL_54;
          }
          goto LABEL_53;
        case 17:
          unint64_t v12 = 0xD000000000000015;
          uint64_t v13 = "nonDeletedAlarmCount";
LABEL_49:
          unint64_t v11 = (unint64_t)v13 | 0x8000000000000000;
          if (v8 != v12) {
            goto LABEL_54;
          }
          goto LABEL_53;
        case 18:
          unint64_t v10 = 0xD00000000000001DLL;
          unint64_t v11 = 0x80000001A759ED10;
          goto LABEL_52;
        case 19:
          unint64_t v11 = 0x80000001A759ED30;
          if (v8 != 0xD000000000000019) {
            goto LABEL_54;
          }
          goto LABEL_53;
        default:
LABEL_52:
          if (v8 != v10) {
            goto LABEL_54;
          }
LABEL_53:
          if (v7 == v11)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_54:
          char v15 = sub_1A7573DB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v15) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1A72B406C(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = v4;
    char v9 = a3;
    uint64_t v10 = ~v6;
    do
    {
      uint64_t v11 = *(void *)(v8 + 48) + 24 * v7;
      unint64_t v12 = *(void **)v11;
      uint64_t v13 = *(void *)(v11 + 8);
      if (*(unsigned char *)(v11 + 16))
      {
        if (v9)
        {
          sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
          sub_1A72BEEF4(v12, v13, 1);
          id v14 = v12;
          id v15 = a1;
          char v16 = sub_1A7573190();

          if (v16)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
            char v17 = (void *)sub_1A7572A00();
            uint64_t v18 = (void *)sub_1A7572A00();
            char v19 = sub_1A7573190();

            sub_1A72BEFB0(v12, v13, 1);
            char v9 = a3;
            if (v19) {
              return v7;
            }
          }
          else
          {
            sub_1A72BEFB0(v12, v13, 1);
            char v9 = a3;
          }
        }
      }
      else if ((v9 & 1) == 0)
      {
        sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
        uint64_t v20 = (void *)sub_1A7572A00();
        uint64_t v21 = (void *)sub_1A7572A00();
        char v22 = sub_1A7573190();

        sub_1A72BEFB0(v12, v13, 0);
        if (v22) {
          return v7;
        }
      }
      unint64_t v7 = (v7 + 1) & v10;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_1A72B42A8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1A72B4348(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v8 = v7;
    if (v6 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          uint64_t v15 = v14;
          if (v13 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v15 == v16) {
            break;
          }
          char v18 = sub_1A7573DB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1A72B44C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1A72B455C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    uint64_t v7 = *(void *)(v6 + 8 * v5);
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v9 = *(void *)(a1 + 24);
    BOOL v10 = *(void *)(v7 + 16) == v8 && *(void *)(v7 + 24) == v9;
    if (!v10 && (sub_1A7573DB0() & 1) == 0)
    {
      uint64_t v11 = ~v4;
      do
      {
        unint64_t v5 = (v5 + 1) & v11;
        if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
          break;
        }
        uint64_t v12 = *(void *)(v6 + 8 * v5);
        BOOL v13 = *(void *)(v12 + 16) == v8 && *(void *)(v12 + 24) == v9;
      }
      while (!v13 && (sub_1A7573DB0() & 1) == 0);
    }
  }
  return v5;
}

unint64_t sub_1A72B4640(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = ~v4;
    __swift_instantiateConcreteTypeFromMangledName(a3);
    do
    {
      if (sub_1A75725C0()) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

uint64_t sub_1A72B470C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFD38);
  uint64_t v6 = sub_1A7573900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_1A72BEE44((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1A72BF138(v25, (uint64_t)&v38);
      sub_1A72BEE98(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_1A7573470();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_1A72BEE44(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B4A24(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11F0);
  uint64_t v6 = sub_1A7573900();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1A72BEE44(v24, v35);
      }
      else
      {
        sub_1A72BEE98((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1A75740C0();
      sub_1A75726F0();
      uint64_t result = sub_1A7574110();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1A72BEE44(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B4D24(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = sub_1A7573790();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7054D0);
  int v45 = a2;
  uint64_t v9 = sub_1A7573900();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    long long v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    char v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    uint64_t v42 = v8;
    uint64_t v43 = v7;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v45)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
                if (v36 >= 64) {
                  bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v40 = -1 << v36;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
      unint64_t v27 = v43;
      uint64_t v28 = v44;
      if (v45)
      {
        (*v46)(v43, v26, v44);
        sub_1A72BEE44((_OWORD *)(*(void *)(v8 + 56) + 32 * v20), v47);
      }
      else
      {
        (*v41)(v43, v26, v44);
        sub_1A72BEE98(*(void *)(v8 + 56) + 32 * v20, (uint64_t)v47);
      }
      uint64_t result = sub_1A7572510();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v15 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      (*v46)((char *)(*(void *)(v10 + 48) + v25 * v18), (unint64_t)v27, v28);
      uint64_t result = (uint64_t)sub_1A72BEE44(v47, (_OWORD *)(*(void *)(v10 + 56) + 32 * v18));
      ++*(void *)(v10 + 16);
      uint64_t v5 = v24;
      uint64_t v8 = v42;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1A72B5120(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11B0);
  char v37 = a2;
  uint64_t v6 = sub_1A7573900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  BOOL v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1A75740C0();
    sub_1A75726F0();
    uint64_t result = sub_1A7574110();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B542C(uint64_t a1, char a2)
{
  return sub_1A72B7678(a1, a2, &qword_1E96F11E0);
}

uint64_t sub_1A72B5438(uint64_t a1, char a2)
{
  return sub_1A72B7678(a1, a2, &qword_1E96F11D8);
}

uint64_t sub_1A72B5444(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11D0);
  char v40 = a2;
  uint64_t v6 = sub_1A7573900();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    long long v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = (uint64_t *)(*(void *)(v5 + 56) + 24 * v21);
      uint64_t v33 = *v32;
      uint64_t v34 = v32[1];
      uint64_t v35 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1A75740C0();
      sub_1A75726F0();
      uint64_t result = sub_1A7574110();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      unint64_t v19 = (void *)(*(void *)(v7 + 56) + 24 * v17);
      *unint64_t v19 = v33;
      v19[1] = v34;
      v19[2] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B576C(uint64_t a1, char a2)
{
  return sub_1A72B855C(a1, a2, &qword_1E96F11C0);
}

uint64_t sub_1A72B5778(uint64_t a1, char a2)
{
  return sub_1A72B855C(a1, a2, &qword_1E96F0FE8);
}

uint64_t sub_1A72B5784(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11C8);
  char v39 = a2;
  uint64_t v6 = sub_1A7573900();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    long long v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v39)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = (uint64_t *)(*(void *)(v5 + 56) + 24 * v21);
      uint64_t v33 = *v32;
      uint64_t v35 = v32[1];
      uint64_t v34 = v32[2];
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1A75740C0();
      sub_1A75726F0();
      uint64_t result = sub_1A7574110();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      unint64_t v19 = (void *)(*(void *)(v7 + 56) + 24 * v17);
      *unint64_t v19 = v33;
      v19[1] = v35;
      v19[2] = v34;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B5AAC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705920);
  uint64_t v6 = sub_1A7573900();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v33 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v15 << 6);
      }
      else
      {
        int64_t v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v19 >= v12) {
          goto LABEL_34;
        }
        unint64_t v20 = v9[v19];
        ++v15;
        if (!v20)
        {
          int64_t v15 = v19 + 1;
          if (v19 + 1 >= v12) {
            goto LABEL_34;
          }
          unint64_t v20 = v9[v15];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v12)
            {
LABEL_34:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v33;
                goto LABEL_41;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v32;
              }
              uint64_t v3 = v33;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_43;
                }
                if (v15 >= v12) {
                  goto LABEL_34;
                }
                unint64_t v20 = v9[v15];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v15 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      int64_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v18);
      unint64_t v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v18);
      if (a2)
      {
        sub_1A72BEE44(v23, v34);
      }
      else
      {
        sub_1A72BEE98((uint64_t)v23, (uint64_t)v34);
        id v24 = v22;
      }
      uint64_t result = sub_1A7573180();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v13 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v16 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v22;
      uint64_t result = (uint64_t)sub_1A72BEE44(v34, (_OWORD *)(*(void *)(v7 + 56) + 32 * v16));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B5D80(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11A8);
  uint64_t result = sub_1A7573900();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v9;
    uint64_t v32 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero(v34, 8 * v33);
                }
                else {
                  *uint64_t v34 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      char v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1A75740B0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      unint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      *unint64_t v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B6038(uint64_t a1, char a2)
{
  return sub_1A72B6314(a1, a2, &qword_1E96F11A0);
}

uint64_t sub_1A72B6044(uint64_t a1, char a2)
{
  return sub_1A72B687C(a1, a2, &qword_1E96F1158);
}

uint64_t sub_1A72B6050(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1160);
  uint64_t result = sub_1A7573900();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1A75740B0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B6308(uint64_t a1, char a2)
{
  return sub_1A72B6314(a1, a2, &qword_1E96F1168);
}

uint64_t sub_1A72B6314(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_1A7573900();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    char v36 = a2;
    uint64_t v35 = v4;
    int64_t v9 = 0;
    uint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v33 = -1 << v11;
    uint64_t v34 = v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    int64_t v14 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v19 = v18 | (v9 << 6);
      }
      else
      {
        int64_t v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v20 >= v14) {
          goto LABEL_31;
        }
        unint64_t v21 = v10[v20];
        ++v9;
        if (!v21)
        {
          int64_t v9 = v20 + 1;
          if (v20 + 1 >= v14) {
            goto LABEL_31;
          }
          unint64_t v21 = v10[v9];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_31:
              if ((v36 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v35;
                goto LABEL_38;
              }
              if (v34 >= 64) {
                bzero((void *)(v6 + 64), 8 * v14);
              }
              else {
                uint64_t *v10 = v33;
              }
              uint64_t v4 = v35;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v21 = v10[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v9 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_40;
                }
                if (v9 >= v14) {
                  goto LABEL_31;
                }
                unint64_t v21 = v10[v9];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v9 = v22;
          }
        }
LABEL_21:
        unint64_t v13 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      uint64_t v23 = 8 * v19;
      uint64_t v24 = *(void *)(*(void *)(v6 + 48) + v23);
      uint64_t v25 = *(void *)(*(void *)(v6 + 56) + v23);
      uint64_t result = sub_1A75740B0();
      uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v15 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v27) & ~*(void *)(v15 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v15 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v16 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v8 + 48) + v17) = v24;
      *(void *)(*(void *)(v8 + 56) + v17) = v25;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1A72B65B8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1170);
  uint64_t result = sub_1A7573900();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    uint64_t v32 = v3;
    int64_t v8 = 0;
    int64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v30 = -1 << v10;
    uint64_t v31 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *int64_t v9 = v30;
              }
              uint64_t v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      char v22 = *(unsigned char *)(*(void *)(v5 + 56) + v17);
      uint64_t result = sub_1A75740B0();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      *(unsigned char *)(*(void *)(v7 + 56) + v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B6858(uint64_t a1, char a2)
{
  return sub_1A72B687C(a1, a2, &qword_1E96F1178);
}

uint64_t sub_1A72B6864(uint64_t a1, char a2)
{
  return sub_1A72B687C(a1, a2, &qword_1E96F1180);
}

uint64_t sub_1A72B6870(uint64_t a1, char a2)
{
  return sub_1A72B687C(a1, a2, &qword_1E96F1188);
}

uint64_t sub_1A72B687C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_1A7573900();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v32 = -1 << v11;
    uint64_t v33 = v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    int64_t v34 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34) {
          goto LABEL_33;
        }
        unint64_t v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v23 = v10[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if (a2)
              {
                if (v33 >= 64) {
                  bzero((void *)(v6 + 64), 8 * v34);
                }
                else {
                  uint64_t *v10 = v32;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v9 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v23 = v10[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void *)(*(void *)(v6 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v6 + 56) + v29);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = sub_1A75740B0();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v8 + 48) + v19) = v30;
      *(void *)(*(void *)(v8 + 56) + v19) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1A72B6B30(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = sub_1A7571B60();
  uint64_t v5 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1190);
  int v40 = a2;
  uint64_t result = sub_1A7573900();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    char v36 = v3;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    long long v38 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v37 = (unint64_t)(v13 + 63) >> 6;
    char v39 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    unint64_t v16 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v20 = v19 | (v11 << 6);
      }
      else
      {
        int64_t v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v38;
        if (v21 >= v37) {
          goto LABEL_34;
        }
        unint64_t v22 = v38[v21];
        ++v11;
        if (!v22)
        {
          int64_t v11 = v21 + 1;
          if (v21 + 1 >= v37) {
            goto LABEL_34;
          }
          unint64_t v22 = v38[v11];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_34:
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v36;
                goto LABEL_41;
              }
              uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
              if (v35 >= 64) {
                bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *long long v38 = -1 << v35;
              }
              uint64_t v3 = v36;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v11 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v37) {
                  goto LABEL_34;
                }
                unint64_t v22 = v38[v11];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v23;
          }
        }
LABEL_21:
        unint64_t v15 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = v5;
      uint64_t v26 = *(void *)(v5 + 72);
      unint64_t v27 = *(void *)(v8 + 56) + v26 * v20;
      if (v40) {
        (*v16)(v7, v27, v41);
      }
      else {
        (*v39)(v7, v27, v41);
      }
      uint64_t result = sub_1A75740B0();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v17 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v10 + 48) + 8 * v18) = v24;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v16)(*(void *)(v10 + 56) + v26 * v18, v7, v41);
      ++*(void *)(v10 + 16);
      uint64_t v5 = v25;
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1A72B6ED8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1198);
  uint64_t result = sub_1A7573900();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = v3;
    int64_t v35 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v35);
              }
              else {
                *int64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      unint64_t v30 = *(void **)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        id v31 = v30;
      }
      uint64_t result = sub_1A75740B0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_1A72B718C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700140);
  uint64_t v6 = (void *)sub_1A7573900();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v21 = 1 << *(unsigned char *)(v5 + 32);
                if (v21 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v21;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_1A72BADC8(v19, v20, v6);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1A72B7370(uint64_t a1, char a2)
{
  return sub_1A72B7F6C(a1, a2, (uint64_t *)&unk_1E96F1148);
}

uint64_t sub_1A72B737C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F1100);
  uint64_t v6 = sub_1A7573900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    id v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_retain();
    }
    uint64_t result = sub_1A7573180();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B7654(uint64_t a1, char a2)
{
  return sub_1A72B7F6C(a1, a2, &qword_1E96F1120);
}

uint64_t sub_1A72B7660(uint64_t a1, char a2)
{
  return sub_1A72B7678(a1, a2, &qword_1E96F1138);
}

uint64_t sub_1A72B766C(uint64_t a1, char a2)
{
  return sub_1A72B7678(a1, a2, &qword_1E96F1118);
}

uint64_t sub_1A72B7678(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v7 = sub_1A7573900();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  int64_t v37 = v3;
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    unint64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v37;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    uint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    id v33 = *(void **)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      id v35 = v33;
    }
    uint64_t result = sub_1A7573180();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v37;
  unint64_t v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1A72B7948(uint64_t a1, char a2)
{
  return sub_1A72B7F6C(a1, a2, &qword_1E96F1130);
}

uint64_t sub_1A72B7954(uint64_t a1, char a2)
{
  return sub_1A72B7F6C(a1, a2, &qword_1E96F1128);
}

uint64_t sub_1A72B7960(uint64_t a1, char a2)
{
  return sub_1A72B7F6C(a1, a2, &qword_1EB7054C8);
}

uint64_t sub_1A72B796C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0FB8);
  uint64_t v6 = sub_1A7573900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  char v33 = a2;
  id v34 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v16 = v15 | (v13 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_39;
  }
  if (v17 >= v11)
  {
    swift_release();
    uint64_t v3 = v34;
    unint64_t v18 = (void *)(v5 + 64);
    if (v33)
    {
LABEL_34:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v18 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v35 + 8 * v17);
    ++v13;
    if (v19) {
      goto LABEL_21;
    }
    int64_t v13 = v17 + 1;
    if (v17 + 1 >= v11) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v35 + 8 * v13);
    if (v19)
    {
LABEL_21:
      unint64_t v10 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
      char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      sub_1A75740C0();
      sub_1A75726F0();
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_1A7574110();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v28 || (v27 & 1) == 0)
      {
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
        if (v30 != -1)
        {
          unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_7:
          *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
          *(unsigned char *)(*(void *)(v7 + 48) + v14) = v21;
          *(void *)(*(void *)(v7 + 56) + 8 * v14) = v22;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      JUMPOUT(0x1A72B7F10);
    }
    int64_t v20 = v17 + 2;
    if (v20 < v11)
    {
      unint64_t v19 = *(void *)(v35 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          int64_t v13 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_40;
          }
          if (v13 >= v11) {
            goto LABEL_31;
          }
          unint64_t v19 = *(void *)(v35 + 8 * v13);
          ++v20;
          if (v19) {
            goto LABEL_21;
          }
        }
      }
      int64_t v13 = v20;
      goto LABEL_21;
    }
LABEL_31:
    swift_release();
    uint64_t v3 = v34;
    if (v33) {
      goto LABEL_34;
    }
  }
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B7F60(uint64_t a1, char a2)
{
  return sub_1A72B7F6C(a1, a2, (uint64_t *)&unk_1E96F1080);
}

uint64_t sub_1A72B7F6C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v39 = a2;
  uint64_t v7 = sub_1A7573900();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  uint64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    uint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    char v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_1A75740C0();
    sub_1A75726F0();
    uint64_t result = sub_1A7574110();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  uint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1A72B8278(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1110);
  uint64_t v6 = sub_1A7573900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_1A7573180();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B8550(uint64_t a1, char a2)
{
  return sub_1A72B855C(a1, a2, &qword_1E96F10F8);
}

uint64_t sub_1A72B855C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_1A7573900();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    uint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A75740C0();
    sub_1A75726F0();
    uint64_t result = sub_1A7574110();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *uint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1A72B8870(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703CB0);
  uint64_t v6 = v5;
  uint64_t v7 = sub_1A7573900();
  uint64_t v47 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v46 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v44 = v2;
  int64_t v45 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v48 = v13;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v19 >= v45) {
      break;
    }
    unint64_t v20 = v46;
    unint64_t v21 = v46[v19];
    int64_t v22 = v13 + 1;
    if (!v21)
    {
      int64_t v22 = v13 + 2;
      if (v13 + 2 >= v45) {
        goto LABEL_36;
      }
      unint64_t v21 = v46[v22];
      if (!v21)
      {
        uint64_t v23 = v13 + 3;
        if (v13 + 3 >= v45)
        {
LABEL_36:
          swift_release();
          uint64_t v3 = v44;
          if ((a2 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }
        unint64_t v21 = v46[v23];
        if (!v21)
        {
          while (1)
          {
            int64_t v22 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_45;
            }
            if (v22 >= v45) {
              goto LABEL_36;
            }
            unint64_t v21 = v46[v22];
            ++v23;
            if (v21) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v13 + 3;
      }
    }
LABEL_21:
    unint64_t v10 = (v21 - 1) & v21;
    int64_t v48 = v22;
    unint64_t v18 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_22:
    uint64_t v24 = *(void *)(v6 + 48) + 24 * v18;
    int64_t v25 = *(void **)v24;
    uint64_t v26 = *(void *)(v24 + 8);
    char v27 = *(unsigned char *)(v24 + 16);
    uint64_t v28 = *(void *)(v6 + 56) + 40 * v18;
    uint64_t v29 = *(void *)(v28 + 8);
    uint64_t v50 = *(void **)v28;
    uint64_t v30 = *(void *)(v28 + 16);
    uint64_t v52 = *(void *)(v28 + 24);
    char v51 = *(unsigned char *)(v28 + 32);
    if ((a2 & 1) == 0)
    {
      sub_1A72BEEF4(v25, v26, v27);
      sub_1A72BEF30(v50, v29, v30, v52, v51);
    }
    sub_1A75740C0();
    uint64_t v49 = v30;
    uint64_t v31 = v29;
    sub_1A75740D0();
    if (v27)
    {
      uint64_t v32 = a2;
      uint64_t v33 = v6;
      id v34 = v25;
      sub_1A75731A0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
      int64_t v35 = (void *)sub_1A7572A00();
      sub_1A75731A0();

      uint64_t v6 = v33;
      a2 = v32;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C90);
      int64_t v35 = (void *)sub_1A7572A00();
      sub_1A75731A0();
    }

    uint64_t result = sub_1A7574110();
    uint64_t v36 = -1 << *(unsigned char *)(v47 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v11 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v37) & ~*(void *)(v11 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v11 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v14 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v47 + 48) + 24 * v14;
    *(void *)uint64_t v15 = v25;
    *(void *)(v15 + 8) = v26;
    *(unsigned char *)(v15 + 16) = v27;
    uint64_t v16 = *(void *)(v47 + 56) + 40 * v14;
    *(void *)uint64_t v16 = v50;
    *(void *)(v16 + 8) = v31;
    int64_t v13 = v48;
    *(void *)(v16 + 16) = v49;
    *(void *)(v16 + 24) = v52;
    *(unsigned char *)(v16 + 32) = v51;
    ++*(void *)(v47 + 16);
  }
  swift_release();
  uint64_t v3 = v44;
  unint64_t v20 = v46;
  if ((a2 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v43 = 1 << *(unsigned char *)(v6 + 32);
  if (v43 >= 64) {
    bzero(v20, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v20 = -1 << v43;
  }
  *(void *)(v6 + 16) = 0;
LABEL_43:
  uint64_t result = swift_release();
  *uint64_t v3 = v47;
  return result;
}

uint64_t sub_1A72B8C80(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F10E8);
  uint64_t result = sub_1A7573900();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v30) {
          goto LABEL_33;
        }
        unint64_t v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v20 = v31[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v20 = v31[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      char v27 = *(void **)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        id v28 = v27;
      }
      sub_1A75740C0();
      sub_1A75740D0();
      uint64_t result = sub_1A7574110();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B8F4C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F10E0);
  uint64_t v6 = sub_1A7573900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  char v32 = a2;
  uint64_t v33 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v15 = v14 | (v12 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_39;
  }
  if (v16 >= v34)
  {
    swift_release();
    uint64_t v3 = v33;
    unint64_t v17 = (void *)(v5 + 64);
    if (v32)
    {
LABEL_34:
      uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
      if (v30 >= 64) {
        bzero(v17, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v17 = -1 << v30;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v35 + 8 * v16);
    ++v12;
    if (v18) {
      goto LABEL_21;
    }
    int64_t v12 = v16 + 1;
    if (v16 + 1 >= v34) {
      goto LABEL_31;
    }
    unint64_t v18 = *(void *)(v35 + 8 * v12);
    if (v18)
    {
LABEL_21:
      unint64_t v10 = (v18 - 1) & v18;
      unint64_t v15 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_22:
      char v20 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      char v21 = *(unsigned char *)(*(void *)(v5 + 56) + v15);
      sub_1A75740C0();
      sub_1A75726F0();
      swift_bridgeObjectRelease();
      uint64_t v22 = sub_1A7574110();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = v22 & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      while (++v25 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v25);
        if (v29 != -1)
        {
          unint64_t v13 = __clz(__rbit64(~v29)) + (v25 << 6);
LABEL_7:
          *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          *(unsigned char *)(*(void *)(v7 + 48) + v13) = v20;
          *(unsigned char *)(*(void *)(v7 + 56) + v13) = v21;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      JUMPOUT(0x1A72B9450);
    }
    int64_t v19 = v16 + 2;
    if (v19 < v34)
    {
      unint64_t v18 = *(void *)(v35 + 8 * v19);
      if (!v18)
      {
        while (1)
        {
          int64_t v12 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            goto LABEL_40;
          }
          if (v12 >= v34) {
            goto LABEL_31;
          }
          unint64_t v18 = *(void *)(v35 + 8 * v12);
          ++v19;
          if (v18) {
            goto LABEL_21;
          }
        }
      }
      int64_t v12 = v19;
      goto LABEL_21;
    }
LABEL_31:
    swift_release();
    uint64_t v3 = v33;
    if (v32) {
      goto LABEL_34;
    }
  }
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B9490(uint64_t a1, char a2)
{
  return sub_1A72B9D6C(a1, a2, &qword_1E96F10D8);
}

uint64_t sub_1A72B949C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F10D0);
  char v36 = a2;
  uint64_t v6 = sub_1A7573900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A75740C0();
    sub_1A75726F0();
    uint64_t result = sub_1A7574110();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B97B4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F10C8);
  uint64_t result = sub_1A7573900();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1A75740B0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B9A6C(uint64_t a1, char a2)
{
  return sub_1A72B9D6C(a1, a2, &qword_1E96F10C0);
}

uint64_t sub_1A72B9A78(uint64_t a1, char a2)
{
  return sub_1A72B9D6C(a1, a2, &qword_1E96F10B8);
}

uint64_t sub_1A72B9A84(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F10B0);
  uint64_t result = sub_1A7573900();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v32 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v31 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v31) {
          goto LABEL_33;
        }
        unint64_t v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v21 = v32[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v32 = -1 << v30;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v31) {
                  goto LABEL_33;
                }
                unint64_t v21 = v32[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = 8 * v19;
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + v27);
      uint64_t v29 = *(void *)(*(void *)(v5 + 56) + v27);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1A75740C0();
      sub_1A75740D0();
      uint64_t result = sub_1A7574110();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v7 + 48) + v17) = v28;
      *(void *)(*(void *)(v7 + 56) + v17) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72B9D60(uint64_t a1, char a2)
{
  return sub_1A72B9D6C(a1, a2, &qword_1E96F10A8);
}

uint64_t sub_1A72B9D6C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v36 = a2;
  uint64_t v7 = sub_1A7573900();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v35 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v34) {
      break;
    }
    char v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v35 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v35 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v35 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v34) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v35 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void *)(*(void *)(v6 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v6 + 56) + v30);
    if ((v36 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_1A75740C0();
    swift_bridgeObjectRetain();
    sub_1A75726F0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A7574110();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v8 + 48) + v19) = v31;
    *(void *)(*(void *)(v8 + 56) + v19) = v32;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  char v23 = (void *)(v6 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v6 + 32);
  if (v33 >= 64) {
    bzero(v23, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v23 = -1 << v33;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1A72BA094(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F1090);
  char v37 = a2;
  uint64_t v6 = sub_1A7573900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1A75740C0();
    sub_1A75726F0();
    uint64_t result = sub_1A7574110();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72BA3A0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = sub_1A7571B60();
  uint64_t v5 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  int64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1070);
  int v47 = a2;
  uint64_t v8 = sub_1A7573900();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  int64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    unint64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    uint64_t v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_1A75740C0();
    sub_1A75726F0();
    uint64_t result = sub_1A7574110();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    *unint64_t v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_1A72BA788(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1000);
  char v42 = a2;
  uint64_t v6 = sub_1A7573900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    unint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A75740C0();
    sub_1A75726F0();
    uint64_t result = sub_1A7574110();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A72BAAB0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0FF0);
  char v36 = a2;
  uint64_t v6 = sub_1A7573900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1A75740C0();
    sub_1A75726F0();
    uint64_t result = sub_1A7574110();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_1A72BADC8(char a1, uint64_t a2, void *a3)
{
  sub_1A75740C0();
  sub_1A75726F0();
  swift_bridgeObjectRelease();
  sub_1A7574110();
  unint64_t result = sub_1A75733A0();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

void *sub_1A72BAF68()
{
  int64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFD38);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *int64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_1A72BF138(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_1A72BEE98(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    unint64_t result = sub_1A72BEE44(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BB150()
{
  int64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_28:
    *int64_t v1 = v4;
    return result;
  }
  char v25 = v1;
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1A72BEE98(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_1A72BEE44(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    int64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A72BB338()
{
  int64_t v1 = v0;
  uint64_t v2 = sub_1A7573790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7054D0);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1A75738F0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_25:
    *int64_t v1 = v8;
    return result;
  }
  int64_t v22 = v1;
  unint64_t result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    unint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v23 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v25 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v24) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v23 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 32 * v16;
    sub_1A72BEE98(*(void *)(v6 + 56) + v18, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    unint64_t result = sub_1A72BEE44(v26, (_OWORD *)(*(void *)(v8 + 56) + v18));
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v24)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    int64_t v1 = v22;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1A72BB5E0()
{
  int64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *int64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A72BB790()
{
  return sub_1A72BCEC4(&qword_1E96F11E0);
}

id sub_1A72BB79C()
{
  return sub_1A72BCEC4(&qword_1E96F11D8);
}

void *sub_1A72BB7A8()
{
  int64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *int64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = (uint64_t *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = v21[2];
    int64_t v25 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v25 = v19;
    v25[1] = v18;
    uint64_t v26 = (void *)(*(void *)(v4 + 56) + v20);
    *uint64_t v26 = v22;
    v26[1] = v23;
    _OWORD v26[2] = v24;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BB974()
{
  int64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0FE8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *int64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BBB2C()
{
  int64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *int64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = (uint64_t *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = v21[2];
    int64_t v25 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v25 = v19;
    v25[1] = v18;
    uint64_t v26 = (void *)(*(void *)(v4 + 56) + v20);
    *uint64_t v26 = v22;
    v26[1] = v23;
    _OWORD v26[2] = v24;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A72BBCF8()
{
  int64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705920);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *int64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_1A72BEE98(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_1A72BEE44(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BBEC0()
{
  int64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *int64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *uint64_t v22 = v21;
    v22[1] = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BC070()
{
  return sub_1A72BC238(&qword_1E96F11A0);
}

void *sub_1A72BC07C()
{
  return sub_1A72BC574(&qword_1E96F1158);
}

void *sub_1A72BC088()
{
  int64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1160);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *int64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BC22C()
{
  return sub_1A72BC238(&qword_1E96F1168);
}

void *sub_1A72BC238(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1A75738F0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v22 = __clz(__rbit64(v20));
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = v22 + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BC3C0()
{
  int64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1170);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *int64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BC550()
{
  return sub_1A72BC574(&qword_1E96F1178);
}

void *sub_1A72BC55C()
{
  return sub_1A72BC574(&qword_1E96F1180);
}

void *sub_1A72BC568()
{
  return sub_1A72BC574(&qword_1E96F1188);
}

void *sub_1A72BC574(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1A75738F0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    id result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BC710()
{
  uint64_t v1 = sub_1A7571B60();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1190);
  int64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1A75738F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *int64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
    unint64_t v18 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v18, v1);
    *(void *)(*(void *)(v7 + 48) + v16) = v17;
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v18, v4, v1);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1A72BC9A0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1198);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BCB44()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700140);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A72BCCE8()
{
  return sub_1A72BD224((uint64_t *)&unk_1E96F1148);
}

void *sub_1A72BCCF4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F1100);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A72BCEA0()
{
  return sub_1A72BD224(&qword_1E96F1120);
}

id sub_1A72BCEAC()
{
  return sub_1A72BCEC4(&qword_1E96F1138);
}

id sub_1A72BCEB8()
{
  return sub_1A72BCEC4(&qword_1E96F1118);
}

id sub_1A72BCEC4(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1A75738F0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    id v19 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A72BD064()
{
  return sub_1A72BD224(&qword_1E96F1130);
}

id sub_1A72BD070()
{
  return sub_1A72BD224(&qword_1E96F1128);
}

id sub_1A72BD07C()
{
  return sub_1A72BD224(&qword_1EB7054C8);
}

void *sub_1A72BD088()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0FB8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A72BD218()
{
  return sub_1A72BD224((uint64_t *)&unk_1E96F1080);
}

id sub_1A72BD224(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1A75738F0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    int64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    unint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *unint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BD3D0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1110);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BD57C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703CB0);
  uint64_t v31 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1A75738F0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v31 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  uint64_t v32 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v11) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v32 + 8 * v28);
    ++v7;
    if (!v29)
    {
      int64_t v7 = v28 + 1;
      if (v28 + 1 >= v11) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v32 + 8 * v7);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v29 - 1) & v29;
    unint64_t v13 = __clz(__rbit64(v29)) + (v7 << 6);
LABEL_12:
    uint64_t v14 = 24 * v13;
    uint64_t v15 = *(void *)(v1 + 56);
    uint64_t v16 = *(void *)(v1 + 48) + 24 * v13;
    uint64_t v17 = *(void **)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    char v19 = *(unsigned char *)(v16 + 16);
    uint64_t v20 = 40 * v13;
    unint64_t v21 = *(void **)(v15 + v20);
    uint64_t v22 = *(void *)(v15 + v20 + 8);
    uint64_t v23 = *(void *)(v15 + v20 + 16);
    uint64_t v24 = *(void *)(v15 + v20 + 24);
    char v25 = *(unsigned char *)(v15 + v20 + 32);
    uint64_t v26 = *(void *)(v3 + 48) + v14;
    *(void *)uint64_t v26 = *(void *)v16;
    *(void *)(v26 + 8) = v18;
    *(unsigned char *)(v26 + 16) = v19;
    uint64_t v27 = *(void *)(v3 + 56) + v20;
    *(void *)uint64_t v27 = v21;
    *(void *)(v27 + 8) = v22;
    *(void *)(v27 + 16) = v23;
    *(void *)(v27 + 24) = v24;
    *(unsigned char *)(v27 + 32) = v25;
    sub_1A72BEEF4(v17, v18, v19);
    id result = sub_1A72BEF30(v21, v22, v23, v24, v25);
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v11) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v32 + 8 * v30);
  if (v29)
  {
    int64_t v7 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v7 >= v11) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v32 + 8 * v7);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A72BD78C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F10E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BD930()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F10E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BDABC()
{
  return sub_1A72BDFEC(&qword_1E96F10D8);
}

void *sub_1A72BDAC8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F10D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BDC80()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F10C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BDE24()
{
  return sub_1A72BDFEC(&qword_1E96F10C0);
}

void *sub_1A72BDE30()
{
  return sub_1A72BDFEC(&qword_1E96F10B8);
}

void *sub_1A72BDE3C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F10B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BDFE0()
{
  return sub_1A72BDFEC(&qword_1E96F10A8);
}

void *sub_1A72BDFEC(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1A75738F0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    swift_retain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BE190()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F1090);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    int64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *int64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BE33C()
{
  uint64_t v35 = sub_1A7571B60();
  uint64_t v1 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1070);
  int64_t v30 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_1A75738F0();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v36 = v5;
  if (!v6)
  {
    id result = (void *)swift_release();
    uint64_t v28 = v36;
    uint64_t v27 = v30;
LABEL_25:
    *uint64_t v27 = v28;
    return result;
  }
  uint64_t v7 = v5;
  id result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v36;
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v31 = v4 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v33 = v1 + 32;
  uint64_t v34 = v1 + 16;
  uint64_t v14 = v35;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v21, v14);
    uint64_t v22 = v36;
    unint64_t v23 = (void *)(*(void *)(v36 + 48) + v17);
    *unint64_t v23 = v19;
    v23[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v22 + 56) + v21, v3, v14);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v27 = v30;
    uint64_t v28 = v36;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1A72BE600()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1000);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A72BE7BC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0FF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A75738F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1A72BE974(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96F1200);
  uint64_t v3 = (void *)sub_1A7573920();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_1A72B23E4(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  unint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    int64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_retain();
    unint64_t result = sub_1A72B23E4(v5);
    unint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1A72BEA74()
{
  unint64_t result = qword_1E96F0F98;
  if (!qword_1E96F0F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F0F98);
  }
  return result;
}

unint64_t sub_1A72BEACC()
{
  unint64_t result = qword_1E96F0FA0;
  if (!qword_1E96F0FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F0FA0);
  }
  return result;
}

uint64_t type metadata accessor for KMeansAutoTuner()
{
  return self;
}

uint64_t method lookup function for KMeansAutoTuner(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for KMeansAutoTuner);
}

uint64_t dispatch thunk of KMeansAutoTuner.__allocating_init(pointCloud:mathod:minK:maxK:maxIter:randomGenerator:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t destroy for KMeansAutoTuner.KMeanTuningHistory()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for KMeansAutoTuner.KMeanTuningHistory(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for KMeansAutoTuner.KMeanTuningHistory(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for KMeansAutoTuner.KMeanTuningHistory(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KMeansAutoTuner.KMeanTuningHistory(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KMeansAutoTuner.KMeanTuningHistory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KMeansAutoTuner.KMeanTuningHistory()
{
  return &type metadata for KMeansAutoTuner.KMeanTuningHistory;
}

uint64_t getEnumTagSinglePayload for KMeansAutoTuner.TuningMethod(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for KMeansAutoTuner.TuningMethod(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A72BEDE4);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A72BEE0C()
{
  return 0;
}

ValueMetadata *type metadata accessor for KMeansAutoTuner.TuningMethod()
{
  return &type metadata for KMeansAutoTuner.TuningMethod;
}

ValueMetadata *type metadata accessor for KMeansAutoTuner.MoreClustersThanPointsError()
{
  return &type metadata for KMeansAutoTuner.MoreClustersThanPointsError;
}

ValueMetadata *type metadata accessor for KMeansAutoTuner.InvalidSearchingIntervalError()
{
  return &type metadata for KMeansAutoTuner.InvalidSearchingIntervalError;
}

_OWORD *sub_1A72BEE44(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1A72BEE54(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A7571BC0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A72BEE98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1A72BEEF4(void *a1, uint64_t a2, char a3)
{
  if (a3)
  {
    id v4 = a1;
    uint64_t v3 = vars8;
  }
  return swift_bridgeObjectRetain();
}

id sub_1A72BEF30(void *a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    return sub_1A72BEFA4(a1);
  }
  else
  {
    sub_1A72BEF8C(a1, a2);
    swift_retain();
    return (id)swift_retain();
  }
}

id sub_1A72BEF8C(id a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1A72BEFA4(a1);
  }
  return a1;
}

id sub_1A72BEFA4(id a1)
{
  return a1;
}

uint64_t sub_1A72BEFB0(void *a1, uint64_t a2, char a3)
{
  if (a3)
  {

    uint64_t v3 = vars8;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A72BEFEC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1A72BF028(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11A8);
  uint64_t v3 = (void *)sub_1A7573920();
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t result = sub_1A72B23E4(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    uint64_t v10 = (void *)(v3[7] + 16 * result);
    void *v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 3;
    uint64_t v4 = *(v9 - 2);
    uint64_t v5 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A72B23E4(v4);
    uint64_t v9 = v14;
    uint64_t v6 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A72BF138(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A72BF194(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A72BF1E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t PromiseError.errorCode.getter()
{
  sub_1A72BF2A0(v0, (uint64_t)v2);
  uint64_t result = v3;
  if (v3 >= 2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    return 2;
  }
  return result;
}

uint64_t sub_1A72BF2A0(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t PromiseError.errorUserInfo.getter()
{
  uint64_t v1 = v0;
  unint64_t v2 = 0xEA00000000006465;
  sub_1A72BF2A0(v1, (uint64_t)&v9);
  if (v10)
  {
    if (v10 == 1)
    {
      uint64_t v3 = 0x6E6F646E6162612ELL;
    }
    else
    {
      sub_1A72BEE44(&v9, v8);
      sub_1A72BEE44(&v11, v7);
      sub_1A7573560();
      sub_1A7572740();
      sub_1A7573760();
      sub_1A7572740();
      sub_1A7573760();
      sub_1A7572740();
      uint64_t v3 = 0;
      unint64_t v2 = 0xE000000000000000;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    }
  }
  else
  {
    uint64_t v3 = 0x6C6C65636E61632ELL;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
  *(void *)(inited + 32) = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v2;
  return sub_1A72B0944(inited);
}

uint64_t sub_1A72BF49C()
{
  sub_1A72BF2A0(v0, (uint64_t)v2);
  uint64_t result = v3;
  if (v3 >= 2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    return 2;
  }
  return result;
}

uint64_t sub_1A72BF4F4(uint64_t a1)
{
  unint64_t v2 = sub_1A72C8C70();

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1A72BF530(uint64_t a1)
{
  unint64_t v2 = sub_1A72C8C70();

  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t PromiseDisposableToken.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t PromiseDisposableToken.init()()
{
  return v0;
}

uint64_t PromiseDisposableToken.deinit()
{
  return v0;
}

uint64_t PromiseDisposableToken.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

void *Promise.__allocating_init(value:)(uint64_t a1)
{
  unint64_t v3 = sub_1A72C77C4(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))(a1);
  return v3;
}

void *Promise.init(value:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1A72C7694(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(a1);
  return v4;
}

uint64_t Promise.__allocating_init(error:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  Promise.init(error:)(a1);
  return v2;
}

uint64_t Promise.init(error:)(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for Seal();
  type metadata accessor for UnfairLock();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = (_DWORD *)swift_slowAlloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = 0;
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v2 + 16) = sub_1A7363728(v4, a1);
  return v2;
}

uint64_t Promise.__allocating_init(resolver:)(void (*a1)(uint64_t (*)(uint64_t a1), uint64_t, uint64_t (*)(void *a1), uint64_t))
{
  uint64_t v2 = swift_allocObject();
  Promise.init(resolver:)(a1);
  return v2;
}

uint64_t Promise.init(resolver:)(void (*a1)(uint64_t (*)(uint64_t a1), uint64_t, uint64_t (*)(void *a1), uint64_t))
{
  type metadata accessor for Seal();
  type metadata accessor for UnfairLock();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = (_DWORD *)swift_slowAlloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = 0;
  *(_DWORD *)(v3 + 24) = 0;
  *(void *)(v1 + 16) = sub_1A7363778(v3);
  swift_retain_n();
  a1(sub_1A72C7808, v1, sub_1A72C782C, v1);
  swift_release_n();
  return v1;
}

uint64_t Promise.__allocating_init(resolver:)(void (*a1)(uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t))
{
  uint64_t v2 = swift_allocObject();
  Promise.init(resolver:)(a1);
  return v2;
}

uint64_t Promise.init(resolver:)(void (*a1)(uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t))
{
  type metadata accessor for Seal();
  type metadata accessor for UnfairLock();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = (_DWORD *)swift_slowAlloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = 0;
  *(_DWORD *)(v3 + 24) = 0;
  *(void *)(v1 + 16) = sub_1A7363778(v3);
  swift_retain_n();
  a1(sub_1A72CA40C, v1, sub_1A72CA410, v1, sub_1A72C7850, v1);
  swift_release_n();
  return v1;
}

uint64_t Promise.__allocating_init(block:)()
{
  uint64_t v0 = swift_allocObject();
  Promise.init(resolver:)((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A72C7874);
  swift_release();
  return v0;
}

uint64_t sub_1A72BFA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void (*)(uint64_t a1), void *), uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a7;
  v13[3] = a1;
  v13[4] = a2;
  v13[5] = a3;
  v13[6] = a4;
  swift_retain();
  swift_retain();
  a5(sub_1A72CA224, v13);

  return swift_release();
}

void sub_1A72BFB04(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  BOOL v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v13 = sub_1A7574170();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v18 - v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = (void *)*v15;
    a4(*v15);
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v10 + 32))(v12, v15, a6);
    a2(v12);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, a6);
  }
}

uint64_t Promise.__allocating_init(_:scheduleOn:)(void *a1, void (*a2)(void *))
{
  uint64_t v4 = swift_allocObject();
  Promise.init(resolver:)((void (*)(uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t))sub_1A72C7880);
  a2(a1);

  return v4;
}

uint64_t sub_1A72BFD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v13 = *MEMORY[0x1E4FBC8C8] & *a7;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = *(void *)(v13 + 80);
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = a5;
  v14[6] = a6;
  v14[7] = a3;
  v14[8] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_1A73BD054((uint64_t)sub_1A72CA20C, (uint64_t)v14);
}

void sub_1A72BFE58(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, void (*a6)(id), uint64_t a7, uint64_t a8)
{
  v24[0] = a7;
  v24[1] = a3;
  int64_t v25 = a2;
  uint64_t v12 = *(void *)(a8 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v15 = sub_1A7574170();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (id *)((char *)v24 - v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)v24 - v16, a1, v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v26 = *v17;
    id v19 = v26;
    id v20 = v26;
    if (swift_dynamicCast())
    {

      a4(v21, v22);
      id v23 = v26;
    }
    else
    {

      a6(v19);
      id v23 = v19;
    }
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v12 + 32))(v14, v17, a8);
    v25(v14);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, a8);
  }
}

uint64_t sub_1A72C009C(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = swift_allocObject();
  sub_1A72C00F4(a1, a2);
  return v4;
}

uint64_t sub_1A72C00F4(uint64_t a1, void (*a2)(void))
{
  type metadata accessor for Seal();
  uint64_t v4 = swift_retain();
  *(void *)(v2 + 16) = sub_1A7363778(v4);
  type metadata accessor for PromiseWeakResolver();
  sub_1A72C7F18();
  a2();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_1A72C01A0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  type metadata accessor for DeferredPromise();
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_1A73630F8(v8);
  uint64_t v10 = *(void *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v9;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v10;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = v9;
  swift_retain();
  swift_retain_n();
  sub_1A7363BE0(a1, 0, 1, (uint64_t)sub_1A72CA3F8, v11, (uint64_t)sub_1A72CA408, v12, (uint64_t)sub_1A72CA384, (uint64_t)v13);
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v15 = *(void *)(v9 + 16);
  if (v15)
  {
    swift_retain();
    swift_release();
    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A72C0344(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *v6;
  type metadata accessor for DeferredPromise();
  uint64_t v10 = swift_retain();
  uint64_t v11 = sub_1A73630F8(v10);
  uint64_t v12 = *(void *)(v9 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a6;
  v13[4] = v11;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v12;
  v14[3] = a6;
  v14[4] = v11;
  uint64_t v15 = swift_allocObject();
  swift_retain_n();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v12;
  v16[3] = a6;
  v16[4] = v15;
  v16[5] = v11;
  v16[6] = a3;
  v16[7] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A7363BE0(a1, 0, 1, (uint64_t)sub_1A72CA380, (uint64_t)v13, (uint64_t)sub_1A72CA37C, (uint64_t)v14, (uint64_t)sub_1A72C78C8, (uint64_t)v16);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v18 = *(void *)(v11 + 16);
  if (v18)
  {
    swift_retain();
    swift_release();
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A72C053C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(*(void *)a3 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v15 - v8;
  uint64_t v11 = v10 + 16;
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1AD0CD420](v11);
  if (v12)
  {
    a4(a1, v12);
    DeferredPromise.resolve(_:)((uint64_t)v9);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    sub_1A72C8344();
    uint64_t v13 = (void *)swift_allocError();
    *(void *)uint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    *(void *)(v14 + 16) = 0;
    *(void *)(v14 + 24) = 1;
    *(_OWORD *)(v14 + 32) = 0u;
    *(_OWORD *)(v14 + 48) = 0u;
    DeferredPromise.reject(_:)(v13);
  }
}

uint64_t sub_1A72C0744(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v9 = *v4;
  type metadata accessor for DeferredPromise();
  uint64_t v10 = swift_retain();
  uint64_t v11 = sub_1A73630F8(v10);
  uint64_t v12 = *(void *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v11;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  *(void *)(v14 + 24) = v11;
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v12;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = v11;
  swift_retain();
  swift_retain_n();
  sub_1A7363BE0(a1, *(uint64_t *)&a4, 0, (uint64_t)sub_1A72CA1A0, v13, (uint64_t)sub_1A72CA17C, v14, (uint64_t)sub_1A72C78E4, (uint64_t)v15);
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v17 = *(void *)(v11 + 16);
  if (v17)
  {
    swift_retain();
    swift_release();
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A72C08F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(*(void *)a4 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = &v11[-v7];
  v9(v6);
  DeferredPromise.resolve(_:)((uint64_t)v8);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1A72C0A68(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  type metadata accessor for DeferredPromise();
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_1A73630F8(v8);
  uint64_t v10 = *(void *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v9;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v10;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = v9;
  swift_retain();
  swift_retain_n();
  sub_1A7363BE0(a1, 0, 1, (uint64_t)sub_1A72CA3F8, v11, (uint64_t)sub_1A72CA408, v12, (uint64_t)sub_1A72C7908, (uint64_t)v13);
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v15 = *(void *)(v9 + 16);
  if (v15)
  {
    swift_retain();
    swift_release();
    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A72C0C0C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  a2();
  uint64_t v7 = qword_1EB705720;
  swift_retain();
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_1EB704C70;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a5;
  *(void *)(v9 + 24) = a4;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a5;
  *(void *)(v10 + 24) = a4;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a5;
  *(void *)(v11 + 24) = a4;
  swift_retain_n();
  sub_1A7363BE0(v8, 0, 1, (uint64_t)sub_1A72CA3F8, v9, (uint64_t)sub_1A72CA408, v10, (uint64_t)sub_1A72CA158, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1A72C0E30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *v6;
  type metadata accessor for DeferredPromise();
  uint64_t v10 = swift_retain();
  uint64_t v11 = sub_1A73630F8(v10);
  uint64_t v12 = *(void *)(v9 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a6;
  v13[4] = v11;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v12;
  v14[3] = a6;
  v14[4] = v11;
  uint64_t v15 = swift_allocObject();
  swift_retain_n();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v12;
  v16[3] = a6;
  v16[4] = v15;
  v16[5] = v11;
  v16[6] = a3;
  v16[7] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A7363BE0(a1, 0, 1, (uint64_t)sub_1A72CA380, (uint64_t)v13, (uint64_t)sub_1A72C9FFC, (uint64_t)v14, (uint64_t)sub_1A72C7960, (uint64_t)v16);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v18 = *(void *)(v11 + 16);
  if (v18)
  {
    swift_retain();
    swift_release();
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A72C1028(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = a2 + 16;
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x1AD0CD420](v12);
  if (v13)
  {
    a4(a1, v13);
    uint64_t v16 = qword_1EB705720;
    swift_retain();
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v17 = (void *)qword_1EB704C70;
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = a6;
    v18[3] = a7;
    v18[4] = a3;
    id v19 = (void *)swift_allocObject();
    v19[2] = a6;
    v19[3] = a7;
    v19[4] = a3;
    id v20 = (void *)swift_allocObject();
    v20[2] = a6;
    v20[3] = a7;
    v20[4] = a3;
    swift_retain_n();
    sub_1A7363BE0(v17, 0, 1, (uint64_t)sub_1A72CA020, (uint64_t)v18, (uint64_t)sub_1A72CA37C, (uint64_t)v19, (uint64_t)sub_1A72CA134, (uint64_t)v20);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1A72C8344();
    uint64_t v14 = (void *)swift_allocError();
    *(void *)uint64_t v15 = 0;
    *(void *)(v15 + 8) = 0;
    *(void *)(v15 + 16) = 0;
    *(void *)(v15 + 24) = 1;
    *(_OWORD *)(v15 + 32) = 0u;
    *(_OWORD *)(v15 + 48) = 0u;
    DeferredPromise.reject(_:)(v14);
  }
}

uint64_t sub_1A72C12D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = *(void *)(v7 + 80);
  sub_1A7363BE0(a1, 0, 1, (uint64_t)nullsub_1, 0, a2, a3, (uint64_t)nullsub_1, v8);
  swift_release();

  return swift_retain();
}

uint64_t sub_1A72C13BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = *(void *)(v10 + 80);
  v12[2] = v13;
  v12[3] = a5;
  v12[4] = v11;
  v12[5] = a3;
  v12[6] = a4;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = a5;
  swift_retain();
  swift_retain();
  sub_1A7363BE0(a1, 0, 1, (uint64_t)nullsub_1, 0, (uint64_t)sub_1A72C79A4, (uint64_t)v12, (uint64_t)nullsub_1, v14);
  swift_release();
  swift_release();
  swift_release();

  return swift_retain();
}

uint64_t sub_1A72C152C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD0CD420](v5);
  if (result)
  {
    a3(a1, result);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A72C15A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A72C174C(a1, a2, a3, (void (*)(void))sub_1A7363D18);
}

uint64_t sub_1A72C15BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = *(void *)(v10 + 80);
  v12[3] = a5;
  v12[4] = v11;
  v12[5] = a3;
  v12[6] = a4;
  swift_retain();
  swift_retain();
  sub_1A7363D18(a1, (uint64_t)sub_1A72C79C8, (uint64_t)v12);
  swift_release();
  swift_release();

  return swift_retain();
}

uint64_t sub_1A72C16C8(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD0CD420](v3);
  if (result)
  {
    a2();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A72C1734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A72C174C(a1, a2, a3, (void (*)(void))sub_1A7363D38);
}

uint64_t sub_1A72C174C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();

  return swift_retain();
}

uint64_t sub_1A72C178C(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = *(void *)(v3 + 80);
  uint64_t v5 = sub_1A72C01A0(a1, (uint64_t)sub_1A72C79E8, v4);
  swift_release();
  return v5;
}

uint64_t sub_1A72C1818(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = *(void *)(v5 + 80);
  v6[3] = a2;
  v6[4] = a1;
  if (qword_1EB705720 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EB704C70;
  uint64_t v8 = sub_1A72C01A0(v7, (uint64_t)sub_1A72C7A50, (uint64_t)v6);
  swift_release();

  return v8;
}

uint64_t sub_1A72C18F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v50 = a5;
  uint64_t v59 = a2;
  uint64_t v8 = sub_1A7574140();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v52 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v55 = (char *)&v49 - v11;
  uint64_t v12 = sub_1A7573210();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v49 - v15;
  uint64_t v17 = *(void *)(a3 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v14);
  id v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v56 = a1;
  uint64_t v23 = a1;
  int64_t v24 = v21;
  v21((uint64_t *)((char *)&v49 - v22), v23, a3);
  char v25 = swift_dynamicCast();
  id v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56);
  if (v25)
  {
    uint64_t v27 = *(void *)(a4 - 8);
    v26(v16, 0, 1, a4);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v50, v16, a4);
  }
  else
  {
    v26(v16, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    uint64_t v58 = a3;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v57);
    uint64_t v30 = v56;
    v24(boxed_opaque_existential_0, v56, a3);
    uint64_t v31 = (void (*)(char *, uint64_t, uint64_t))v24;
    uint64_t v49 = v24;
    sub_1A7574120();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    uint64_t v58 = MetatypeMetadata;
    v57[0] = v59;
    int64_t v32 = v52;
    sub_1A7574120();
    LODWORD(v50) = sub_1A7572FE0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7054F0);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1A7578790;
    v31(v20, v30, a3);
    uint64_t v34 = sub_1A7572670();
    uint64_t v36 = v35;
    uint64_t v37 = MEMORY[0x1E4FBB1A0];
    *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v38 = sub_1A72CA0E0();
    *(void *)(v33 + 64) = v38;
    *(void *)(v33 + 32) = v34;
    *(void *)(v33 + 40) = v36;
    uint64_t v39 = sub_1A7574130();
    *(void *)(v33 + 96) = v37;
    *(void *)(v33 + 104) = v38;
    *(void *)(v33 + 72) = v39;
    *(void *)(v33 + 80) = v40;
    uint64_t v41 = sub_1A7574130();
    *(void *)(v33 + 136) = v37;
    *(void *)(v33 + 144) = v38;
    *(void *)(v33 + 112) = v41;
    *(void *)(v33 + 120) = v42;
    sub_1A72BEFEC(0, qword_1E96F1248);
    int64_t v43 = (void *)sub_1A75731F0();
    sub_1A7571E70();
    swift_bridgeObjectRelease();

    sub_1A72C8344();
    swift_allocError();
    int64_t v45 = v44;
    v44[3] = a3;
    uint64_t v46 = __swift_allocate_boxed_opaque_existential_0(v44);
    v49(v46, v56, a3);
    v45[7] = MetatypeMetadata;
    v45[4] = v59;
    swift_willThrow();
    uint64_t v47 = v54;
    int64_t v48 = *(void (**)(char *, uint64_t))(v53 + 8);
    v48(v32, v54);
    return ((uint64_t (*)(char *, uint64_t))v48)(v55, v47);
  }
}

uint64_t Promise.deinit()
{
  swift_release();
  return v0;
}

uint64_t Promise.__deallocating_deinit()
{
  swift_release();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t Promise<A>.map<A>(on:closure:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  sub_1A7572B30();
  type metadata accessor for DeferredPromise();
  uint64_t v11 = swift_retain();
  uint64_t v12 = sub_1A73630F8(v11);
  uint64_t v13 = *(void *)(v10 + 80);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a5;
  v14[4] = v12;
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v13;
  v15[3] = a5;
  v15[4] = v12;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v13;
  v16[3] = a5;
  v16[4] = v12;
  v16[5] = a2;
  v16[6] = a3;
  swift_retain_n();
  swift_retain();
  sub_1A7363BE0(a1, 0, 1, (uint64_t)sub_1A72CA380, (uint64_t)v14, (uint64_t)sub_1A72CA37C, (uint64_t)v15, (uint64_t)sub_1A72C7A74, (uint64_t)v16);
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v18 = *(void *)(v12 + 16);
  if (v18)
  {
    swift_retain();
    swift_release();
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A72C1FD8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a2;
  v11[2] = a5;
  uint64_t v12 = *(char **)(*(void *)(v8 + 80) + 16);
  uint64_t v13 = a6;
  uint64_t v14 = a3;
  uint64_t v15 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB7054F8);
  v16[0] = (id)sub_1A72D9A0C((void (*)(char *, char *))sub_1A72CA044, (uint64_t)v11, a5, v12, v9, a6, MEMORY[0x1E4FBC0F0], (uint64_t)v16);
  DeferredPromise.resolve(_:)((uint64_t)v16);
  return swift_bridgeObjectRelease();
}

uint64_t Promise<A>.compactMap<A>(on:closure:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  sub_1A7572B30();
  type metadata accessor for DeferredPromise();
  uint64_t v11 = swift_retain();
  uint64_t v12 = sub_1A73630F8(v11);
  uint64_t v13 = *(void *)(v10 + 80);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a5;
  v14[4] = v12;
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v13;
  v15[3] = a5;
  v15[4] = v12;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v13;
  id v16[3] = a5;
  v16[4] = v12;
  v16[5] = a2;
  v16[6] = a3;
  swift_retain_n();
  swift_retain();
  sub_1A7363BE0(a1, 0, 1, (uint64_t)sub_1A72CA020, (uint64_t)v14, (uint64_t)sub_1A72C9FFC, (uint64_t)v15, (uint64_t)sub_1A72C7A90, (uint64_t)v16);
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v18 = *(void *)(v12 + 16);
  if (v18)
  {
    swift_retain();
    swift_release();
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A72C22E8()
{
  v1[0] = sub_1A75728B0();
  DeferredPromise.resolve(_:)((uint64_t)v1);
  return swift_bridgeObjectRelease();
}

uint64_t Promise<A>.reduce<A>(_:on:nextPartialResult:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  int64_t v32 = a2;
  uint64_t v28 = a1;
  uint64_t v9 = *v6;
  uint64_t v10 = *(void *)(a5 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DeferredPromise();
  uint64_t v29 = v6[2];
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_1A73630F8(v13);
  uint64_t v15 = *(void *)(v9 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  id v16[3] = a6;
  uint64_t v27 = a6;
  v16[4] = v14;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v15;
  v17[3] = a6;
  v17[4] = v14;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  swift_retain_n();
  v18(v12, v28, a5);
  unint64_t v19 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v20 = (v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = v15;
  *((void *)v21 + 3) = a5;
  *((void *)v21 + 4) = v27;
  *((void *)v21 + 5) = v14;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v21[v19], v12, a5);
  uint64_t v22 = &v21[v20];
  uint64_t v23 = v31;
  *(void *)uint64_t v22 = v30;
  *((void *)v22 + 1) = v23;
  swift_retain();
  swift_retain();
  sub_1A7363BE0(v32, 0, 1, (uint64_t)sub_1A72CA380, (uint64_t)v16, (uint64_t)sub_1A72CA37C, (uint64_t)v17, (uint64_t)sub_1A72C7AC4, (uint64_t)v21);
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v25 = *(void *)(v14 + 16);
  if (v25)
  {
    swift_retain();
    swift_release();
    return v25;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A72C2688(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a2 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = &v7[-v4];
  sub_1A7572910();
  DeferredPromise.resolve(_:)((uint64_t)v5);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t Promise<A>.reduce<A>(into:on:updateAccumulatingResult:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  int64_t v32 = a2;
  uint64_t v28 = a1;
  uint64_t v9 = *v6;
  uint64_t v10 = *(void *)(a5 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DeferredPromise();
  uint64_t v29 = v6[2];
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_1A73630F8(v13);
  uint64_t v15 = *(void *)(v9 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  id v16[3] = a6;
  uint64_t v27 = a6;
  v16[4] = v14;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v15;
  v17[3] = a6;
  v17[4] = v14;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  swift_retain_n();
  v18(v12, v28, a5);
  unint64_t v19 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v20 = (v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = v15;
  *((void *)v21 + 3) = a5;
  *((void *)v21 + 4) = v27;
  *((void *)v21 + 5) = v14;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v21[v19], v12, a5);
  uint64_t v22 = &v21[v20];
  uint64_t v23 = v31;
  *(void *)uint64_t v22 = v30;
  *((void *)v22 + 1) = v23;
  swift_retain();
  swift_retain();
  sub_1A7363BE0(v32, 0, 1, (uint64_t)sub_1A72CA380, (uint64_t)v16, (uint64_t)sub_1A72CA37C, (uint64_t)v17, (uint64_t)sub_1A72C7BC4, (uint64_t)v21);
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v25 = *(void *)(v14 + 16);
  if (v25)
  {
    swift_retain();
    swift_release();
    return v25;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A72C2AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a2 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v11[-v7];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v6, v9, v2);
  sub_1A7572900();
  DeferredPromise.resolve(_:)((uint64_t)v8);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t Promise<A>.unique<A>(on:uniqueBy:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *(void *)(*(void *)v6 + 80);
  swift_getAssociatedTypeWitness();
  sub_1A7572B30();
  type metadata accessor for DeferredPromise();
  uint64_t v11 = swift_retain();
  uint64_t v12 = sub_1A73630F8(v11);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v10;
  v13[3] = a4;
  v13[4] = a5;
  v13[5] = a6;
  v13[6] = v12;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v10;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = v12;
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v10;
  v15[3] = a4;
  v15[4] = a5;
  v15[5] = a6;
  v15[6] = v12;
  v15[7] = a2;
  v15[8] = a3;
  swift_retain_n();
  swift_retain();
  sub_1A7363BE0(a1, 0, 1, (uint64_t)sub_1A72C9FA0, (uint64_t)v13, (uint64_t)sub_1A72C9F7C, (uint64_t)v14, (uint64_t)sub_1A72C7C90, (uint64_t)v15);
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v17 = *(void *)(v12 + 16);
  if (v17)
  {
    swift_retain();
    swift_release();
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A72C2E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[0] = Sequence.unique<A>(by:)(a3, a4, a5, a6, a7, a8);
  DeferredPromise.resolve(_:)((uint64_t)v9);
  return swift_bridgeObjectRelease();
}

uint64_t static Promise.all<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7572E20();
  if (v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
    unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v11 = (char *)swift_allocObject();
    *((void *)v11 + 2) = *(void *)(v3 + 80);
    *((void *)v11 + 3) = a2;
    *((void *)v11 + 4) = a3;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a2);
    if (qword_1EB705720 != -1) {
      swift_once();
    }
    uint64_t v12 = (void *)qword_1EB704C70;
    sub_1A7572B30();
    id v13 = v12;
    uint64_t v14 = sub_1A72C0A68(v13, (uint64_t)sub_1A72C7CC0, (uint64_t)v11);
    swift_release();
    swift_release();
  }
  else
  {
    sub_1A7572B30();
    type metadata accessor for Promise();
    uint64_t v17 = sub_1A7572A80();
    uint64_t v14 = (uint64_t)sub_1A72C77C4((uint64_t)&v17);
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_1A72C318C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a5;
  uint64_t v29 = a2;
  uint64_t v32 = a1;
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v31 = *(void *)(v7 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v30 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v8);
  id v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v17 = (char *)&v27 - v16;
  type metadata accessor for Promise();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v29, a4);
  uint64_t v18 = v28;
  sub_1A7572E40();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  static Promise.all<A>(_:)(v17, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, AssociatedTypeWitness);
  unint64_t v20 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v30, v32, a3);
  unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = a3;
  *((void *)v22 + 3) = a4;
  *((void *)v22 + 4) = v18;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v22[v21], v20, a3);
  if (qword_1EB705720 != -1) {
    swift_once();
  }
  uint64_t v23 = (void *)qword_1EB704C70;
  sub_1A7572B30();
  id v24 = v23;
  uint64_t v25 = sub_1A72C0A68(v24, (uint64_t)sub_1A72C9EA8, (uint64_t)v22);
  swift_release();
  swift_release();

  return v25;
}

void *sub_1A72C34E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A7572B30();
  type metadata accessor for Promise();
  sub_1A7325580(a3, a3);
  uint64_t v5 = *(void *)(a3 - 8);
  swift_allocObject();
  uint64_t v6 = sub_1A7572A40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v7, a2, a3);
  sub_1A7324980(v6);
  uint64_t v8 = sub_1A7572A70();
  swift_bridgeObjectRelease();
  uint64_t v11 = v8;
  uint64_t v9 = sub_1A72C77C4((uint64_t)&v11);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t static Promise.all(_:)(uint64_t a1)
{
  return sub_1A72C4218(a1, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))static Promise.all<A>(_:));
}

uint64_t static Promise.race<A>(_:)()
{
  sub_1A7572E20();
  uint64_t v0 = type metadata accessor for Promise();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = swift_allocObject();
  if (v3)
  {
    Promise.init(resolver:)((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A72C7CEC);
    swift_release();
  }
  else
  {
    Promise.init(resolver:)((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))nullsub_1);
  }
  return v1;
}

void sub_1A72C3774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(), uint64_t a7, uint64_t a8)
{
  uint64_t v57 = a5;
  uint64_t v58 = a1;
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  uint64_t v59 = a2;
  uint64_t v11 = *(void *)a6;
  uint64_t v12 = *(void *)(a7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = swift_allocObject();
  uint64_t v56 = a6;
  uint64_t v20 = *(void *)(v11 + 80);
  *(unsigned char *)(v19 + 16) = sub_1A72C3D44() & 1;
  *(void *)(v19 + 24) = v21;
  type metadata accessor for Promise();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v57, a7);
  sub_1A7572E40();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v57 = static Promise.race<A>(_:)(v18, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v20;
  v23[3] = a7;
  v23[4] = a8;
  v23[5] = v19;
  uint64_t v24 = v59;
  v23[6] = v58;
  v23[7] = v24;
  uint64_t v25 = qword_1EB705720;
  swift_retain();
  swift_retain();
  if (v25 != -1) {
    swift_once();
  }
  id v26 = (id)qword_1EB704C70;
  uint64_t v55 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v27 = sub_1A72C01A0(v26, (uint64_t)sub_1A72C9B80, (uint64_t)v23);
  swift_release();

  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = v20;
  v28[3] = a7;
  v28[4] = a8;
  v28[5] = v19;
  uint64_t v29 = v61;
  v28[6] = v60;
  v28[7] = v29;
  uint64_t v30 = (void *)qword_1EB704C70;
  uint64_t v31 = *(void *)(v27 + 16);
  uint64_t v52 = v20;
  uint64_t v53 = a8;
  uint64_t v32 = *(void *)(v31 + 16);
  swift_retain();
  swift_retain();
  id v33 = v30;
  os_unfair_lock_lock_with_options();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v33;
  *(void *)(v34 + 24) = 0;
  *(unsigned char *)(v34 + 32) = 1;
  uint64_t v56 = nullsub_1;
  *(void *)(v34 + 40) = nullsub_1;
  *(void *)(v34 + 48) = 0;
  *(void *)(v34 + 56) = sub_1A72C9BB0;
  *(void *)(v34 + 64) = v28;
  uint64_t v54 = nullsub_1;
  *(void *)(v34 + 72) = nullsub_1;
  *(void *)(v34 + 80) = 0;
  id v35 = v33;
  swift_retain();
  uint64_t v36 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v34);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v32 + 16));
  v36();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v37 = (void *)swift_allocObject();
  uint64_t v39 = v52;
  uint64_t v38 = v53;
  _OWORD v37[2] = v52;
  v37[3] = a7;
  v37[4] = v38;
  v37[5] = v19;
  uint64_t v40 = v59;
  v37[6] = v58;
  v37[7] = v40;
  uint64_t v41 = (void *)qword_1EB704C70;
  swift_retain();
  swift_retain();
  id v42 = v41;
  uint64_t v43 = sub_1A72C01A0(v42, (uint64_t)sub_1A72C9B80, (uint64_t)v37);
  swift_release();

  uint64_t v44 = (void *)swift_allocObject();
  v44[2] = v39;
  v44[3] = a7;
  v44[4] = v38;
  v44[5] = v19;
  uint64_t v45 = v61;
  v44[6] = v60;
  v44[7] = v45;
  uint64_t v46 = (void *)qword_1EB704C70;
  uint64_t v47 = *(void *)(*(void *)(v43 + 16) + 16);
  swift_retain();
  swift_retain();
  id v48 = v46;
  os_unfair_lock_lock_with_options();
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v48;
  *(void *)(v49 + 24) = 0;
  *(unsigned char *)(v49 + 32) = 1;
  *(void *)(v49 + 40) = v56;
  *(void *)(v49 + 48) = 0;
  *(void *)(v49 + 56) = sub_1A72C9BB0;
  *(void *)(v49 + 64) = v44;
  *(void *)(v49 + 72) = v54;
  *(void *)(v49 + 80) = 0;
  id v50 = v48;
  swift_retain();
  char v51 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v49);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v47 + 16));
  v51();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1A72C3D44()
{
  uint64_t v0 = sub_1A7573090();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A7573040();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1A7572260();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705908);
  sub_1A7572240();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1A72C9D88((unint64_t *)&qword_1EB705900, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E8);
  sub_1A72C9DD0((unint64_t *)&qword_1EB7058F0, &qword_1EB7058E8);
  sub_1A7573380();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  sub_1A75730D0();
  return 0;
}

uint64_t sub_1A72C3F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)(v3 + 8);
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = *(void *)(a3 + 16);
  v8[3] = v3;
  v8[4] = a1;
  v8[5] = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1A72C9CCC;
  *(void *)(v9 + 24) = v8;
  v13[4] = sub_1A72C9D1C;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1A72E36EC;
  v13[3] = &block_descriptor_160;
  uint64_t v10 = _Block_copy(v13);
  uint64_t v11 = v7;
  swift_retain();
  swift_release();
  dispatch_sync(v11, v10);

  _Block_release(v10);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v10) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A72C40FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v11[2] = a5;
  void v11[3] = a6;
  v11[4] = a7;
  v11[5] = a3;
  v11[6] = a4;
  v11[7] = a1;
  swift_beginAccess();
  uint64_t BlockRunner = type metadata accessor for Promise.FirstBlockRunner();
  sub_1A72C3F94(a8, (uint64_t)v11, BlockRunner);
  return swift_endAccess();
}

uint64_t sub_1A72C4184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v11[2] = a3;
  void v11[3] = a4;
  v11[4] = a1;
  swift_beginAccess();
  uint64_t BlockRunner = type metadata accessor for Promise.FirstBlockRunner();
  sub_1A72C3F94(a8, (uint64_t)v11, BlockRunner);
  return swift_endAccess();
}

uint64_t static Promise.race(_:)(uint64_t a1)
{
  return sub_1A72C4218(a1, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))static Promise.race<A>(_:));
}

uint64_t sub_1A72C4218(uint64_t a1, uint64_t (*a2)(uint64_t *, uint64_t, uint64_t))
{
  type metadata accessor for Promise();
  uint64_t v7 = a1;
  uint64_t v4 = sub_1A7572B30();
  uint64_t WitnessTable = swift_getWitnessTable();
  return a2(&v7, v4, WitnessTable);
}

uint64_t static Promise.zip<A, B>(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = *(void *)(v3 + 80);
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = qword_1EB705720;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EB704C70;
  uint64_t v7 = sub_1A72C0A68(v6, (uint64_t)sub_1A72C7CF8, v4);
  swift_release();

  return v7;
}

uint64_t sub_1A72C438C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(a3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = *(void *)(v4 + 80);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a3);
  if (qword_1EB705720 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EB704C70;
  swift_getTupleTypeMetadata2();
  uint64_t v11 = sub_1A72C01A0(v10, (uint64_t)sub_1A72C9AF0, v9);
  swift_release();

  return v11;
}

uint64_t sub_1A72C454C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = a5 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(a5, a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v10, a1, a4);
}

uint64_t static Promise.zip<A, B, C>(_:_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = *(void *)(v5 + 80);
  v6[3] = a2;
  v6[4] = a3;
  uint64_t v7 = qword_1EB705720;
  swift_retain();
  swift_retain();
  if (v7 != -1) {
    swift_once();
  }
  id v8 = (id)qword_1EB704C70;
  uint64_t v9 = sub_1A72C0A68(v8, (uint64_t)sub_1A72C7D54, (uint64_t)v6);
  swift_release();

  return v9;
}

uint64_t sub_1A72C4720(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a3;
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v10);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a4;
  *((void *)v12 + 3) = *(void *)(v6 + 80);
  *((void *)v12 + 4) = *(void *)(v7 + 80);
  *((void *)v12 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v12[v11], v10, a4);
  uint64_t v13 = qword_1EB705720;
  swift_retain();
  if (v13 != -1) {
    swift_once();
  }
  id v14 = (id)qword_1EB704C70;
  swift_getTupleTypeMetadata3();
  uint64_t v15 = sub_1A72C0A68(v14, (uint64_t)sub_1A72C9864, (uint64_t)v12);
  swift_release();

  return v15;
}

uint64_t sub_1A72C4918(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a5 - 8);
  uint64_t v9 = (void *)*a2;
  uint64_t v29 = a1;
  uint64_t v30 = v9;
  uint64_t v10 = v8;
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](a1);
  uint64_t v28 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v29, a5);
  unint64_t v19 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v20 = (v15 + *(unsigned __int8 *)(v10 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v21 = a2;
  uint64_t v22 = (char *)swift_allocObject();
  uint64_t v23 = v30;
  *((void *)v22 + 2) = a4;
  *((void *)v22 + 3) = a5;
  uint64_t v30 = v21;
  *((void *)v22 + 4) = v23[10];
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v22[v19], v16, a4);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v22[v20], v28, a5);
  if (qword_1EB705720 != -1) {
    swift_once();
  }
  id v24 = (id)qword_1EB704C70;
  swift_getTupleTypeMetadata3();
  uint64_t v25 = sub_1A72C01A0(v24, (uint64_t)sub_1A72C99BC, (uint64_t)v22);
  swift_release();

  return v25;
}

uint64_t sub_1A72C4BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v15 = a7 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v16 = a7 + *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(a7, a2, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(v15, a3, a5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(v16, a1, a6);
}

uint64_t static Promise.zip<A, B, C, D>(_:_:_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a1;
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = *(void *)(v7 + 80);
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  uint64_t v9 = qword_1EB705720;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v9 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EB704C70;
  uint64_t v11 = sub_1A72C0A68(v10, (uint64_t)sub_1A72C7DBC, (uint64_t)v8);
  swift_release();

  return v11;
}

uint64_t sub_1A72C4DF8(uint64_t a1, void *a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9 = *a2;
  uint64_t v10 = *a3;
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v26 = *a4;
  uint64_t v27 = v10;
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v14);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = a5;
  uint64_t v28 = a2;
  uint64_t v17 = v27;
  uint64_t v27 = *(void *)(v9 + 80);
  *((void *)v16 + 3) = v27;
  uint64_t v18 = *(void *)(v17 + 80);
  uint64_t v19 = v26;
  *((void *)v16 + 4) = v18;
  uint64_t v20 = *(void *)(v19 + 80);
  *((void *)v16 + 5) = v20;
  *((void *)v16 + 6) = a3;
  *((void *)v16 + 7) = a4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v16[v15], v14, a5);
  uint64_t v21 = qword_1EB705720;
  swift_retain();
  swift_retain();
  if (v21 != -1) {
    swift_once();
  }
  id v22 = (id)qword_1EB704C70;
  uint64_t v29 = a5;
  uint64_t v30 = v27;
  uint64_t v31 = v18;
  uint64_t v32 = v20;
  swift_getTupleTypeMetadata();
  uint64_t v23 = sub_1A72C0A68(v22, (uint64_t)sub_1A72C92D0, (uint64_t)v16);
  swift_release();

  return v23;
}

uint64_t sub_1A72C5038(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v36 = a3;
  uint64_t v41 = a2;
  uint64_t v8 = *(void *)(a6 - 8);
  uint64_t v9 = *a3;
  uint64_t v34 = *a2;
  uint64_t v35 = v9;
  uint64_t v10 = v8;
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](a1);
  uint64_t v32 = v13;
  id v33 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v14 + 16))(v16, v17);
  uint64_t v18 = a6;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a6);
  unint64_t v19 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v20 = (v15 + *(unsigned __int8 *)(v10 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  uint64_t v22 = v34;
  uint64_t v23 = v32;
  *((void *)v21 + 2) = v32;
  *((void *)v21 + 3) = v18;
  uint64_t v34 = *(void *)(v22 + 80);
  *((void *)v21 + 4) = v34;
  id v24 = v36;
  uint64_t v25 = *(void *)(v35 + 80);
  *((void *)v21 + 5) = v25;
  *((void *)v21 + 6) = v24;
  uint64_t v26 = &v21[v19];
  uint64_t v27 = v23;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v26, v16, v23);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v21[v20], v33, v18);
  uint64_t v28 = qword_1EB705720;
  swift_retain();
  if (v28 != -1) {
    swift_once();
  }
  id v29 = (id)qword_1EB704C70;
  uint64_t v37 = v27;
  uint64_t v38 = v18;
  uint64_t v39 = v34;
  uint64_t v40 = v25;
  swift_getTupleTypeMetadata();
  uint64_t v30 = sub_1A72C0A68(v29, (uint64_t)sub_1A72C946C, (uint64_t)v21);
  swift_release();

  return v30;
}

uint64_t sub_1A72C5318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v40 = a4;
  uint64_t v41 = a7;
  uint64_t v49 = a2;
  uint64_t v42 = a1;
  uint64_t v8 = *(void *)(a7 - 8);
  uint64_t v43 = *(void *)(v8 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v11;
  uint64_t v34 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v9);
  uint64_t v38 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v15);
  uint64_t v37 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v17 + 16))();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v40, a6);
  uint64_t v35 = v8;
  uint64_t v19 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v42, v41);
  unint64_t v20 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v21 = (v18 + *(unsigned __int8 *)(v13 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v22 = (v14 + *(unsigned __int8 *)(v8 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v23 = (char *)swift_allocObject();
  uint64_t v24 = v44;
  uint64_t v26 = v36;
  uint64_t v25 = v37;
  uint64_t v27 = v34;
  *((void *)v23 + 2) = v36;
  *((void *)v23 + 3) = v27;
  *((void *)v23 + 4) = v19;
  uint64_t v28 = *(void *)(v24 + 80);
  *((void *)v23 + 5) = v28;
  id v29 = &v23[v20];
  uint64_t v30 = v26;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v29, v25, v26);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v23[v21], v38, v27);
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v23[v22], v39, v19);
  if (qword_1EB705720 != -1) {
    swift_once();
  }
  id v31 = (id)qword_1EB704C70;
  uint64_t v45 = v30;
  uint64_t v46 = v27;
  uint64_t v47 = v19;
  uint64_t v48 = v28;
  swift_getTupleTypeMetadata();
  uint64_t v32 = sub_1A72C01A0(v31, (uint64_t)sub_1A72C96A0, (uint64_t)v23);
  swift_release();

  return v32;
}

uint64_t sub_1A72C56A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v16 = a9 + TupleTypeMetadata[12];
  uint64_t v17 = a9 + TupleTypeMetadata[16];
  uint64_t v18 = a9 + TupleTypeMetadata[20];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(a9, a2, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(v16, a3, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16))(v17, a4, a7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 16))(v18, a1, a8);
}

uint64_t static Promise.firstNonNil<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v23)(void *__return_ptr, uint64_t);

  uint64_t v7 = *(void *)(v3 + 80);
  uint64_t v8 = sub_1A7573210();
  uint64_t v21 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = *(void *)(a2 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v22 = a3;
  uint64_t v14 = sub_1A7572E20();
  uint64_t v15 = (uint64_t)v23;
  if (v23)
  {
    uint64_t v21 = v8;
    v23(&v23, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
    unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v17 = (char *)swift_allocObject();
    *((void *)v17 + 2) = v7;
    *((void *)v17 + 3) = a2;
    *((void *)v17 + 4) = v22;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v17[v16], (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
    if (qword_1EB705720 != -1) {
      swift_once();
    }
    id v18 = (id)qword_1EB704C70;
    uint64_t v19 = sub_1A72C0A68(v18, (uint64_t)sub_1A72C7E68, (uint64_t)v17);
    swift_release();
    swift_release();

    sub_1A72AE0F8(v15);
  }
  else
  {
    type metadata accessor for Promise();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v11, 1, 1, v7);
    uint64_t v19 = (uint64_t)sub_1A72C77C4((uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v8);
  }
  return v19;
}

void *sub_1A72C5AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v33 = a1;
  uint64_t v28 = *(void *)(a4 - 8);
  uint64_t v29 = a2;
  MEMORY[0x1F4188790](a1);
  uint64_t v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v7;
  uint64_t v26 = *(void *)(v7 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = sub_1A7573210();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  id v18 = (char *)&v26 - v17;
  uint64_t v19 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v18, v33, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    type metadata accessor for Promise();
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v27, v29, a4);
    sub_1A7572E40();
    uint64_t v22 = v31;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v24 = (void *)static Promise.firstNonNil<A>(_:)(v10, v22, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v22);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v18, a3);
    type metadata accessor for Promise();
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v15, v21, a3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, a3);
    uint64_t v24 = sub_1A72C77C4((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, a3);
  }
  return v24;
}

uint64_t static Promise.firstNonNil(_:)(uint64_t a1)
{
  type metadata accessor for Promise();
  uint64_t v5 = a1;
  sub_1A7573210();
  type metadata accessor for Promise();
  swift_getFunctionTypeMetadata0();
  uint64_t v2 = sub_1A7572B30();
  uint64_t WitnessTable = swift_getWitnessTable();
  return static Promise.firstNonNil<A>(_:)((uint64_t)&v5, v2, WitnessTable);
}

uint64_t static Promise.delay(until:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C50);
  uint64_t v2 = swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = (_DWORD *)swift_slowAlloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = 0;
  *(_DWORD *)(v3 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB703BC0);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v5 + 40) = 0;
  *(unsigned char *)(v5 + 48) = -1;
  *(void *)(v5 + 16) = v3;
  *(unsigned char *)(v5 + 24) = 0;
  *(void *)(v2 + 16) = v5;
  swift_retain_n();
  sub_1A72C7F64((uint64_t)sub_1A72C7EF4, v2, a1);
  swift_release_n();
  return v2;
}

uint64_t Promise.errorAsNil()()
{
  sub_1A7573210();
  type metadata accessor for Promise();
  uint64_t v0 = swift_allocObject();
  Promise.init(resolver:)((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A72C8328);
  return v0;
}

void sub_1A72C6108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = *a5;
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = *(void *)(v7 + 80);
  _OWORD v8[2] = v9;
  v8[3] = a1;
  v8[4] = a2;
  uint64_t v10 = qword_1EB705720;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EB704C70;
  uint64_t v12 = sub_1A72C01A0(v11, (uint64_t)sub_1A72C914C, (uint64_t)v8);
  swift_release();

  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v9;
  v13[3] = a1;
  v13[4] = a2;
  uint64_t v14 = (void *)qword_1EB704C70;
  uint64_t v15 = *(void *)(*(void *)(v12 + 16) + 16);
  swift_retain();
  id v16 = v14;
  os_unfair_lock_lock_with_options();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = 0;
  *(unsigned char *)(v17 + 32) = 1;
  *(void *)(v17 + 40) = nullsub_1;
  *(void *)(v17 + 48) = 0;
  *(void *)(v17 + 56) = sub_1A72C916C;
  *(void *)(v17 + 64) = v13;
  *(void *)(v17 + 72) = nullsub_1;
  *(void *)(v17 + 80) = 0;
  id v19 = v16;
  swift_retain();
  id v18 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v17);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 16));
  v18();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1A72C6330(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1A7573210();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v13 - v9;
  uint64_t v11 = *(void *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v13 - v9, a1, a4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, a4);
  a2(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A72C6494(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1A7573210();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))((char *)&v11 - v8, 1, 1, a4);
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t Promise.get()(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x1F4188298](sub_1A72C65EC, 0, 0);
}

uint64_t sub_1A72C65EC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  uint64_t v3 = *(void *)(v1 + 80);
  *uint64_t v2 = v0;
  v2[1] = sub_1A72C66B8;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  return MEMORY[0x1F4188160](v4, 0, 0, 0x2928746567, 0xE500000000000000, sub_1A72C8330, v5, v3);
}

uint64_t sub_1A72C66B8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A72C67EC, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A72C67EC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A72C6804(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)a2 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  uint64_t v4 = sub_1A7572BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v35((char *)&v28 - v7, a1, v4);
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = (v9 + 24) & ~v9;
  uint64_t v32 = v9 | 7;
  uint64_t v33 = v10 + v6;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v3;
  uint64_t v34 = v10;
  uint64_t v31 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v31(v11 + v10, v8, v4);
  if (qword_1EB705720 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1EB704C70;
  uint64_t v13 = sub_1A72C01A0(v12, (uint64_t)sub_1A72C8F10, v11);
  uint64_t v30 = v13;
  swift_release();

  v35(v8, a1, v4);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v3;
  v31(v14 + v34, v8, v4);
  uint64_t v15 = *(void *)(v13 + 16);
  uint64_t v28 = a1;
  uint64_t v29 = v3;
  uint64_t v16 = *(void *)(v15 + 16);
  id v17 = (id)qword_1EB704C70;
  os_unfair_lock_lock_with_options();
  id v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = sub_1A72C8FB4;
  v18[4] = v14;
  id v19 = v17;
  swift_retain();
  uint64_t v20 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9080, (uint64_t)v18);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 16));
  v20();
  swift_release();

  swift_release();
  v35(v8, v28, v4);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v29;
  v31(v21 + v34, v8, v4);
  uint64_t v22 = *(void *)(*(void *)(v30 + 16) + 16);
  id v23 = (id)qword_1EB704C70;
  os_unfair_lock_lock_with_options();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v23;
  *(void *)(v24 + 24) = 0;
  *(unsigned char *)(v24 + 32) = 1;
  *(void *)(v24 + 40) = nullsub_1;
  *(void *)(v24 + 48) = 0;
  *(void *)(v24 + 56) = sub_1A72C90A8;
  *(void *)(v24 + 64) = v21;
  *(void *)(v24 + 72) = nullsub_1;
  *(void *)(v24 + 80) = 0;
  id v25 = v23;
  swift_retain();
  uint64_t v26 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v24);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 16));
  v26();
  swift_release();

  swift_release();
  return swift_release();
}

uint64_t sub_1A72C6C4C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  sub_1A7572BC0();
  return sub_1A7572BB0();
}

uint64_t sub_1A72C6D3C()
{
  return sub_1A7572BA0();
}

uint64_t sub_1A72C6E04(void *a1)
{
  id v1 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  sub_1A7572BC0();
  return sub_1A7572BA0();
}

uint64_t Promise.__allocating_init(task:)()
{
  uint64_t v0 = swift_allocObject();
  Promise.init(resolver:)((void (*)(uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t))sub_1A72C8338);
  swift_release();
  return v0;
}

uint64_t sub_1A72C6ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1228);
  MEMORY[0x1F4188790](v16 - 8);
  id v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1A7572BF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = a8;
  v20[5] = a7;
  v20[6] = a1;
  v20[7] = a2;
  v20[8] = a5;
  v20[9] = a6;
  v20[10] = a3;
  v20[11] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A738B04C((uint64_t)v18, (uint64_t)&unk_1E96F1238, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1A72C702C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = v18;
  v8[9] = v19;
  v8[6] = a8;
  v8[7] = v17;
  v8[4] = a6;
  v8[5] = a7;
  v8[3] = a5;
  uint64_t v10 = sub_1A7572BD0();
  v8[10] = v10;
  v8[11] = *(void *)(v10 - 8);
  v8[12] = swift_task_alloc();
  v8[13] = *(void *)(v19 - 8);
  uint64_t v11 = swift_task_alloc();
  v8[14] = v11;
  id v12 = (void *)swift_task_alloc();
  v8[15] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB7054F8);
  v8[16] = v13;
  *id v12 = v8;
  v12[1] = sub_1A72C71C4;
  uint64_t v14 = MEMORY[0x1E4FBC0F0];
  return MEMORY[0x1F4187D90](v11, a4, v19, v13, v14);
}

uint64_t sub_1A72C71C4()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A72C737C;
  }
  else {
    uint64_t v2 = sub_1A72C72D8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A72C72D8()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 72);
  (*(void (**)(uint64_t))(v0 + 24))(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1A72C737C()
{
  uint64_t v1 = *(void **)(v0 + 136);
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  char v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 136);
  if (v3)
  {
    uint64_t v5 = *(void (**)(uint64_t))(v0 + 40);
    uint64_t v6 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 80));
    v5(v6);
  }
  else
  {
    (*(void (**)(void))(v0 + 56))(*(void *)(v0 + 136));
  }

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1A72C746C(uint64_t a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1A73637B8(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A72C74E8(void *a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1A7363940(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A72C7564()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1A7363A9C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A72C75C8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

BOOL _s19ReminderKitInternal12PromiseErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1A72BF2A0(a1, (uint64_t)v6);
  uint64_t v3 = v7;
  if (v7 >= 2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    uint64_t v3 = 2;
  }
  sub_1A72BF2A0(a2, (uint64_t)v6);
  uint64_t v4 = v7;
  if (v7 >= 2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    uint64_t v4 = 2;
  }
  return v3 == v4;
}

void *sub_1A72C7694(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = *(void *)(*v2 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v7 = (char *)&v11 - v6;
  type metadata accessor for Seal();
  type metadata accessor for UnfairLock();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = (_DWORD *)swift_slowAlloc();
  *(void *)(v8 + 16) = v9;
  *uint64_t v9 = 0;
  *(_DWORD *)(v8 + 24) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v2[2] = sub_1A73636D8(v8, (uint64_t)v7);
  return v2;
}

void *sub_1A72C77C4(uint64_t a1)
{
  return sub_1A72C7694(a1);
}

uint64_t sub_1A72C7808(uint64_t a1)
{
  return sub_1A73637B8(a1);
}

uint64_t sub_1A72C782C(void *a1)
{
  return sub_1A7363940(a1);
}

uint64_t sub_1A72C7850()
{
  return sub_1A7363A9C();
}

uint64_t sub_1A72C7874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A72BFA4C(a1, a2, a3, a4, *(void (**)(void (*)(uint64_t), void *))(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 16));
}

uint64_t sub_1A72C7880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A72BFD7C(a1, a2, a3, a4, a5, a6, *(void **)(v6 + 16));
}

uint64_t sub_1A72C788C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1A72C78C8(uint64_t a1)
{
  return sub_1A72C7978(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1A72C053C);
}

uint64_t sub_1A72C78E4(uint64_t a1)
{
  return sub_1A72C08F8(a1, v1[3], v1[4], v1[5]);
}

uint64_t sub_1A72C7908(uint64_t a1)
{
  return sub_1A72C0C0C(a1, *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16));
}

uint64_t objectdestroy_5Tm()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A72C7960(uint64_t a1)
{
  return sub_1A72C7978(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1A72C1028);
}

uint64_t sub_1A72C7978(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[4], v2[5], v2[6], v2[7], v2[2], v2[3]);
}

uint64_t sub_1A72C7990()
{
  return swift_deallocObject();
}

uint64_t sub_1A72C79A4(uint64_t a1)
{
  return sub_1A72C152C(a1, *(void *)(v1 + 32), *(void (**)(uint64_t, uint64_t))(v1 + 40));
}

uint64_t sub_1A72C79B4()
{
  return swift_deallocObject();
}

uint64_t sub_1A72C79C8()
{
  return sub_1A72C16C8(*(void *)(v0 + 32), *(void (**)(void))(v0 + 40));
}

uint64_t sub_1A72C79D8()
{
  return swift_deallocObject();
}

uint64_t sub_1A72C79E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1);
}

uint64_t sub_1A72C7A40()
{
  return swift_deallocObject();
}

uint64_t sub_1A72C7A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A72C18F8(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t sub_1A72C7A74(uint64_t a1)
{
  return sub_1A72C7AA8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A72C1FD8);
}

uint64_t sub_1A72C7A90(uint64_t a1)
{
  return sub_1A72C7AA8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A72C22E8);
}

uint64_t sub_1A72C7AA8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[4], v2[5], v2[6], v2[2], v2[3]);
}

uint64_t sub_1A72C7AC4(uint64_t a1)
{
  return sub_1A72C7BDC(a1, (uint64_t (*)(uint64_t, void, char *, void, void, void, void))sub_1A72C2688);
}

uint64_t objectdestroy_46Tm()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A72C7BC4(uint64_t a1)
{
  return sub_1A72C7BDC(a1, (uint64_t (*)(uint64_t, void, char *, void, void, void, void))sub_1A72C2AA4);
}

uint64_t sub_1A72C7BDC(uint64_t a1, uint64_t (*a2)(uint64_t, void, char *, void, void, void, void))
{
  uint64_t v3 = *(void *)(*((void *)v2 + 3) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = &v2[(*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8];
  return a2(a1, *((void *)v2 + 5), &v2[v4], *(void *)v5, *((void *)v5 + 1), *((void *)v2 + 2), *((void *)v2 + 4));
}

uint64_t sub_1A72C7C50()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A72C7C90(uint64_t a1)
{
  return sub_1A72C2E80(a1, v1[6], v1[7], v1[8], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t type metadata accessor for Promise()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A72C7CC0(uint64_t a1)
{
  return sub_1A72C7E94(a1, (uint64_t (*)(uint64_t, unint64_t, void))sub_1A72C318C);
}

void sub_1A72C7CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A72C3774(a1, a2, a3, a4, *(void *)(v4 + 32), *(uint64_t (**)())(v4 + 40), *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1A72C7CF8(uint64_t a1)
{
  return sub_1A72C438C(a1, *(uint64_t **)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t sub_1A72C7D14()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A72C7D54(uint64_t a1)
{
  return sub_1A72C4720(a1, *(uint64_t **)(v1 + 24), *(uint64_t **)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_1A72C7D74()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A72C7DBC(uint64_t a1)
{
  return sub_1A72C4DF8(a1, *(void **)(v1 + 24), *(uint64_t **)(v1 + 32), *(uint64_t **)(v1 + 40), *(void *)(v1 + 16));
}

uint64_t objectdestroy_55Tm()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_1A72C7E68(uint64_t a1)
{
  return sub_1A72C7E94(a1, (uint64_t (*)(uint64_t, unint64_t, void))sub_1A72C5AEC);
}

uint64_t sub_1A72C7E94(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, void))
{
  return a2(a1, v2+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 24) - 8) + 80)), *(void *)(v2 + 16));
}

uint64_t sub_1A72C7EF4()
{
  return sub_1A740AB90();
}

uint64_t sub_1A72C7F18()
{
  uint64_t v0 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  return v0;
}

uint64_t sub_1A72C7F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a3;
  uint64_t v5 = sub_1A7572210();
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1A7572260();
  uint64_t v8 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A7572220();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705908);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCB48], v11);
  swift_retain();
  uint64_t v16 = (void *)sub_1A75730E0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A72C91B4;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1A72C91DC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A73322E4;
  aBlock[3] = &block_descriptor;
  uint64_t v18 = _Block_copy(aBlock);
  sub_1A7572240();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1A72C9D88((unint64_t *)&qword_1EB704A90, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
  sub_1A72C9DD0((unint64_t *)&qword_1EB704AB0, (uint64_t *)&unk_1EB704AA0);
  sub_1A7573380();
  MEMORY[0x1AD0CB250](v21, v10, v7, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v20);
  return swift_release();
}

void sub_1A72C8328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A72C6108(a1, a2, a3, a4, v4);
}

uint64_t sub_1A72C8330(uint64_t a1)
{
  return sub_1A72C6804(a1, v1);
}

uint64_t sub_1A72C8338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A72C6ED4(a1, a2, a3, a4, a5, a6, *(void *)(v6 + 24), *(void *)(v6 + 16));
}

unint64_t sub_1A72C8344()
{
  unint64_t result = qword_1E96F3230;
  if (!qword_1E96F3230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F3230);
  }
  return result;
}

uint64_t destroy for PromiseError(uint64_t result)
{
  if (*(void *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    uint64_t v1 = result;
    __swift_destroy_boxed_opaque_existential_1(result);
    return __swift_destroy_boxed_opaque_existential_1(v1 + 32);
  }
  return result;
}

uint64_t initializeWithCopy for PromiseError(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
  }
  else
  {
    *(void *)(a1 + 24) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    uint64_t v5 = *(void *)(a2 + 56);
    *(void *)(a1 + 56) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for PromiseError(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      uint64_t v5 = *((void *)a2 + 7);
      *(void *)(a1 + 56) = v5;
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, (uint64_t)(a2 + 2));
      return a1;
    }
LABEL_7:
    long long v6 = *a2;
    long long v7 = a2[1];
    long long v8 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)a1 = v6;
    *(_OWORD *)(a1 + 16) = v7;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)a1, (uint64_t *)a2);
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 32), (uint64_t *)a2 + 4);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for PromiseError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_6;
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
LABEL_6:
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for PromiseError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PromiseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1A72C8938(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_1A72C8950(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 56) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PromiseError()
{
  return &type metadata for PromiseError;
}

uint64_t type metadata accessor for PromiseDisposableToken()
{
  return self;
}

uint64_t method lookup function for PromiseDisposableToken(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PromiseDisposableToken);
}

uint64_t dispatch thunk of PromiseDisposableToken.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1A72C89E8()
{
  return sub_1A72C8C1C();
}

uint64_t method lookup function for Promise(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Promise);
}

uint64_t dispatch thunk of Promise.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of Promise.__allocating_init(error:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of Promise.__allocating_init(resolver:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of Promise.then<A>(on:closure:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of Promise.then<A, B>(on:disposeOn:closure:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of Promise.error(on:closure:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of Promise.error<A>(on:disposeOn:closure:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of Promise.always(on:closure:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of Promise.always<A>(on:disposeOn:closure:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of Promise.cancelled(on:closure:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of Promise.rebase(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of Promise.cast<A>(as:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t sub_1A72C8C10()
{
  return sub_1A72C8C1C();
}

uint64_t sub_1A72C8C1C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PromiseWeakResolver()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1A72C8C70()
{
  unint64_t result = qword_1E96F1220;
  if (!qword_1E96F1220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1220);
  }
  return result;
}

uint64_t sub_1A72C8CC4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A72C8D1C(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = v1[9];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_1A72C8E18;
  return sub_1A72C702C(a1, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A72C8E18()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A72C8F10(uint64_t a1)
{
  return sub_1A72C6C4C(a1);
}

uint64_t sub_1A72C8FB4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  sub_1A7572BC0();

  return sub_1A72C6D3C();
}

uint64_t sub_1A72C9040()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A72C9080(uint64_t result)
{
  if (*(unsigned __int8 *)(result + 8) >= 2u) {
    return sub_1A7364A90(*(void *)(v1 + 16), 0, 1, *(uint64_t (**)(void))(v1 + 24), *(void *)(v1 + 32));
  }
  return result;
}

uint64_t sub_1A72C90A8(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB7054F8);
  sub_1A7572BC0();

  return sub_1A72C6E04(a1);
}

uint64_t sub_1A72C914C(uint64_t a1)
{
  return sub_1A72C6330(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_1A72C916C(uint64_t a1)
{
  return sub_1A72C6494(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_1A72C917C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A72C91B4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A72C91DC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A72C9204()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1A72C92D0(uint64_t a1)
{
  return sub_1A72C5038(a1, *(void **)(v1 + 48), *(void **)(v1 + 56), v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1A72C9328()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v2 - 8);
  unint64_t v6 = (v4 + *(void *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v2);

  return swift_deallocObject();
}

uint64_t sub_1A72C946C(uint64_t a1)
{
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1[2] - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[2] - 8) + 80);
  return sub_1A72C5318(a1, v1[6], (uint64_t)v1 + v2, (uint64_t)v1+ ((v2 + *(void *)(*(void *)(v1[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(v1[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[3] - 8) + 80)), v1[2], v1[3], v1[4]);
}

uint64_t sub_1A72C951C()
{
  uint64_t v1 = *((void *)v0 + 3);
  uint64_t v2 = *((void *)v0 + 4);
  uint64_t v3 = *(void *)(*((void *)v0 + 2) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 - 8);
  unint64_t v6 = (v4 + *(void *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 - 8);
  unint64_t v8 = (v6 + *(void *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(char *))(v3 + 8))(&v0[v4]);
  (*(void (**)(char *, uint64_t))(v5 + 8))(&v0[v6], v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(&v0[v8], v2);

  return swift_deallocObject();
}

uint64_t sub_1A72C96A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2[3];
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v2[2] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2[2] - 8) + 80);
  unint64_t v5 = (v4 + *(void *)(*(void *)(v2[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  return sub_1A72C56A4(a1, (uint64_t)v2 + v4, (uint64_t)v2 + v5, (uint64_t)v2+ ((v5 + *(void *)(*(void *)(v3 - 8) + 64) + *(unsigned __int8 *)(*(void *)(v2[4] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2[4] - 8) + 80)), v2[2], v3, v2[4], v2[5], a2);
}

uint64_t sub_1A72C97A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1A72C9864(uint64_t a1)
{
  return sub_1A72C4918(a1, *(void **)(v1 + 40), v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1A72C98BC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 - 8);
  unint64_t v5 = (v3 + *(void *)(v2 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v0 + v3);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v1);

  return swift_deallocObject();
}

uint64_t sub_1A72C99BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2[2] - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2[2] - 8) + 80);
  return sub_1A72C4BC0(a1, (uint64_t)v2 + v3, (uint64_t)v2+ ((v3 + *(void *)(*(void *)(v2[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(v2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2[3] - 8) + 80)), v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1A72C9A68()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_1A72C9AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A72C454C(a1, v2+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80)), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1A72C9B44()
{
  return swift_deallocObject();
}

uint64_t sub_1A72C9B80(uint64_t a1)
{
  return sub_1A72C9BD0(a1, (uint64_t)sub_1A72C9D24);
}

uint64_t sub_1A72C9BB0(uint64_t a1)
{
  return sub_1A72C9C3C(a1, (uint64_t)sub_1A72C9CA0);
}

uint64_t sub_1A72C9BD0(uint64_t a1, uint64_t a2)
{
  return sub_1A72C40FC(a1, v2[5], v2[6], v2[7], v2[2], v2[3], v2[4], a2);
}

uint64_t objectdestroy_133Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A72C9C3C(uint64_t a1, uint64_t a2)
{
  return sub_1A72C4184(a1, v2[5], v2[6], v2[7], v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1A72C9C68(uint64_t a1)
{
  return sub_1A73A9ABC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void (**)(void, void))(v1 + 56), *(void *)(v1 + 64), *(uint64_t (**)(void))(v1 + 72), *(void *)(v1 + 80));
}

uint64_t type metadata accessor for Promise.FirstBlockRunner()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A72C9CBC()
{
  return swift_deallocObject();
}

uint64_t sub_1A72C9CCC()
{
  uint64_t v1 = *(unsigned char **)(v0 + 24);
  if ((*v1 & 1) == 0)
  {
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 32);
    *uint64_t v1 = 1;
    return v2();
  }
  return result;
}

uint64_t sub_1A72C9D0C()
{
  return swift_deallocObject();
}

uint64_t sub_1A72C9D1C()
{
  return sub_1A72E36C4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A72C9D28()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_1A72C9D58()
{
  return (*(uint64_t (**)(void))(v0 + 40))(*(void *)(v0 + 56));
}

uint64_t sub_1A72C9D88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A72C9DD0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A72C9E20()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

void *sub_1A72C9EA8(uint64_t a1)
{
  return sub_1A72C34E8(a1, v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)), *(void *)(v1 + 16));
}

uint64_t sub_1A72C9F00(uint64_t a1)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  return a1;
}

uint64_t sub_1A72C9F44()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A72C9F7C(void *a1)
{
  return DeferredPromise.reject(_:)(a1);
}

void sub_1A72C9FA0()
{
}

uint64_t sub_1A72C9FC4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A72C9FFC(void *a1)
{
  return DeferredPromise.reject(_:)(a1);
}

void sub_1A72CA020()
{
}

uint64_t sub_1A72CA044(uint64_t a1, void *a2)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 40))();
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_1A72CA0E0()
{
  unint64_t result = qword_1EB705470;
  if (!qword_1EB705470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705470);
  }
  return result;
}

uint64_t sub_1A72CA134(uint64_t a1)
{
  return DeferredPromise.resolve(_:)(a1);
}

uint64_t sub_1A72CA158(uint64_t a1)
{
  return DeferredPromise.resolve(_:)(a1);
}

uint64_t sub_1A72CA17C(void *a1)
{
  return DeferredPromise.reject(_:)(a1);
}

void sub_1A72CA1A0()
{
}

uint64_t sub_1A72CA1C4()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1A72CA20C(uint64_t a1)
{
  sub_1A72BFE58(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void (**)(uint64_t, uint64_t))(v1 + 40), *(void *)(v1 + 48), *(void (**)(id))(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16));
}

void sub_1A72CA224(uint64_t a1)
{
  sub_1A72BFB04(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void (**)(void))(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16));
}

uint64_t sub_1A72CA234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t initializeBufferWithCopyOfBuffer for REMReminderDetailDataView.CheckUpdateResult(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v3;
  id v4 = v3;
  return a1;
}

void destroy for REMRemindersInCalendarDataView.FetchResultToken(uint64_t a1)
{
}

uint64_t sub_1A72CA27C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void **)(a2 + 8);
  id v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v3;
  id v5 = v3;

  return a1;
}

uint64_t sub_1A72CA2BC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersInCalendarDataView.FetchResultToken(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersInCalendarDataView.FetchResultToken(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void REMStore.invoke<A, B>(_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = v4;
  _OWORD v22[2] = *(id *)MEMORY[0x1E4F143B8];
  v22[0] = 0;
  id v9 = objc_msgSend(v4, sel_resultFromPerformingInvocation_error_, a1, v22);
  id v10 = v22[0];
  if (v9)
  {
    id v11 = v9;
    uint64_t v21 = a2;
    swift_getAssociatedTypeWitness();
    uint64_t v12 = swift_dynamicCastUnknownClass();
    if (v12)
    {
      uint64_t v13 = v12;
      v22[0] = a1;
      uint64_t v14 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(a4 + 24);
      id v15 = v10;
      id v11 = v11;
      v14(v13, v5, v21, a4);
    }
    else
    {
      uint64_t v17 = self;
      v22[0] = 0;
      v22[1] = (id)0xE000000000000000;
      id v18 = v10;
      sub_1A7573560();
      sub_1A7572740();
      id v19 = objc_msgSend(v11, sel_description);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      sub_1A7574270();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      swift_getWitnessTable();
      sub_1A7573D80();
      uint64_t v20 = (void *)sub_1A75725E0();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_internalErrorWithDebugDescription_, v20);

      swift_willThrow();
    }
  }
  else
  {
    id v16 = v22[0];
    sub_1A7571850();

    swift_willThrow();
  }
}

uint64_t REMStoreInvocationKeySpace.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMStoreInvocationKeySpace.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t dispatch thunk of REMInvocableProtocol.clientResult(from:store:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t type metadata accessor for REMStoreInvocationKeySpace()
{
  return self;
}

uint64_t method lookup function for REMStoreInvocationKeySpace(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMStoreInvocationKeySpace);
}

uint64_t sub_1A72CA7B8()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F12D0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F12D0);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t REMRecurrenceFrequency.shortDescription.getter(uint64_t a1)
{
  uint64_t v2 = sub_1A7571E90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = 0x796C72756F68;
  switch(a1)
  {
    case 0:
      uint64_t result = 0x796C696164;
      break;
    case 1:
      uint64_t result = 0x796C6B656577;
      break;
    case 2:
      uint64_t result = 0x796C68746E6F6DLL;
      break;
    case 3:
      uint64_t result = 0x796C72616579;
      break;
    case 4:
      return result;
    default:
      if (qword_1E96F06D0 != -1) {
        swift_once();
      }
      uint64_t v7 = __swift_project_value_buffer(0x796C72756F68, (uint64_t)qword_1E96F12D0);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, 0x796C72756F68);
      uint64_t v8 = MEMORY[0x1E4FBC860];
      sub_1A72B0944(MEMORY[0x1E4FBC860]);
      sub_1A72B0944(v8);
      sub_1A73A67DC((uint64_t)"Unknown REMRecurrenceFrequency", 30, 2);
      __break(1u);
      JUMPOUT(0x1A72CAA3CLL);
  }
  return result;
}

void REMRecurrenceFrequency.tinyDescription.getter(unint64_t a1)
{
  uint64_t v2 = sub_1A7571E90();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >= 5)
  {
    uint64_t v7 = v4;
    if (qword_1E96F06D0 != -1) {
      swift_once();
    }
    uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1E96F12D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v8, v7);
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1A72B0944(MEMORY[0x1E4FBC860]);
    sub_1A72B0944(v9);
    sub_1A73A67DC((uint64_t)"Unknown REMRecurrenceFrequency", 30, 2);
    __break(1u);
  }
}

unint64_t sub_1A72CABA0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F12E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A7578D60;
  *(void *)(inited + 32) = 28261;
  *(void *)(inited + 40) = 0xE200000000000000;
  uint64_t v1 = sub_1A74FA014((uint64_t)&unk_1EFC8DD10);
  swift_arrayDestroy();
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = 0x736E61482D687ALL;
  *(void *)(inited + 64) = 0xE700000000000000;
  uint64_t v2 = sub_1A74FA014((uint64_t)&unk_1EFC8F220);
  swift_arrayDestroy();
  *(void *)(inited + 72) = v2;
  return sub_1A72B0A7C(inited);
}

uint64_t Calendar.isDateComponents(_:inSameDayAs:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v64 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  v65 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v51 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v60 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v51 - v13;
  uint64_t v15 = sub_1A7571B60();
  uint64_t v68 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v59 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v67 = (char *)&v51 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v66 = (char *)&v51 - v20;
  uint64_t v21 = sub_1A75717A0();
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v62(v9, a1, v21);
  uint64_t v63 = *(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56);
  v63(v9, 0, 1, v21);
  uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  uint64_t v23 = 0;
  if (v61(v9, 1, v21) != 1)
  {
    uint64_t v23 = (void *)sub_1A75716B0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v21);
  }
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94AD8]), sel_initWithDueDateComponents_alarms_, v23, 0);

  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v14, 1, 1, v15);
    goto LABEL_8;
  }
  uint64_t v57 = v22 + 16;
  uint64_t v58 = v22 + 56;
  uint64_t v55 = v3;
  uint64_t v56 = v22;
  id v25 = objc_msgSend(v24, sel_date);

  uint64_t v26 = v14;
  uint64_t v27 = v67;
  sub_1A7571B20();

  uint64_t v28 = v68;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
  uint64_t v30 = v27;
  uint64_t v14 = v26;
  v29(v26, v30, v15);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  v31(v26, 0, 1, v15);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v32(v26, 1, v15) == 1)
  {
LABEL_8:
    uint64_t v36 = (uint64_t)v14;
LABEL_15:
    sub_1A72CB560(v36, &qword_1EB704C60);
    char v48 = 0;
    return v48 & 1;
  }
  uint64_t v52 = v32;
  uint64_t v53 = v29;
  uint64_t v54 = v31;
  uint64_t v33 = v15;
  v29(v66, v26, v15);
  uint64_t v34 = v65;
  v62(v65, v64, v21);
  v63(v34, 0, 1, v21);
  if (v61(v34, 1, v21) == 1)
  {
    uint64_t v35 = 0;
  }
  else
  {
    uint64_t v35 = (void *)sub_1A75716B0();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v21);
  }
  uint64_t v37 = v67;
  uint64_t v38 = v68;
  uint64_t v39 = v60;
  uint64_t v40 = v54;
  id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94AD8]), sel_initWithDueDateComponents_alarms_, v35, 0);

  if (!v41)
  {
    uint64_t v44 = v15;
    v40(v39, 1, 1, v15);
    goto LABEL_14;
  }
  id v42 = objc_msgSend(v41, sel_date);

  sub_1A7571B20();
  uint64_t v43 = v37;
  uint64_t v44 = v15;
  uint64_t v45 = v53;
  v53(v39, v43, v15);
  v40(v39, 0, 1, v15);
  if (v52(v39, 1, v15) == 1)
  {
LABEL_14:
    (*(void (**)(char *, uint64_t))(v38 + 8))(v66, v44);
    uint64_t v36 = (uint64_t)v39;
    goto LABEL_15;
  }
  uint64_t v46 = v59;
  v45(v59, v39, v33);
  uint64_t v47 = v66;
  char v48 = sub_1A7571DB0();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v38 + 8);
  v49(v46, v33);
  v49(v47, v33);
  return v48 & 1;
}

uint64_t Calendar.endOfDay(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = sub_1A7571DE0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A7571B60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v19 - v15;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F27BF0], v3);
  sub_1A7571DA0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1A72CB560((uint64_t)v9, &qword_1EB704C60);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v20, a1, v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    sub_1A7571D40();
    sub_1A7571AA0();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
    v18(v14, v10);
    return ((uint64_t (*)(char *, uint64_t))v18)(v16, v10);
  }
}

uint64_t Calendar.startOfMonth(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A72CB5D4(a1, MEMORY[0x1E4F26E58], a2);
}

uint64_t sub_1A72CB560(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t Calendar.endOfMonth(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A72CB5D4(a1, MEMORY[0x1E4F26E50], a2);
}

uint64_t sub_1A72CB5D4@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v4 = sub_1A7571B60();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A7571DE0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F12F0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F27C30], v8);
  sub_1A7571D50();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v18 = sub_1A7571510();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18);
  if (v20 == 1)
  {
    sub_1A72CB560((uint64_t)v14, &qword_1E96F12F0);
    uint64_t v21 = 1;
  }
  else
  {
    v23(v20);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v18);
    uint64_t v21 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v17, v21, 1, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v17, 1, v4) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v24, v7, v4);
    return sub_1A72CB560((uint64_t)v17, &qword_1EB704C60);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v24, v17, v4);
  }
}

uint64_t Calendar.beginningOfNextDay(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v51 = a2;
  uint64_t v50 = sub_1A7571B60();
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  id v41 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1A7571D70();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  uint64_t v47 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v45 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1A7571D80();
  uint64_t v6 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1A7571D60();
  uint64_t v39 = *(void *)(v52 - 8);
  uint64_t v9 = v39;
  MEMORY[0x1F4188790](v52);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v40 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B68);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B60);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1A75717A0();
  uint64_t v43 = *(void *)(v20 - 8);
  uint64_t v44 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1A7571E00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v19, 1, 1, v23);
  uint64_t v24 = sub_1A7571E60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v16, 1, 1, v24);
  uint64_t v38 = v22;
  sub_1A7571760();
  id v25 = v11;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F27B68], v52);
  uint64_t v26 = v42;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F27BA8], v42);
  uint64_t v27 = v46;
  uint64_t v28 = v47;
  uint64_t v29 = v45;
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v45, *MEMORY[0x1E4F27B80], v46);
  uint64_t v30 = (uint64_t)v40;
  uint64_t v31 = v25;
  uint64_t v32 = v8;
  uint64_t v33 = v29;
  sub_1A7571DD0();
  uint64_t v34 = v48;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v27);
  uint64_t v35 = v50;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v32, v26);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v52);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v44);
  uint64_t v36 = v41;
  (*(void (**)(void))(v34 + 16))();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v30, 1, v35) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v51, v36, v35);
    return sub_1A72CB560(v30, &qword_1EB704C60);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v51, v30, v35);
  }
}

uint64_t Calendar.beginningOfPreviousDay(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v64 = a1;
  uint64_t v2 = sub_1A7571D80();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v60 = v2;
  uint64_t v61 = v3;
  MEMORY[0x1F4188790](v2);
  uint64_t v59 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A7571D70();
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v56 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A7571D60();
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v8 = v48;
  uint64_t v49 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A7571E00();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A7571B60();
  uint64_t v54 = *(void *)(v15 - 8);
  uint64_t v55 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v53 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v47 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v52 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B68);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B60);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v47 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1A75717A0();
  uint64_t v50 = *(void *)(v28 - 8);
  uint64_t v51 = v28;
  MEMORY[0x1F4188790](v28);
  uint64_t v63 = (char *)&v47 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v27, 1, 1, v11);
  uint64_t v30 = sub_1A7571E60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v24, 1, 1, v30);
  sub_1A7571760();
  sub_1A7571DC0();
  uint64_t v47 = v19;
  sub_1A7571D40();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v31 = *(void (**)(char *, void, uint64_t))(v8 + 104);
  uint64_t v32 = v10;
  uint64_t v33 = v49;
  v31(v10, *MEMORY[0x1E4F27B68], v49);
  uint64_t v35 = v56;
  uint64_t v34 = v57;
  uint64_t v36 = v58;
  (*(void (**)(char *, void, uint64_t))(v57 + 104))(v56, *MEMORY[0x1E4F27B90], v58);
  uint64_t v37 = v60;
  uint64_t v38 = v61;
  uint64_t v39 = v59;
  (*(void (**)(char *, void, uint64_t))(v61 + 104))(v59, *MEMORY[0x1E4F27BA8], v60);
  uint64_t v40 = (uint64_t)v52;
  id v41 = v32;
  sub_1A7571DD0();
  uint64_t v42 = v53;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v41, v33);
  uint64_t v44 = v54;
  uint64_t v43 = v55;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v54 + 8);
  v45(v47, v55);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v63, v51);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v42, v64, v43);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v40, 1, v43) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v62, v42, v43);
    return sub_1A72CB560(v40, &qword_1EB704C60);
  }
  else
  {
    v45(v42, v43);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v62, v40, v43);
  }
}

uint64_t Equatable.tryEqual(_:_:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v17 = a6;
  uint64_t v18 = a2;
  v16[0] = a5;
  uint64_t v19 = a3;
  uint64_t v9 = sub_1A75719C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = v7;
  v16[2] = a1;
  uint64_t result = sub_1A75725C0();
  if ((result & 1) == 0)
  {
    sub_1A75718C0();
    sub_1A75718D0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v14 = self;
    uint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    sub_1A7573D70();
    sub_1A7572740();
    sub_1A7573D70();
    sub_1A7572740();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    uint64_t v22 = v17;
    sub_1A7573BC0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7572740();
    sub_1A7572740();
    uint64_t v15 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_internalErrorWithDebugDescription_, v15, v16[0]);

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A72CC9A8()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F12F8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F12F8);
  if (qword_1E96F0788 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1E972BC10);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

ReminderKitInternal::RDUserNotificationCategory_optional __swiftcall RDUserNotificationCategory.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 13;
  if (v3 < 0xD) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static RDUserNotificationCategory.allCases.getter()
{
  return &unk_1EFC8F408;
}

unint64_t RDUserNotificationCategory.rawValue.getter()
{
  unint64_t result = 0xD00000000000001FLL;
  switch(*v0)
  {
    case 1:
    case 5:
    case 0xC:
      unint64_t result = 0xD000000000000023;
      break;
    case 2:
      unint64_t result = 0xD000000000000034;
      break;
    case 3:
      unint64_t result = 0xD000000000000028;
      break;
    case 4:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 6:
      unint64_t result = 0xD00000000000002FLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000031;
      break;
    case 8:
      unint64_t result = 0xD00000000000003CLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000003ELL;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000040;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000042;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A72CCC18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A7542F94(*a1, *a2);
}

uint64_t sub_1A72CCC24()
{
  return sub_1A7574110();
}

uint64_t sub_1A72CCC8C()
{
  RDUserNotificationCategory.rawValue.getter();
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A72CCCF0()
{
  return sub_1A7574110();
}

ReminderKitInternal::RDUserNotificationCategory_optional sub_1A72CCD54(Swift::String *a1)
{
  return RDUserNotificationCategory.init(rawValue:)(*a1);
}

unint64_t sub_1A72CCD60@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = RDUserNotificationCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1A72CCD88(void *a1@<X8>)
{
  *a1 = &unk_1EFC8F408;
}

ReminderKitInternal::RDUserNotificationAction_optional __swiftcall RDUserNotificationAction.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t RDUserNotificationAction.rawValue.getter()
{
  unint64_t result = 0xD00000000000002FLL;
  switch(*v0)
  {
    case 1:
    case 4:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 2:
      unint64_t result = 0xD00000000000002FLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000032;
      break;
    case 6:
      unint64_t result = 0xD000000000000033;
      break;
    case 7:
      unint64_t result = 0xD000000000000030;
      break;
    case 8:
      unint64_t result = 0xD00000000000003DLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000003ALL;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000042;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A72CCF10(char *a1, char *a2)
{
  return sub_1A7543EE4(*a1, *a2);
}

uint64_t sub_1A72CCF1C()
{
  return sub_1A7574110();
}

uint64_t sub_1A72CCF64()
{
  return sub_1A7503084();
}

uint64_t sub_1A72CCF6C()
{
  return sub_1A7574110();
}

ReminderKitInternal::RDUserNotificationAction_optional sub_1A72CCFB0(Swift::String *a1)
{
  return RDUserNotificationAction.init(rawValue:)(*a1);
}

unint64_t sub_1A72CCFBC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = RDUserNotificationAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void RDUserNotificationType.init(notificationContent:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_categoryIdentifier);
  uint64_t v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v7 = v6;

  v8._countAndFlagsBits = v5;
  v8._object = v7;
  RDUserNotificationCategory.init(rawValue:)(v8);
  switch((char)v96)
  {
    case 1:
      goto LABEL_21;
    case 2:
      UNNotificationContent.notificationIdentifier.getter((uint64_t)&v96);
      unsigned __int8 v32 = v97;
      if (v97 == 255)
      {
LABEL_21:

        *(void *)a2 = 0;
        *(void *)(a2 + 8) = 0;
        char v11 = -64;
        goto LABEL_52;
      }
      uint64_t v34 = (void *)*((void *)&v96 + 1);
      uint64_t v33 = (void *)v96;
      sub_1A72D1D20((void *)v96, *((id *)&v96 + 1), v97 & 1);
      if (qword_1E96F06D8 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_1A7571E90();
      __swift_project_value_buffer(v35, (uint64_t)qword_1E96F12F8);
      id v36 = a1;
      uint64_t v37 = sub_1A7571E80();
      os_log_type_t v38 = sub_1A7572FE0();
      if (os_log_type_enabled(v37, v38))
      {
        os_log_type_t type = v38;
        uint64_t v39 = swift_slowAlloc();
        uint64_t v90 = swift_slowAlloc();
        *(void *)&long long v96 = v90;
        *(_DWORD *)uint64_t v39 = 136315394;
        id v40 = objc_msgSend(v36, (SEL)&selRef_creationDate);
        v93 = v34;
        v95 = v33;
        uint64_t v41 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        unint64_t v43 = v42;

        uint64_t v98 = sub_1A72D1730(v41, v43, (uint64_t *)&v96);
        sub_1A7573250();

        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2080;
        id v44 = objc_msgSend(v36, sel_userInfo);
        sub_1A75723F0();

        uint64_t v45 = sub_1A7572400();
        unint64_t v47 = v46;
        swift_bridgeObjectRelease();
        uint64_t v48 = v45;
        uint64_t v33 = v95;
        uint64_t v98 = sub_1A72D1730(v48, v47, (uint64_t *)&v96);
        sub_1A7573250();

        uint64_t v34 = v93;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v37, type, "No notificationIdentifier found in notification content. {categoryIdentifier: %s, userInfo: %s}", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v90, -1, -1);
        MEMORY[0x1AD0CD330](v39, -1, -1);

        sub_1A72D1D30(v95, v93, v32);
      }
      else
      {
        sub_1A72D1D30(v33, v34, v32);
      }
      *(void *)a2 = v33;
      *(void *)(a2 + 8) = v34;
      *(unsigned char *)(a2 + 16) = v32 & 1 | 0x20;
      return;
    case 3:

      long long v49 = xmmword_1A7578DA0;
      goto LABEL_26;
    case 4:
      id v50 = UNNotificationContent.listID.getter();
      if (v50)
      {
        id v51 = v50;

        *(void *)a2 = v51;
        *(void *)(a2 + 8) = 0;
        char v11 = 64;
        goto LABEL_52;
      }
      if (qword_1E96F06D8 != -1) {
        swift_once();
      }
      uint64_t v80 = sub_1A7571E90();
      __swift_project_value_buffer(v80, (uint64_t)qword_1E96F12F8);
      id v15 = a1;
      uint64_t v16 = sub_1A7571E80();
      os_log_type_t v81 = sub_1A7572FE0();
      if (!os_log_type_enabled(v16, v81)) {
        goto LABEL_49;
      }
      os_log_type_t v94 = v81;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v92 = swift_slowAlloc();
      *(void *)&long long v96 = v92;
      *(_DWORD *)uint64_t v22 = 136315394;
      id v82 = objc_msgSend(v15, (SEL)&selRef_creationDate);
      uint64_t v83 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      unint64_t v85 = v84;

      uint64_t v98 = sub_1A72D1730(v83, v85, (uint64_t *)&v96);
      sub_1A7573250();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      id v86 = objc_msgSend(v15, sel_userInfo);
      sub_1A75723F0();

      uint64_t v87 = sub_1A7572400();
      unint64_t v89 = v88;
      swift_bridgeObjectRelease();
      uint64_t v98 = sub_1A72D1730(v87, v89, (uint64_t *)&v96);
      sub_1A7573250();

      swift_bridgeObjectRelease();
      uint64_t v31 = "No listID found in notification content. {categoryIdentifier: %s, userInfo: %s}";
      goto LABEL_47;
    case 5:

      long long v49 = xmmword_1A7578D90;
LABEL_26:
      *(_OWORD *)a2 = v49;
      char v11 = -64;
      goto LABEL_52;
    case 6:
    case 7:
      unint64_t v18 = UNNotificationContent.reminderIDs.getter();
      if (v18)
      {
        unint64_t v19 = v18;

        *(void *)a2 = v19;
        *(void *)(a2 + 8) = 0;
        char v11 = 96;
        goto LABEL_52;
      }
      if (qword_1E96F06D8 != -1) {
        swift_once();
      }
      uint64_t v70 = sub_1A7571E90();
      __swift_project_value_buffer(v70, (uint64_t)qword_1E96F12F8);
      id v15 = a1;
      uint64_t v16 = sub_1A7571E80();
      os_log_type_t v71 = sub_1A7572FE0();
      if (!os_log_type_enabled(v16, v71)) {
        goto LABEL_49;
      }
      os_log_type_t v94 = v71;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v92 = swift_slowAlloc();
      *(void *)&long long v96 = v92;
      *(_DWORD *)uint64_t v22 = 136315394;
      id v72 = objc_msgSend(v15, (SEL)&selRef_creationDate);
      uint64_t v73 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      unint64_t v75 = v74;

      uint64_t v98 = sub_1A72D1730(v73, v75, (uint64_t *)&v96);
      sub_1A7573250();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      id v76 = objc_msgSend(v15, sel_userInfo);
      sub_1A75723F0();

      uint64_t v77 = sub_1A7572400();
      unint64_t v79 = v78;
      swift_bridgeObjectRelease();
      uint64_t v98 = sub_1A72D1730(v77, v79, (uint64_t *)&v96);
      sub_1A7573250();

      swift_bridgeObjectRelease();
      uint64_t v31 = "No reminderIDs found in assignment notification content. {categoryIdentifier: %s, userInfo: %s}";
      goto LABEL_47;
    case 8:
    case 9:
    case 10:
    case 11:
      unint64_t v9 = UNNotificationContent.reminderIDs.getter();
      if (v9)
      {
        unint64_t v10 = v9;

        *(void *)a2 = v10;
        *(void *)(a2 + 8) = 0;
        char v11 = 0x80;
        goto LABEL_52;
      }
      if (qword_1E96F06D8 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_1A7571E90();
      __swift_project_value_buffer(v20, (uint64_t)qword_1E96F12F8);
      id v15 = a1;
      uint64_t v16 = sub_1A7571E80();
      os_log_type_t v21 = sub_1A7572FE0();
      if (!os_log_type_enabled(v16, v21)) {
        goto LABEL_49;
      }
      os_log_type_t v94 = v21;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v92 = swift_slowAlloc();
      *(void *)&long long v96 = v92;
      *(_DWORD *)uint64_t v22 = 136315394;
      id v23 = objc_msgSend(v15, sel_categoryIdentifier);
      uint64_t v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      unint64_t v26 = v25;

      uint64_t v98 = sub_1A72D1730(v24, v26, (uint64_t *)&v96);
      sub_1A7573250();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      id v27 = objc_msgSend(v15, sel_userInfo);
      sub_1A75723F0();

      uint64_t v28 = sub_1A7572400();
      unint64_t v30 = v29;
      swift_bridgeObjectRelease();
      uint64_t v98 = sub_1A72D1730(v28, v30, (uint64_t *)&v96);
      sub_1A7573250();

      swift_bridgeObjectRelease();
      uint64_t v31 = "No reminderIDs found in shared list update notification content. {categoryIdentifier: %s, userInfo: %s}";
      goto LABEL_47;
    case 12:
      UNNotificationContent.notificationIdentifier.getter((uint64_t)&v96);
      unsigned __int8 v52 = v97;
      if (v97 != 255)
      {

        char v11 = v52 & 1 | 0xA0;
        *(_OWORD *)a2 = v96;
        goto LABEL_52;
      }
      if (qword_1E96F06D8 != -1) {
        swift_once();
      }
      uint64_t v53 = sub_1A7571E90();
      __swift_project_value_buffer(v53, (uint64_t)qword_1E96F12F8);
      id v15 = a1;
      uint64_t v16 = sub_1A7571E80();
      os_log_type_t v17 = sub_1A7572FE0();
      if (os_log_type_enabled(v16, v17)) {
        goto LABEL_31;
      }
      goto LABEL_49;
    default:
      id v12 = objc_msgSend(a1, (SEL)&selRef_creationDate);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      LOBYTE(v12) = sub_1A72CEA18();
      swift_bridgeObjectRelease();
      if (v12)
      {
        UNNotificationContent.notificationIdentifier.getter((uint64_t)&v96);
        unsigned __int8 v13 = v97;
        if (v97 != 255)
        {

          char v11 = v13 & 1;
          *(_OWORD *)a2 = v96;
          goto LABEL_52;
        }
        if (qword_1E96F06D8 != -1) {
          swift_once();
        }
        uint64_t v14 = sub_1A7571E90();
        __swift_project_value_buffer(v14, (uint64_t)qword_1E96F12F8);
        id v15 = a1;
        uint64_t v16 = sub_1A7571E80();
        os_log_type_t v17 = sub_1A7572FE0();
        if (os_log_type_enabled(v16, v17))
        {
LABEL_31:
          os_log_type_t v94 = v17;
          uint64_t v22 = swift_slowAlloc();
          uint64_t v92 = swift_slowAlloc();
          *(void *)&long long v96 = v92;
          *(_DWORD *)uint64_t v22 = 136315394;
          id v54 = objc_msgSend(v15, (SEL)&selRef_creationDate);
          uint64_t v55 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          unint64_t v57 = v56;

          uint64_t v98 = sub_1A72D1730(v55, v57, (uint64_t *)&v96);
          sub_1A7573250();

          swift_bridgeObjectRelease();
          *(_WORD *)(v22 + 12) = 2080;
          id v58 = objc_msgSend(v15, sel_userInfo);
          sub_1A75723F0();

          uint64_t v59 = sub_1A7572400();
          unint64_t v61 = v60;
          swift_bridgeObjectRelease();
          uint64_t v98 = sub_1A72D1730(v59, v61, (uint64_t *)&v96);
          sub_1A7573250();

          swift_bridgeObjectRelease();
          uint64_t v31 = "No notificationIdentifier found in notification content {categoryID: %s, userInfo: %s}";
LABEL_47:
          _os_log_impl(&dword_1A72A1000, v16, v94, v31, (uint8_t *)v22, 0x16u);
          swift_arrayDestroy();
          uint64_t v69 = v92;
          goto LABEL_48;
        }
LABEL_49:
      }
      else
      {
        if (qword_1E96F06D8 != -1) {
          swift_once();
        }
        uint64_t v62 = sub_1A7571E90();
        __swift_project_value_buffer(v62, (uint64_t)qword_1E96F12F8);
        id v15 = a1;
        uint64_t v16 = sub_1A7571E80();
        os_log_type_t v63 = sub_1A7572FE0();
        if (os_log_type_enabled(v16, v63))
        {
          uint64_t v22 = swift_slowAlloc();
          uint64_t v64 = swift_slowAlloc();
          *(_DWORD *)uint64_t v22 = 136315138;
          *(void *)&long long v96 = v64;
          id v65 = objc_msgSend(v15, (SEL)&selRef_creationDate);
          uint64_t v66 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          unint64_t v68 = v67;

          uint64_t v98 = sub_1A72D1730(v66, v68, (uint64_t *)&v96);
          sub_1A7573250();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A72A1000, v16, v63, "Unhandled notification content category {category: %s}", (uint8_t *)v22, 0xCu);
          swift_arrayDestroy();
          uint64_t v69 = v64;
LABEL_48:
          MEMORY[0x1AD0CD330](v69, -1, -1);
          MEMORY[0x1AD0CD330](v22, -1, -1);

          goto LABEL_51;
        }
      }
LABEL_51:

      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0;
      char v11 = -2;
LABEL_52:
      *(unsigned char *)(a2 + 16) = v11;
      return;
  }
}

uint64_t UNNotificationContent.notificationIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A7571BC0();
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(v1, sel_userInfo);
  uint64_t v11 = sub_1A75723F0();

  unint64_t v28 = 0xD000000000000033;
  unint64_t v29 = 0x80000001A759EFF0;
  sub_1A7573490();
  if (*(void *)(v11 + 16) && (unint64_t v12 = sub_1A72B24E8((uint64_t)v30), (v13 & 1) != 0))
  {
    sub_1A72BEE98(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v31);
  }
  else
  {
    long long v31 = 0u;
    long long v32 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A72BF194((uint64_t)v30);
  if (!*((void *)&v32 + 1))
  {
    sub_1A72CB560((uint64_t)&v31, &qword_1EB705938);
    goto LABEL_9;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_9:
    id v17 = objc_msgSend(v2, sel_userInfo);
    uint64_t v18 = sub_1A75723F0();

    unint64_t v28 = 0xD00000000000001FLL;
    unint64_t v29 = 0x80000001A759F030;
    sub_1A7573490();
    if (*(void *)(v18 + 16) && (unint64_t v19 = sub_1A72B24E8((uint64_t)v30), (v20 & 1) != 0))
    {
      sub_1A72BEE98(*(void *)(v18 + 56) + 32 * v19, (uint64_t)&v31);
    }
    else
    {
      long long v31 = 0u;
      long long v32 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1A72BF194((uint64_t)v30);
    if (*((void *)&v32 + 1))
    {
      uint64_t result = swift_dynamicCast();
      if ((result & 1) == 0)
      {
LABEL_19:
        *(void *)a1 = 0;
        *(void *)(a1 + 8) = 0;
        char v16 = -1;
        goto LABEL_20;
      }
      sub_1A7571B70();
      swift_bridgeObjectRelease();
      uint64_t v21 = v27;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v6, 1, v7) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v9, v6, v7);
        uint64_t v24 = self;
        unint64_t v25 = (void *)sub_1A7571B90();
        id v26 = objc_msgSend(v24, sel_objectIDWithUUID_, v25);

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v9, v7);
        *(void *)a1 = v26;
        *(void *)(a1 + 8) = 0;
        *(unsigned char *)(a1 + 16) = 0;
        return result;
      }
      uint64_t v22 = &qword_1EB704C40;
      id v23 = v6;
    }
    else
    {
      uint64_t v22 = &qword_1EB705938;
      id v23 = (char *)&v31;
    }
    uint64_t result = sub_1A72CB560((uint64_t)v23, v22);
    goto LABEL_19;
  }
  unint64_t v15 = v29;
  *(void *)a1 = v28;
  *(void *)(a1 + 8) = v15;
  char v16 = 1;
LABEL_20:
  *(unsigned char *)(a1 + 16) = v16;
  return result;
}

id UNNotificationContent.listID.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A7571BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(v0, sel_userInfo);
  uint64_t v9 = sub_1A75723F0();

  v18[1] = 0xD00000000000001BLL;
  v18[2] = 0x80000001A759F050;
  sub_1A7573490();
  if (*(void *)(v9 + 16) && (unint64_t v10 = sub_1A72B24E8((uint64_t)v19), (v11 & 1) != 0))
  {
    sub_1A72BEE98(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v20);
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A72BF194((uint64_t)v19);
  if (!*((void *)&v21 + 1))
  {
    unint64_t v12 = &qword_1EB705938;
    char v13 = (char *)&v20;
LABEL_10:
    sub_1A72CB560((uint64_t)v13, v12);
    return 0;
  }
  if (swift_dynamicCast())
  {
    sub_1A7571B70();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      char v16 = self;
      id v17 = (void *)sub_1A7571B90();
      id v14 = objc_msgSend(v16, sel_objectIDWithUUID_, v17);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return v14;
    }
    unint64_t v12 = &qword_1EB704C40;
    char v13 = v3;
    goto LABEL_10;
  }
  return 0;
}

unint64_t UNNotificationContent.reminderIDs.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A7571BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(v0, sel_userInfo);
  uint64_t v9 = sub_1A75723F0();

  unint64_t v26 = 0xD000000000000020;
  unint64_t v27 = 0x80000001A759F070;
  sub_1A7573490();
  if (*(void *)(v9 + 16) && (unint64_t v10 = sub_1A72B24E8((uint64_t)v28), (v11 & 1) != 0))
  {
    sub_1A72BEE98(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v29);
  }
  else
  {
    long long v29 = 0u;
    long long v30 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A72BF194((uint64_t)v28);
  if (!*((void *)&v30 + 1))
  {
    sub_1A72CB560((uint64_t)&v29, &qword_1EB705938);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  unint64_t v12 = v26;
  unint64_t v13 = MEMORY[0x1E4FBC860];
  v28[0] = MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(v26 + 16);
  if (v14)
  {
    unint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    unint64_t v25 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    char v16 = (void (**)(char *, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    v24[1] = v12;
    unint64_t v17 = v12 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A7571B70();
      if ((*v15)(v3, 1, v4) == 1)
      {
        sub_1A72CB560((uint64_t)v3, &qword_1EB704C40);
        swift_bridgeObjectRelease();
      }
      else
      {
        (*v25)(v7, v3, v4);
        uint64_t v18 = self;
        unint64_t v19 = (void *)sub_1A7571B90();
        id v20 = objc_msgSend(v18, sel_objectIDWithUUID_, v19);

        (*v16)(v7, v4);
        uint64_t v21 = swift_bridgeObjectRelease();
        if (v20)
        {
          MEMORY[0x1AD0CABF0](v21);
          if (*(void *)((v28[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1A7572A60();
          }
          sub_1A7572AB0();
          sub_1A7572A30();
        }
      }
      v17 += 16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    unint64_t v13 = v28[0];
  }
  swift_bridgeObjectRelease();
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (v23) {
      return v13;
    }
    goto LABEL_20;
  }
  if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v13;
}

uint64_t sub_1A72CEA18()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1A7572760();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    do
    {
      uint64_t v6 = sub_1A7572760();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v4 = sub_1A7573DB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      uint64_t v2 = sub_1A7572760();
      uint64_t v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_1A7572760();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  BOOL v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

void REMNotificationIdentifier.init(reminder:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_daCalendarItemUniqueIdentifier);
  if (!v4) {
    goto LABEL_5;
  }
  uint64_t v5 = v4;
  id v6 = (id)_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(a1, sel_account);
  id v10 = objc_msgSend(v9, sel_capabilities);

  LODWORD(v9) = objc_msgSend(v10, sel_supportsEventKitSync);
  if (!v9)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    id v6 = objc_msgSend(a1, sel_objectID);

    uint64_t v8 = 0;
    char v11 = 0;
    goto LABEL_6;
  }

  char v11 = 1;
LABEL_6:
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 16) = v11;
}

void REMNotificationIdentifier.init(requestIdentifier:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A7571BC0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1A7572800())
  {
    unint64_t v13 = sub_1A7572700();
    unint64_t v14 = sub_1A72D8F2C(v13, a1, a2);
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    MEMORY[0x1AD0CA8A0](v14, v16, v18, v20);
    swift_bridgeObjectRelease();
    sub_1A7571B70();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      uint64_t v33 = self;
      uint64_t v34 = (void *)sub_1A7571B90();
      id v35 = objc_msgSend(v33, sel_objectIDWithUUID_, v34);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      *(void *)a3 = v35;
      *(void *)(a3 + 8) = 0;
      *(unsigned char *)(a3 + 16) = 0;
      return;
    }
    sub_1A72CB560((uint64_t)v8, &qword_1EB704C40);
    goto LABEL_12;
  }
  if ((sub_1A7572800() & 1) == 0)
  {
    if (qword_1E96F06D8 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_1A7571E90();
    __swift_project_value_buffer(v36, (uint64_t)qword_1E96F12F8);
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1A7571E80();
    os_log_type_t v38 = sub_1A7572FD0();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v42 = v40;
      *(_DWORD *)uint64_t v39 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_1A72D1730(a1, a2, &v42);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A72A1000, v37, v38, "Received a REMNotificationIdentifier with unknown prefix: %{public}s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v40, -1, -1);
      MEMORY[0x1AD0CD330](v39, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_12:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    char v32 = -1;
    goto LABEL_13;
  }
  unint64_t v21 = sub_1A7572700();
  unint64_t v22 = sub_1A72D8F2C(v21, a1, a2);
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = MEMORY[0x1AD0CA8A0](v22, v24, v26, v28);
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(void *)(a3 + 8) = v31;
  char v32 = 1;
LABEL_13:
  *(unsigned char *)(a3 + 16) = v32;
}

uint64_t REMNotificationIdentifier.requestIdentifier.getter()
{
  uint64_t v1 = sub_1A7571BC0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)v0;
  uint64_t v6 = *(void **)(v0 + 8);
  if (*(unsigned char *)(v0 + 16))
  {
    strcpy((char *)v9, "daCalItemUID-");
    HIWORD(v9[1]) = -4864;
    sub_1A7572740();
  }
  else
  {
    sub_1A72D1D20(*(void **)v0, *(id *)(v0 + 8), 0);
    id v7 = objc_msgSend(v5, sel_uuid);
    sub_1A7571BB0();

    sub_1A7571B80();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    strcpy((char *)v9, "REMObjectID-");
    BYTE5(v9[1]) = 0;
    HIWORD(v9[1]) = -5120;
    sub_1A7572740();
    sub_1A72D1D48(v5, v6, 0);
    swift_bridgeObjectRelease();
  }
  return v9[0];
}

id REMStore.fetchReminder(notificationIdentifier:includingDueDateDeltaAlerts:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  v17[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = *(void **)a1;
  id v4 = *(void **)(a1 + 8);
  if (*(unsigned char *)(a1 + 16) != 1)
  {
    if (a2)
    {
      uint64_t v9 = self;
      id v10 = v5;
      id v11 = objc_msgSend(v9, sel_fetchOptionsIncludingDueDateDeltaAlerts);
      v17[0] = 0;
      id v7 = objc_msgSend(v3, sel_fetchReminderWithObjectID_fetchOptions_error_, v10, v11, v17);

      id v12 = v17[0];
      if (!v7) {
        goto LABEL_11;
      }
    }
    else
    {
      v17[0] = 0;
      id v13 = objc_msgSend(v3, sel_fetchReminderWithObjectID_error_, v5, v17);
      id v12 = v17[0];
      if (!v13)
      {
LABEL_11:
        id v7 = v12;
        sub_1A7571850();

        swift_willThrow();
        sub_1A72D1D48(v5, v4, 0);
        return v7;
      }
      id v7 = v13;
    }
    id v14 = v12;
    sub_1A72D1D48(v5, v4, 0);
    return v7;
  }
  uint64_t v6 = (void *)sub_1A75725E0();
  v17[0] = 0;
  id v7 = objc_msgSend(v3, sel_fetchReminderWithDACalendarItemUniqueIdentifier_inList_error_, v6, 0, v17);

  if (v7)
  {
    id v8 = v17[0];
  }
  else
  {
    id v15 = v17[0];
    sub_1A7571850();

    swift_willThrow();
  }
  return v7;
}

uint64_t REMStore.fetchReminders(notificationIdentifiers:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v26 = v1;
    uint64_t v5 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 48);
    do
    {
      id v7 = (void *)*((void *)v5 - 2);
      id v8 = (void *)*((void *)v5 - 1);
      int v9 = *v5;
      if (v9 == 1)
      {
        sub_1A72D1D20(*((void **)v5 - 2), *((id *)v5 - 1), 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1A72AC148(0, v3[2] + 1, 1, v3);
        }
        unint64_t v11 = v3[2];
        unint64_t v10 = v3[3];
        if (v11 >= v10 >> 1) {
          uint64_t v3 = sub_1A72AC148((void *)(v10 > 1), v11 + 1, 1, v3);
        }
        v3[2] = v11 + 1;
        uint64_t v6 = &v3[2 * v11];
        v6[4] = v7;
        v6[5] = v8;
      }
      else
      {
        id v12 = v7;
        MEMORY[0x1AD0CABF0]();
        if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1A7572A60();
        }
        sub_1A7572AB0();
        sub_1A7572A30();
      }
      v5 += 24;
      sub_1A72D1D48(v7, v8, v9);
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v2 = v26;
  }
  id v13 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  uint64_t v27 = 0;
  id v14 = objc_msgSend(v2, sel_fetchRemindersWithDACalendarItemUniqueIdentifiers_inList_error_, v13, 0, &v27);

  id v15 = v27;
  if (!v14) {
    goto LABEL_17;
  }
  sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1310);
  uint64_t v16 = sub_1A75723F0();
  id v17 = v15;

  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
  uint64_t v18 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  uint64_t v27 = 0;
  id v19 = objc_msgSend(v2, sel_fetchRemindersWithObjectIDs_error_, v18, &v27);

  id v15 = v27;
  if (v19)
  {
    sub_1A72D8FDC();
    unint64_t v20 = sub_1A75723F0();
    id v21 = v15;

    unint64_t v22 = sub_1A72D270C(v16, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1A748D81C);
    swift_bridgeObjectRelease();
    unint64_t v23 = sub_1A72D1F8C(v20);
    swift_bridgeObjectRelease();
    uint64_t v27 = v22;
    sub_1A72D1408(v23, (uint64_t (*)(uint64_t, void, unint64_t))sub_1A72D849C);
    return (uint64_t)v27;
  }
  else
  {
LABEL_17:
    id v25 = v15;
    swift_bridgeObjectRelease();
    sub_1A7571850();

    return swift_willThrow();
  }
}

Swift::String __swiftcall REMReminderNextThirdsHour.stringForSnoozingUntil()()
{
  if (v0 >= 4)
  {
    type metadata accessor for REMReminderNextThirdsHour(0);
    uint64_t v5 = sub_1A7573FC0();
    __break(1u);
  }
  else
  {
    id v1 = (id)_REMGetLocalizedString();
    uint64_t v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v4 = v3;

    uint64_t v5 = v2;
    uint64_t v6 = v4;
  }
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

Swift::String __swiftcall REMReminderNextThirdsHour.systemImageStringForSnoozingUntil()()
{
  uint64_t v1 = v0;
  uint64_t v2 = 0x78616D2E6E7573;
  uint64_t v3 = (void *)0xE700000000000000;
  switch(v1)
  {
    case 0:
    case 3:
      break;
    case 1:
      uint64_t v3 = (void *)0xE500000000000000;
      uint64_t v2 = 0x6B636F6C63;
      break;
    case 2:
      uint64_t v3 = (void *)0xEA00000000007372;
      uint64_t v2 = 0x6174732E6E6F6F6DLL;
      break;
    default:
      type metadata accessor for REMReminderNextThirdsHour(0);
      sub_1A7573FC0();
      __break(1u);
      JUMPOUT(0x1A72CF944);
  }
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

void UNMutableNotificationContent.setNotificationIdentifier(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A7571BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(a1 + 16);
  if (v8 == 255)
  {
    *(void *)&long long v30 = 0xD00000000000001FLL;
    *((void *)&v30 + 1) = 0x80000001A759F030;
    sub_1A7573490();
    id v20 = objc_msgSend(v2, sel_userInfo);
    uint64_t v21 = sub_1A75723F0();

    *(void *)&v28[0] = v21;
    sub_1A72D5E24((uint64_t)v29, &v30);
    sub_1A72BF194((uint64_t)v29);
    sub_1A72CB560((uint64_t)&v30, &qword_1EB705938);
    unint64_t v22 = (void *)sub_1A75723D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setUserInfo_, v22);
  }
  else
  {
    unint64_t v10 = *(void **)a1;
    int v9 = *(void **)(a1 + 8);
    if (v8)
    {
      *(void *)&long long v30 = 0xD000000000000033;
      *((void *)&v30 + 1) = 0x80000001A759EFF0;
      sub_1A72D9044(v10, v9, v8);
      sub_1A72D1D20(v10, v9, 1);
      uint64_t v23 = MEMORY[0x1E4FBB1A0];
      sub_1A7573490();
      uint64_t v31 = v23;
      *(void *)&long long v30 = v10;
      *((void *)&v30 + 1) = v9;
      id v24 = objc_msgSend(v2, sel_userInfo);
      uint64_t v25 = sub_1A75723F0();

      sub_1A72BEE44(&v30, v28);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v27 = v25;
      sub_1A72D6488(v28, (uint64_t)v29, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_1A72BF194((uint64_t)v29);
      id v19 = (void *)sub_1A75723D0();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setUserInfo_, v19);
    }
    else
    {
      *(void *)&long long v30 = 0xD00000000000001FLL;
      *((void *)&v30 + 1) = 0x80000001A759F030;
      sub_1A72D9044(v10, v9, v8);
      sub_1A72D1D20(v10, v9, 0);
      uint64_t v11 = MEMORY[0x1E4FBB1A0];
      sub_1A7573490();
      id v12 = objc_msgSend(v10, sel_uuid);
      sub_1A7571BB0();

      uint64_t v13 = sub_1A7571B80();
      uint64_t v15 = v14;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v31 = v11;
      *(void *)&long long v30 = v13;
      *((void *)&v30 + 1) = v15;
      id v16 = objc_msgSend(v2, sel_userInfo);
      uint64_t v17 = sub_1A75723F0();

      sub_1A72BEE44(&v30, v28);
      char v18 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v27 = v17;
      sub_1A72D6488(v28, (uint64_t)v29, v18);
      swift_bridgeObjectRelease();
      sub_1A72BF194((uint64_t)v29);
      id v19 = (void *)sub_1A75723D0();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setUserInfo_, v19);
      sub_1A72D1D30(v10, v9, v8);
    }
    sub_1A72D1D30(v10, v9, v8);
  }
}

Swift::Void __swiftcall UNMutableNotificationContent.setReminderIDs(_:)(Swift::OpaquePointer_optional a1)
{
  uint64_t v2 = v1;
  unint64_t rawValue = (unint64_t)a1.value._rawValue;
  uint64_t v31 = sub_1A7571BC0();
  uint64_t v4 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!rawValue) {
    goto LABEL_23;
  }
  if (!(rawValue >> 62))
  {
    if (*(void *)((rawValue & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_23:
    *(void *)&long long v36 = 0xD000000000000020;
    *((void *)&v36 + 1) = 0x80000001A759F070;
    sub_1A7573490();
    id v26 = objc_msgSend(v2, sel_userInfo);
    uint64_t v27 = sub_1A75723F0();

    *(void *)&v33[0] = v27;
    sub_1A72D5E24((uint64_t)v35, &v36);
    sub_1A72BF194((uint64_t)v35);
    sub_1A72CB560((uint64_t)&v36, &qword_1EB705938);
LABEL_24:
    uint64_t v28 = (void *)sub_1A75723D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setUserInfo_, v28);

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1A75738D0();
  swift_bridgeObjectRelease();
  if (!v25) {
    goto LABEL_23;
  }
LABEL_4:
  *(void *)&long long v36 = 0xD000000000000020;
  *((void *)&v36 + 1) = 0x80000001A759F070;
  sub_1A7573490();
  if (rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (!v7)
  {
LABEL_19:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    uint64_t v37 = v21;
    *(void *)&long long v36 = v8;
    id v22 = objc_msgSend(v2, sel_userInfo);
    uint64_t v23 = sub_1A75723F0();

    uint64_t v34 = v23;
    if (v21)
    {
      sub_1A72BEE44(&v36, v33);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v32 = v23;
      sub_1A72D6488(v33, (uint64_t)v35, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_1A72BF194((uint64_t)v35);
    }
    else
    {
      sub_1A72CB560((uint64_t)&v36, &qword_1EB705938);
      sub_1A72D5E24((uint64_t)v35, v33);
      sub_1A72BF194((uint64_t)v35);
      sub_1A72CB560((uint64_t)v33, &qword_1EB705938);
    }
    goto LABEL_24;
  }
  *(void *)&long long v36 = MEMORY[0x1E4FBC860];
  sub_1A72D2D00(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v29 = v2;
    uint64_t v9 = 0;
    unint64_t v30 = rawValue & 0xC000000000000001;
    unint64_t v10 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v11 = (id *)rawValue;
    do
    {
      if (v30) {
        id v12 = (id)MEMORY[0x1AD0CB800](v9, rawValue);
      }
      else {
        id v12 = *(id *)(rawValue + 8 * v9 + 32);
      }
      uint64_t v13 = v12;
      id v14 = objc_msgSend(v12, sel_uuid, v29);
      sub_1A7571BB0();

      uint64_t v15 = sub_1A7571B80();
      uint64_t v17 = v16;
      (*v10)(v6, v31);

      uint64_t v8 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A72D2D00(0, *(void *)(v8 + 16) + 1, 1);
        uint64_t v8 = v36;
      }
      unint64_t v19 = *(void *)(v8 + 16);
      unint64_t v18 = *(void *)(v8 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1A72D2D00(v18 > 1, v19 + 1, 1);
        uint64_t v8 = v36;
      }
      ++v9;
      *(void *)(v8 + 16) = v19 + 1;
      uint64_t v20 = v8 + 16 * v19;
      *(void *)(v20 + 32) = v15;
      *(void *)(v20 + 40) = v17;
      unint64_t rawValue = (unint64_t)v11;
    }
    while (v7 != v9);
    uint64_t v2 = v29;
    goto LABEL_19;
  }
  __break(1u);
}

Swift::Void __swiftcall UNMutableNotificationContent.setListID(_:)(REMObjectID_optional a1)
{
  uint64_t v2 = v1;
  Class isa = a1.value.super.isa;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A7571BC0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v26 - v12;
  if (isa)
  {
    id v14 = [(objc_class *)isa uuid];
    sub_1A7571BB0();

    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v15(v6, v11, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v15(v13, v6, v7);
      *(void *)&long long v29 = 0xD00000000000001BLL;
      *((void *)&v29 + 1) = 0x80000001A759F050;
      uint64_t v16 = MEMORY[0x1E4FBB1A0];
      sub_1A7573490();
      uint64_t v17 = sub_1A7571B80();
      uint64_t v30 = v16;
      *(void *)&long long v29 = v17;
      *((void *)&v29 + 1) = v18;
      id v19 = objc_msgSend(v2, sel_userInfo);
      uint64_t v20 = sub_1A75723F0();

      sub_1A72BEE44(&v29, v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v26 = v20;
      sub_1A72D6488(v27, (uint64_t)v28, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_1A72BF194((uint64_t)v28);
      id v22 = (void *)sub_1A75723D0();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setUserInfo_, v22);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1A72CB560((uint64_t)v6, &qword_1EB704C40);
  *(void *)&long long v29 = 0xD00000000000001BLL;
  *((void *)&v29 + 1) = 0x80000001A759F050;
  sub_1A7573490();
  id v23 = objc_msgSend(v2, sel_userInfo);
  uint64_t v24 = sub_1A75723F0();

  *(void *)&v27[0] = v24;
  sub_1A72D5E24((uint64_t)v28, &v29);
  sub_1A72BF194((uint64_t)v28);
  sub_1A72CB560((uint64_t)&v29, &qword_1EB705938);
  uint64_t v25 = (void *)sub_1A75723D0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setUserInfo_, v25);
}

uint64_t UNNotificationContent.firesBeforeFirstUnlock.getter()
{
  id v1 = objc_msgSend(v0, sel_userInfo);
  uint64_t v2 = sub_1A75723F0();

  *(void *)&long long v8 = 0xD00000000000002BLL;
  *((void *)&v8 + 1) = 0x80000001A759F0A0;
  sub_1A7573490();
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1A72B24E8((uint64_t)v7), (v4 & 1) != 0))
  {
    sub_1A72BEE98(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v8);
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A72BF194((uint64_t)v7);
  if (*((void *)&v9 + 1))
  {
    uint64_t result = swift_dynamicCast();
    if (result) {
      return v6;
    }
  }
  else
  {
    sub_1A72CB560((uint64_t)&v8, &qword_1EB705938);
    return 0;
  }
  return result;
}

Swift::Void __swiftcall UNMutableNotificationContent.setFiresBeforeFirstUnlock(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  *(void *)&long long v9 = 0xD00000000000002BLL;
  *((void *)&v9 + 1) = 0x80000001A759F0A0;
  sub_1A7573490();
  uint64_t v10 = MEMORY[0x1E4FBB390];
  LOBYTE(v9) = a1;
  id v4 = objc_msgSend(v2, sel_userInfo);
  uint64_t v5 = sub_1A75723F0();

  sub_1A72BEE44(&v9, v8);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1A72D6488(v8, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_1A72BF194((uint64_t)v11);
  uint64_t v7 = (void *)sub_1A75723D0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setUserInfo_, v7, v5);
}

uint64_t UNNotificationContent.lastRecurringFireDate.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_userInfo);
  uint64_t v4 = sub_1A75723F0();

  sub_1A7573490();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1A72B24E8((uint64_t)v11), (v6 & 1) != 0))
  {
    sub_1A72BEE98(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A72BF194((uint64_t)v11);
  if (*((void *)&v13 + 1))
  {
    uint64_t v7 = sub_1A7571B60();
    int v8 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, v8 ^ 1u, 1, v7);
  }
  else
  {
    sub_1A72CB560((uint64_t)&v12, &qword_1EB705938);
    uint64_t v10 = sub_1A7571B60();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

void UNMutableNotificationContent.setLastRecurringFireDate(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)&long long v12 = 0xD00000000000002ALL;
  *((void *)&v12 + 1) = 0x80000001A759F0D0;
  sub_1A7573490();
  uint64_t v4 = sub_1A7571B60();
  uint64_t v13 = v4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(boxed_opaque_existential_0, a1, v4);
  id v6 = objc_msgSend(v2, sel_userInfo);
  uint64_t v7 = sub_1A75723F0();

  uint64_t v11 = v7;
  if (v13)
  {
    sub_1A72BEE44(&v12, v10);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A72D6488(v10, (uint64_t)v14, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1A72BF194((uint64_t)v14);
  }
  else
  {
    sub_1A72CB560((uint64_t)&v12, &qword_1EB705938);
    sub_1A72D5E24((uint64_t)v14, v10);
    sub_1A72BF194((uint64_t)v14);
    sub_1A72CB560((uint64_t)v10, &qword_1EB705938);
  }
  long long v9 = (void *)sub_1A75723D0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setUserInfo_, v9);
}

uint64_t sub_1A72D0C70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  id v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  id v3 = sub_1A72AC148(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D0DC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  id v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  id v3 = sub_1A72AC59C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D0F0C(unint64_t a1)
{
  return sub_1A72D1408(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1A72D86BC);
}

uint64_t sub_1A72D0F24(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1A72ACF9C(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_1A7571550() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D10C8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x1AD0CB810](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_1A72D88DC(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_1A7572A30();
}

uint64_t sub_1A72D1294(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1A72ACE70(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D13F0(unint64_t a1)
{
  return sub_1A72D1408(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1A72D8AFC);
}

uint64_t sub_1A72D1408(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x1AD0CB810](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_1A7572A30();
}

uint64_t sub_1A72D15DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1A72ADD80(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D1730(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1A72D1804(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1A72BEE98((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1A72BEE98((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1A72D1804(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A7573260();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1A72D19C0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1A7573680();
  if (!v8)
  {
    sub_1A7573830();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1A7573940();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1A72D19C0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1A72D1A58(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A72D1BD0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1A72D1BD0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A72D1A58(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1A7354994(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1A7573570();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1A7573830();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1A7572770();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1A7573940();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1A7573830();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1A72D1BD0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704C20);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

id sub_1A72D1D20(void *a1, id a2, char a3)
{
  if (a3) {
    return (id)swift_bridgeObjectRetain();
  }
  else {
    return a1;
  }
}

void sub_1A72D1D30(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    sub_1A72D1D48(a1, a2, a3 & 1);
  }
}

void sub_1A72D1D48(void *a1, id a2, char a3)
{
  if (a3) {
    swift_bridgeObjectRelease();
  }
  else {
}
  }

void *sub_1A72D1D58(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703D38);
  uint64_t v5 = (void *)swift_allocObject();
  size_t v6 = _swift_stdlib_malloc_size(v5);
  v5[2] = v2;
  v5[3] = 2 * ((uint64_t)(v6 - 32) / 24);
  int64_t v7 = sub_1A748D24C(&v9, (uint64_t)(v5 + 4), v2, a1, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7 != (void *)v2)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v5;
}

void *sub_1A72D1E48(uint64_t a1)
{
  unint64_t v1 = *(void *)(*(void *)(a1 + 32) + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703D28);
  unint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  unint64_t v5 = sub_1A748D2C8((unint64_t)&v7, (uint64_t)(v3 + 4), v1);
  sub_1A72D98CC(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1A72D1F58(uint64_t a1)
{
  return sub_1A72D22D8(a1, &qword_1EB704AD0, (uint64_t (*)(void *, void *, uint64_t, uint64_t))sub_1A748D354, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A72D9A00);
}

uint64_t sub_1A72D1F8C(unint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_1A7573400();
    if (v2) {
      goto LABEL_3;
    }
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_3:
  if (v2 <= 0)
  {
    unint64_t v3 = (uint64_t *)MEMORY[0x1E4FBC860];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C80);
    unint64_t v3 = (uint64_t *)swift_allocObject();
    int64_t v4 = _swift_stdlib_malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1A748D554((uint64_t)&v8, v3 + 4, v2, a1);
  uint64_t result = sub_1A72D99A4();
  if (v6 == v2) {
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

size_t sub_1A72D2088(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1458);
  uint64_t v3 = *(void *)(sub_1A7571BC0() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1A748D820(&v10, (char *)v6 + v5, v1, a1);
      sub_1A72D99A4();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1A72D21BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1A748DC0C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1A72D99A4();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1A72D22A4(uint64_t a1)
{
  return sub_1A72D22D8(a1, &qword_1E96F1460, (uint64_t (*)(void *, void *, uint64_t, uint64_t))sub_1A748DE0C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A72D99A4);
}

void *sub_1A72D22D8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void *, void *, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = (void *)swift_allocObject();
  int64_t v9 = _swift_stdlib_malloc_size(v8);
  uint64_t v10 = v9 - 32;
  if (v9 < 32) {
    uint64_t v10 = v9 - 17;
  }
  _OWORD v8[2] = v4;
  v8[3] = 2 * (v10 >> 4);
  uint64_t v11 = a3(v18, v8 + 4, v4, a1);
  uint64_t v12 = v18[0];
  uint64_t v13 = v18[1];
  uint64_t v14 = v18[2];
  uint64_t v15 = v18[3];
  uint64_t v16 = v18[4];
  swift_bridgeObjectRetain();
  a4(v12, v13, v14, v15, v16);
  if (v11 != v4)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v8;
}

uint64_t sub_1A72D23CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = 8 * v5;
    if (v5 <= 0)
    {
      int64_t v9 = (char *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        uint64_t v12 = v9 + 32;
        uint64_t v13 = (char *)(a2 + 8 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8]) {
          goto LABEL_19;
        }
        memcpy(v12, v13, 8 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F78);
      int64_t v9 = (char *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = 2 * (v11 >> 3);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

void *sub_1A72D2538(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F58);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  uint64_t v5 = sub_1A748E014(&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1A72D99A4();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

int64_t *sub_1A72D262C(int64_t *result, int64_t a2)
{
  int64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2) {
      return (int64_t *)MEMORY[0x1E4FBC860];
    }
    int64_t v4 = (int64_t)result;
    if (v2 <= 0)
    {
      uint64_t v5 = (int64_t *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD8);
      uint64_t v5 = (int64_t *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      v5[2] = v2;
      v5[3] = 2 * (v7 >> 3);
    }
    uint64_t result = sub_1A748E240(v8, v5 + 4, v2, v4, a2);
    if (result == (int64_t *)v2) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

void *sub_1A72D26F4(uint64_t a1)
{
  return sub_1A72D270C(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1A748D81C);
}

void *sub_1A72D270C(uint64_t a1, uint64_t (*a2)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C80);
  uint64_t v5 = (void *)swift_allocObject();
  int64_t v6 = _swift_stdlib_malloc_size(v5);
  uint64_t v7 = v6 - 32;
  if (v6 < 32) {
    uint64_t v7 = v6 - 25;
  }
  v5[2] = v2;
  v5[3] = (2 * (v7 >> 3)) | 1;
  uint64_t v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_1A72D99A4();
  if (v8 != v2)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v5;
}

uint64_t sub_1A72D2800(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = 16 * v5;
    if (v5 <= 0)
    {
      int64_t v9 = (char *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        uint64_t v12 = v9 + 32;
        uint64_t v13 = (char *)(a2 + 16 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8]) {
          goto LABEL_19;
        }
        memcpy(v12, v13, 16 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13B8);
      int64_t v9 = (char *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D296C(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_1A7573400();
    if (v2) {
      goto LABEL_3;
    }
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C80);
    uint64_t v3 = (void *)swift_allocObject();
    int64_t v4 = _swift_stdlib_malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  int64_t v6 = sub_1A748E56C(&v8, v3 + 4, v2, a1);
  uint64_t result = sub_1A72D99A4();
  if (v6 == (void *)v2) {
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void *sub_1A72D2A68(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C80);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1A72D8D1C((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v3;
}

uint64_t sub_1A72D2B60(char *a1, uint64_t a2)
{
  if (!a2) {
    return MEMORY[0x1E4FBC860];
  }
  if (a2 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F78);
    uint64_t v4 = 8 * a2;
    uint64_t v5 = (char *)swift_allocObject();
    int64_t v6 = _swift_stdlib_malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 25;
    }
    *((void *)v5 + 2) = a2;
    *((void *)v5 + 3) = 2 * (v7 >> 3);
    uint64_t v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 8 * a2);
      return (uint64_t)v5;
    }
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D2C98(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D3218(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D2CB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D3390(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A72D2CD8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D41AC(a1, a2, a3, *v3, &qword_1EB704AD8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D2D00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D30AC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D2D20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D36C4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D2D40(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D3824(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D2D60(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D39AC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A72D2D80(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D3EB0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D2DA0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D4020(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A72D2DC0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D41AC(a1, a2, a3, *v3, &qword_1E96F1440);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D2DE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D4308(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D2E08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D4B64(a1, a2, a3, (void *)*v3, &qword_1E96F1450, MEMORY[0x1E4F27928]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A72D2E44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D45B4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D2E64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D4B64(a1, a2, a3, (void *)*v3, &qword_1E96F13E8, type metadata accessor for REMTestStorePopulator.TestList.ListChild);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A72D2EA0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D488C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D2EC0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D49DC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D2EE0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D4B64(a1, a2, a3, (void *)*v3, &qword_1E96F13C0, type metadata accessor for ReminderUUID);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A72D2F1C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D4DAC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A72D2F3C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D4458(a1, a2, a3, *v3, &qword_1E96F13B8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D2F64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D4458(a1, a2, a3, *v3, &qword_1E96F0EE8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D2F8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D4F60(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A72D2FAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D5278(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D2FCC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D53F0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A72D2FEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D557C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A72D300C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D5708(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D302C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D5868(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A72D304C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D59F0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D306C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D5B4C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D308C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A72D5CB8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A72D30AC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D3218(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703D40);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    memcpy(v12, v13, 40 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D3390(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1418);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1420);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D351C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1428);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1430);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D36C4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F78);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D3824(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1400);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D39AC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1408);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1410);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D3B54(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1A72D4B64(a1, a2, a3, a4, &qword_1E96F1458, MEMORY[0x1E4F27990]);
}

uint64_t sub_1A72D3B74(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A72D4458(a1, a2, a3, a4, &qword_1EB703D48);
}

uint64_t sub_1A72D3B80(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1460);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1468);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D3D0C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F58);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F60);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D3EB0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7040E8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D4020(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1438);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705A10);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D41AC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D4308(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1448);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D4458(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D45B4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13F8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D4720(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13D0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D488C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13F0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D49DC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13C8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[120 * v8]) {
      memmove(v12, v13, 120 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[120 * v8] || v12 >= &v13[120 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D4B64(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  void v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  int64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D4DAC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13A8);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13B0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D4F54(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A72D4458(a1, a2, a3, a4, &qword_1E96F13B8);
}

uint64_t sub_1A72D4F60(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0EB8);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB7054F8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D50EC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0EC0);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0EC8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D5278(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0F50);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 40 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D53F0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1380);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705490);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D557C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1370);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1378);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D5708(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1358);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D5868(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1340);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 4;
  unint64_t v14 = a4 + 4;
  size_t v15 = 4 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v10 + 4, a4 + 4, v15 * 8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1348);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D59F0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1350);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D5B4C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1338);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D5CB8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB700C70);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

double sub_1A72D5E24@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1A72B24E8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A72BAF68();
      uint64_t v9 = v11;
    }
    sub_1A72BF194(*(void *)(v9 + 48) + 40 * v6);
    sub_1A72BEE44((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1A7459A8C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_1A72D5F20@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1A72B257C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A72BB338();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1A7573790();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_1A72BEE44((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1A7459C58(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_1A72D604C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1A72B252C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A72BBCF8();
      uint64_t v9 = v11;
    }

    sub_1A72BEE44((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1A745A0FC(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1A72D6144(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_1A72B252C(a1);
    char v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v9 = *v2;
      uint64_t v17 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1A72BCCF4();
        uint64_t v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v6 = (id)a1;
  uint64_t v7 = sub_1A7573810();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v8 = sub_1A7573400();
  uint64_t v9 = sub_1A7404868(v5, v8);
  swift_retain();
  a1 = sub_1A72B252C((uint64_t)v6);
  char v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  uint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * a1);
  sub_1A745A480(a1, v9);
  *uint64_t v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1A72D6294(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1A72B2210(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A72BCEA0();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1A745A634(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A72D6364@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  char v9 = a3 & 1;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1A72B2744(a1, a2, v9);
  LOBYTE(a2) = v11;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v5;
    uint64_t v21 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A72BD57C();
      uint64_t v14 = v21;
    }
    sub_1A72BEFB0(*(void **)(*(void *)(v14 + 48) + 24 * v10), *(void *)(*(void *)(v14 + 48) + 24 * v10 + 8), *(unsigned char *)(*(void *)(v14 + 48) + 24 * v10 + 16));
    uint64_t v15 = *(void *)(v14 + 56) + 40 * v10;
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *(void *)(v15 + 8);
    uint64_t v18 = *(void *)(v15 + 16);
    uint64_t v19 = *(void *)(v15 + 24);
    char v20 = *(unsigned char *)(v15 + 32);
    sub_1A745A80C(v10, v14);
    *uint64_t v5 = v14;
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    char v20 = -1;
  }
  *(void *)a4 = v16;
  *(void *)(a4 + 8) = v17;
  *(void *)(a4 + 16) = v18;
  *(void *)(a4 + 24) = v19;
  *(unsigned char *)(a4 + 32) = v20;
  return result;
}

_OWORD *sub_1A72D6488(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1A72B24E8(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A72BAF68();
      goto LABEL_7;
    }
    sub_1A72B470C(v13, a3 & 1);
    unint64_t v19 = sub_1A72B24E8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1A72BF138(a2, (uint64_t)v21);
      return sub_1A739D894(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_1A7574010();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);

  return sub_1A72BEE44(a1, v17);
}

_OWORD *sub_1A72D65D4(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1A72B2210(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1A72BB150();
      goto LABEL_7;
    }
    sub_1A72B4A24(v15, a4 & 1);
    unint64_t v21 = sub_1A72B2210(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1A7574010();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return sub_1A72BEE44(a1, v19);
  }
LABEL_13:
  sub_1A739D910(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_1A72D6728(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1A7573790();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1A72B257C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1A72BB338();
      goto LABEL_7;
    }
    sub_1A72B4D24(v17, a3 & 1);
    unint64_t v23 = sub_1A72B257C(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      char v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1A739D97C(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_1A7574010();
    __break(1u);
    return result;
  }
LABEL_7:
  char v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  unint64_t v21 = (_OWORD *)(v20[7] + 32 * v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);

  return sub_1A72BEE44(a1, v21);
}

void sub_1A72D6900(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v7 = (void *)*v3;
  unint64_t v9 = sub_1A72B252C((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1A72BB79C();
    goto LABEL_7;
  }
  sub_1A72B5438(v12, a3 & 1);
  unint64_t v17 = sub_1A72B252C((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_15:
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
    sub_1A7574010();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1A739DA3C(v9, (uint64_t)a2, a1, v15);

  id v19 = a2;
}

uint64_t sub_1A72D6A40(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1A72B2210(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A72BB974();
    goto LABEL_7;
  }
  sub_1A72B5778(v15, a4 & 1);
  unint64_t v21 = sub_1A72B2210(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1A739DA40(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A72D6B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6)
{
  char v7 = (void **)v6;
  BOOL v14 = (void *)*v6;
  unint64_t v16 = sub_1A72B2210(a3, a4);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a5 & 1) != 0)
  {
LABEL_7:
    char v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;
      uint64_t result = swift_bridgeObjectRelease();
      *(double *)uint64_t v23 = a6;
      *(void *)(v23 + 8) = a1;
      *(void *)(v23 + 16) = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_1A72BBB2C();
    goto LABEL_7;
  }
  sub_1A72B5784(v19, a5 & 1);
  unint64_t v25 = sub_1A72B2210(a3, a4);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_15:
    uint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  char v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1A739DA88(v16, a3, a4, a1, a2, v22, a6);

  return swift_bridgeObjectRetain();
}

_OWORD *sub_1A72D6CF0(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v7 = (void *)*v3;
  unint64_t v9 = sub_1A72B252C((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1A72BBCF8();
      goto LABEL_7;
    }
    sub_1A72B5AAC(v12, a3 & 1);
    unint64_t v18 = sub_1A72B252C((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      char v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
    uint64_t result = (_OWORD *)sub_1A7574010();
    __break(1u);
    return result;
  }
LABEL_7:
  char v15 = *v4;
  if (v13)
  {
LABEL_8:
    unint64_t v16 = (_OWORD *)(v15[7] + 32 * v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return sub_1A72BEE44(a1, v16);
  }
LABEL_13:
  sub_1A739DADC(v9, (uint64_t)a2, a1, v15);

  return a2;
}

unint64_t sub_1A72D6E44(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_1A72B2288(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1A72BCB44();
    goto LABEL_7;
  }
  sub_1A72B718C(v13, a3 & 1);
  unint64_t v19 = sub_1A72B2288(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    unint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  unint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_1A739DB44(v10, a2, a1, v16);
}

id sub_1A72D6F6C(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v7 = (void *)*v3;
  unint64_t v9 = sub_1A72B252C((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_release();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1A72BCCF4();
    goto LABEL_7;
  }
  sub_1A72B737C(v12, a3 & 1);
  unint64_t v18 = sub_1A72B252C((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_15:
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
    id result = (id)sub_1A7574010();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1A739DA3C(v9, (uint64_t)a2, a1, v15);

  return a2;
}

void sub_1A72D70AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_1A72D70EC(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v7 = (void *)*v3;
  unint64_t v9 = sub_1A72B266C((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1A72BCEAC();
    goto LABEL_7;
  }
  sub_1A72B7660(v12, a3 & 1);
  unint64_t v17 = sub_1A72B266C((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_15:
    sub_1A72BEFEC(0, &qword_1E96F1140);
    sub_1A7574010();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1A739DA3C(v9, (uint64_t)a2, a1, v15);

  id v19 = a2;
}

void sub_1A72D722C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_1A72D726C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_1A72D72AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_1A72B2210(a2, a3);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v23 = *v10;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = *(void *)(v23 + 56);

      *(void *)(v24 + 8 * v17) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    a5();
    goto LABEL_7;
  }
  a6();
  unint64_t v25 = sub_1A72B2210(a2, a3);
  if ((v21 & 1) != (v26 & 1))
  {
LABEL_15:
    sub_1A7574010();
    __break(1u);
    return;
  }
  unint64_t v17 = v25;
  uint64_t v23 = *v10;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  a7(v17, a2, a3, a1, v23);

  swift_bridgeObjectRetain();
}

uint64_t sub_1A72D7420(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_1A72B26BC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A72BD088();
    goto LABEL_7;
  }
  sub_1A72B796C(result, a3 & 1);
  uint64_t result = sub_1A72B26BC(a2);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_15:
    uint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_1A739DB44(v10, a2, a1, v16);
}

uint64_t sub_1A72D753C(uint64_t a1, void *a2, uint64_t a3, char a4, char a5)
{
  unint64_t v6 = (void **)v5;
  char v11 = a4 & 1;
  BOOL v12 = (void *)*v5;
  unint64_t v14 = sub_1A72B2744(a2, a3, a4 & 1);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a5 & 1) == 0)
  {
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1A72BD57C();
      goto LABEL_7;
    }
    sub_1A72B8870(v17, a5 & 1);
    unint64_t v23 = sub_1A72B2744(a2, a3, v11);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      uint64_t v20 = *v6;
      if (v18) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v6;
  if (v18)
  {
LABEL_8:
    uint64_t v21 = v20[7] + 40 * v14;
    return sub_1A72D993C(a1, v21);
  }
LABEL_13:
  sub_1A739DBD4(v14, (uint64_t)a2, a3, v11, a1, v20);

  return sub_1A72BEEF4(a2, a3, v11);
}

uint64_t sub_1A72D76AC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_1A72B2944(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1A72BDABC();
    goto LABEL_7;
  }
  sub_1A72B9490(v13, a3 & 1);
  uint64_t v19 = sub_1A72B2944(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    type metadata accessor for REMSuggestedContact();
    uint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  BOOL v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1A739DA3C(v10, a2, a1, v16);

  return swift_retain();
}

uint64_t sub_1A72D77DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1A72B2210(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A72BDAC8();
    goto LABEL_7;
  }
  sub_1A72B949C(v15, a4 & 1);
  unint64_t v21 = sub_1A72B2210(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1A739DA40(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

unint64_t sub_1A72D791C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_1A72BF24C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1A72BDC80();
    goto LABEL_7;
  }
  sub_1A72B97B4(v13, a3 & 1);
  unint64_t v19 = sub_1A72BF24C(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    unint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_1A739DB8C(v10, a2, a1, v16);
}

uint64_t sub_1A72D7A44(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_1A72B2944(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1A72BDE24();
    goto LABEL_7;
  }
  sub_1A72B9A6C(v13, a3 & 1);
  uint64_t v19 = sub_1A72B2944(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    type metadata accessor for REMSuggestedLocation();
    uint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1A739DA3C(v10, a2, a1, v16);

  return swift_retain();
}

uint64_t sub_1A72D7B74(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_1A72B2944(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1A72BDE30();
    goto LABEL_7;
  }
  sub_1A72B9A78(v13, a3 & 1);
  uint64_t v19 = sub_1A72B2944(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    type metadata accessor for REMSuggestedWeekDay();
    uint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1A739DA3C(v10, a2, a1, v16);

  return swift_retain();
}

unint64_t sub_1A72D7CA4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_1A72B29C8(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1A72BDE3C();
    goto LABEL_7;
  }
  sub_1A72B9A84(v13, a3 & 1);
  unint64_t v19 = sub_1A72B29C8(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    type metadata accessor for REMRecurrenceFrequency(0);
    unint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_1A739DB8C(v10, a2, a1, v16);
}

uint64_t sub_1A72D7DCC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_1A72B2944(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1A72BDFE0();
    goto LABEL_7;
  }
  sub_1A72B9D60(v13, a3 & 1);
  uint64_t v19 = sub_1A72B2944(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    type metadata accessor for REMSuggestedList();
    uint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1A739DA3C(v10, a2, a1, v16);

  return swift_retain();
}

uint64_t sub_1A72D7EFC(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1A72B2210(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      *(unsigned char *)(v18[7] + v12) = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A72BE190();
    goto LABEL_7;
  }
  sub_1A72BA094(result, a4 & 1);
  uint64_t result = sub_1A72B2210(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_15:
    uint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1A739DC58(v12, a2, a3, a1 & 1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A72D8034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  unint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1A72B2210(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    char v20 = *v6;
    if (v18)
    {
LABEL_8:
      unint64_t v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1A72BE600();
    goto LABEL_7;
  }
  sub_1A72BA788(v17, a5 & 1);
  unint64_t v23 = sub_1A72B2210(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_1A7574010();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1A739DCA0(v14, a3, a4, a1, a2, v20);

  return swift_bridgeObjectRetain();
}

uint64_t (*sub_1A72D8188(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1A72D830C(v6, a2, a3);
  return sub_1A72D81F0;
}

uint64_t (*sub_1A72D81F4(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1A72D838C(v6, a2, a3);
  return sub_1A72D81F0;
}

uint64_t (*sub_1A72D825C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1A72D8414(v6, a2, a3);
  return sub_1A72D81F0;
}

void sub_1A72D82C4(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_1A72D830C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1AD0CB800](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s19ReminderKitInternal23REMAccountsListDataViewC5ModelV10PinnedListOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1A72D838C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1AD0CB800](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for REMAccountsListDataView.Model.PinnedList;
  }
  __break(1u);
  return result;
}

void destroy for REMAccountsListDataView.Model.PinnedList(id *a1)
{
}

uint64_t (*sub_1A72D8414(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1AD0CB800](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return destroy for KMeans.ClusterStats;
  }
  __break(1u);
  return result;
}

uint64_t destroy for KMeans.ClusterStats()
{
  return swift_release();
}

uint64_t sub_1A72D849C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A72D99AC(&qword_1E96F1478, &qword_1E96F1470);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1470);
          unint64_t v12 = sub_1A72D8188(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1310);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D86BC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A72D99AC(&qword_1E96F13E0, &qword_1E96F13D8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F13D8);
          unint64_t v12 = sub_1A72D8188(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D88DC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A72D99AC(&qword_1E96F13A0, &qword_1E96F1398);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1398);
          unint64_t v12 = sub_1A72D8188(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1A72BEFEC(0, &qword_1EB700138);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D8AFC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A72D99AC(&qword_1E96F1390, &qword_1E96F1388);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1388);
          unint64_t v12 = sub_1A72D81F4(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1A72BEFEC(0, &qword_1E96F3C80);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72D8D1C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A72D99AC(&qword_1E96F1368, &qword_1E96F1360);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1360);
          unint64_t v12 = sub_1A72D825C(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for REMGroceryLanguage();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

unint64_t sub_1A72D8F2C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_1A7572720();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return sub_1A7572860();
}

unint64_t sub_1A72D8FDC()
{
  unint64_t result = qword_1EB705728;
  if (!qword_1EB705728)
  {
    sub_1A72BEFEC(255, (unint64_t *)&qword_1EB705BA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB705728);
  }
  return result;
}

id sub_1A72D9044(id result, void *a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1A72D1D20(result, a2, a3 & 1);
  }
  return result;
}

unint64_t sub_1A72D9060()
{
  unint64_t result = qword_1E96F1318;
  if (!qword_1E96F1318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1318);
  }
  return result;
}

uint64_t sub_1A72D90B4()
{
  return sub_1A72D99AC(&qword_1E96F1320, &qword_1E96F1328);
}

unint64_t sub_1A72D90E0()
{
  unint64_t result = qword_1E96F1330;
  if (!qword_1E96F1330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1330);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RDUserNotificationCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RDUserNotificationCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A72D9290);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RDUserNotificationCategory()
{
  return &type metadata for RDUserNotificationCategory;
}

uint64_t getEnumTagSinglePayload for RDUserNotificationAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RDUserNotificationAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A72D9424);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RDUserNotificationAction()
{
  return &type metadata for RDUserNotificationAction;
}

id sub_1A72D9460(id result, void *a2, unsigned __int8 a3)
{
  switch(a3 >> 5)
  {
    case 0:
    case 1:
    case 5:
      unint64_t result = sub_1A72D1D20(result, a2, a3 & 1);
      break;
    case 2:
      unint64_t result = result;
      break;
    case 3:
    case 4:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void destroy for RDUserNotificationType(uint64_t a1)
{
}

void sub_1A72D94CC(void *a1, void *a2, unsigned __int8 a3)
{
  switch(a3 >> 5)
  {
    case 0:
    case 1:
    case 5:
      sub_1A72D1D48(a1, a2, a3 & 1);
      break;
    case 2:

      break;
    case 3:
    case 4:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t _s19ReminderKitInternal22RDUserNotificationTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A72D9460(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RDUserNotificationType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A72D9460(*(id *)a2, v4, v5);
  unsigned int v6 = *(void **)a1;
  BOOL v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A72D94CC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for RDUserNotificationType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  unsigned int v4 = *(void **)a1;
  unsigned __int8 v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A72D94CC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RDUserNotificationType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7A && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 122);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 5) & 0xFFFFFF87 | (8 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0xF))) ^ 0x7F;
  if (v3 >= 0x79) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RDUserNotificationType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x79)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 122;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7A) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7A) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1A72D96BC(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 <= 0xBF) {
    return v1 >> 5;
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_1A72D96D8(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x1Fu;
  return result;
}

uint64_t sub_1A72D96E8(uint64_t result, unsigned int a2)
{
  if (a2 < 6)
  {
    *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | (32 * a2);
  }
  else
  {
    *(void *)unint64_t result = a2 - 6;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for RDUserNotificationType()
{
  return &type metadata for RDUserNotificationType;
}

void destroy for REMNotificationIdentifier(uint64_t a1)
{
}

uint64_t _s19ReminderKitInternal25REMNotificationIdentifierOwCP_0(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1A72D1D20(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMNotificationIdentifier(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1A72D1D20(*(void **)a2, v4, v5);
  unsigned __int8 v6 = *(void **)a1;
  BOOL v7 = *(void **)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A72D1D48(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMNotificationIdentifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  unsigned int v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A72D1D48(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMNotificationIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMNotificationIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A72D98B0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for REMNotificationIdentifier()
{
  return &type metadata for REMNotificationIdentifier;
}

uint64_t sub_1A72D98CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A72D993C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A72D99A4()
{
  return swift_release();
}

uint64_t sub_1A72D99AC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A72D9A0C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  uint64_t v59 = a4;
  unint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_1A7573210();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  id v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  unint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  unsigned __int8 v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_1A7572880();
  uint64_t v61 = sub_1A75723A0();
  uint64_t v56 = sub_1A7573740();
  sub_1A75736E0();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  uint64_t v59 = v30;
  uint64_t result = sub_1A7572870();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1A7573230();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_1A7573720();
      if (!--v31)
      {
        uint64_t v35 = v54;
        long long v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  long long v36 = v51;
LABEL_9:
  sub_1A7573230();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    unsigned __int8 v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    os_log_type_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_1A7573720();
      sub_1A7573230();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t sub_1A72DA108(uint64_t a1)
{
  uint64_t result = sub_1A73263E0();
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_1A73481AC(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

unint64_t sub_1A72DA188(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_1A72E0A28(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_1A7573550();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        sub_1A7573680();
      }
      unsigned int v5 = sub_1A7573690();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

uint64_t sub_1A72DA26C(uint64_t a1)
{
  uint64_t result = sub_1A72E0978(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_1A72E0B38(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t REMHashtagLabelCollection.labels.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL REMHashtagLabelCollection.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

void REMHashtagLabelCollection.init()(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC870];
  *a1 = MEMORY[0x1E4FBC860];
  a1[1] = v1;
}

uint64_t REMHashtagLabelCollection.init(labels:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1A7571500();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  uint64_t result = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1E4FBC870];
  uint64_t v29 = MEMORY[0x1E4FBC870];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v25 = a2;
    uint64_t v14 = (void (**)(char *, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain_n();
    uint64_t v24 = a1;
    uint64_t v15 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v16 = *(v15 - 1);
      uint64_t v17 = *v15;
      swift_bridgeObjectRetain();
      sub_1A7571C80();
      uint64_t v18 = sub_1A7571D30();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 0, 1, v18);
      v28[0] = v16;
      v28[1] = v17;
      sub_1A72DF534();
      uint64_t v26 = sub_1A7573310();
      uint64_t v27 = v19;
      sub_1A75714D0();
      uint64_t v20 = sub_1A75732B0();
      uint64_t v22 = v21;
      (*v14)(v7, v4);
      swift_bridgeObjectRelease();
      sub_1A72DF588((uint64_t)v11);
      swift_bridgeObjectRetain();
      sub_1A72DF384(v28, v20, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 += 2;
      --v13;
    }
    while (v13);
    a1 = v24;
    uint64_t result = swift_bridgeObjectRelease_n();
    uint64_t v12 = v29;
    a2 = v25;
  }
  *a2 = a1;
  a2[1] = v12;
  return result;
}

uint64_t REMHashtagLabelCollection.labels(matchingHashtagNames:)(uint64_t a1)
{
  uint64_t v3 = sub_1A7571500();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC870];
  if (v10)
  {
    v25[1] = *v1;
    uint64_t v31 = MEMORY[0x1E4FBC870];
    uint64_t v27 = v3;
    swift_bridgeObjectRetain_n();
    uint64_t v26 = a1;
    uint64_t v12 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v13 = *(v12 - 1);
      uint64_t v14 = *v12;
      swift_bridgeObjectRetain();
      sub_1A7571C80();
      uint64_t v15 = sub_1A7571D30();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 0, 1, v15);
      v30[0] = v13;
      v30[1] = v14;
      sub_1A72DF534();
      uint64_t v28 = sub_1A7573310();
      uint64_t v29 = v16;
      sub_1A75714D0();
      uint64_t v17 = sub_1A75732B0();
      uint64_t v19 = v18;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v27);
      swift_bridgeObjectRelease();
      sub_1A72DF588((uint64_t)v9);
      swift_bridgeObjectRetain();
      sub_1A72DF384(v30, v17, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 += 2;
      --v10;
    }
    while (v10);
    uint64_t v20 = v26;
    uint64_t v21 = swift_bridgeObjectRelease_n();
    uint64_t v22 = v31;
    MEMORY[0x1F4188790](v21);
    v25[-2] = v20;
    v25[-1] = v22;
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_1A736C5C8(v23, sub_1A72DF5E8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1A72DA86C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A7571500();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  uint64_t v12 = a1[1];
  sub_1A7571C80();
  uint64_t v14 = sub_1A7571D30();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 0, 1, v14);
  v20[2] = v13;
  v20[3] = v12;
  sub_1A72DF534();
  v20[0] = sub_1A7573310();
  v20[1] = v15;
  sub_1A75714D0();
  uint64_t v16 = sub_1A75732B0();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  sub_1A72DF588((uint64_t)v11);
  LOBYTE(v16) = sub_1A72DB328(v16, v18, a3);
  swift_bridgeObjectRelease();
  return v16 & 1;
}

Swift::Bool __swiftcall REMHashtagLabelCollection.contains(matchOfHashtagName:)(Swift::String matchOfHashtagName)
{
  object = matchOfHashtagName._object;
  uint64_t countAndFlagsBits = matchOfHashtagName._countAndFlagsBits;
  uint64_t v4 = sub_1A7571500();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v1 + 8);
  sub_1A7571C80();
  uint64_t v12 = sub_1A7571D30();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  v18[2] = countAndFlagsBits;
  void v18[3] = object;
  sub_1A72DF534();
  v18[0] = sub_1A7573310();
  v18[1] = v13;
  sub_1A75714D0();
  uint64_t v14 = sub_1A75732B0();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  sub_1A72DF588((uint64_t)v10);
  LOBYTE(v4) = sub_1A72DB328(v14, v16, v11);
  swift_bridgeObjectRelease();
  return v4 & 1;
}

Swift::String_optional __swiftcall REMHashtagLabelCollection.label(matchingHashtagName:)(Swift::String matchingHashtagName)
{
  object = matchingHashtagName._object;
  uint64_t countAndFlagsBits = matchingHashtagName._countAndFlagsBits;
  uint64_t v3 = sub_1A7571500();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A75785A0;
  *(void *)(inited + 32) = countAndFlagsBits;
  *(void *)(inited + 40) = object;
  uint64_t v30 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1A7571C80();
  uint64_t v11 = sub_1A7571D30();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 0, 1, v11);
  v29[0] = countAndFlagsBits;
  v29[1] = (uint64_t)object;
  sub_1A72DF534();
  uint64_t v27 = sub_1A7573310();
  uint64_t v28 = v12;
  sub_1A75714D0();
  uint64_t v13 = sub_1A75732B0();
  uint64_t v15 = v14;
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  sub_1A72DF588((uint64_t)v9);
  swift_bridgeObjectRetain();
  sub_1A72DF384(v29, v13, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = inited;
  uint64_t v26 = v30;
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_1A736C5C8(v16, sub_1A72E10DC);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1A72DA108(v17);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = v18;
  uint64_t v22 = v20;
  result.value._object = v22;
  result.value._uint64_t countAndFlagsBits = v21;
  return result;
}

uint64_t REMHashtagLabelCollection.suggestedLabels(forHashtagNamePrefix:)(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_1A7571500();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v2;
  uint64_t v13 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v13 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v13)
  {
    sub_1A7571C80();
    uint64_t v14 = sub_1A7571D30();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v44 = *(void (**)(char *, void, uint64_t))(v15 + 56);
    uint64_t v45 = v14;
    uint64_t v43 = v15 + 56;
    v44(v11, 0, 1);
    uint64_t v51 = a1;
    unint64_t v52 = a2;
    unint64_t v16 = sub_1A72DF534();
    uint64_t v49 = sub_1A7573310();
    uint64_t v50 = v17;
    sub_1A75714D0();
    unint64_t v40 = v16;
    uint64_t v42 = sub_1A75732B0();
    uint64_t v47 = v18;
    uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v19 = v6 + 8;
    uint64_t v41 = v20;
    v20(v8, v5);
    swift_bridgeObjectRelease();
    sub_1A72DF588((uint64_t)v11);
    unint64_t v21 = *(void *)(v12 + 16);
    uint64_t result = swift_bridgeObjectRetain();
    if (v21)
    {
      uint64_t v38 = v19;
      uint64_t v39 = v5;
      unint64_t v23 = 0;
      uint64_t v37 = -(uint64_t)v21;
      uint64_t v24 = MEMORY[0x1E4FBC860];
      v35[0] = v21;
      v35[1] = v12;
      do
      {
        uint64_t v36 = v24;
        if (v23 <= v21) {
          unint64_t v25 = v21;
        }
        else {
          unint64_t v25 = v23;
        }
        unint64_t v46 = -(uint64_t)v25;
        uint64_t v26 = (uint64_t *)(v12 + 40 + 16 * v23++);
        while (1)
        {
          if (v46 + v23 == 1)
          {
            __break(1u);
            return result;
          }
          uint64_t v28 = *(v26 - 1);
          unint64_t v27 = *v26;
          swift_bridgeObjectRetain();
          sub_1A7571C80();
          ((void (*)(char *, void, uint64_t, uint64_t))v44)(v11, 0, 1, v45);
          uint64_t v51 = v28;
          unint64_t v52 = v27;
          uint64_t v49 = sub_1A7573310();
          uint64_t v50 = v29;
          sub_1A75714D0();
          sub_1A75732B0();
          v41(v8, v39);
          swift_bridgeObjectRelease();
          sub_1A72DF588((uint64_t)v11);
          char v30 = sub_1A7572800();
          swift_bridgeObjectRelease();
          if (v30) {
            break;
          }
          uint64_t result = swift_bridgeObjectRelease();
          ++v23;
          v26 += 2;
          if (v37 + v23 == 1)
          {
            uint64_t v24 = v36;
            goto LABEL_22;
          }
        }
        uint64_t v24 = v36;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v48 = v24;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1A72D2D00(0, *(void *)(v24 + 16) + 1, 1);
          uint64_t v24 = v48;
        }
        unint64_t v21 = v35[0];
        unint64_t v32 = *(void *)(v24 + 16);
        unint64_t v31 = *(void *)(v24 + 24);
        unint64_t v33 = v32 + 1;
        if (v32 >= v31 >> 1)
        {
          unint64_t v46 = v32 + 1;
          uint64_t result = sub_1A72D2D00(v31 > 1, v32 + 1, 1);
          unint64_t v33 = v46;
          uint64_t v24 = v48;
        }
        *(void *)(v24 + 16) = v33;
        uint64_t v34 = v24 + 16 * v32;
        *(void *)(v34 + 32) = v28;
        *(void *)(v34 + 40) = v27;
      }
      while (v37 + v23);
    }
    else
    {
      uint64_t v24 = MEMORY[0x1E4FBC860];
    }
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v24;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t sub_1A72DB328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1A75740C0();
    sub_1A75726F0();
    uint64_t v6 = sub_1A7574110();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1A7573DB0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1A7573DB0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_1A72DB460(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_1A75740B0();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1A72DB52C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A75740C0();
    sub_1A75726F0();
    uint64_t v3 = sub_1A7574110();
    swift_bridgeObjectRelease();
    uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v5 = v3 & ~v4;
    uint64_t v6 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
    {
      uint64_t v7 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v9 = v8;
      if (v7 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      char v12 = sub_1A7573DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_18:
        char v20 = 1;
        return v20 & 1;
      }
      uint64_t v13 = ~v4;
      unint64_t v14 = (v5 + 1) & v13;
      if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
      {
        while (1)
        {
          uint64_t v15 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          uint64_t v17 = v16;
          if (v15 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v17 == v18) {
            break;
          }
          char v20 = sub_1A7573DB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            unint64_t v14 = (v14 + 1) & v13;
            if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14)) {
              continue;
            }
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_1A72DB6F4(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_1A7573450();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (uint64_t v6 = sub_1A7573180(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_1A7573190();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_1A7573190();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

BOOL sub_1A72DB854(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_1A75740C0();
  sub_1A75740D0();
  uint64_t v4 = sub_1A7574110();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1A72DB944(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1A7571D30();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_1A72E1094(&qword_1E96F1488, MEMORY[0x1E4F27A78]),
        uint64_t v7 = sub_1A7572510(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    unint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_1A72E1094(&qword_1E96F1490, MEMORY[0x1E4F27A78]);
      char v15 = sub_1A75725C0();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t REMHashtagLabelCollection.isDisjoint(with:)(uint64_t a1)
{
  return sub_1A72DBB64(*(void *)(a1 + 8), *(void *)(v1 + 8));
}

uint64_t sub_1A72DBB64(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 1;
  }
  if (v2 >= v3) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (v2 >= v3) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = a1;
  }
  uint64_t v32 = v4;
  uint64_t v33 = v4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 56);
  int64_t v31 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = v5 + 56;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    while (1)
    {
      int64_t v12 = v11;
      if (!v8) {
        break;
      }
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      if (*(void *)(v5 + 16)) {
        goto LABEL_31;
      }
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v15 >= v31) {
      goto LABEL_48;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v12 + 2;
      if (v12 + 2 >= v31) {
        goto LABEL_48;
      }
      unint64_t v16 = *(void *)(v33 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v12 + 3;
        if (v12 + 3 >= v31) {
          goto LABEL_48;
        }
        unint64_t v16 = *(void *)(v33 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    if (*(void *)(v5 + 16))
    {
LABEL_31:
      uint64_t v18 = (uint64_t *)(*(void *)(v32 + 48) + 16 * v14);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      sub_1A75740C0();
      swift_bridgeObjectRetain();
      sub_1A75726F0();
      uint64_t v21 = sub_1A7574110();
      uint64_t v22 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v23 = v21 & ~v22;
      if ((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
      {
        uint64_t v24 = *(void *)(v5 + 48);
        unint64_t v25 = (void *)(v24 + 16 * v23);
        BOOL v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (sub_1A7573DB0() & 1) != 0)
        {
LABEL_44:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v30 = 0;
LABEL_45:
          sub_1A72D99A4();
          return v30;
        }
        uint64_t v27 = ~v22;
        while (1)
        {
          unint64_t v23 = (v23 + 1) & v27;
          if (((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
            break;
          }
          uint64_t v28 = (void *)(v24 + 16 * v23);
          BOOL v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (sub_1A7573DB0() & 1) != 0) {
            goto LABEL_44;
          }
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    uint64_t v30 = 1;
    goto LABEL_45;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v12 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_48;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_30;
    }
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t REMHashtagLabelCollection.intersection(_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1A7571500();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  uint64_t result = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v59 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v2;
  unint64_t v13 = *(void *)(v12 + 16);
  if (!v13)
  {
    unint64_t v14 = (void *)MEMORY[0x1E4FBC870];
    goto LABEL_19;
  }
  uint64_t result = *a1;
  unint64_t v14 = (void *)MEMORY[0x1E4FBC870];
  if (!*(void *)(*a1 + 16))
  {
LABEL_19:
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_25;
  }
  os_log_type_t v63 = v8;
  uint64_t v64 = v5;
  uint64_t v53 = result;
  uint64_t v54 = a2;
  uint64_t v15 = a1[1];
  uint64_t v16 = v6 + 8;
  swift_bridgeObjectRetain();
  uint64_t v58 = v15;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v17 = 0;
  uint64_t v52 = v12;
  uint64_t v18 = v12 + 40;
  uint64_t v56 = -(uint64_t)v13;
  uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v20 = (uint64_t)v59;
  unint64_t v21 = v13;
  uint64_t v50 = v18;
  unint64_t v51 = v13;
  do
  {
    uint64_t v55 = v19;
    if (v17 <= v21) {
      unint64_t v22 = v21;
    }
    else {
      unint64_t v22 = v17;
    }
    uint64_t v57 = -(uint64_t)v22;
    unint64_t v23 = (uint64_t *)(v18 + 16 * v17++);
    while (1)
    {
      if (v57 + v17 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v24 = *(v23 - 1);
      uint64_t v25 = *v23;
      swift_bridgeObjectRetain();
      sub_1A7571C80();
      uint64_t v26 = sub_1A7571D30();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56);
      uint64_t v61 = v27 + 56;
      uint64_t v62 = v28;
      v28(v20, 0, 1, v26);
      uint64_t v67 = v24;
      uint64_t v68 = v25;
      sub_1A72DF534();
      uint64_t v65 = sub_1A7573310();
      uint64_t v66 = v29;
      uint64_t v30 = v63;
      sub_1A75714D0();
      uint64_t v31 = sub_1A75732B0();
      uint64_t v32 = (void (**)(void, void))v16;
      uint64_t v34 = v33;
      uint64_t v35 = v30;
      uint64_t v20 = (uint64_t)v59;
      uint64_t v36 = v32;
      uint64_t v60 = (void (*)(char *, uint64_t))*v32;
      v60(v35, v64);
      swift_bridgeObjectRelease();
      sub_1A72DF588(v20);
      LOBYTE(v31) = sub_1A72DB328(v31, v34, v58);
      swift_bridgeObjectRelease();
      if (v31) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      ++v17;
      v23 += 2;
      uint64_t v16 = (uint64_t)v36;
      if (v56 + v17 == 1)
      {
        uint64_t v19 = v55;
        goto LABEL_20;
      }
    }
    uint64_t v19 = v55;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v69 = v19;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1A72D2D00(0, v19[2] + 1, 1);
      uint64_t v19 = v69;
    }
    unint64_t v38 = v19[2];
    unint64_t v37 = v19[3];
    if (v38 >= v37 >> 1)
    {
      uint64_t result = sub_1A72D2D00(v37 > 1, v38 + 1, 1);
      uint64_t v19 = v69;
    }
    v19[2] = v38 + 1;
    uint64_t v39 = &v19[2 * v38];
    v39[4] = v24;
    v39[5] = v25;
    uint64_t v16 = (uint64_t)v36;
    uint64_t v18 = v50;
    unint64_t v21 = v51;
  }
  while (v56 + v17);
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v14 = (void *)MEMORY[0x1E4FBC870];
  uint64_t v69 = (void *)MEMORY[0x1E4FBC870];
  uint64_t v40 = v19[2];
  if (v40)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v55 = v19;
    uint64_t v41 = v19 + 5;
    uint64_t v58 = v16;
    uint64_t v42 = v63;
    do
    {
      uint64_t v43 = *(v41 - 1);
      uint64_t v44 = *v41;
      swift_bridgeObjectRetain();
      sub_1A7571C80();
      v62(v20, 0, 1, v26);
      uint64_t v67 = v43;
      uint64_t v68 = v44;
      uint64_t v65 = sub_1A7573310();
      uint64_t v66 = v45;
      sub_1A75714D0();
      uint64_t v46 = sub_1A75732B0();
      uint64_t v48 = v47;
      v60(v42, v64);
      swift_bridgeObjectRelease();
      sub_1A72DF588(v20);
      swift_bridgeObjectRetain();
      sub_1A72DF384(&v67, v46, v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v41 += 2;
      --v40;
    }
    while (v40);
    uint64_t v19 = v55;
    uint64_t result = swift_release_n();
    unint64_t v14 = v69;
  }
  a2 = v54;
LABEL_25:
  *a2 = v19;
  a2[1] = v14;
  return result;
}

void REMHashtagLabelCollection.union(_:)(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1A7571500();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v65 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v12 = (void *)*v2;
  if (!*(void *)(*v2 + 16))
  {
    uint64_t v54 = a1[1];
    *a2 = v11;
    a2[1] = v54;
LABEL_27:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return;
  }
  uint64_t v13 = v2[1];
  uint64_t v63 = *(void *)(v11 + 16);
  if (!v63)
  {
    *a2 = v12;
    a2[1] = v13;
    goto LABEL_27;
  }
  uint64_t v62 = v13;
  uint64_t v56 = a2;
  uint64_t v77 = v12;
  uint64_t v61 = v11 + 32;
  os_log_type_t v71 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  uint64_t v64 = v11;
  swift_bridgeObjectRetain();
  unint64_t v14 = 0;
  uint64_t v66 = v5;
  uint64_t v57 = v8;
  do
  {
    if (v14 >= *(void *)(v64 + 16))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      return;
    }
    uint64_t v16 = (uint64_t *)(v61 + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    swift_bridgeObjectRetain();
    uint64_t v19 = v8;
    uint64_t v20 = (uint64_t)v65;
    sub_1A7571C80();
    uint64_t v21 = sub_1A7571D30();
    uint64_t v22 = *(void *)(v21 - 8);
    unint64_t v23 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56);
    uint64_t v69 = v22 + 56;
    v23(v20, 0, 1, v21);
    uint64_t v67 = v17;
    uint64_t v75 = v17;
    uint64_t v76 = v18;
    unint64_t v24 = sub_1A72DF534();
    uint64_t v73 = sub_1A7573310();
    uint64_t v74 = v25;
    sub_1A75714D0();
    unint64_t v60 = v24;
    uint64_t v26 = sub_1A75732B0();
    uint64_t v28 = v27;
    uint64_t v68 = *v71;
    v68(v19, v5);
    swift_bridgeObjectRelease();
    sub_1A72DF588(v20);
    LOBYTE(v26) = sub_1A72DB328(v26, v28, v62);
    swift_bridgeObjectRelease();
    if (v26)
    {
      swift_bridgeObjectRelease();
      unint64_t v8 = v19;
      uint64_t v15 = v21;
    }
    else
    {
      uint64_t v70 = v21;
      uint64_t v29 = v67;
      uint64_t v30 = (void *)sub_1A75725E0();
      uint64_t v31 = v77;
      uint64_t v32 = v77[2];
      if (v32)
      {
        uint64_t v58 = v18;
        uint64_t v59 = v23;
        swift_bridgeObjectRetain();
        unint64_t v33 = 0;
        uint64_t v34 = v31 + 5;
        while (1)
        {
          swift_bridgeObjectRetain();
          uint64_t v35 = (void *)sub_1A75725E0();
          id v36 = objc_msgSend(v30, sel_localizedStandardCompare_, v35);
          swift_bridgeObjectRelease();

          if (v36 == (id)-1) {
            break;
          }
          v34 += 2;
          if (v32 == ++v33)
          {
            swift_bridgeObjectRelease();
            uint64_t v18 = v58;
            unint64_t v23 = v59;
            goto LABEL_13;
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v23 = v59;
        if (v31[2] < v33) {
          goto LABEL_31;
        }
        sub_1A72DEACC(v33, v33, v29, v58);

        uint64_t v5 = v66;
        unint64_t v8 = v57;
        uint64_t v15 = v70;
      }
      else
      {
LABEL_13:
        unint64_t v37 = v23;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v31 = sub_1A72AC148(0, v31[2] + 1, 1, v31);
        }
        uint64_t v15 = v70;
        unint64_t v39 = v31[2];
        unint64_t v38 = v31[3];
        if (v39 >= v38 >> 1) {
          uint64_t v31 = sub_1A72AC148((void *)(v38 > 1), v39 + 1, 1, v31);
        }
        v31[2] = v39 + 1;
        uint64_t v40 = &v31[2 * v39];
        v40[4] = v29;
        v40[5] = v18;

        uint64_t v77 = v31;
        unint64_t v8 = v57;
        unint64_t v23 = v37;
        uint64_t v5 = v66;
      }
    }
    ++v14;
  }
  while (v14 != v63);
  swift_bridgeObjectRelease();
  uint64_t v41 = v77;
  uint64_t v42 = MEMORY[0x1E4FBC870];
  uint64_t v72 = MEMORY[0x1E4FBC870];
  uint64_t v43 = v77[2];
  if (v43)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v67 = (uint64_t)v41;
    uint64_t v44 = v41 + 5;
    uint64_t v45 = (uint64_t)v65;
    uint64_t v70 = v15;
    do
    {
      uint64_t v46 = *(v44 - 1);
      uint64_t v47 = *v44;
      swift_bridgeObjectRetain();
      sub_1A7571C80();
      v23(v45, 0, 1, v70);
      uint64_t v75 = v46;
      uint64_t v76 = v47;
      uint64_t v73 = sub_1A7573310();
      uint64_t v74 = v48;
      sub_1A75714D0();
      uint64_t v49 = sub_1A75732B0();
      uint64_t v50 = v23;
      uint64_t v52 = v51;
      v68(v8, v66);
      swift_bridgeObjectRelease();
      sub_1A72DF588(v45);
      swift_bridgeObjectRetain();
      sub_1A72DF384(&v75, v49, v52);
      swift_bridgeObjectRelease();
      unint64_t v23 = v50;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v44 += 2;
      --v43;
    }
    while (v43);
    uint64_t v41 = (void *)v67;
    swift_bridgeObjectRelease_n();
    uint64_t v42 = v72;
  }
  uint64_t v53 = v56;
  *uint64_t v56 = v41;
  v53[1] = v42;
}

uint64_t REMHashtagLabelCollection.subtracting(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1A7571500();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  uint64_t result = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v63 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v2;
  unint64_t v56 = *(void *)(*v2 + 16);
  if (v56)
  {
    uint64_t v13 = *a1;
    if (*(void *)(*a1 + 16))
    {
      uint64_t v66 = v8;
      uint64_t v67 = v5;
      uint64_t v55 = a2;
      unint64_t v14 = (void (*)(char *, uint64_t))a1[1];
      uint64_t v15 = (void (**)(char *, uint64_t))(v6 + 8);
      v54[1] = v13;
      swift_bridgeObjectRetain();
      uint64_t v62 = v14;
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      unint64_t v16 = 0;
      v54[2] = v12;
      uint64_t v17 = v12 + 40;
      unint64_t v18 = v56;
      uint64_t v60 = -(uint64_t)v56;
      uint64_t v57 = MEMORY[0x1E4FBC860];
      uint64_t v19 = (uint64_t)v63;
      v54[0] = v12 + 40;
      do
      {
        if (v16 <= v18) {
          unint64_t v20 = v18;
        }
        else {
          unint64_t v20 = v16;
        }
        uint64_t v61 = -(uint64_t)v20;
        uint64_t v21 = (uint64_t *)(v17 + 16 * v16++);
        while (1)
        {
          if (v61 + v16 == 1)
          {
            __break(1u);
            return result;
          }
          uint64_t v22 = *(v21 - 1);
          uint64_t v23 = *v21;
          swift_bridgeObjectRetain();
          sub_1A7571C80();
          uint64_t v24 = sub_1A7571D30();
          uint64_t v25 = *(void *)(v24 - 8);
          uint64_t v26 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56);
          uint64_t v59 = v24;
          uint64_t v64 = v25 + 56;
          uint64_t v65 = v26;
          ((void (*)(uint64_t, void, uint64_t))v26)(v19, 0, 1);
          uint64_t v70 = v22;
          uint64_t v71 = v23;
          unint64_t v27 = sub_1A72DF534();
          uint64_t v68 = sub_1A7573310();
          uint64_t v69 = v28;
          uint64_t v29 = v66;
          sub_1A75714D0();
          unint64_t v58 = v27;
          uint64_t v30 = sub_1A75732B0();
          uint64_t v32 = v31;
          unint64_t v33 = *v15;
          uint64_t v34 = v29;
          uint64_t v19 = (uint64_t)v63;
          (*v15)(v34, v67);
          swift_bridgeObjectRelease();
          sub_1A72DF588(v19);
          LOBYTE(v30) = sub_1A72DB328(v30, v32, (uint64_t)v62);
          swift_bridgeObjectRelease();
          if ((v30 & 1) == 0) {
            break;
          }
          uint64_t result = swift_bridgeObjectRelease();
          ++v16;
          v21 += 2;
          if (v60 + v16 == 1) {
            goto LABEL_17;
          }
        }
        uint64_t v35 = v57;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v72 = v35;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1A72D2D00(0, *(void *)(v35 + 16) + 1, 1);
          uint64_t v35 = v72;
        }
        unint64_t v37 = *(void *)(v35 + 16);
        unint64_t v36 = *(void *)(v35 + 24);
        if (v37 >= v36 >> 1)
        {
          uint64_t result = sub_1A72D2D00(v36 > 1, v37 + 1, 1);
          uint64_t v35 = v72;
        }
        *(void *)(v35 + 16) = v37 + 1;
        uint64_t v57 = v35;
        uint64_t v38 = v35 + 16 * v37;
        *(void *)(v38 + 32) = v22;
        *(void *)(v38 + 40) = v23;
        unint64_t v18 = v56;
        uint64_t v17 = v54[0];
      }
      while (v60 + v16);
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v39 = MEMORY[0x1E4FBC870];
      uint64_t v72 = MEMORY[0x1E4FBC870];
      uint64_t v40 = v57;
      uint64_t v41 = *(void *)(v57 + 16);
      if (v41)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v42 = (uint64_t *)(v40 + 40);
        uint64_t v61 = (uint64_t)v15;
        uint64_t v62 = v33;
        uint64_t v43 = v59;
        uint64_t v44 = v66;
        do
        {
          uint64_t v45 = *(v42 - 1);
          uint64_t v46 = *v42;
          swift_bridgeObjectRetain();
          sub_1A7571C80();
          v65(v19, 0, 1, v43);
          uint64_t v70 = v45;
          uint64_t v71 = v46;
          uint64_t v68 = sub_1A7573310();
          uint64_t v69 = v47;
          sub_1A75714D0();
          uint64_t v48 = sub_1A75732B0();
          uint64_t v50 = v49;
          v62(v44, v67);
          swift_bridgeObjectRelease();
          sub_1A72DF588(v19);
          swift_bridgeObjectRetain();
          sub_1A72DF384(&v70, v48, v50);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v42 += 2;
          --v41;
        }
        while (v41);
        uint64_t v40 = v57;
        uint64_t result = swift_release_n();
        uint64_t v39 = v72;
      }
      uint64_t v51 = v55;
      *uint64_t v55 = v40;
      v51[1] = v39;
    }
    else
    {
      uint64_t v53 = v2[1];
      *a2 = v12;
      a2[1] = v53;
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
  }
  else
  {
    uint64_t v52 = MEMORY[0x1E4FBC870];
    *a2 = MEMORY[0x1E4FBC860];
    a2[1] = v52;
  }
  return result;
}

uint64_t REMHashtagLabelCollection.isSuperset(of:)(uint64_t a1)
{
  return sub_1A72DEF3C(*(void *)(v1 + 8), *(void *)(a1 + 8));
}

uint64_t REMHashtagLabelCollection.isSubset(of:)(uint64_t a1)
{
  return sub_1A72DEF3C(*(void *)(a1 + 8), *(void *)(v1 + 8));
}

uint64_t REMHashtagLabelCollection.matches(_:)(uint64_t a1)
{
  return sub_1A72DD5F0(*(void *)(v1 + 8), *(void *)(a1 + 8));
}

uint64_t sub_1A72DCE24(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (a2 < 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      return MEMORY[0x1F4184BB8](v6, v5);
    }
    sub_1A72DF230(v5, a2);
    return v8 & 1;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    sub_1A72DF230(v7, a1);
    return v8 & 1;
  }
  if (a1 == a2)
  {
LABEL_47:
    char v8 = 1;
    return v8 & 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
LABEL_49:
    char v8 = 0;
    return v8 & 1;
  }
  uint64_t v29 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  uint64_t v6 = sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
  int64_t v12 = 0;
  int64_t v30 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = a2 + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_41;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v16 >= v30) {
      goto LABEL_47;
    }
    unint64_t v17 = *(void *)(v29 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v30) {
        goto LABEL_47;
      }
      unint64_t v17 = *(void *)(v29 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v30) {
          goto LABEL_47;
        }
        unint64_t v17 = *(void *)(v29 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_40:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_41:
    id v19 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    uint64_t v20 = sub_1A7573180();
    uint64_t v21 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v22 = v20 & ~v21;
    if (((*(void *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
      goto LABEL_48;
    }
    int64_t v31 = v12;
    id v23 = *(id *)(*(void *)(a2 + 48) + 8 * v22);
    char v24 = sub_1A7573190();

    if ((v24 & 1) == 0)
    {
      uint64_t v25 = ~v21;
      while (1)
      {
        unint64_t v22 = (v22 + 1) & v25;
        if (((*(void *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          break;
        }
        id v26 = *(id *)(*(void *)(a2 + 48) + 8 * v22);
        char v27 = sub_1A7573190();

        if (v27) {
          goto LABEL_24;
        }
      }
LABEL_48:

      goto LABEL_49;
    }
LABEL_24:

    int64_t v12 = v31;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v30) {
    goto LABEL_47;
  }
  unint64_t v17 = *(void *)(v29 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_40;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v30) {
      goto LABEL_47;
    }
    unint64_t v17 = *(void *)(v29 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_40;
    }
  }
LABEL_52:
  __break(1u);
  return MEMORY[0x1F4184BB8](v6, v5);
}

uint64_t sub_1A72DD120(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_33;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    uint64_t v16 = *(void *)(*(void *)(v3 + 48) + 8 * v12);
    sub_1A75740C0();
    sub_1A75740D0();
    uint64_t result = sub_1A7574110();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(void *)(v19 + 8 * v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(void *)(v19 + 8 * v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t sub_1A72DD304(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (a2 < 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      return MEMORY[0x1F4184BB8](v6, v5);
    }
    sub_1A72DF230(v5, a2);
    return v8 & 1;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    sub_1A72DF230(v7, a1);
    return v8 & 1;
  }
  if (a1 == a2)
  {
LABEL_47:
    char v8 = 1;
    return v8 & 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
LABEL_49:
    char v8 = 0;
    return v8 & 1;
  }
  uint64_t v29 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  uint64_t v6 = type metadata accessor for REMObjectID_Codable();
  int64_t v12 = 0;
  int64_t v30 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = a2 + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_41;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v16 >= v30) {
      goto LABEL_47;
    }
    unint64_t v17 = *(void *)(v29 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v30) {
        goto LABEL_47;
      }
      unint64_t v17 = *(void *)(v29 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v30) {
          goto LABEL_47;
        }
        unint64_t v17 = *(void *)(v29 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_40:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_41:
    id v19 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    uint64_t v20 = sub_1A7573180();
    uint64_t v21 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v22 = v20 & ~v21;
    if (((*(void *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
      goto LABEL_48;
    }
    int64_t v31 = v12;
    id v23 = *(id *)(*(void *)(a2 + 48) + 8 * v22);
    char v24 = sub_1A7573190();

    if ((v24 & 1) == 0)
    {
      uint64_t v25 = ~v21;
      while (1)
      {
        unint64_t v22 = (v22 + 1) & v25;
        if (((*(void *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          break;
        }
        id v26 = *(id *)(*(void *)(a2 + 48) + 8 * v22);
        char v27 = sub_1A7573190();

        if (v27) {
          goto LABEL_24;
        }
      }
LABEL_48:

      goto LABEL_49;
    }
LABEL_24:

    int64_t v12 = v31;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v30) {
    goto LABEL_47;
  }
  unint64_t v17 = *(void *)(v29 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_40;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v30) {
      goto LABEL_47;
    }
    unint64_t v17 = *(void *)(v29 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_40;
    }
  }
LABEL_52:
  __break(1u);
  return MEMORY[0x1F4184BB8](v6, v5);
}

uint64_t sub_1A72DD5F0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    uint64_t v14 = result;
    unint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1A75740C0();
    swift_bridgeObjectRetain();
    sub_1A75726F0();
    uint64_t v18 = sub_1A7574110();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    unint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1A7573DB0() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        char v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1A7573DB0() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t static REMHashtagLabelCollection.sortedLabels<A>(from:)()
{
  return sub_1A7572920();
}

uint64_t sub_1A72DD8E8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static REMHashtagLabelCollection.sort<A>(_:byName:)()
{
  return sub_1A7572920();
}

BOOL sub_1A72DD978(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  uint64_t v5 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t))a3)(a2);
  unint64_t v6 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_localizedStandardCompare_, v6);

  return v7 == (id)-1;
}

uint64_t REMHashtagLabelCollection.hash(into:)()
{
  uint64_t v1 = *v0;
  uint64_t result = sub_1A75740D0();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A75726F0();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static REMHashtagLabelCollection.== infix(_:_:)(void **a1, void **a2)
{
  return sub_1A72DDEA4(*a1, *a2);
}

uint64_t sub_1A72DDAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0) - 8;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  int64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_1A72E0FD4(a1 + v12, (uint64_t)v10);
        sub_1A72E0FD4(a2 + v12, (uint64_t)v7);
        char v15 = static REMCustomSmartListFilterDescriptor.PostFetchPredicate.== infix(_:_:)(v10, v7);
        sub_1A72E1038((uint64_t)v7);
        sub_1A72E1038((uint64_t)v10);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1A72DDC34(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (v6 == v22) {
      goto LABEL_5;
    }
    return 0;
  }
  if (v6 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_5:
  if (!v6) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  if (v5) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v9;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v6 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = MEMORY[0x1AD0CB800](0, a1);
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  uint64_t v5 = (void *)result;
  unint64_t v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v12 = (id)MEMORY[0x1AD0CB800](0, a2);
LABEL_22:
    uint64_t v13 = v12;
    type metadata accessor for REMObjectID_Codable();
    char v14 = sub_1A7573190();

    if (v14)
    {
      uint64_t v15 = 1 - v6;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v6 = v15 + i == 5;
        if (v15 + i == 5) {
          return v6;
        }
        unint64_t v20 = i - 4;
        if (v23)
        {
          id v21 = (id)MEMORY[0x1AD0CB800](i - 4, a1);
          if (v2) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v20 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          id v21 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_24:
            id v17 = (id)MEMORY[0x1AD0CB800](i - 4, a2);
            goto LABEL_25;
          }
        }
        if (v20 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v17 = *(id *)(a2 + 8 * i);
LABEL_25:
        uint64_t v18 = v17;
        char v19 = sub_1A7573190();

        if ((v19 & 1) == 0) {
          return v6;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A72DDEA4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1A7573DB0(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1A7573DB0() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A72DDF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  uint64_t v26 = a1 + 32;
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v28 = a2 + 32;
  while (1)
  {
    char v6 = (unint64_t *)(v4 + 16 * v3);
    unint64_t v7 = *v6;
    unint64_t v29 = v6[1];
    uint64_t v8 = (unint64_t *)(v5 + 16 * v3);
    unint64_t v9 = *v8;
    unint64_t v10 = v8[1];
    unint64_t v11 = *v6 >> 62;
    if (!v11)
    {
      if (v9 >> 62) {
        return 0;
      }
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      sub_1A72E0C18(v9);
      sub_1A72E0C18(v7);
      char v12 = sub_1A7573190();
      sub_1A72E0C94(v9);
      unint64_t v13 = v7;
LABEL_11:
      sub_1A72E0C94(v13);
      if ((v12 & 1) == 0) {
        return 0;
      }
      goto LABEL_22;
    }
    if (v11 == 1)
    {
      if (v9 >> 62 != 1) {
        return 0;
      }
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      sub_1A72E0C18(v9);
      sub_1A72E0C18(v7);
      uint64_t v5 = v28;
      char v12 = sub_1A7573190();
      sub_1A72E0C94(v9);
      unint64_t v13 = v7;
      goto LABEL_11;
    }
    if (v9 >> 62 != 2) {
      return 0;
    }
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
    sub_1A72E0C18(v9);
    sub_1A72E0C18(v7);
    if ((sub_1A7573190() & 1) == 0) {
      goto LABEL_33;
    }
    uint64_t v14 = *(void *)(v29 + 16);
    if (v14 != *(void *)(v10 + 16)) {
      goto LABEL_33;
    }
    if (v14 && v29 != v10) {
      break;
    }
LABEL_21:
    sub_1A72E0C94(v9);
    sub_1A72E0C94(v7);
    uint64_t v4 = v26;
    uint64_t v2 = v27;
    uint64_t v5 = v28;
LABEL_22:
    if (++v3 == v2) {
      return 1;
    }
  }
  uint64_t v16 = (unint64_t *)(v29 + 32);
  id v17 = (unint64_t *)(v10 + 32);
  while (1)
  {
    unint64_t v19 = *v16++;
    unint64_t v18 = v19;
    unint64_t v21 = *v17++;
    unint64_t v20 = v21;
    if ((v18 & 0x8000000000000000) != 0)
    {
      if ((v20 & 0x8000000000000000) == 0) {
        break;
      }
      v18 &= ~0x8000000000000000;
      v20 &= ~0x8000000000000000;
    }
    else if ((v20 & 0x8000000000000000) != 0)
    {
      break;
    }
    id v22 = (id)v20;
    id v23 = (id)v18;
    char v24 = sub_1A7573190();

    if ((v24 & 1) == 0) {
      break;
    }
    if (!--v14) {
      goto LABEL_21;
    }
  }
LABEL_33:
  sub_1A72E0C94(v9);
  sub_1A72E0C94(v7);
  return 0;
}

uint64_t sub_1A72DE248(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (unint64_t *)(a1 + 32);
    uint64_t v4 = (unint64_t *)(a2 + 32);
    while (1)
    {
      unint64_t v6 = *v3++;
      unint64_t v5 = v6;
      unint64_t v8 = *v4++;
      unint64_t v7 = v8;
      if ((v5 & 0x8000000000000000) != 0)
      {
        if ((v7 & 0x8000000000000000) == 0) {
          return 0;
        }
        v5 &= ~0x8000000000000000;
        v7 &= ~0x8000000000000000;
      }
      else if ((v7 & 0x8000000000000000) != 0)
      {
        return 0;
      }
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
      id v9 = (id)v7;
      id v10 = (id)v5;
      char v11 = sub_1A7573190();

      if ((v11 & 1) == 0) {
        break;
      }
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1A72DE320(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (v6 == v22) {
      goto LABEL_5;
    }
    return 0;
  }
  if (v6 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_5:
  if (!v6) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  if (v5) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v9;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v6 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = MEMORY[0x1AD0CB800](0, a1);
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  unint64_t v5 = (void *)result;
  unint64_t v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v12 = (id)MEMORY[0x1AD0CB800](0, a2);
LABEL_22:
    unint64_t v13 = v12;
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
    char v14 = sub_1A7573190();

    if (v14)
    {
      uint64_t v15 = 1 - v6;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v6 = v15 + i == 5;
        if (v15 + i == 5) {
          return v6;
        }
        unint64_t v20 = i - 4;
        if (v23)
        {
          id v21 = (id)MEMORY[0x1AD0CB800](i - 4, a1);
          if (v2) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v20 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          id v21 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_24:
            id v17 = (id)MEMORY[0x1AD0CB800](i - 4, a2);
            goto LABEL_25;
          }
        }
        if (v20 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v17 = *(id *)(a2 + 8 * i);
LABEL_25:
        unint64_t v18 = v17;
        char v19 = sub_1A7573190();

        if ((v19 & 1) == 0) {
          return v6;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

BOOL sub_1A72DE5A0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  unint64_t v5 = a1 + 5;
  uint64_t v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t REMHashtagLabelCollection.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_1A75740C0();
  sub_1A75740D0();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A75726F0();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return sub_1A7574110();
}

uint64_t sub_1A72DE6C0()
{
  uint64_t v1 = *v0;
  sub_1A75740C0();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_1A75740D0();
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A75726F0();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return sub_1A7574110();
}

uint64_t sub_1A72DE760(void **a1, void **a2)
{
  return sub_1A72DDEA4(*a1, *a2);
}

uint64_t REMHashtagLabelCollection.init<A>(hashtags:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v34 = sub_1A7571500();
  uint64_t v8 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A72D9A0C((void (*)(char *, char *))sub_1A72DEA64, 0, a2, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], a3, MEMORY[0x1E4FBC278], v14);
  uint64_t v16 = MEMORY[0x1E4FBC870];
  uint64_t v38 = MEMORY[0x1E4FBC870];
  uint64_t v17 = *(void *)(v15 + 16);
  if (v17)
  {
    uint64_t v31 = a1;
    uint64_t v32 = a2;
    unint64_t v33 = a4;
    unint64_t v18 = (void (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain_n();
    uint64_t v30 = v15;
    char v19 = (uint64_t *)(v15 + 40);
    uint64_t v20 = v34;
    do
    {
      uint64_t v21 = *(v19 - 1);
      uint64_t v22 = *v19;
      swift_bridgeObjectRetain();
      sub_1A7571C80();
      uint64_t v23 = sub_1A7571D30();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v13, 0, 1, v23);
      v37[0] = v21;
      v37[1] = v22;
      sub_1A72DF534();
      uint64_t v35 = sub_1A7573310();
      uint64_t v36 = v24;
      sub_1A75714D0();
      uint64_t v25 = sub_1A75732B0();
      uint64_t v27 = v26;
      (*v18)(v10, v20);
      swift_bridgeObjectRelease();
      sub_1A72DF588((uint64_t)v13);
      swift_bridgeObjectRetain();
      sub_1A72DF384(v37, v25, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 += 2;
      --v17;
    }
    while (v17);
    uint64_t v15 = v30;
    swift_bridgeObjectRelease_n();
    uint64_t v16 = v38;
    a2 = v32;
    a4 = v33;
    a1 = v31;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  *a4 = v15;
  a4[1] = v16;
  return result;
}

void sub_1A72DEA64(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_name);
  uint64_t v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

char *sub_1A72DEACC(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_1A72AC148(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[2 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 2);
    uint64_t v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      uint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *uint64_t v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72DEC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    unint64_t v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1A75738D0();
  swift_bridgeObjectRelease();
  if (v23 < v5) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    uint64_t v11 = v10 + v8;
    if (!__OFADD__(v10, v8)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v7 = *v4;
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v8;
  if (__OFADD__(v10, v8)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v7 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v7;
  uint64_t v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v10 = 1;
  }
  if (v7 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11) {
    uint64_t v14 = v11;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = MEMORY[0x1AD0CB810](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *uint64_t v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  int64_t v15 = (void *)(v13 + 32 + 8 * v6);
  type metadata accessor for REMGroceryLanguage();
  swift_arrayDestroy();
  if (v8)
  {
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1A75738D0();
      swift_bridgeObjectRelease();
      uint64_t v17 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_21:
        if (v17 < 0)
        {
LABEL_46:
          uint64_t result = sub_1A7573940();
          __break(1u);
          return result;
        }
        uint64_t v18 = (char *)(v15 + 1);
        BOOL v19 = (char *)(v13 + 32 + 8 * v5);
        if (v15 + 1 != (void *)v19 || v18 >= &v19[8 * v17]) {
          memmove(v18, v19, 8 * v17);
        }
        if (!(v7 >> 62))
        {
          uint64_t v20 = *(void *)(v13 + 16);
          uint64_t v21 = v20 + v8;
          if (!__OFADD__(v20, v8))
          {
LABEL_27:
            *(void *)(v13 + 16) = v21;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1A75738D0();
        swift_bridgeObjectRelease();
        uint64_t v21 = v25 + v8;
        if (!__OFADD__(v25, v8)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v16 = *(void *)(v13 + 16);
      uint64_t v17 = v16 - v5;
      if (!__OFSUB__(v16, v5)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  *int64_t v15 = v3;

  return sub_1A7572A30();
}

uint64_t sub_1A72DEF3C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  uint64_t v31 = a2 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v30 = (unint64_t)(63 - v5) >> 6;
  uint64_t v32 = a1 + 56;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v12)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (i << 6);
      int64_t v12 = i;
      if (!*(void *)(v4 + 16)) {
        goto LABEL_40;
      }
      goto LABEL_25;
    }
    int64_t v13 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v13 >= v30) {
      goto LABEL_41;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    int64_t v12 = i + 1;
    if (!v14)
    {
      int64_t v12 = i + 2;
      if (i + 2 >= v30) {
        goto LABEL_41;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v12);
      if (!v14)
      {
        int64_t v12 = i + 3;
        if (i + 3 >= v30) {
          goto LABEL_41;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v12);
        if (!v14) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    if (!*(void *)(v4 + 16))
    {
LABEL_40:
      uint64_t v2 = 0;
      goto LABEL_42;
    }
LABEL_25:
    uint64_t v16 = v3;
    uint64_t v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1A75740C0();
    swift_bridgeObjectRetain();
    sub_1A75726F0();
    uint64_t v20 = sub_1A7574110();
    uint64_t v21 = v4;
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v20 & ~v22;
    if (((*(void *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v24 = *(void *)(v21 + 48);
    uint64_t v25 = (void *)(v24 + 16 * v23);
    BOOL v26 = *v25 == v19 && v25[1] == v18;
    if (!v26 && (sub_1A7573DB0() & 1) == 0)
    {
      uint64_t v27 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v27;
        if (((*(void *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          break;
        }
        uint64_t v28 = (void *)(v24 + 16 * v23);
        BOOL v29 = *v28 == v19 && v28[1] == v18;
        if (v29 || (sub_1A7573DB0() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      uint64_t v2 = 0;
LABEL_42:
      sub_1A72D99A4();
      return v2;
    }
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v3 = v16;
    uint64_t v4 = v21;
  }
  int64_t v15 = i + 4;
  if (i + 4 >= v30)
  {
LABEL_41:
    uint64_t v2 = 1;
    goto LABEL_42;
  }
  unint64_t v14 = *(void *)(v31 + 8 * v15);
  if (v14)
  {
    int64_t v12 = i + 4;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v12 >= v30) {
      goto LABEL_41;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v12);
    ++v15;
    if (v14) {
      goto LABEL_24;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

void sub_1A72DF230(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != sub_1A7573400()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_6:
    id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v11);
    char v13 = sub_1A7573450();

    if ((v13 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_19;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1A72DF384(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1A75740C0();
  swift_bridgeObjectRetain();
  sub_1A75726F0();
  uint64_t v8 = sub_1A7574110();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    id v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1A7573DB0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1A7573DB0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1A74E6BAC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

unint64_t sub_1A72DF534()
{
  unint64_t result = qword_1EB701F50;
  if (!qword_1EB701F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701F50);
  }
  return result;
}

uint64_t sub_1A72DF588(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FFDE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A72DF5E8(uint64_t *a1)
{
  return sub_1A72DA86C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_1A72DF608(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1A7573410();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB703C98);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1A7573400();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1A73439A0(v7, result + 1);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1A74E5358(v26);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1A7343FF4(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1A7573180();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB703C98);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1A7573190();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        BOOL v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1A7573190();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1A74E6D48((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1A72DF8A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1A75740B0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1A74E6D64(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1A72DF9A4(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1A7571BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1A72E1094((unint64_t *)&qword_1EB701400, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  unint64_t v33 = a2;
  uint64_t v11 = sub_1A7572510();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    id v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      id v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1A72E1094((unint64_t *)&qword_1EB701410, MEMORY[0x1E4F27990]);
      char v21 = sub_1A75725C0();
      unint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1A74E6E88((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1A72DFCC8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1A7573410();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for REMObjectID_Codable();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1A7573400();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1A73439D0(v7, result + 1);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1A74E59E4(v26);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1A7343FF4(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1A7573180();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      type metadata accessor for REMObjectID_Codable();
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1A7573190();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1A7573190();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1A74E7144((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1A72DFF48(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1A75740C0();
  sub_1A75740D0();
  uint64_t v6 = sub_1A7574110();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1A74E72DC(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(void *)(v9 + 8 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v9 + 8 * v8) != a2);
  }
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1A72E0068(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1A75740C0();
  sub_1A75740D0();
  uint64_t v6 = sub_1A7574110();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1A74E742C(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(void *)(v9 + 8 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v9 + 8 * v8) != a2);
  }
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1A72E0188(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A75740C0();
  swift_bridgeObjectRetain();
  sub_1A75726F0();
  uint64_t v7 = sub_1A7574110();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v24 = a2;
    sub_1A74E757C((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v12 = v11;
  if (v10 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v19 = v18;
        if (v17 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = sub_1A7573DB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_1A72E03B4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1A7573410();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1A7573400();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1A7343BB8(v7, result + 1);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1A74E625C(v26);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1A7343FF4(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1A7573180();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1A7573190();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1A7573190();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1A74E77AC((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1A72E0654(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1A7571D30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1A72E1094(&qword_1E96F1488, MEMORY[0x1E4F27A78]);
  swift_bridgeObjectRetain();
  unint64_t v33 = a2;
  uint64_t v11 = sub_1A7572510();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    id v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    id v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      id v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1A72E1094(&qword_1E96F1490, MEMORY[0x1E4F27A78]);
      char v21 = sub_1A75725C0();
      unint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      id v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1A74E795C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1A72E0978(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

unint64_t sub_1A72E0A28(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_1A72E0AC8(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1A73300AC(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1A72E0AC8(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    uint64_t result = sub_1A73549FC(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A72E0B38(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

BOOL sub_1A72E0B8C(uint64_t a1, uint64_t a2)
{
  return sub_1A72DD978(a1, a2, *(void (**)(void))(v2 + 32));
}

unint64_t sub_1A72E0BB4()
{
  unint64_t result = qword_1E96F1480;
  if (!qword_1E96F1480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1480);
  }
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelCollection()
{
  return &type metadata for REMHashtagLabelCollection;
}

unint64_t sub_1A72E0C18(unint64_t result)
{
  unint64_t v2 = result >> 62;
  if (result >> 62 == 2)
  {
    id v3 = (id)(result & 0x3FFFFFFFFFFFFFFFLL);
    return swift_bridgeObjectRetain();
  }
  else
  {
    if (v2 == 1)
    {
      result &= 0x3FFFFFFFFFFFFFFFuLL;
    }
    else
    {
      if (v2) {
        return result;
      }
    }
    return (unint64_t)(id)result;
  }
}

void sub_1A72E0C94(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62 == 2)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    if (v2 == 1)
    {
      a1 &= 0x3FFFFFFFFFFFFFFFuLL;
    }
    else
    {
      if (v2) {
        return;
      }
    }
  }
}

uint64_t sub_1A72E0D10(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  int64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    int64_t v4 = sub_1A72AC148(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

char *sub_1A72E0E7C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  int64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *((void *)v4 + 3) >> 1)
  {
    if (!v8) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t result = sub_1A72AD708(result, v11, 1, v4);
    int64_t v4 = result;
    if (!v8) {
      goto LABEL_21;
    }
  }
  uint64_t v12 = *((void *)v4 + 2);
  size_t v13 = v12 - a2;
  if (__OFSUB__(v12, a2)) {
    goto LABEL_27;
  }
  if ((v13 & 0x8000000000000000) == 0)
  {
    uint64_t result = &v4[a1 + 32];
    BOOL v14 = &v4[a2 + 32];
    if (a1 != a2 || result >= &v14[v13]) {
      uint64_t result = (char *)memmove(result, v14, v13);
    }
    uint64_t v15 = *((void *)v4 + 2);
    BOOL v16 = __OFADD__(v15, v8);
    uint64_t v17 = v15 + v8;
    if (!v16)
    {
      *((void *)v4 + 2) = v17;
LABEL_21:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  uint64_t result = (char *)sub_1A7573940();
  __break(1u);
  return result;
}

uint64_t sub_1A72E0FD4(uint64_t a1, uint64_t a2)
{
  uint64_t Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Predicate - 8) + 16))(a2, a1, Predicate);
  return a2;
}

uint64_t sub_1A72E1038(uint64_t a1)
{
  uint64_t Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(Predicate - 8) + 8))(a1, Predicate);
  return a1;
}

uint64_t sub_1A72E1094(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A72E10DC(uint64_t *a1)
{
  return sub_1A72DF5E8(a1) & 1;
}

uint64_t REMiCloudSharedItemSpecifier.PublicTemplate.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A7571BC0();
  int64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t REMiCloudSharedItemSpecifier.PublicTemplate.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t a1)
{
  return sub_1A72E1CD8(a1, qword_1EB702740);
}

uint64_t REMiCloudSharedItemSpecifier.PublicTemplate.init(uuid:name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  unint64_t v10 = (void *)(a4 + *(int *)(result + 20));
  void *v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t REMiCloudSharedItemSpecifier.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1498);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v32 = (char *)&v30 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704920);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A75715C0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  BOOL v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A7571980();
  if (!v16) {
    goto LABEL_10;
  }
  if (v15 == 0x7370747468 && v16 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  char v17 = sub_1A7573DB0();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
LABEL_10:
    sub_1A72E1BFC();
    swift_allocError();
    *id v20 = 0;
LABEL_15:
    swift_willThrow();
    uint64_t v23 = sub_1A75719C0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(a1, v23);
  }
LABEL_6:
  sub_1A7571960();
  if (!v18)
  {
    sub_1A72E1BFC();
    swift_allocError();
    char v22 = 1;
LABEL_14:
    *char v21 = v22;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  unint64_t v19 = (void *)sub_1A75718A0();
  if (!v19[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_1A7571590();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A72CB560((uint64_t)v10, &qword_1EB704920);
LABEL_13:
    sub_1A72E1BFC();
    swift_allocError();
    char v22 = 2;
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  uint64_t v25 = v32;
  sub_1A72E1718(v19, v32);
  swift_bridgeObjectRelease();
  sub_1A72E1C50((uint64_t)v25, (uint64_t)v6);
  uint64_t v26 = type metadata accessor for REMiCloudSharedItemSpecifier(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v6, 1, v26) == 1)
  {
    sub_1A72CB560((uint64_t)v6, &qword_1E96F1498);
    sub_1A72E1BFC();
    swift_allocError();
    *uint64_t v27 = 3;
    swift_willThrow();
    uint64_t v28 = sub_1A75719C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(a1, v28);
    sub_1A72CB560((uint64_t)v25, &qword_1E96F1498);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    uint64_t v29 = sub_1A75719C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(a1, v29);
    sub_1A72CB560((uint64_t)v25, &qword_1E96F1498);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return sub_1A72E1D74((uint64_t)v6, v31, type metadata accessor for REMiCloudSharedItemSpecifier);
  }
}

uint64_t sub_1A72E1718@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A7571BC0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[2] != 4
    || (a1[4] != 47 || a1[5] != 0xE100000000000000) && (sub_1A7573DB0() & 1) == 0
    || (a1[6] != 0x7265646E696D6572 || a1[7] != 0xE900000000000073) && (sub_1A7573DB0() & 1) == 0
    || (a1[8] != 0x6574616C706D6574 || a1[9] != 0xE800000000000000) && (sub_1A7573DB0() & 1) == 0)
  {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  sub_1A7571B70();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A72CB560((uint64_t)v6, &qword_1EB704C40);
LABEL_13:
    uint64_t v11 = type metadata accessor for REMiCloudSharedItemSpecifier(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v13(v10, v6, v7);
  uint64_t v14 = sub_1A75715B0();
  if (v15
    && (v25 = v14, v26 = v15, sub_1A72DF534(), uint64_t v16 = sub_1A75732D0(), v18 = v17, swift_bridgeObjectRelease(), v18))
  {
    uint64_t v25 = v16;
    uint64_t v26 = v18;
    void v24[2] = 95;
    v24[3] = 0xE100000000000000;
    v24[0] = 32;
    v24[1] = 0xE100000000000000;
    uint64_t v19 = sub_1A75732C0();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = 0;
  }
  v13(a2, v10, v7);
  char v22 = (uint64_t *)&a2[*(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20)];
  *char v22 = v19;
  v22[1] = v21;
  uint64_t v23 = type metadata accessor for REMiCloudSharedItemSpecifier(0);
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a2, 0, 1, v23);
}

uint64_t REMiCloudSharedItemSpecifier.navigationSpecifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for REMiCloudSharedItemSpecifier(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A72E1D10(v1, (uint64_t)v5);
  sub_1A72E1D74((uint64_t)v5, a1, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
  type metadata accessor for REMNavigationSpecifier(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t _s19ReminderKitInternal28REMiCloudSharedItemSpecifierO14PublicTemplateV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (sub_1A7571BA0())
  {
    uint64_t v4 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
    uint64_t v5 = (void *)(a1 + v4);
    uint64_t v6 = *(void *)(a1 + v4 + 8);
    uint64_t v7 = (void *)(a2 + v4);
    uint64_t v8 = v7[1];
    if (v6)
    {
      if (v8)
      {
        BOOL v9 = *v5 == *v7 && v6 == v8;
        if (v9 || (sub_1A7573DB0() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v8)
    {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_1A72E1BFC()
{
  unint64_t result = qword_1E96F14A0;
  if (!qword_1E96F14A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F14A0);
  }
  return result;
}

uint64_t sub_1A72E1C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for REMiCloudSharedItemSpecifier(uint64_t a1)
{
  return sub_1A72E1CD8(a1, (uint64_t *)&unk_1EB700A50);
}

uint64_t sub_1A72E1CD8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A72E1D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMiCloudSharedItemSpecifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A72E1D74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t _s19ReminderKitInternal28REMiCloudSharedItemSpecifierO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  BOOL v9 = (char *)&v23 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F14B0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_1A72E1D10(a1, (uint64_t)v13);
  sub_1A72E1D10(a2, v14);
  sub_1A72E1D74((uint64_t)v13, (uint64_t)v9, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
  sub_1A72E1D74(v14, (uint64_t)v7, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
  if ((sub_1A7571BA0() & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v15 = *(int *)(v4 + 20);
  uint64_t v16 = &v9[v15];
  uint64_t v17 = *(void *)&v9[v15 + 8];
  uint64_t v18 = &v7[v15];
  uint64_t v19 = *((void *)v18 + 1);
  if (v17)
  {
    if (v19)
    {
      BOOL v20 = *(void *)v16 == *(void *)v18 && v17 == v19;
      if (v20 || (sub_1A7573DB0() & 1) != 0) {
        goto LABEL_9;
      }
    }
LABEL_11:
    uint64_t v21 = 0;
    goto LABEL_12;
  }
  if (v19) {
    goto LABEL_11;
  }
LABEL_9:
  uint64_t v21 = 1;
LABEL_12:
  sub_1A72E2C24((uint64_t)v7);
  sub_1A72E2C24((uint64_t)v9);
  return v21;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMiCloudSharedItemSpecifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_1A7571BC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    BOOL v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t v10 = v9[1];
    void *v8 = *v9;
    v8[1] = v10;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for REMiCloudSharedItemSpecifier(uint64_t a1)
{
  uint64_t v2 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMiCloudSharedItemSpecifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = v7[1];
  *uint64_t v6 = *v7;
  v6[1] = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMiCloudSharedItemSpecifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  *uint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for REMiCloudSharedItemSpecifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
  return a1;
}

uint64_t assignWithTake for REMiCloudSharedItemSpecifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (uint64_t *)(a2 + v5);
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  *uint64_t v6 = v9;
  v6[1] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMiCloudSharedItemSpecifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);

  return MEMORY[0x1F4186578](a1, a2, v4, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t storeEnumTagSinglePayload for REMiCloudSharedItemSpecifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);

  return MEMORY[0x1F41867C0](a1, a2, a3, v6, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t sub_1A72E23C4(uint64_t a1)
{
  uint64_t result = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(319);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A7571BC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t a1)
{
  uint64_t v2 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A72E27F8);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A7571BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A72E28E0);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A7571BC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_1A72E29A4()
{
  uint64_t result = sub_1A7571BC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for REMiCloudSharedItemSpecifier.URLParsingError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for REMiCloudSharedItemSpecifier.URLParsingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A72E2B94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMiCloudSharedItemSpecifier.URLParsingError()
{
  return &type metadata for REMiCloudSharedItemSpecifier.URLParsingError;
}

unint64_t sub_1A72E2BD0()
{
  unint64_t result = qword_1E96F14A8;
  if (!qword_1E96F14A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F14A8);
  }
  return result;
}

uint64_t sub_1A72E2C24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static REMChecksumAlgorithm.== infix(_:_:)()
{
  return 1;
}

uint64_t REMChecksumAlgorithm.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t REMChecksumAlgorithm.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t REMChecksumRepresentable.rem_checksum.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1A7572380();
  *(void *)&long long v48 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v49 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A7572300();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  int v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v40 - v12;
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  if (!v3)
  {
    unint64_t v45 = v15;
    uint64_t v46 = v14;
    uint64_t v42 = v11;
    uint64_t v43 = v13;
    uint64_t v44 = v8;
    (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    sub_1A72E34B8(&qword_1EB700FB0, MEMORY[0x1E4F25190]);
    uint64_t v16 = v49;
    sub_1A75722F0();
    unint64_t v17 = v45;
    uint64_t v18 = v16;
    switch(v45 >> 62)
    {
      case 1uLL:
        uint64_t v21 = v46;
        if (v21 >> 32 < (int)v21) {
          goto LABEL_26;
        }
        sub_1A72E3408(v46, v45);
        sub_1A72E3328((int)v21, v21 >> 32);
        uint64_t v41 = 0;
LABEL_8:
        uint64_t v20 = v21;
LABEL_9:
        sub_1A72E3460(v20, v17);
        uint64_t v24 = v48;
        uint64_t v26 = v42;
        uint64_t v25 = v43;
        sub_1A75722E0();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v6);
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v26, v25, v44);
        sub_1A72E34B8(&qword_1E96F14B8, MEMORY[0x1E4F24FB8]);
        sub_1A7572870();
        long long v27 = v50;
        uint64_t v28 = *(void *)(v50 + 16);
        if (*((void *)&v50 + 1) != v28)
        {
          if (*((uint64_t *)&v50 + 1) < v28)
          {
            uint64_t v49 = (char *)(v50 + 32);
            uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
            long long v48 = xmmword_1A75785A0;
            unint64_t v31 = *((void *)&v50 + 1);
            while ((*((void *)&v27 + 1) & 0x8000000000000000) == 0)
            {
              if (v31 >= *(void *)(v27 + 16)) {
                goto LABEL_24;
              }
              char v32 = v49[v31];
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7054F0);
              uint64_t v33 = swift_allocObject();
              *(_OWORD *)(v33 + 16) = v48;
              *(void *)(v33 + 56) = MEMORY[0x1E4FBC358];
              *(void *)(v33 + 64) = MEMORY[0x1E4FBC3B0];
              *(unsigned char *)(v33 + 32) = v32;
              uint64_t v34 = sub_1A7572640();
              uint64_t v36 = v35;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v29 = sub_1A72AC148(0, v29[2] + 1, 1, v29);
              }
              unint64_t v38 = v29[2];
              unint64_t v37 = v29[3];
              if (v38 >= v37 >> 1) {
                uint64_t v29 = sub_1A72AC148((void *)(v37 > 1), v38 + 1, 1, v29);
              }
              ++v31;
              uint64_t v29[2] = v38 + 1;
              uint64_t v39 = &v29[2 * v38];
              v39[4] = v34;
              v39[5] = v36;
              if (v28 == v31) {
                goto LABEL_11;
              }
            }
            __break(1u);
LABEL_24:
            __break(1u);
          }
          __break(1u);
LABEL_26:
          __break(1u);
        }
        uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
LABEL_11:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v44);
        *(void *)&long long v50 = v29;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
        sub_1A72E3500();
        uint64_t v2 = sub_1A7572570();
        sub_1A72E3460(v46, v45);
        swift_bridgeObjectRelease();
        break;
      case 2uLL:
        uint64_t v21 = v46;
        uint64_t v22 = *(void *)(v46 + 16);
        uint64_t v23 = *(void *)(v46 + 24);
        sub_1A72E3408(v46, v45);
        swift_retain();
        swift_retain();
        sub_1A72E3328(v22, v23);
        uint64_t v41 = 0;
        swift_release();
        swift_release();
        goto LABEL_8;
      case 3uLL:
        uint64_t v41 = 0;
        *(void *)((char *)&v50 + 6) = 0;
        *(void *)&long long v50 = 0;
        sub_1A75722D0();
        uint64_t v20 = v46;
        goto LABEL_9;
      default:
        uint64_t v41 = 0;
        uint64_t v19 = v46;
        *(void *)&long long v50 = v46;
        DWORD2(v50) = v45;
        WORD6(v50) = WORD2(v45);
        sub_1A75722D0();
        uint64_t v20 = v19;
        goto LABEL_9;
    }
  }
  return v2;
}

uint64_t sub_1A72E3328(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A75715E0();
  if (!result || (uint64_t result = sub_1A7571600(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1A75715F0();
      sub_1A7572380();
      sub_1A72E34B8(&qword_1EB700FB0, MEMORY[0x1E4F25190]);
      return sub_1A75722D0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A72E3408(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1A72E3460(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1A72E34B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A72E3500()
{
  unint64_t result = qword_1EB703C70;
  if (!qword_1EB703C70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB704AC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703C70);
  }
  return result;
}

unint64_t sub_1A72E3560()
{
  unint64_t result = qword_1E96F14C0;
  if (!qword_1E96F14C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F14C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for REMChecksumAlgorithm(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A72E3650);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMChecksumAlgorithm()
{
  return &type metadata for REMChecksumAlgorithm;
}

uint64_t dispatch thunk of REMChecksumRepresentable.rem_baseForChecksum()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of REMChecksumRepresentable.rem_checksumAlgorithm.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A72E36C4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A72E36EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1A72E3714()
{
  qword_1E96F14D0 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_none");

  return swift_unknownObjectRetain();
}

uint64_t sub_1A72E3750()
{
  qword_1EB703F18 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");

  return swift_unknownObjectRetain();
}

unint64_t REM_os_activity.init(_:dso:options:)@<X0>(void *dso@<X3>, unint64_t result@<X0>, char a3@<W2>, os_activity_flag_t *a4@<X4>, unint64_t a5@<X8>)
{
  uint64_t v6 = (char *)result;
  uint64_t v7 = (void *)a5;
  os_activity_flag_t v8 = *a4;
  if ((a3 & 1) == 0)
  {
    if (result)
    {
      if (dso)
      {
        if (qword_1EB7041D8 == -1)
        {
LABEL_5:
          uint64_t v9 = qword_1EB703F18;
LABEL_16:
          unint64_t result = (unint64_t)_os_activity_create(dso, v6, v9, v8);
LABEL_18:
          *uint64_t v7 = result;
          return result;
        }
LABEL_29:
        unint64_t v16 = result;
        swift_once();
        uint64_t v6 = (char *)v16;
        goto LABEL_5;
      }
LABEL_17:
      unint64_t result = 0;
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_20;
  }
  a5 = HIDWORD(result);
  if (HIDWORD(result))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (result >> 11 != 27)
  {
    LODWORD(a5) = WORD1(result);
    if (WORD1(result) <= 0x10u)
    {
      if ((result & 0xFFFFFF80) == 0)
      {
        if (result > 0xFF)
        {
          __break(1u);
          goto LABEL_29;
        }
        unsigned int v10 = (result + 1);
        goto LABEL_12;
      }
LABEL_22:
      int v11 = (result & 0x3F) << 8;
      unsigned int v12 = (v11 | (result >> 6)) + 33217;
      unsigned int v13 = (v11 | (result >> 6) & 0x3F) << 8;
      unsigned int v14 = (((v13 | (result >> 12) & 0x3F) << 8) | (result >> 18)) - 2122219023;
      unsigned int v15 = (v13 | (result >> 12)) + 8487393;
      if (a5) {
        unsigned int v10 = v14;
      }
      else {
        unsigned int v10 = v15;
      }
      if (result < 0x800) {
        unsigned int v10 = v12;
      }
LABEL_12:
      *(void *)description = (v10 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v10) & 0x38)) & 0x38));
      if (dso)
      {
        if (qword_1EB7041D8 != -1) {
          swift_once();
        }
        uint64_t v9 = qword_1EB703F18;
        uint64_t v6 = description;
        goto LABEL_16;
      }
      goto LABEL_17;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

unint64_t REM_os_activity.init(_:dso:parent:options:)@<X0>(os_activity_t dso@<X3>, unint64_t result@<X0>, char a3@<W2>, NSObject **a4@<X4>, os_activity_flag_t *a5@<X5>, os_activity_t *a6@<X8>)
{
  unint64_t v8 = result;
  uint64_t v9 = a6;
  unsigned int v10 = *a4;
  os_activity_flag_t v11 = *a5;
  if (!*a4)
  {
    if (qword_1EB7041D8 != -1) {
      goto LABEL_28;
    }
    goto LABEL_7;
  }
  for (; (a3 & 1) != 0; unint64_t result = swift_unknownObjectRetain())
  {
    a6 = (os_activity_t *)HIDWORD(v8);
    if (HIDWORD(v8)) {
      goto LABEL_19;
    }
    if (v8 >> 11 == 27)
    {
      __break(1u);
      return result;
    }
    LODWORD(a6) = WORD1(v8);
    if (WORD1(v8) > 0x10u) {
      goto LABEL_20;
    }
    if ((v8 & 0xFFFFFF80) != 0) {
      goto LABEL_21;
    }
    if (v8 <= 0xFF)
    {
      unsigned int v14 = (v8 + 1);
      goto LABEL_14;
    }
    __break(1u);
LABEL_28:
    swift_once();
LABEL_7:
    unsigned int v10 = qword_1EB703F18;
  }
  if (!v8)
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    int v15 = (v8 & 0x3F) << 8;
    unsigned int v16 = (v15 | (v8 >> 6)) + 33217;
    unsigned int v17 = (v15 | (v8 >> 6) & 0x3F) << 8;
    unsigned int v18 = (((v17 | (v8 >> 12) & 0x3F) << 8) | (v8 >> 18)) - 2122219023;
    unsigned int v19 = (v17 | (v8 >> 12)) + 8487393;
    if (a6) {
      unsigned int v14 = v18;
    }
    else {
      unsigned int v14 = v19;
    }
    if (v8 < 0x800) {
      unsigned int v14 = v16;
    }
LABEL_14:
    *(void *)description = (v14 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v14) & 0x38)) & 0x38));
    if (!dso) {
      goto LABEL_17;
    }
    unsigned int v13 = description;
    os_activity_t v12 = dso;
    goto LABEL_16;
  }
  if (dso)
  {
    os_activity_t v12 = dso;
    unsigned int v13 = (char *)v8;
LABEL_16:
    dso = _os_activity_create(v12, v13, v10, v11);
  }
LABEL_17:
  unint64_t result = swift_unknownObjectRelease();
  *uint64_t v9 = dso;
  return result;
}

uint64_t static REM_os_activity.none.getter@<X0>(void *a1@<X8>)
{
  return sub_1A72E3B4C(qword_1E96F06E0, &qword_1E96F14D0, a1);
}

uint64_t static REM_os_activity.current.getter@<X0>(void *a1@<X8>)
{
  return sub_1A72E3B4C(&qword_1EB7041D8, &qword_1EB703F18, a1);
}

uint64_t sub_1A72E3B4C@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  *a3 = *a2;

  return swift_unknownObjectRetain();
}

void static REM_os_activity.Options.ifNonePresent.getter(_DWORD *a1@<X8>)
{
  *a1 = 2;
}

void static REM_os_activity.initiate(_:dso:options:execute:)(const char *a1, int a2, char a3, uint64_t isEscapingClosureAtFileLocation, os_activity_flag_t *a5, void *aBlock)
{
  os_activity_flag_t v9 = *a5;
  unsigned int v10 = _Block_copy(aBlock);
  os_activity_t v12 = v10;
  if (a3) {
    goto LABEL_6;
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (isEscapingClosureAtFileLocation)
  {
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_1A72E4794;
    *(void *)(v14 + 24) = v13;
    uint64_t v30 = sub_1A72E478C;
    uint64_t v31 = v14;
    uint64_t aBlocka = MEMORY[0x1E4F143A8];
    uint64_t v27 = 1107296256;
    uint64_t v28 = sub_1A72E36EC;
    uint64_t v29 = &block_descriptor_14;
    int v15 = _Block_copy(&aBlocka);
    _Block_copy(v12);
    swift_retain();
    swift_release();
    _os_activity_initiate((void *)isEscapingClosureAtFileLocation, a1, v9, v15);
    _Block_release(v15);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    _Block_release(v12);
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
LABEL_6:
    unint64_t v11 = (unint64_t)a1 >> 32;
    if (!((unint64_t)a1 >> 32))
    {
      if (a1 >> 11 == 27)
      {
LABEL_30:
        __break(1u);
        return;
      }
      LODWORD(v11) = a1 >> 16;
      if (a1 >> 16 <= 0x10)
      {
        if ((a1 & 0xFFFFFF80) == 0)
        {
          if (a1 > 0xFF)
          {
            __break(1u);
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          unsigned int v16 = ((_BYTE)a1 + 1);
LABEL_12:
          *(void *)description = (v16 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v16) & 0x38)) & 0x38));
          if (!isEscapingClosureAtFileLocation) {
            goto LABEL_14;
          }
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = v12;
          uint64_t v18 = swift_allocObject();
          *(void *)(v18 + 16) = sub_1A72E3FAC;
          *(void *)(v18 + 24) = v17;
          uint64_t v30 = sub_1A72C91DC;
          uint64_t v31 = v18;
          uint64_t aBlocka = MEMORY[0x1E4F143A8];
          uint64_t v27 = 1107296256;
          uint64_t v28 = sub_1A72E36EC;
          uint64_t v29 = &block_descriptor_0;
          unsigned int v19 = _Block_copy(&aBlocka);
          _Block_copy(v12);
          swift_retain();
          swift_release();
          _os_activity_initiate((void *)isEscapingClosureAtFileLocation, description, v9, v19);
          _Block_release(v19);
          char v20 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_release();
          if ((v20 & 1) == 0)
          {
LABEL_14:
            _Block_release(v12);
            return;
          }
          goto LABEL_29;
        }
LABEL_22:
        int v21 = (a1 & 0x3F) << 8;
        unsigned int v22 = (v21 | (a1 >> 6)) + 33217;
        unsigned int v23 = (v21 | (a1 >> 6) & 0x3F) << 8;
        unsigned int v24 = (((v23 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
        unsigned int v25 = (v23 | (a1 >> 12)) + 8487393;
        if (v11) {
          unsigned int v16 = v24;
        }
        else {
          unsigned int v16 = v25;
        }
        if (a1 < 0x800) {
          unsigned int v16 = v22;
        }
        goto LABEL_12;
      }
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }

  _Block_release(v10);
}

uint64_t sub_1A72E3F74()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1A72E3FAC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1A72E3FBC()
{
  return swift_deallocObject();
}

uint64_t sub_1A72E3FCC()
{
  return swift_deallocObject();
}

void REM_os_activity.apply(execute:)(const void *a1)
{
  uint64_t v2 = _Block_copy(a1);
  int v3 = v2;
  unsigned int v4 = *v1;
  if (*v1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_1A72E4794;
    *(void *)(v6 + 24) = v5;
    v9[4] = sub_1A72E478C;
    v9[5] = v6;
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 1107296256;
    void v9[2] = sub_1A72E36EC;
    uint64_t v9[3] = &block_descriptor_25;
    uint64_t v7 = _Block_copy(v9);
    swift_retain();
    swift_release();
    os_activity_apply(v4, v7);
    _Block_release(v7);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  else
  {
    _Block_release(v2);
  }
}

uint64_t sub_1A72E415C()
{
  return swift_deallocObject();
}

unint64_t static REM_os_activity.labelUserAction(_:dso:)@<X0>(unint64_t result@<X0>, char a2@<W2>, uint64_t a3@<X3>, unint64_t a4@<X8>)
{
  if (a2)
  {
    a4 = HIDWORD(result);
    if (!HIDWORD(result))
    {
      if (result >> 11 != 27)
      {
        LODWORD(a4) = WORD1(result);
        if (WORD1(result) > 0x10u)
        {
LABEL_18:
          __break(1u);
LABEL_19:
          int v7 = (result & 0x3F) << 8;
          unsigned int v8 = (v7 | (result >> 6)) + 33217;
          unsigned int v9 = (v7 | (result >> 6) & 0x3F) << 8;
          unsigned int v10 = (((v9 | (result >> 12) & 0x3F) << 8) | (result >> 18)) - 2122219023;
          unsigned int v11 = (v9 | (result >> 12)) + 8487393;
          if (a4) {
            unsigned int v6 = v10;
          }
          else {
            unsigned int v6 = v11;
          }
          if (result < 0x800) {
            unsigned int v6 = v8;
          }
          goto LABEL_13;
        }
        if ((result & 0xFFFFFF80) != 0) {
          goto LABEL_19;
        }
        if (result <= 0xFF)
        {
          unsigned int v6 = (result + 1);
LABEL_13:
          v12[1] = v4;
          v12[2] = v5;
          v12[0] = (v6 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v6) & 0x38)) & 0x38));
          if (a3) {
            return MEMORY[0x1AD0CC7C0](a3, v12);
          }
          return result;
        }
        __break(1u);
      }
      __break(1u);
      goto LABEL_27;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (a3)
  {
LABEL_27:
    JUMPOUT(0x1AD0CC7C0);
  }
  return result;
}

uint64_t REM_os_activity.Options.rawValue.getter()
{
  return *v0;
}

uint64_t REM_os_activity.Options.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static REM_os_activity.Options.default.getter(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void static REM_os_activity.Options.detached.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

_DWORD *sub_1A72E42C4@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1A72E42D0(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_1A72E42D8@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_1A72E42EC@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_1A72E4300@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1A72E4314(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1A72E4344@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(_DWORD *)a2 = v3;
  *(unsigned char *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_1A72E4370@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *v2 |= *result;
  int v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_1A72E4394(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *sub_1A72E43A8(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

_DWORD *sub_1A72E43BC(_DWORD *result)
{
  *v1 ^= *result;
  return result;
}

_DWORD *sub_1A72E43D0@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A72E43E4(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A72E43F8(_DWORD *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1A72E440C(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A72E4420()
{
  return *v0 == 0;
}

_DWORD *sub_1A72E4430(_DWORD *result)
{
  *v1 &= ~*result;
  return result;
}

_DWORD *sub_1A72E4444@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_1A72E4454(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_1A72E4460(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void __swiftcall REM_os_activity.Scope.init()(ReminderKitInternal::REM_os_activity::Scope *__return_ptr retstr)
{
  retstr->state.opaque[0] = 0;
  retstr->state.opaque[1] = 0;
}

void REM_os_activity.Scope.enter(_:)(NSObject **a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    os_activity_scope_enter(v2, v1);
  }
}

Swift::Void __swiftcall REM_os_activity.Scope.leave()()
{
  os_activity_scope_leave(v0);
}

unint64_t sub_1A72E44A0()
{
  unint64_t result = qword_1E96F14E0;
  if (!qword_1E96F14E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F14E0);
  }
  return result;
}

unint64_t sub_1A72E44F8()
{
  unint64_t result = qword_1E96F14E8;
  if (!qword_1E96F14E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F14E8);
  }
  return result;
}

unint64_t sub_1A72E4550()
{
  unint64_t result = qword_1EB703010;
  if (!qword_1EB703010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703010);
  }
  return result;
}

unint64_t sub_1A72E45A8()
{
  unint64_t result = qword_1EB703038;
  if (!qword_1EB703038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703038);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for REM_os_activity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for REM_os_activity()
{
  return swift_unknownObjectRelease();
}

void *assignWithCopy for REM_os_activity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *assignWithTake for REM_os_activity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REM_os_activity(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REM_os_activity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REM_os_activity()
{
  return &type metadata for REM_os_activity;
}

ValueMetadata *type metadata accessor for REM_os_activity.Options()
{
  return &type metadata for REM_os_activity.Options;
}

ValueMetadata *type metadata accessor for REM_os_activity.Scope()
{
  return &type metadata for REM_os_activity.Scope;
}

uint64_t sub_1A72E47AC()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F14F0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F14F0);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t throwingCast<A>(_:as:failureMessage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, char *, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v21 = a4;
  uint64_t v19 = a3;
  uint64_t v10 = sub_1A7573210();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v18 - v12;
  sub_1A72BEE98(a1, (uint64_t)v20);
  char v14 = swift_dynamicCast();
  int v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 56);
  if (v14)
  {
    uint64_t v16 = *(void *)(a5 - 8);
    v15(v13, 0, 1, a5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a6, v13, a5);
  }
  else
  {
    v15(v13, 1, 1, a5);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1A72BEE98(a1, (uint64_t)v20);
    sub_1A72E4A64((uint64_t)v20, a2, v19, v21);
    sub_1A72CB560((uint64_t)v20, &qword_1EB705938);
    return swift_willThrow();
  }
}

{
  long long v13;
  uint64_t v14;
  _OWORD v15[2];

  sub_1A72BF1E8(a1, (uint64_t)&v13, &qword_1EB705938);
  if (v14)
  {
    sub_1A72BEE44(&v13, v15);
    throwingCast<A>(_:as:failureMessage:)((uint64_t)v15, a2, 0, 0, a5, a6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    sub_1A72CB560((uint64_t)&v13, &qword_1EB705938);
    sub_1A72E4A64(a1, a2, a3, a4);
    return swift_willThrow();
  }
}

id sub_1A72E4A64(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, char *, uint64_t))
{
  v91 = a4;
  uint64_t v87 = a3;
  uint64_t v6 = sub_1A7574140();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v83 = (void (*)(char *, char *, uint64_t))((char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v85 = (char *)&v79 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  id v86 = (char *)&v79 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  unint64_t v88 = (char *)&v79 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v90 = (char *)&v79 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1508);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v82 = (uint64_t)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  unsigned int v22 = (char *)&v79 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  unsigned int v25 = (char *)&v79 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  uint64_t v84 = (uint64_t)&v79 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v79 - v29;
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  uint64_t v33 = (char *)&v79 - v32;
  MEMORY[0x1F4188790](v31);
  uint64_t v35 = (char *)&v79 - v34;
  sub_1A72BF1E8(a1, (uint64_t)&v94, &qword_1EB705938);
  unint64_t v89 = v35;
  if (MetatypeMetadata)
  {
    sub_1A72BEE44(&v94, v93);
    sub_1A72BEE98((uint64_t)v93, (uint64_t)v92);
    sub_1A7574120();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v35, 0, 1, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v35, 1, 1, v6);
  }
  uint64_t v36 = v7;
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  *(void *)&long long v94 = a2;
  unint64_t v37 = v90;
  sub_1A7574120();
  unint64_t v38 = v88;
  if (v91)
  {
    if (qword_1E96F06F0 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1A7571E90();
    __swift_project_value_buffer(v39, (uint64_t)qword_1E96F14F0);
    uint64_t v40 = (uint64_t)v89;
    sub_1A72BF1E8((uint64_t)v89, (uint64_t)v33, &qword_1E96F1508);
    uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v83(v38, v37, v6);
    swift_bridgeObjectRetain_n();
    uint64_t v41 = sub_1A7571E80();
    LODWORD(v82) = sub_1A7572FE0();
    if (os_log_type_enabled(v41, (os_log_type_t)v82))
    {
      os_log_t v81 = v41;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(void *)&long long v94 = v43;
      *(_DWORD *)uint64_t v42 = 136315650;
      sub_1A72BF1E8((uint64_t)v33, (uint64_t)v30, &qword_1E96F1508);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v30, 1, v6) == 1)
      {
        unint64_t v44 = 0xE300000000000000;
        uint64_t v45 = 7104878;
      }
      else
      {
        unint64_t v56 = v86;
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v86, v30, v6);
        v83(v85, v56, v6);
        uint64_t v45 = sub_1A7572670();
        unint64_t v44 = v57;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v56, v6);
      }
      *(void *)&v93[0] = sub_1A72D1730(v45, v44, (uint64_t *)&v94);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      sub_1A72CB560((uint64_t)v33, &qword_1E96F1508);
      *(_WORD *)(v42 + 12) = 2080;
      unint64_t v58 = v88;
      uint64_t v59 = sub_1A7574130();
      *(void *)&v93[0] = sub_1A72D1730(v59, v60, (uint64_t *)&v94);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      uint64_t v54 = *(void (**)(char *, uint64_t))(v7 + 8);
      v54(v58, v6);
      *(_WORD *)(v42 + 22) = 2080;
      unint64_t v61 = (unint64_t)v91;
      swift_bridgeObjectRetain();
      *(void *)&v93[0] = sub_1A72D1730(v87, v61, (uint64_t *)&v94);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      os_log_t v62 = v81;
      _os_log_impl(&dword_1A72A1000, v81, (os_log_type_t)v82, "Failed cast {given: %s, expect: %s, message: \"%s}\"", (uint8_t *)v42, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v43, -1, -1);
      MEMORY[0x1AD0CD330](v42, -1, -1);

      uint64_t v40 = (uint64_t)v89;
      unint64_t v37 = v90;
    }
    else
    {
      sub_1A72CB560((uint64_t)v33, &qword_1E96F1508);
      uint64_t v54 = *(void (**)(char *, uint64_t))(v7 + 8);
      v54(v38, v6);

      swift_bridgeObjectRelease_n();
    }
    *(void *)&long long v94 = 0;
    *((void *)&v94 + 1) = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    *(void *)&long long v94 = 0xD000000000000014;
    *((void *)&v94 + 1) = 0x80000001A759F360;
    uint64_t v63 = v84;
    sub_1A72BF1E8(v40, v84, &qword_1E96F1508);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v63, 1, v6) != 1)
    {
      uint64_t v64 = v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v86, v63, v6);
      v83(v85, v64, v6);
      sub_1A7572670();
      v54(v64, v6);
    }
    uint64_t v65 = self;
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7574130();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7572740();
  }
  else
  {
    if (qword_1E96F06F0 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_1A7571E90();
    __swift_project_value_buffer(v46, (uint64_t)qword_1E96F14F0);
    sub_1A72BF1E8((uint64_t)v89, (uint64_t)v25, &qword_1E96F1508);
    uint64_t v47 = (char *)v83;
    v91 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v91((char *)v83, v37, v6);
    long long v48 = sub_1A7571E80();
    os_log_type_t v49 = sub_1A7572FE0();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      unint64_t v88 = (char *)swift_slowAlloc();
      *(void *)&long long v94 = v88;
      *(_DWORD *)uint64_t v50 = 136315394;
      sub_1A72BF1E8((uint64_t)v25, (uint64_t)v22, &qword_1E96F1508);
      int v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v22, 1, v6);
      uint64_t v80 = v7;
      if (v51 == 1)
      {
        unint64_t v52 = 0xE300000000000000;
        uint64_t v53 = 7104878;
      }
      else
      {
        uint64_t v66 = v86;
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v86, v22, v6);
        v91(v85, v66, v6);
        uint64_t v53 = sub_1A7572670();
        unint64_t v52 = v67;
        uint64_t v68 = v66;
        uint64_t v47 = (char *)v83;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v68, v6);
      }
      *(void *)&v93[0] = sub_1A72D1730(v53, v52, (uint64_t *)&v94);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      sub_1A72CB560((uint64_t)v25, &qword_1E96F1508);
      *(_WORD *)(v50 + 12) = 2080;
      uint64_t v69 = sub_1A7574130();
      *(void *)&v93[0] = sub_1A72D1730(v69, v70, (uint64_t *)&v94);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      uint64_t v36 = v80;
      uint64_t v71 = v47;
      uint64_t v54 = *(void (**)(char *, uint64_t))(v80 + 8);
      v54(v71, v6);
      _os_log_impl(&dword_1A72A1000, v48, v49, "Failed cast {given: %s, expect: %s}", (uint8_t *)v50, 0x16u);
      uint64_t v72 = v88;
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v72, -1, -1);
      MEMORY[0x1AD0CD330](v50, -1, -1);
    }
    else
    {
      sub_1A72CB560((uint64_t)v25, &qword_1E96F1508);
      uint64_t v55 = v47;
      uint64_t v54 = *(void (**)(char *, uint64_t))(v7 + 8);
      v54(v55, v6);
    }
    *(void *)&long long v94 = 0;
    *((void *)&v94 + 1) = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    *(void *)&long long v94 = 0xD000000000000014;
    *((void *)&v94 + 1) = 0x80000001A759F360;
    uint64_t v40 = (uint64_t)v89;
    uint64_t v73 = v82;
    sub_1A72BF1E8((uint64_t)v89, v82, &qword_1E96F1508);
    int v74 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v73, 1, v6);
    unint64_t v37 = v90;
    if (v74 != 1)
    {
      uint64_t v75 = v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v86, v73, v6);
      v91(v85, v75, v6);
      sub_1A7572670();
      v54(v75, v6);
    }
    uint64_t v65 = self;
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7574130();
    sub_1A7572740();
    swift_bridgeObjectRelease();
  }
  sub_1A7572740();
  uint64_t v76 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v77 = objc_msgSend(v65, sel_internalErrorWithDebugDescription_, v76);

  v54(v37, v6);
  sub_1A72CB560(v40, &qword_1E96F1508);
  return v77;
}

uint64_t sub_1A72E5824()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1EB700B90);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB700B90);
  if (qword_1EB705BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718FA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id ACAccountStore.MigrationSet.parent.getter()
{
  return *v0;
}

id ACAccountStore.MigrationSet.calDAV.getter()
{
  return *(id *)(v0 + 8);
}

id ACAccountStore.MigrationSet.cloudKit.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t ACAccountStore.MigrationSet.eligibleForAutoCloudKitMigration.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

Swift::Bool __swiftcall ACAccountStore.MigrationSet.contains(accountID:)(REMObjectID accountID)
{
  Class isa = accountID.super.isa;
  uint64_t v3 = *(void **)v1;
  int v4 = *(void **)(v1 + 8);
  int v5 = *(void **)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A7579500;
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = v5;
  unint64_t v14 = inited;
  sub_1A7572A30();
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  uint64_t v10 = sub_1A72E6B4C(v14);
  swift_bridgeObjectRelease();
  uint64_t v11 = isa;
  unsigned __int8 v12 = sub_1A72E6CA0(v10, v11);
  swift_bridgeObjectRelease();

  return v12 & 1;
}

uint64_t sub_1A72E59D0(uint64_t a1)
{
  uint64_t result = sub_1A7572CA0();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1A72DF384(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void ACAccountStore.rem_migrationSets()()
{
  unint64_t v1 = MEMORY[0x1E4FBC860];
  v147 = (void *)MEMORY[0x1E4FBC860];
  id v130 = objc_msgSend(v0, sel_accountTypeWithAccountTypeIdentifier_, *MEMORY[0x1E4F17770]);
  id v2 = objc_msgSend(v0, sel_accountsWithAccountType_);
  if (v2)
  {
    int64_t v3 = v2;
    uint64_t v4 = sub_1A7572A10();

    uint64_t v5 = sub_1A72E6998(v4);
    swift_bridgeObjectRelease();
    if (v5) {
      unint64_t v1 = v5;
    }
  }
  if (qword_1EB704298 != -1) {
LABEL_86:
  }
    swift_once();
  uint64_t v6 = sub_1A7571E90();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB700B90);
  swift_bridgeObjectRetain_n();
  unint64_t v7 = sub_1A7571E80();
  os_log_type_t v8 = sub_1A7572FB0();
  unint64_t v9 = &unk_1A7578000;
  unint64_t v10 = v1 >> 62;
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    v146[0] = v12;
    v140 = v11;
    *(_DWORD *)uint64_t v11 = 136315138;
    if (v10)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1A75738D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v14 = MEMORY[0x1E4FBC860];
    log = v7;
    os_log_type_t v138 = v8;
    uint64_t v136 = v12;
    if (v13)
    {
      uint64_t v144 = MEMORY[0x1E4FBC860];
      sub_1A72D2D00(0, v13 & ~(v13 >> 63), 0);
      if (v13 < 0)
      {
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
        return;
      }
      unint64_t v134 = v1 >> 62;
      unint64_t v15 = v1;
      uint64_t v16 = 0;
      uint64_t v14 = v144;
      unint64_t v17 = v15;
      unint64_t v18 = v15 & 0xC000000000000001;
      do
      {
        if (v18) {
          id v19 = (id)MEMORY[0x1AD0CB800](v16, v17);
        }
        else {
          id v19 = *(id *)(v17 + 8 * v16 + 32);
        }
        uint64_t v20 = v19;
        id v21 = objc_msgSend(v19, sel_description);
        uint64_t v22 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v24 = v23;

        unint64_t v26 = *(void *)(v144 + 16);
        unint64_t v25 = *(void *)(v144 + 24);
        if (v26 >= v25 >> 1) {
          sub_1A72D2D00(v25 > 1, v26 + 1, 1);
        }
        ++v16;
        *(void *)(v144 + 16) = v26 + 1;
        uint64_t v27 = v144 + 16 * v26;
        *(void *)(v27 + 32) = v22;
        *(void *)(v27 + 40) = v24;
      }
      while (v13 != v16);
      unint64_t v9 = (void *)&unk_1A7578000;
      unint64_t v10 = v134;
    }
    else
    {
      unint64_t v17 = v1;
    }
    uint64_t v28 = MEMORY[0x1AD0CAC20](v14, MEMORY[0x1E4FBB1A0]);
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    sub_1A72D1730(v28, v30, v146);
    sub_1A7573250();
    swift_bridgeObjectRelease_n();
    unint64_t v1 = v17;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, log, v138, "rem_migrationSets getting CalDAV accounts {calDavAccounts: %s}", v140, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v136, -1, -1);
    MEMORY[0x1AD0CD330](v140, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1A75738D0();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v31 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v31)
    {
LABEL_23:
      Class v32 = 0;
      unint64_t v33 = v1 & 0xC000000000000001;
      os_log_t loga = (os_log_t)(v1 & 0xFFFFFFFFFFFFFF8);
      unint64_t v141 = v1 + 32;
      v133 = (void *)*MEMORY[0x1E4F4BF28];
      uint64_t v34 = &selRef_frequencyComponents;
      uint64_t v129 = *MEMORY[0x1E4F17788];
      int v131 = v9[431];
      unint64_t v132 = v1;
      unint64_t v135 = v1 & 0xC000000000000001;
      uint64_t v137 = v31;
      while (1)
      {
        if (v33)
        {
          id v35 = (id)MEMORY[0x1AD0CB800](v32, v1);
        }
        else
        {
          if (v32 >= loga[2].isa) {
            goto LABEL_85;
          }
          id v35 = *(id *)(v141 + 8 * (void)v32);
        }
        uint64_t v36 = v35;
        BOOL v37 = __OFADD__(v32, 1);
        Class v32 = (Class)((char *)v32 + 1);
        if (v37)
        {
          __break(1u);
LABEL_85:
          __break(1u);
          goto LABEL_86;
        }
        id v38 = [v35 v34[73]];
        if (!v38) {
          goto LABEL_25;
        }
        uint64_t v39 = v38;
        if ((objc_msgSend(v38, sel_rem_isEligibleForCloudKitReminders) & 1) == 0) {
          break;
        }
        ACAccount.rem_childCalDAVAccountEnabledForReminders.getter();
        uint64_t v41 = v40;
        id v42 = objc_msgSend(v40, sel_identifier);

        id v43 = objc_msgSend(v36, sel_identifier);
        unint64_t v44 = v43;
        if (v42)
        {
          if (!v43)
          {

            goto LABEL_26;
          }
          sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1510);
          id v45 = v42;
          unint64_t v33 = v135;
          uint64_t v31 = v137;
          char v46 = sub_1A7573190();

          uint64_t v34 = &selRef_frequencyComponents;
          if ((v46 & 1) == 0)
          {

            goto LABEL_26;
          }
        }
        else if (v43)
        {

          goto LABEL_26;
        }
        id v47 = objc_msgSend(v39, sel_aa_accountClass);
        if (v47)
        {
          long long v48 = v47;
          uint64_t v49 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          uint64_t v51 = v50;
          if (v49 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v51 == v52)
          {
            id v53 = v133;

            swift_bridgeObjectRelease_n();
LABEL_46:
            id v56 = v39;
            unint64_t v57 = sub_1A7571E80();
            os_log_type_t v58 = sub_1A7572FB0();
            if (os_log_type_enabled(v57, v58))
            {
              uint64_t v59 = swift_slowAlloc();
              uint64_t v60 = swift_slowAlloc();
              v146[0] = v60;
              *(_DWORD *)uint64_t v59 = v131;
              id v61 = objc_msgSend(v56, sel_description);
              uint64_t v62 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
              unint64_t v64 = v63;

              *(void *)(v59 + 4) = sub_1A72D1730(v62, v64, v146);
              swift_bridgeObjectRelease();
              swift_arrayDestroy();
              uint64_t v65 = v60;
              unint64_t v1 = v132;
              MEMORY[0x1AD0CD330](v65, -1, -1);
              MEMORY[0x1AD0CD330](v59, -1, -1);
            }
            else
            {
            }
LABEL_79:
            unint64_t v33 = v135;
            uint64_t v31 = v137;
            uint64_t v34 = &selRef_frequencyComponents;
            goto LABEL_26;
          }
          char v54 = sub_1A7573DB0();
          id v55 = v133;

          unint64_t v1 = v132;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v54) {
            goto LABEL_46;
          }
        }
        id v66 = v39;
        unint64_t v67 = sub_1A7571E80();
        os_log_type_t v68 = sub_1A7572FB0();
        if (os_log_type_enabled(v67, v68))
        {
          uint64_t v69 = swift_slowAlloc();
          uint64_t v70 = swift_slowAlloc();
          v146[0] = v70;
          *(_DWORD *)uint64_t v69 = v131;
          id v71 = objc_msgSend(v66, sel_description);
          uint64_t v72 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          unint64_t v74 = v73;

          uint64_t v75 = v72;
          unint64_t v1 = v132;
          *(void *)(v69 + 4) = sub_1A72D1730(v75, v74, v146);

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A72A1000, v67, v68, "rem_migrationSets exploring AppleAccount {displayAccount: %s}", (uint8_t *)v69, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AD0CD330](v70, -1, -1);
          MEMORY[0x1AD0CD330](v69, -1, -1);
        }
        else
        {
        }
        id v76 = objc_msgSend(v66, sel_childAccountsWithAccountTypeIdentifier_, v129);
        id v77 = v66;
        unint64_t v33 = v135;
        uint64_t v31 = v137;
        uint64_t v34 = &selRef_frequencyComponents;
        if (v76)
        {
          unint64_t v78 = v76;
          v128 = v77;
          sub_1A72BEFEC(0, (unint64_t *)&qword_1EB703C98);
          unint64_t v79 = sub_1A7572A10();

          swift_bridgeObjectRetain_n();
          uint64_t v80 = sub_1A7571E80();
          os_log_type_t v81 = sub_1A7572FB0();
          unint64_t v82 = v79 >> 62;
          if (os_log_type_enabled(v80, v81))
          {
            uint64_t v83 = swift_slowAlloc();
            uint64_t v124 = swift_slowAlloc();
            v146[0] = v124;
            *(_DWORD *)uint64_t v83 = v131;
            unint64_t v126 = v79 >> 62;
            v127 = v80;
            if (v82)
            {
              swift_bridgeObjectRetain();
              uint64_t v84 = sub_1A75738D0();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v84 = *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            uint64_t v85 = MEMORY[0x1E4FBC860];
            os_log_type_t v125 = v81;
            if (v84)
            {
              uint64_t v123 = v83;
              uint64_t v145 = MEMORY[0x1E4FBC860];
              sub_1A72D2D00(0, v84 & ~(v84 >> 63), 0);
              if (v84 < 0) {
                goto LABEL_94;
              }
              uint64_t v86 = 0;
              uint64_t v85 = v145;
              unint64_t v139 = v79 & 0xC000000000000001;
              unint64_t v87 = v79;
              uint64_t v88 = v84;
              do
              {
                if (v139) {
                  id v89 = (id)MEMORY[0x1AD0CB800](v86, v79);
                }
                else {
                  id v89 = *(id *)(v79 + 8 * v86 + 32);
                }
                uint64_t v90 = v89;
                id v91 = objc_msgSend(v89, sel_description);
                uint64_t v92 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
                uint64_t v94 = v93;

                unint64_t v96 = *(void *)(v145 + 16);
                unint64_t v95 = *(void *)(v145 + 24);
                if (v96 >= v95 >> 1) {
                  sub_1A72D2D00(v95 > 1, v96 + 1, 1);
                }
                ++v86;
                *(void *)(v145 + 16) = v96 + 1;
                uint64_t v97 = v145 + 16 * v96;
                *(void *)(v97 + 32) = v92;
                *(void *)(v97 + 40) = v94;
                unint64_t v79 = v87;
              }
              while (v88 != v86);
              unint64_t v1 = v132;
              unint64_t v33 = v135;
              uint64_t v31 = v137;
              uint64_t v83 = v123;
            }
            uint64_t v98 = MEMORY[0x1AD0CAC20](v85, MEMORY[0x1E4FBB1A0]);
            unint64_t v100 = v99;
            swift_bridgeObjectRelease();
            *(void *)(v83 + 4) = sub_1A72D1730(v98, v100, v146);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1A72A1000, v127, v125, "rem_migrationSets adding the first CloudKit type child account {ckAccounts: %s}", (uint8_t *)v83, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1AD0CD330](v124, -1, -1);
            MEMORY[0x1AD0CD330](v83, -1, -1);

            uint64_t v34 = &selRef_frequencyComponents;
            unint64_t v82 = v126;
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          if (v82)
          {
            swift_bridgeObjectRetain();
            uint64_t v114 = sub_1A75738D0();
            swift_bridgeObjectRelease();
            if (!v114)
            {
LABEL_81:

              swift_bridgeObjectRelease();
              goto LABEL_26;
            }
          }
          else if (!*(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_81;
          }
          if ((v79 & 0xC000000000000001) != 0)
          {
            id v102 = (id)MEMORY[0x1AD0CB800](0, v79);
            v101 = v128;
          }
          else
          {
            v101 = v128;
            if (!*(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_93;
            }
            id v102 = *(id *)(v79 + 32);
          }
          swift_bridgeObjectRelease();
          unsigned __int8 v103 = objc_msgSend(v101, sel_rem_eligibleForAutoCloudKitMigration);
          v104 = v147;
          id v105 = v101;
          id v106 = v36;
          id v107 = v102;
          id v108 = v105;
          id v109 = v106;
          id v110 = v107;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v104 = sub_1A72ACA00(0, v104[2] + 1, 1, v104);
          }
          unint64_t v112 = v104[2];
          unint64_t v111 = v104[3];
          if (v112 >= v111 >> 1) {
            v104 = sub_1A72ACA00((void *)(v111 > 1), v112 + 1, 1, v104);
          }
          v104[2] = v112 + 1;
          v113 = &v104[4 * v112];
          v113[4] = v108;
          v113[5] = v109;
          v113[6] = v110;
          *((unsigned char *)v113 + 56) = v103;

          v147 = v104;
          unint64_t v1 = v132;
          goto LABEL_79;
        }

LABEL_26:
        if (v32 == (Class)v31) {
          goto LABEL_88;
        }
      }

LABEL_25:
      goto LABEL_26;
    }
  }
LABEL_88:
  swift_bridgeObjectRelease();
  v115 = sub_1A7571E80();
  os_log_type_t v116 = sub_1A7572FF0();
  if (os_log_type_enabled(v115, v116))
  {
    v117 = (uint8_t *)swift_slowAlloc();
    uint64_t v118 = swift_slowAlloc();
    v146[0] = v118;
    *(_DWORD *)v117 = 136446210;
    swift_beginAccess();
    uint64_t v119 = swift_bridgeObjectRetain();
    uint64_t v120 = MEMORY[0x1AD0CAC20](v119, &type metadata for ACAccountStore.MigrationSet);
    unint64_t v122 = v121;
    swift_bridgeObjectRelease();
    sub_1A72D1730(v120, v122, v146);
    sub_1A7573250();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v115, v116, "rem_migrationSets result {result: %{public}s}", v117, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v118, -1, -1);
    MEMORY[0x1AD0CD330](v117, -1, -1);
  }

  swift_beginAccess();
}

uint64_t sub_1A72E6998(uint64_t a1)
{
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1A75736F0();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_1A72BEE98(i, (uint64_t)v5);
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB703C98);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_1A75736C0();
    sub_1A7573700();
    sub_1A7573710();
    sub_1A75736D0();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_1A72E6AB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1A7572CA0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1A72DF384(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1A72E6B4C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB703C98);
  sub_1A72E7618();
  uint64_t result = sub_1A7572CA0();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1A75738D0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)MEMORY[0x1AD0CB800](i, a1);
        sub_1A72DF608(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_1A72DF608(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

id sub_1A72E6CA0(uint64_t a1, void *a2)
{
  id v41 = a2;
  uint64_t v40 = sub_1A7571BC0();
  uint64_t v3 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v39 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A75733C0();
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB703C98);
    sub_1A72E7618();
    id result = (id)sub_1A7572CD0();
    a1 = v43;
    uint64_t v35 = v44;
    uint64_t v6 = v45;
    uint64_t v7 = v46;
    unint64_t v8 = v47;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 56);
    uint64_t v35 = a1 + 56;
    uint64_t v6 = ~v9;
    uint64_t v11 = -v9;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v8 = v12 & v10;
    id result = (id)swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  v33[0] = v6;
  v33[3] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v34 = (unint64_t)(v6 + 64) >> 6;
  id v38 = (void (**)(char *, uint64_t))(v3 + 8);
  _OWORD v33[2] = MEMORY[0x1E4FBC838] + 8;
  while (1)
  {
    unint64_t v14 = v8;
    if ((a1 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v18 = sub_1A7573440();
    uint64_t v19 = v18;
    if (!v18) {
      goto LABEL_38;
    }
    uint64_t v42 = v18;
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB703C98);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v20 = v48;
    swift_unknownObjectRelease();
    uint64_t v17 = v7;
    if (!v20) {
      goto LABEL_37;
    }
LABEL_32:
    uint64_t v36 = v7;
    unint64_t v37 = v14;
    id result = objc_msgSend(v20, sel_identifier, v33[0]);
    if (!result) {
      goto LABEL_40;
    }
    uint64_t v24 = result;
    uint64_t v25 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v27 = v26;

    id v28 = objc_msgSend(v41, sel_uuid);
    unint64_t v29 = v39;
    sub_1A7571BB0();

    uint64_t v30 = sub_1A7571B80();
    uint64_t v32 = v31;
    (*v38)(v29, v40);
    if (v25 == v30 && v27 == v32)
    {

      swift_bridgeObjectRelease_n();
LABEL_36:
      uint64_t v19 = 1;
      goto LABEL_38;
    }
    char v13 = sub_1A7573DB0();

    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    uint64_t v7 = v17;
    if (v13) {
      goto LABEL_36;
    }
  }
  if (v8)
  {
    unint64_t v15 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v16 = v15 | (v7 << 6);
    uint64_t v17 = v7;
LABEL_31:
    id v20 = *(id *)(*(void *)(a1 + 48) + 8 * v16);
    if (!v20) {
      goto LABEL_37;
    }
    goto LABEL_32;
  }
  int64_t v21 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v21 >= v34) {
      goto LABEL_37;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v21);
    uint64_t v17 = v7 + 1;
    if (!v22)
    {
      uint64_t v17 = v7 + 2;
      if (v7 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v22 = *(void *)(v35 + 8 * v17);
      if (!v22)
      {
        uint64_t v17 = v7 + 3;
        if (v7 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v22 = *(void *)(v35 + 8 * v17);
        if (!v22)
        {
          uint64_t v17 = v7 + 4;
          if (v7 + 4 >= v34) {
            goto LABEL_37;
          }
          unint64_t v22 = *(void *)(v35 + 8 * v17);
          if (!v22)
          {
            uint64_t v17 = v7 + 5;
            if (v7 + 5 >= v34) {
              goto LABEL_37;
            }
            unint64_t v22 = *(void *)(v35 + 8 * v17);
            if (!v22)
            {
              uint64_t v23 = v7 + 6;
              while (v34 != v23)
              {
                unint64_t v22 = *(void *)(v35 + 8 * v23++);
                if (v22)
                {
                  uint64_t v17 = v23 - 1;
                  goto LABEL_30;
                }
              }
LABEL_37:
              uint64_t v19 = 0;
LABEL_38:
              sub_1A72D99A4();
              return (id)v19;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v17 << 6);
    goto LABEL_31;
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

void _s12MigrationSetVwxx(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 16);
}

uint64_t _s12MigrationSetVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

uint64_t _s12MigrationSetVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 16);
  uint64_t v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s12MigrationSetVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t _s12MigrationSetVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s12MigrationSetVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ACAccountStore.MigrationSet()
{
  return &type metadata for ACAccountStore.MigrationSet;
}

uint64_t sub_1A72E72E8(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1A75738D0();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for REMObjectID_Codable();
  sub_1A72E75D0((unint64_t *)&qword_1E96F1528, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
  uint64_t result = sub_1A7572CA0();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1A75738D0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        id v6 = (void *)MEMORY[0x1AD0CB800](i, a1);
        sub_1A72DFCC8(&v9, v6);
      }
    }
    else
    {
      id v7 = (void **)(a1 + 32);
      do
      {
        id v8 = *v7++;
        sub_1A72DFCC8(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A72E745C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for REMReminderPriorityLevel(0);
  sub_1A72E75D0(&qword_1E96F1520, type metadata accessor for REMReminderPriorityLevel);
  uint64_t result = sub_1A7572CA0();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_1A72DFF48(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1A72E7508(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1A72E757C();
  uint64_t result = sub_1A7572CA0();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_1A72E0068(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_1A72E757C()
{
  unint64_t result = qword_1E96F1518;
  if (!qword_1E96F1518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1518);
  }
  return result;
}

uint64_t sub_1A72E75D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A72E7618()
{
  unint64_t result = qword_1EB703CA0;
  if (!qword_1EB703CA0)
  {
    sub_1A72BEFEC(255, (unint64_t *)&qword_1EB703C98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703CA0);
  }
  return result;
}

uint64_t sub_1A72E7680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = *(void *)v4;
  uint64_t v7 = *((void *)v4 + 1);
  char v9 = v4[16];
  uint64_t v10 = type metadata accessor for SortedPatchElement();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = &v4[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    *(void *)a2 = v8;
    *(void *)(a2 + 8) = v7;
    *(unsigned char *)(a2 + 16) = v9;
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v11, v10);
  }
  else
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    unint64_t v14 = &v4[*(int *)(TupleTypeMetadata3 + 48)];
    unint64_t v15 = &v4[*(int *)(TupleTypeMetadata3 + 64)];
    *(void *)a2 = v8;
    *(void *)(a2 + 8) = v7;
    *(unsigned char *)(a2 + 16) = v9;
    unint64_t v16 = *(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8);
    v16(v15, v10);
    return ((uint64_t (*)(char *, uint64_t))v16)(v14, v10);
  }
}

uint64_t static ExtendedPatch<A>.== infix(_:_:)(char *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v101 = a4;
  id v109 = a1;
  id v110 = a2;
  uint64_t v107 = *(void *)(a3 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  id v102 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v98 = (char *)&v95 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  v104 = (char *)&v95 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v99 = (char *)&v95 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  unint64_t v100 = (char *)&v95 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  unsigned __int8 v103 = (char *)&v95 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  unint64_t v96 = (char *)&v95 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v97 = (char *)&v95 - v18;
  uint64_t v108 = v19;
  uint64_t v20 = type metadata accessor for ExtendedPatch();
  int64_t v21 = *(char **)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char **)((char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  uint64_t v27 = (char *)&v95 - v26;
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  uint64_t v30 = (char **)((char *)&v95 - v29);
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v95 - v31;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  id v106 = *(char **)(TupleTypeMetadata2 - 8);
  uint64_t v34 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v36 = (char *)&v95 - v35;
  unint64_t v37 = (char **)((char *)&v95 + *(int *)(v34 + 48) - v35);
  id v105 = v21;
  id v38 = (void (*)(char *, char *, uint64_t))*((void *)v21 + 2);
  v38((char *)&v95 - v35, v109, v20);
  v38((char *)v37, v110, v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v38((char *)v30, v36, v20);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_16;
      }
      char v57 = *v30 == *v37;
      goto LABEL_23;
    case 2u:
      v38(v27, v36, v20);
      uint64_t v42 = (char *)*((void *)v27 + 1);
      uint64_t v43 = v108;
      uint64_t v44 = *(int *)(swift_getTupleTypeMetadata3() + 64);
      uint64_t v45 = &v27[v44];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        (*(void (**)(char *, uint64_t))(v107 + 8))(&v27[v44], v43);
        goto LABEL_16;
      }
      uint64_t v46 = *(char **)v27;
      id v109 = v42;
      id v110 = v46;
      unint64_t v47 = *v37;
      id v106 = v37[1];
      long long v48 = (char *)v37 + v44;
      uint64_t v49 = v107;
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v107 + 32);
      uint64_t v51 = v103;
      v50(v103, v45, v43);
      uint64_t v52 = v100;
      v50(v100, v48, v43);
      if (v110 != v47)
      {
        unint64_t v87 = *(void (**)(char *, uint64_t))(v49 + 8);
        v87(v52, v43);
        v87(v51, v43);
        goto LABEL_22;
      }
      id v53 = v105;
      if (v109 == v106)
      {
        char v54 = v103;
        id v55 = v52;
        uint64_t v56 = v108;
        char v57 = sub_1A75725C0();
        os_log_type_t v58 = *(void (**)(char *, uint64_t))(v107 + 8);
        v58(v55, v56);
        v58(v54, v56);
      }
      else
      {
        id v91 = *(void (**)(char *, uint64_t))(v107 + 8);
        uint64_t v92 = v52;
        uint64_t v93 = v108;
        v91(v92, v108);
        v91(v103, v93);
        char v57 = 0;
      }
      break;
    case 3u:
      v38((char *)v24, v36, v20);
      uint64_t v59 = v108;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v61 = *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v62 = (char *)v24 + v61;
      uint64_t v63 = *(int *)(TupleTypeMetadata3 + 64);
      unint64_t v64 = (char *)v24 + v63;
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        unint64_t v79 = *(void (**)(char *, uint64_t))(v107 + 8);
        v79((char *)v24 + v63, v59);
        v79(v62, v59);
        goto LABEL_16;
      }
      uint64_t v65 = *v24;
      id v109 = *v37;
      id v110 = v65;
      id v66 = (char *)v37 + v61;
      id v106 = (char *)v37 + v63;
      uint64_t v67 = v107;
      os_log_type_t v68 = *(void (**)(char *, char *, uint64_t))(v107 + 32);
      uint64_t v69 = v99;
      v68(v99, v62, v59);
      uint64_t v70 = v104;
      v68(v104, v64, v59);
      id v71 = v98;
      v68(v98, v66, v59);
      uint64_t v72 = v102;
      v68(v102, v106, v59);
      if (v110 != v109)
      {
        uint64_t v88 = *(void (**)(char *, uint64_t))(v67 + 8);
        v88(v72, v59);
        v88(v71, v59);
        v88(v70, v59);
        v88(v69, v59);
        goto LABEL_22;
      }
      char v73 = sub_1A75725C0();
      unint64_t v74 = v71;
      uint64_t v75 = v67;
      id v53 = v105;
      if (v73)
      {
        id v76 = v102;
        id v77 = v69;
        char v57 = sub_1A75725C0();
        unint64_t v78 = *(void (**)(char *, uint64_t))(v75 + 8);
        v78(v76, v59);
        v78(v74, v59);
        v78(v104, v59);
        v78(v77, v59);
      }
      else
      {
        uint64_t v94 = *(void (**)(char *, uint64_t))(v67 + 8);
        v94(v102, v59);
        v94(v74, v59);
        v94(v104, v59);
        v94(v69, v59);
        char v57 = 0;
      }
      break;
    default:
      v38(v32, v36, v20);
      uint64_t v39 = v108;
      uint64_t v40 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      id v41 = &v32[v40];
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v107 + 8))(&v32[v40], v39);
LABEL_16:
        char v57 = 0;
        id v53 = v106;
        uint64_t v20 = TupleTypeMetadata2;
      }
      else
      {
        id v110 = *(char **)v32;
        uint64_t v80 = *v37;
        os_log_type_t v81 = (char *)v37 + v40;
        uint64_t v82 = v107;
        uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v107 + 32);
        uint64_t v84 = v97;
        v83(v97, v41, v39);
        uint64_t v85 = v96;
        v83(v96, v81, v39);
        if (v110 == v80)
        {
          char v57 = sub_1A75725C0();
          uint64_t v86 = *(void (**)(char *, uint64_t))(v82 + 8);
          v86(v85, v39);
          v86(v84, v39);
        }
        else
        {
          id v89 = *(void (**)(char *, uint64_t))(v82 + 8);
          v89(v85, v39);
          v89(v84, v39);
LABEL_22:
          char v57 = 0;
        }
LABEL_23:
        id v53 = v105;
      }
      break;
  }
  (*((void (**)(char *, uint64_t))v53 + 1))(v36, v20);
  return v57 & 1;
}

uint64_t type metadata accessor for ExtendedPatch()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A72E820C(char *a1, char *a2, uint64_t a3, uint64_t a4)
{
  return static ExtendedPatch<A>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t extendedPatch<A>(from:to:sort:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  Collection<>.extendedDiff(_:)(a2, a5, a6, a7, &v15);
  uint64_t v11 = ExtendedDiff.patch<A>(from:to:sort:)(a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t ExtendedDiff.patch<A>(from:to:sort:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3)
  {
    swift_retain();
    sub_1A72E8564(a1, a2, a3, a4, a5, a6);
    swift_getAssociatedTypeWitness();
    sub_1A7490A58();
    sub_1A72AE0F8(a3);
  }
  else
  {
    sub_1A72E8838(a1, a2, a5, a6);
    swift_getAssociatedTypeWitness();
    sub_1A7490A58();
  }
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  type metadata accessor for SortedPatchElement();
  sub_1A7572B30();
  swift_getWitnessTable();
  uint64_t v12 = sub_1A7572D70();
  MEMORY[0x1F4188790](v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C78);
  type metadata accessor for ExtendedPatch();
  sub_1A72E9340();
  swift_getWitnessTable();
  uint64_t v13 = sub_1A75728B0();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1A72E8564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v11 = v6[1];
  long long v39 = *v6;
  long long v40 = v11;
  long long v41 = v6[2];
  sub_1A72E9394(a1, a2, a5, a6);
  uint64_t v32 = a5;
  uint64_t v33 = a6;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for BoxedDiffAndPatchElement();
  sub_1A7572B30();
  swift_getWitnessTable();
  uint64_t v13 = sub_1A7572920();
  swift_bridgeObjectRelease();
  *(void *)&long long v39 = v13;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = AssociatedTypeWitness;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = sub_1A72EBBF8;
  uint64_t v31 = v14;
  uint64_t v15 = type metadata accessor for SortedPatchElement();
  sub_1A7572B30();
  swift_getWitnessTable();
  uint64_t v16 = sub_1A7572930();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getWitnessTable();
  uint64_t v17 = MEMORY[0x1E4FBB590];
  sub_1A7572D70();
  long long v38 = v39;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v27 = v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C78);
  uint64_t v36 = v17;
  unint64_t v37 = sub_1A72E9340();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = sub_1A7320598((void (*)(char *, char *))sub_1A72EBC34, (uint64_t)v24, v18, v15, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v20);
  swift_bridgeObjectRelease();
  *(void *)&long long v39 = v21;
  uint64_t v22 = sub_1A7572920();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1A72E8838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v7 = v4[1];
  v19[0] = *v4;
  v19[1] = v7;
  v19[2] = v4[2];
  long long v18 = v19[0];
  uint64_t v8 = Diff.patch<A>(from:to:)(a1, a2, a3, a4);
  swift_getAssociatedTypeWitness();
  type metadata accessor for Patch();
  sub_1A7572B30();
  swift_getWitnessTable();
  uint64_t v9 = MEMORY[0x1E4FBB590];
  sub_1A7572D70();
  long long v17 = v19[0];
  v16[2] = a3;
  void v16[3] = a4;
  v16[4] = v8;
  v16[5] = v19;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C78);
  uint64_t v11 = type metadata accessor for SortedPatchElement();
  v16[7] = v9;
  v16[8] = sub_1A72E9340();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = sub_1A7320598((void (*)(char *, char *))sub_1A72EBD70, (uint64_t)v16, v10, v11, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v13);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1A72E89CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v88 = a2;
  unint64_t v87 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v84 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v82 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  os_log_type_t v81 = (char *)&v78 - v7;
  uint64_t v8 = type metadata accessor for Patch();
  uint64_t v89 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v80 = (char *)&v78 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  unint64_t v79 = (char *)&v78 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  long long v18 = (uint64_t *)((char *)&v78 - v17);
  MEMORY[0x1F4188790](v16);
  uint64_t v83 = (char *)&v78 - v19;
  uint64_t v86 = AssociatedTypeWitness;
  uint64_t v20 = type metadata accessor for SortedPatchElement();
  uint64_t v85 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v78 - v24;
  uint64_t v26 = *a1;
  sub_1A7572B70();
  uint64_t v27 = *(void *)(v88 + 40);
  if (sub_1A72DB460(*(void *)&v25[*(int *)(v20 + 28)], v27))
  {
    if (__OFADD__(v26, 1))
    {
      __break(1u);
LABEL_24:
      v28(v18, v8);
LABEL_26:
      uint64_t result = sub_1A7573840();
      __break(1u);
      return result;
    }
    sub_1A7572B70();
    uint64_t v29 = v89;
    uint64_t v30 = v83;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v83, v23, v8);
    uint64_t v31 = *(void (**)(uint64_t *, char *, uint64_t))(v29 + 16);
    v31(v18, v25, v8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v33 = *v18;
        long long v18 = (uint64_t *)v79;
        v31((uint64_t *)v79, v30, v8);
        int v34 = swift_getEnumCaseMultiPayload();
        uint64_t v28 = *(void (**)(uint64_t *, uint64_t))(v89 + 8);
        if (!v34)
        {
          v28((uint64_t *)v30, v8);
          (*(void (**)(char *, uint64_t))(v85 + 8))(v25, v20);
          uint64_t v35 = *v18;
          uint64_t v36 = v86;
          TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
          long long v38 = *(void (**)(char *, char *, uint64_t))(v84 + 32);
          long long v39 = v81;
          v38(v81, (char *)v18 + *(int *)(TupleTypeMetadata2 + 48), v36);
          TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
          long long v41 = v87;
          uint64_t v42 = (char *)v87 + *(int *)(TupleTypeMetadata3 + 64);
          *unint64_t v87 = v33;
          v41[1] = v35;
          v38(v42, v39, v36);
          uint64_t v43 = type metadata accessor for ExtendedPatch();
LABEL_20:
          swift_storeEnumTagMultiPayload();
          uint64_t v65 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56);
          id v66 = v41;
          return v65(v66, 0, 1, v43);
        }
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v89 + 8))(v30, v8);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v25, v20);
      uint64_t v67 = *v18;
      uint64_t v50 = v86;
      uint64_t v68 = swift_getTupleTypeMetadata3();
      uint64_t v69 = *(int *)(v68 + 48);
      uint64_t v70 = (char *)v18 + v69;
      id v71 = (char *)v18 + *(int *)(v68 + 64);
      long long v41 = v87;
      uint64_t v72 = (char *)v87 + v69;
      uint64_t v51 = v84;
LABEL_19:
      id v77 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
      v77(v72, v70, v50);
      v77((char *)v41 + *(int *)(v68 + 64), v71, v50);
      *long long v41 = v67;
      uint64_t v43 = type metadata accessor for ExtendedPatch();
      goto LABEL_20;
    }
    uint64_t v88 = *v18;
    uint64_t v54 = v86;
    id v55 = (char *)v18 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    uint64_t v56 = v54;
    uint64_t v84 = *(void *)(v84 + 32);
    ((void (*)(char *, char *, uint64_t))v84)(v82, v55, v54);
    char v57 = (uint64_t *)v80;
    v31((uint64_t *)v80, v30, v8);
    int v58 = swift_getEnumCaseMultiPayload();
    uint64_t v59 = *(void (**)(uint64_t *, uint64_t))(v89 + 8);
    if (v58 != 1)
    {
      v59(v57, v8);
      goto LABEL_26;
    }
    v59((uint64_t *)v30, v8);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v25, v20);
    uint64_t v60 = *v57;
    uint64_t v61 = swift_getTupleTypeMetadata3();
    uint64_t v62 = v87;
    uint64_t v63 = (char *)v87 + *(int *)(v61 + 64);
    uint64_t v64 = v88;
    *unint64_t v87 = v60;
    v62[1] = v64;
    ((void (*)(char *, char *, uint64_t))v84)(v63, v82, v56);
    uint64_t v43 = type metadata accessor for ExtendedPatch();
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56);
    id v66 = v62;
  }
  else
  {
    uint64_t v44 = v85;
    if (v26 >= 1)
    {
      sub_1A7572B70();
      uint64_t v45 = *(void *)&v23[*(int *)(v20 + 28)];
      uint64_t v46 = *(void (**)(char *, uint64_t))(v44 + 8);
      v46(v23, v20);
      if (sub_1A72DB460(v45, v27))
      {
        v46(v25, v20);
        uint64_t v47 = type metadata accessor for ExtendedPatch();
        return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v87, 1, 1, v47);
      }
    }
    (*(void (**)(uint64_t *, char *, uint64_t))(v89 + 32))(v11, v25, v8);
    int v49 = swift_getEnumCaseMultiPayload();
    uint64_t v50 = v86;
    if (v49)
    {
      uint64_t v51 = v84;
      if (v49 != 1)
      {
        uint64_t v67 = *v11;
        uint64_t v68 = swift_getTupleTypeMetadata3();
        uint64_t v76 = *(int *)(v68 + 48);
        uint64_t v70 = (char *)v11 + v76;
        id v71 = (char *)v11 + *(int *)(v68 + 64);
        long long v41 = v87;
        uint64_t v72 = (char *)v87 + v76;
        goto LABEL_19;
      }
      uint64_t v52 = *v11;
      id v53 = v87;
      *unint64_t v87 = v52;
      uint64_t v43 = type metadata accessor for ExtendedPatch();
    }
    else
    {
      uint64_t v73 = *v11;
      uint64_t v74 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v75 = (char *)v11 + v74;
      id v53 = v87;
      (*(void (**)(char *, char *, uint64_t))(v84 + 32))((char *)v87 + v74, v75, v50);
      *id v53 = v73;
      uint64_t v43 = type metadata accessor for ExtendedPatch();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56);
    id v66 = v53;
  }
  return v65(v66, 0, 1, v43);
}

uint64_t sub_1A72E9320@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1A72E89CC(a1, *(void *)(v2 + 40), a2);
}

unint64_t sub_1A72E9340()
{
  unint64_t result = qword_1EB703C58;
  if (!qword_1EB703C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703C58);
  }
  return result;
}

uint64_t sub_1A72E9394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v7 = v4[1];
  v18[0] = *v4;
  v18[1] = v7;
  long long v19 = v4[2];
  uint64_t v8 = sub_1A72E8838(a1, a2, a3, a4);
  uint64_t v9 = *(void *)(v19 + 16);
  v16[9] = 0;
  void v16[10] = v9;
  uint64_t v17 = 0;
  v16[2] = a3;
  void v16[3] = a4;
  v16[4] = v18;
  v16[5] = &v17;
  v16[6] = v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB703C78);
  swift_getAssociatedTypeWitness();
  uint64_t v11 = type metadata accessor for BoxedDiffAndPatchElement();
  unint64_t v12 = sub_1A72EBCF4();
  uint64_t v14 = sub_1A7320598((void (*)(char *, char *))sub_1A72EBCCC, (uint64_t)v16, v10, v11, MEMORY[0x1E4FBC248], v12, MEMORY[0x1E4FBC278], v13);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1A72E94A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(long long *, long long *))
{
  swift_getAssociatedTypeWitness();
  uint64_t v4 = type metadata accessor for BoxedDiffAndPatchElement();
  sub_1A72E7680(v4, (uint64_t)&v12);
  long long v10 = v12;
  char v11 = v13;
  sub_1A72E7680(v4, (uint64_t)&v8);
  long long v6 = v8;
  char v7 = v9;
  return a3(&v10, &v6) & 1;
}

uint64_t sub_1A72E9570(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SortedPatchElement();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  long long v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  long long v8 = (char *)&v26 - v7;
  uint64_t v9 = type metadata accessor for BoxedDiffAndPatchElement();
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v26 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v26 - v10, a1, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v14(v8, &v11[*(int *)(TupleTypeMetadata2 + 48)], v2);
    sub_1A7573BD0();
    swift_allocObject();
    uint64_t v15 = sub_1A7572A40();
    v14(v16, v8, v2);
    return sub_1A7324980(v15);
  }
  else
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    long long v19 = &v11[*(int *)(TupleTypeMetadata3 + 64)];
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v20(v8, &v11[*(int *)(TupleTypeMetadata3 + 48)], v2);
    v20(v6, v19, v2);
    sub_1A7573BD0();
    uint64_t v21 = *(void *)(v3 + 72);
    swift_allocObject();
    uint64_t v22 = sub_1A7572A40();
    uint64_t v24 = v23;
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(v23, v8, v2);
    v20((char *)(v24 + v21), v6, v2);
    uint64_t v17 = sub_1A7324980(v22);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  return v17;
}

uint64_t sub_1A72E9894@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  swift_getAssociatedTypeWitness();
  uint64_t v3 = type metadata accessor for Patch();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v6 = (char *)&v14 - v5;
  uint64_t v7 = type metadata accessor for SortedPatchElement();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - v9;
  uint64_t v11 = *a1;
  sub_1A7572B70();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
  uint64_t v12 = *(void *)&v10[*(int *)(v7 + 28)];
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1A7490BA4((uint64_t)v6, v12, v11, v15);
}

uint64_t sub_1A72E9A68@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v6 = type metadata accessor for Patch();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v12 - v7;
  unint64_t v9 = *a1;
  uint64_t result = sub_1A7572B70();
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 24);
    if (v9 < *(void *)(v11 + 16)) {
      return sub_1A7490BA4((uint64_t)v8, v9, *(void *)(v11 + 8 * v9 + 32), a3);
    }
  }
  __break(1u);
  return result;
}

unint64_t *sub_1A72E9B78@<X0>(unint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v4 = *result;
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  if (v4 >= *(void *)(v7 + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v9 = v7 + 24 * v4;
  uint64_t v10 = *(void *)(v9 + 32);
  uint64_t v11 = *(void *)(v9 + 40);
  int v12 = *(unsigned __int8 *)(v9 + 48);
  if (v12 == 3)
  {
    uint64_t v13 = *a3 + 1;
    if (!__OFADD__(*a3, 1))
    {
      *a3 = v13;
      swift_getAssociatedTypeWitness();
      type metadata accessor for SortedPatchElement();
      uint64_t result = (unint64_t *)swift_getTupleTypeMetadata3();
      *(void *)a4 = v10;
      *(void *)(a4 + 8) = v11;
      *(unsigned char *)(a4 + 16) = 3;
      unint64_t v14 = v4 + v13;
      if (!__OFADD__(v4, v13))
      {
        BOOL v15 = __OFSUB__(v14, 1);
        unint64_t v16 = v14 - 1;
        if (!v15)
        {
          if ((v16 & 0x8000000000000000) == 0)
          {
            unint64_t v17 = *(void *)(*(void *)(a2 + 16) + 16);
            if (v16 < v17)
            {
              uint64_t result = (unint64_t *)sub_1A7572B70();
              if (!__OFADD__(v4, *a3))
              {
                if (v4 + *a3 < v17) {
                  goto LABEL_15;
                }
                goto LABEL_24;
              }
LABEL_23:
              __break(1u);
LABEL_24:
              __break(1u);
              goto LABEL_25;
            }
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_getAssociatedTypeWitness();
  type metadata accessor for SortedPatchElement();
  uint64_t result = (unint64_t *)swift_getTupleTypeMetadata2();
  *(void *)a4 = v10;
  *(void *)(a4 + 8) = v11;
  *(unsigned char *)(a4 + 16) = v12;
  unint64_t v18 = v4 + *a3;
  if (__OFADD__(v4, *a3))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((v18 & 0x8000000000000000) != 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v18 < *(void *)(*(void *)(a2 + 16) + 16))
  {
LABEL_15:
    sub_1A7572B70();
    type metadata accessor for BoxedDiffAndPatchElement();
    return (unint64_t *)swift_storeEnumTagMultiPayload();
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t ExtendedPatch.debugDescription.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v19 = *(void *)v7;
      uint64_t v23 = 10308;
      unint64_t v24 = 0xE200000000000000;
      uint64_t v22 = v19;
      sub_1A7573BC0();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      uint64_t v14 = v23;
      break;
    case 2u:
      uint64_t v11 = *(void *)v7;
      uint64_t v12 = *((void *)v7 + 1);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, &v7[*(int *)(TupleTypeMetadata3 + 64)], v1);
      uint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
      sub_1A7572740();
      uint64_t v22 = v11;
      sub_1A7573BC0();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      uint64_t v22 = v12;
      goto LABEL_4;
    case 3u:
      uint64_t v15 = *(void *)v7;
      uint64_t v16 = swift_getTupleTypeMetadata3();
      unint64_t v17 = &v7[*(int *)(v16 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, &v7[*(int *)(v16 + 64)], v1);
      uint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
      sub_1A7572740();
      uint64_t v22 = v15;
      sub_1A7573BC0();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      sub_1A7573D70();
      sub_1A7572740();
      uint64_t v14 = v23;
      unint64_t v18 = *(void (**)(char *, uint64_t))(v2 + 8);
      v18(v5, v1);
      v18(v17, v1);
      break;
    default:
      uint64_t v9 = *(void *)v7;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, &v7[*(int *)(TupleTypeMetadata2 + 48)], v1);
      uint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
      sub_1A7572740();
      uint64_t v22 = v9;
LABEL_4:
      sub_1A7573BC0();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      sub_1A7573D70();
      sub_1A7572740();
      uint64_t v14 = v23;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      break;
  }
  return v14;
}

uint64_t sub_1A72EA234()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = MEMORY[0x1E4FBADA0] + 64;
    swift_getTupleTypeLayout2();
    uint64_t v6 = &v5;
    uint64_t v7 = v2;
    swift_getTupleTypeLayout3();
    uint64_t v8 = &v4;
    swift_getTupleTypeLayout3();
    uint64_t v9 = &v3;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1A72EA320(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v5 + 64);
  unint64_t v9 = ((v7 + 8) & ~v7) + v8;
  unint64_t v10 = ((v7 + 16) & ~v7) + v8;
  if (v9 > v10) {
    unint64_t v10 = ((v6 + 8) & ~(unint64_t)v6) + v8;
  }
  unint64_t v11 = ((v9 + v6) & ~(unint64_t)v6) + v8;
  if (v10 > v11) {
    unint64_t v11 = v10;
  }
  if (v11 <= 8) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = v11;
  }
  int v13 = v6 & 0x100000;
  if (v7 > 7 || v13 != 0 || (unint64_t)(v12 + 1) > 0x18)
  {
    uint64_t v16 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v16 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    unsigned int v18 = a2[v12];
    unsigned int v19 = v18 - 4;
    if (v18 >= 4)
    {
      if (v12 <= 3) {
        uint64_t v20 = v12;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          goto LABEL_27;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v21 = *(_DWORD *)a2;
LABEL_27:
          int v22 = (v21 | (v19 << (8 * v12))) + 4;
          unsigned int v18 = v21 + 4;
          if (v12 < 4) {
            unsigned int v18 = v22;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v23 = ~v7;
    switch(v18)
    {
      case 1u:
        *a1 = *(void *)a2;
        *((unsigned char *)a1 + v12) = 1;
        break;
      case 2u:
        *a1 = *(void *)a2;
        unint64_t v24 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v25 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v24 = *v25;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)v24 + v7 + 8) & v23, ((unint64_t)v25 + v7 + 8) & v23, v4);
        *((unsigned char *)v3 + v12) = 2;
        break;
      case 3u:
        *a1 = *(void *)a2;
        uint64_t v26 = (unint64_t)&a2[v7 + 8] & v23;
        uint64_t v27 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
        v27(((unint64_t)a1 + v7 + 8) & v23, v26, v4);
        v27((v8 + v7 + (((unint64_t)v3 + v7 + 8) & v23)) & v23, (v8 + v7 + v26) & v23, v4);
        *((unsigned char *)v3 + v12) = 3;
        break;
      default:
        *a1 = *(void *)a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v7 + 8) & v23, (unint64_t)&a2[v7 + 8] & v23, v4);
        *((unsigned char *)v3 + v12) = 0;
        break;
    }
  }
  return v3;
}

unsigned __int8 *sub_1A72EA5FC(unsigned __int8 *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  unint64_t v6 = ((v4 + 8) & ~v4) + v5;
  unint64_t v7 = ((v4 + 16) & ~v4) + v5;
  if (v6 > v7) {
    unint64_t v7 = ((v4 + 8) & ~v4) + v5;
  }
  unint64_t v8 = ((v6 + v4) & ~v4) + v5;
  if (v7 > v8) {
    unint64_t v8 = v7;
  }
  if (v8 <= 8) {
    unint64_t v8 = 8;
  }
  unsigned int v9 = result[v8];
  unsigned int v10 = v9 - 4;
  if (v9 >= 4)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *result;
        goto LABEL_16;
      case 2:
        int v12 = *(unsigned __int16 *)result;
        goto LABEL_16;
      case 3:
        int v12 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_16;
      case 4:
        int v12 = *(_DWORD *)result;
LABEL_16:
        int v13 = (v12 | (v10 << (8 * v8))) + 4;
        unsigned int v9 = v12 + 4;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v14 = ~v4;
  switch(v9)
  {
    case 1u:
      return result;
    case 2u:
      uint64_t v15 = (unsigned __int8 *)(((unint64_t)(result + 15) & 0xFFFFFFFFFFFFFFF8) + v4);
      goto LABEL_21;
    case 3u:
      uint64_t v19 = (unint64_t)&result[v4 + 8] & v14;
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      v20(v19, v2);
      uint64_t v16 = (v5 + v4 + v19) & v14;
      uint64_t v18 = v2;
      unint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))v20;
      goto LABEL_23;
    default:
      uint64_t v15 = &result[v4];
LABEL_21:
      uint64_t v16 = (unint64_t)(v15 + 8) & v14;
      unint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
      uint64_t v18 = *(void *)(a2 + 16);
LABEL_23:
      return (unsigned __int8 *)v17(v16, v18);
  }
}

void *sub_1A72EA818(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  unint64_t v8 = ((v6 + 8) & ~v6) + v7;
  unint64_t v9 = ((v6 + 16) & ~v6) + v7;
  if (v8 > v9) {
    unint64_t v9 = ((v6 + 8) & ~v6) + v7;
  }
  unint64_t v10 = ((v8 + v6) & ~v6) + v7;
  if (v9 > v10) {
    unint64_t v10 = v9;
  }
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v10;
  }
  unsigned int v12 = a2[v11];
  unsigned int v13 = v12 - 4;
  if (v12 >= 4)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a2;
        goto LABEL_17;
      case 2:
        int v15 = *(unsigned __int16 *)a2;
        goto LABEL_17;
      case 3:
        int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_17;
      case 4:
        int v15 = *(_DWORD *)a2;
LABEL_17:
        int v16 = (v15 | (v13 << (8 * v11))) + 4;
        unsigned int v12 = v15 + 4;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v17 = ~v6;
  switch(v12)
  {
    case 1u:
      *a1 = *(void *)a2;
      char v18 = 1;
      break;
    case 2u:
      *a1 = *(void *)a2;
      uint64_t v19 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v20 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v19 = *v20;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)v19 + v6 + 8) & v17, ((unint64_t)v20 + v6 + 8) & v17, v4);
      char v18 = 2;
      break;
    case 3u:
      *a1 = *(void *)a2;
      uint64_t v21 = (unint64_t)&a2[v6 + 8] & v17;
      int v22 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
      v22(((unint64_t)a1 + v6 + 8) & v17, v21, v4);
      v22((v7 + v6 + (((unint64_t)a1 + v6 + 8) & v17)) & v17, (v7 + v6 + v21) & v17, v4);
      char v18 = 3;
      break;
    default:
      *a1 = *(void *)a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & v17, (unint64_t)&a2[v6 + 8] & v17, v4);
      char v18 = 0;
      break;
  }
  *((unsigned char *)a1 + v11) = v18;
  return a1;
}

unsigned __int8 *sub_1A72EAAB0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = *(void *)(v6 + 64);
    unint64_t v9 = ((v7 + 8) & ~v7) + v8;
    unint64_t v10 = ((v7 + 16) & ~v7) + v8;
    if (v9 > v10) {
      unint64_t v10 = ((v7 + 8) & ~v7) + v8;
    }
    unint64_t v11 = ((v9 + v7) & ~v7) + v8;
    if (v10 > v11) {
      unint64_t v11 = v10;
    }
    if (v11 <= 8) {
      uint64_t v12 = 8;
    }
    else {
      uint64_t v12 = v11;
    }
    unsigned int v13 = a1[v12];
    unsigned int v14 = v13 - 4;
    if (v13 >= 4)
    {
      if (v12 <= 3) {
        uint64_t v15 = v12;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a1;
          goto LABEL_18;
        case 2:
          int v16 = *(unsigned __int16 *)a1;
          goto LABEL_18;
        case 3:
          int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_18;
        case 4:
          int v16 = *(_DWORD *)a1;
LABEL_18:
          int v17 = (v16 | (v14 << (8 * v12))) + 4;
          unsigned int v13 = v16 + 4;
          if (v12 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v18 = ~v7;
    switch(v13)
    {
      case 1u:
        break;
      case 2u:
        uint64_t v19 = (unsigned __int8 *)(((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v7);
        goto LABEL_23;
      case 3u:
        uint64_t v20 = (unint64_t)&a1[v7 + 8] & v18;
        uint64_t v33 = *(void *)(*(void *)(a3 + 16) - 8);
        uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v21(v20, v5);
        v21((v8 + v7 + v20) & v18, v5);
        uint64_t v6 = v33;
        break;
      default:
        uint64_t v19 = &a1[v7];
LABEL_23:
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)(v19 + 8) & v18, v5);
        break;
    }
    unsigned int v22 = a2[v12];
    unsigned int v23 = v22 - 4;
    if (v22 >= 4)
    {
      if (v12 <= 3) {
        uint64_t v24 = v12;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a2;
          goto LABEL_34;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          goto LABEL_34;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_34;
        case 4:
          int v25 = *(_DWORD *)a2;
LABEL_34:
          int v26 = (v25 | (v23 << (8 * v12))) + 4;
          unsigned int v22 = v25 + 4;
          if (v12 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    switch(v22)
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        char v27 = 1;
        break;
      case 2u:
        uint64_t v29 = *(void *)a2;
        unint64_t v28 = (unint64_t)(a2 + 15);
        *(void *)a1 = v29;
        uint64_t v30 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v30 = *(void *)(v28 & 0xFFFFFFFFFFFFFFF8);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)v30 + v7 + 8) & v18, ((v28 & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & v18, v5);
        char v27 = 2;
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        uint64_t v31 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
        v31((unint64_t)&a1[v7 + 8] & v18, (unint64_t)&a2[v7 + 8] & v18, v5);
        v31((v8 + v7 + ((unint64_t)&a1[v7 + 8] & v18)) & v18, (v8 + v7 + ((unint64_t)&a2[v7 + 8] & v18)) & v18, v5);
        char v27 = 3;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))((unint64_t)&a1[v7 + 8] & v18, (unint64_t)&a2[v7 + 8] & v18, v5);
        char v27 = 0;
        break;
    }
    a1[v12] = v27;
  }
  return a1;
}

void *sub_1A72EAEAC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  unint64_t v8 = ((v6 + 8) & ~v6) + v7;
  unint64_t v9 = ((v6 + 16) & ~v6) + v7;
  if (v8 > v9) {
    unint64_t v9 = ((v6 + 8) & ~v6) + v7;
  }
  unint64_t v10 = ((v8 + v6) & ~v6) + v7;
  if (v9 > v10) {
    unint64_t v10 = v9;
  }
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v10;
  }
  unsigned int v12 = a2[v11];
  unsigned int v13 = v12 - 4;
  if (v12 >= 4)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a2;
        goto LABEL_17;
      case 2:
        int v15 = *(unsigned __int16 *)a2;
        goto LABEL_17;
      case 3:
        int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_17;
      case 4:
        int v15 = *(_DWORD *)a2;
LABEL_17:
        int v16 = (v15 | (v13 << (8 * v11))) + 4;
        unsigned int v12 = v15 + 4;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v17 = ~v6;
  switch(v12)
  {
    case 1u:
      *a1 = *(void *)a2;
      char v18 = 1;
      break;
    case 2u:
      *a1 = *(void *)a2;
      uint64_t v19 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v20 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v19 = *v20;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)v19 + v6 + 8) & v17, ((unint64_t)v20 + v6 + 8) & v17, v4);
      char v18 = 2;
      break;
    case 3u:
      *a1 = *(void *)a2;
      uint64_t v21 = (unint64_t)&a2[v6 + 8] & v17;
      unsigned int v22 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32);
      v22(((unint64_t)a1 + v6 + 8) & v17, v21, v4);
      v22((v7 + v6 + (((unint64_t)a1 + v6 + 8) & v17)) & v17, (v7 + v6 + v21) & v17, v4);
      char v18 = 3;
      break;
    default:
      *a1 = *(void *)a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & v17, (unint64_t)&a2[v6 + 8] & v17, v4);
      char v18 = 0;
      break;
  }
  *((unsigned char *)a1 + v11) = v18;
  return a1;
}

unsigned __int8 *sub_1A72EB144(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = *(void *)(v6 + 64);
    unint64_t v9 = ((v7 + 8) & ~v7) + v8;
    unint64_t v10 = ((v7 + 16) & ~v7) + v8;
    if (v9 > v10) {
      unint64_t v10 = ((v7 + 8) & ~v7) + v8;
    }
    unint64_t v11 = ((v9 + v7) & ~v7) + v8;
    if (v10 > v11) {
      unint64_t v11 = v10;
    }
    if (v11 <= 8) {
      uint64_t v12 = 8;
    }
    else {
      uint64_t v12 = v11;
    }
    unsigned int v13 = a1[v12];
    unsigned int v14 = v13 - 4;
    if (v13 >= 4)
    {
      if (v12 <= 3) {
        uint64_t v15 = v12;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a1;
          goto LABEL_18;
        case 2:
          int v16 = *(unsigned __int16 *)a1;
          goto LABEL_18;
        case 3:
          int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_18;
        case 4:
          int v16 = *(_DWORD *)a1;
LABEL_18:
          int v17 = (v16 | (v14 << (8 * v12))) + 4;
          unsigned int v13 = v16 + 4;
          if (v12 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v18 = ~v7;
    switch(v13)
    {
      case 1u:
        break;
      case 2u:
        uint64_t v19 = (unsigned __int8 *)(((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v7);
        goto LABEL_23;
      case 3u:
        uint64_t v20 = (unint64_t)&a1[v7 + 8] & v18;
        uint64_t v33 = *(void *)(*(void *)(a3 + 16) - 8);
        uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v21(v20, v5);
        v21((v8 + v7 + v20) & v18, v5);
        uint64_t v6 = v33;
        break;
      default:
        uint64_t v19 = &a1[v7];
LABEL_23:
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)(v19 + 8) & v18, v5);
        break;
    }
    unsigned int v22 = a2[v12];
    unsigned int v23 = v22 - 4;
    if (v22 >= 4)
    {
      if (v12 <= 3) {
        uint64_t v24 = v12;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a2;
          goto LABEL_34;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          goto LABEL_34;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_34;
        case 4:
          int v25 = *(_DWORD *)a2;
LABEL_34:
          int v26 = (v25 | (v23 << (8 * v12))) + 4;
          unsigned int v22 = v25 + 4;
          if (v12 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    switch(v22)
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        char v27 = 1;
        break;
      case 2u:
        uint64_t v29 = *(void *)a2;
        unint64_t v28 = (unint64_t)(a2 + 15);
        *(void *)a1 = v29;
        uint64_t v30 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v30 = *(void *)(v28 & 0xFFFFFFFFFFFFFFF8);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)v30 + v7 + 8) & v18, ((v28 & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & v18, v5);
        char v27 = 2;
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        uint64_t v31 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
        v31((unint64_t)&a1[v7 + 8] & v18, (unint64_t)&a2[v7 + 8] & v18, v5);
        v31((v8 + v7 + ((unint64_t)&a1[v7 + 8] & v18)) & v18, (v8 + v7 + ((unint64_t)&a2[v7 + 8] & v18)) & v18, v5);
        char v27 = 3;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))((unint64_t)&a1[v7 + 8] & v18, (unint64_t)&a2[v7 + 8] & v18, v5);
        char v27 = 0;
        break;
    }
    a1[v12] = v27;
  }
  return a1;
}

uint64_t sub_1A72EB540(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  unint64_t v6 = ((v4 + 8) & ~v4) + v5;
  unint64_t v7 = ((v4 + 16) & ~v4) + v5;
  if (v6 > v7) {
    unint64_t v7 = ((v4 + 8) & ~v4) + v5;
  }
  unint64_t v8 = ((v6 + v4) & ~v4) + v5;
  if (v7 > v8) {
    unint64_t v8 = v7;
  }
  uint64_t v9 = 8;
  if (v8 > 8) {
    uint64_t v9 = v8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_26;
  }
  uint64_t v10 = v9 + 1;
  char v11 = 8 * (v9 + 1);
  if ((v9 + 1) <= 3)
  {
    unsigned int v14 = ((a2 + ~(-1 << v11) - 252) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v14 < 2)
    {
LABEL_26:
      unsigned int v16 = *((unsigned __int8 *)a1 + v9);
      if (v16 >= 4) {
        return (v16 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_26;
  }
LABEL_18:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v10 | v15) + 253;
}

void sub_1A72EB6D8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  unint64_t v8 = ((v6 + 8) & ~v6) + v7;
  unint64_t v9 = ((v6 + 16) & ~v6) + v7;
  if (v8 > v9) {
    unint64_t v9 = ((v6 + 8) & ~v6) + v7;
  }
  unint64_t v10 = ((v8 + v6) & ~v6) + v7;
  if (v9 > v10) {
    unint64_t v10 = v9;
  }
  if (v10 <= 8) {
    unint64_t v10 = 8;
  }
  size_t v11 = v10 + 1;
  if (a3 < 0xFD)
  {
    int v12 = 0;
  }
  else if (v11 <= 3)
  {
    unsigned int v15 = ((a3 + ~(-1 << (8 * v11)) - 252) >> (8 * v11)) + 1;
    if (HIWORD(v15))
    {
      int v12 = 4;
    }
    else if (v15 >= 0x100)
    {
      int v12 = 2;
    }
    else
    {
      int v12 = v15 > 1;
    }
  }
  else
  {
    int v12 = 1;
  }
  if (a2 > 0xFC)
  {
    unsigned int v13 = a2 - 253;
    if (v11 < 4)
    {
      int v14 = (v13 >> (8 * v11)) + 1;
      if (v10 != -1)
      {
        int v16 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10 + 1);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v11] = v14;
        break;
      case 2:
        *(_WORD *)&a1[v11] = v14;
        break;
      case 3:
LABEL_38:
        __break(1u);
        JUMPOUT(0x1A72EB904);
      case 4:
        *(_DWORD *)&a1[v11] = v14;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v12)
    {
      case 1:
        a1[v11] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      case 2:
        *(_WORD *)&a1[v11] = 0;
        goto LABEL_26;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v11] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      default:
LABEL_26:
        if (a2) {
LABEL_27:
        }
          a1[v10] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1A72EB92C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  unint64_t v5 = ((v3 + 8) & ~v3) + v4;
  unint64_t v6 = ((v3 + 16) & ~v3) + v4;
  if (v5 > v6) {
    unint64_t v6 = ((v3 + 8) & ~v3) + v4;
  }
  unint64_t v7 = ((v5 + v3) & ~v3) + v4;
  if (v6 > v7) {
    unint64_t v7 = v6;
  }
  uint64_t v8 = 8;
  if (v7 > 8) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a1[v8];
  int v10 = v9 - 4;
  if (v9 >= 4)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a1;
        goto LABEL_16;
      case 2:
        int v12 = *(unsigned __int16 *)a1;
        goto LABEL_16;
      case 3:
        int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_16;
      case 4:
        int v12 = *(_DWORD *)a1;
LABEL_16:
        unsigned int v13 = (v12 | (v10 << (8 * v8))) + 4;
        LODWORD(v9) = v12 + 4;
        if (v8 >= 4) {
          uint64_t v9 = v9;
        }
        else {
          uint64_t v9 = v13;
        }
        break;
      default:
        return v9;
    }
  }
  return v9;
}

void sub_1A72EBA48(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  unint64_t v7 = ((v5 + 8) & ~v5) + v6;
  unint64_t v8 = ((v5 + 16) & ~v5) + v6;
  if (a2 > 3)
  {
    if (v7 > v8) {
      unint64_t v8 = ((v5 + 8) & ~v5) + v6;
    }
    unint64_t v10 = ((v7 + v5) & ~v5) + v6;
    if (v8 > v10) {
      unint64_t v10 = v8;
    }
    if (v10 <= 8) {
      size_t v11 = 8;
    }
    else {
      size_t v11 = v10;
    }
    unsigned int v12 = a2 - 4;
    if (v11 < 4)
    {
      unsigned int v13 = v12 >> (8 * v11);
      int v14 = v12 & ~(-1 << (8 * v11));
      a1[v11] = v13 + 4;
      bzero(a1, v11);
      if (v11 == 3)
      {
        *(_WORD *)a1 = v14;
        a1[2] = BYTE2(v14);
      }
      else if (v11 == 2)
      {
        *(_WORD *)a1 = v14;
      }
      else
      {
        *a1 = v14;
      }
    }
    else
    {
      a1[v11] = 4;
      bzero(a1, v11);
      *(_DWORD *)a1 = v12;
    }
  }
  else
  {
    if (v7 > v8) {
      unint64_t v8 = ((v5 + 8) & ~v5) + v6;
    }
    unint64_t v9 = ((v7 + v5) & ~v5) + v6;
    if (v8 > v9) {
      unint64_t v9 = v8;
    }
    if (v9 <= 8) {
      unint64_t v9 = 8;
    }
    a1[v9] = a2;
  }
}

uint64_t sub_1A72EBBAC(uint64_t a1, uint64_t a2)
{
  return sub_1A72E94A0(a1, a2, *(uint64_t (**)(long long *, long long *))(v2 + 32)) & 1;
}

uint64_t type metadata accessor for BoxedDiffAndPatchElement()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A72EBBE8()
{
  return swift_deallocObject();
}

uint64_t sub_1A72EBBF8(uint64_t a1)
{
  return sub_1A72E9570(a1);
}

uint64_t sub_1A72EBC00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 32))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1A72EBC34@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A72E9894(a1, a2);
}

BOOL sub_1A72EBC58(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t v4 = type metadata accessor for SortedPatchElement();
  return *(void *)(a1 + *(int *)(v4 + 28)) < *(void *)(a2 + *(int *)(v4 + 28));
}

unint64_t *sub_1A72EBCCC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A72E9B78(a1, *(void *)(v2 + 32), *(uint64_t **)(v2 + 40), a2);
}

unint64_t sub_1A72EBCF4()
{
  unint64_t result = qword_1EB703C80;
  if (!qword_1EB703C80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB703C78);
    sub_1A72E9340();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703C80);
  }
  return result;
}

uint64_t sub_1A72EBD70@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A72E9A68(a1, *(void *)(v2 + 40), a2);
}

uint64_t sub_1A72EBD94()
{
  uint64_t result = type metadata accessor for SortedPatchElement();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    uint64_t v4 = &v3;
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1A72EBE60(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  char v3 = (void *)a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6;
  uint64_t v8 = ~(v6 | 7);
  uint64_t v9 = ((v6 | 7) + 17) & v8;
  uint64_t v10 = v6 + 8;
  uint64_t v11 = *(void *)(v5 + 64);
  unint64_t v12 = ((v7 + 8) & ~v7) + v11;
  if (v12 <= ((v12 + v7) & ~v7) + v11) {
    unint64_t v12 = ((v12 + v6) & ~(unint64_t)v6) + v11;
  }
  if (v12 <= 8) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = v12;
  }
  unint64_t v14 = (((v13 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v14 + v9 <= ((v14 + v9 + (v6 | 7)) & ~(v6 | 7)) + v14) {
    unint64_t v15 = ((v14 + v9 + (v6 | 7)) & ~(v6 | 7)) + v14;
  }
  else {
    unint64_t v15 = v14 + v9;
  }
  int v16 = v6 & 0x100000;
  BOOL v17 = v7 <= 7 && v16 == 0;
  if (!v17 || (v15 | 1) > 0x18)
  {
    uint64_t v28 = *a2;
    *char v3 = *a2;
    char v3 = (void *)(v28 + ((v7 + 16) & v8));
    swift_retain();
    return v3;
  }
  unsigned int v18 = *((unsigned __int8 *)a2 + v15);
  if ((v15 & 0xFFFFFFF8) != 0 && v18 >= 2) {
    unsigned int v18 = *(_DWORD *)a2 + 2;
  }
  uint64_t v20 = ~v7;
  uint64_t v21 = v13 + 1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  uint64_t v22 = (a1 + 24) & v8;
  uint64_t v23 = (unint64_t)(a2 + 3) & v8;
  unsigned int v24 = *(unsigned __int8 *)(v23 + v13);
  if (v18 != 1)
  {
    unsigned int v29 = v24 - 3;
    if (v24 >= 3)
    {
      if (v13 <= 3) {
        uint64_t v30 = v13;
      }
      else {
        uint64_t v30 = 4;
      }
      switch(v30)
      {
        case 1:
          int v31 = *(unsigned __int8 *)v23;
          goto LABEL_49;
        case 2:
          int v31 = *(unsigned __int16 *)v23;
          goto LABEL_49;
        case 3:
          int v31 = *(unsigned __int16 *)v23 | (*(unsigned __int8 *)(((unint64_t)(a2 + 3) & v8) + 2) << 16);
          goto LABEL_49;
        case 4:
          int v31 = *(_DWORD *)v23;
LABEL_49:
          int v42 = (v31 | (v29 << (8 * v13))) + 3;
          unsigned int v24 = v31 + 3;
          if (v13 < 4) {
            unsigned int v24 = v42;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v75 = v4;
    uint64_t v73 = v11;
    uint64_t v74 = ~v7;
    if (v24 == 2)
    {
      *(void *)uint64_t v22 = *(void *)v23;
      uint64_t v66 = (v10 + v22) & v20;
      uint64_t v67 = (v10 + v23) & v20;
      uint64_t v68 = v5;
      uint64_t v70 = *(void (**)(void))(v5 + 16);
      uint64_t v44 = v4;
      uint64_t v45 = v11;
      v70();
      uint64_t v46 = (v45 + v7 + v66) & ~v7;
      uint64_t v47 = (v45 + v7 + v67) & ~v7;
      uint64_t v21 = v13 + 1;
      uint64_t v22 = (unint64_t)(v3 + 3) & v8;
      uint64_t v48 = v44;
      uint64_t v5 = v68;
      ((void (*)(uint64_t, uint64_t, uint64_t))v70)(v46, v47, v48);
      char v43 = 2;
    }
    else
    {
      *(void *)uint64_t v22 = *(void *)v23;
      if (v24 == 1)
      {
        char v43 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v5 + 16))((v10 + v22) & v20, (v10 + v23) & v20);
        char v43 = 0;
      }
    }
    *(unsigned char *)(v22 + v13) = v43;
    int v49 = (void *)(((v22 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v50 = (void *)(((v23 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
    *int v49 = *v50;
    *(void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v51 = (void *)((v14 + v22) & v8);
    uint64_t v52 = (unsigned __int8 *)((v14 + v23) & v8);
    unsigned int v53 = v52[v13];
    unsigned int v54 = v53 - 3;
    if (v53 < 3)
    {
      uint64_t v56 = v7 + 8;
      uint64_t v57 = v75;
LABEL_63:
      if (v53 == 2)
      {
LABEL_73:
        *uint64_t v51 = *(void *)v52;
        unint64_t v72 = ((unint64_t)v51 + v56) & v74;
        unint64_t v61 = (unint64_t)&v52[v56] & v74;
        uint64_t v62 = *(void (**)(void))(v5 + 16);
        v62();
        ((void (*)(unint64_t, unint64_t, uint64_t))v62)((v73 + v7 + v72) & v74, (v73 + v7 + v61) & v74, v57);
        char v59 = 2;
LABEL_74:
        *((unsigned char *)v51 + v13) = v59;
        uint64_t v63 = (void *)(((unint64_t)v51 + v13 + 8) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v64 = (void *)((unint64_t)&v52[v13 + 8] & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v63 = *v64;
        *(void *)(((unint64_t)v63 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v3 + v15) = 0;
        return v3;
      }
    }
    else
    {
      if (v13 <= 3) {
        uint64_t v55 = v13;
      }
      else {
        uint64_t v55 = 4;
      }
      uint64_t v56 = v7 + 8;
      uint64_t v57 = v75;
      switch(v55)
      {
        case 1:
          int v58 = *v52;
          break;
        case 2:
          int v58 = *(unsigned __int16 *)v52;
          break;
        case 3:
          int v58 = *(unsigned __int16 *)v52 | (v52[2] << 16);
          break;
        case 4:
          int v58 = *(_DWORD *)v52;
          break;
        default:
          goto LABEL_63;
      }
      int v60 = (v58 | (v54 << (8 * v13))) + 3;
      unsigned int v53 = v58 + 3;
      if (v13 < 4) {
        unsigned int v53 = v60;
      }
      if (v53 == 2) {
        goto LABEL_73;
      }
    }
    *uint64_t v51 = *(void *)v52;
    if (v53 == 1)
    {
      char v59 = 1;
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)v51 + v56) & v74, (unint64_t)&v52[v56] & v74, v57);
      char v59 = 0;
    }
    goto LABEL_74;
  }
  unsigned int v25 = v24 - 3;
  if (v24 >= 3)
  {
    if (v13 <= 3) {
      uint64_t v26 = v13;
    }
    else {
      uint64_t v26 = 4;
    }
    switch(v26)
    {
      case 1:
        int v27 = *(unsigned __int8 *)v23;
        goto LABEL_38;
      case 2:
        int v27 = *(unsigned __int16 *)v23;
        goto LABEL_38;
      case 3:
        int v27 = *(unsigned __int16 *)v23 | (*(unsigned __int8 *)(((unint64_t)(a2 + 3) & v8) + 2) << 16);
        goto LABEL_38;
      case 4:
        int v27 = *(_DWORD *)v23;
LABEL_38:
        int v32 = (v27 | (v25 << (8 * v13))) + 3;
        unsigned int v24 = v27 + 3;
        if (v13 < 4) {
          unsigned int v24 = v32;
        }
        break;
      default:
        break;
    }
  }
  if (v24 == 2)
  {
    *(void *)uint64_t v22 = *(void *)v23;
    uint64_t v69 = (v10 + v22) & v20;
    uint64_t v34 = (v10 + v23) & v20;
    uint64_t v35 = *(void (**)(void))(v5 + 16);
    uint64_t v36 = v4;
    uint64_t v71 = v22;
    uint64_t v37 = v11;
    v35();
    uint64_t v38 = (v37 + v7 + v69) & ~v7;
    uint64_t v39 = (v37 + v7 + v34) & ~v7;
    uint64_t v21 = v13 + 1;
    uint64_t v22 = v71;
    ((void (*)(uint64_t, uint64_t, uint64_t))v35)(v38, v39, v36);
    char v33 = 2;
  }
  else
  {
    *(void *)uint64_t v22 = *(void *)v23;
    if (v24 == 1)
    {
      char v33 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 16))((v10 + v22) & v20, (v10 + v23) & v20);
      char v33 = 0;
    }
  }
  *(unsigned char *)(v22 + v13) = v33;
  long long v40 = (void *)(((v22 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
  long long v41 = (void *)(((v23 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
  *long long v40 = *v41;
  *(void *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
  *((unsigned char *)v3 + v15) = 1;
  return v3;
}

_DWORD *sub_1A72EC4B8(_DWORD *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v4 | 7;
  uint64_t v6 = ~(v4 | 7);
  uint64_t v7 = ((v4 | 7) + 17) & v6;
  uint64_t v8 = v4 + 8;
  uint64_t v9 = *(void *)(v3 + 64);
  unint64_t v10 = ((v4 + 8) & ~v4) + v9;
  if (v10 <= ((v10 + v4) & ~v4) + v9) {
    unint64_t v10 = ((v10 + v4) & ~v4) + v9;
  }
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v10;
  }
  unint64_t v12 = (((v11 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v13 = v12 + v7;
  unint64_t v14 = ((v12 + v7 + v5) & ~v5) + v12;
  if (v13 <= v14) {
    unint64_t v13 = v14;
  }
  unsigned int v15 = *((unsigned __int8 *)result + v13);
  uint64_t v16 = v13 & 0xFFFFFFF8;
  if (v15 >= 2 && v16 != 0) {
    unsigned int v15 = *result + 2;
  }
  uint64_t v18 = ~v4;
  uint64_t v19 = (uint64_t)result + v5 + 17;
  uint64_t v20 = (unsigned __int8 *)(v19 & v6);
  unsigned int v21 = *(unsigned __int8 *)((v19 & v6) + v11);
  if (v15 != 1)
  {
    unsigned int v25 = v21 - 3;
    if (v21 >= 3)
    {
      if (v11 <= 3) {
        uint64_t v26 = v11;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *v20;
          goto LABEL_37;
        case 2:
          int v27 = *(unsigned __int16 *)v20;
          goto LABEL_37;
        case 3:
          int v27 = *(unsigned __int16 *)v20 | (*(unsigned __int8 *)((v19 & v6) + 2) << 16);
          goto LABEL_37;
        case 4:
          int v27 = *(_DWORD *)v20;
LABEL_37:
          int v31 = (v27 | (v25 << (8 * v11))) + 3;
          unsigned int v21 = v27 + 3;
          if (v11 < 4) {
            unsigned int v21 = v31;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 2)
    {
      unint64_t v33 = (unint64_t)&v20[v8] & v18;
      uint64_t v34 = *(void (**)(unint64_t))(v3 + 8);
      uint64_t v35 = *(void *)(*(void *)(v2 - 8) + 64);
      uint64_t v36 = v2;
      uint64_t v46 = *(void *)(v2 - 8);
      v34(v33);
      unint64_t v37 = v35 + v4 + v33;
      uint64_t v8 = v4 + 8;
      uint64_t result = (_DWORD *)((uint64_t (*)(unint64_t, uint64_t))v34)(v37 & ~v4, v36);
      uint64_t v2 = v36;
      uint64_t v9 = v35;
      uint64_t v18 = ~v4;
    }
    else
    {
      if (v21 == 1) {
        goto LABEL_44;
      }
      uint64_t v32 = v2;
      uint64_t v46 = *(void *)(v2 - 8);
      uint64_t result = (_DWORD *)(*(uint64_t (**)(unint64_t))(v3 + 8))((unint64_t)&v20[v8] & v18);
      uint64_t v2 = v32;
    }
    uint64_t v3 = v46;
LABEL_44:
    uint64_t v20 = (unsigned __int8 *)(((v19 | v4) + v12) & v6);
    unsigned int v38 = v20[v11];
    unsigned int v39 = v38 - 3;
    if (v38 >= 3)
    {
      if (v11 <= 3) {
        uint64_t v40 = v11;
      }
      else {
        uint64_t v40 = 4;
      }
      switch(v40)
      {
        case 1:
          int v41 = *v20;
          goto LABEL_53;
        case 2:
          int v41 = *(unsigned __int16 *)v20;
          goto LABEL_53;
        case 3:
          int v41 = *(unsigned __int16 *)v20 | (*(unsigned __int8 *)((((v19 | v4) + v12) & v6) + 2) << 16);
          goto LABEL_53;
        case 4:
          int v41 = *(_DWORD *)v20;
LABEL_53:
          int v42 = (v41 | (v39 << (8 * v11))) + 3;
          unsigned int v38 = v41 + 3;
          if (v11 < 4) {
            unsigned int v38 = v42;
          }
          break;
        default:
          break;
      }
    }
    if (v38 != 2)
    {
      if (v38 == 1) {
        return result;
      }
      goto LABEL_33;
    }
LABEL_58:
    unint64_t v43 = (unint64_t)&v20[v8] & v18;
    uint64_t v45 = *(void (**)(unint64_t))(v3 + 8);
    uint64_t v44 = v2;
    v45(v43);
    unint64_t v29 = (v9 + v4 + v43) & v18;
    uint64_t v2 = v44;
    uint64_t v30 = (uint64_t (*)(unint64_t, uint64_t))v45;
    goto LABEL_59;
  }
  unsigned int v22 = v21 - 3;
  if (v21 >= 3)
  {
    if (v11 <= 3) {
      uint64_t v23 = v11;
    }
    else {
      uint64_t v23 = 4;
    }
    switch(v23)
    {
      case 1:
        int v24 = *v20;
        goto LABEL_29;
      case 2:
        int v24 = *(unsigned __int16 *)v20;
        goto LABEL_29;
      case 3:
        int v24 = *(unsigned __int16 *)v20 | (*(unsigned __int8 *)((v19 & v6) + 2) << 16);
        goto LABEL_29;
      case 4:
        int v24 = *(_DWORD *)v20;
LABEL_29:
        int v28 = (v24 | (v22 << (8 * v11))) + 3;
        unsigned int v21 = v24 + 3;
        if (v11 < 4) {
          unsigned int v21 = v28;
        }
        break;
      default:
        break;
    }
  }
  if (v21 == 2) {
    goto LABEL_58;
  }
  if (v21 == 1) {
    return result;
  }
LABEL_33:
  unint64_t v29 = (unint64_t)&v20[v8] & v18;
  uint64_t v30 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
LABEL_59:

  return (_DWORD *)v30(v29, v2);
}

uint64_t sub_1A72EC8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v6 | 7;
  uint64_t v8 = ~(v6 | 7);
  uint64_t v9 = ((v6 | 7) + 17) & v8;
  uint64_t v10 = v6 + 8;
  uint64_t v11 = *(void *)(v5 + 64);
  unint64_t v12 = ((v6 + 8) & ~v6) + v11;
  if (v12 <= ((v12 + v6) & ~v6) + v11) {
    unint64_t v12 = ((v12 + v6) & ~v6) + v11;
  }
  if (v12 <= 8) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = v12;
  }
  unint64_t v14 = (((v13 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v15 = v14 + v9;
  unint64_t v16 = ((v14 + v9 + v7) & ~v7) + v14;
  if (v15 > v16) {
    unint64_t v16 = v15;
  }
  unsigned int v17 = *(unsigned __int8 *)(a2 + v16);
  unint64_t v81 = v16;
  uint64_t v18 = v16 & 0xFFFFFFF8;
  if (v17 >= 2 && v18 != 0) {
    unsigned int v17 = *(_DWORD *)a2 + 2;
  }
  uint64_t v20 = ~v6;
  uint64_t v21 = v13 + 1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v22 = a1 + v7 + 17;
  uint64_t v23 = v22 & v8;
  uint64_t v24 = a2 + v7 + 17;
  uint64_t v25 = v24 & v8;
  unsigned int v26 = *(unsigned __int8 *)((v24 & v8) + v13);
  if (v17 != 1)
  {
    unsigned int v30 = v26 - 3;
    if (v26 >= 3)
    {
      if (v13 <= 3) {
        uint64_t v31 = v13;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *(unsigned __int8 *)v25;
          goto LABEL_40;
        case 2:
          int v32 = *(unsigned __int16 *)v25;
          goto LABEL_40;
        case 3:
          int v32 = *(unsigned __int16 *)v25 | (*(unsigned __int8 *)((v24 & v8) + 2) << 16);
          goto LABEL_40;
        case 4:
          int v32 = *(_DWORD *)v25;
LABEL_40:
          int v44 = (v32 | (v30 << (8 * v13))) + 3;
          unsigned int v26 = v32 + 3;
          if (v13 < 4) {
            unsigned int v26 = v44;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v80 = v4;
    uint64_t v79 = v11;
    uint64_t v75 = ~v6;
    if (v26 == 2)
    {
      *(void *)uint64_t v23 = *(void *)v25;
      unint64_t v69 = (v10 + v23) & v20;
      unint64_t v70 = (v10 + v25) & v20;
      uint64_t v71 = v5;
      unint64_t v72 = *(void (**)(void))(v5 + 16);
      uint64_t v46 = v4;
      uint64_t v73 = v24;
      uint64_t v47 = v11;
      v72();
      uint64_t v48 = v47 + v6;
      uint64_t v21 = v13 + 1;
      uint64_t v49 = v46;
      uint64_t v5 = v71;
      ((void (*)(unint64_t, unint64_t, uint64_t))v72)((v48 + v69) & ~v6, (v48 + v70) & ~v6, v49);
      uint64_t v24 = v73;
      char v45 = 2;
    }
    else if (v26 == 1)
    {
      *(void *)uint64_t v23 = *(void *)v25;
      char v45 = 1;
    }
    else
    {
      uint64_t v74 = v24;
      *(void *)uint64_t v23 = *(void *)v25;
      (*(void (**)(uint64_t, uint64_t))(v5 + 16))((v10 + v23) & v20, (v10 + v25) & v20);
      char v45 = 0;
      uint64_t v24 = v74;
    }
    *(unsigned char *)(v23 + v13) = v45;
    uint64_t v50 = (void *)(((v23 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v51 = (void *)(((v25 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v50 = *v51;
    *(void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v52 = (void *)(((v22 | v6) + v14) & v8);
    unsigned int v53 = (void *)(((v24 | v6) + v14) & v8);
    unsigned int v54 = *((unsigned __int8 *)v53 + v13);
    unsigned int v55 = v54 - 3;
    if (v54 < 3)
    {
      uint64_t v57 = v6 + 8;
      uint64_t v58 = v80;
LABEL_54:
      if (v54 == 2)
      {
LABEL_63:
        *uint64_t v52 = *v53;
        uint64_t v77 = v3;
        unint64_t v61 = ((unint64_t)v52 + v57) & v75;
        uint64_t v62 = v5;
        unint64_t v63 = ((unint64_t)v53 + v57) & v75;
        uint64_t v64 = *(void (**)(unint64_t, unint64_t, uint64_t))(v62 + 16);
        v64(v61, v63, v58);
        unint64_t v65 = v79 + v6 + v61;
        uint64_t v3 = v77;
        v64(v65 & v75, (v79 + v6 + v63) & v75, v58);
        LOBYTE(v54) = 2;
LABEL_64:
        char v43 = 0;
        *((unsigned char *)v52 + v13) = v54;
        uint64_t v41 = (uint64_t)v52 + v13 + 8;
        uint64_t v42 = (uint64_t)v53 + v13 + 8;
        goto LABEL_65;
      }
    }
    else
    {
      if (v13 <= 3) {
        uint64_t v56 = v13;
      }
      else {
        uint64_t v56 = 4;
      }
      uint64_t v57 = v6 + 8;
      uint64_t v58 = v80;
      switch(v56)
      {
        case 1:
          int v59 = *(unsigned __int8 *)v53;
          break;
        case 2:
          int v59 = *(unsigned __int16 *)v53;
          break;
        case 3:
          int v59 = *(unsigned __int16 *)v53 | (*(unsigned __int8 *)((((v24 | v6) + v14) & v8) + 2) << 16);
          break;
        case 4:
          int v59 = *(_DWORD *)v53;
          break;
        default:
          goto LABEL_54;
      }
      int v60 = (v59 | (v55 << (8 * v13))) + 3;
      unsigned int v54 = v59 + 3;
      if (v13 < 4) {
        unsigned int v54 = v60;
      }
      if (v54 == 2) {
        goto LABEL_63;
      }
    }
    *uint64_t v52 = *v53;
    if (v54 != 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)v52 + v57) & v75, ((unint64_t)v53 + v57) & v75, v58);
      LOBYTE(v54) = 0;
    }
    goto LABEL_64;
  }
  unsigned int v27 = v26 - 3;
  if (v26 >= 3)
  {
    if (v13 <= 3) {
      uint64_t v28 = v13;
    }
    else {
      uint64_t v28 = 4;
    }
    switch(v28)
    {
      case 1:
        int v29 = *(unsigned __int8 *)v25;
        goto LABEL_29;
      case 2:
        int v29 = *(unsigned __int16 *)v25;
        goto LABEL_29;
      case 3:
        int v29 = *(unsigned __int16 *)v25 | (*(unsigned __int8 *)((v24 & v8) + 2) << 16);
        goto LABEL_29;
      case 4:
        int v29 = *(_DWORD *)v25;
LABEL_29:
        int v33 = (v29 | (v27 << (8 * v13))) + 3;
        unsigned int v26 = v29 + 3;
        if (v13 < 4) {
          unsigned int v26 = v33;
        }
        break;
      default:
        break;
    }
  }
  if (v26 == 2)
  {
    *(void *)uint64_t v23 = *(void *)v25;
    uint64_t v78 = v11;
    unint64_t v35 = (v10 + v23) & v20;
    uint64_t v36 = v5;
    unint64_t v37 = (v10 + v25) & v20;
    unsigned int v38 = *(void (**)(unint64_t, unint64_t))(v36 + 16);
    uint64_t v39 = v4;
    v38(v35, v37);
    unint64_t v40 = v78 + v6 + v35;
    uint64_t v3 = a1;
    uint64_t v21 = v13 + 1;
    ((void (*)(unint64_t, unint64_t, uint64_t))v38)(v40 & ~v6, (v78 + v6 + v37) & ~v6, v39);
    char v34 = 2;
  }
  else
  {
    *(void *)uint64_t v23 = *(void *)v25;
    if (v26 == 1)
    {
      char v34 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 16))((v10 + v23) & v20, (v10 + v25) & v20);
      char v34 = 0;
    }
  }
  *(unsigned char *)(v23 + v13) = v34;
  uint64_t v41 = (v23 | 7) + v21;
  uint64_t v42 = (v25 | 7) + v21;
  char v43 = 1;
LABEL_65:
  uint64_t v66 = (void *)(v41 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v67 = (void *)(v42 & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v66 = *v67;
  *(void *)(((unint64_t)v66 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v67 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v3 + v81) = v43;
  return v3;
}

long long *sub_1A72ECEF8(long long *a1, long long *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if (a1 == a2) {
    return v3;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v104 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v104 + 80);
  uint64_t v7 = v6 | 7;
  uint64_t v8 = ~(v6 | 7);
  uint64_t v9 = v6 + 8;
  uint64_t v10 = *(void *)(v104 + 64);
  unint64_t v11 = ((v6 + 8) & ~v6) + v10;
  uint64_t v101 = v10;
  if (v11 <= ((v11 + v6) & ~v6) + v10) {
    unint64_t v11 = ((v11 + v6) & ~v6) + v10;
  }
  if (v11 <= 8) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = v11;
  }
  unint64_t v13 = (((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v14 = v13 + (((v6 | 7) + 17) & ~(v6 | 7));
  unint64_t v103 = v13;
  if (v14 <= ((v14 + v7) & ~v7) + v13) {
    unint64_t v14 = ((v14 + v7) & ~v7) + v13;
  }
  unsigned int v15 = *((unsigned __int8 *)a1 + v14);
  unint64_t v105 = v14;
  uint64_t v16 = v14 & 0xFFFFFFF8;
  if (v15 >= 2 && v16 != 0) {
    unsigned int v15 = *(_DWORD *)a1 + 2;
  }
  uint64_t v18 = ~v6;
  uint64_t v102 = (uint64_t)a1 + v7 + 17;
  uint64_t v19 = v102 & v8;
  unsigned int v20 = *(unsigned __int8 *)((v102 & v8) + v12);
  if (v15 == 1)
  {
    unsigned int v21 = v20 - 3;
    if (v20 >= 3)
    {
      if (v12 <= 3) {
        uint64_t v22 = v12;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *(unsigned __int8 *)v19;
          goto LABEL_30;
        case 2:
          int v23 = *(unsigned __int16 *)v19;
          goto LABEL_30;
        case 3:
          int v23 = *(unsigned __int16 *)v19 | (*(unsigned __int8 *)((v102 & v8) + 2) << 16);
          goto LABEL_30;
        case 4:
          int v23 = *(_DWORD *)v19;
LABEL_30:
          int v27 = (v23 | (v21 << (8 * v12))) + 3;
          unsigned int v20 = v23 + 3;
          if (v12 < 4) {
            unsigned int v20 = v27;
          }
          break;
        default:
          break;
      }
    }
    if (v20 != 2)
    {
      if (v20 != 1)
      {
        unint64_t v28 = v9 + v19;
LABEL_60:
        (*(void (**)(unint64_t, uint64_t))(v104 + 8))(v28 & v18, v5);
LABEL_63:
        uint64_t v8 = ~(v6 | 7);
        goto LABEL_64;
      }
      goto LABEL_64;
    }
    unint64_t v29 = v9 + v19;
LABEL_62:
    uint64_t v96 = v9;
    uint64_t v98 = (unsigned __int8 *)v19;
    uint64_t v41 = v18;
    uint64_t v42 = v5;
    unint64_t v43 = v29 & v41;
    int v44 = *(void (**)(unint64_t, uint64_t))(v104 + 8);
    v44(v29 & v41, v42);
    unint64_t v45 = v101 + v6 + v43;
    uint64_t v5 = v42;
    uint64_t v18 = v41;
    uint64_t v19 = (uint64_t)v98;
    v44(v45 & v18, v5);
    uint64_t v9 = v96;
    goto LABEL_63;
  }
  unsigned int v24 = v20 - 3;
  if (v20 >= 3)
  {
    if (v12 <= 3) {
      uint64_t v25 = v12;
    }
    else {
      uint64_t v25 = 4;
    }
    switch(v25)
    {
      case 1:
        int v26 = *(unsigned __int8 *)v19;
        goto LABEL_39;
      case 2:
        int v26 = *(unsigned __int16 *)v19;
        goto LABEL_39;
      case 3:
        int v26 = *(unsigned __int16 *)v19 | (*(unsigned __int8 *)((v102 & v8) + 2) << 16);
        goto LABEL_39;
      case 4:
        int v26 = *(_DWORD *)v19;
LABEL_39:
        int v30 = (v26 | (v24 << (8 * v12))) + 3;
        unsigned int v20 = v26 + 3;
        if (v12 < 4) {
          unsigned int v20 = v30;
        }
        break;
      default:
        break;
    }
  }
  if (v20 == 2)
  {
    uint64_t v97 = (unsigned __int8 *)(v102 & v8);
    uint64_t v31 = *(void *)(a3 + 16);
    unint64_t v32 = (v9 + v19) & ~v6;
    int v33 = *(void (**)(unint64_t, uint64_t))(v104 + 8);
    v33(v32, v31);
    unint64_t v34 = v101 + v6 + v32;
    uint64_t v5 = v31;
    uint64_t v18 = ~v6;
    uint64_t v19 = (uint64_t)v97;
    v33(v34 & ~v6, v5);
    uint64_t v9 = v6 + 8;
  }
  else
  {
    if (v20 == 1) {
      goto LABEL_46;
    }
    (*(void (**)(uint64_t, uint64_t))(v104 + 8))((v9 + v19) & v18, v5);
  }
  uint64_t v8 = ~(v6 | 7);
LABEL_46:
  unint64_t v35 = (unsigned __int8 *)(((v102 | v6) + v103) & v8);
  unsigned int v36 = v35[v12];
  unsigned int v37 = v36 - 3;
  if (v36 >= 3)
  {
    if (v12 <= 3) {
      uint64_t v38 = v12;
    }
    else {
      uint64_t v38 = 4;
    }
    switch(v38)
    {
      case 1:
        int v39 = *v35;
        goto LABEL_55;
      case 2:
        int v39 = *(unsigned __int16 *)v35;
        goto LABEL_55;
      case 3:
        int v39 = *(unsigned __int16 *)v35 | (*(unsigned __int8 *)((((v102 | v6) + v103) & v8) + 2) << 16);
        goto LABEL_55;
      case 4:
        int v39 = *(_DWORD *)v35;
LABEL_55:
        int v40 = (v39 | (v37 << (8 * v12))) + 3;
        unsigned int v36 = v39 + 3;
        if (v12 < 4) {
          unsigned int v36 = v40;
        }
        break;
      default:
        break;
    }
  }
  if (v36 == 2)
  {
    unint64_t v29 = (unint64_t)&v35[v9];
    goto LABEL_62;
  }
  if (v36 != 1)
  {
    unint64_t v28 = (unint64_t)&v35[v9];
    goto LABEL_60;
  }
LABEL_64:
  unsigned int v46 = *((unsigned __int8 *)a2 + v105);
  if (v16) {
    BOOL v47 = v46 >= 2;
  }
  else {
    BOOL v47 = 0;
  }
  if (v47) {
    unsigned int v46 = *(_DWORD *)a2 + 2;
  }
  uint64_t v48 = v12 + 1;
  long long v49 = *a2;
  *((unsigned char *)v3 + 16) = *((unsigned char *)a2 + 16);
  *uint64_t v3 = v49;
  uint64_t v50 = (uint64_t)a2 + v7 + 17;
  uint64_t v51 = v50 & v8;
  unsigned int v52 = *(unsigned __int8 *)((v50 & v8) + v12);
  if (v46 == 1)
  {
    unsigned int v53 = v52 - 3;
    if (v52 >= 3)
    {
      if (v12 <= 3) {
        uint64_t v54 = v12;
      }
      else {
        uint64_t v54 = 4;
      }
      switch(v54)
      {
        case 1:
          int v55 = *(unsigned __int8 *)v51;
          goto LABEL_86;
        case 2:
          int v55 = *(unsigned __int16 *)v51;
          goto LABEL_86;
        case 3:
          int v55 = *(unsigned __int16 *)v51 | (*(unsigned __int8 *)((v50 & v8) + 2) << 16);
          goto LABEL_86;
        case 4:
          int v55 = *(_DWORD *)v51;
LABEL_86:
          int v59 = (v55 | (v53 << (8 * v12))) + 3;
          unsigned int v52 = v55 + 3;
          if (v12 < 4) {
            unsigned int v52 = v59;
          }
          break;
        default:
          break;
      }
    }
    if (v52 == 2)
    {
      *(void *)uint64_t v19 = *(void *)v51;
      unint64_t v61 = (v9 + v19) & v18;
      unint64_t v99 = (unsigned __int8 *)v19;
      uint64_t v62 = v18;
      uint64_t v63 = v5;
      unint64_t v64 = (v9 + v51) & v62;
      unint64_t v65 = *(void (**)(unint64_t, unint64_t, uint64_t))(v104 + 16);
      v65(v61, v64, v63);
      unint64_t v66 = (v101 + v6 + v61) & v62;
      unint64_t v67 = (v101 + v6 + v64) & v62;
      uint64_t v19 = (uint64_t)v99;
      v65(v66, v67, v63);
      uint64_t v48 = v12 + 1;
      char v60 = 2;
    }
    else
    {
      *(void *)uint64_t v19 = *(void *)v51;
      if (v52 == 1)
      {
        char v60 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 16))((v9 + v19) & v18, (v9 + v51) & v18, v5);
        char v60 = 0;
        uint64_t v48 = v12 + 1;
      }
    }
    *(unsigned char *)(v19 + v12) = v60;
    uint64_t v68 = (v19 | 7) + v48;
    uint64_t v69 = (v51 | 7) + v48;
    char v70 = 1;
  }
  else
  {
    unsigned int v56 = v52 - 3;
    if (v52 >= 3)
    {
      if (v12 <= 3) {
        uint64_t v57 = v12;
      }
      else {
        uint64_t v57 = 4;
      }
      switch(v57)
      {
        case 1:
          int v58 = *(unsigned __int8 *)v51;
          goto LABEL_97;
        case 2:
          int v58 = *(unsigned __int16 *)v51;
          goto LABEL_97;
        case 3:
          int v58 = *(unsigned __int16 *)v51 | (*(unsigned __int8 *)((v50 & v8) + 2) << 16);
          goto LABEL_97;
        case 4:
          int v58 = *(_DWORD *)v51;
LABEL_97:
          if (v12 < 4) {
            v58 |= v56 << (8 * v12);
          }
          unsigned int v52 = v58 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v95 = v18;
    if (v52 == 2)
    {
      *(void *)uint64_t v19 = *(void *)v51;
      unint64_t v72 = (v9 + v19) & v18;
      unint64_t v100 = (unsigned __int8 *)v19;
      uint64_t v73 = v5;
      unint64_t v74 = (v9 + v51) & v18;
      uint64_t v94 = v3;
      uint64_t v75 = *(void (**)(unint64_t, unint64_t, uint64_t))(v104 + 16);
      v75(v72, v74, v73);
      unint64_t v76 = v101 + v6 + v74;
      uint64_t v5 = v73;
      uint64_t v19 = (uint64_t)v100;
      v75((v101 + v6 + v72) & v18, v76 & v18, v5);
      uint64_t v3 = v94;
      uint64_t v48 = v12 + 1;
      uint64_t v8 = ~(v6 | 7);
      char v71 = 2;
    }
    else
    {
      *(void *)uint64_t v19 = *(void *)v51;
      if (v52 == 1)
      {
        char v71 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 16))((v9 + v19) & v18, (v9 + v51) & v18, v5);
        char v71 = 0;
        uint64_t v8 = ~(v6 | 7);
        uint64_t v48 = v12 + 1;
      }
    }
    *(unsigned char *)(v19 + v12) = v71;
    uint64_t v77 = (void *)(((v19 | 7) + v48) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v78 = (void *)(((v51 | 7) + v48) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v77 = *v78;
    *(void *)(((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v78 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v79 = (void *)(((v102 | v6) + v103) & v8);
    uint64_t v80 = (unsigned __int8 *)(((v50 | v6) + v103) & v8);
    unsigned int v81 = v80[v12];
    unsigned int v82 = v81 - 3;
    if (v81 >= 3)
    {
      if (v12 <= 3) {
        uint64_t v83 = v12;
      }
      else {
        uint64_t v83 = 4;
      }
      switch(v83)
      {
        case 1:
          int v84 = *v80;
          goto LABEL_114;
        case 2:
          int v84 = *(unsigned __int16 *)v80;
          goto LABEL_114;
        case 3:
          int v84 = *(unsigned __int16 *)v80 | (v80[2] << 16);
          goto LABEL_114;
        case 4:
          int v84 = *(_DWORD *)v80;
LABEL_114:
          int v85 = (v84 | (v82 << (8 * v12))) + 3;
          unsigned int v81 = v84 + 3;
          if (v12 < 4) {
            unsigned int v81 = v85;
          }
          break;
        default:
          break;
      }
    }
    if (v81 == 2)
    {
      *uint64_t v79 = *(void *)v80;
      unint64_t v86 = ((unint64_t)v79 + v9) & v95;
      uint64_t v87 = v5;
      uint64_t v93 = v5;
      unint64_t v88 = (unint64_t)&v80[v9] & v95;
      uint64_t v89 = *(void (**)(unint64_t, unint64_t, uint64_t))(v104 + 16);
      v89(v86, v88, v87);
      v89((v101 + v6 + v86) & v95, (v101 + v6 + v88) & v95, v93);
      LOBYTE(v81) = 2;
    }
    else
    {
      *uint64_t v79 = *(void *)v80;
      if (v81 != 1)
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v104 + 16))(((unint64_t)v79 + v9) & v95, (unint64_t)&v80[v9] & v95, v5);
        LOBYTE(v81) = 0;
      }
    }
    char v70 = 0;
    *((unsigned char *)v79 + v12) = v81;
    uint64_t v68 = (uint64_t)v79 + v12 + 8;
    uint64_t v69 = (uint64_t)&v80[v12 + 8];
  }
  uint64_t v90 = (void *)(v68 & 0xFFFFFFFFFFFFFFF8);
  id v91 = (void *)(v69 & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v90 = *v91;
  *(void *)(((unint64_t)v90 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v91 + 15) & 0xFFFFFFFFFFFFFFF8);
  *((unsigned char *)v3 + v105) = v70;
  return v3;
}

uint64_t sub_1A72ED86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v6 | 7;
  uint64_t v8 = ~(v6 | 7);
  uint64_t v9 = ((v6 | 7) + 17) & v8;
  uint64_t v10 = v6 + 8;
  uint64_t v11 = *(void *)(v5 + 64);
  unint64_t v12 = ((v6 + 8) & ~v6) + v11;
  if (v12 <= ((v12 + v6) & ~v6) + v11) {
    unint64_t v12 = ((v12 + v6) & ~v6) + v11;
  }
  if (v12 <= 8) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = v12;
  }
  unint64_t v14 = (((v13 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v15 = v14 + v9;
  unint64_t v16 = ((v14 + v9 + v7) & ~v7) + v14;
  if (v15 > v16) {
    unint64_t v16 = v15;
  }
  unsigned int v17 = *(unsigned __int8 *)(a2 + v16);
  unint64_t v81 = v16;
  uint64_t v18 = v16 & 0xFFFFFFF8;
  if (v17 >= 2 && v18 != 0) {
    unsigned int v17 = *(_DWORD *)a2 + 2;
  }
  uint64_t v20 = ~v6;
  uint64_t v21 = v13 + 1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v22 = a1 + v7 + 17;
  uint64_t v23 = v22 & v8;
  uint64_t v24 = a2 + v7 + 17;
  uint64_t v25 = v24 & v8;
  unsigned int v26 = *(unsigned __int8 *)((v24 & v8) + v13);
  if (v17 != 1)
  {
    unsigned int v30 = v26 - 3;
    if (v26 >= 3)
    {
      if (v13 <= 3) {
        uint64_t v31 = v13;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *(unsigned __int8 *)v25;
          goto LABEL_40;
        case 2:
          int v32 = *(unsigned __int16 *)v25;
          goto LABEL_40;
        case 3:
          int v32 = *(unsigned __int16 *)v25 | (*(unsigned __int8 *)((v24 & v8) + 2) << 16);
          goto LABEL_40;
        case 4:
          int v32 = *(_DWORD *)v25;
LABEL_40:
          int v44 = (v32 | (v30 << (8 * v13))) + 3;
          unsigned int v26 = v32 + 3;
          if (v13 < 4) {
            unsigned int v26 = v44;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v80 = v4;
    uint64_t v79 = v11;
    uint64_t v75 = ~v6;
    if (v26 == 2)
    {
      *(void *)uint64_t v23 = *(void *)v25;
      unint64_t v69 = (v10 + v23) & v20;
      unint64_t v70 = (v10 + v25) & v20;
      uint64_t v71 = v5;
      unint64_t v72 = *(void (**)(void))(v5 + 32);
      uint64_t v46 = v4;
      uint64_t v73 = v24;
      uint64_t v47 = v11;
      v72();
      uint64_t v48 = v47 + v6;
      uint64_t v21 = v13 + 1;
      uint64_t v49 = v46;
      uint64_t v5 = v71;
      ((void (*)(unint64_t, unint64_t, uint64_t))v72)((v48 + v69) & ~v6, (v48 + v70) & ~v6, v49);
      uint64_t v24 = v73;
      char v45 = 2;
    }
    else if (v26 == 1)
    {
      *(void *)uint64_t v23 = *(void *)v25;
      char v45 = 1;
    }
    else
    {
      uint64_t v74 = v24;
      *(void *)uint64_t v23 = *(void *)v25;
      (*(void (**)(uint64_t, uint64_t))(v5 + 32))((v10 + v23) & v20, (v10 + v25) & v20);
      char v45 = 0;
      uint64_t v24 = v74;
    }
    *(unsigned char *)(v23 + v13) = v45;
    uint64_t v50 = (void *)(((v23 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v51 = (void *)(((v25 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v50 = *v51;
    *(void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v52 = (void *)(((v22 | v6) + v14) & v8);
    unsigned int v53 = (void *)(((v24 | v6) + v14) & v8);
    unsigned int v54 = *((unsigned __int8 *)v53 + v13);
    unsigned int v55 = v54 - 3;
    if (v54 < 3)
    {
      uint64_t v57 = v6 + 8;
      uint64_t v58 = v80;
LABEL_54:
      if (v54 == 2)
      {
LABEL_63:
        *unsigned int v52 = *v53;
        uint64_t v77 = v3;
        unint64_t v61 = ((unint64_t)v52 + v57) & v75;
        uint64_t v62 = v5;
        unint64_t v63 = ((unint64_t)v53 + v57) & v75;
        unint64_t v64 = *(void (**)(unint64_t, unint64_t, uint64_t))(v62 + 32);
        v64(v61, v63, v58);
        unint64_t v65 = v79 + v6 + v61;
        uint64_t v3 = v77;
        v64(v65 & v75, (v79 + v6 + v63) & v75, v58);
        LOBYTE(v54) = 2;
LABEL_64:
        char v43 = 0;
        *((unsigned char *)v52 + v13) = v54;
        uint64_t v41 = (uint64_t)v52 + v13 + 8;
        uint64_t v42 = (uint64_t)v53 + v13 + 8;
        goto LABEL_65;
      }
    }
    else
    {
      if (v13 <= 3) {
        uint64_t v56 = v13;
      }
      else {
        uint64_t v56 = 4;
      }
      uint64_t v57 = v6 + 8;
      uint64_t v58 = v80;
      switch(v56)
      {
        case 1:
          int v59 = *(unsigned __int8 *)v53;
          break;
        case 2:
          int v59 = *(unsigned __int16 *)v53;
          break;
        case 3:
          int v59 = *(unsigned __int16 *)v53 | (*(unsigned __int8 *)((((v24 | v6) + v14) & v8) + 2) << 16);
          break;
        case 4:
          int v59 = *(_DWORD *)v53;
          break;
        default:
          goto LABEL_54;
      }
      int v60 = (v59 | (v55 << (8 * v13))) + 3;
      unsigned int v54 = v59 + 3;
      if (v13 < 4) {
        unsigned int v54 = v60;
      }
      if (v54 == 2) {
        goto LABEL_63;
      }
    }
    *unsigned int v52 = *v53;
    if (v54 != 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)v52 + v57) & v75, ((unint64_t)v53 + v57) & v75, v58);
      LOBYTE(v54) = 0;
    }
    goto LABEL_64;
  }
  unsigned int v27 = v26 - 3;
  if (v26 >= 3)
  {
    if (v13 <= 3) {
      uint64_t v28 = v13;
    }
    else {
      uint64_t v28 = 4;
    }
    switch(v28)
    {
      case 1:
        int v29 = *(unsigned __int8 *)v25;
        goto LABEL_29;
      case 2:
        int v29 = *(unsigned __int16 *)v25;
        goto LABEL_29;
      case 3:
        int v29 = *(unsigned __int16 *)v25 | (*(unsigned __int8 *)((v24 & v8) + 2) << 16);
        goto LABEL_29;
      case 4:
        int v29 = *(_DWORD *)v25;
LABEL_29:
        int v33 = (v29 | (v27 << (8 * v13))) + 3;
        unsigned int v26 = v29 + 3;
        if (v13 < 4) {
          unsigned int v26 = v33;
        }
        break;
      default:
        break;
    }
  }
  if (v26 == 2)
  {
    *(void *)uint64_t v23 = *(void *)v25;
    uint64_t v78 = v11;
    unint64_t v35 = (v10 + v23) & v20;
    uint64_t v36 = v5;
    unint64_t v37 = (v10 + v25) & v20;
    uint64_t v38 = *(void (**)(unint64_t, unint64_t))(v36 + 32);
    uint64_t v39 = v4;
    v38(v35, v37);
    unint64_t v40 = v78 + v6 + v35;
    uint64_t v3 = a1;
    uint64_t v21 = v13 + 1;
    ((void (*)(unint64_t, unint64_t, uint64_t))v38)(v40 & ~v6, (v78 + v6 + v37) & ~v6, v39);
    char v34 = 2;
  }
  else
  {
    *(void *)uint64_t v23 = *(void *)v25;
    if (v26 == 1)
    {
      char v34 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 32))((v10 + v23) & v20, (v10 + v25) & v20);
      char v34 = 0;
    }
  }
  *(unsigned char *)(v23 + v13) = v34;
  uint64_t v41 = (v23 | 7) + v21;
  uint64_t v42 = (v25 | 7) + v21;
  char v43 = 1;
LABEL_65:
  unint64_t v66 = (void *)(v41 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v67 = (void *)(v42 & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v66 = *v67;
  *(void *)(((unint64_t)v66 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v67 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v3 + v81) = v43;
  return v3;
}

_DWORD *sub_1A72EDE98(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if (a1 == (_DWORD *)a2) {
    return v3;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v103 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v103 + 80);
  uint64_t v7 = v6 | 7;
  uint64_t v8 = ~(v6 | 7);
  uint64_t v9 = v6 + 8;
  uint64_t v10 = *(void *)(v103 + 64);
  unint64_t v11 = ((v6 + 8) & ~v6) + v10;
  uint64_t v100 = v10;
  if (v11 <= ((v11 + v6) & ~v6) + v10) {
    unint64_t v11 = ((v11 + v6) & ~v6) + v10;
  }
  if (v11 <= 8) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = v11;
  }
  unint64_t v13 = (((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v14 = v13 + (((v6 | 7) + 17) & ~(v6 | 7));
  unint64_t v102 = v13;
  if (v14 <= ((v14 + v7) & ~v7) + v13) {
    unint64_t v14 = ((v14 + v7) & ~v7) + v13;
  }
  unsigned int v15 = *((unsigned __int8 *)a1 + v14);
  unint64_t v104 = v14;
  uint64_t v16 = v14 & 0xFFFFFFF8;
  if (v15 >= 2 && v16 != 0) {
    unsigned int v15 = *a1 + 2;
  }
  uint64_t v18 = ~v6;
  uint64_t v101 = (uint64_t)a1 + v7 + 17;
  uint64_t v19 = v101 & v8;
  unsigned int v20 = *(unsigned __int8 *)((v101 & v8) + v12);
  if (v15 == 1)
  {
    unsigned int v21 = v20 - 3;
    if (v20 >= 3)
    {
      if (v12 <= 3) {
        uint64_t v22 = v12;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *(unsigned __int8 *)v19;
          goto LABEL_30;
        case 2:
          int v23 = *(unsigned __int16 *)v19;
          goto LABEL_30;
        case 3:
          int v23 = *(unsigned __int16 *)v19 | (*(unsigned __int8 *)((v101 & v8) + 2) << 16);
          goto LABEL_30;
        case 4:
          int v23 = *(_DWORD *)v19;
LABEL_30:
          int v27 = (v23 | (v21 << (8 * v12))) + 3;
          unsigned int v20 = v23 + 3;
          if (v12 < 4) {
            unsigned int v20 = v27;
          }
          break;
        default:
          break;
      }
    }
    if (v20 != 2)
    {
      if (v20 != 1)
      {
        unint64_t v28 = v9 + v19;
LABEL_60:
        (*(void (**)(unint64_t, uint64_t))(v103 + 8))(v28 & v18, v5);
LABEL_63:
        uint64_t v8 = ~(v6 | 7);
        goto LABEL_64;
      }
      goto LABEL_64;
    }
    unint64_t v29 = v9 + v19;
LABEL_62:
    uint64_t v95 = v9;
    uint64_t v97 = (unsigned __int8 *)v19;
    uint64_t v41 = v18;
    uint64_t v42 = v5;
    unint64_t v43 = v29 & v41;
    int v44 = *(void (**)(unint64_t, uint64_t))(v103 + 8);
    v44(v29 & v41, v42);
    unint64_t v45 = v100 + v6 + v43;
    uint64_t v5 = v42;
    uint64_t v18 = v41;
    uint64_t v19 = (uint64_t)v97;
    v44(v45 & v18, v5);
    uint64_t v9 = v95;
    goto LABEL_63;
  }
  unsigned int v24 = v20 - 3;
  if (v20 >= 3)
  {
    if (v12 <= 3) {
      uint64_t v25 = v12;
    }
    else {
      uint64_t v25 = 4;
    }
    switch(v25)
    {
      case 1:
        int v26 = *(unsigned __int8 *)v19;
        goto LABEL_39;
      case 2:
        int v26 = *(unsigned __int16 *)v19;
        goto LABEL_39;
      case 3:
        int v26 = *(unsigned __int16 *)v19 | (*(unsigned __int8 *)((v101 & v8) + 2) << 16);
        goto LABEL_39;
      case 4:
        int v26 = *(_DWORD *)v19;
LABEL_39:
        int v30 = (v26 | (v24 << (8 * v12))) + 3;
        unsigned int v20 = v26 + 3;
        if (v12 < 4) {
          unsigned int v20 = v30;
        }
        break;
      default:
        break;
    }
  }
  if (v20 == 2)
  {
    uint64_t v96 = (unsigned __int8 *)(v101 & v8);
    uint64_t v31 = *(void *)(a3 + 16);
    unint64_t v32 = (v9 + v19) & ~v6;
    int v33 = *(void (**)(unint64_t, uint64_t))(v103 + 8);
    v33(v32, v31);
    unint64_t v34 = v100 + v6 + v32;
    uint64_t v5 = v31;
    uint64_t v18 = ~v6;
    uint64_t v19 = (uint64_t)v96;
    v33(v34 & ~v6, v5);
    uint64_t v9 = v6 + 8;
  }
  else
  {
    if (v20 == 1) {
      goto LABEL_46;
    }
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))((v9 + v19) & v18, v5);
  }
  uint64_t v8 = ~(v6 | 7);
LABEL_46:
  unint64_t v35 = (unsigned __int8 *)(((v101 | v6) + v102) & v8);
  unsigned int v36 = v35[v12];
  unsigned int v37 = v36 - 3;
  if (v36 >= 3)
  {
    if (v12 <= 3) {
      uint64_t v38 = v12;
    }
    else {
      uint64_t v38 = 4;
    }
    switch(v38)
    {
      case 1:
        int v39 = *v35;
        goto LABEL_55;
      case 2:
        int v39 = *(unsigned __int16 *)v35;
        goto LABEL_55;
      case 3:
        int v39 = *(unsigned __int16 *)v35 | (*(unsigned __int8 *)((((v101 | v6) + v102) & v8) + 2) << 16);
        goto LABEL_55;
      case 4:
        int v39 = *(_DWORD *)v35;
LABEL_55:
        int v40 = (v39 | (v37 << (8 * v12))) + 3;
        unsigned int v36 = v39 + 3;
        if (v12 < 4) {
          unsigned int v36 = v40;
        }
        break;
      default:
        break;
    }
  }
  if (v36 == 2)
  {
    unint64_t v29 = (unint64_t)&v35[v9];
    goto LABEL_62;
  }
  if (v36 != 1)
  {
    unint64_t v28 = (unint64_t)&v35[v9];
    goto LABEL_60;
  }
LABEL_64:
  unsigned int v46 = *(unsigned __int8 *)(a2 + v104);
  if (v16) {
    BOOL v47 = v46 >= 2;
  }
  else {
    BOOL v47 = 0;
  }
  if (v47) {
    unsigned int v46 = *(_DWORD *)a2 + 2;
  }
  uint64_t v48 = v12 + 1;
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a2;
  *((unsigned char *)v3 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v49 = a2 + v7 + 17;
  uint64_t v50 = v49 & v8;
  unsigned int v51 = *(unsigned __int8 *)((v49 & v8) + v12);
  if (v46 == 1)
  {
    unsigned int v52 = v51 - 3;
    if (v51 >= 3)
    {
      if (v12 <= 3) {
        uint64_t v53 = v12;
      }
      else {
        uint64_t v53 = 4;
      }
      switch(v53)
      {
        case 1:
          int v54 = *(unsigned __int8 *)v50;
          goto LABEL_86;
        case 2:
          int v54 = *(unsigned __int16 *)v50;
          goto LABEL_86;
        case 3:
          int v54 = *(unsigned __int16 *)v50 | (*(unsigned __int8 *)((v49 & v8) + 2) << 16);
          goto LABEL_86;
        case 4:
          int v54 = *(_DWORD *)v50;
LABEL_86:
          int v58 = (v54 | (v52 << (8 * v12))) + 3;
          unsigned int v51 = v54 + 3;
          if (v12 < 4) {
            unsigned int v51 = v58;
          }
          break;
        default:
          break;
      }
    }
    if (v51 == 2)
    {
      *(void *)uint64_t v19 = *(void *)v50;
      unint64_t v60 = (v9 + v19) & v18;
      uint64_t v98 = (unsigned __int8 *)v19;
      uint64_t v61 = v18;
      uint64_t v62 = v5;
      unint64_t v63 = (v9 + v50) & v61;
      unint64_t v64 = *(void (**)(unint64_t, unint64_t, uint64_t))(v103 + 32);
      v64(v60, v63, v62);
      unint64_t v65 = (v100 + v6 + v60) & v61;
      unint64_t v66 = (v100 + v6 + v63) & v61;
      uint64_t v19 = (uint64_t)v98;
      v64(v65, v66, v62);
      uint64_t v48 = v12 + 1;
      char v59 = 2;
    }
    else
    {
      *(void *)uint64_t v19 = *(void *)v50;
      if (v51 == 1)
      {
        char v59 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 32))((v9 + v19) & v18, (v9 + v50) & v18, v5);
        char v59 = 0;
        uint64_t v48 = v12 + 1;
      }
    }
    *(unsigned char *)(v19 + v12) = v59;
    uint64_t v67 = (v19 | 7) + v48;
    uint64_t v68 = (v50 | 7) + v48;
    char v69 = 1;
  }
  else
  {
    unsigned int v55 = v51 - 3;
    if (v51 >= 3)
    {
      if (v12 <= 3) {
        uint64_t v56 = v12;
      }
      else {
        uint64_t v56 = 4;
      }
      switch(v56)
      {
        case 1:
          int v57 = *(unsigned __int8 *)v50;
          goto LABEL_97;
        case 2:
          int v57 = *(unsigned __int16 *)v50;
          goto LABEL_97;
        case 3:
          int v57 = *(unsigned __int16 *)v50 | (*(unsigned __int8 *)((v49 & v8) + 2) << 16);
          goto LABEL_97;
        case 4:
          int v57 = *(_DWORD *)v50;
LABEL_97:
          if (v12 < 4) {
            v57 |= v55 << (8 * v12);
          }
          unsigned int v51 = v57 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v94 = v18;
    if (v51 == 2)
    {
      *(void *)uint64_t v19 = *(void *)v50;
      unint64_t v71 = (v9 + v19) & v18;
      unint64_t v99 = (unsigned __int8 *)v19;
      uint64_t v72 = v5;
      unint64_t v73 = (v9 + v50) & v18;
      uint64_t v93 = v3;
      uint64_t v74 = *(void (**)(unint64_t, unint64_t, uint64_t))(v103 + 32);
      v74(v71, v73, v72);
      unint64_t v75 = v100 + v6 + v73;
      uint64_t v5 = v72;
      uint64_t v19 = (uint64_t)v99;
      v74((v100 + v6 + v71) & v18, v75 & v18, v5);
      uint64_t v3 = v93;
      uint64_t v48 = v12 + 1;
      uint64_t v8 = ~(v6 | 7);
      char v70 = 2;
    }
    else
    {
      *(void *)uint64_t v19 = *(void *)v50;
      if (v51 == 1)
      {
        char v70 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 32))((v9 + v19) & v18, (v9 + v50) & v18, v5);
        char v70 = 0;
        uint64_t v8 = ~(v6 | 7);
        uint64_t v48 = v12 + 1;
      }
    }
    *(unsigned char *)(v19 + v12) = v70;
    unint64_t v76 = (void *)(((v19 | 7) + v48) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v77 = (void *)(((v50 | 7) + v48) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v76 = *v77;
    *(void *)(((unint64_t)v76 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v78 = (void *)(((v101 | v6) + v102) & v8);
    uint64_t v79 = (unsigned __int8 *)(((v49 | v6) + v102) & v8);
    unsigned int v80 = v79[v12];
    unsigned int v81 = v80 - 3;
    if (v80 >= 3)
    {
      if (v12 <= 3) {
        uint64_t v82 = v12;
      }
      else {
        uint64_t v82 = 4;
      }
      switch(v82)
      {
        case 1:
          int v83 = *v79;
          goto LABEL_114;
        case 2:
          int v83 = *(unsigned __int16 *)v79;
          goto LABEL_114;
        case 3:
          int v83 = *(unsigned __int16 *)v79 | (v79[2] << 16);
          goto LABEL_114;
        case 4:
          int v83 = *(_DWORD *)v79;
LABEL_114:
          int v84 = (v83 | (v81 << (8 * v12))) + 3;
          unsigned int v80 = v83 + 3;
          if (v12 < 4) {
            unsigned int v80 = v84;
          }
          break;
        default:
          break;
      }
    }
    if (v80 == 2)
    {
      *uint64_t v78 = *(void *)v79;
      unint64_t v85 = ((unint64_t)v78 + v9) & v94;
      uint64_t v86 = v5;
      uint64_t v92 = v5;
      unint64_t v87 = (unint64_t)&v79[v9] & v94;
      unint64_t v88 = *(void (**)(unint64_t, unint64_t, uint64_t))(v103 + 32);
      v88(v85, v87, v86);
      v88((v100 + v6 + v85) & v94, (v100 + v6 + v87) & v94, v92);
      LOBYTE(v80) = 2;
    }
    else
    {
      *uint64_t v78 = *(void *)v79;
      if (v80 != 1)
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v103 + 32))(((unint64_t)v78 + v9) & v94, (unint64_t)&v79[v9] & v94, v5);
        LOBYTE(v80) = 0;
      }
    }
    char v69 = 0;
    *((unsigned char *)v78 + v12) = v80;
    uint64_t v67 = (uint64_t)v78 + v12 + 8;
    uint64_t v68 = (uint64_t)&v79[v12 + 8];
  }
  uint64_t v89 = (void *)(v67 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v90 = (void *)(v68 & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v89 = *v90;
  *(void *)(((unint64_t)v89 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v90 + 15) & 0xFFFFFFFFFFFFFFF8);
  *((unsigned char *)v3 + v104) = v69;
  return v3;
}

uint64_t sub_1A72EE80C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80);
  uint64_t v4 = v3 | 7;
  uint64_t v5 = ((v3 | 7) + 17) & ~(v3 | 7);
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unint64_t v7 = ((v3 + 8) & ~v3) + v6;
  unint64_t v8 = ((v7 + v3) & ~v3) + v6;
  if (v7 > v8) {
    unint64_t v8 = v7;
  }
  if (v8 <= 8) {
    unint64_t v8 = 8;
  }
  unint64_t v9 = (((v8 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v10 = v9 + v5;
  unint64_t v11 = ((v9 + v5 + v4) & ~v4) + v9;
  if (v10 > v11) {
    unint64_t v11 = v10;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_27;
  }
  uint64_t v12 = v11 | 1;
  char v13 = 8 * (v11 | 1);
  if ((v11 | 1) <= 3)
  {
    unsigned int v16 = (a2 + ~(-1 << v13) - 254) >> v13;
    if (v16 > 0xFFFE)
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_27;
      }
      goto LABEL_18;
    }
    if (v16 > 0xFE)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_27;
      }
      goto LABEL_18;
    }
    if (!v16)
    {
LABEL_27:
      unsigned int v19 = *((unsigned __int8 *)a1 + v11);
      if (v19 >= 2) {
        return (v19 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_27;
  }
LABEL_18:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3)
  {
    int v17 = 0;
    LODWORD(v12) = 4;
  }
  switch((int)v12)
  {
    case 2:
      int v18 = *a1;
      break;
    case 3:
      int v18 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      break;
    case 4:
      int v18 = *(_DWORD *)a1;
      break;
    default:
      int v18 = *(unsigned __int8 *)a1;
      break;
  }
  return (v18 | v17) + 255;
}

void sub_1A72EE9B8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80);
  uint64_t v6 = v5 | 7;
  uint64_t v7 = ((v5 | 7) + 17) & ~(v5 | 7);
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v9 = ((v5 + 8) & ~v5) + v8;
  unint64_t v10 = ((v9 + v5) & ~v5) + v8;
  if (v9 > v10) {
    unint64_t v10 = v9;
  }
  if (v10 <= 8) {
    unint64_t v10 = 8;
  }
  unint64_t v11 = (((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v12 = v11 + v7;
  unint64_t v13 = ((v11 + v7 + v6) & ~v6) + v11;
  if (v12 > v13) {
    unint64_t v13 = v12;
  }
  size_t v14 = v13 | 1;
  if (a3 < 0xFF)
  {
    int v15 = 0;
  }
  else if (v14 <= 3)
  {
    unsigned int v18 = (a3 + ~(-1 << (8 * v14)) - 254) >> (8 * v14);
    if (v18 > 0xFFFE)
    {
      int v15 = 4;
    }
    else if (v18 >= 0xFF)
    {
      int v15 = 2;
    }
    else
    {
      int v15 = v18 != 0;
    }
  }
  else
  {
    int v15 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v16 = a2 - 255;
    if (v14 < 4)
    {
      int v17 = (v16 >> (8 * v14)) + 1;
      int v19 = v16 & ~(-1 << (8 * v14));
      bzero(a1, v14);
      if (v14 == 1)
      {
        *a1 = v19;
      }
      else
      {
        *(_WORD *)a1 = v19;
        a1[2] = BYTE2(v19);
      }
    }
    else
    {
      bzero(a1, v13 | 1);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v14] = v17;
        break;
      case 2:
        *(_WORD *)&a1[v14] = v17;
        break;
      case 3:
LABEL_35:
        __break(1u);
        JUMPOUT(0x1A72EEBF0);
      case 4:
        *(_DWORD *)&a1[v14] = v17;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v15)
    {
      case 1:
        a1[v14] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v14] = 0;
        goto LABEL_24;
      case 3:
        goto LABEL_35;
      case 4:
        *(_DWORD *)&a1[v14] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      default:
LABEL_24:
        if (a2) {
LABEL_25:
        }
          a1[v13] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1A72EEC18(_DWORD *a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80);
  uint64_t v3 = v2 | 7;
  uint64_t v4 = ((v2 | 7) + 17) & ~(v2 | 7);
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  unint64_t v6 = ((v2 + 8) & ~v2) + v5;
  unint64_t v7 = ((v6 + v2) & ~v2) + v5;
  if (v6 > v7) {
    unint64_t v7 = v6;
  }
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  unint64_t v8 = (((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v9 = v8 + v4;
  unint64_t v10 = ((v8 + v4 + v3) & ~v3) + v8;
  if (v9 <= v10) {
    unint64_t v11 = v10;
  }
  else {
    unint64_t v11 = v9;
  }
  uint64_t v12 = *((unsigned __int8 *)a1 + v11);
  uint64_t v13 = v11 & 0xFFFFFFF8;
  if (v12 >= 2 && v13 != 0) {
    return (*a1 + 2);
  }
  return v12;
}

void sub_1A72EECE4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80);
  uint64_t v5 = v4 | 7;
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v7 = ((v4 | 7) + 17) & ~(v4 | 7);
  unint64_t v8 = ((v4 + 8) & ~v4) + v6;
  unint64_t v9 = ((v8 + v4) & ~v4) + v6;
  if (a2 > 1)
  {
    if (v8 > v9) {
      unint64_t v9 = v8;
    }
    if (v9 <= 8) {
      unint64_t v9 = 8;
    }
    unint64_t v12 = (((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    size_t v13 = ((v12 + v7 + v5) & ~v5) + v12;
    if (v12 + v7 > v13) {
      size_t v13 = v12 + v7;
    }
    unsigned int v14 = a2 - 2;
    a1[v13] = 2;
    bzero(a1, v13);
    *(_DWORD *)a1 = v14;
  }
  else
  {
    if (v8 > v9) {
      unint64_t v9 = v8;
    }
    if (v9 <= 8) {
      unint64_t v9 = 8;
    }
    unint64_t v10 = (((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    unint64_t v11 = ((v10 + v7 + v5) & ~v5) + v10;
    if (v10 + v7 > v11) {
      unint64_t v11 = v10 + v7;
    }
    a1[v11] = a2;
  }
}

id REMMembership.toJSON()@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v42 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v45 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1A7571B60();
  uint64_t v5 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A7571BC0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v41 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  size_t v13 = (char *)&v39 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1210);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A7578D60;
  *(void *)(inited + 32) = 0x44497265626D656DLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v15 = objc_msgSend(v1, sel_memberIdentifier);
  sub_1A7571BB0();

  uint64_t v16 = sub_1A7571B80();
  uint64_t v18 = v17;
  int v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v44 = v8;
  int v40 = v19;
  v19(v13, v8);
  uint64_t v20 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v16;
  *(void *)(inited + 56) = v18;
  *(void *)(inited + 72) = v20;
  *(void *)(inited + 80) = 0x6465696669646F6DLL;
  *(void *)(inited + 88) = 0xEA00000000006E4FLL;
  id v21 = objc_msgSend(v2, sel_modifiedOn);
  sub_1A7571B20();

  sub_1A7571A50();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v43);
  *(void *)(inited + 120) = MEMORY[0x1E4FBB3D0];
  *(void *)(inited + 96) = v23;
  uint64_t v24 = inited;
  uint64_t v25 = v2;
  unint64_t v26 = sub_1A72B0944(v24);
  id v27 = objc_msgSend(v2, sel_groupIdentifier);
  if (v27)
  {
    unint64_t v28 = v27;
    sub_1A7571BB0();

    unint64_t v29 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v30 = (uint64_t)v45;
    uint64_t v31 = v44;
    v29(v45, v13, v44);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v30, 0, 1, v31);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v30, 1, v31) != 1)
    {
      unint64_t v32 = v41;
      v29(v41, (char *)v30, v31);
      uint64_t v33 = sub_1A7571B80();
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v48 = v33;
      *((void *)&v48 + 1) = v34;
      sub_1A72BEE44(&v48, v47);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v46 = v26;
      sub_1A72D65D4(v47, 0x444970756F7267, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
      unint64_t v26 = v46;
      swift_bridgeObjectRelease();
      v40(v32, v31);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v30 = (uint64_t)v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v45, 1, 1, v44);
  }
  sub_1A72EF338(v30);
LABEL_6:
  id result = objc_msgSend(v25, sel_isObsolete);
  if (result)
  {
    uint64_t v49 = MEMORY[0x1E4FBB390];
    LOBYTE(v48) = 1;
    sub_1A72BEE44(&v48, v47);
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v46 = v26;
    sub_1A72D65D4(v47, 0x656C6F73624F7369, 0xEA00000000006574, v37);
    unint64_t v26 = v46;
    id result = (id)swift_bridgeObjectRelease();
  }
  uint64_t v38 = v42;
  *uint64_t v42 = v26;
  *((unsigned char *)v38 + 8) = 0;
  return result;
}

uint64_t sub_1A72EF338(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *static REMMembership.fromJSON(_:)(unsigned char *a1)
{
  uint64_t v2 = sub_1A7571B60();
  uint64_t v60 = *(void *)(v2 - 8);
  uint64_t v61 = v2;
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  int v58 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v67 = (char *)&v54 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v54 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  char v59 = (char *)&v54 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v54 - v15;
  uint64_t v17 = sub_1A7571BC0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  id v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v54 - v22;
  if (a1[8])
  {
    sub_1A72EFD2C();
    swift_allocError();
    *(void *)uint64_t v24 = 0;
    *(void *)(v24 + 8) = 0;
    char v25 = 3;
LABEL_10:
    *(unsigned char *)(v24 + 16) = v25;
    swift_willThrow();
    return a1;
  }
  a1 = *(unsigned char **)a1;
  if (!*((void *)a1 + 2) || (unint64_t v26 = sub_1A72B2210(0x44497265626D656DLL, 0xE800000000000000), (v27 & 1) == 0))
  {
    sub_1A72EFD2C();
    swift_allocError();
    *(_OWORD *)uint64_t v24 = xmmword_1A7579660;
    char v25 = 1;
    goto LABEL_10;
  }
  sub_1A72BEE98(*((void *)a1 + 7) + 32 * v26, (uint64_t)v65);
  sub_1A72BEE44(v65, v66);
  sub_1A72BEE98((uint64_t)v66, (uint64_t)v65);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  int v57 = v23;
  sub_1A7571B70();
  swift_bridgeObjectRelease();
  unsigned int v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v55(v16, 1, v17) == 1)
  {
    sub_1A72EF338((uint64_t)v16);
LABEL_8:
    sub_1A72EFD2C();
    swift_allocError();
    *(_OWORD *)uint64_t v28 = xmmword_1A7579660;
    *(unsigned char *)(v28 + 16) = 2;
    swift_willThrow();
LABEL_31:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
    return a1;
  }
  uint64_t v54 = v18;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v56 = v17;
  uint64_t v31 = v30;
  v30(v57, v16, v17);
  if (!*((void *)a1 + 2) || (unint64_t v32 = sub_1A72B2210(0x6465696669646F6DLL, 0xEA00000000006E4FLL), (v33 & 1) == 0))
  {
    sub_1A72EFD2C();
    swift_allocError();
    *(_OWORD *)uint64_t v38 = xmmword_1A7579630;
    *(unsigned char *)(v38 + 16) = 1;
    swift_willThrow();
LABEL_30:
    (*(void (**)(char *, uint64_t))(v54 + 8))(v57, v56);
    goto LABEL_31;
  }
  sub_1A72BEE98(*((void *)a1 + 7) + 32 * v32, (uint64_t)v64);
  sub_1A72BEE44(v64, v65);
  sub_1A72BEE98((uint64_t)v65, (uint64_t)v64);
  if (!swift_dynamicCast())
  {
    sub_1A72EFD2C();
    swift_allocError();
    *(_OWORD *)uint64_t v39 = xmmword_1A7579630;
    *(unsigned char *)(v39 + 16) = 2;
    swift_willThrow();
LABEL_29:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
    goto LABEL_30;
  }
  sub_1A7571A40();
  if (*((void *)a1 + 2) && (unint64_t v34 = sub_1A72B2210(0x444970756F7267, 0xE700000000000000), (v35 & 1) != 0))
  {
    sub_1A72BEE98(*((void *)a1 + 7) + 32 * v34, (uint64_t)v63);
    sub_1A72BEE44(v63, v64);
    sub_1A72BEE98((uint64_t)v64, (uint64_t)v63);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_20:
      sub_1A72EFD2C();
      swift_allocError();
      *(_OWORD *)uint64_t v37 = xmmword_1A7579640;
      *(unsigned char *)(v37 + 16) = 2;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
LABEL_28:
      (*(void (**)(char *, uint64_t))(v60 + 8))(v67, v61);
      goto LABEL_29;
    }
    sub_1A7571B70();
    swift_bridgeObjectRelease();
    uint64_t v36 = v56;
    if (v55(v12, 1, v56) == 1)
    {
      sub_1A72EF338((uint64_t)v12);
      goto LABEL_20;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    v31(v21, v12, v36);
    uint64_t v40 = (uint64_t)v59;
    v31(v59, v21, v36);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v40, 0, 1, v36);
    if (!*((void *)a1 + 2)) {
      goto LABEL_33;
    }
  }
  else
  {
    uint64_t v40 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v59, 1, 1, v56);
    if (!*((void *)a1 + 2))
    {
LABEL_33:
      uint64_t v43 = 0;
      goto LABEL_34;
    }
  }
  unint64_t v41 = sub_1A72B2210(0x656C6F73624F7369, 0xEA00000000006574);
  if ((v42 & 1) == 0) {
    goto LABEL_33;
  }
  sub_1A72BEE98(*((void *)a1 + 7) + 32 * v41, (uint64_t)v63);
  sub_1A72BEE44(v63, v64);
  sub_1A72BEE98((uint64_t)v64, (uint64_t)v63);
  if (!swift_dynamicCast())
  {
    sub_1A72EFD2C();
    swift_allocError();
    *(_OWORD *)uint64_t v44 = xmmword_1A7579650;
    *(unsigned char *)(v44 + 16) = 2;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    sub_1A72EF338(v40);
    goto LABEL_28;
  }
  uint64_t v43 = v62;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
LABEL_34:
  sub_1A72EFD80(v40, (uint64_t)v9);
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v58, v67, v61);
  unint64_t v45 = (void *)sub_1A7571B90();
  uint64_t v46 = v56;
  if (v55(v9, 1, v56) == 1)
  {
    BOOL v47 = 0;
    uint64_t v48 = v54;
  }
  else
  {
    BOOL v47 = (void *)sub_1A7571B90();
    uint64_t v48 = v54;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v46);
  }
  id v49 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v50 = v58;
  unsigned int v51 = (void *)sub_1A7571AB0();
  a1 = objc_msgSend(v49, sel_initWithMemberIdentifier_groupIdentifier_isObsolete_modifiedOn_, v45, v47, v43, v51);

  uint64_t v52 = v61;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v60 + 8);
  v53(v50, v61);
  sub_1A72EF338((uint64_t)v59);
  v53(v67, v52);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v57, v56);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  return a1;
}

id sub_1A72EFCDC@<X0>(unint64_t *a1@<X8>)
{
  return REMMembership.toJSON()(a1);
}

unsigned char *sub_1A72EFD00@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  id result = static REMMembership.fromJSON(_:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_1A72EFD2C()
{
  unint64_t result = qword_1E96F1530;
  if (!qword_1E96F1530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1530);
  }
  return result;
}

uint64_t sub_1A72EFD80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t REMRemindersInCalendarDataView.FetchResultToken.predicateVersion.getter()
{
  return *(void *)v0;
}

id REMRemindersInCalendarDataView.FetchResultToken.token.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t REMRemindersInCalendarDataView.FetchResultToken.init(dataRepresentation:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1A75717F0();
  swift_allocObject();
  sub_1A75717E0();
  sub_1A72EFEB0();
  sub_1A75717C0();
  sub_1A72E3460(a1, a2);
  uint64_t result = swift_release();
  if (!v3)
  {
    *a3 = v8;
    a3[1] = v9;
  }
  return result;
}

unint64_t sub_1A72EFEB0()
{
  unint64_t result = qword_1EB701360[0];
  if (!qword_1EB701360[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB701360);
  }
  return result;
}

uint64_t REMRemindersInCalendarDataView.FetchResultToken.dataRepresentation()()
{
  sub_1A7571830();
  swift_allocObject();
  sub_1A7571820();
  sub_1A72EFF98();
  uint64_t v0 = sub_1A7571800();
  swift_release();
  return v0;
}

unint64_t sub_1A72EFF98()
{
  unint64_t result = qword_1EB7016E8;
  if (!qword_1EB7016E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7016E8);
  }
  return result;
}

uint64_t static REMRemindersInCalendarDataView.FetchResultToken.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
  return sub_1A7573190() & 1;
}

uint64_t sub_1A72F0060()
{
  if (*v0) {
    return 0x6E656B6F74;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_1A72F009C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7315338(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A72F00C4(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1A72F00D0(uint64_t a1)
{
  unint64_t v2 = sub_1A72F0304();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A72F010C(uint64_t a1)
{
  unint64_t v2 = sub_1A72F0304();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersInCalendarDataView.FetchResultToken.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7017C0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A72F0304();
  sub_1A75741B0();
  char v11 = 0;
  sub_1A7573B40();
  if (!v2)
  {
    v9[1] = v9[0];
    char v10 = 1;
    type metadata accessor for REMFetchResultToken_Codable();
    sub_1A72F0548(&qword_1EB701698, (void (*)(uint64_t))type metadata accessor for REMFetchResultToken_Codable);
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A72F0304()
{
  unint64_t result = qword_1EB7016D0;
  if (!qword_1EB7016D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7016D0);
  }
  return result;
}

uint64_t REMRemindersInCalendarDataView.FetchResultToken.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7017B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A72F0304();
  sub_1A7574190();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_1A7573A30();
    type metadata accessor for REMFetchResultToken_Codable();
    char v13 = 1;
    sub_1A72F0548(&qword_1EB7016A0, (void (*)(uint64_t))type metadata accessor for REMFetchResultToken_Codable);
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v10 = v12[1];
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A72F0548(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A72F0590@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMRemindersInCalendarDataView.FetchResultToken.init(from:)(a1, a2);
}

uint64_t sub_1A72F05A8(void *a1)
{
  return REMRemindersInCalendarDataView.FetchResultToken.encode(to:)(a1);
}

uint64_t sub_1A72F05C0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB7054C0);
  return sub_1A7573190() & 1;
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.matchedReminderIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.removedReminderIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.updatedListIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.init(matchedReminderIDs:removedReminderIDs:updatedListIDs:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t static REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if ((sub_1A72DD304(*a1, *a2) & 1) == 0 || (sub_1A72DD304(v2, v4) & 1) == 0) {
    return 0;
  }

  return sub_1A72DD304(v3, v5);
}

unint64_t sub_1A72F06D0()
{
  unint64_t v1 = 0x4C64657461647075;
  if (*v0 == 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_1A72F0738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7315420(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A72F0760(uint64_t a1)
{
  unint64_t v2 = sub_1A72F09E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A72F079C(uint64_t a1)
{
  unint64_t v2 = sub_1A72F09E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701890);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v13 = v1[2];
  uint64_t v14 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A72F09E8();
  sub_1A75741B0();
  uint64_t v16 = v9;
  char v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705B90);
  sub_1A72F0D38((unint64_t *)&qword_1EB7054B0, &qword_1EB704E40);
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v10 = v13;
    uint64_t v16 = v14;
    char v15 = 1;
    sub_1A7573B60();
    uint64_t v16 = v10;
    char v15 = 2;
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A72F09E8()
{
  unint64_t result = qword_1EB703220;
  if (!qword_1EB703220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703220);
  }
  return result;
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701788);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A72F09E8();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705B90);
  char v17 = 0;
  sub_1A72F0D38((unint64_t *)&qword_1EB705B98, &qword_1EB705A50);
  sub_1A7573A50();
  uint64_t v9 = v18;
  char v17 = 1;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  char v17 = 2;
  uint64_t v15 = v18;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v15;
  char v11 = v16;
  *uint64_t v16 = v9;
  v11[1] = v12;
  v11[2] = v10;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A72F0D38(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB705B90);
    sub_1A72F0548(a2, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A72F0DCC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.init(from:)(a1, a2);
}

uint64_t sub_1A72F0DE4(void *a1)
{
  return REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.encode(to:)(a1);
}

uint64_t sub_1A72F0DFC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if ((sub_1A72DD304(*a1, *a2) & 1) == 0 || (sub_1A72DD304(v2, v4) & 1) == 0) {
    return 0;
  }

  return sub_1A72DD304(v3, v5);
}

BOOL sub_1A72F0E80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1A72F0E98()
{
  if (*v0) {
    return 0x6E656D6572636E69;
  }
  else {
    return 0x64616F6C6572;
  }
}

uint64_t sub_1A72F0ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7315590(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A72F0F00(uint64_t a1)
{
  unint64_t v2 = sub_1A73139A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A72F0F3C(uint64_t a1)
{
  unint64_t v2 = sub_1A73139A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A72F0F80()
{
  return 12383;
}

uint64_t sub_1A72F0F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_1A72F100C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1A72F1018(uint64_t a1)
{
  unint64_t v2 = sub_1A73139FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A72F1054(uint64_t a1)
{
  unint64_t v2 = sub_1A73139FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A72F1090()
{
  return 0xD000000000000012;
}

uint64_t sub_1A72F10AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7315694(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A72F10D8(uint64_t a1)
{
  unint64_t v2 = sub_1A7313AA4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A72F1114(uint64_t a1)
{
  unint64_t v2 = sub_1A7313AA4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7018A8);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  MEMORY[0x1F4188790](v3);
  char v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7018A0);
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v21 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701898);
  uint64_t v25 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *v1;
  uint64_t v12 = v1[1];
  uint64_t v18 = v1[2];
  uint64_t v19 = v12;
  char v13 = *((unsigned char *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73139A8();
  sub_1A75741B0();
  if (v13)
  {
    LOBYTE(v26) = 1;
    sub_1A73139FC();
    sub_1A7573AB0();
    uint64_t v26 = v24;
    uint64_t v27 = v19;
    uint64_t v28 = v18;
    sub_1A7313A50();
    uint64_t v14 = v23;
    sub_1A7573B60();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v14);
  }
  else
  {
    LOBYTE(v26) = 0;
    sub_1A7313AA4();
    sub_1A7573AB0();
    uint64_t v26 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705B90);
    sub_1A72F0D38((unint64_t *)&qword_1EB7054B0, &qword_1EB704E40);
    uint64_t v15 = v21;
    sub_1A7573B60();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v9);
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7017A0);
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701798);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701790);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1A73139A8();
  uint64_t v13 = v33;
  sub_1A7574190();
  if (!v13)
  {
    uint64_t v14 = v29;
    uint64_t v33 = v9;
    uint64_t v15 = sub_1A7573A70();
    if (*(void *)(v15 + 16) == 1)
    {
      v25[1] = v15;
      char v16 = *(unsigned char *)(v15 + 32);
      if (v16)
      {
        LOBYTE(v31) = 1;
        sub_1A73139FC();
        sub_1A7573990();
        sub_1A7313AF8();
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v14);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v8);
        uint64_t v17 = v31;
        long long v18 = v32;
      }
      else
      {
        LOBYTE(v31) = 0;
        sub_1A7313AA4();
        sub_1A7573990();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705B90);
        sub_1A72F0D38((unint64_t *)&qword_1EB705B98, &qword_1EB705A50);
        sub_1A7573A50();
        uint64_t v23 = v33;
        (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v8);
        uint64_t v17 = v31;
        long long v18 = 0uLL;
      }
      uint64_t v24 = v26;
      *uint64_t v26 = v17;
      *(_OWORD *)(v24 + 1) = v18;
      *((unsigned char *)v24 + 24) = v16;
    }
    else
    {
      uint64_t v19 = sub_1A7573640();
      swift_allocError();
      uint64_t v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
      *uint64_t v21 = &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult;
      sub_1A75739A0();
      sub_1A7573620();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x1E4FBBA70], v19);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_1A72F19EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.init(from:)(a1, a2);
}

uint64_t sub_1A72F1A04(void *a1)
{
  return REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.encode(to:)(a1);
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.remindersResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return sub_1A7313B4C(v2, v3, v4, v5);
}

id REMRemindersInCalendarDataView.RemindersInCalendarResult.latestFetchResultToken.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 40);
  *a1 = *(void *)(v1 + 32);
  a1[1] = v2;
  return v2;
}

__n128 REMRemindersInCalendarDataView.RemindersInCalendarResult.init(remindersResult:latestFetchResultToken:)@<Q0>(__n128 *a1@<X0>, unint64_t *a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v3 = a1[1].n128_u64[0];
  unsigned __int8 v4 = a1[1].n128_u8[8];
  unint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  __n128 result = *a1;
  *a3 = *a1;
  a3[1].n128_u64[0] = v3;
  a3[1].n128_u8[8] = v4;
  a3[2].n128_u64[0] = v5;
  a3[2].n128_u64[1] = v6;
  return result;
}

void static REMRemindersInCalendarDataView.fetchRemindersInCalendar(store:diffingAgainst:)(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[1];
  if (v4)
  {
    uint64_t v5 = *a1;
    uint64_t v6 = a1[1];
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  char v7 = v4 == 0;
  id v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersInCalendarDataView.Invocation()), sel_initWithFetchResultTokenToDiffAgainst_, v6);
  sub_1A72F1D38((uint64_t)v8, v5, v7, v23);
  if (v2) {
    goto LABEL_5;
  }
  uint64_t v10 = v23[0];
  uint64_t v9 = v23[1];
  uint64_t v11 = v23[2];
  char v12 = v24;
  uint64_t v13 = v26;
  if (!v26)
  {
    long long v18 = self;
    uint64_t v19 = (void *)sub_1A75725E0();
    objc_msgSend(v18, sel_internalErrorWithDebugDescription_, v19);

    swift_willThrow();
    sub_1A7313BB8(v10, v9, v11, v12);
LABEL_5:

    return;
  }
  uint64_t v27 = v25;
  v21.super_class = (Class)type metadata accessor for REMFetchResultToken_Codable();
  v21.receiver = objc_allocWithZone(v21.super_class);
  id v14 = v13;
  sub_1A7313B4C(v10, v9, v11, v12);
  id v15 = objc_msgSend(v14, sel_persistentHistoryTokens);
  sub_1A72BEFEC(0, &qword_1EB701D30);
  char v20 = v12;
  sub_1A75723F0();

  char v16 = (void *)sub_1A75723D0();
  swift_bridgeObjectRelease();
  objc_super v22 = v21;
  id v17 = objc_msgSendSuper2(&v22, sel_initWithPersistentHistoryTokens_, v16);

  sub_1A7313BB8(v10, v9, v11, v20);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v11;
  *(unsigned char *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v27;
  *(void *)(a2 + 40) = v17;
}

ReminderKitInternal::REMRemindersInCalendarDataView::Invocation::Parameters __swiftcall REMRemindersInCalendarDataView.Invocation.Parameters.init(lastFetchPredicateVersion:)(ReminderKitInternal::REMRemindersInCalendarDataView::Invocation::Parameters lastFetchPredicateVersion)
{
  *(void *)uint64_t v1 = lastFetchPredicateVersion.lastFetchPredicateVersion.value;
  *(unsigned char *)(v1 + 8) = lastFetchPredicateVersion.lastFetchPredicateVersion.is_nil;
  return lastFetchPredicateVersion;
}

id REMRemindersInCalendarDataView.Invocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

void sub_1A72F1D38(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v74 = a1;
  unint64_t v73 = a4;
  uint64_t v8 = sub_1A7573790();
  uint64_t v79 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v78 = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87[4] = a2;
  char v88 = a3 & 1;
  uint64_t v89 = v5;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v10 = sub_1A7571820();
  id v11 = v5;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  unint64_t v13 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v77 = type metadata accessor for REMStoreObjectsContainer();
  id v14 = (void *)swift_allocObject();
  v14[2] = v11;
  v14[3] = v13;
  id v15 = v14 + 3;
  uint64_t v16 = (uint64_t)v14;
  v14[4] = sub_1A72B0A88(v12);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB705A18);
  long long v18 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
  uint64_t v19 = (uint64_t)v78;
  v79 += 16;
  v18(v78, v17, v8);
  uint64_t v83 = v77;
  unsigned int v80 = (void *)v16;
  uint64_t v75 = v16;
  swift_retain();
  char v20 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v80, v19);
  v20(v87, 0);
  sub_1A7313DC8();
  objc_super v21 = v76;
  uint64_t v22 = sub_1A7571800();
  if (v21)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1A7571E90();
    __swift_project_value_buffer(v24, (uint64_t)qword_1E96F3940);
    uint64_t v25 = v21;
    uint64_t v26 = v21;
    uint64_t v27 = sub_1A7571E80();
    os_log_type_t v28 = sub_1A7572FD0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      unsigned int v80 = (void *)v30;
      *(_DWORD *)uint64_t v29 = 136315394;
      swift_getErrorValue();
      uint64_t v31 = Error.rem_errorDescription.getter((uint64_t)v86[5]);
      v87[0] = sub_1A72D1730(v31, v32, (uint64_t *)&v80);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v29 + 12) = 2080;
      v87[0] = type metadata accessor for REMRemindersInCalendarDataView.Invocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7016C8);
      uint64_t v33 = sub_1A7572670();
      v87[0] = sub_1A72D1730(v33, v34, (uint64_t *)&v80);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v27, v28, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v30, -1, -1);
      MEMORY[0x1AD0CD330](v29, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v35 = v22;
    unint64_t v36 = v23;
    char v69 = v18;
    uint64_t v70 = v17;
    uint64_t v71 = v8;
    uint64_t v72 = v10;
    swift_beginAccess();
    uint64_t v37 = *v15;
    id v38 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v35, v36);
    swift_bridgeObjectRetain();
    v86[0] = objc_msgSend(v38, sel_init);
    uint64_t v39 = type metadata accessor for REMRemindersInCalendarDataView.Invocation();
    unsigned int v80 = (void *)v39;
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7016C8);
    uint64_t v41 = sub_1A7572670();
    unint64_t v43 = v42;
    unint64_t v76 = v68;
    MEMORY[0x1F4188790](v41);
    v68[-6] = (uint64_t)v86;
    v68[-5] = (uint64_t)&v89;
    v68[-4] = v74;
    v68[-3] = v44;
    uint64_t v45 = v44;
    v68[-2] = v36;
    v68[-1] = v37;
    int v46 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v41, v43, v46, (void (*)(void))sub_1A731590C, (uint64_t)&v68[-8]);
    v68[1] = v40;
    uint64_t v74 = v39;
    sub_1A72E3460(v45, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v47 = objc_msgSend(v86[0], sel_resultStorages);
    uint64_t v48 = sub_1A75723F0();

    uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    unsigned int v80 = (void *)v48;
    sub_1A72BEE98((uint64_t)&v80, (uint64_t)v87);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      v68[0] = v45;
      unint64_t v76 = (uint64_t *)v36;
      uint64_t v49 = v85;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
      uint64_t v50 = v89;
      uint64_t v51 = v77;
      uint64_t v52 = (void *)swift_allocObject();
      v52[2] = v50;
      v52[3] = v49;
      id v53 = v50;
      v52[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v54 = (uint64_t)v78;
      v69(v78, v70, v71);
      uint64_t v83 = v51;
      unsigned int v80 = v52;
      swift_retain();
      unsigned int v55 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)&v80, v54);
      v55(v87, 0);
      id v56 = v86[0];
      id v57 = objc_msgSend(v86[0], sel_resultData);
      uint64_t v58 = sub_1A7571A20();
      unint64_t v60 = v59;

      sub_1A7313E20();
      sub_1A75717C0();
      sub_1A72E3460(v58, v60);
      uint64_t v61 = (uint64_t)v80;
      uint64_t v62 = v81;
      uint64_t v63 = v82;
      char v64 = v83;
      uint64_t v79 = v84;
      sub_1A7313B4C((uint64_t)v80, v81, v82, v83);
      id v65 = v56;
      id v66 = objc_msgSend(v65, sel_latestFetchResultToken);
      sub_1A72E3460(v68[0], (unint64_t)v76);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      sub_1A7313BB8(v61, v62, v63, v64);

      uint64_t v67 = v73;
      *unint64_t v73 = v61;
      v67[1] = v62;
      v67[2] = v63;
      *((unsigned char *)v67 + 24) = v64;
      v67[4] = v79;
      v67[5] = (uint64_t)v66;
    }
    else
    {
      sub_1A72BEE98((uint64_t)&v80, (uint64_t)v87);
      sub_1A7447A74((uint64_t)v87, 0, 0);
      sub_1A7315924((uint64_t)v87);
      swift_willThrow();
      sub_1A72E3460(v45, v36);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
    }
  }
}

void sub_1A72F2900(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v75 = a1;
  unint64_t v73 = a3;
  uint64_t v6 = sub_1A7573790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v79 = (char *)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = a2[1];
  long long v85 = *a2;
  *(_OWORD *)uint64_t v86 = v9;
  *(_OWORD *)&v86[9] = *(long long *)((char *)a2 + 25);
  unint64_t v87 = v4;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v10 = sub_1A7571820();
  id v11 = v4;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  unint64_t v13 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v78 = type metadata accessor for REMStoreObjectsContainer();
  id v14 = (void *)swift_allocObject();
  v14[2] = v11;
  v14[3] = v13;
  id v15 = v14 + 3;
  uint64_t v16 = (uint64_t)v14;
  v14[4] = sub_1A72B0A88(v12);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB705A18);
  uint64_t v18 = v6;
  uint64_t v19 = v17;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v20 = v7 + 16;
  objc_super v21 = v22;
  uint64_t v23 = (uint64_t)v79;
  uint64_t v74 = v18;
  ((void (*)(char *, uint64_t))v22)(v79, v17);
  uint64_t v84 = v78;
  v83[0] = v16;
  uint64_t v76 = v16;
  swift_retain();
  uint64_t v24 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v83, v23);
  v24(v82, 0);
  sub_1A7318274();
  uint64_t v25 = v77;
  uint64_t v26 = sub_1A7571800();
  if (v25)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1A7571E90();
    __swift_project_value_buffer(v28, (uint64_t)qword_1E96F3940);
    uint64_t v29 = v25;
    uint64_t v30 = v25;
    uint64_t v31 = sub_1A7571E80();
    os_log_type_t v32 = sub_1A7572FD0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      v83[0] = v34;
      *(_DWORD *)uint64_t v33 = 136315394;
      swift_getErrorValue();
      uint64_t v35 = Error.rem_errorDescription.getter((uint64_t)v81[5]);
      v82[0] = sub_1A72D1730(v35, v36, v83);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v33 + 12) = 2080;
      v82[0] = type metadata accessor for REMSiriSearchDataView.RemindersByCriteriaInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F18D8);
      uint64_t v37 = sub_1A7572670();
      v82[0] = sub_1A72D1730(v37, v38, v83);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v31, v32, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v34, -1, -1);
      MEMORY[0x1AD0CD330](v33, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v39 = v26;
    unint64_t v40 = v27;
    char v69 = v21;
    uint64_t v70 = v19;
    uint64_t v71 = v20;
    uint64_t v72 = v10;
    swift_beginAccess();
    uint64_t v41 = *v15;
    id v42 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v39, v40);
    swift_bridgeObjectRetain();
    v81[0] = objc_msgSend(v42, sel_init);
    uint64_t v43 = type metadata accessor for REMSiriSearchDataView.RemindersByCriteriaInvocation();
    v83[0] = v43;
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F18D8);
    uint64_t v45 = v39;
    uint64_t v46 = sub_1A7572670();
    unint64_t v48 = v47;
    uint64_t v77 = v68;
    MEMORY[0x1F4188790](v46);
    v68[-6] = (uint64_t)v81;
    v68[-5] = (uint64_t)&v87;
    v68[-4] = v75;
    v68[-3] = v39;
    v68[-2] = v40;
    v68[-1] = v41;
    int v49 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v46, v48, v49, (void (*)(void))sub_1A731590C, (uint64_t)&v68[-8]);
    v68[1] = v44;
    uint64_t v75 = v43;
    sub_1A72E3460(v39, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v50 = objc_msgSend(v81[0], sel_resultStorages);
    uint64_t v51 = sub_1A75723F0();

    uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v83[0] = v51;
    sub_1A72BEE98((uint64_t)v83, (uint64_t)v82);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      v68[0] = v45;
      uint64_t v77 = (uint64_t *)v40;
      uint64_t v52 = v80;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
      id v53 = v87;
      uint64_t v54 = v78;
      unsigned int v55 = (void *)swift_allocObject();
      v55[2] = v53;
      v55[3] = v52;
      id v56 = v53;
      v55[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v57 = (uint64_t)v79;
      v69(v79, v70, v74);
      uint64_t v84 = v54;
      v83[0] = (uint64_t)v55;
      swift_retain();
      uint64_t v58 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v83, v57);
      v58(v82, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7058E0);
      id v59 = v81[0];
      id v60 = objc_msgSend(v81[0], sel_resultData);
      uint64_t v61 = sub_1A7571A20();
      unint64_t v63 = v62;

      sub_1A73182C8();
      sub_1A75717C0();
      sub_1A72E3460(v61, v63);
      uint64_t v64 = v83[0];
      swift_bridgeObjectRetain();
      id v65 = v59;
      id v66 = objc_msgSend(v65, sel_latestFetchResultToken);
      sub_1A72E3460(v68[0], (unint64_t)v77);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      uint64_t v67 = v73;
      *unint64_t v73 = v64;
      v67[1] = (uint64_t)v66;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v83, (uint64_t)v82);
      sub_1A7447A74((uint64_t)v82, 0, 0);
      sub_1A7315924((uint64_t)v82);
      swift_willThrow();
      sub_1A72E3460(v45, v40);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    }
  }
}

void sub_1A72F34A0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v70 = a1;
  char v69 = a3;
  uint64_t v6 = sub_1A7573790();
  uint64_t v75 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v74 = (char *)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v81[3] = a2;
  v81[0] = v4;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v8 = sub_1A7571820();
  id v9 = v4;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  unint64_t v11 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v73 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v9;
  void v12[3] = v11;
  unint64_t v13 = v12 + 3;
  uint64_t v14 = (uint64_t)v12;
  v12[4] = sub_1A72B0A88(v10);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB705A18);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
  uint64_t v17 = (uint64_t)v74;
  v75 += 16;
  v16(v74, v15, v6);
  uint64_t v80 = v73;
  v79[0] = v14;
  uint64_t v71 = v14;
  swift_retain();
  uint64_t v18 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v79, v17);
  v18(v78, 0);
  sub_1A73181CC();
  uint64_t v19 = v72;
  uint64_t v20 = sub_1A7571800();
  if (v19)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1A7571E90();
    __swift_project_value_buffer(v22, (uint64_t)qword_1E96F3940);
    uint64_t v23 = v19;
    uint64_t v24 = v19;
    uint64_t v25 = sub_1A7571E80();
    os_log_type_t v26 = sub_1A7572FD0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v79[0] = v28;
      *(_DWORD *)uint64_t v27 = 136315394;
      swift_getErrorValue();
      uint64_t v29 = Error.rem_errorDescription.getter((uint64_t)v77[5]);
      v78[0] = sub_1A72D1730(v29, v30, v79);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v27 + 12) = 2080;
      v78[0] = type metadata accessor for REMSiriSearchDataView.ListsByCriteriaInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F18C0);
      uint64_t v31 = sub_1A7572670();
      v78[0] = sub_1A72D1730(v31, v32, v79);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v25, v26, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v28, -1, -1);
      MEMORY[0x1AD0CD330](v27, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v33 = v20;
    unint64_t v34 = v21;
    id v65 = v16;
    uint64_t v66 = v15;
    uint64_t v67 = v6;
    uint64_t v68 = v8;
    swift_beginAccess();
    uint64_t v35 = *v13;
    id v36 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v33, v34);
    swift_bridgeObjectRetain();
    v77[0] = objc_msgSend(v36, sel_init);
    uint64_t v37 = type metadata accessor for REMSiriSearchDataView.ListsByCriteriaInvocation();
    v79[0] = v37;
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F18C0);
    uint64_t v39 = sub_1A7572670();
    unint64_t v41 = v40;
    uint64_t v72 = v64;
    MEMORY[0x1F4188790](v39);
    v64[-6] = (uint64_t)v77;
    v64[-5] = (uint64_t)v81;
    v64[-4] = v70;
    v64[-3] = v42;
    uint64_t v43 = v42;
    v64[-2] = v34;
    v64[-1] = v35;
    int v44 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v39, v41, v44, (void (*)(void))sub_1A731590C, (uint64_t)&v64[-8]);
    v64[1] = v38;
    uint64_t v70 = v37;
    sub_1A72E3460(v43, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v45 = objc_msgSend(v77[0], sel_resultStorages);
    uint64_t v46 = sub_1A75723F0();

    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v79[0] = v46;
    sub_1A72BEE98((uint64_t)v79, (uint64_t)v78);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      v64[0] = v43;
      uint64_t v72 = (uint64_t *)v34;
      uint64_t v47 = v76;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
      unint64_t v48 = (void *)v81[0];
      uint64_t v49 = v73;
      id v50 = (void *)swift_allocObject();
      v50[2] = v48;
      v50[3] = v47;
      id v51 = v48;
      v50[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v52 = (uint64_t)v74;
      v65(v74, v66, v67);
      uint64_t v80 = v49;
      v79[0] = (uint64_t)v50;
      swift_retain();
      id v53 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v79, v52);
      v53(v78, 0);
      id v54 = v77[0];
      id v55 = objc_msgSend(v77[0], sel_resultData);
      uint64_t v56 = sub_1A7571A20();
      unint64_t v58 = v57;

      sub_1A7318220();
      sub_1A75717C0();
      sub_1A72E3460(v56, v58);
      uint64_t v59 = v79[0];
      uint64_t v60 = v79[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v61 = v54;
      id v62 = objc_msgSend(v61, sel_latestFetchResultToken);
      sub_1A72E3460(v64[0], (unint64_t)v72);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      unint64_t v63 = v69;
      *char v69 = v59;
      v63[1] = v60;
      _OWORD v63[2] = (uint64_t)v62;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v79, (uint64_t)v78);
      sub_1A7447A74((uint64_t)v78, 0, 0);
      sub_1A7315924((uint64_t)v78);
      swift_willThrow();
      sub_1A72E3460(v43, v34);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
    }
  }
}

void sub_1A72F4028(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v72 = a3;
  uint64_t v73 = a1;
  uint64_t v4 = sub_1A7573790();
  uint64_t v79 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v78 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = v3;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v6 = sub_1A7571820();
  id v7 = v3;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v77 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v7;
  v10[3] = v9;
  unint64_t v11 = v10 + 3;
  uint64_t v12 = v10;
  v10[4] = sub_1A72B0A88(v8);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB705A18);
  uint64_t v14 = (uint64_t)v78;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
  v79 += 16;
  v15(v78, v13, v4);
  *((void *)&v89 + 1) = v77;
  *(void *)&long long v88 = v12;
  uint64_t v74 = v12;
  swift_retain();
  uint64_t v16 = (void (*)(long long *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v88, v14);
  v16(&v80, 0);
  type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation.Parameters(0);
  sub_1A72F0548(&qword_1E96F18A0, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation.Parameters);
  uint64_t v17 = v76;
  uint64_t v75 = v6;
  uint64_t v18 = sub_1A7571800();
  uint64_t v76 = (void *)v19;
  if (v17)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E96F3940);
    id v21 = v17;
    id v22 = v17;
    uint64_t v23 = sub_1A7571E80();
    os_log_type_t v24 = sub_1A7572FD0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(void *)&long long v88 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_getErrorValue();
      uint64_t v27 = Error.rem_errorDescription.getter((uint64_t)v97[5]);
      *(void *)&long long v80 = sub_1A72D1730(v27, v28, (uint64_t *)&v88);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v25 + 12) = 2080;
      *(void *)&long long v80 = type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F18A8);
      uint64_t v29 = sub_1A7572670();
      *(void *)&long long v80 = sub_1A72D1730(v29, v30, (uint64_t *)&v88);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v23, v24, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v26, -1, -1);
      MEMORY[0x1AD0CD330](v25, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v31 = v18;
    uint64_t v67 = v15;
    uint64_t v68 = v13;
    uint64_t v69 = v4;
    swift_beginAccess();
    uint64_t v32 = *v11;
    id v33 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    unint64_t v34 = (unint64_t)v76;
    sub_1A72E3408(v31, (unint64_t)v76);
    swift_bridgeObjectRetain();
    v97[0] = objc_msgSend(v33, sel_init);
    uint64_t v35 = type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation();
    uint64_t v70 = 0;
    uint64_t v36 = v35;
    *(void *)&long long v88 = v35;
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F18A8);
    uint64_t v38 = sub_1A7572670();
    unint64_t v40 = v39;
    uint64_t v71 = &v66;
    MEMORY[0x1F4188790](v38);
    *(&v66 - 6) = (uint64_t)v97;
    *(&v66 - 5) = (uint64_t)&v98;
    *(&v66 - 4) = v73;
    *(&v66 - 3) = v31;
    *(&v66 - 2) = v34;
    *(&v66 - 1) = v32;
    int v41 = sub_1A7572FB0();
    uint64_t v42 = v70;
    measureTimeElapsed(_:level:block:)(v38, v40, v41, (void (*)(void))sub_1A731590C, (uint64_t)(&v66 - 8));
    if (v42)
    {
      unint64_t v43 = (unint64_t)v76;
      sub_1A72E3460(v31, (unint64_t)v76);
      sub_1A72E3460(v31, v43);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v70 = v37;
      uint64_t v73 = v36;
      sub_1A72E3460(v31, (unint64_t)v76);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A75717F0();
      swift_allocObject();
      uint64_t v44 = v31;
      sub_1A75717E0();
      id v45 = objc_msgSend(v97[0], sel_resultStorages);
      uint64_t v46 = sub_1A75723F0();

      *((void *)&v89 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
      *(void *)&long long v88 = v46;
      sub_1A72BEE98((uint64_t)&v88, (uint64_t)&v80);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
      if (swift_dynamicCast())
      {
        uint64_t v71 = (uint64_t *)v44;
        uint64_t v47 = v96;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v88);
        unint64_t v48 = v98;
        uint64_t v49 = v77;
        id v50 = (void *)swift_allocObject();
        v50[2] = v48;
        v50[3] = v47;
        id v51 = v48;
        v50[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
        uint64_t v52 = (uint64_t)v78;
        v67(v78, v68, v69);
        *((void *)&v89 + 1) = v49;
        *(void *)&long long v88 = v50;
        swift_retain();
        id v53 = (void (*)(long long *, void))sub_1A75717D0();
        sub_1A7447898((uint64_t)&v88, v52);
        v53(&v80, 0);
        id v54 = v97[0];
        id v55 = objc_msgSend(v97[0], sel_resultData);
        uint64_t v56 = sub_1A7571A20();
        unint64_t v58 = v57;

        sub_1A7317FEC();
        sub_1A75717C0();
        sub_1A72E3460(v56, v58);
        long long v84 = v92;
        long long v85 = v93;
        long long v86 = v94;
        long long v87 = v95;
        long long v80 = v88;
        long long v81 = v89;
        long long v82 = v90;
        long long v83 = v91;
        sub_1A7318040((uint64_t)&v80);
        id v59 = v54;
        id v60 = objc_msgSend(v59, sel_latestFetchResultToken);
        sub_1A72E3460((uint64_t)v71, (unint64_t)v76);
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        sub_1A7318104((uint64_t)&v80);

        long long v61 = v85;
        uint64_t v62 = v72;
        *(_OWORD *)(v72 + 64) = v84;
        *(_OWORD *)(v62 + 80) = v61;
        long long v63 = v87;
        *(_OWORD *)(v62 + 96) = v86;
        *(_OWORD *)(v62 + 112) = v63;
        long long v64 = v81;
        *(_OWORD *)uint64_t v62 = v80;
        *(_OWORD *)(v62 + 16) = v64;
        long long v65 = v83;
        *(_OWORD *)(v62 + 32) = v82;
        *(_OWORD *)(v62 + 48) = v65;
        *(void *)(v62 + 128) = v60;
      }
      else
      {
        sub_1A72BEE98((uint64_t)&v88, (uint64_t)&v80);
        sub_1A7447A74((uint64_t)&v80, 0, 0);
        sub_1A7315924((uint64_t)&v80);
        swift_willThrow();
        sub_1A72E3460(v44, (unint64_t)v76);
        swift_release();
        swift_release();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v88);
      }
    }
  }
}

void sub_1A72F4B28(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
}

void sub_1A72F4BB4(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
}

void sub_1A72F4C34(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
}

void sub_1A72F4CB4(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t *a5@<X4>, void (*a6)(void)@<X5>, void (*a7)(void)@<X6>, uint64_t a8@<X7>, unsigned char *a9@<X8>)
{
  uint64_t v74 = a8;
  uint64_t v73 = a7;
  uint64_t v76 = a6;
  uint64_t v78 = a5;
  uint64_t v77 = a4;
  long long v81 = (uint64_t *)a3;
  long long v80 = a2;
  uint64_t v75 = a1;
  uint64_t v72 = a9;
  uint64_t v10 = sub_1A7573790();
  uint64_t v83 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v89 = v9;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v13 = sub_1A7571820();
  id v14 = v9;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  unint64_t v16 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v17 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v18 = (void *)swift_allocObject();
  _OWORD v18[2] = v14;
  uint64_t v19 = (uint64_t)v18;
  void v18[3] = v16;
  uint64_t v20 = v18 + 3;
  void v18[4] = sub_1A72B0A88(v15);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v10, (uint64_t)qword_1EB705A18);
  id v22 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
  v83 += 16;
  v22(v12, v21, v10);
  uint64_t v88 = v17;
  long long v87 = (void *)v19;
  uint64_t v79 = v19;
  swift_retain();
  uint64_t v23 = (uint64_t (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v87, (uint64_t)v12);
  uint64_t v24 = v23(v86, 0);
  v80(v24);
  uint64_t v25 = v82;
  uint64_t v26 = sub_1A7571800();
  long long v82 = (void *)v27;
  if (v25)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1A7571E90();
    __swift_project_value_buffer(v28, (uint64_t)qword_1E96F3940);
    id v29 = v25;
    id v30 = v25;
    uint64_t v31 = sub_1A7571E80();
    os_log_type_t v32 = sub_1A7572FD0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      long long v87 = (void *)v34;
      *(_DWORD *)uint64_t v33 = 136315394;
      swift_getErrorValue();
      uint64_t v35 = Error.rem_errorDescription.getter((uint64_t)v85[5]);
      v86[0] = sub_1A72D1730(v35, v36, (uint64_t *)&v87);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v33 + 12) = 2080;
      v86[0] = v77(0);
      __swift_instantiateConcreteTypeFromMangledName(v78);
      uint64_t v37 = sub_1A7572670();
      v86[0] = sub_1A72D1730(v37, v38, (uint64_t *)&v87);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v31, v32, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v34, -1, -1);
      MEMORY[0x1AD0CD330](v33, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v67 = v22;
    uint64_t v68 = v21;
    uint64_t v69 = v17;
    uint64_t v70 = v10;
    uint64_t v71 = v12;
    long long v80 = (void (*)(uint64_t))v13;
    uint64_t v39 = v26;
    swift_beginAccess();
    uint64_t v40 = *v20;
    id v41 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    unint64_t v42 = (unint64_t)v82;
    sub_1A72E3408(v39, (unint64_t)v82);
    swift_bridgeObjectRetain();
    v85[0] = objc_msgSend(v41, sel_init);
    uint64_t v43 = v77(0);
    long long v87 = (void *)v43;
    uint64_t v44 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(v78);
    uint64_t v45 = sub_1A7572670();
    unint64_t v47 = v46;
    long long v81 = &v66;
    MEMORY[0x1F4188790](v45);
    *(&v66 - 6) = (uint64_t)v85;
    *(&v66 - 5) = (uint64_t)&v89;
    *(&v66 - 4) = v75;
    *(&v66 - 3) = v39;
    *(&v66 - 2) = v42;
    *(&v66 - 1) = v40;
    int v48 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v45, v47, v48, v76, (uint64_t)(&v66 - 8));
    uint64_t v78 = v44;
    uint64_t v77 = (uint64_t (*)(void))v43;
    sub_1A72E3460(v39, (unint64_t)v82);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v49 = objc_msgSend(v85[0], sel_resultStorages);
    uint64_t v50 = sub_1A75723F0();

    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    long long v87 = (void *)v50;
    sub_1A72BEE98((uint64_t)&v87, (uint64_t)v86);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      long long v81 = (uint64_t *)v39;
      uint64_t v51 = v84;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
      uint64_t v52 = v89;
      uint64_t v53 = v69;
      id v54 = (void *)swift_allocObject();
      v54[2] = v52;
      void v54[3] = v51;
      id v55 = v52;
      v54[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v56 = (uint64_t)v71;
      v67(v71, v68, v70);
      uint64_t v88 = v53;
      long long v87 = v54;
      swift_retain();
      unint64_t v57 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)&v87, v56);
      v57(v86, 0);
      id v58 = v85[0];
      id v59 = objc_msgSend(v85[0], sel_resultData);
      uint64_t v60 = sub_1A7571A20();
      unint64_t v62 = v61;

      v73();
      sub_1A75717C0();
      sub_1A72E3460(v60, v62);
      LOBYTE(v62) = (_BYTE)v87;
      id v63 = v58;
      id v64 = objc_msgSend(v63, sel_latestFetchResultToken);
      sub_1A72E3460((uint64_t)v81, (unint64_t)v82);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      long long v65 = v72;
      *uint64_t v72 = v62;
      *((void *)v65 + 1) = v64;
    }
    else
    {
      sub_1A72BEE98((uint64_t)&v87, (uint64_t)v86);
      sub_1A7447A74((uint64_t)v86, 0, 0);
      sub_1A7315924((uint64_t)v86);
      swift_willThrow();
      sub_1A72E3460(v39, (unint64_t)v82);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
    }
  }
}

void sub_1A72F5860(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v74 = a1;
  uint64_t v72 = a3;
  uint64_t v6 = sub_1A7573790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v78 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84[3] = a2;
  v84[0] = v4;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v9 = sub_1A7571820();
  id v10 = v4;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  unint64_t v12 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v77 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v10;
  v13[3] = v12;
  id v14 = v13 + 3;
  uint64_t v15 = (uint64_t)v13;
  v13[4] = sub_1A72B0A88(v11);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB705A18);
  uint64_t v17 = v6;
  uint64_t v18 = v16;
  uint64_t v21 = *(void (**)(void, void))(v7 + 16);
  uint64_t v19 = v7 + 16;
  uint64_t v20 = v21;
  uint64_t v22 = (uint64_t)v78;
  uint64_t v73 = v17;
  v21(v78, v16);
  uint64_t v83 = v77;
  v82[0] = v15;
  uint64_t v75 = v15;
  swift_retain();
  uint64_t v23 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v82, v22);
  v23(v81, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705B90);
  sub_1A72F0D38((unint64_t *)&qword_1EB7054B0, &qword_1EB704E40);
  uint64_t v24 = v76;
  uint64_t v25 = sub_1A7571800();
  if (v24)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1A7571E90();
    __swift_project_value_buffer(v27, (uint64_t)qword_1E96F3940);
    uint64_t v28 = v24;
    id v29 = v24;
    id v30 = sub_1A7571E80();
    os_log_type_t v31 = sub_1A7572FD0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v82[0] = v33;
      *(_DWORD *)uint64_t v32 = 136315394;
      swift_getErrorValue();
      uint64_t v34 = Error.rem_errorDescription.getter((uint64_t)v80[5]);
      v81[0] = sub_1A72D1730(v34, v35, v82);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v32 + 12) = 2080;
      v81[0] = type metadata accessor for REMListStableSortingDataView.Invocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1870);
      uint64_t v36 = sub_1A7572670();
      v81[0] = sub_1A72D1730(v36, v37, v82);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v30, v31, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v33, -1, -1);
      MEMORY[0x1AD0CD330](v32, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v38 = v25;
    unint64_t v39 = v26;
    uint64_t v68 = (void (*)(char *, uint64_t, uint64_t))v20;
    uint64_t v69 = v18;
    uint64_t v70 = v19;
    uint64_t v71 = v9;
    swift_beginAccess();
    uint64_t v40 = *v14;
    id v41 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v38, v39);
    swift_bridgeObjectRetain();
    v80[0] = objc_msgSend(v41, sel_init);
    v82[0] = type metadata accessor for REMListStableSortingDataView.Invocation();
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1870);
    uint64_t v43 = v38;
    uint64_t v44 = sub_1A7572670();
    unint64_t v46 = v45;
    uint64_t v76 = &v66;
    MEMORY[0x1F4188790](v44);
    *(&v66 - 6) = (uint64_t)v80;
    *(&v66 - 5) = (uint64_t)v84;
    *(&v66 - 4) = v74;
    *(&v66 - 3) = v38;
    *(&v66 - 2) = v39;
    *(&v66 - 1) = v40;
    int v47 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v44, v46, v47, (void (*)(void))sub_1A731590C, (uint64_t)(&v66 - 8));
    uint64_t v74 = v42;
    sub_1A72E3460(v38, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v48 = objc_msgSend(v80[0], sel_resultStorages);
    uint64_t v49 = sub_1A75723F0();

    uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v82[0] = v49;
    sub_1A72BEE98((uint64_t)v82, (uint64_t)v81);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v67 = v43;
      uint64_t v76 = (uint64_t *)v39;
      uint64_t v50 = v79;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
      uint64_t v51 = (void *)v84[0];
      uint64_t v52 = v77;
      uint64_t v53 = (void *)swift_allocObject();
      v53[2] = v51;
      v53[3] = v50;
      id v54 = v51;
      v53[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v55 = (uint64_t)v78;
      v68(v78, v69, v73);
      uint64_t v83 = v52;
      v82[0] = (uint64_t)v53;
      swift_retain();
      uint64_t v56 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v82, v55);
      v56(v81, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1878);
      id v57 = v80[0];
      id v58 = objc_msgSend(v80[0], sel_resultData);
      uint64_t v59 = sub_1A7571A20();
      unint64_t v61 = v60;

      sub_1A7317D18();
      sub_1A75717C0();
      sub_1A72E3460(v59, v61);
      uint64_t v62 = v82[0];
      swift_bridgeObjectRetain();
      id v63 = v57;
      id v64 = objc_msgSend(v63, sel_latestFetchResultToken);
      sub_1A72E3460(v67, (unint64_t)v76);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      long long v65 = v72;
      *uint64_t v72 = v62;
      v65[1] = (uint64_t)v64;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v82, (uint64_t)v81);
      sub_1A7447A74((uint64_t)v81, 0, 0);
      sub_1A7315924((uint64_t)v81);
      swift_willThrow();
      sub_1A72E3460(v43, v39);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    }
  }
}

void sub_1A72F6410(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

void sub_1A72F6458(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

void sub_1A72F64A0(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t *a4@<X3>, void (*a5)(void)@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v73 = a5;
  uint64_t v75 = a4;
  uint64_t v74 = a3;
  uint64_t v77 = a2;
  uint64_t v72 = a1;
  uint64_t v71 = a6;
  uint64_t v7 = sub_1A7573790();
  uint64_t v79 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v85 = v6;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v10 = sub_1A7571820();
  id v11 = v6;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  unint64_t v13 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v14 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v11;
  uint64_t v16 = (uint64_t)v15;
  v15[3] = v13;
  uint64_t v17 = (void (**)(char *, uint64_t, uint64_t))(v15 + 3);
  v15[4] = sub_1A72B0A88(v12);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB705A18);
  uint64_t v19 = v7;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
  v79 += 16;
  v20(v9, v18, v19);
  uint64_t v84 = v14;
  v83[0] = v16;
  uint64_t v76 = v16;
  swift_retain();
  uint64_t v21 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v83, (uint64_t)v9);
  v21(v82, 0);
  type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(0);
  sub_1A72F0548(&qword_1E96F1850, (void (*)(uint64_t))type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters);
  uint64_t v77 = v10;
  uint64_t v22 = v78;
  uint64_t v23 = sub_1A7571800();
  if (v22)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1A7571E90();
    __swift_project_value_buffer(v25, (uint64_t)qword_1E96F3940);
    id v26 = v22;
    id v27 = v22;
    uint64_t v28 = sub_1A7571E80();
    os_log_type_t v29 = sub_1A7572FD0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      v83[0] = v31;
      *(_DWORD *)uint64_t v30 = 136315394;
      swift_getErrorValue();
      uint64_t v32 = Error.rem_errorDescription.getter((uint64_t)v81[5]);
      v82[0] = sub_1A72D1730(v32, v33, v83);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v30 + 12) = 2080;
      v82[0] = v74(0);
      __swift_instantiateConcreteTypeFromMangledName(v75);
      uint64_t v34 = sub_1A7572670();
      v82[0] = sub_1A72D1730(v34, v35, v83);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v28, v29, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v31, -1, -1);
      MEMORY[0x1AD0CD330](v30, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    unint64_t v36 = v24;
    uint64_t v66 = v20;
    uint64_t v67 = v18;
    uint64_t v68 = v14;
    uint64_t v69 = v19;
    uint64_t v70 = v9;
    uint64_t v37 = v23;
    swift_beginAccess();
    uint64_t v38 = *v17;
    id v39 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v37, v36);
    swift_bridgeObjectRetain();
    v81[0] = objc_msgSend(v39, sel_init);
    uint64_t v40 = (uint64_t *)v74(0);
    v83[0] = (uint64_t)v40;
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(v75);
    uint64_t v42 = sub_1A7572670();
    unint64_t v44 = v43;
    uint64_t v78 = (void (**)(void, void, void))&v66;
    MEMORY[0x1F4188790](v42);
    *(&v66 - 6) = (void (*)(char *, uint64_t, uint64_t))v81;
    *(&v66 - 5) = (void (*)(char *, uint64_t, uint64_t))&v85;
    *(&v66 - 4) = v72;
    *(&v66 - 3) = (void (*)(char *, uint64_t, uint64_t))v37;
    *(&v66 - 2) = (void (*)(char *, uint64_t, uint64_t))v36;
    *(&v66 - 1) = v38;
    int v45 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v42, v44, v45, v73, (uint64_t)(&v66 - 8));
    uint64_t v74 = (uint64_t (*)(void))v41;
    uint64_t v75 = v40;
    sub_1A72E3460(v37, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v46 = objc_msgSend(v81[0], sel_resultStorages);
    uint64_t v47 = sub_1A75723F0();

    uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v83[0] = v47;
    sub_1A72BEE98((uint64_t)v83, (uint64_t)v82);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    uint64_t v48 = v37;
    if (swift_dynamicCast())
    {
      uint64_t v78 = (void (**)(void, void, void))v36;
      uint64_t v49 = v80;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
      uint64_t v50 = v85;
      uint64_t v51 = v68;
      uint64_t v52 = (void *)swift_allocObject();
      v52[2] = v50;
      v52[3] = v49;
      id v53 = v50;
      v52[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v54 = (uint64_t)v70;
      v66(v70, v67, v69);
      uint64_t v84 = v51;
      v83[0] = (uint64_t)v52;
      swift_retain();
      uint64_t v55 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v83, v54);
      v55(v82, 0);
      id v56 = v81[0];
      id v57 = objc_msgSend(v81[0], sel_resultData);
      uint64_t v58 = sub_1A7571A20();
      unint64_t v60 = v59;

      sub_1A7317CC4();
      sub_1A75717C0();
      sub_1A72E3460(v58, v60);
      uint64_t v61 = v83[0];
      uint64_t v62 = v83[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v63 = v56;
      id v64 = objc_msgSend(v63, sel_latestFetchResultToken);
      sub_1A72E3460(v48, (unint64_t)v78);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      long long v65 = v71;
      uint64_t *v71 = v61;
      v65[1] = v62;
      _OWORD v65[2] = (uint64_t)v64;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v83, (uint64_t)v82);
      sub_1A7447A74((uint64_t)v82, 0, 0);
      sub_1A7315924((uint64_t)v82);
      swift_willThrow();
      sub_1A72E3460(v37, v36);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    }
  }
}

void sub_1A72F7068(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v86 = a1;
  uint64_t v83 = a4;
  uint64_t v84 = type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result(0);
  uint64_t v8 = MEMORY[0x1F4188790](v84);
  uint64_t v82 = (uint64_t)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  long long v85 = (char *)&v73 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v81 = (uint64_t)&v73 - v12;
  uint64_t v13 = sub_1A7573790();
  uint64_t v90 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = a2;
  char v97 = a3;
  uint64_t v98 = v5;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v16 = sub_1A7571820();
  id v17 = v5;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  unint64_t v19 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v20 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v17;
  uint64_t v22 = (uint64_t)v21;
  v21[3] = v19;
  uint64_t v23 = v21 + 3;
  v21[4] = sub_1A72B0A88(v18);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v24 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB705A18);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
  v90 += 16;
  v25(v15, v24, v13);
  uint64_t v95 = v20;
  long long v94 = (void *)v22;
  uint64_t v87 = v22;
  swift_retain();
  id v26 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v94, (uint64_t)v15);
  v26(v93, 0);
  sub_1A7317B40();
  uint64_t v88 = v16;
  id v27 = v89;
  uint64_t v28 = sub_1A7571800();
  if (v27)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1A7571E90();
    __swift_project_value_buffer(v30, (uint64_t)qword_1E96F3940);
    uint64_t v31 = v27;
    uint64_t v32 = v27;
    unint64_t v33 = sub_1A7571E80();
    os_log_type_t v34 = sub_1A7572FD0();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      long long v94 = (void *)v36;
      *(_DWORD *)uint64_t v35 = 136315394;
      swift_getErrorValue();
      uint64_t v37 = Error.rem_errorDescription.getter((uint64_t)v92[5]);
      v93[0] = sub_1A72D1730(v37, v38, (uint64_t *)&v94);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v35 + 12) = 2080;
      v93[0] = type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1838);
      uint64_t v39 = sub_1A7572670();
      v93[0] = sub_1A72D1730(v39, v40, (uint64_t *)&v94);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v33, v34, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v36, -1, -1);
      MEMORY[0x1AD0CD330](v35, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v41 = v28;
    unint64_t v42 = v29;
    uint64_t v76 = v25;
    uint64_t v77 = v15;
    uint64_t v78 = v24;
    uint64_t v79 = v20;
    uint64_t v80 = v13;
    swift_beginAccess();
    uint64_t v43 = *v23;
    id v44 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v41, v42);
    swift_bridgeObjectRetain();
    v92[0] = objc_msgSend(v44, sel_init);
    uint64_t v45 = type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation();
    long long v94 = (void *)v45;
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1838);
    uint64_t v47 = sub_1A7572670();
    unint64_t v49 = v48;
    long long v89 = &v73;
    MEMORY[0x1F4188790](v47);
    *(&v73 - 6) = (uint64_t)v92;
    *(&v73 - 5) = (uint64_t)&v98;
    *(&v73 - 4) = v86;
    *(&v73 - 3) = v41;
    *(&v73 - 2) = v42;
    *(&v73 - 1) = v43;
    int v50 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v47, v49, v50, (void (*)(void))sub_1A731590C, (uint64_t)(&v73 - 8));
    uint64_t v75 = v46;
    uint64_t v86 = v45;
    uint64_t v51 = v41;
    sub_1A72E3460(v41, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v52 = objc_msgSend(v92[0], sel_resultStorages);
    uint64_t v53 = sub_1A75723F0();

    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    long long v94 = (void *)v53;
    sub_1A72BEE98((uint64_t)&v94, (uint64_t)v93);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      long long v89 = (uint64_t *)v42;
      uint64_t v74 = v51;
      uint64_t v54 = v91;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v94);
      uint64_t v55 = v98;
      uint64_t v56 = v79;
      id v57 = (void *)swift_allocObject();
      v57[2] = v55;
      uint64_t v57[3] = v54;
      id v58 = v55;
      v57[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v59 = (uint64_t)v77;
      v76(v77, v78, v80);
      uint64_t v95 = v56;
      long long v94 = v57;
      swift_retain();
      unint64_t v60 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)&v94, v59);
      v60(v93, 0);
      id v61 = v92[0];
      id v62 = objc_msgSend(v92[0], sel_resultData);
      uint64_t v63 = sub_1A7571A20();
      unint64_t v65 = v64;

      sub_1A72F0548(&qword_1E96F1840, (void (*)(uint64_t))type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
      uint64_t v66 = v85;
      sub_1A75717C0();
      sub_1A72E3460(v63, v65);
      uint64_t v67 = (uint64_t)v66;
      uint64_t v68 = v81;
      sub_1A7317B94(v67, v81, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
      uint64_t v69 = v82;
      sub_1A7317BFC(v68, v82, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
      id v70 = v61;
      id v71 = objc_msgSend(v70, sel_latestFetchResultToken);
      sub_1A72E3460(v74, (unint64_t)v89);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      sub_1A7317C64(v68, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
      uint64_t v72 = v83;
      sub_1A7317B94(v69, v83, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
      *(void *)(v72 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1848) + 28)) = v71;
    }
    else
    {
      sub_1A72BEE98((uint64_t)&v94, (uint64_t)v93);
      sub_1A7447A74((uint64_t)v93, 0, 0);
      sub_1A7315924((uint64_t)v93);
      swift_willThrow();
      sub_1A72E3460(v51, v42);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v94);
    }
  }
}

void sub_1A72F7D10(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v97 = a3;
  uint64_t v98 = a1;
  unint64_t v6 = a2 >> 8;
  unint64_t v7 = a2 >> 24;
  uint64_t v8 = sub_1A7573790();
  uint64_t v104 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v103 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v132 = a2 & 1;
  char v133 = v6;
  char v134 = BYTE2(a2) & 1;
  char v135 = v7;
  char v136 = BYTE4(a2) & 1;
  char v137 = BYTE5(a2) & 1;
  int v131 = v4;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v10 = sub_1A7571820();
  id v11 = v4;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  unint64_t v13 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v102 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v11;
  uint64_t v15 = v14;
  v14[3] = v13;
  uint64_t v16 = v14 + 3;
  v14[4] = sub_1A72B0A88(v12);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB705A18);
  uint64_t v18 = (uint64_t)v103;
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
  v104 += 16;
  v19(v103, v17, v8);
  *((void *)&v119 + 1) = v102;
  *(void *)&long long v118 = v15;
  uint64_t v101 = v15;
  swift_retain();
  uint64_t v20 = (void (*)(long long *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v118, v18);
  v20(&v106, 0);
  sub_1A731791C();
  uint64_t v100 = v10;
  id v21 = v105;
  uint64_t v22 = sub_1A7571800();
  unint64_t v99 = v23;
  id v105 = v21;
  if (v21)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1A7571E90();
    __swift_project_value_buffer(v24, (uint64_t)qword_1E96F3940);
    id v25 = v105;
    id v26 = v105;
    id v27 = v25;
    uint64_t v28 = sub_1A7571E80();
    os_log_type_t v29 = sub_1A7572FD0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(void *)&long long v118 = v31;
      *(_DWORD *)uint64_t v30 = 136315394;
      id v32 = v105;
      swift_getErrorValue();
      uint64_t v33 = Error.rem_errorDescription.getter((uint64_t)v130[5]);
      *(void *)&long long v106 = sub_1A72D1730(v33, v34, (uint64_t *)&v118);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v30 + 12) = 2080;
      *(void *)&long long v106 = type metadata accessor for REMAccountsListDataView.Invocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7008F8);
      uint64_t v35 = sub_1A7572670();
      *(void *)&long long v106 = sub_1A72D1730(v35, v36, (uint64_t *)&v118);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v28, v29, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v31, -1, -1);
      MEMORY[0x1AD0CD330](v30, -1, -1);
    }
    else
    {
      id v49 = v105;
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v37 = v22;
    long long v93 = v19;
    uint64_t v94 = v17;
    uint64_t v95 = v8;
    swift_beginAccess();
    uint64_t v38 = *v16;
    id v39 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    unint64_t v40 = v99;
    sub_1A72E3408(v37, v99);
    swift_bridgeObjectRetain();
    v130[0] = objc_msgSend(v39, sel_init);
    uint64_t v41 = type metadata accessor for REMAccountsListDataView.Invocation();
    *(void *)&long long v118 = v41;
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7008F8);
    uint64_t v43 = sub_1A7572670();
    unint64_t v45 = v44;
    uint64_t v96 = &v92;
    MEMORY[0x1F4188790](v43);
    *(&v92 - 6) = (uint64_t)v130;
    *(&v92 - 5) = (uint64_t)&v131;
    *(&v92 - 4) = v98;
    *(&v92 - 3) = v37;
    *(&v92 - 2) = v40;
    *(&v92 - 1) = v38;
    int v46 = sub_1A7572FB0();
    id v47 = v105;
    measureTimeElapsed(_:level:block:)(v43, v45, v46, (void (*)(void))sub_1A731590C, (uint64_t)(&v92 - 8));
    id v105 = v47;
    if (v47)
    {
      unint64_t v48 = v99;
      sub_1A72E3460(v37, v99);
      sub_1A72E3460(v37, v48);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v92 = v42;
      uint64_t v98 = v41;
      sub_1A72E3460(v37, v99);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A75717F0();
      swift_allocObject();
      uint64_t v50 = sub_1A75717E0();
      id v51 = objc_msgSend(v130[0], sel_resultStorages);
      uint64_t v52 = sub_1A75723F0();

      *((void *)&v119 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
      *(void *)&long long v118 = v52;
      sub_1A72BEE98((uint64_t)&v118, (uint64_t)&v106);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
      if (swift_dynamicCast())
      {
        uint64_t v53 = v129;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v118);
        uint64_t v54 = v131;
        uint64_t v55 = v102;
        uint64_t v56 = (void *)swift_allocObject();
        v56[2] = v54;
        v56[3] = v53;
        id v57 = v54;
        v56[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
        uint64_t v58 = (uint64_t)v103;
        v93(v103, v94, v95);
        *((void *)&v119 + 1) = v55;
        *(void *)&long long v118 = v56;
        swift_retain();
        uint64_t v59 = (void (*)(long long *, void))sub_1A75717D0();
        sub_1A7447898((uint64_t)&v118, v58);
        v59(&v106, 0);
        id v60 = v130[0];
        id v61 = objc_msgSend(v130[0], sel_resultData);
        uint64_t v62 = sub_1A7571A20();
        unint64_t v64 = v63;

        sub_1A7317970();
        id v65 = v105;
        sub_1A75717C0();
        uint64_t v66 = (char *)v50;
        id v105 = v65;
        if (!v65)
        {
          sub_1A72E3460(v62, v64);
          long long v114 = v126;
          long long v115 = v127;
          uint64_t v116 = v128;
          long long v110 = v122;
          long long v111 = v123;
          long long v112 = v124;
          long long v113 = v125;
          long long v106 = v118;
          long long v107 = v119;
          long long v108 = v120;
          long long v109 = v121;
          sub_1A73179C4((uint64_t)&v106);
          id v82 = v60;
          id v83 = objc_msgSend(v82, sel_latestFetchResultToken);
          sub_1A72E3460(v37, v99);
          swift_release();
          swift_release();

          swift_release();
          swift_release();
          sub_1A7317A84((uint64_t)&v106);

          long long v84 = v115;
          uint64_t v85 = v97;
          *(_OWORD *)(v97 + 128) = v114;
          *(_OWORD *)(v85 + 144) = v84;
          uint64_t v86 = v116;
          long long v87 = v111;
          *(_OWORD *)(v85 + 64) = v110;
          *(_OWORD *)(v85 + 80) = v87;
          long long v88 = v113;
          *(_OWORD *)(v85 + 96) = v112;
          *(_OWORD *)(v85 + 112) = v88;
          long long v89 = v107;
          *(_OWORD *)uint64_t v85 = v106;
          *(_OWORD *)(v85 + 16) = v89;
          long long v90 = v109;
          *(_OWORD *)(v85 + 32) = v108;
          *(_OWORD *)(v85 + 48) = v90;
          *(void *)(v85 + 160) = v86;
          *(void *)(v85 + 168) = v83;
          return;
        }
        uint64_t v104 = v37;
        sub_1A72E3460(v62, v64);
        if (qword_1E96F0838 != -1) {
          swift_once();
        }
        uint64_t v67 = sub_1A7571E90();
        __swift_project_value_buffer(v67, (uint64_t)qword_1E96F3940);
        id v68 = v105;
        id v69 = v105;
        id v70 = v68;
        id v71 = sub_1A7571E80();
        os_log_type_t v72 = sub_1A7572FD0();
        if (os_log_type_enabled(v71, v72))
        {
          uint64_t v73 = swift_slowAlloc();
          uint64_t v74 = swift_slowAlloc();
          uint64_t v103 = v66;
          uint64_t v75 = v74;
          *(void *)&long long v118 = v74;
          *(_DWORD *)uint64_t v73 = 136315394;
          id v76 = v105;
          swift_getErrorValue();
          uint64_t v77 = Error.rem_errorDescription.getter(v117);
          *(void *)&long long v106 = sub_1A72D1730(v77, v78, (uint64_t *)&v118);
          sub_1A7573250();
          swift_bridgeObjectRelease();

          *(_WORD *)(v73 + 12) = 2080;
          *(void *)&long long v106 = v98;
          uint64_t v79 = sub_1A7572670();
          *(void *)&long long v106 = sub_1A72D1730(v79, v80, (uint64_t *)&v118);
          sub_1A7573250();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A72A1000, v71, v72, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v73, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AD0CD330](v75, -1, -1);
          MEMORY[0x1AD0CD330](v73, -1, -1);
        }
        else
        {
          id v91 = v105;
        }
        swift_willThrow();
        sub_1A72E3460(v104, v99);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
      else
      {
        sub_1A72BEE98((uint64_t)&v118, (uint64_t)&v106);
        id v81 = sub_1A7447A74((uint64_t)&v106, 0, 0);
        sub_1A7315924((uint64_t)&v106);
        id v105 = v81;
        swift_willThrow();
        sub_1A72E3460(v37, v99);
        swift_release();
        swift_release();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v118);
      }
    }
  }
}

void sub_1A72F882C(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v88 = a3;
  uint64_t v89 = a1;
  uint64_t v4 = sub_1A7573790();
  uint64_t v95 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v94 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v115 = v3;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v6 = sub_1A7571820();
  id v7 = v3;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v93 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v7;
  v10[3] = v9;
  id v11 = v10 + 3;
  uint64_t v12 = v10;
  v10[4] = sub_1A72B0A88(v8);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB705A18);
  uint64_t v14 = (uint64_t)v94;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 16);
  v95 += 16;
  v15(v94, v13, v4);
  *((void *)&v106 + 1) = v93;
  *(void *)&long long v105 = v12;
  long long v90 = v12;
  swift_retain();
  uint64_t v16 = (void (*)(long long *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v105, v14);
  v16(&v96, 0);
  type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters(0);
  sub_1A72F0548(&qword_1E96F1810, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters);
  uint64_t v17 = v92;
  uint64_t v91 = v6;
  uint64_t v18 = sub_1A7571800();
  if (v17)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E96F3940);
    id v21 = v17;
    id v22 = v17;
    unint64_t v23 = sub_1A7571E80();
    os_log_type_t v24 = sub_1A7572FD0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(void *)&long long v105 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_getErrorValue();
      uint64_t v27 = Error.rem_errorDescription.getter((uint64_t)v114[5]);
      *(void *)&long long v96 = sub_1A72D1730(v27, v28, (uint64_t *)&v105);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v25 + 12) = 2080;
      *(void *)&long long v96 = type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1818);
      uint64_t v29 = sub_1A7572670();
      *(void *)&long long v96 = sub_1A72D1730(v29, v30, (uint64_t *)&v105);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v23, v24, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v26, -1, -1);
      MEMORY[0x1AD0CD330](v25, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v31 = v18;
    long long v84 = v15;
    uint64_t v85 = v13;
    uint64_t v86 = v4;
    unint64_t v32 = v19;
    swift_beginAccess();
    uint64_t v33 = *v11;
    id v34 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v31, v32);
    swift_bridgeObjectRetain();
    v114[0] = objc_msgSend(v34, sel_init);
    uint64_t v35 = type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation();
    uint64_t v92 = 0;
    uint64_t v36 = v35;
    *(void *)&long long v105 = v35;
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1818);
    uint64_t v38 = sub_1A7572670();
    unint64_t v40 = v39;
    long long v87 = &v82;
    MEMORY[0x1F4188790](v38);
    *(&v82 - 6) = (uint64_t)v114;
    *(&v82 - 5) = (uint64_t)&v115;
    *(&v82 - 4) = v89;
    *(&v82 - 3) = v31;
    uint64_t v89 = v32;
    *(&v82 - 2) = v32;
    *(&v82 - 1) = v33;
    int v41 = sub_1A7572FB0();
    uint64_t v42 = v92;
    measureTimeElapsed(_:level:block:)(v38, v40, v41, (void (*)(void))sub_1A731590C, (uint64_t)(&v82 - 8));
    uint64_t v92 = v42;
    if (v42)
    {
      uint64_t v43 = v31;
      uint64_t v44 = v31;
      unint64_t v45 = v89;
      sub_1A72E3460(v43, v89);
      sub_1A72E3460(v44, v45);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

      return;
    }
    uint64_t v82 = v37;
    uint64_t v83 = v36;
    sub_1A72E3460(v31, v89);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v46 = v31;
    uint64_t v47 = sub_1A75717E0();
    id v48 = objc_msgSend(v114[0], sel_resultStorages);
    uint64_t v49 = sub_1A75723F0();

    *((void *)&v106 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    *(void *)&long long v105 = v49;
    sub_1A72BEE98((uint64_t)&v105, (uint64_t)&v96);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      long long v87 = (void *)v46;
      uint64_t v50 = v113;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
      id v51 = v115;
      uint64_t v52 = v93;
      uint64_t v53 = (void *)swift_allocObject();
      v53[2] = v51;
      v53[3] = v50;
      id v54 = v51;
      v53[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v55 = (uint64_t)v94;
      v84(v94, v85, v86);
      *((void *)&v106 + 1) = v52;
      *(void *)&long long v105 = v53;
      swift_retain();
      uint64_t v56 = (void (*)(long long *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)&v105, v55);
      v56(&v96, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1820);
      uint64_t v95 = v47;
      id v57 = v114[0];
      id v58 = objc_msgSend(v114[0], sel_resultData);
      uint64_t v59 = sub_1A7571A20();
      unint64_t v61 = v60;

      sub_1A7317738(&qword_1E96F1828, &qword_1E96F1820);
      uint64_t v62 = v92;
      sub_1A75717C0();
      if (!v62)
      {
        sub_1A72E3460(v59, v61);
        long long v100 = v109;
        long long v101 = v110;
        long long v102 = v111;
        long long v103 = v112;
        long long v96 = v105;
        long long v97 = v106;
        long long v98 = v107;
        long long v99 = v108;
        sub_1A7317788((uint64_t)&v96);
        id v74 = v57;
        id v75 = objc_msgSend(v74, sel_latestFetchResultToken);
        sub_1A72E3460((uint64_t)v87, v89);
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        sub_1A7317850((uint64_t)&v96);

        long long v76 = v101;
        uint64_t v77 = v88;
        *(_OWORD *)(v88 + 64) = v100;
        *(_OWORD *)(v77 + 80) = v76;
        long long v78 = v103;
        *(_OWORD *)(v77 + 96) = v102;
        *(_OWORD *)(v77 + 112) = v78;
        long long v79 = v97;
        *(_OWORD *)uint64_t v77 = v96;
        *(_OWORD *)(v77 + 16) = v79;
        long long v80 = v99;
        *(_OWORD *)(v77 + 32) = v98;
        *(_OWORD *)(v77 + 48) = v80;
        *(void *)(v77 + 128) = v75;
        return;
      }
      sub_1A72E3460(v59, v61);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v63 = sub_1A7571E90();
      __swift_project_value_buffer(v63, (uint64_t)qword_1E96F3940);
      id v64 = v62;
      id v65 = v62;
      uint64_t v66 = sub_1A7571E80();
      os_log_type_t v67 = sub_1A7572FD0();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = swift_slowAlloc();
        uint64_t v69 = swift_slowAlloc();
        *(void *)&long long v105 = v69;
        *(_DWORD *)uint64_t v68 = 136315394;
        swift_getErrorValue();
        uint64_t v70 = Error.rem_errorDescription.getter(v104);
        *(void *)&long long v96 = sub_1A72D1730(v70, v71, (uint64_t *)&v105);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v68 + 12) = 2080;
        *(void *)&long long v96 = v83;
        uint64_t v72 = sub_1A7572670();
        *(void *)&long long v96 = sub_1A72D1730(v72, v73, (uint64_t *)&v105);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v66, v67, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v69, -1, -1);
        MEMORY[0x1AD0CD330](v68, -1, -1);
      }
      else
      {
      }
      unint64_t v81 = v89;
      swift_willThrow();
      sub_1A72E3460((uint64_t)v87, v81);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)&v105, (uint64_t)&v96);
      sub_1A7447A74((uint64_t)&v96, 0, 0);
      sub_1A7315924((uint64_t)&v96);
      swift_willThrow();
      sub_1A72E3460(v46, v89);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
    }
  }
}

void sub_1A72F9338(void *a1@<X0>, uint64_t a2@<X1>, void (**a3)(char *, uint64_t, uint64_t)@<X8>)
{
  uint64_t v102 = a2;
  id v100 = a1;
  long long v99 = (void (**)(char *, uint64_t, uint64_t))a3;
  uint64_t v4 = sub_1A7573790();
  uint64_t v106 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v105 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v121 = v3;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v6 = sub_1A7571820();
  id v7 = v3;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v104 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v7;
  v10[3] = v9;
  id v11 = v10 + 3;
  uint64_t v12 = (uint64_t)v10;
  v10[4] = sub_1A72B0A88(v8);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB705A18);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 16);
  uint64_t v15 = (uint64_t)v105;
  v106 += 16;
  v14(v105, v13, v4);
  uint64_t v109 = v104;
  v108[0] = v12;
  uint64_t v101 = v12;
  swift_retain();
  uint64_t v16 = (void (*)(uint64_t *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v108, v15);
  v16(&v120, 0);
  type metadata accessor for REMRemindersListDataView.ListSectionsInvocation.Parameters(0);
  sub_1A72F0548(&qword_1EB700918, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.ListSectionsInvocation.Parameters);
  uint64_t v102 = v6;
  uint64_t v17 = v103;
  uint64_t v18 = sub_1A7571800();
  long long v103 = (void *)v19;
  if (v17)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E96F3940);
    id v21 = v17;
    id v22 = v17;
    unint64_t v23 = sub_1A7571E80();
    os_log_type_t v24 = sub_1A7572FD0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v108[0] = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_getErrorValue();
      uint64_t v27 = Error.rem_errorDescription.getter((uint64_t)v119[5]);
      uint64_t v120 = sub_1A72D1730(v27, v28, v108);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v120 = type metadata accessor for REMRemindersListDataView.ListSectionsInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700920);
      uint64_t v29 = sub_1A7572670();
      uint64_t v120 = sub_1A72D1730(v29, v30, v108);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v23, v24, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v26, -1, -1);
      MEMORY[0x1AD0CD330](v25, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v31 = v18;
    uint64_t v95 = v14;
    uint64_t v96 = v13;
    uint64_t v97 = v4;
    swift_beginAccess();
    uint64_t v32 = *v11;
    id v33 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    unint64_t v34 = (unint64_t)v103;
    sub_1A72E3408(v31, (unint64_t)v103);
    swift_bridgeObjectRetain();
    v119[0] = objc_msgSend(v33, sel_init);
    uint64_t v35 = type metadata accessor for REMRemindersListDataView.ListSectionsInvocation();
    v108[0] = v35;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700920);
    uint64_t v37 = sub_1A7572670();
    unint64_t v39 = v38;
    long long v98 = &v89;
    MEMORY[0x1F4188790](v37);
    *(&v89 - 6) = (uint64_t)v119;
    *(&v89 - 5) = (uint64_t)&v121;
    *(&v89 - 4) = (uint64_t)v100;
    *(&v89 - 3) = v31;
    *(&v89 - 2) = v34;
    *(&v89 - 1) = v32;
    int v40 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v37, v39, v40, (void (*)(void))sub_1A731590C, (uint64_t)(&v89 - 8));
    id v100 = 0;
    id v93 = (id)v36;
    uint64_t v94 = v35;
    sub_1A72E3460(v31, (unint64_t)v103);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v41 = sub_1A75717E0();
    id v42 = objc_msgSend(v119[0], sel_resultStorages);
    uint64_t v43 = sub_1A75723F0();

    uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v108[0] = v43;
    sub_1A72BEE98((uint64_t)v108, (uint64_t)&v120);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      long long v98 = (uint64_t *)v31;
      uint64_t v44 = v118;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
      unint64_t v45 = v121;
      uint64_t v46 = v104;
      uint64_t v47 = (void *)swift_allocObject();
      _OWORD v47[2] = v45;
      v47[3] = v44;
      id v48 = v45;
      v47[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v49 = (uint64_t)v105;
      v95(v105, v96, v97);
      uint64_t v109 = v46;
      v108[0] = (uint64_t)v47;
      swift_retain();
      uint64_t v50 = (void (*)(uint64_t *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v108, v49);
      v50(&v120, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700978);
      id v51 = v119[0];
      id v52 = objc_msgSend(v119[0], sel_resultData);
      uint64_t v53 = sub_1A7571A20();
      unint64_t v55 = v54;

      sub_1A7317738(&qword_1EB700970, &qword_1EB700978);
      uint64_t v56 = v41;
      id v57 = v100;
      sub_1A75717C0();
      id v100 = v57;
      if (!v57)
      {
        sub_1A72E3460(v53, v55);
        uint64_t v95 = (void (*)(char *, uint64_t, uint64_t))v108[0];
        uint64_t v106 = v108[1];
        long long v105 = (char *)v108[2];
        LODWORD(v104) = v109;
        LODWORD(v97) = BYTE1(v109);
        uint64_t v94 = v110;
        uint64_t v92 = v111;
        uint64_t v72 = v112;
        uint64_t v73 = v113;
        uint64_t v96 = v56;
        uint64_t v75 = v114;
        uint64_t v74 = v115;
        uint64_t v76 = v116;
        uint64_t v77 = v117;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v78 = v72;
        uint64_t v79 = v73;
        swift_bridgeObjectRetain();
        uint64_t v80 = v75;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v90 = v76;
        swift_bridgeObjectRetain();
        uint64_t v91 = v77;
        swift_bridgeObjectRetain();
        id v81 = v51;
        id v93 = objc_msgSend(v81, sel_latestFetchResultToken);
        sub_1A72E3460((uint64_t)v98, (unint64_t)v103);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v82 = v92;
        swift_bridgeObjectRelease();
        uint64_t v83 = v94;
        swift_bridgeObjectRelease();
        long long v84 = v95;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        uint64_t v85 = v99;
        uint64_t v86 = v106;
        *long long v99 = v84;
        v85[1] = v86;
        v85[2] = v105;
        *((unsigned char *)v85 + 24) = v104;
        *((unsigned char *)v85 + 25) = v97;
        v85[4] = v83;
        v85[5] = v82;
        id v85[6] = v78;
        v85[7] = v79;
        v85[8] = v80;
        v85[9] = v74;
        uint64_t v87 = v91;
        v85[10] = v90;
        v85[11] = v87;
        v85[12] = v93;
        return;
      }
      uint64_t v106 = (uint64_t)v47;
      sub_1A72E3460(v53, v55);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_1A7571E90();
      __swift_project_value_buffer(v58, (uint64_t)qword_1E96F3940);
      id v59 = v100;
      id v60 = v100;
      id v61 = v59;
      uint64_t v62 = sub_1A7571E80();
      os_log_type_t v63 = sub_1A7572FD0();
      BOOL v64 = os_log_type_enabled(v62, v63);
      uint64_t v65 = v94;
      if (v64)
      {
        uint64_t v66 = swift_slowAlloc();
        uint64_t v67 = swift_slowAlloc();
        v108[0] = v67;
        *(_DWORD *)uint64_t v66 = 136315394;
        swift_getErrorValue();
        uint64_t v68 = Error.rem_errorDescription.getter(v107);
        uint64_t v120 = sub_1A72D1730(v68, v69, v108);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v66 + 12) = 2080;
        uint64_t v120 = v65;
        uint64_t v70 = sub_1A7572670();
        uint64_t v120 = sub_1A72D1730(v70, v71, v108);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v62, v63, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v66, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v67, -1, -1);
        MEMORY[0x1AD0CD330](v66, -1, -1);
      }
      else
      {
      }
      uint64_t v88 = (uint64_t)v98;
      swift_willThrow();
      sub_1A72E3460(v88, (unint64_t)v103);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)v108, (uint64_t)&v120);
      sub_1A7447A74((uint64_t)&v120, 0, 0);
      sub_1A7315924((uint64_t)&v120);
      swift_willThrow();
      sub_1A72E3460(v31, (unint64_t)v103);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
    }
  }
}

void sub_1A72FA0E0(void *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v90 = a4;
  uint64_t v91 = a1;
  unsigned int v8 = a3 >> 8;
  uint64_t v9 = sub_1A7573790();
  uint64_t v97 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v96 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116[8] = a2;
  char v117 = a3;
  char v118 = v8;
  char v119 = BYTE2(a3) & 1;
  uint64_t v120 = v5;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v11 = sub_1A7571820();
  id v12 = v5;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  unint64_t v14 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v95 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v12;
  uint64_t v16 = v15;
  v15[3] = v14;
  uint64_t v17 = v15 + 3;
  v15[4] = sub_1A72B0A88(v13);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v9, (uint64_t)qword_1EB705A18);
  uint64_t v19 = (uint64_t)v96;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 16);
  v97 += 16;
  v20(v96, v18, v9);
  *((void *)&v108 + 1) = v95;
  *(void *)&long long v107 = v16;
  id v93 = v16;
  swift_retain();
  id v21 = (void (*)(long long *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v107, v19);
  v21(&v98, 0);
  sub_1A7317550();
  uint64_t v92 = v11;
  id v22 = v94;
  uint64_t v23 = sub_1A7571800();
  if (v22)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1A7571E90();
    __swift_project_value_buffer(v25, (uint64_t)qword_1E96F3940);
    id v26 = v22;
    id v27 = v22;
    unint64_t v28 = sub_1A7571E80();
    os_log_type_t v29 = sub_1A7572FD0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(void *)&long long v107 = v31;
      *(_DWORD *)uint64_t v30 = 136315394;
      swift_getErrorValue();
      uint64_t v32 = Error.rem_errorDescription.getter((uint64_t)v116[5]);
      *(void *)&long long v98 = sub_1A72D1730(v32, v33, (uint64_t *)&v107);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v30 + 12) = 2080;
      *(void *)&long long v98 = type metadata accessor for REMRemindersListDataView.TemplateSectionsInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F17F8);
      uint64_t v34 = sub_1A7572670();
      *(void *)&long long v98 = sub_1A72D1730(v34, v35, (uint64_t *)&v107);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v28, v29, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v31, -1, -1);
      MEMORY[0x1AD0CD330](v30, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v36 = v23;
    uint64_t v86 = v20;
    uint64_t v87 = v18;
    uint64_t v88 = v9;
    unint64_t v37 = v24;
    swift_beginAccess();
    uint64_t v38 = *v17;
    id v39 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v36, v37);
    swift_bridgeObjectRetain();
    v116[0] = objc_msgSend(v39, sel_init);
    uint64_t v85 = type metadata accessor for REMRemindersListDataView.TemplateSectionsInvocation();
    *(void *)&long long v107 = v85;
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F17F8);
    uint64_t v41 = sub_1A7572670();
    unint64_t v43 = v42;
    uint64_t v89 = &v84;
    MEMORY[0x1F4188790](v41);
    *(&v84 - 6) = (uint64_t)v116;
    *(&v84 - 5) = (uint64_t)&v120;
    *(&v84 - 4) = (uint64_t)v91;
    *(&v84 - 3) = v36;
    uint64_t v94 = (void *)v37;
    *(&v84 - 2) = v37;
    *(&v84 - 1) = v38;
    int v44 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v41, v43, v44, (void (*)(void))sub_1A731590C, (uint64_t)(&v84 - 8));
    uint64_t v91 = 0;
    uint64_t v84 = v40;
    sub_1A72E3460(v36, (unint64_t)v94);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v45 = v36;
    uint64_t v46 = sub_1A75717E0();
    id v47 = objc_msgSend(v116[0], sel_resultStorages);
    uint64_t v48 = sub_1A75723F0();

    *((void *)&v108 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    *(void *)&long long v107 = v48;
    sub_1A72BEE98((uint64_t)&v107, (uint64_t)&v98);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v89 = (void *)v45;
      uint64_t v49 = v115;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
      uint64_t v50 = v120;
      uint64_t v51 = v95;
      id v52 = (char *)swift_allocObject();
      *((void *)v52 + 2) = v50;
      *((void *)v52 + 3) = v49;
      id v53 = v50;
      *((void *)v52 + 4) = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v54 = (uint64_t)v96;
      v86(v96, v87, v88);
      *((void *)&v108 + 1) = v51;
      *(void *)&long long v107 = v52;
      swift_retain();
      unint64_t v55 = (void (*)(long long *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)&v107, v54);
      v55(&v98, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1800);
      id v56 = v116[0];
      id v57 = objc_msgSend(v116[0], sel_resultData);
      uint64_t v58 = v46;
      uint64_t v59 = sub_1A7571A20();
      unint64_t v61 = v60;

      sub_1A7317738(&qword_1E96F1808, &qword_1E96F1800);
      uint64_t v62 = v91;
      sub_1A75717C0();
      if (!v62)
      {
        sub_1A72E3460(v59, v61);
        long long v102 = v111;
        long long v103 = v112;
        long long v104 = v113;
        long long v105 = v114;
        long long v98 = v107;
        long long v99 = v108;
        long long v100 = v109;
        long long v101 = v110;
        sub_1A7317788((uint64_t)&v98);
        id v76 = v56;
        id v77 = objc_msgSend(v76, sel_latestFetchResultToken);
        sub_1A72E3460((uint64_t)v89, (unint64_t)v94);
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        sub_1A7317850((uint64_t)&v98);

        long long v78 = v103;
        uint64_t v79 = v90;
        *(_OWORD *)(v90 + 64) = v102;
        *(_OWORD *)(v79 + 80) = v78;
        long long v80 = v105;
        *(_OWORD *)(v79 + 96) = v104;
        *(_OWORD *)(v79 + 112) = v80;
        long long v81 = v99;
        *(_OWORD *)uint64_t v79 = v98;
        *(_OWORD *)(v79 + 16) = v81;
        long long v82 = v101;
        *(_OWORD *)(v79 + 32) = v100;
        *(_OWORD *)(v79 + 48) = v82;
        *(void *)(v79 + 128) = v77;
        return;
      }
      uint64_t v96 = v52;
      uint64_t v97 = v58;
      sub_1A72E3460(v59, v61);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v63 = sub_1A7571E90();
      __swift_project_value_buffer(v63, (uint64_t)qword_1E96F3940);
      id v64 = v62;
      id v65 = v62;
      uint64_t v66 = sub_1A7571E80();
      os_log_type_t v67 = sub_1A7572FD0();
      BOOL v68 = os_log_type_enabled(v66, v67);
      uint64_t v69 = v85;
      if (v68)
      {
        uint64_t v70 = swift_slowAlloc();
        uint64_t v71 = swift_slowAlloc();
        *(void *)&long long v107 = v71;
        *(_DWORD *)uint64_t v70 = 136315394;
        swift_getErrorValue();
        uint64_t v72 = Error.rem_errorDescription.getter(v106);
        *(void *)&long long v98 = sub_1A72D1730(v72, v73, (uint64_t *)&v107);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v70 + 12) = 2080;
        *(void *)&long long v98 = v69;
        uint64_t v74 = sub_1A7572670();
        *(void *)&long long v98 = sub_1A72D1730(v74, v75, (uint64_t *)&v107);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v66, v67, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v70, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v71, -1, -1);
        MEMORY[0x1AD0CD330](v70, -1, -1);
      }
      else
      {
      }
      unint64_t v83 = (unint64_t)v94;
      swift_willThrow();
      sub_1A72E3460((uint64_t)v89, v83);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)&v107, (uint64_t)&v98);
      sub_1A7447A74((uint64_t)&v98, 0, 0);
      sub_1A7315924((uint64_t)&v98);
      swift_willThrow();
      sub_1A72E3460(v45, (unint64_t)v94);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
    }
  }
}

void sub_1A72FABE0(void *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v90 = a4;
  uint64_t v91 = a1;
  unsigned int v8 = a3 >> 8;
  uint64_t v9 = sub_1A7573790();
  uint64_t v97 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v96 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116[8] = a2;
  char v117 = a3;
  char v118 = v8;
  char v119 = BYTE2(a3) & 1;
  uint64_t v120 = v5;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v11 = sub_1A7571820();
  id v12 = v5;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  unint64_t v14 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v95 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v12;
  uint64_t v16 = v15;
  v15[3] = v14;
  uint64_t v17 = v15 + 3;
  v15[4] = sub_1A72B0A88(v13);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v9, (uint64_t)qword_1EB705A18);
  uint64_t v19 = (uint64_t)v96;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 16);
  v97 += 16;
  v20(v96, v18, v9);
  *((void *)&v108 + 1) = v95;
  *(void *)&long long v107 = v16;
  id v93 = v16;
  swift_retain();
  id v21 = (void (*)(long long *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v107, v19);
  v21(&v98, 0);
  sub_1A7317550();
  uint64_t v92 = v11;
  id v22 = v94;
  uint64_t v23 = sub_1A7571800();
  if (v22)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1A7571E90();
    __swift_project_value_buffer(v25, (uint64_t)qword_1E96F3940);
    id v26 = v22;
    id v27 = v22;
    unint64_t v28 = sub_1A7571E80();
    os_log_type_t v29 = sub_1A7572FD0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(void *)&long long v107 = v31;
      *(_DWORD *)uint64_t v30 = 136315394;
      swift_getErrorValue();
      uint64_t v32 = Error.rem_errorDescription.getter((uint64_t)v116[5]);
      *(void *)&long long v98 = sub_1A72D1730(v32, v33, (uint64_t *)&v107);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v30 + 12) = 2080;
      *(void *)&long long v98 = type metadata accessor for REMRemindersListDataView.TemplateInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F17E0);
      uint64_t v34 = sub_1A7572670();
      *(void *)&long long v98 = sub_1A72D1730(v34, v35, (uint64_t *)&v107);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v28, v29, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v31, -1, -1);
      MEMORY[0x1AD0CD330](v30, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v36 = v23;
    uint64_t v86 = v20;
    uint64_t v87 = v18;
    uint64_t v88 = v9;
    unint64_t v37 = v24;
    swift_beginAccess();
    uint64_t v38 = *v17;
    id v39 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v36, v37);
    swift_bridgeObjectRetain();
    v116[0] = objc_msgSend(v39, sel_init);
    uint64_t v85 = type metadata accessor for REMRemindersListDataView.TemplateInvocation();
    *(void *)&long long v107 = v85;
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F17E0);
    uint64_t v41 = sub_1A7572670();
    unint64_t v43 = v42;
    uint64_t v89 = &v84;
    MEMORY[0x1F4188790](v41);
    *(&v84 - 6) = (uint64_t)v116;
    *(&v84 - 5) = (uint64_t)&v120;
    *(&v84 - 4) = (uint64_t)v91;
    *(&v84 - 3) = v36;
    uint64_t v94 = (void *)v37;
    *(&v84 - 2) = v37;
    *(&v84 - 1) = v38;
    int v44 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v41, v43, v44, (void (*)(void))sub_1A731590C, (uint64_t)(&v84 - 8));
    uint64_t v91 = 0;
    uint64_t v84 = v40;
    sub_1A72E3460(v36, (unint64_t)v94);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v45 = v36;
    uint64_t v46 = sub_1A75717E0();
    id v47 = objc_msgSend(v116[0], sel_resultStorages);
    uint64_t v48 = sub_1A75723F0();

    *((void *)&v108 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    *(void *)&long long v107 = v48;
    sub_1A72BEE98((uint64_t)&v107, (uint64_t)&v98);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v89 = (void *)v45;
      uint64_t v49 = v115;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
      uint64_t v50 = v120;
      uint64_t v51 = v95;
      id v52 = (char *)swift_allocObject();
      *((void *)v52 + 2) = v50;
      *((void *)v52 + 3) = v49;
      id v53 = v50;
      *((void *)v52 + 4) = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v54 = (uint64_t)v96;
      v86(v96, v87, v88);
      *((void *)&v108 + 1) = v51;
      *(void *)&long long v107 = v52;
      swift_retain();
      unint64_t v55 = (void (*)(long long *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)&v107, v54);
      v55(&v98, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F17E8);
      id v56 = v116[0];
      id v57 = objc_msgSend(v116[0], sel_resultData);
      uint64_t v58 = v46;
      uint64_t v59 = sub_1A7571A20();
      unint64_t v61 = v60;

      sub_1A7317738(&qword_1E96F17F0, &qword_1E96F17E8);
      uint64_t v62 = v91;
      sub_1A75717C0();
      if (!v62)
      {
        sub_1A72E3460(v59, v61);
        long long v102 = v111;
        long long v103 = v112;
        long long v104 = v113;
        long long v105 = v114;
        long long v98 = v107;
        long long v99 = v108;
        long long v100 = v109;
        long long v101 = v110;
        sub_1A73175A4((uint64_t)&v98);
        id v76 = v56;
        id v77 = objc_msgSend(v76, sel_latestFetchResultToken);
        sub_1A72E3460((uint64_t)v89, (unint64_t)v94);
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        sub_1A7317670((uint64_t)&v98);

        long long v78 = v103;
        uint64_t v79 = v90;
        *(_OWORD *)(v90 + 64) = v102;
        *(_OWORD *)(v79 + 80) = v78;
        long long v80 = v105;
        *(_OWORD *)(v79 + 96) = v104;
        *(_OWORD *)(v79 + 112) = v80;
        long long v81 = v99;
        *(_OWORD *)uint64_t v79 = v98;
        *(_OWORD *)(v79 + 16) = v81;
        long long v82 = v101;
        *(_OWORD *)(v79 + 32) = v100;
        *(_OWORD *)(v79 + 48) = v82;
        *(void *)(v79 + 128) = v77;
        return;
      }
      uint64_t v96 = v52;
      uint64_t v97 = v58;
      sub_1A72E3460(v59, v61);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v63 = sub_1A7571E90();
      __swift_project_value_buffer(v63, (uint64_t)qword_1E96F3940);
      id v64 = v62;
      id v65 = v62;
      uint64_t v66 = sub_1A7571E80();
      os_log_type_t v67 = sub_1A7572FD0();
      BOOL v68 = os_log_type_enabled(v66, v67);
      uint64_t v69 = v85;
      if (v68)
      {
        uint64_t v70 = swift_slowAlloc();
        uint64_t v71 = swift_slowAlloc();
        *(void *)&long long v107 = v71;
        *(_DWORD *)uint64_t v70 = 136315394;
        swift_getErrorValue();
        uint64_t v72 = Error.rem_errorDescription.getter(v106);
        *(void *)&long long v98 = sub_1A72D1730(v72, v73, (uint64_t *)&v107);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v70 + 12) = 2080;
        *(void *)&long long v98 = v69;
        uint64_t v74 = sub_1A7572670();
        *(void *)&long long v98 = sub_1A72D1730(v74, v75, (uint64_t *)&v107);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v66, v67, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v70, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v71, -1, -1);
        MEMORY[0x1AD0CD330](v70, -1, -1);
      }
      else
      {
      }
      unint64_t v83 = (unint64_t)v94;
      swift_willThrow();
      sub_1A72E3460((uint64_t)v89, v83);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)&v107, (uint64_t)&v98);
      sub_1A7447A74((uint64_t)&v98, 0, 0);
      sub_1A7315924((uint64_t)&v98);
      swift_willThrow();
      sub_1A72E3460(v45, (unint64_t)v94);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
    }
  }
}

void sub_1A72FB6E0(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v73 = a1;
  uint64_t v72 = a4;
  uint64_t v8 = sub_1A7573790();
  uint64_t v78 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v77 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = a2;
  char v85 = a3;
  uint64_t v86 = v5;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v10 = sub_1A7571820();
  id v11 = v5;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  unint64_t v13 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v76 = type metadata accessor for REMStoreObjectsContainer();
  unint64_t v14 = (void *)swift_allocObject();
  v14[2] = v11;
  v14[3] = v13;
  uint64_t v15 = v14 + 3;
  uint64_t v16 = (uint64_t)v14;
  v14[4] = sub_1A72B0A88(v12);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB705A18);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
  uint64_t v19 = (uint64_t)v77;
  v78 += 16;
  v18(v77, v17, v8);
  uint64_t v83 = v76;
  v82[0] = v16;
  uint64_t v74 = v16;
  swift_retain();
  uint64_t v20 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v82, v19);
  v20(v81, 0);
  sub_1A73174A8();
  id v21 = v75;
  uint64_t v22 = sub_1A7571800();
  if (v21)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1A7571E90();
    __swift_project_value_buffer(v24, (uint64_t)qword_1E96F3940);
    uint64_t v25 = v21;
    id v26 = v21;
    id v27 = sub_1A7571E80();
    os_log_type_t v28 = sub_1A7572FD0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v82[0] = v30;
      *(_DWORD *)uint64_t v29 = 136315394;
      swift_getErrorValue();
      uint64_t v31 = Error.rem_errorDescription.getter((uint64_t)v80[5]);
      v81[0] = sub_1A72D1730(v31, v32, v82);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v29 + 12) = 2080;
      v81[0] = type metadata accessor for REMListPickerDataView.Invocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F17C8);
      uint64_t v33 = sub_1A7572670();
      v81[0] = sub_1A72D1730(v33, v34, v82);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v27, v28, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v30, -1, -1);
      MEMORY[0x1AD0CD330](v29, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v35 = v22;
    unint64_t v36 = v23;
    BOOL v68 = v18;
    uint64_t v69 = v17;
    uint64_t v70 = v8;
    uint64_t v71 = v10;
    swift_beginAccess();
    uint64_t v37 = *v15;
    id v38 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v35, v36);
    swift_bridgeObjectRetain();
    v80[0] = objc_msgSend(v38, sel_init);
    uint64_t v39 = type metadata accessor for REMListPickerDataView.Invocation();
    v82[0] = v39;
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F17C8);
    uint64_t v41 = sub_1A7572670();
    unint64_t v43 = v42;
    unint64_t v75 = &v65;
    MEMORY[0x1F4188790](v41);
    *(&v65 - 6) = (uint64_t)v80;
    *(&v65 - 5) = (uint64_t)&v86;
    *(&v65 - 4) = v73;
    *(&v65 - 3) = v44;
    uint64_t v45 = v44;
    *(&v65 - 2) = v36;
    *(&v65 - 1) = v37;
    int v46 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v41, v43, v46, (void (*)(void))sub_1A731590C, (uint64_t)(&v65 - 8));
    uint64_t v67 = v40;
    uint64_t v73 = v39;
    sub_1A72E3460(v45, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v47 = objc_msgSend(v80[0], sel_resultStorages);
    uint64_t v48 = sub_1A75723F0();

    uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v82[0] = v48;
    sub_1A72BEE98((uint64_t)v82, (uint64_t)v81);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v66 = v45;
      unint64_t v75 = (uint64_t *)v36;
      uint64_t v49 = v79;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
      uint64_t v50 = v86;
      uint64_t v51 = v76;
      id v52 = (void *)swift_allocObject();
      v52[2] = v50;
      v52[3] = v49;
      id v53 = v50;
      v52[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v54 = (uint64_t)v77;
      v68(v77, v69, v70);
      uint64_t v83 = v51;
      v82[0] = (uint64_t)v52;
      swift_retain();
      unint64_t v55 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v82, v54);
      v55(v81, 0);
      id v56 = v80[0];
      id v57 = objc_msgSend(v80[0], sel_resultData);
      uint64_t v58 = sub_1A7571A20();
      unint64_t v60 = v59;

      sub_1A73174FC();
      sub_1A75717C0();
      sub_1A72E3460(v58, v60);
      uint64_t v61 = v82[0];
      swift_bridgeObjectRetain();
      id v62 = v56;
      id v63 = objc_msgSend(v62, sel_latestFetchResultToken);
      sub_1A72E3460(v66, (unint64_t)v75);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      id v64 = v72;
      *uint64_t v72 = v61;
      v64[1] = (uint64_t)v63;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v82, (uint64_t)v81);
      sub_1A7447A74((uint64_t)v81, 0, 0);
      sub_1A7315924((uint64_t)v81);
      swift_willThrow();
      sub_1A72E3460(v45, v36);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    }
  }
}

void sub_1A72FC264(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v77 = a1;
  uint64_t v75 = a3;
  uint64_t v6 = sub_1A7573790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = a2[5];
  long long v110 = a2[4];
  v111[0] = v10;
  *(_DWORD *)((char *)v111 + 15) = *(_DWORD *)((char *)a2 + 95);
  long long v11 = a2[1];
  long long v106 = *a2;
  long long v107 = v11;
  long long v12 = a2[3];
  long long v108 = a2[2];
  long long v109 = v12;
  id v105 = v4;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v112 = sub_1A7571820();
  id v13 = objc_msgSend(v4, sel_store);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  unint64_t v15 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v80 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v13;
  uint64_t v17 = v16;
  void v16[3] = v15;
  uint64_t v18 = v16 + 3;
  v16[4] = sub_1A72B0A88(v14);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB705A18);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v21 = v7 + 16;
  uint64_t v20 = v22;
  uint64_t v76 = v19;
  ((void (*)(char *))v22)(v9);
  *((void *)&v93 + 1) = v80;
  *(void *)&long long v92 = v17;
  uint64_t v78 = v17;
  swift_retain();
  unint64_t v23 = (void (*)(long long *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v92, (uint64_t)v9);
  v23(&v81, 0);
  sub_1A7317308();
  uint64_t v24 = v79;
  uint64_t v25 = sub_1A7571800();
  if (v24)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1A7571E90();
    __swift_project_value_buffer(v27, (uint64_t)qword_1E96F3940);
    id v28 = v24;
    id v29 = v24;
    uint64_t v30 = sub_1A7571E80();
    os_log_type_t v31 = sub_1A7572FD0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(void *)&long long v92 = v33;
      *(_DWORD *)uint64_t v32 = 136315394;
      swift_getErrorValue();
      uint64_t v34 = Error.rem_errorDescription.getter((uint64_t)v104[5]);
      *(void *)&long long v81 = sub_1A72D1730(v34, v35, (uint64_t *)&v92);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v32 + 12) = 2080;
      *(void *)&long long v81 = type metadata accessor for REMSuggestedAttributesHarvester.Invocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700AD0);
      uint64_t v36 = sub_1A7572670();
      *(void *)&long long v81 = sub_1A72D1730(v36, v37, (uint64_t *)&v92);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v30, v31, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v33, -1, -1);
      MEMORY[0x1AD0CD330](v32, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v38 = v25;
    uint64_t v70 = v20;
    uint64_t v71 = v21;
    uint64_t v72 = v9;
    uint64_t v73 = v6;
    unint64_t v39 = v26;
    swift_beginAccess();
    uint64_t v40 = *v18;
    id v41 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v38, v39);
    swift_bridgeObjectRetain();
    v104[0] = objc_msgSend(v41, sel_init);
    uint64_t v69 = type metadata accessor for REMSuggestedAttributesHarvester.Invocation();
    *(void *)&long long v92 = v69;
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700AD0);
    uint64_t v43 = sub_1A7572670();
    unint64_t v45 = v44;
    uint64_t v74 = v68;
    MEMORY[0x1F4188790](v43);
    v68[-6] = v104;
    v68[-5] = &v105;
    v68[-4] = v77;
    v68[-3] = v38;
    uint64_t v79 = (void *)v39;
    v68[-2] = v39;
    v68[-1] = v40;
    int v46 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v43, v45, v46, (void (*)(void))sub_1A731590C, (uint64_t)&v68[-8]);
    v68[1] = v42;
    sub_1A72E3460(v38, (unint64_t)v79);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v77 = sub_1A75717E0();
    id v47 = objc_msgSend(v104[0], sel_resultStorages);
    uint64_t v48 = sub_1A75723F0();

    *((void *)&v93 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    *(void *)&long long v92 = v48;
    sub_1A72BEE98((uint64_t)&v92, (uint64_t)&v81);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v74 = (void *)v38;
      uint64_t v49 = v103;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v92);
      id v50 = objc_msgSend(v105, sel_store);
      uint64_t v51 = v80;
      id v52 = (void *)swift_allocObject();
      v52[2] = v50;
      v52[3] = v49;
      v52[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v53 = (uint64_t)v72;
      v70(v72, v76, v73);
      *((void *)&v93 + 1) = v51;
      *(void *)&long long v92 = v52;
      swift_retain();
      uint64_t v54 = (void (*)(long long *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)&v92, v53);
      v54(&v81, 0);
      id v55 = v104[0];
      id v56 = objc_msgSend(v104[0], sel_resultData);
      uint64_t v57 = sub_1A7571A20();
      unint64_t v59 = v58;

      sub_1A731735C();
      sub_1A75717C0();
      sub_1A72E3460(v57, v59);
      long long v89 = v100;
      long long v90 = v101;
      v91[0] = v102[0];
      *(_OWORD *)((char *)v91 + 9) = *(_OWORD *)((char *)v102 + 9);
      long long v85 = v96;
      long long v86 = v97;
      long long v87 = v98;
      long long v88 = v99;
      long long v81 = v92;
      long long v82 = v93;
      long long v83 = v94;
      long long v84 = v95;
      sub_1A73173B0((uint64_t)&v81, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A7317270);
      id v60 = v55;
      id v61 = objc_msgSend(v60, sel_latestFetchResultToken);
      sub_1A72E3460((uint64_t)v74, (unint64_t)v79);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      sub_1A73173B0((uint64_t)&v81, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A73172BC);

      long long v62 = v90;
      uint64_t v63 = v75;
      *(_OWORD *)(v75 + 128) = v89;
      *(_OWORD *)(v63 + 144) = v62;
      *(_OWORD *)(v63 + 160) = v91[0];
      *(_OWORD *)(v63 + 169) = *(_OWORD *)((char *)v91 + 9);
      long long v64 = v86;
      *(_OWORD *)(v63 + 64) = v85;
      *(_OWORD *)(v63 + 80) = v64;
      long long v65 = v88;
      *(_OWORD *)(v63 + 96) = v87;
      *(_OWORD *)(v63 + 112) = v65;
      long long v66 = v82;
      *(_OWORD *)uint64_t v63 = v81;
      *(_OWORD *)(v63 + 16) = v66;
      long long v67 = v84;
      *(_OWORD *)(v63 + 32) = v83;
      *(_OWORD *)(v63 + 48) = v67;
      *(void *)(v63 + 192) = v61;
    }
    else
    {
      sub_1A72BEE98((uint64_t)&v92, (uint64_t)&v81);
      sub_1A7447A74((uint64_t)&v81, 0, 0);
      sub_1A7315924((uint64_t)&v81);
      swift_willThrow();
      sub_1A72E3460(v38, (unint64_t)v79);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v92);
    }
  }
}

void sub_1A72FCDC8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v73 = a1;
  uint64_t v72 = a3;
  uint64_t v4 = sub_1A7573790();
  uint64_t v79 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v78 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v91 = v3;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v6 = sub_1A7571820();
  id v7 = objc_msgSend(v3, sel_store);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v77 = type metadata accessor for REMStoreObjectsContainer();
  long long v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v7;
  v10[3] = v9;
  long long v11 = v10 + 3;
  uint64_t v12 = (uint64_t)v10;
  v10[4] = sub_1A72B0A88(v8);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB705A18);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
  uint64_t v15 = (uint64_t)v78;
  v79 += 16;
  v14(v78, v13, v4);
  uint64_t v83 = v77;
  uint64_t v80 = (void *)v12;
  uint64_t v74 = v12;
  swift_retain();
  uint64_t v16 = (void (*)(uint64_t *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v80, v15);
  v16(&v90, 0);
  type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest();
  sub_1A72F0548(&qword_1EB703A48, (void (*)(uint64_t))type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest);
  uint64_t v75 = v6;
  uint64_t v17 = v76;
  uint64_t v18 = sub_1A7571800();
  if (v17)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E96F3940);
    id v21 = v17;
    id v22 = v17;
    unint64_t v23 = sub_1A7571E80();
    os_log_type_t v24 = sub_1A7572FD0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v80 = (void *)v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_getErrorValue();
      uint64_t v27 = Error.rem_errorDescription.getter((uint64_t)v89[5]);
      uint64_t v90 = sub_1A72D1730(v27, v28, (uint64_t *)&v80);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v90 = type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700B00);
      uint64_t v29 = sub_1A7572670();
      uint64_t v90 = sub_1A72D1730(v29, v30, (uint64_t *)&v80);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v23, v24, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v26, -1, -1);
      MEMORY[0x1AD0CD330](v25, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v31 = v18;
    unint64_t v32 = v19;
    uint64_t v69 = (void (*)(char *, uint64_t, id))v14;
    uint64_t v70 = v13;
    id v71 = (id)v4;
    swift_beginAccess();
    uint64_t v33 = *v11;
    id v34 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v31, v32);
    swift_bridgeObjectRetain();
    v89[0] = objc_msgSend(v34, sel_init);
    uint64_t v35 = type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionInvocation();
    uint64_t v80 = (void *)v35;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700B00);
    uint64_t v37 = sub_1A7572670();
    unint64_t v39 = v38;
    uint64_t v76 = &v68;
    MEMORY[0x1F4188790](v37);
    *(&v68 - 6) = (uint64_t)v89;
    *(&v68 - 5) = (uint64_t)&v91;
    *(&v68 - 4) = v73;
    *(&v68 - 3) = v31;
    uint64_t v40 = v31;
    unint64_t v42 = v41;
    *(&v68 - 2) = v41;
    *(&v68 - 1) = v33;
    int v43 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v37, v39, v43, (void (*)(void))sub_1A731590C, (uint64_t)(&v68 - 8));
    uint64_t v68 = v36;
    uint64_t v73 = v35;
    sub_1A72E3460(v40, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v44 = objc_msgSend(v89[0], sel_resultStorages);
    uint64_t v45 = sub_1A75723F0();

    uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    uint64_t v80 = (void *)v45;
    sub_1A72BEE98((uint64_t)&v80, (uint64_t)&v90);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    uint64_t v46 = v40;
    if (swift_dynamicCast())
    {
      uint64_t v76 = (void *)v42;
      uint64_t v47 = v88;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
      id v48 = objc_msgSend(v91, sel_store);
      uint64_t v49 = v77;
      id v50 = (void *)swift_allocObject();
      v50[2] = v48;
      v50[3] = v47;
      v50[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v51 = (uint64_t)v78;
      v69(v78, v70, v71);
      uint64_t v83 = v49;
      uint64_t v80 = v50;
      swift_retain();
      id v52 = (void (*)(uint64_t *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)&v80, v51);
      v52(&v90, 0);
      id v53 = v89[0];
      id v54 = objc_msgSend(v89[0], sel_resultData);
      uint64_t v55 = sub_1A7571A20();
      unint64_t v57 = v56;

      sub_1A731721C();
      sub_1A75717C0();
      sub_1A72E3460(v55, v57);
      uint64_t v58 = v81;
      uint64_t v59 = v82;
      uint64_t v60 = v83;
      uint64_t v79 = v46;
      uint64_t v61 = v85;
      uint64_t v77 = v84;
      uint64_t v78 = 0;
      uint64_t v62 = v86;
      LODWORD(v73) = v87;
      uint64_t v63 = (uint64_t)v80;
      sub_1A7317270((uint64_t)v80, v81, v82, v83, v84, v85, v86, v87);
      id v64 = v53;
      id v71 = objc_msgSend(v64, sel_latestFetchResultToken);
      sub_1A72E3460(v79, (unint64_t)v76);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      uint64_t v65 = v77;
      char v66 = v73;
      sub_1A73172BC(v63, v58, v59, v60, v77, v61, v62, v73);

      long long v67 = v72;
      *uint64_t v72 = v63;
      v67[1] = v58;
      v67[2] = v59;
      v67[3] = v60;
      v67[4] = v65;
      v67[5] = v61;
      v67[6] = v62;
      *((unsigned char *)v67 + 56) = v66;
      v67[8] = (uint64_t)v71;
    }
    else
    {
      sub_1A72BEE98((uint64_t)&v80, (uint64_t)&v90);
      sub_1A7447A74((uint64_t)&v90, 0, 0);
      sub_1A7315924((uint64_t)&v90);
      swift_willThrow();
      sub_1A72E3460(v40, v42);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
    }
  }
}

void sub_1A72FDA44(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>, id a4@<D0>)
{
  uint64_t v5 = v4;
  uint64_t v72 = a1;
  id v71 = a3;
  uint64_t v8 = sub_1A7573790();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v76 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83[0] = v5;
  v83[1] = a2;
  uint64_t v83[2] = a4;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v77 = sub_1A7571820();
  id v11 = objc_msgSend(v5, sel_store);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  unint64_t v13 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v75 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v11;
  v14[3] = v13;
  uint64_t v15 = v14 + 3;
  uint64_t v16 = (uint64_t)v14;
  v14[4] = sub_1A72B0A88(v12);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB705A18);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v18 = v9 + 16;
  unint64_t v19 = v20;
  uint64_t v21 = (uint64_t)v76;
  v20(v76, v17, v8);
  uint64_t v82 = v75;
  v81[0] = v16;
  uint64_t v73 = v16;
  swift_retain();
  id v22 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v81, v21);
  v22(v80, 0);
  sub_1A73171C8();
  unint64_t v23 = v74;
  uint64_t v24 = sub_1A7571800();
  if (v23)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1A7571E90();
    __swift_project_value_buffer(v26, (uint64_t)qword_1E96F3940);
    uint64_t v27 = v23;
    unint64_t v28 = v23;
    uint64_t v29 = sub_1A7571E80();
    os_log_type_t v30 = sub_1A7572FD0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      v81[0] = v32;
      *(_DWORD *)uint64_t v31 = 136315394;
      swift_getErrorValue();
      uint64_t v33 = Error.rem_errorDescription.getter((uint64_t)v79[5]);
      v80[0] = sub_1A72D1730(v33, v34, v81);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v31 + 12) = 2080;
      v80[0] = type metadata accessor for REMSuggestedAttributesHarvester.FeedbackInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700AE0);
      uint64_t v35 = sub_1A7572670();
      v80[0] = sub_1A72D1730(v35, v36, v81);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v29, v30, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v32, -1, -1);
      MEMORY[0x1AD0CD330](v31, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v37 = v24;
    unint64_t v38 = v25;
    long long v67 = v19;
    uint64_t v68 = v17;
    uint64_t v69 = v18;
    uint64_t v70 = v8;
    swift_beginAccess();
    uint64_t v39 = *v15;
    id v40 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v37, v38);
    swift_bridgeObjectRetain();
    v79[0] = objc_msgSend(v40, sel_init);
    uint64_t v41 = type metadata accessor for REMSuggestedAttributesHarvester.FeedbackInvocation();
    v81[0] = v41;
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700AE0);
    uint64_t v43 = sub_1A7572670();
    unint64_t v45 = v44;
    uint64_t v74 = v66;
    MEMORY[0x1F4188790](v43);
    v66[-6] = (uint64_t)v79;
    v66[-5] = (uint64_t)v83;
    v66[-4] = v72;
    v66[-3] = v46;
    uint64_t v47 = v46;
    v66[-2] = v38;
    v66[-1] = v39;
    int v48 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v43, v45, v48, (void (*)(void))sub_1A731590C, (uint64_t)&v66[-8]);
    v66[1] = v42;
    uint64_t v72 = v41;
    unint64_t v49 = v38;
    sub_1A72E3460(v47, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v50 = objc_msgSend(v79[0], sel_resultStorages);
    uint64_t v51 = sub_1A75723F0();

    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v81[0] = v51;
    sub_1A72BEE98((uint64_t)v81, (uint64_t)v80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      v66[0] = v47;
      uint64_t v74 = (uint64_t *)v49;
      uint64_t v52 = v78;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
      id v53 = objc_msgSend(v83[0], sel_store);
      uint64_t v54 = v75;
      uint64_t v55 = (void *)swift_allocObject();
      v55[2] = v53;
      v55[3] = v52;
      v55[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v56 = (uint64_t)v76;
      v67(v76, v68, v70);
      uint64_t v82 = v54;
      v81[0] = (uint64_t)v55;
      swift_retain();
      unint64_t v57 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v81, v56);
      v57(v80, 0);
      id v58 = v79[0];
      id v59 = objc_msgSend(v79[0], sel_resultData);
      uint64_t v60 = sub_1A7571A20();
      unint64_t v62 = v61;

      sub_1A7317120();
      sub_1A75717C0();
      sub_1A72E3460(v60, v62);
      LOBYTE(v62) = v81[0];
      id v63 = v58;
      id v64 = objc_msgSend(v63, sel_latestFetchResultToken);
      sub_1A72E3460(v66[0], (unint64_t)v74);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      uint64_t v65 = v71;
      unsigned char *v71 = v62;
      *((void *)v65 + 1) = v64;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v81, (uint64_t)v80);
      sub_1A7447A74((uint64_t)v80, 0, 0);
      sub_1A7315924((uint64_t)v80);
      swift_willThrow();
      sub_1A72E3460(v47, v49);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    }
  }
}

void sub_1A72FE5E8(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v70 = a1;
  uint64_t v69 = a3;
  uint64_t v6 = sub_1A7573790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v74 = (char *)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v81[3] = a2;
  v81[0] = v4;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v75 = sub_1A7571820();
  id v9 = objc_msgSend(v4, sel_store);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  unint64_t v11 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v73 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v9;
  void v12[3] = v11;
  unint64_t v13 = v12 + 3;
  uint64_t v14 = (uint64_t)v12;
  v12[4] = sub_1A72B0A88(v10);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB705A18);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v16 = v7 + 16;
  uint64_t v17 = v18;
  uint64_t v19 = (uint64_t)v74;
  v18(v74, v15, v6);
  uint64_t v80 = v73;
  v79[0] = v14;
  uint64_t v71 = v14;
  swift_retain();
  uint64_t v20 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v79, v19);
  v20(v78, 0);
  sub_1A7317174();
  uint64_t v21 = v72;
  uint64_t v22 = sub_1A7571800();
  if (v21)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1A7571E90();
    __swift_project_value_buffer(v24, (uint64_t)qword_1E96F3940);
    unint64_t v25 = v21;
    uint64_t v26 = v21;
    uint64_t v27 = sub_1A7571E80();
    os_log_type_t v28 = sub_1A7572FD0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v79[0] = v30;
      *(_DWORD *)uint64_t v29 = 136315394;
      swift_getErrorValue();
      uint64_t v31 = Error.rem_errorDescription.getter((uint64_t)v77[5]);
      v78[0] = sub_1A72D1730(v31, v32, v79);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v29 + 12) = 2080;
      v78[0] = type metadata accessor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700B10);
      uint64_t v33 = sub_1A7572670();
      v78[0] = sub_1A72D1730(v33, v34, v79);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v27, v28, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v30, -1, -1);
      MEMORY[0x1AD0CD330](v29, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v35 = v22;
    unint64_t v36 = v23;
    uint64_t v65 = v17;
    uint64_t v66 = v15;
    uint64_t v67 = v16;
    uint64_t v68 = v6;
    swift_beginAccess();
    uint64_t v37 = *v13;
    id v38 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v35, v36);
    swift_bridgeObjectRetain();
    v77[0] = objc_msgSend(v38, sel_init);
    uint64_t v39 = type metadata accessor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsInvocation();
    v79[0] = v39;
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700B10);
    uint64_t v41 = sub_1A7572670();
    unint64_t v43 = v42;
    uint64_t v72 = v64;
    MEMORY[0x1F4188790](v41);
    v64[-6] = (uint64_t)v77;
    v64[-5] = (uint64_t)v81;
    v64[-4] = v70;
    v64[-3] = v44;
    uint64_t v45 = v44;
    v64[-2] = v36;
    v64[-1] = v37;
    int v46 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v41, v43, v46, (void (*)(void))sub_1A731590C, (uint64_t)&v64[-8]);
    v64[1] = v40;
    uint64_t v70 = v39;
    unint64_t v47 = v36;
    sub_1A72E3460(v45, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v48 = objc_msgSend(v77[0], sel_resultStorages);
    uint64_t v49 = sub_1A75723F0();

    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v79[0] = v49;
    sub_1A72BEE98((uint64_t)v79, (uint64_t)v78);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      v64[0] = v45;
      uint64_t v72 = (uint64_t *)v47;
      uint64_t v50 = v76;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
      id v51 = objc_msgSend(v81[0], sel_store);
      uint64_t v52 = v73;
      id v53 = (void *)swift_allocObject();
      v53[2] = v51;
      v53[3] = v50;
      v53[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v54 = (uint64_t)v74;
      v65(v74, v66, v68);
      uint64_t v80 = v52;
      v79[0] = (uint64_t)v53;
      swift_retain();
      uint64_t v55 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v79, v54);
      v55(v78, 0);
      id v56 = v77[0];
      id v57 = objc_msgSend(v77[0], sel_resultData);
      uint64_t v58 = sub_1A7571A20();
      unint64_t v60 = v59;

      sub_1A7317120();
      sub_1A75717C0();
      sub_1A72E3460(v58, v60);
      LOBYTE(v60) = v79[0];
      id v61 = v56;
      id v62 = objc_msgSend(v61, sel_latestFetchResultToken);
      sub_1A72E3460(v64[0], (unint64_t)v72);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      id v63 = v69;
      *uint64_t v69 = v60;
      *((void *)v63 + 1) = v62;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v79, (uint64_t)v78);
      sub_1A7447A74((uint64_t)v78, 0, 0);
      sub_1A7315924((uint64_t)v78);
      swift_willThrow();
      sub_1A72E3460(v45, v47);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
    }
  }
}

void sub_1A72FF174(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X4>, unsigned char *a6@<X8>)
{
  uint64_t v7 = v6;
  char v9 = a4;
  uint64_t v80 = a1;
  uint64_t v78 = a6;
  unsigned int v12 = a4 >> 8;
  uint64_t v13 = sub_1A7573790();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = a2;
  uint64_t v90 = a3;
  char v91 = v9;
  char v92 = v12;
  uint64_t v93 = a5;
  id v94 = v7;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v83 = sub_1A7571820();
  id v17 = objc_msgSend(v7, sel_store);
  uint64_t v18 = MEMORY[0x1E4FBC860];
  unint64_t v19 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v20 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v17;
  v21[3] = v19;
  uint64_t v22 = v21 + 3;
  uint64_t v23 = (uint64_t)v21;
  v21[4] = sub_1A72B0A88(v18);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v24 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB705A18);
  uint64_t v27 = *(void (**)(void))(v14 + 16);
  uint64_t v26 = v14 + 16;
  unint64_t v25 = v27;
  uint64_t v79 = v24;
  v27(v16);
  uint64_t v88 = v20;
  v87[0] = v23;
  uint64_t v81 = v23;
  swift_retain();
  os_log_type_t v28 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v87, (uint64_t)v16);
  v28(v86, 0);
  sub_1A73170CC();
  uint64_t v29 = v82;
  uint64_t v30 = sub_1A7571800();
  if (v29)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1A7571E90();
    __swift_project_value_buffer(v32, (uint64_t)qword_1E96F3940);
    uint64_t v33 = v29;
    unint64_t v34 = v29;
    uint64_t v35 = sub_1A7571E80();
    os_log_type_t v36 = sub_1A7572FD0();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v87[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315394;
      swift_getErrorValue();
      uint64_t v39 = Error.rem_errorDescription.getter((uint64_t)v85[5]);
      v86[0] = sub_1A72D1730(v39, v40, v87);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v37 + 12) = 2080;
      v86[0] = type metadata accessor for REMSuggestedAttributesHarvester.RecordSuggestionInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700AF8);
      uint64_t v41 = sub_1A7572670();
      v86[0] = sub_1A72D1730(v41, v42, v87);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v35, v36, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v38, -1, -1);
      MEMORY[0x1AD0CD330](v37, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v43 = v30;
    unint64_t v44 = v31;
    uint64_t v74 = (void (*)(char *, uint64_t, uint64_t))v25;
    uint64_t v75 = v20;
    uint64_t v73 = v16;
    uint64_t v76 = v26;
    uint64_t v77 = v13;
    swift_beginAccess();
    uint64_t v45 = *v22;
    id v46 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v43, v44);
    swift_bridgeObjectRetain();
    v85[0] = objc_msgSend(v46, sel_init);
    uint64_t v47 = type metadata accessor for REMSuggestedAttributesHarvester.RecordSuggestionInvocation();
    v87[0] = v47;
    uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700AF8);
    uint64_t v48 = sub_1A7572670();
    unint64_t v50 = v49;
    uint64_t v82 = &v70;
    MEMORY[0x1F4188790](v48);
    *(&v70 - 6) = (uint64_t)v85;
    *(&v70 - 5) = (uint64_t)&v94;
    *(&v70 - 4) = v80;
    *(&v70 - 3) = v51;
    uint64_t v52 = v51;
    *(&v70 - 2) = v44;
    *(&v70 - 1) = v45;
    int v53 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v48, v50, v53, (void (*)(void))sub_1A731590C, (uint64_t)(&v70 - 8));
    uint64_t v80 = v47;
    sub_1A72E3460(v52, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v54 = objc_msgSend(v85[0], sel_resultStorages);
    uint64_t v55 = sub_1A75723F0();

    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v87[0] = v55;
    sub_1A72BEE98((uint64_t)v87, (uint64_t)v86);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v71 = v52;
      uint64_t v82 = (uint64_t *)v44;
      uint64_t v56 = v84;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
      id v57 = objc_msgSend(v94, sel_store);
      uint64_t v58 = v75;
      unint64_t v59 = (void *)swift_allocObject();
      v59[2] = v57;
      v59[3] = v56;
      v59[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v60 = (uint64_t)v73;
      v74(v73, v79, v77);
      uint64_t v88 = v58;
      v87[0] = (uint64_t)v59;
      swift_retain();
      id v61 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v87, v60);
      v61(v86, 0);
      id v62 = v85[0];
      id v63 = objc_msgSend(v85[0], sel_resultData);
      uint64_t v64 = sub_1A7571A20();
      unint64_t v66 = v65;

      sub_1A7317120();
      sub_1A75717C0();
      sub_1A72E3460(v64, v66);
      LOBYTE(v66) = v87[0];
      id v67 = v62;
      id v68 = objc_msgSend(v67, sel_latestFetchResultToken);
      sub_1A72E3460(v71, (unint64_t)v82);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      uint64_t v69 = v78;
      *uint64_t v78 = v66;
      *((void *)v69 + 1) = v68;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v87, (uint64_t)v86);
      sub_1A7447A74((uint64_t)v86, 0, 0);
      sub_1A7315924((uint64_t)v86);
      swift_willThrow();
      sub_1A72E3460(v52, v44);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
    }
  }
}

void sub_1A72FFD0C(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
}

void sub_1A72FFD98(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t *a6@<X5>, void (*a7)(void)@<X6>, void (*a8)(void)@<X7>, unsigned char *a9@<X8>)
{
  uint64_t v76 = a8;
  uint64_t v78 = a7;
  uint64_t v80 = a6;
  uint64_t v79 = a5;
  uint64_t v83 = (uint64_t *)a4;
  uint64_t v82 = a3;
  uint64_t v10 = v9;
  uint64_t v77 = a1;
  uint64_t v75 = a9;
  uint64_t v12 = sub_1A7573790();
  uint64_t v85 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91[3] = a2;
  v91[0] = v10;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v15 = sub_1A7571820();
  id v16 = v10;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  unint64_t v18 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v19 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v16;
  uint64_t v21 = (uint64_t)v20;
  v20[3] = v18;
  uint64_t v22 = v20 + 3;
  void v20[4] = sub_1A72B0A88(v17);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v23 = __swift_project_value_buffer(v12, (uint64_t)qword_1EB705A18);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 16);
  v85 += 16;
  v24(v14, v23, v12);
  uint64_t v90 = v19;
  uint64_t v89 = (void *)v21;
  uint64_t v81 = v21;
  swift_retain();
  unint64_t v25 = (uint64_t (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v89, (uint64_t)v14);
  uint64_t v26 = v25(v88, 0);
  v82(v26);
  uint64_t v27 = v84;
  uint64_t v28 = sub_1A7571800();
  uint64_t v84 = (void *)v29;
  if (v27)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1A7571E90();
    __swift_project_value_buffer(v30, (uint64_t)qword_1E96F3940);
    id v31 = v27;
    id v32 = v27;
    uint64_t v33 = sub_1A7571E80();
    os_log_type_t v34 = sub_1A7572FD0();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v89 = (void *)v36;
      *(_DWORD *)uint64_t v35 = 136315394;
      swift_getErrorValue();
      uint64_t v37 = Error.rem_errorDescription.getter((uint64_t)v87[5]);
      v88[0] = sub_1A72D1730(v37, v38, (uint64_t *)&v89);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v35 + 12) = 2080;
      v88[0] = v79(0);
      __swift_instantiateConcreteTypeFromMangledName(v80);
      uint64_t v39 = sub_1A7572670();
      v88[0] = sub_1A72D1730(v39, v40, (uint64_t *)&v89);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v33, v34, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v36, -1, -1);
      MEMORY[0x1AD0CD330](v35, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v41 = v28;
    uint64_t v70 = v24;
    uint64_t v71 = v23;
    uint64_t v72 = v19;
    uint64_t v73 = v14;
    uint64_t v74 = v12;
    uint64_t v82 = (void (*)(uint64_t))v15;
    swift_beginAccess();
    uint64_t v42 = *v22;
    id v43 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    uint64_t v44 = v41;
    unint64_t v45 = (unint64_t)v84;
    sub_1A72E3408(v41, (unint64_t)v84);
    swift_bridgeObjectRetain();
    v87[0] = objc_msgSend(v43, sel_init);
    id v46 = (uint64_t *)v79(0);
    uint64_t v89 = v46;
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(v80);
    uint64_t v48 = sub_1A7572670();
    unint64_t v50 = v49;
    uint64_t v83 = &v69;
    MEMORY[0x1F4188790](v48);
    *(&v69 - 6) = (uint64_t)v87;
    *(&v69 - 5) = (uint64_t)v91;
    *(&v69 - 4) = v77;
    *(&v69 - 3) = v44;
    *(&v69 - 2) = v45;
    *(&v69 - 1) = v42;
    int v51 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v48, v50, v51, v78, (uint64_t)(&v69 - 8));
    uint64_t v79 = (uint64_t (*)(void))v47;
    uint64_t v80 = v46;
    sub_1A72E3460(v44, (unint64_t)v84);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v52 = objc_msgSend(v87[0], sel_resultStorages);
    uint64_t v53 = sub_1A75723F0();

    uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    uint64_t v89 = (void *)v53;
    sub_1A72BEE98((uint64_t)&v89, (uint64_t)v88);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v83 = (uint64_t *)v44;
      uint64_t v54 = v86;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
      uint64_t v55 = (void *)v91[0];
      uint64_t v56 = v72;
      id v57 = (void *)swift_allocObject();
      v57[2] = v55;
      uint64_t v57[3] = v54;
      id v58 = v55;
      v57[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v59 = (uint64_t)v73;
      v70(v73, v71, v74);
      uint64_t v90 = v56;
      uint64_t v89 = v57;
      swift_retain();
      uint64_t v60 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)&v89, v59);
      v60(v88, 0);
      id v61 = v87[0];
      id v62 = objc_msgSend(v87[0], sel_resultData);
      uint64_t v63 = sub_1A7571A20();
      unint64_t v65 = v64;

      v76();
      sub_1A75717C0();
      sub_1A72E3460(v63, v65);
      LOBYTE(v65) = (_BYTE)v89;
      id v66 = v61;
      id v67 = objc_msgSend(v66, sel_latestFetchResultToken);
      sub_1A72E3460((uint64_t)v83, (unint64_t)v84);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      id v68 = v75;
      *uint64_t v75 = v65;
      *((void *)v68 + 1) = v67;
    }
    else
    {
      sub_1A72BEE98((uint64_t)&v89, (uint64_t)v88);
      sub_1A7447A74((uint64_t)v88, 0, 0);
      sub_1A7315924((uint64_t)v88);
      swift_willThrow();
      sub_1A72E3460(v44, (unint64_t)v84);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
    }
  }
}

void sub_1A730095C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v74 = a1;
  uint64_t v72 = a3;
  uint64_t v6 = sub_1A7573790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v78 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84[3] = a2;
  v84[0] = v4;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v9 = sub_1A7571820();
  id v10 = v4;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  unint64_t v12 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v77 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v10;
  v13[3] = v12;
  uint64_t v14 = v13 + 3;
  uint64_t v15 = (uint64_t)v13;
  v13[4] = sub_1A72B0A88(v11);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB705A18);
  uint64_t v17 = v6;
  uint64_t v18 = v16;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v19 = v7 + 16;
  uint64_t v20 = v21;
  uint64_t v22 = (uint64_t)v78;
  uint64_t v73 = v17;
  ((void (*)(char *, uint64_t))v21)(v78, v16);
  uint64_t v83 = v77;
  v82[0] = v15;
  uint64_t v75 = v15;
  swift_retain();
  uint64_t v23 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v82, v22);
  v23(v81, 0);
  sub_1A7316FD0();
  uint64_t v24 = v76;
  uint64_t v25 = sub_1A7571800();
  if (v24)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1A7571E90();
    __swift_project_value_buffer(v27, (uint64_t)qword_1E96F3940);
    uint64_t v28 = v24;
    unint64_t v29 = v24;
    uint64_t v30 = sub_1A7571E80();
    os_log_type_t v31 = sub_1A7572FD0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v82[0] = v33;
      *(_DWORD *)uint64_t v32 = 136315394;
      swift_getErrorValue();
      uint64_t v34 = Error.rem_errorDescription.getter((uint64_t)v80[5]);
      v81[0] = sub_1A72D1730(v34, v35, v82);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v32 + 12) = 2080;
      v81[0] = type metadata accessor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F17A0);
      uint64_t v36 = sub_1A7572670();
      v81[0] = sub_1A72D1730(v36, v37, v82);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v30, v31, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v33, -1, -1);
      MEMORY[0x1AD0CD330](v32, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v38 = v25;
    unint64_t v39 = v26;
    id v68 = v20;
    uint64_t v69 = v18;
    uint64_t v70 = v19;
    uint64_t v71 = v9;
    swift_beginAccess();
    uint64_t v40 = *v14;
    id v41 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v38, v39);
    swift_bridgeObjectRetain();
    v80[0] = objc_msgSend(v41, sel_init);
    uint64_t v42 = type metadata accessor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation();
    v82[0] = v42;
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F17A0);
    uint64_t v44 = v38;
    uint64_t v45 = sub_1A7572670();
    unint64_t v47 = v46;
    uint64_t v76 = v67;
    MEMORY[0x1F4188790](v45);
    v67[-6] = (uint64_t)v80;
    v67[-5] = (uint64_t)v84;
    v67[-4] = v74;
    v67[-3] = v38;
    v67[-2] = v39;
    v67[-1] = v40;
    int v48 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v45, v47, v48, (void (*)(void))sub_1A731590C, (uint64_t)&v67[-8]);
    v67[1] = v43;
    uint64_t v74 = v42;
    sub_1A72E3460(v38, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v49 = objc_msgSend(v80[0], sel_resultStorages);
    uint64_t v50 = sub_1A75723F0();

    uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v82[0] = v50;
    sub_1A72BEE98((uint64_t)v82, (uint64_t)v81);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      v67[0] = v44;
      uint64_t v76 = (uint64_t *)v39;
      uint64_t v51 = v79;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
      id v52 = (void *)v84[0];
      uint64_t v53 = v77;
      uint64_t v54 = (void *)swift_allocObject();
      v54[2] = v52;
      void v54[3] = v51;
      id v55 = v52;
      v54[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v56 = (uint64_t)v78;
      v68(v78, v69, v73);
      uint64_t v83 = v53;
      v82[0] = (uint64_t)v54;
      swift_retain();
      id v57 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v82, v56);
      v57(v81, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705B90);
      id v58 = v80[0];
      id v59 = objc_msgSend(v80[0], sel_resultData);
      uint64_t v60 = sub_1A7571A20();
      unint64_t v62 = v61;

      sub_1A72F0D38((unint64_t *)&qword_1EB705B98, &qword_1EB705A50);
      sub_1A75717C0();
      sub_1A72E3460(v60, v62);
      uint64_t v63 = v82[0];
      swift_bridgeObjectRetain();
      id v64 = v58;
      id v65 = objc_msgSend(v64, sel_latestFetchResultToken);
      sub_1A72E3460(v67[0], (unint64_t)v76);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      id v66 = v72;
      *uint64_t v72 = v63;
      v66[1] = (uint64_t)v65;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v82, (uint64_t)v81);
      sub_1A7447A74((uint64_t)v81, 0, 0);
      sub_1A7315924((uint64_t)v81);
      swift_willThrow();
      sub_1A72E3460(v44, v39);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    }
  }
}

void sub_1A7301508(uint64_t a1@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v72 = a3;
  uint64_t v73 = a1;
  uint64_t v6 = sub_1A7573790();
  uint64_t v79 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v78 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = a2[9];
  long long v91 = a2[8];
  v92[0] = v8;
  *(_OWORD *)((char *)v92 + 9) = *(long long *)((char *)a2 + 153);
  long long v9 = a2[5];
  long long v87 = a2[4];
  long long v88 = v9;
  long long v10 = a2[6];
  long long v90 = a2[7];
  long long v89 = v10;
  long long v11 = a2[1];
  long long v83 = *a2;
  long long v84 = v11;
  long long v12 = a2[2];
  long long v86 = a2[3];
  long long v85 = v12;
  id v93 = v4;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v13 = sub_1A7571820();
  id v14 = objc_msgSend(v4, sel_store);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  unint64_t v16 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v77 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v17 = (void *)swift_allocObject();
  id v17[2] = v14;
  uint64_t v18 = (uint64_t)v17;
  v17[3] = v16;
  uint64_t v19 = v17 + 3;
  v17[4] = sub_1A72B0A88(v15);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB705A18);
  uint64_t v21 = (uint64_t)v78;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
  v79 += 16;
  v22(v78, v20, v6);
  void v81[3] = v77;
  v81[0] = v18;
  uint64_t v75 = v18;
  swift_retain();
  uint64_t v23 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v81, v21);
  v23(v80, 0);
  sub_1A7316200();
  uint64_t v74 = v13;
  uint64_t v24 = v76;
  uint64_t v25 = sub_1A7571800();
  if (v24)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1A7571E90();
    __swift_project_value_buffer(v27, (uint64_t)qword_1E96F3940);
    uint64_t v28 = v24;
    unint64_t v29 = v24;
    uint64_t v30 = sub_1A7571E80();
    os_log_type_t v31 = sub_1A7572FD0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v81[0] = v33;
      *(_DWORD *)uint64_t v32 = 136315394;
      swift_getErrorValue();
      uint64_t v34 = Error.rem_errorDescription.getter((uint64_t)v82[5]);
      v80[0] = sub_1A72D1730(v34, v35, v81);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v32 + 12) = 2080;
      v80[0] = type metadata accessor for REMSuggestedAttributesTrainer();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1788);
      uint64_t v36 = sub_1A7572670();
      v80[0] = sub_1A72D1730(v36, v37, v81);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v30, v31, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v33, -1, -1);
      MEMORY[0x1AD0CD330](v32, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v38 = v25;
    unint64_t v39 = v26;
    uint64_t v69 = v22;
    uint64_t v70 = v20;
    uint64_t v71 = v6;
    swift_beginAccess();
    uint64_t v40 = *v19;
    id v41 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v38, v39);
    swift_bridgeObjectRetain();
    v82[0] = objc_msgSend(v41, sel_init);
    uint64_t v68 = type metadata accessor for REMSuggestedAttributesTrainer();
    v81[0] = v68;
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1788);
    uint64_t v43 = sub_1A7572670();
    uint64_t v76 = &v67;
    MEMORY[0x1F4188790](v43);
    *(&v67 - 6) = (uint64_t)v82;
    *(&v67 - 5) = (uint64_t)&v93;
    *(&v67 - 4) = v73;
    *(&v67 - 3) = v44;
    uint64_t v45 = v44;
    unint64_t v46 = v39;
    *(&v67 - 2) = v39;
    *(&v67 - 1) = v40;
    unint64_t v48 = v47;
    int v49 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v43, v48, v49, (void (*)(void))sub_1A731590C, (uint64_t)(&v67 - 8));
    uint64_t v73 = v42;
    unint64_t v50 = v46;
    sub_1A72E3460(v45, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v51 = objc_msgSend(v82[0], sel_resultStorages);
    uint64_t v52 = sub_1A75723F0();

    void v81[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v81[0] = v52;
    sub_1A72BEE98((uint64_t)v81, (uint64_t)v80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v67 = v45;
      uint64_t v76 = (uint64_t *)v50;
      uint64_t v53 = v81[99];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
      id v54 = objc_msgSend(v93, sel_store);
      uint64_t v55 = v77;
      uint64_t v56 = (void *)swift_allocObject();
      v56[2] = v54;
      v56[3] = v53;
      v56[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v57 = (uint64_t)v78;
      v69(v78, v70, v71);
      void v81[3] = v55;
      v81[0] = (uint64_t)v56;
      swift_retain();
      id v58 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v81, v57);
      v58(v80, 0);
      id v59 = v82[0];
      id v60 = objc_msgSend(v82[0], sel_resultData);
      uint64_t v61 = sub_1A7571A20();
      unint64_t v63 = v62;

      sub_1A7316254();
      sub_1A75717C0();
      sub_1A72E3460(v61, v63);
      memcpy(v80, v81, 0x318uLL);
      sub_1A73167B4((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A73162A8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1A73163B0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t, char))sub_1A7316400, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1A73166C4);
      id v64 = v59;
      id v65 = objc_msgSend(v64, sel_latestFetchResultToken);
      sub_1A72E3460(v67, (unint64_t)v76);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      sub_1A73167B4((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A7316AC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1A7316BCC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t, char))sub_1A7316C1C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1A7316EE0);

      id v66 = v72;
      memcpy(v72, v80, 0x318uLL);
      v66[99] = v65;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v81, (uint64_t)v80);
      sub_1A7447A74((uint64_t)v80, 0, 0);
      sub_1A7315924((uint64_t)v80);
      swift_willThrow();
      sub_1A72E3460(v45, v50);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    }
  }
}

void sub_1A73020D4(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
}

void sub_1A730215C(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
}

void sub_1A73021E4(uint64_t a1@<X0>, char a2@<W1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t *a6@<X5>, void (*a7)(void)@<X6>, uint64_t *a8@<X7>, uint64_t *a9@<X8>, void (*a10)(void))
{
  uint64_t v78 = a8;
  uint64_t v80 = a7;
  uint64_t v82 = a6;
  uint64_t v81 = a5;
  long long v85 = (uint64_t *)a4;
  long long v84 = a3;
  long long v11 = v10;
  uint64_t v79 = a1;
  uint64_t v77 = a9;
  uint64_t v13 = sub_1A7573790();
  uint64_t v87 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v94 = a2;
  id v93 = v11;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v16 = sub_1A7571820();
  id v17 = v11;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  unint64_t v19 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v20 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v17;
  uint64_t v22 = (uint64_t)v21;
  v21[3] = v19;
  uint64_t v23 = v21 + 3;
  v21[4] = sub_1A72B0A88(v18);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v24 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB705A18);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
  v87 += 16;
  v25(v15, v24, v13);
  uint64_t v92 = v20;
  long long v91 = (void *)v22;
  uint64_t v83 = v22;
  swift_retain();
  unint64_t v26 = (uint64_t (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v91, (uint64_t)v15);
  uint64_t v27 = v26(v90, 0);
  v84(v27);
  uint64_t v28 = v86;
  uint64_t v29 = sub_1A7571800();
  long long v86 = (void *)v30;
  if (v28)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1A7571E90();
    __swift_project_value_buffer(v31, (uint64_t)qword_1E96F3940);
    id v32 = v28;
    id v33 = v28;
    uint64_t v34 = sub_1A7571E80();
    os_log_type_t v35 = sub_1A7572FD0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      long long v91 = (void *)v37;
      *(_DWORD *)uint64_t v36 = 136315394;
      swift_getErrorValue();
      uint64_t v38 = Error.rem_errorDescription.getter((uint64_t)v89[5]);
      v90[0] = sub_1A72D1730(v38, v39, (uint64_t *)&v91);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v36 + 12) = 2080;
      v90[0] = v81(0);
      __swift_instantiateConcreteTypeFromMangledName(v82);
      uint64_t v40 = sub_1A7572670();
      v90[0] = sub_1A72D1730(v40, v41, (uint64_t *)&v91);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v34, v35, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v37, -1, -1);
      MEMORY[0x1AD0CD330](v36, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v42 = v29;
    uint64_t v72 = v25;
    uint64_t v73 = v24;
    uint64_t v74 = v20;
    uint64_t v75 = v15;
    long long v84 = (void (*)(uint64_t))v13;
    uint64_t v76 = v16;
    swift_beginAccess();
    uint64_t v43 = *v23;
    id v44 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    uint64_t v45 = v42;
    unint64_t v46 = (unint64_t)v86;
    sub_1A72E3408(v42, (unint64_t)v86);
    swift_bridgeObjectRetain();
    v89[0] = objc_msgSend(v44, sel_init);
    unint64_t v47 = (uint64_t *)v81(0);
    long long v91 = v47;
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(v82);
    uint64_t v49 = sub_1A7572670();
    unint64_t v51 = v50;
    long long v85 = &v71;
    MEMORY[0x1F4188790](v49);
    *(&v71 - 6) = (uint64_t)v89;
    *(&v71 - 5) = (uint64_t)&v93;
    *(&v71 - 4) = v79;
    *(&v71 - 3) = v45;
    *(&v71 - 2) = v46;
    *(&v71 - 1) = v43;
    int v52 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v49, v51, v52, v80, (uint64_t)(&v71 - 8));
    uint64_t v81 = (uint64_t (*)(void))v48;
    uint64_t v82 = v47;
    sub_1A72E3460(v45, (unint64_t)v86);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v53 = objc_msgSend(v89[0], sel_resultStorages);
    uint64_t v54 = sub_1A75723F0();

    uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    long long v91 = (void *)v54;
    sub_1A72BEE98((uint64_t)&v91, (uint64_t)v90);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      long long v85 = (uint64_t *)v45;
      uint64_t v55 = v88;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v91);
      uint64_t v56 = v93;
      uint64_t v57 = v74;
      id v58 = (void *)swift_allocObject();
      v58[2] = v56;
      v58[3] = v55;
      id v59 = v56;
      v58[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v60 = (uint64_t)v75;
      v72(v75, v73, (uint64_t)v84);
      uint64_t v92 = v57;
      long long v91 = v58;
      swift_retain();
      uint64_t v61 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)&v91, v60);
      v61(v90, 0);
      __swift_instantiateConcreteTypeFromMangledName(v78);
      id v62 = v89[0];
      id v63 = objc_msgSend(v89[0], sel_resultData);
      uint64_t v64 = sub_1A7571A20();
      unint64_t v66 = v65;

      a10();
      sub_1A75717C0();
      sub_1A72E3460(v64, v66);
      uint64_t v67 = (uint64_t)v91;
      swift_bridgeObjectRetain();
      id v68 = v62;
      id v69 = objc_msgSend(v68, sel_latestFetchResultToken);
      sub_1A72E3460((uint64_t)v85, (unint64_t)v86);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      uint64_t v70 = v77;
      *uint64_t v77 = v67;
      v70[1] = (uint64_t)v69;
    }
    else
    {
      sub_1A72BEE98((uint64_t)&v91, (uint64_t)v90);
      sub_1A7447A74((uint64_t)v90, 0, 0);
      sub_1A7315924((uint64_t)v90);
      swift_willThrow();
      sub_1A72E3460(v45, (unint64_t)v86);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v91);
    }
  }
}

void sub_1A7302DC4(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v69 = a1;
  id v68 = a3;
  char v5 = a2 & 1;
  uint64_t v6 = sub_1A7573790();
  uint64_t v74 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v73 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v82 = v5;
  uint64_t v81 = v4;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v8 = sub_1A7571820();
  id v9 = v4;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  unint64_t v11 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v72 = type metadata accessor for REMStoreObjectsContainer();
  long long v12 = (void *)swift_allocObject();
  void v12[2] = v9;
  void v12[3] = v11;
  uint64_t v13 = v12 + 3;
  uint64_t v14 = (uint64_t)v12;
  v12[4] = sub_1A72B0A88(v10);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB705A18);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
  uint64_t v17 = (uint64_t)v73;
  v74 += 16;
  v16(v73, v15, v6);
  uint64_t v80 = v72;
  uint64_t v78 = (void *)v14;
  uint64_t v70 = v14;
  swift_retain();
  uint64_t v18 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v78, v17);
  v18(v77, 0);
  sub_1A7315F68();
  unint64_t v19 = v71;
  uint64_t v20 = sub_1A7571800();
  if (v19)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1A7571E90();
    __swift_project_value_buffer(v22, (uint64_t)qword_1E96F3940);
    uint64_t v23 = v19;
    uint64_t v24 = v19;
    uint64_t v25 = sub_1A7571E80();
    os_log_type_t v26 = sub_1A7572FD0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v78 = (void *)v28;
      *(_DWORD *)uint64_t v27 = 136315394;
      swift_getErrorValue();
      uint64_t v29 = Error.rem_errorDescription.getter((uint64_t)v76[5]);
      v77[0] = sub_1A72D1730(v29, v30, (uint64_t *)&v78);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v27 + 12) = 2080;
      v77[0] = type metadata accessor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1748);
      uint64_t v31 = sub_1A7572670();
      v77[0] = sub_1A72D1730(v31, v32, (uint64_t *)&v78);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v25, v26, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v28, -1, -1);
      MEMORY[0x1AD0CD330](v27, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v33 = v20;
    unint64_t v34 = v21;
    uint64_t v64 = v16;
    uint64_t v65 = v15;
    uint64_t v66 = v6;
    uint64_t v67 = v8;
    swift_beginAccess();
    uint64_t v35 = *v13;
    id v36 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v33, v34);
    swift_bridgeObjectRetain();
    v76[0] = objc_msgSend(v36, sel_init);
    uint64_t v37 = type metadata accessor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation();
    uint64_t v78 = (void *)v37;
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1748);
    uint64_t v39 = sub_1A7572670();
    unint64_t v41 = v40;
    uint64_t v71 = v63;
    MEMORY[0x1F4188790](v39);
    v63[-6] = (uint64_t)v76;
    v63[-5] = (uint64_t)&v81;
    v63[-4] = v69;
    v63[-3] = v42;
    uint64_t v43 = v42;
    v63[-2] = v34;
    v63[-1] = v35;
    int v44 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v39, v41, v44, (void (*)(void))sub_1A731590C, (uint64_t)&v63[-8]);
    v63[1] = v38;
    uint64_t v69 = v37;
    sub_1A72E3460(v43, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v45 = objc_msgSend(v76[0], sel_resultStorages);
    uint64_t v46 = sub_1A75723F0();

    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    uint64_t v78 = (void *)v46;
    sub_1A72BEE98((uint64_t)&v78, (uint64_t)v77);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      v63[0] = v43;
      uint64_t v71 = (uint64_t *)v34;
      uint64_t v47 = v75;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v78);
      uint64_t v48 = v81;
      uint64_t v49 = v72;
      unint64_t v50 = (void *)swift_allocObject();
      v50[2] = v48;
      v50[3] = v47;
      id v51 = v48;
      v50[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v52 = (uint64_t)v73;
      v64(v73, v65, v66);
      uint64_t v80 = v49;
      uint64_t v78 = v50;
      swift_retain();
      id v53 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)&v78, v52);
      v53(v77, 0);
      id v54 = v76[0];
      id v55 = objc_msgSend(v76[0], sel_resultData);
      uint64_t v56 = sub_1A7571A20();
      unint64_t v58 = v57;

      sub_1A7315FBC();
      sub_1A75717C0();
      sub_1A72E3460(v56, v58);
      uint64_t v59 = (uint64_t)v78;
      LOBYTE(v56) = v79;
      swift_bridgeObjectRetain();
      id v60 = v54;
      id v61 = objc_msgSend(v60, sel_latestFetchResultToken);
      sub_1A72E3460(v63[0], (unint64_t)v71);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      id v62 = v68;
      *id v68 = v59;
      *((unsigned char *)v62 + 8) = v56;
      v62[2] = (uint64_t)v61;
    }
    else
    {
      sub_1A72BEE98((uint64_t)&v78, (uint64_t)v77);
      sub_1A7447A74((uint64_t)v77, 0, 0);
      sub_1A7315924((uint64_t)v77);
      swift_willThrow();
      sub_1A72E3460(v43, v34);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v78);
    }
  }
}

void sub_1A7303944(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v72 = a1;
  uint64_t v71 = a5;
  char v9 = a4 & 1;
  uint64_t v10 = sub_1A7573790();
  uint64_t v77 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v75 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = a2;
  uint64_t v84 = a3;
  char v85 = v9;
  long long v86 = v6;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v12 = sub_1A7571820();
  id v13 = v6;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  unint64_t v15 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v76 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v13;
  void v16[3] = v15;
  uint64_t v17 = v16 + 3;
  uint64_t v18 = (uint64_t)v16;
  v16[4] = sub_1A72B0A88(v14);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v10, (uint64_t)qword_1EB705A18);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
  uint64_t v21 = (uint64_t)v75;
  v77 += 16;
  v20(v75, v19, v10);
  uint64_t v82 = v76;
  v81[0] = v18;
  uint64_t v73 = v18;
  swift_retain();
  uint64_t v22 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v81, v21);
  v22(v80, 0);
  sub_1A7315F14();
  uint64_t v23 = v74;
  uint64_t v24 = sub_1A7571800();
  if (v23)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1A7571E90();
    __swift_project_value_buffer(v26, (uint64_t)qword_1E96F3940);
    uint64_t v27 = v23;
    uint64_t v28 = v23;
    uint64_t v29 = sub_1A7571E80();
    os_log_type_t v30 = sub_1A7572FD0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      v81[0] = v32;
      *(_DWORD *)uint64_t v31 = 136315394;
      swift_getErrorValue();
      uint64_t v33 = Error.rem_errorDescription.getter((uint64_t)v79[5]);
      v80[0] = sub_1A72D1730(v33, v34, v81);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v31 + 12) = 2080;
      v80[0] = type metadata accessor for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1738);
      uint64_t v35 = sub_1A7572670();
      v80[0] = sub_1A72D1730(v35, v36, v81);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v29, v30, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v32, -1, -1);
      MEMORY[0x1AD0CD330](v31, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v37 = v24;
    unint64_t v38 = v25;
    uint64_t v67 = v20;
    uint64_t v68 = v19;
    uint64_t v69 = v10;
    uint64_t v70 = v12;
    swift_beginAccess();
    uint64_t v39 = *v17;
    id v40 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v37, v38);
    swift_bridgeObjectRetain();
    v79[0] = objc_msgSend(v40, sel_init);
    uint64_t v41 = type metadata accessor for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation();
    v81[0] = v41;
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1738);
    uint64_t v43 = sub_1A7572670();
    unint64_t v45 = v44;
    uint64_t v74 = v66;
    MEMORY[0x1F4188790](v43);
    v66[-6] = (uint64_t)v79;
    v66[-5] = (uint64_t)&v86;
    v66[-4] = v72;
    v66[-3] = v37;
    v66[-2] = v38;
    v66[-1] = v39;
    int v46 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v43, v45, v46, (void (*)(void))sub_1A731590C, (uint64_t)&v66[-8]);
    v66[1] = v42;
    uint64_t v72 = v41;
    sub_1A72E3460(v37, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    unint64_t v47 = v38;
    sub_1A75717E0();
    id v48 = objc_msgSend(v79[0], sel_resultStorages);
    uint64_t v49 = sub_1A75723F0();

    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v81[0] = v49;
    sub_1A72BEE98((uint64_t)v81, (uint64_t)v80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      v66[0] = v37;
      uint64_t v74 = (uint64_t *)v47;
      uint64_t v50 = v78;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
      id v51 = v86;
      uint64_t v52 = v76;
      id v53 = (void *)swift_allocObject();
      v53[2] = v51;
      v53[3] = v50;
      id v54 = v51;
      v53[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v55 = (uint64_t)v75;
      v67(v75, v68, v69);
      uint64_t v82 = v52;
      v81[0] = (uint64_t)v53;
      swift_retain();
      uint64_t v56 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v81, v55);
      v56(v80, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705B90);
      id v57 = v79[0];
      id v58 = objc_msgSend(v79[0], sel_resultData);
      uint64_t v59 = sub_1A7571A20();
      unint64_t v61 = v60;

      sub_1A72F0D38((unint64_t *)&qword_1EB705B98, &qword_1EB705A50);
      sub_1A75717C0();
      sub_1A72E3460(v59, v61);
      uint64_t v62 = v81[0];
      swift_bridgeObjectRetain();
      id v63 = v57;
      id v64 = objc_msgSend(v63, sel_latestFetchResultToken);
      sub_1A72E3460(v66[0], (unint64_t)v74);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      uint64_t v65 = v71;
      uint64_t *v71 = v62;
      v65[1] = (uint64_t)v64;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v81, (uint64_t)v80);
      sub_1A7447A74((uint64_t)v80, 0, 0);
      sub_1A7315924((uint64_t)v80);
      swift_willThrow();
      sub_1A72E3460(v37, v47);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    }
  }
}

void sub_1A730450C(uint64_t a1@<X0>, long long *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v73 = a1;
  uint64_t v72 = a3;
  uint64_t v6 = sub_1A7573790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v77 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = a2[1];
  long long v84 = *a2;
  long long v85 = v9;
  long long v86 = a2[2];
  char v87 = *((unsigned char *)a2 + 48);
  id v88 = v4;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v78 = sub_1A7571820();
  id v10 = objc_msgSend(v4, sel_store);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  unint64_t v12 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v76 = type metadata accessor for REMStoreObjectsContainer();
  id v13 = (void *)swift_allocObject();
  void v13[2] = v10;
  v13[3] = v12;
  uint64_t v14 = v13 + 3;
  uint64_t v15 = (uint64_t)v13;
  v13[4] = sub_1A72B0A88(v11);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB705A18);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v17 = v7 + 16;
  uint64_t v18 = v19;
  uint64_t v20 = (uint64_t)v77;
  v19(v77, v16, v6);
  uint64_t v83 = v76;
  v82[0] = v15;
  uint64_t v74 = v15;
  swift_retain();
  uint64_t v21 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v82, v20);
  v21(v81, 0);
  sub_1A7315E6C();
  uint64_t v22 = v75;
  uint64_t v23 = sub_1A7571800();
  if (v22)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1A7571E90();
    __swift_project_value_buffer(v25, (uint64_t)qword_1E96F3940);
    uint64_t v26 = v22;
    uint64_t v27 = v22;
    uint64_t v28 = sub_1A7571E80();
    os_log_type_t v29 = sub_1A7572FD0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      v82[0] = v31;
      *(_DWORD *)uint64_t v30 = 136315394;
      swift_getErrorValue();
      uint64_t v32 = Error.rem_errorDescription.getter((uint64_t)v80[5]);
      v81[0] = sub_1A72D1730(v32, v33, v82);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v30 + 12) = 2080;
      v81[0] = type metadata accessor for REMSuggestedAttributesFeatureExtractor();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1720);
      uint64_t v34 = sub_1A7572670();
      v81[0] = sub_1A72D1730(v34, v35, v82);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v28, v29, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v31, -1, -1);
      MEMORY[0x1AD0CD330](v30, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v36 = v23;
    unint64_t v37 = v24;
    uint64_t v68 = v18;
    uint64_t v69 = v16;
    uint64_t v70 = v17;
    uint64_t v71 = v6;
    swift_beginAccess();
    uint64_t v38 = *v14;
    id v39 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v36, v37);
    swift_bridgeObjectRetain();
    v80[0] = objc_msgSend(v39, sel_init);
    uint64_t v40 = type metadata accessor for REMSuggestedAttributesFeatureExtractor();
    v82[0] = v40;
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1720);
    uint64_t v42 = sub_1A7572670();
    unint64_t v44 = v43;
    uint64_t v75 = v67;
    MEMORY[0x1F4188790](v42);
    v67[-6] = (uint64_t)v80;
    v67[-5] = (uint64_t)&v88;
    v67[-4] = v73;
    v67[-3] = v45;
    uint64_t v46 = v45;
    v67[-2] = v37;
    v67[-1] = v38;
    int v47 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v42, v44, v47, (void (*)(void))sub_1A731590C, (uint64_t)&v67[-8]);
    v67[1] = v41;
    uint64_t v73 = v40;
    unint64_t v48 = v37;
    sub_1A72E3460(v46, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v49 = objc_msgSend(v80[0], sel_resultStorages);
    uint64_t v50 = sub_1A75723F0();

    uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v82[0] = v50;
    sub_1A72BEE98((uint64_t)v82, (uint64_t)v81);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      v67[0] = v46;
      uint64_t v75 = (uint64_t *)v48;
      uint64_t v51 = v79;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
      id v52 = objc_msgSend(v88, sel_store);
      uint64_t v53 = v76;
      id v54 = (void *)swift_allocObject();
      v54[2] = v52;
      void v54[3] = v51;
      v54[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v55 = (uint64_t)v77;
      v68(v77, v69, v71);
      uint64_t v83 = v53;
      v82[0] = (uint64_t)v54;
      swift_retain();
      uint64_t v56 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v82, v55);
      v56(v81, 0);
      id v57 = v80[0];
      id v58 = objc_msgSend(v80[0], sel_resultData);
      uint64_t v59 = sub_1A7571A20();
      unint64_t v61 = v60;

      sub_1A7315EC0();
      sub_1A75717C0();
      sub_1A72E3460(v59, v61);
      LOBYTE(v59) = v82[0];
      uint64_t v63 = v82[1];
      uint64_t v62 = v82[2];
      swift_bridgeObjectRetain();
      id v64 = v57;
      id v65 = objc_msgSend(v64, sel_latestFetchResultToken);
      sub_1A72E3460(v67[0], (unint64_t)v75);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      uint64_t v66 = v72;
      *uint64_t v72 = v59;
      v66[1] = v63;
      uint64_t v66[2] = v62;
      v66[3] = v65;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v82, (uint64_t)v81);
      sub_1A7447A74((uint64_t)v81, 0, 0);
      sub_1A7315924((uint64_t)v81);
      swift_willThrow();
      sub_1A72E3460(v46, v48);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    }
  }
}

void sub_1A73050E4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v82 = a2;
  uint64_t v80 = a1;
  uint64_t v79 = a3;
  uint64_t v4 = sub_1A7573790();
  uint64_t v86 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v85 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v100 = v3;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v6 = sub_1A7571820();
  id v7 = v3;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v84 = type metadata accessor for REMStoreObjectsContainer();
  id v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v7;
  v10[3] = v9;
  uint64_t v11 = v10 + 3;
  uint64_t v12 = (uint64_t)v10;
  v10[4] = sub_1A72B0A88(v8);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB705A18);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 16);
  uint64_t v15 = (uint64_t)v85;
  v86 += 16;
  v14(v85, v13, v4);
  uint64_t v88 = v84;
  v87[0] = v12;
  uint64_t v81 = v12;
  swift_retain();
  uint64_t v16 = (void (*)(uint64_t *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v87, v15);
  v16(&v99, 0);
  type metadata accessor for REMRemindersListDataView.ListInvocation.Parameters(0);
  sub_1A72F0548(&qword_1EB702F80, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.ListInvocation.Parameters);
  uint64_t v82 = v6;
  uint64_t v17 = v83;
  uint64_t v18 = sub_1A7571800();
  uint64_t v83 = (void *)v19;
  if (v17)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E96F3940);
    id v21 = v17;
    id v22 = v17;
    uint64_t v23 = sub_1A7571E80();
    os_log_type_t v24 = sub_1A7572FD0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v87[0] = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_getErrorValue();
      uint64_t v27 = Error.rem_errorDescription.getter((uint64_t)v98[5]);
      uint64_t v99 = sub_1A72D1730(v27, v28, v87);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v99 = type metadata accessor for REMRemindersListDataView.ListInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701280);
      uint64_t v29 = sub_1A7572670();
      uint64_t v99 = sub_1A72D1730(v29, v30, v87);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v23, v24, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v26, -1, -1);
      MEMORY[0x1AD0CD330](v25, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v31 = v18;
    uint64_t v75 = v14;
    uint64_t v76 = v13;
    uint64_t v77 = v4;
    swift_beginAccess();
    uint64_t v32 = *v11;
    id v33 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    unint64_t v34 = (unint64_t)v83;
    sub_1A72E3408(v31, (unint64_t)v83);
    swift_bridgeObjectRetain();
    v98[0] = objc_msgSend(v33, sel_init);
    uint64_t v35 = type metadata accessor for REMRemindersListDataView.ListInvocation();
    v87[0] = v35;
    uint64_t v36 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB701280);
    uint64_t v37 = sub_1A7572670();
    unint64_t v39 = v38;
    uint64_t v78 = &v69;
    MEMORY[0x1F4188790](v37);
    *(&v69 - 6) = (uint64_t)v98;
    *(&v69 - 5) = (uint64_t)&v100;
    *(&v69 - 4) = v80;
    *(&v69 - 3) = v31;
    *(&v69 - 2) = v34;
    *(&v69 - 1) = v32;
    int v40 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v37, v39, v40, (void (*)(void))sub_1A731590C, (uint64_t)(&v69 - 8));
    id v74 = v36;
    uint64_t v80 = v35;
    sub_1A72E3460(v31, (unint64_t)v83);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v41 = objc_msgSend(v98[0], sel_resultStorages);
    uint64_t v42 = sub_1A75723F0();

    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v87[0] = v42;
    sub_1A72BEE98((uint64_t)v87, (uint64_t)&v99);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v78 = (uint64_t *)v31;
      uint64_t v43 = v97;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
      unint64_t v44 = v100;
      uint64_t v45 = v84;
      uint64_t v46 = (void *)swift_allocObject();
      v46[2] = v44;
      v46[3] = v43;
      id v47 = v44;
      v46[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v48 = (uint64_t)v85;
      v75(v85, v76, v77);
      uint64_t v88 = v45;
      v87[0] = (uint64_t)v46;
      swift_retain();
      id v49 = (void (*)(uint64_t *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v87, v48);
      v49(&v99, 0);
      id v50 = v98[0];
      id v51 = objc_msgSend(v98[0], sel_resultData);
      uint64_t v52 = sub_1A7571A20();
      unint64_t v54 = v53;

      sub_1A7315E18();
      sub_1A75717C0();
      uint64_t v86 = 0;
      sub_1A72E3460(v52, v54);
      uint64_t v76 = v87[0];
      long long v85 = (char *)v87[1];
      uint64_t v84 = v87[2];
      LODWORD(v80) = v88;
      LODWORD(v77) = BYTE1(v88);
      uint64_t v55 = v90;
      uint64_t v75 = v89;
      uint64_t v56 = v91;
      uint64_t v71 = v92;
      uint64_t v58 = v93;
      uint64_t v57 = v94;
      uint64_t v59 = v95;
      id v74 = v96;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v70 = v57;
      swift_bridgeObjectRetain();
      uint64_t v72 = v59;
      swift_bridgeObjectRetain();
      id v60 = v74;
      uint64_t v73 = (uint64_t)v60;
      id v61 = v50;
      id v74 = objc_msgSend(v61, sel_latestFetchResultToken);
      sub_1A72E3460((uint64_t)v78, (unint64_t)v83);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v62 = v71;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v63 = v75;
      swift_bridgeObjectRelease();
      uint64_t v64 = v76;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      id v65 = v79;
      uint64_t v66 = v85;
      *uint64_t v79 = v64;
      v65[1] = (uint64_t)v66;
      _OWORD v65[2] = v84;
      *((unsigned char *)v65 + 24) = v80;
      *((unsigned char *)v65 + 25) = v77;
      v65[4] = (uint64_t)v63;
      v65[5] = v55;
      v65[6] = v56;
      v65[7] = v62;
      uint64_t v67 = v70;
      v65[8] = v58;
      v65[9] = v67;
      uint64_t v68 = v73;
      v65[10] = v72;
      v65[11] = v68;
      v65[12] = (uint64_t)v74;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v87, (uint64_t)&v99);
      sub_1A7447A74((uint64_t)&v99, 0, 0);
      sub_1A7315924((uint64_t)&v99);
      swift_willThrow();
      sub_1A72E3460(v31, (unint64_t)v83);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
    }
  }
}

void sub_1A7305EB0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v94 = a1;
  uint64_t v92 = a3;
  uint64_t v6 = sub_1A7573790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v98 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112[3] = a2;
  v112[0] = v4;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v9 = sub_1A7571820();
  id v10 = v4;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  unint64_t v12 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v97 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v10;
  v13[3] = v12;
  uint64_t v14 = v13 + 3;
  uint64_t v15 = (uint64_t)v13;
  v13[4] = sub_1A72B0A88(v11);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB705A18);
  uint64_t v17 = v6;
  uint64_t v18 = v16;
  id v21 = *(void (**)(void, void))(v7 + 16);
  uint64_t v19 = v7 + 16;
  uint64_t v20 = v21;
  uint64_t v22 = (uint64_t)v98;
  uint64_t v93 = v17;
  v21(v98, v16);
  uint64_t v100 = v97;
  v99[0] = v15;
  uint64_t v95 = v15;
  swift_retain();
  uint64_t v23 = (void (*)(uint64_t *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v99, v22);
  v23(&v111, 0);
  sub_1A7315DC4();
  os_log_type_t v24 = v96;
  uint64_t v25 = sub_1A7571800();
  if (v24)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1A7571E90();
    __swift_project_value_buffer(v27, (uint64_t)qword_1E96F3940);
    unint64_t v28 = v24;
    uint64_t v29 = v24;
    unint64_t v30 = sub_1A7571E80();
    os_log_type_t v31 = sub_1A7572FD0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v99[0] = v33;
      *(_DWORD *)uint64_t v32 = 136315394;
      swift_getErrorValue();
      uint64_t v34 = Error.rem_errorDescription.getter((uint64_t)v110[5]);
      uint64_t v111 = sub_1A72D1730(v34, v35, v99);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v111 = type metadata accessor for REMRemindersListDataView.PublicTemplateInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1710);
      uint64_t v36 = sub_1A7572670();
      uint64_t v111 = sub_1A72D1730(v36, v37, v99);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v30, v31, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v33, -1, -1);
      MEMORY[0x1AD0CD330](v32, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v38 = v25;
    unint64_t v39 = v26;
    uint64_t v88 = (void (*)(char *, uint64_t, uint64_t))v20;
    uint64_t v89 = v18;
    uint64_t v90 = v19;
    uint64_t v91 = v9;
    swift_beginAccess();
    uint64_t v40 = *v14;
    id v41 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v38, v39);
    swift_bridgeObjectRetain();
    v110[0] = objc_msgSend(v41, sel_init);
    v99[0] = type metadata accessor for REMRemindersListDataView.PublicTemplateInvocation();
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1710);
    uint64_t v43 = v38;
    uint64_t v44 = sub_1A7572670();
    unint64_t v46 = v45;
    long long v96 = &v82;
    MEMORY[0x1F4188790](v44);
    *(&v82 - 6) = (uint64_t)v110;
    *(&v82 - 5) = (uint64_t)v112;
    *(&v82 - 4) = v94;
    *(&v82 - 3) = v38;
    *(&v82 - 2) = v39;
    *(&v82 - 1) = v40;
    int v47 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v44, v46, v47, (void (*)(void))sub_1A731590C, (uint64_t)(&v82 - 8));
    uint64_t v94 = v42;
    sub_1A72E3460(v38, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v48 = sub_1A75717E0();
    id v49 = objc_msgSend(v110[0], sel_resultStorages);
    uint64_t v50 = sub_1A75723F0();

    uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v99[0] = v50;
    sub_1A72BEE98((uint64_t)v99, (uint64_t)&v111);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v87 = v43;
      long long v96 = (uint64_t *)v39;
      uint64_t v51 = v109;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
      uint64_t v52 = (void *)v112[0];
      uint64_t v53 = v97;
      unint64_t v54 = (void *)swift_allocObject();
      v54[2] = v52;
      void v54[3] = v51;
      id v55 = v52;
      v54[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v56 = (uint64_t)v98;
      v88(v98, v89, v93);
      uint64_t v100 = v53;
      v99[0] = (uint64_t)v54;
      uint64_t v97 = (uint64_t)v54;
      swift_retain();
      uint64_t v57 = (void (*)(uint64_t *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v99, v56);
      v57(&v111, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700978);
      id v58 = v110[0];
      uint64_t v59 = (char *)v48;
      id v60 = objc_msgSend(v110[0], sel_resultData);
      uint64_t v61 = sub_1A7571A20();
      unint64_t v63 = v62;

      sub_1A7317738(&qword_1EB700970, &qword_1EB700978);
      sub_1A75717C0();
      sub_1A72E3460(v61, v63);
      uint64_t v86 = v99[0];
      uint64_t v94 = 0;
      uint64_t v93 = v99[1];
      uint64_t v90 = v99[2];
      LODWORD(v89) = v100;
      LODWORD(v88) = BYTE1(v100);
      uint64_t v85 = v101;
      uint64_t v65 = v102;
      uint64_t v64 = v103;
      long long v98 = v59;
      uint64_t v66 = v104;
      uint64_t v67 = v105;
      uint64_t v69 = v106;
      uint64_t v68 = v107;
      uint64_t v70 = v108;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v71 = v64;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v83 = v70;
      swift_bridgeObjectRetain();
      id v72 = v58;
      id v84 = objc_msgSend(v72, sel_latestFetchResultToken);
      sub_1A72E3460(v87, (unint64_t)v96);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v73 = v67;
      swift_bridgeObjectRelease();
      uint64_t v74 = v66;
      swift_bridgeObjectRelease();
      uint64_t v75 = (uint64_t)v71;

      uint64_t v76 = v65;
      swift_bridgeObjectRelease();
      uint64_t v77 = v85;
      swift_bridgeObjectRelease();
      uint64_t v78 = v86;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      uint64_t v79 = v92;
      uint64_t v80 = v93;
      *uint64_t v92 = v78;
      v79[1] = v80;
      uint64_t v79[2] = v90;
      *((unsigned char *)v79 + 24) = v89;
      *((unsigned char *)v79 + 25) = (_BYTE)v88;
      v79[4] = v77;
      v79[5] = v76;
      id v79[6] = v75;
      v79[7] = v74;
      v79[8] = v73;
      v79[9] = v69;
      uint64_t v81 = v83;
      v79[10] = v68;
      v79[11] = v81;
      v79[12] = (uint64_t)v84;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v99, (uint64_t)&v111);
      sub_1A7447A74((uint64_t)&v111, 0, 0);
      sub_1A7315924((uint64_t)&v111);
      swift_willThrow();
      sub_1A72E3460(v43, v39);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
    }
  }
}

void sub_1A7306BE8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v82 = a1;
  uint64_t v81 = a3;
  uint64_t v4 = sub_1A7573790();
  uint64_t v88 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v87 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = v3;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v6 = sub_1A7571820();
  id v7 = v3;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v86 = type metadata accessor for REMStoreObjectsContainer();
  id v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v7;
  v10[3] = v9;
  uint64_t v11 = v10 + 3;
  uint64_t v12 = (uint64_t)v10;
  v10[4] = sub_1A72B0A88(v8);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB705A18);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 16);
  uint64_t v15 = (uint64_t)v87;
  v88 += 16;
  v14(v87, v13, v4);
  uint64_t v92 = v86;
  v89[0] = v12;
  uint64_t v83 = v12;
  swift_retain();
  uint64_t v16 = (void (*)(uint64_t *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v89, v15);
  v16(&v102, 0);
  type metadata accessor for REMRemindersListDataView.GroupInvocation.Parameters(0);
  sub_1A72F0548(&qword_1E96F16F0, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.GroupInvocation.Parameters);
  uint64_t v84 = v6;
  uint64_t v17 = v85;
  uint64_t v18 = sub_1A7571800();
  uint64_t v85 = (void *)v19;
  if (v17)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E96F3940);
    id v21 = v17;
    id v22 = v17;
    uint64_t v23 = sub_1A7571E80();
    os_log_type_t v24 = sub_1A7572FD0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v89[0] = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_getErrorValue();
      uint64_t v27 = Error.rem_errorDescription.getter((uint64_t)v101[5]);
      uint64_t v102 = sub_1A72D1730(v27, v28, v89);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v102 = type metadata accessor for REMRemindersListDataView.GroupInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F16F8);
      uint64_t v29 = sub_1A7572670();
      uint64_t v102 = sub_1A72D1730(v29, v30, v89);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v23, v24, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v26, -1, -1);
      MEMORY[0x1AD0CD330](v25, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v31 = v18;
    uint64_t v77 = v14;
    uint64_t v78 = v13;
    uint64_t v79 = v4;
    swift_beginAccess();
    uint64_t v32 = *v11;
    id v33 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    unint64_t v34 = (unint64_t)v85;
    sub_1A72E3408(v31, (unint64_t)v85);
    swift_bridgeObjectRetain();
    v101[0] = objc_msgSend(v33, sel_init);
    uint64_t v35 = type metadata accessor for REMRemindersListDataView.GroupInvocation();
    v89[0] = v35;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F16F8);
    uint64_t v37 = sub_1A7572670();
    unint64_t v39 = v38;
    uint64_t v80 = &v72;
    MEMORY[0x1F4188790](v37);
    *(&v72 - 6) = (uint64_t)v101;
    *(&v72 - 5) = (uint64_t)&v103;
    *(&v72 - 4) = v82;
    *(&v72 - 3) = v31;
    *(&v72 - 2) = v34;
    *(&v72 - 1) = v32;
    int v40 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v37, v39, v40, (void (*)(void))sub_1A731590C, (uint64_t)(&v72 - 8));
    uint64_t v76 = v36;
    uint64_t v82 = v35;
    sub_1A72E3460(v31, (unint64_t)v85);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v41 = objc_msgSend(v101[0], sel_resultStorages);
    uint64_t v42 = sub_1A75723F0();

    uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v89[0] = v42;
    sub_1A72BEE98((uint64_t)v89, (uint64_t)&v102);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v80 = (uint64_t *)v31;
      uint64_t v43 = v100;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
      uint64_t v44 = v103;
      uint64_t v45 = v86;
      unint64_t v46 = (void *)swift_allocObject();
      v46[2] = v44;
      v46[3] = v43;
      id v47 = v44;
      v46[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v48 = (uint64_t)v87;
      v77(v87, v78, v79);
      uint64_t v92 = v45;
      v89[0] = (uint64_t)v46;
      swift_retain();
      id v49 = (void (*)(uint64_t *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v89, v48);
      v49(&v102, 0);
      id v50 = v101[0];
      id v51 = objc_msgSend(v101[0], sel_resultData);
      uint64_t v52 = sub_1A7571A20();
      unint64_t v54 = v53;

      sub_1A7315D70();
      sub_1A75717C0();
      uint64_t v88 = 0;
      sub_1A72E3460(v52, v54);
      uint64_t v79 = v89[0];
      uint64_t v87 = (char *)v89[1];
      LODWORD(v86) = v90;
      LODWORD(v82) = v91;
      uint64_t v55 = v93;
      uint64_t v78 = v92;
      uint64_t v76 = v94;
      uint64_t v73 = v95;
      uint64_t v57 = v96;
      uint64_t v56 = v97;
      uint64_t v58 = v98;
      uint64_t v77 = v99;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v59 = v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v72 = v56;
      swift_bridgeObjectRetain();
      uint64_t v74 = v58;
      swift_bridgeObjectRetain();
      id v60 = v77;
      uint64_t v75 = (uint64_t)v60;
      id v61 = v50;
      uint64_t v77 = (void (*)(char *, uint64_t, uint64_t))objc_msgSend(v61, sel_latestFetchResultToken);
      sub_1A72E3460((uint64_t)v80, (unint64_t)v85);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v62 = v57;
      swift_bridgeObjectRelease();
      uint64_t v63 = v73;
      swift_bridgeObjectRelease();
      uint64_t v64 = v76;
      swift_bridgeObjectRelease();
      uint64_t v65 = v59;
      swift_bridgeObjectRelease();
      uint64_t v66 = v78;
      swift_bridgeObjectRelease();
      uint64_t v67 = v79;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      uint64_t v68 = v81;
      uint64_t v69 = v87;
      *uint64_t v81 = v67;
      v68[1] = (uint64_t)v69;
      *((unsigned char *)v68 + 16) = v86;
      *((unsigned char *)v68 + 17) = v82;
      v68[3] = v66;
      v68[4] = v65;
      v68[5] = v64;
      v68[6] = v63;
      uint64_t v70 = v72;
      v68[7] = v62;
      v68[8] = v70;
      uint64_t v71 = v75;
      v68[9] = v74;
      v68[10] = v71;
      v68[11] = (uint64_t)v77;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v89, (uint64_t)&v102);
      sub_1A7447A74((uint64_t)&v102, 0, 0);
      sub_1A7315924((uint64_t)&v102);
      swift_willThrow();
      sub_1A72E3460(v31, (unint64_t)v85);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
    }
  }
}

void sub_1A7307994(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v101 = a2;
  id v99 = a1;
  uint64_t v98 = a3;
  uint64_t v4 = sub_1A7573790();
  uint64_t v105 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v104 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = v3;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v6 = sub_1A7571820();
  id v7 = v3;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v103 = type metadata accessor for REMStoreObjectsContainer();
  id v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v7;
  v10[3] = v9;
  uint64_t v11 = v10 + 3;
  uint64_t v12 = (uint64_t)v10;
  v10[4] = sub_1A72B0A88(v8);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB705A18);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
  uint64_t v15 = (uint64_t)v104;
  v105 += 16;
  v14(v104, v13, v4);
  uint64_t v108 = v103;
  v107[0] = v12;
  uint64_t v100 = v12;
  swift_retain();
  uint64_t v16 = (void (*)(uint64_t *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v107, v15);
  v16(&v119, 0);
  type metadata accessor for REMRemindersListDataView.FlaggedInvocation.Parameters(0);
  sub_1A72F0548(&qword_1EB700948, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.FlaggedInvocation.Parameters);
  uint64_t v101 = v6;
  uint64_t v17 = v102;
  uint64_t v18 = sub_1A7571800();
  uint64_t v102 = (void *)v19;
  if (v17)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E96F3940);
    id v21 = v17;
    id v22 = v17;
    uint64_t v23 = sub_1A7571E80();
    os_log_type_t v24 = sub_1A7572FD0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v107[0] = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_getErrorValue();
      uint64_t v27 = Error.rem_errorDescription.getter((uint64_t)v118[5]);
      uint64_t v119 = sub_1A72D1730(v27, v28, v107);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v119 = type metadata accessor for REMRemindersListDataView.FlaggedInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700950);
      uint64_t v29 = sub_1A7572670();
      uint64_t v119 = sub_1A72D1730(v29, v30, v107);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v23, v24, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v26, -1, -1);
      MEMORY[0x1AD0CD330](v25, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v31 = v18;
    uint64_t v94 = v14;
    uint64_t v95 = v13;
    uint64_t v96 = v4;
    swift_beginAccess();
    uint64_t v32 = *v11;
    id v33 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    unint64_t v34 = (unint64_t)v102;
    sub_1A72E3408(v31, (unint64_t)v102);
    swift_bridgeObjectRetain();
    v118[0] = objc_msgSend(v33, sel_init);
    uint64_t v35 = (void *)type metadata accessor for REMRemindersListDataView.FlaggedInvocation();
    v107[0] = (uint64_t)v35;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700950);
    uint64_t v37 = sub_1A7572670();
    unint64_t v39 = v38;
    uint64_t v97 = &v86;
    MEMORY[0x1F4188790](v37);
    *(&v86 - 6) = (uint64_t)v118;
    *(&v86 - 5) = (uint64_t)&v120;
    *(&v86 - 4) = (uint64_t)v99;
    *(&v86 - 3) = v31;
    *(&v86 - 2) = v34;
    *(&v86 - 1) = v32;
    int v40 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v37, v39, v40, (void (*)(void))sub_1A731590C, (uint64_t)(&v86 - 8));
    id v99 = 0;
    id v92 = (id)v36;
    id v93 = v35;
    sub_1A72E3460(v31, (unint64_t)v102);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v41 = sub_1A75717E0();
    id v42 = objc_msgSend(v118[0], sel_resultStorages);
    uint64_t v43 = sub_1A75723F0();

    uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v107[0] = v43;
    sub_1A72BEE98((uint64_t)v107, (uint64_t)&v119);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v97 = (uint64_t *)v31;
      uint64_t v44 = v117;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
      uint64_t v45 = v120;
      uint64_t v46 = v103;
      id v47 = (void *)swift_allocObject();
      _OWORD v47[2] = v45;
      v47[3] = v44;
      id v48 = v45;
      v47[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v49 = (uint64_t)v104;
      v94(v104, v95, v96);
      uint64_t v108 = v46;
      v107[0] = (uint64_t)v47;
      swift_retain();
      id v50 = (void (*)(uint64_t *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v107, v49);
      v50(&v119, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700988);
      id v51 = v118[0];
      id v52 = objc_msgSend(v118[0], sel_resultData);
      uint64_t v53 = sub_1A7571A20();
      unint64_t v55 = v54;

      sub_1A7317738(&qword_1EB700980, &qword_1EB700988);
      id v56 = v99;
      sub_1A75717C0();
      id v99 = v56;
      if (!v56)
      {
        sub_1A72E3460(v53, v55);
        uint64_t v87 = v107[0];
        uint64_t v105 = v107[1];
        uint64_t v104 = (char *)v107[2];
        LODWORD(v103) = v108;
        LODWORD(v96) = BYTE1(v108);
        uint64_t v94 = (void (*)(char *, uint64_t, uint64_t))v41;
        uint64_t v71 = v109;
        uint64_t v88 = v110;
        uint64_t v95 = (uint64_t)v111;
        uint64_t v91 = v112;
        uint64_t v73 = v113;
        uint64_t v72 = v114;
        uint64_t v75 = v115;
        uint64_t v74 = v116;
        id v93 = v111;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v76 = v72;
        swift_bridgeObjectRetain();
        uint64_t v89 = v75;
        swift_bridgeObjectRetain();
        uint64_t v90 = v74;
        swift_bridgeObjectRetain();
        id v77 = v51;
        uint64_t v78 = v87;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v79 = v88;
        swift_bridgeObjectRetain();
        id v92 = objc_msgSend(v77, sel_latestFetchResultToken);
        sub_1A72E3460((uint64_t)v97, (unint64_t)v102);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v80 = v73;
        swift_bridgeObjectRelease();
        uint64_t v81 = v91;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        uint64_t v82 = v98;
        uint64_t v83 = v105;
        *uint64_t v98 = v78;
        v82[1] = v83;
        uint64_t v82[2] = (uint64_t)v104;
        *((unsigned char *)v82 + 24) = v103;
        *((unsigned char *)v82 + 25) = v96;
        void v82[4] = v71;
        v82[5] = v79;
        v82[6] = v95;
        v82[7] = v81;
        id v82[8] = v80;
        v82[9] = v76;
        uint64_t v84 = v90;
        v82[10] = v89;
        v82[11] = v84;
        v82[12] = (uint64_t)v92;
        return;
      }
      uint64_t v105 = (uint64_t)v47;
      sub_1A72E3460(v53, v55);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_1A7571E90();
      __swift_project_value_buffer(v57, (uint64_t)qword_1E96F3940);
      id v58 = v99;
      id v59 = v99;
      id v60 = v58;
      id v61 = sub_1A7571E80();
      os_log_type_t v62 = sub_1A7572FD0();
      BOOL v63 = os_log_type_enabled(v61, v62);
      uint64_t v64 = (uint64_t)v93;
      if (v63)
      {
        uint64_t v65 = swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        v107[0] = v66;
        *(_DWORD *)uint64_t v65 = 136315394;
        swift_getErrorValue();
        uint64_t v67 = Error.rem_errorDescription.getter(v106);
        uint64_t v119 = sub_1A72D1730(v67, v68, v107);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v65 + 12) = 2080;
        uint64_t v119 = v64;
        uint64_t v69 = sub_1A7572670();
        uint64_t v119 = sub_1A72D1730(v69, v70, v107);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v61, v62, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v65, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v66, -1, -1);
        MEMORY[0x1AD0CD330](v65, -1, -1);
      }
      else
      {
      }
      uint64_t v85 = (uint64_t)v97;
      swift_willThrow();
      sub_1A72E3460(v85, (unint64_t)v102);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)v107, (uint64_t)&v119);
      sub_1A7447A74((uint64_t)&v119, 0, 0);
      sub_1A7315924((uint64_t)&v119);
      swift_willThrow();
      sub_1A72E3460(v31, (unint64_t)v102);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
    }
  }
}

void sub_1A730875C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X8>)
{
}

void sub_1A7308804(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v100 = a2;
  id v98 = a1;
  uint64_t v97 = a3;
  uint64_t v4 = sub_1A7573790();
  uint64_t v104 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v103 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = v3;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v6 = sub_1A7571820();
  id v7 = v3;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v102 = type metadata accessor for REMStoreObjectsContainer();
  id v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v7;
  v10[3] = v9;
  uint64_t v11 = v10 + 3;
  uint64_t v12 = (uint64_t)v10;
  v10[4] = sub_1A72B0A88(v8);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB705A18);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
  uint64_t v15 = (uint64_t)v103;
  v104 += 16;
  v14(v103, v13, v4);
  uint64_t v109 = v102;
  v106[0] = v12;
  uint64_t v99 = v12;
  swift_retain();
  uint64_t v16 = (void (*)(uint64_t *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v106, v15);
  v16(&v119, 0);
  type metadata accessor for REMRemindersListDataView.AssignedInvocation.Parameters(0);
  sub_1A72F0548(&qword_1E96F16D0, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.AssignedInvocation.Parameters);
  uint64_t v100 = v6;
  uint64_t v17 = v101;
  uint64_t v18 = sub_1A7571800();
  uint64_t v101 = (void *)v19;
  if (v17)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E96F3940);
    id v21 = v17;
    id v22 = v17;
    uint64_t v23 = sub_1A7571E80();
    os_log_type_t v24 = sub_1A7572FD0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v106[0] = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_getErrorValue();
      uint64_t v27 = Error.rem_errorDescription.getter((uint64_t)v118[5]);
      uint64_t v119 = sub_1A72D1730(v27, v28, v106);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v119 = type metadata accessor for REMRemindersListDataView.AssignedInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F16D8);
      uint64_t v29 = sub_1A7572670();
      uint64_t v119 = sub_1A72D1730(v29, v30, v106);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v23, v24, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v26, -1, -1);
      MEMORY[0x1AD0CD330](v25, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v31 = v18;
    id v93 = v14;
    uint64_t v94 = v13;
    uint64_t v95 = v4;
    swift_beginAccess();
    uint64_t v32 = *v11;
    id v33 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    unint64_t v34 = (unint64_t)v101;
    sub_1A72E3408(v31, (unint64_t)v101);
    swift_bridgeObjectRetain();
    v118[0] = objc_msgSend(v33, sel_init);
    uint64_t v35 = type metadata accessor for REMRemindersListDataView.AssignedInvocation();
    v106[0] = v35;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F16D8);
    uint64_t v37 = sub_1A7572670();
    unint64_t v39 = v38;
    uint64_t v96 = &v86;
    MEMORY[0x1F4188790](v37);
    *(&v86 - 6) = (uint64_t)v118;
    *(&v86 - 5) = (uint64_t)&v120;
    *(&v86 - 4) = (uint64_t)v98;
    *(&v86 - 3) = v31;
    *(&v86 - 2) = v34;
    *(&v86 - 1) = v32;
    int v40 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v37, v39, v40, (void (*)(void))sub_1A731590C, (uint64_t)(&v86 - 8));
    id v98 = 0;
    uint64_t v91 = v36;
    id v92 = (id)v35;
    sub_1A72E3460(v31, (unint64_t)v101);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v41 = sub_1A75717E0();
    id v42 = objc_msgSend(v118[0], sel_resultStorages);
    uint64_t v43 = sub_1A75723F0();

    uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v106[0] = v43;
    sub_1A72BEE98((uint64_t)v106, (uint64_t)&v119);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v96 = (uint64_t *)v31;
      uint64_t v44 = v117;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
      uint64_t v45 = v120;
      uint64_t v46 = v102;
      id v47 = (void *)swift_allocObject();
      _OWORD v47[2] = v45;
      v47[3] = v44;
      id v48 = v45;
      v47[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v49 = (uint64_t)v103;
      v93(v103, v94, v95);
      uint64_t v109 = v46;
      v106[0] = (uint64_t)v47;
      swift_retain();
      id v50 = (void (*)(uint64_t *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v106, v49);
      v50(&v119, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F16E0);
      id v51 = v118[0];
      id v52 = objc_msgSend(v118[0], sel_resultData);
      uint64_t v53 = sub_1A7571A20();
      unint64_t v55 = v54;

      sub_1A7317738(&qword_1E96F16E8, &qword_1E96F16E0);
      id v56 = v98;
      sub_1A75717C0();
      id v98 = v56;
      if (!v56)
      {
        sub_1A72E3460(v53, v55);
        uint64_t v87 = v106[0];
        uint64_t v104 = v106[1];
        LODWORD(v103) = v107;
        LODWORD(v102) = v108;
        uint64_t v94 = v41;
        uint64_t v71 = v109;
        uint64_t v88 = v110;
        uint64_t v95 = (uint64_t)v111;
        uint64_t v91 = v112;
        uint64_t v73 = v113;
        uint64_t v72 = v114;
        uint64_t v75 = v115;
        uint64_t v74 = v116;
        id v93 = (void (*)(char *, uint64_t, uint64_t))v111;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v76 = v72;
        swift_bridgeObjectRetain();
        uint64_t v89 = v75;
        swift_bridgeObjectRetain();
        uint64_t v90 = v74;
        swift_bridgeObjectRetain();
        id v77 = v51;
        uint64_t v78 = v87;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v79 = v88;
        swift_bridgeObjectRetain();
        id v92 = objc_msgSend(v77, sel_latestFetchResultToken);
        sub_1A72E3460((uint64_t)v96, (unint64_t)v101);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v80 = v73;
        swift_bridgeObjectRelease();
        uint64_t v81 = v91;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        uint64_t v82 = v97;
        uint64_t v83 = v104;
        *uint64_t v97 = v78;
        v82[1] = v83;
        *((unsigned char *)v82 + 16) = (_BYTE)v103;
        *((unsigned char *)v82 + 17) = v102;
        uint64_t v82[3] = v71;
        void v82[4] = v79;
        v82[5] = v95;
        v82[6] = v81;
        v82[7] = v80;
        id v82[8] = v76;
        uint64_t v84 = v90;
        v82[9] = v89;
        v82[10] = v84;
        v82[11] = (uint64_t)v92;
        return;
      }
      uint64_t v104 = (uint64_t)v47;
      sub_1A72E3460(v53, v55);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_1A7571E90();
      __swift_project_value_buffer(v57, (uint64_t)qword_1E96F3940);
      id v58 = v98;
      id v59 = v98;
      id v60 = v58;
      id v61 = sub_1A7571E80();
      os_log_type_t v62 = sub_1A7572FD0();
      BOOL v63 = os_log_type_enabled(v61, v62);
      uint64_t v64 = (uint64_t)v92;
      if (v63)
      {
        uint64_t v65 = swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        v106[0] = v66;
        *(_DWORD *)uint64_t v65 = 136315394;
        swift_getErrorValue();
        uint64_t v67 = Error.rem_errorDescription.getter(v105);
        uint64_t v119 = sub_1A72D1730(v67, v68, v106);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v65 + 12) = 2080;
        uint64_t v119 = v64;
        uint64_t v69 = sub_1A7572670();
        uint64_t v119 = sub_1A72D1730(v69, v70, v106);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v61, v62, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v65, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v66, -1, -1);
        MEMORY[0x1AD0CD330](v65, -1, -1);
      }
      else
      {
      }
      uint64_t v85 = (uint64_t)v96;
      swift_willThrow();
      sub_1A72E3460(v85, (unint64_t)v101);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)v106, (uint64_t)&v119);
      sub_1A7447A74((uint64_t)&v119, 0, 0);
      sub_1A7315924((uint64_t)&v119);
      swift_willThrow();
      sub_1A72E3460(v31, (unint64_t)v101);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
    }
  }
}

void sub_1A73095A4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X8>)
{
}

void sub_1A730964C(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
}

void sub_1A73096E0(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
}

void sub_1A7309774(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v89 = a3;
  unint64_t v90 = a1;
  uint64_t v4 = sub_1A7573790();
  uint64_t v120 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v95 = (char *)v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = v3;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v6 = sub_1A7571820();
  id v7 = v3;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v94 = type metadata accessor for REMStoreObjectsContainer();
  id v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v7;
  v10[3] = v9;
  uint64_t v11 = v10 + 3;
  uint64_t v12 = v10;
  v10[4] = sub_1A72B0A88(v8);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB705A18);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 16);
  uint64_t v15 = (uint64_t)v95;
  v120 += 16;
  v14(v95, v13, v4);
  *((void *)&v108 + 1) = v94;
  *(void *)&long long v107 = v12;
  uint64_t v91 = v12;
  swift_retain();
  uint64_t v16 = (void (*)(long long *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v107, v15);
  v16(&v96, 0);
  type metadata accessor for REMRemindersListDataView.TaggedInvocation.Parameters(0);
  sub_1A72F0548(&qword_1E96F1680, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.TaggedInvocation.Parameters);
  uint64_t v17 = v93;
  uint64_t v92 = v6;
  uint64_t v18 = sub_1A7571800();
  if (v17)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E96F3940);
    id v21 = v17;
    id v22 = v17;
    uint64_t v23 = sub_1A7571E80();
    os_log_type_t v24 = sub_1A7572FD0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(void *)&long long v107 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_getErrorValue();
      uint64_t v27 = Error.rem_errorDescription.getter((uint64_t)v118[5]);
      *(void *)&long long v96 = sub_1A72D1730(v27, v28, (uint64_t *)&v107);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v25 + 12) = 2080;
      *(void *)&long long v96 = type metadata accessor for REMRemindersListDataView.TaggedInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1688);
      uint64_t v29 = sub_1A7572670();
      *(void *)&long long v96 = sub_1A72D1730(v29, v30, (uint64_t *)&v107);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v23, v24, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v26, -1, -1);
      MEMORY[0x1AD0CD330](v25, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v31 = v18;
    uint64_t v85 = v14;
    uint64_t v86 = v13;
    uint64_t v87 = v4;
    unint64_t v32 = v19;
    swift_beginAccess();
    uint64_t v33 = *v11;
    id v34 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v31, v32);
    swift_bridgeObjectRetain();
    v118[0] = objc_msgSend(v34, sel_init);
    uint64_t v35 = type metadata accessor for REMRemindersListDataView.TaggedInvocation();
    id v93 = 0;
    uint64_t v36 = v35;
    *(void *)&long long v107 = v35;
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1688);
    uint64_t v38 = sub_1A7572670();
    unint64_t v40 = v39;
    uint64_t v88 = v83;
    MEMORY[0x1F4188790](v38);
    v83[-6] = v118;
    v83[-5] = &v119;
    v83[-4] = v90;
    v83[-3] = v31;
    unint64_t v90 = v32;
    v83[-2] = v32;
    v83[-1] = v33;
    int v41 = sub_1A7572FB0();
    id v42 = v93;
    measureTimeElapsed(_:level:block:)(v38, v40, v41, (void (*)(void))sub_1A731590C, (uint64_t)&v83[-8]);
    id v93 = v42;
    if (v42)
    {
      uint64_t v43 = v31;
      uint64_t v44 = v31;
      unint64_t v45 = v90;
      sub_1A72E3460(v43, v90);
      sub_1A72E3460(v44, v45);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

      return;
    }
    v83[1] = v37;
    uint64_t v84 = v36;
    sub_1A72E3460(v31, v90);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v46 = v31;
    uint64_t v47 = sub_1A75717E0();
    id v48 = objc_msgSend(v118[0], sel_resultStorages);
    uint64_t v49 = sub_1A75723F0();

    *((void *)&v108 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    *(void *)&long long v107 = v49;
    sub_1A72BEE98((uint64_t)&v107, (uint64_t)&v96);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v88 = (void *)v46;
      uint64_t v50 = v117;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
      id v51 = v119;
      uint64_t v52 = v94;
      uint64_t v53 = (void *)swift_allocObject();
      v53[2] = v51;
      v53[3] = v50;
      id v54 = v51;
      v53[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v55 = (uint64_t)v95;
      v85(v95, v86, v87);
      *((void *)&v108 + 1) = v52;
      *(void *)&long long v107 = v53;
      swift_retain();
      id v56 = (void (*)(long long *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)&v107, v55);
      v56(&v96, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1690);
      uint64_t v120 = v47;
      id v57 = v118[0];
      id v58 = objc_msgSend(v118[0], sel_resultData);
      uint64_t v59 = sub_1A7571A20();
      unint64_t v61 = v60;

      sub_1A7317738(&qword_1E96F1698, &qword_1E96F1690);
      os_log_type_t v62 = v93;
      sub_1A75717C0();
      if (!v62)
      {
        sub_1A72E3460(v59, v61);
        long long v102 = v113;
        long long v103 = v114;
        long long v104 = v115;
        uint64_t v105 = v116;
        long long v98 = v109;
        long long v99 = v110;
        long long v100 = v111;
        long long v101 = v112;
        long long v96 = v107;
        long long v97 = v108;
        sub_1A7315B28((uint64_t)&v96);
        id v74 = v57;
        id v75 = objc_msgSend(v74, sel_latestFetchResultToken);
        sub_1A72E3460((uint64_t)v88, v90);
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        sub_1A7315C50((uint64_t)&v96);

        long long v76 = v103;
        uint64_t v77 = v89;
        *(_OWORD *)(v89 + 96) = v102;
        *(_OWORD *)(v77 + 112) = v76;
        *(_OWORD *)(v77 + 128) = v104;
        uint64_t v78 = v105;
        long long v79 = v99;
        *(_OWORD *)(v77 + 32) = v98;
        *(_OWORD *)(v77 + 48) = v79;
        long long v80 = v101;
        *(_OWORD *)(v77 + 64) = v100;
        *(_OWORD *)(v77 + 80) = v80;
        long long v81 = v97;
        *(_OWORD *)uint64_t v77 = v96;
        *(_OWORD *)(v77 + 16) = v81;
        *(void *)(v77 + 144) = v78;
        *(void *)(v77 + 152) = v75;
        return;
      }
      sub_1A72E3460(v59, v61);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v63 = sub_1A7571E90();
      __swift_project_value_buffer(v63, (uint64_t)qword_1E96F3940);
      id v64 = v62;
      id v65 = v62;
      uint64_t v66 = sub_1A7571E80();
      os_log_type_t v67 = sub_1A7572FD0();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = swift_slowAlloc();
        uint64_t v69 = swift_slowAlloc();
        *(void *)&long long v107 = v69;
        *(_DWORD *)uint64_t v68 = 136315394;
        swift_getErrorValue();
        uint64_t v70 = Error.rem_errorDescription.getter(v106);
        *(void *)&long long v96 = sub_1A72D1730(v70, v71, (uint64_t *)&v107);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v68 + 12) = 2080;
        *(void *)&long long v96 = v84;
        uint64_t v72 = sub_1A7572670();
        *(void *)&long long v96 = sub_1A72D1730(v72, v73, (uint64_t *)&v107);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v66, v67, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v69, -1, -1);
        MEMORY[0x1AD0CD330](v68, -1, -1);
      }
      else
      {
      }
      unint64_t v82 = v90;
      swift_willThrow();
      sub_1A72E3460((uint64_t)v88, v82);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)&v107, (uint64_t)&v96);
      sub_1A7447A74((uint64_t)&v96, 0, 0);
      sub_1A7315924((uint64_t)&v96);
      swift_willThrow();
      sub_1A72E3460(v46, v90);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
    }
  }
}

void sub_1A730A2B0(void (*a1)(uint64_t, id, uint64_t)@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1A730A314(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v81 = a1;
  long long v79 = a3;
  uint64_t v6 = sub_1A7573790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v85 = (char *)v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93[3] = a2;
  v93[0] = v4;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v9 = sub_1A7571820();
  id v10 = v4;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  unint64_t v12 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v84 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v10;
  v13[3] = v12;
  uint64_t v14 = v13 + 3;
  uint64_t v15 = (uint64_t)v13;
  v13[4] = sub_1A72B0A88(v11);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB705A18);
  uint64_t v17 = v6;
  uint64_t v18 = v16;
  id v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v19 = v7 + 16;
  uint64_t v20 = v21;
  uint64_t v22 = (uint64_t)v85;
  uint64_t v80 = v17;
  ((void (*)(char *, uint64_t))v21)(v85, v16);
  uint64_t v87 = v84;
  v86[0] = v15;
  uint64_t v82 = v15;
  swift_retain();
  uint64_t v23 = (void (*)(uint64_t *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v86, v22);
  v23(&v92, 0);
  sub_1A7315A80();
  os_log_type_t v24 = v83;
  uint64_t v25 = sub_1A7571800();
  if (v24)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1A7571E90();
    __swift_project_value_buffer(v27, (uint64_t)qword_1E96F3940);
    id v28 = v24;
    id v29 = v24;
    unint64_t v30 = sub_1A7571E80();
    os_log_type_t v31 = sub_1A7572FD0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v86[0] = v33;
      *(_DWORD *)uint64_t v32 = 136315394;
      swift_getErrorValue();
      uint64_t v34 = Error.rem_errorDescription.getter((uint64_t)v91[5]);
      uint64_t v92 = sub_1A72D1730(v34, v35, v86);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v92 = type metadata accessor for REMRemindersListDataView.DEBUG_AssignedCountInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1658);
      uint64_t v36 = sub_1A7572670();
      uint64_t v92 = sub_1A72D1730(v36, v37, v86);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v30, v31, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v33, -1, -1);
      MEMORY[0x1AD0CD330](v32, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v38 = v25;
    unint64_t v39 = v26;
    id v75 = v20;
    uint64_t v76 = v18;
    uint64_t v77 = v19;
    uint64_t v78 = v9;
    swift_beginAccess();
    uint64_t v40 = *v14;
    id v41 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v38, v39);
    swift_bridgeObjectRetain();
    v91[0] = objc_msgSend(v41, sel_init);
    uint64_t v42 = type metadata accessor for REMRemindersListDataView.DEBUG_AssignedCountInvocation();
    v86[0] = v42;
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1658);
    uint64_t v44 = v38;
    uint64_t v45 = sub_1A7572670();
    unint64_t v47 = v46;
    uint64_t v83 = v72;
    MEMORY[0x1F4188790](v45);
    v72[-6] = v91;
    v72[-5] = v93;
    v72[-4] = v81;
    v72[-3] = v38;
    v72[-2] = v39;
    v72[-1] = v40;
    int v48 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v45, v47, v48, (void (*)(void))sub_1A731590C, (uint64_t)&v72[-8]);
    uint64_t v74 = v43;
    uint64_t v81 = v42;
    sub_1A72E3460(v38, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v49 = sub_1A75717E0();
    id v50 = objc_msgSend(v91[0], sel_resultStorages);
    uint64_t v51 = sub_1A75723F0();

    uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v86[0] = v51;
    sub_1A72BEE98((uint64_t)v86, (uint64_t)&v92);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v73 = v44;
      uint64_t v83 = (void *)v39;
      uint64_t v52 = v90;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
      uint64_t v53 = (void *)v93[0];
      uint64_t v54 = v84;
      uint64_t v55 = (void *)swift_allocObject();
      v55[2] = v53;
      v55[3] = v52;
      id v56 = v53;
      v55[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v57 = (uint64_t)v85;
      v75(v85, v76, v80);
      uint64_t v87 = v54;
      v86[0] = (uint64_t)v55;
      swift_retain();
      id v58 = (void (*)(uint64_t *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v86, v57);
      v58(&v92, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1660);
      id v59 = v91[0];
      id v60 = objc_msgSend(v91[0], sel_resultData);
      uint64_t v61 = sub_1A7571A20();
      unint64_t v63 = v62;

      sub_1A7317738(&qword_1E96F1668, &qword_1E96F1660);
      sub_1A75717C0();
      v72[1] = v49;
      sub_1A72E3460(v61, v63);
      uint64_t v64 = v86[1];
      uint64_t v85 = (char *)v86[0];
      uint64_t v65 = v86[2];
      uint64_t v66 = v87;
      uint64_t v67 = v88;
      uint64_t v68 = v89;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v69 = v59;
      id v70 = objc_msgSend(v69, sel_latestFetchResultToken);
      sub_1A72E3460(v73, (unint64_t)v83);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      unint64_t v71 = v79;
      *long long v79 = v85;
      v71[1] = v64;
      v71[2] = v65;
      v71[3] = v66;
      v71[4] = v67;
      v71[5] = v68;
      v71[6] = v70;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v86, (uint64_t)&v92);
      sub_1A7447A74((uint64_t)&v92, 0, 0);
      sub_1A7315924((uint64_t)&v92);
      swift_willThrow();
      sub_1A72E3460(v44, v39);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
    }
  }
}

void sub_1A730AF2C(void (*a1)(uint64_t, id, uint64_t)@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1A730AF90(void (*a1)(uint64_t, id, uint64_t)@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t *a5@<X4>, void (*a6)(void)@<X5>, uint64_t *a7@<X8>)
{
  long long v99 = a6;
  long long v101 = a5;
  long long v100 = a4;
  uint64_t v104 = a3;
  long long v103 = a2;
  long long v98 = a1;
  long long v97 = a7;
  uint64_t v8 = sub_1A7573790();
  uint64_t v106 = *(void **)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = v7;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v11 = sub_1A7571820();
  id v12 = v7;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  unint64_t v14 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v15 = type metadata accessor for REMStoreObjectsContainer();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v12;
  uint64_t v17 = (uint64_t)v16;
  void v16[3] = v14;
  uint64_t v18 = (void (**)(uint64_t, id, uint64_t))(v16 + 3);
  v16[4] = sub_1A72B0A88(v13);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB705A18);
  uint64_t v20 = (void (*)(char *, uint64_t, uint64_t))v106[2];
  v106 += 2;
  v20(v10, v19, v8);
  uint64_t v109 = v15;
  v108[0] = v17;
  uint64_t v102 = v17;
  swift_retain();
  id v21 = (uint64_t (*)(uint64_t *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v108, (uint64_t)v10);
  uint64_t v22 = v21(&v119, 0);
  v103(v22);
  uint64_t v104 = v11;
  uint64_t v23 = v105;
  uint64_t v24 = sub_1A7571800();
  uint64_t v105 = (void *)v25;
  if (v23)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1A7571E90();
    __swift_project_value_buffer(v26, (uint64_t)qword_1E96F3940);
    id v27 = v23;
    id v28 = v23;
    id v29 = sub_1A7571E80();
    os_log_type_t v30 = sub_1A7572FD0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      v108[0] = v32;
      *(_DWORD *)uint64_t v31 = 136315394;
      swift_getErrorValue();
      uint64_t v33 = Error.rem_errorDescription.getter((uint64_t)v118[5]);
      uint64_t v119 = sub_1A72D1730(v33, v34, v108);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v31 + 12) = 2080;
      uint64_t v119 = v100(0);
      __swift_instantiateConcreteTypeFromMangledName(v101);
      uint64_t v35 = sub_1A7572670();
      uint64_t v119 = sub_1A72D1730(v35, v36, v108);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v29, v30, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v32, -1, -1);
      MEMORY[0x1AD0CD330](v31, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v37 = v24;
    uint64_t v92 = (void (*)(uint64_t, id, uint64_t))v20;
    id v93 = (id)v19;
    uint64_t v94 = v15;
    uint64_t v95 = (uint64_t)v10;
    uint64_t v96 = v8;
    swift_beginAccess();
    uint64_t v38 = *v18;
    id v39 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    uint64_t v40 = (uint64_t *)v37;
    unint64_t v41 = (unint64_t)v105;
    sub_1A72E3408(v37, (unint64_t)v105);
    swift_bridgeObjectRetain();
    v118[0] = objc_msgSend(v39, sel_init);
    uint64_t v42 = v100(0);
    v108[0] = v42;
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(v101);
    uint64_t v44 = sub_1A7572670();
    unint64_t v46 = v45;
    long long v101 = (uint64_t *)&v92;
    MEMORY[0x1F4188790](v44);
    *(&v92 - 6) = (void (*)(uint64_t, id, uint64_t))v118;
    *(&v92 - 5) = (void (*)(uint64_t, id, uint64_t))&v120;
    *(&v92 - 4) = v98;
    *(&v92 - 3) = (void (*)(uint64_t, id, uint64_t))v37;
    *(&v92 - 2) = (void (*)(uint64_t, id, uint64_t))v41;
    *(&v92 - 1) = v38;
    int v47 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v44, v46, v47, v99, (uint64_t)(&v92 - 8));
    long long v103 = 0;
    long long v100 = (uint64_t (*)(void))v43;
    sub_1A72E3460(v37, (unint64_t)v105);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v48 = sub_1A75717E0();
    id v49 = objc_msgSend(v118[0], sel_resultStorages);
    uint64_t v50 = sub_1A75723F0();

    uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v108[0] = v50;
    sub_1A72BEE98((uint64_t)v108, (uint64_t)&v119);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      long long v101 = v40;
      uint64_t v51 = v117;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
      uint64_t v52 = v120;
      uint64_t v53 = v94;
      uint64_t v54 = (void *)swift_allocObject();
      v54[2] = v52;
      void v54[3] = v51;
      id v55 = v52;
      v54[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v56 = v95;
      v92(v95, v93, v96);
      uint64_t v109 = v53;
      v108[0] = (uint64_t)v54;
      uint64_t v106 = v54;
      swift_retain();
      uint64_t v57 = (void (*)(uint64_t *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v108, v56);
      v57(&v119, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700D38);
      id v58 = v118[0];
      id v59 = objc_msgSend(v118[0], sel_resultData);
      id v60 = (void (*)(void))v48;
      uint64_t v61 = sub_1A7571A20();
      unint64_t v63 = v62;

      sub_1A7317738(&qword_1EB700D30, &qword_1EB700D38);
      uint64_t v64 = v103;
      sub_1A75717C0();
      long long v103 = v64;
      if (!v64)
      {
        sub_1A72E3460(v61, v63);
        uint64_t v95 = v108[0];
        long long v100 = (uint64_t (*)(void))v108[1];
        long long v99 = (void (*)(void))v108[2];
        LODWORD(v98) = v109;
        LODWORD(v96) = BYTE1(v109);
        uint64_t v77 = v111;
        uint64_t v94 = v110;
        uint64_t v78 = v112;
        uint64_t v79 = v113;
        uint64_t v80 = v114;
        uint64_t v81 = v115;
        uint64_t v82 = v116;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v92 = v82;
        swift_bridgeObjectRetain();
        id v83 = v58;
        id v93 = objc_msgSend(v83, sel_latestFetchResultToken);
        sub_1A72E3460((uint64_t)v101, (unint64_t)v105);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v84 = v79;
        swift_bridgeObjectRelease();
        uint64_t v85 = v78;
        swift_bridgeObjectRelease();
        uint64_t v86 = v77;
        swift_bridgeObjectRelease();
        uint64_t v87 = v94;
        swift_bridgeObjectRelease();
        uint64_t v88 = v95;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        uint64_t v89 = v97;
        uint64_t v90 = v100;
        *long long v97 = v88;
        v89[1] = (uint64_t)v90;
        uint64_t v89[2] = (uint64_t)v99;
        *((unsigned char *)v89 + 24) = (_BYTE)v98;
        *((unsigned char *)v89 + 25) = v96;
        v89[4] = v87;
        v89[5] = v86;
        id v89[6] = v85;
        v89[7] = v84;
        v89[8] = v80;
        v89[9] = v81;
        uint64_t v91 = (uint64_t)v93;
        v89[10] = (uint64_t)v92;
        v89[11] = v91;
        return;
      }
      long long v99 = v60;
      sub_1A72E3460(v61, v63);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v65 = sub_1A7571E90();
      __swift_project_value_buffer(v65, (uint64_t)qword_1E96F3940);
      uint64_t v66 = v103;
      uint64_t v67 = v103;
      uint64_t v68 = v66;
      id v69 = sub_1A7571E80();
      os_log_type_t v70 = sub_1A7572FD0();
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v71 = swift_slowAlloc();
        uint64_t v72 = swift_slowAlloc();
        v108[0] = v72;
        *(_DWORD *)uint64_t v71 = 136315394;
        swift_getErrorValue();
        uint64_t v73 = Error.rem_errorDescription.getter(v107);
        uint64_t v119 = sub_1A72D1730(v73, v74, v108);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v71 + 12) = 2080;
        uint64_t v119 = v42;
        uint64_t v75 = sub_1A7572670();
        uint64_t v119 = sub_1A72D1730(v75, v76, v108);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v69, v70, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v71, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v72, -1, -1);
        MEMORY[0x1AD0CD330](v71, -1, -1);
      }
      else
      {
      }
      swift_willThrow();
      sub_1A72E3460((uint64_t)v101, (unint64_t)v105);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)v108, (uint64_t)&v119);
      sub_1A7447A74((uint64_t)&v119, 0, 0);
      sub_1A7315924((uint64_t)&v119);
      swift_willThrow();
      sub_1A72E3460((uint64_t)v40, (unint64_t)v105);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
    }
  }
}

void sub_1A730BCCC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X8>)
{
}

void sub_1A730BD74(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v104 = a2;
  id v102 = a1;
  long long v101 = a3;
  uint64_t v4 = sub_1A7573790();
  uint64_t v108 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v107 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v124 = v3;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v6 = sub_1A7571820();
  id v7 = v3;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v106 = type metadata accessor for REMStoreObjectsContainer();
  id v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v7;
  v10[3] = v9;
  uint64_t v11 = v10 + 3;
  uint64_t v12 = (uint64_t)v10;
  v10[4] = sub_1A72B0A88(v8);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB705A18);
  unint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 16);
  uint64_t v15 = (uint64_t)v107;
  v108 += 16;
  v14(v107, v13, v4);
  uint64_t v113 = v106;
  v110[0] = v12;
  uint64_t v103 = v12;
  swift_retain();
  uint64_t v16 = (void (*)(uint64_t *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v110, v15);
  v16(&v123, 0);
  type metadata accessor for REMRemindersListDataView.GroupSectionsInvocation.Parameters(0);
  sub_1A72F0548(&qword_1E96F1620, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.GroupSectionsInvocation.Parameters);
  uint64_t v104 = v6;
  uint64_t v17 = v105;
  uint64_t v18 = sub_1A7571800();
  uint64_t v105 = (void *)v19;
  if (v17)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E96F3940);
    id v21 = v17;
    id v22 = v17;
    uint64_t v23 = sub_1A7571E80();
    os_log_type_t v24 = sub_1A7572FD0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v110[0] = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_getErrorValue();
      uint64_t v27 = Error.rem_errorDescription.getter((uint64_t)v122[5]);
      uint64_t v123 = sub_1A72D1730(v27, v28, v110);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v123 = type metadata accessor for REMRemindersListDataView.GroupSectionsInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1628);
      uint64_t v29 = sub_1A7572670();
      uint64_t v123 = sub_1A72D1730(v29, v30, v110);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v23, v24, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v26, -1, -1);
      MEMORY[0x1AD0CD330](v25, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v31 = v18;
    long long v97 = v14;
    uint64_t v98 = v13;
    uint64_t v99 = v4;
    swift_beginAccess();
    uint64_t v32 = *v11;
    id v33 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    unint64_t v34 = (unint64_t)v105;
    sub_1A72E3408(v31, (unint64_t)v105);
    swift_bridgeObjectRetain();
    v122[0] = objc_msgSend(v33, sel_init);
    uint64_t v35 = type metadata accessor for REMRemindersListDataView.GroupSectionsInvocation();
    v110[0] = v35;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1628);
    uint64_t v37 = sub_1A7572670();
    unint64_t v39 = v38;
    long long v100 = &v92;
    MEMORY[0x1F4188790](v37);
    *(&v92 - 6) = (uint64_t)v122;
    *(&v92 - 5) = (uint64_t)&v124;
    *(&v92 - 4) = (uint64_t)v102;
    *(&v92 - 3) = v31;
    *(&v92 - 2) = v34;
    *(&v92 - 1) = v32;
    int v40 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v37, v39, v40, (void (*)(void))sub_1A731590C, (uint64_t)(&v92 - 8));
    id v102 = 0;
    uint64_t v95 = v36;
    id v96 = (id)v35;
    sub_1A72E3460(v31, (unint64_t)v105);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v41 = sub_1A75717E0();
    id v42 = objc_msgSend(v122[0], sel_resultStorages);
    uint64_t v43 = sub_1A75723F0();

    uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v110[0] = v43;
    sub_1A72BEE98((uint64_t)v110, (uint64_t)&v123);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      long long v100 = (uint64_t *)v31;
      uint64_t v44 = v121;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
      unint64_t v45 = v124;
      uint64_t v46 = v106;
      int v47 = (void *)swift_allocObject();
      _OWORD v47[2] = v45;
      v47[3] = v44;
      id v48 = v45;
      v47[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v49 = (uint64_t)v107;
      v97(v107, v98, v99);
      uint64_t v113 = v46;
      v110[0] = (uint64_t)v47;
      swift_retain();
      uint64_t v50 = (void (*)(uint64_t *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v110, v49);
      v50(&v123, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1630);
      id v51 = v122[0];
      id v52 = objc_msgSend(v122[0], sel_resultData);
      uint64_t v53 = sub_1A7571A20();
      unint64_t v55 = v54;

      sub_1A7317738(&qword_1E96F1638, &qword_1E96F1630);
      uint64_t v56 = v41;
      id v57 = v102;
      sub_1A75717C0();
      id v102 = v57;
      if (!v57)
      {
        sub_1A72E3460(v53, v55);
        uint64_t v98 = v110[0];
        uint64_t v108 = v110[1];
        LODWORD(v107) = v111;
        LODWORD(v106) = v112;
        long long v97 = (void (*)(char *, uint64_t, uint64_t))v113;
        uint64_t v95 = v114;
        uint64_t v72 = v115;
        uint64_t v73 = v116;
        uint64_t v99 = v56;
        uint64_t v75 = v117;
        uint64_t v74 = v118;
        uint64_t v76 = v119;
        uint64_t v77 = v120;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v78 = v72;
        uint64_t v79 = v73;
        swift_bridgeObjectRetain();
        uint64_t v80 = v75;
        swift_bridgeObjectRetain();
        uint64_t v81 = v74;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v94 = v77;
        swift_bridgeObjectRetain();
        id v93 = v51;
        id v96 = objc_msgSend(v93, sel_latestFetchResultToken);
        sub_1A72E3460((uint64_t)v100, (unint64_t)v105);
        swift_bridgeObjectRelease();
        uint64_t v82 = v76;
        swift_bridgeObjectRelease();
        uint64_t v83 = v81;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v84 = v95;
        swift_bridgeObjectRelease();
        uint64_t v85 = v97;
        swift_bridgeObjectRelease();
        uint64_t v86 = v98;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        id v87 = v93;

        swift_release();
        swift_release();
        uint64_t v88 = v101;
        uint64_t v89 = v108;
        uint64_t *v101 = v86;
        v88[1] = v89;
        *((unsigned char *)v88 + 16) = (_BYTE)v107;
        *((unsigned char *)v88 + 17) = v106;
        void v88[3] = (uint64_t)v85;
        v88[4] = v84;
        v88[5] = (uint64_t)v78;
        v88[6] = v79;
        v88[7] = v80;
        v88[8] = v83;
        uint64_t v90 = v94;
        v88[9] = v82;
        v88[10] = v90;
        v88[11] = (uint64_t)v96;
        return;
      }
      uint64_t v108 = (uint64_t)v47;
      sub_1A72E3460(v53, v55);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_1A7571E90();
      __swift_project_value_buffer(v58, (uint64_t)qword_1E96F3940);
      id v59 = v102;
      id v60 = v102;
      id v61 = v59;
      unint64_t v62 = sub_1A7571E80();
      os_log_type_t v63 = sub_1A7572FD0();
      BOOL v64 = os_log_type_enabled(v62, v63);
      uint64_t v65 = (uint64_t)v96;
      if (v64)
      {
        uint64_t v66 = swift_slowAlloc();
        uint64_t v67 = swift_slowAlloc();
        v110[0] = v67;
        *(_DWORD *)uint64_t v66 = 136315394;
        swift_getErrorValue();
        uint64_t v68 = Error.rem_errorDescription.getter(v109);
        uint64_t v123 = sub_1A72D1730(v68, v69, v110);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v66 + 12) = 2080;
        uint64_t v123 = v65;
        uint64_t v70 = sub_1A7572670();
        uint64_t v123 = sub_1A72D1730(v70, v71, v110);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v62, v63, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v66, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v67, -1, -1);
        MEMORY[0x1AD0CD330](v66, -1, -1);
      }
      else
      {
      }
      uint64_t v91 = (uint64_t)v100;
      swift_willThrow();
      sub_1A72E3460(v91, (unint64_t)v105);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)v110, (uint64_t)&v123);
      sub_1A7447A74((uint64_t)&v123, 0, 0);
      sub_1A7315924((uint64_t)&v123);
      swift_willThrow();
      sub_1A72E3460(v31, (unint64_t)v105);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
    }
  }
}

void sub_1A730CAF0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X8>)
{
}

void sub_1A730CB98(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, unint64_t *a4@<X3>, void (*a5)(uint64_t)@<X4>, unint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t **a9@<X8>, void (*a10)(void), uint64_t *a11, unint64_t *a12)
{
  uint64_t v103 = a8;
  id v102 = a7;
  uint64_t v109 = (uint64_t *)a6;
  uint64_t v107 = a5;
  uint64_t v106 = a4;
  uint64_t v105 = a3;
  uint64_t v108 = a2;
  uint64_t v101 = a1;
  long long v100 = a9;
  uint64_t v13 = (unint64_t *)sub_1A7573790();
  uint64_t v111 = *(v13 - 1);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (void (*)(uint64_t))((char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v126 = v12;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v16 = sub_1A7571820();
  id v17 = v12;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  unint64_t v19 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v20 = type metadata accessor for REMStoreObjectsContainer();
  id v21 = (void *)swift_allocObject();
  v21[2] = v17;
  uint64_t v22 = (uint64_t)v21;
  v21[3] = v19;
  uint64_t v23 = v21 + 3;
  v21[4] = sub_1A72B0A88(v18);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v24 = __swift_project_value_buffer((uint64_t)v13, (uint64_t)qword_1EB705A18);
  uint64_t v25 = *(uint64_t **)(v111 + 16);
  v111 += 16;
  ((void (*)(void (*)(uint64_t), uint64_t, unint64_t *))v25)(v15, v24, v13);
  uint64_t v116 = (uint64_t *)v20;
  v113[0] = v22;
  uint64_t v104 = v22;
  swift_retain();
  uint64_t v26 = (void (*)(void, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v113, (uint64_t)v15);
  v26(&v125, 0);
  ((void (*)(void))v105)(0);
  sub_1A72F0548(v106, v107);
  uint64_t v27 = v110;
  uint64_t v28 = sub_1A7571800();
  if (v27)
  {
    uint64_t v110 = v27;
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1A7571E90();
    __swift_project_value_buffer(v30, (uint64_t)qword_1E96F3940);
    uint64_t v31 = v110;
    uint64_t v32 = v110;
    id v33 = v31;
    unint64_t v34 = sub_1A7571E80();
    os_log_type_t v35 = sub_1A7572FD0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      v113[0] = v37;
      *(_DWORD *)uint64_t v36 = 136315394;
      swift_getErrorValue();
      uint64_t v38 = Error.rem_errorDescription.getter((uint64_t)v124[5]);
      uint64_t v125 = sub_1A72D1730(v38, v39, v113);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v36 + 12) = 2080;
      uint64_t v125 = ((uint64_t (*)(void))v102)(0);
      __swift_instantiateConcreteTypeFromMangledName(v103);
      uint64_t v40 = sub_1A7572670();
      uint64_t v125 = sub_1A72D1730(v40, v41, v113);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v34, v35, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v37, -1, -1);
      MEMORY[0x1AD0CD330](v36, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    unint64_t v42 = v29;
    uint64_t v98 = v25;
    uint64_t v99 = v24;
    uint64_t v105 = (uint64_t *)v20;
    uint64_t v106 = v13;
    uint64_t v107 = v15;
    uint64_t v108 = v16;
    uint64_t v110 = a10;
    uint64_t v43 = v28;
    swift_beginAccess();
    uint64_t v44 = *v23;
    id v45 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v43, v42);
    swift_bridgeObjectRetain();
    v124[0] = objc_msgSend(v45, sel_init);
    uint64_t v46 = (uint64_t *)((uint64_t (*)(void))v102)(0);
    v113[0] = (uint64_t)v46;
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(v103);
    uint64_t v48 = sub_1A7572670();
    unint64_t v50 = v49;
    uint64_t v109 = &v96;
    MEMORY[0x1F4188790](v48);
    *(&v96 - 6) = (uint64_t)v124;
    *(&v96 - 5) = (uint64_t)&v126;
    *(&v96 - 4) = v101;
    *(&v96 - 3) = v43;
    *(&v96 - 2) = v42;
    *(&v96 - 1) = v44;
    int v51 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v48, v50, v51, v110, (uint64_t)(&v96 - 8));
    uint64_t v110 = 0;
    id v102 = (uint64_t *)v47;
    uint64_t v103 = v46;
    sub_1A72E3460(v43, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v52 = objc_msgSend(v124[0], sel_resultStorages);
    uint64_t v53 = sub_1A75723F0();

    uint64_t v116 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v113[0] = v53;
    sub_1A72BEE98((uint64_t)v113, (uint64_t)&v125);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v101 = v43;
      uint64_t v109 = (uint64_t *)v42;
      long long v97 = a12;
      uint64_t v54 = v123;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
      unint64_t v55 = v126;
      uint64_t v56 = v105;
      id v57 = (void *)swift_allocObject();
      v57[2] = v55;
      uint64_t v57[3] = v54;
      id v58 = v55;
      v57[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      id v59 = v107;
      ((void (*)(void (*)(uint64_t), uint64_t, unint64_t *))v98)(v107, v99, v106);
      uint64_t v116 = v56;
      v113[0] = (uint64_t)v57;
      swift_retain();
      id v60 = (void (*)(void, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v113, (uint64_t)v59);
      v60(&v125, 0);
      __swift_instantiateConcreteTypeFromMangledName(a11);
      id v61 = v124[0];
      id v62 = objc_msgSend(v124[0], sel_resultData);
      uint64_t v63 = sub_1A7571A20();
      unint64_t v65 = v64;

      sub_1A7317738(v97, a11);
      uint64_t v66 = v110;
      sub_1A75717C0();
      if (!v66)
      {
        sub_1A72E3460(v63, v65);
        uint64_t v105 = (uint64_t *)v113[0];
        uint64_t v111 = v113[1];
        LODWORD(v107) = v114;
        LODWORD(v106) = v115;
        uint64_t v103 = v116;
        uint64_t v99 = v117;
        uint64_t v80 = v118;
        uint64_t v81 = v119;
        uint64_t v82 = v120;
        uint64_t v83 = v121;
        uint64_t v110 = 0;
        uint64_t v84 = v122;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v85 = v80;
        swift_bridgeObjectRetain();
        uint64_t v86 = v81;
        swift_bridgeObjectRetain();
        long long v97 = v82;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v98 = v84;
        swift_bridgeObjectRetain();
        id v87 = v61;
        id v102 = (uint64_t *)objc_msgSend(v87, sel_latestFetchResultToken);
        sub_1A72E3460(v101, (unint64_t)v109);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v88 = v85;
        swift_bridgeObjectRelease();
        uint64_t v89 = v99;
        swift_bridgeObjectRelease();
        uint64_t v90 = v103;
        swift_bridgeObjectRelease();
        uint64_t v91 = v105;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        uint64_t v92 = v100;
        uint64_t v93 = v111;
        *long long v100 = v91;
        v92[1] = (uint64_t *)v93;
        *((unsigned char *)v92 + 16) = (_BYTE)v107;
        *((unsigned char *)v92 + 17) = (_BYTE)v106;
        _OWORD v92[3] = v90;
        v92[4] = (uint64_t *)v89;
        v92[5] = v88;
        id v92[6] = v86;
        v92[7] = (uint64_t *)v97;
        v92[8] = v83;
        uint64_t v94 = v102;
        v92[9] = v98;
        v92[10] = v94;
        return;
      }
      uint64_t v111 = (uint64_t)v57;
      sub_1A72E3460(v63, v65);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v67 = sub_1A7571E90();
      __swift_project_value_buffer(v67, (uint64_t)qword_1E96F3940);
      uint64_t v68 = v66;
      unint64_t v69 = v66;
      uint64_t v70 = sub_1A7571E80();
      os_log_type_t v71 = sub_1A7572FD0();
      BOOL v72 = os_log_type_enabled(v70, v71);
      uint64_t v73 = v103;
      if (v72)
      {
        uint64_t v74 = swift_slowAlloc();
        uint64_t v75 = swift_slowAlloc();
        v113[0] = v75;
        *(_DWORD *)uint64_t v74 = 136315394;
        swift_getErrorValue();
        uint64_t v76 = Error.rem_errorDescription.getter(v112);
        uint64_t v125 = sub_1A72D1730(v76, v77, v113);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v74 + 12) = 2080;
        uint64_t v125 = (uint64_t)v73;
        uint64_t v78 = sub_1A7572670();
        uint64_t v125 = sub_1A72D1730(v78, v79, v113);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v70, v71, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v74, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v75, -1, -1);
        MEMORY[0x1AD0CD330](v74, -1, -1);
      }
      else
      {
      }
      uint64_t v95 = v101;
      swift_willThrow();
      sub_1A72E3460(v95, (unint64_t)v109);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)v113, (uint64_t)&v125);
      sub_1A7447A74((uint64_t)&v125, 0, 0);
      sub_1A7315924((uint64_t)&v125);
      swift_willThrow();
      sub_1A72E3460(v43, v42);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
    }
  }
}

void sub_1A730D928(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v110 = a2;
  id v108 = a1;
  uint64_t v107 = a3;
  uint64_t v4 = sub_1A7573790();
  uint64_t v114 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v113 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v130 = v3;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v6 = sub_1A7571820();
  id v7 = v3;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v112 = type metadata accessor for REMStoreObjectsContainer();
  id v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v7;
  v10[3] = v9;
  uint64_t v11 = v10 + 3;
  uint64_t v12 = (uint64_t)v10;
  v10[4] = sub_1A72B0A88(v8);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB705A18);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 16);
  uint64_t v15 = (uint64_t)v113;
  v114 += 16;
  v14(v113, v13, v4);
  uint64_t v117 = v112;
  v116[0] = v12;
  uint64_t v109 = v12;
  swift_retain();
  uint64_t v16 = (void (*)(uint64_t *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v116, v15);
  v16(&v129, 0);
  type metadata accessor for REMRemindersListDataView.TodayGroupInvocation.Parameters(0);
  sub_1A72F0548(&qword_1EB700960, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.TodayGroupInvocation.Parameters);
  uint64_t v110 = v6;
  id v17 = v111;
  uint64_t v18 = sub_1A7571800();
  uint64_t v111 = (void *)v19;
  if (v17)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E96F3940);
    id v21 = v17;
    id v22 = v17;
    uint64_t v23 = sub_1A7571E80();
    os_log_type_t v24 = sub_1A7572FD0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v116[0] = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_getErrorValue();
      uint64_t v27 = Error.rem_errorDescription.getter((uint64_t)v128[5]);
      uint64_t v129 = sub_1A72D1730(v27, v28, v116);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v129 = type metadata accessor for REMRemindersListDataView.TodayGroupInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700968);
      uint64_t v29 = sub_1A7572670();
      uint64_t v129 = sub_1A72D1730(v29, v30, v116);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v23, v24, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v26, -1, -1);
      MEMORY[0x1AD0CD330](v25, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v31 = v18;
    uint64_t v103 = v14;
    uint64_t v104 = v13;
    uint64_t v105 = v4;
    swift_beginAccess();
    uint64_t v32 = *v11;
    id v33 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    unint64_t v34 = (unint64_t)v111;
    sub_1A72E3408(v31, (unint64_t)v111);
    swift_bridgeObjectRetain();
    v128[0] = objc_msgSend(v33, sel_init);
    uint64_t v35 = type metadata accessor for REMRemindersListDataView.TodayGroupInvocation();
    v116[0] = v35;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700968);
    uint64_t v37 = sub_1A7572670();
    unint64_t v39 = v38;
    uint64_t v106 = &v92;
    MEMORY[0x1F4188790](v37);
    *(&v92 - 6) = (uint64_t)v128;
    *(&v92 - 5) = (uint64_t)&v130;
    *(&v92 - 4) = (uint64_t)v108;
    *(&v92 - 3) = v31;
    *(&v92 - 2) = v34;
    *(&v92 - 1) = v32;
    int v40 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v37, v39, v40, (void (*)(void))sub_1A731590C, (uint64_t)(&v92 - 8));
    id v108 = 0;
    uint64_t v101 = v36;
    id v102 = (id)v35;
    sub_1A72E3460(v31, (unint64_t)v111);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v41 = sub_1A75717E0();
    id v42 = objc_msgSend(v128[0], sel_resultStorages);
    uint64_t v43 = sub_1A75723F0();

    uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v116[0] = v43;
    sub_1A72BEE98((uint64_t)v116, (uint64_t)&v129);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v106 = (uint64_t *)v31;
      uint64_t v44 = v127;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v116);
      id v45 = v130;
      uint64_t v46 = v112;
      uint64_t v47 = (void *)swift_allocObject();
      _OWORD v47[2] = v45;
      v47[3] = v44;
      id v48 = v45;
      v47[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v49 = (uint64_t)v113;
      v103(v113, v104, v105);
      uint64_t v117 = v46;
      v116[0] = (uint64_t)v47;
      swift_retain();
      unint64_t v50 = (void (*)(uint64_t *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v116, v49);
      v50(&v129, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700998);
      id v51 = v128[0];
      id v52 = objc_msgSend(v128[0], sel_resultData);
      uint64_t v53 = sub_1A7571A20();
      unint64_t v55 = v54;

      sub_1A7317738(&qword_1EB700990, &qword_1EB700998);
      uint64_t v56 = v41;
      id v57 = v108;
      sub_1A75717C0();
      id v108 = v57;
      if (!v57)
      {
        sub_1A72E3460(v53, v55);
        uint64_t v99 = v116[0];
        uint64_t v114 = v116[1];
        uint64_t v113 = (char *)v116[2];
        LODWORD(v112) = v117;
        id v93 = v118;
        uint64_t v94 = v119;
        uint64_t v95 = v120;
        uint64_t v105 = (uint64_t)v121;
        uint64_t v101 = v122;
        uint64_t v72 = v124;
        uint64_t v97 = v123;
        uint64_t v74 = v125;
        uint64_t v73 = v126;
        uint64_t v103 = (void (*)(char *, uint64_t, uint64_t))v121;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v75 = v72;
        swift_bridgeObjectRetain();
        uint64_t v98 = v74;
        swift_bridgeObjectRetain();
        uint64_t v100 = v73;
        swift_bridgeObjectRetain();
        id v76 = v51;
        uint64_t v104 = v56;
        swift_bridgeObjectRetain();
        uint64_t v77 = (uint64_t)v93;
        id v96 = v93;
        uint64_t v78 = v94;
        swift_bridgeObjectRetain();
        uint64_t v79 = v95;
        swift_bridgeObjectRetain();
        id v102 = objc_msgSend(v76, sel_latestFetchResultToken);
        sub_1A72E3460((uint64_t)v106, (unint64_t)v111);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v80 = v75;
        swift_bridgeObjectRelease();
        uint64_t v81 = v97;
        swift_bridgeObjectRelease();
        uint64_t v82 = v101;
        swift_bridgeObjectRelease();

        uint64_t v83 = v79;
        swift_bridgeObjectRelease();
        uint64_t v84 = v78;
        swift_bridgeObjectRelease();

        uint64_t v85 = v99;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        uint64_t v86 = v107;
        uint64_t v87 = v114;
        *uint64_t v107 = v85;
        v86[1] = v87;
        void v86[2] = (uint64_t)v113;
        *((unsigned char *)v86 + 24) = v112;
        void v86[4] = v77;
        v86[5] = v84;
        uint64_t v88 = v105;
        id v86[6] = v83;
        v86[7] = v88;
        v86[8] = v82;
        v86[9] = v81;
        uint64_t v89 = v98;
        v86[10] = v80;
        v86[11] = v89;
        uint64_t v90 = (uint64_t)v102;
        v86[12] = v100;
        v86[13] = v90;
        return;
      }
      uint64_t v114 = (uint64_t)v47;
      sub_1A72E3460(v53, v55);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_1A7571E90();
      __swift_project_value_buffer(v58, (uint64_t)qword_1E96F3940);
      id v59 = v108;
      id v60 = v108;
      id v61 = v59;
      id v62 = sub_1A7571E80();
      os_log_type_t v63 = sub_1A7572FD0();
      BOOL v64 = os_log_type_enabled(v62, v63);
      uint64_t v65 = (uint64_t)v102;
      if (v64)
      {
        uint64_t v66 = swift_slowAlloc();
        uint64_t v67 = swift_slowAlloc();
        v116[0] = v67;
        *(_DWORD *)uint64_t v66 = 136315394;
        swift_getErrorValue();
        uint64_t v68 = Error.rem_errorDescription.getter(v115);
        uint64_t v129 = sub_1A72D1730(v68, v69, v116);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v66 + 12) = 2080;
        uint64_t v129 = v65;
        uint64_t v70 = sub_1A7572670();
        uint64_t v129 = sub_1A72D1730(v70, v71, v116);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v62, v63, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v66, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v67, -1, -1);
        MEMORY[0x1AD0CD330](v66, -1, -1);
      }
      else
      {
      }
      uint64_t v91 = (uint64_t)v106;
      swift_willThrow();
      sub_1A72E3460(v91, (unint64_t)v111);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)v116, (uint64_t)&v129);
      sub_1A7447A74((uint64_t)&v129, 0, 0);
      sub_1A7315924((uint64_t)&v129);
      swift_willThrow();
      sub_1A72E3460(v31, (unint64_t)v111);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v116);
    }
  }
}

void sub_1A730E734(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v68 = a1;
  uint64_t v67 = a2;
  uint64_t v3 = sub_1A7573790();
  uint64_t v73 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v72 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = v2;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v5 = sub_1A7571820();
  id v6 = v2;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  unint64_t v8 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v71 = type metadata accessor for REMStoreObjectsContainer();
  unint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v6;
  uint64_t v9[3] = v8;
  id v10 = v9 + 3;
  uint64_t v11 = (uint64_t)v9;
  v9[4] = sub_1A72B0A88(v7);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v3, (uint64_t)qword_1EB705A18);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
  uint64_t v14 = (uint64_t)v72;
  v73 += 16;
  v13(v72, v12, v3);
  uint64_t v78 = v71;
  v77[0] = v11;
  uint64_t v69 = v11;
  swift_retain();
  uint64_t v15 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v77, v14);
  v15(v76, 0);
  sub_1A7315984();
  uint64_t v16 = v70;
  uint64_t v17 = sub_1A7571800();
  if (v16)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1A7571E90();
    __swift_project_value_buffer(v19, (uint64_t)qword_1E96F3940);
    uint64_t v20 = v16;
    id v21 = v16;
    id v22 = sub_1A7571E80();
    os_log_type_t v23 = sub_1A7572FD0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      v77[0] = v25;
      *(_DWORD *)uint64_t v24 = 136315394;
      swift_getErrorValue();
      uint64_t v26 = Error.rem_errorDescription.getter((uint64_t)v75[5]);
      v76[0] = sub_1A72D1730(v26, v27, v77);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v24 + 12) = 2080;
      v76[0] = type metadata accessor for REMRemindersListDataView.TodaySectionOrderingInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1600);
      uint64_t v28 = sub_1A7572670();
      v76[0] = sub_1A72D1730(v28, v29, v77);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v22, v23, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v25, -1, -1);
      MEMORY[0x1AD0CD330](v24, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v30 = v17;
    unint64_t v31 = v18;
    os_log_type_t v63 = v13;
    uint64_t v64 = v12;
    uint64_t v65 = v3;
    uint64_t v66 = v5;
    swift_beginAccess();
    uint64_t v32 = *v10;
    id v33 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v30, v31);
    swift_bridgeObjectRetain();
    v75[0] = objc_msgSend(v33, sel_init);
    uint64_t v34 = type metadata accessor for REMRemindersListDataView.TodaySectionOrderingInvocation();
    v77[0] = v34;
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1600);
    uint64_t v36 = sub_1A7572670();
    unint64_t v38 = v37;
    uint64_t v70 = &v60;
    MEMORY[0x1F4188790](v36);
    *(&v60 - 6) = (uint64_t)v75;
    *(&v60 - 5) = (uint64_t)&v79;
    *(&v60 - 4) = v68;
    *(&v60 - 3) = v39;
    uint64_t v40 = v39;
    *(&v60 - 2) = v31;
    *(&v60 - 1) = v32;
    int v41 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v36, v38, v41, (void (*)(void))sub_1A731590C, (uint64_t)(&v60 - 8));
    uint64_t v62 = v35;
    uint64_t v68 = v34;
    sub_1A72E3460(v40, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v42 = objc_msgSend(v75[0], sel_resultStorages);
    uint64_t v43 = sub_1A75723F0();

    uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v77[0] = v43;
    sub_1A72BEE98((uint64_t)v77, (uint64_t)v76);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v61 = v40;
      uint64_t v70 = (uint64_t *)v31;
      uint64_t v44 = v74;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
      id v45 = v79;
      uint64_t v46 = v71;
      uint64_t v47 = (void *)swift_allocObject();
      _OWORD v47[2] = v45;
      v47[3] = v44;
      id v48 = v45;
      v47[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v49 = (uint64_t)v72;
      v63(v72, v64, v65);
      uint64_t v78 = v46;
      v77[0] = (uint64_t)v47;
      swift_retain();
      unint64_t v50 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v77, v49);
      v50(v76, 0);
      id v51 = v75[0];
      id v52 = objc_msgSend(v75[0], sel_resultData);
      uint64_t v53 = sub_1A7571A20();
      unint64_t v55 = v54;

      sub_1A73159D8();
      sub_1A75717C0();
      sub_1A72E3460(v53, v55);
      uint64_t v56 = v77[0];
      swift_bridgeObjectRetain();
      id v57 = v51;
      id v58 = objc_msgSend(v57, sel_latestFetchResultToken);
      sub_1A72E3460(v61, (unint64_t)v70);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      id v59 = v67;
      *uint64_t v67 = v56;
      v59[1] = (uint64_t)v58;
    }
    else
    {
      sub_1A72BEE98((uint64_t)v77, (uint64_t)v76);
      sub_1A7447A74((uint64_t)v76, 0, 0);
      sub_1A7315924((uint64_t)v76);
      swift_willThrow();
      sub_1A72E3460(v40, v31);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
    }
  }
}

void sub_1A730F298(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
}

void sub_1A730F32C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v98 = a2;
  id v96 = a1;
  uint64_t v95 = a3;
  uint64_t v4 = sub_1A7573790();
  uint64_t v102 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v101 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = v3;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v6 = sub_1A7571820();
  id v7 = v3;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v100 = type metadata accessor for REMStoreObjectsContainer();
  id v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v7;
  v10[3] = v9;
  uint64_t v11 = v10 + 3;
  uint64_t v12 = (uint64_t)v10;
  v10[4] = sub_1A72B0A88(v8);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB705A18);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 16);
  uint64_t v15 = (uint64_t)v101;
  v102 += 16;
  v14(v101, v13, v4);
  uint64_t v106 = v100;
  v104[0] = v12;
  uint64_t v97 = v12;
  swift_retain();
  uint64_t v16 = (void (*)(uint64_t *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v104, v15);
  v16(&v115, 0);
  type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation.Parameters(0);
  sub_1A72F0548(&qword_1E96F15C8, (void (*)(uint64_t))type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation.Parameters);
  uint64_t v98 = v6;
  uint64_t v17 = v99;
  uint64_t v18 = sub_1A7571800();
  uint64_t v99 = (void *)v19;
  if (v17)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E96F3940);
    id v21 = v17;
    id v22 = v17;
    os_log_type_t v23 = sub_1A7571E80();
    os_log_type_t v24 = sub_1A7572FD0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v104[0] = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_getErrorValue();
      uint64_t v27 = Error.rem_errorDescription.getter((uint64_t)v114[5]);
      uint64_t v115 = sub_1A72D1730(v27, v28, v104);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v115 = type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F15D0);
      uint64_t v29 = sub_1A7572670();
      uint64_t v115 = sub_1A72D1730(v29, v30, v104);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v23, v24, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v26, -1, -1);
      MEMORY[0x1AD0CD330](v25, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v31 = v18;
    uint64_t v91 = v14;
    uint64_t v92 = v13;
    uint64_t v93 = v4;
    swift_beginAccess();
    uint64_t v32 = *v11;
    id v33 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    unint64_t v34 = (unint64_t)v99;
    sub_1A72E3408(v31, (unint64_t)v99);
    swift_bridgeObjectRetain();
    v114[0] = objc_msgSend(v33, sel_init);
    uint64_t v35 = type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation();
    v104[0] = v35;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F15D0);
    uint64_t v37 = sub_1A7572670();
    unint64_t v39 = v38;
    uint64_t v94 = &v89;
    MEMORY[0x1F4188790](v37);
    *(&v89 - 6) = (uint64_t)v114;
    *(&v89 - 5) = (uint64_t)&v116;
    *(&v89 - 4) = (uint64_t)v96;
    *(&v89 - 3) = v31;
    *(&v89 - 2) = v34;
    *(&v89 - 1) = v32;
    int v40 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v37, v39, v40, (void (*)(void))sub_1A731590C, (uint64_t)(&v89 - 8));
    id v96 = 0;
    uint64_t v89 = v36;
    uint64_t v90 = v35;
    sub_1A72E3460(v31, (unint64_t)v99);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v41 = sub_1A75717E0();
    id v42 = objc_msgSend(v114[0], sel_resultStorages);
    uint64_t v43 = sub_1A75723F0();

    uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v104[0] = v43;
    sub_1A72BEE98((uint64_t)v104, (uint64_t)&v115);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v94 = (void *)v31;
      uint64_t v44 = v113;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
      id v45 = v116;
      uint64_t v46 = v100;
      uint64_t v47 = (void *)swift_allocObject();
      _OWORD v47[2] = v45;
      v47[3] = v44;
      id v48 = v45;
      v47[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v49 = (uint64_t)v101;
      v91(v101, v92, v93);
      uint64_t v106 = v46;
      v104[0] = (uint64_t)v47;
      swift_retain();
      unint64_t v50 = (void (*)(uint64_t *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v104, v49);
      v50(&v115, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F15D8);
      id v51 = v114[0];
      id v52 = objc_msgSend(v114[0], sel_resultData);
      uint64_t v53 = sub_1A7571A20();
      unint64_t v55 = v54;

      sub_1A7317738(&qword_1E96F15E0, &qword_1E96F15D8);
      uint64_t v56 = v41;
      id v57 = v96;
      sub_1A75717C0();
      id v96 = v57;
      if (!v57)
      {
        sub_1A72E3460(v53, v55);
        uint64_t v100 = v104[0];
        uint64_t v102 = v104[1];
        LODWORD(v101) = v105;
        uint64_t v72 = v107;
        uint64_t v92 = v106;
        uint64_t v73 = v108;
        uint64_t v74 = v109;
        uint64_t v75 = v110;
        uint64_t v76 = v111;
        uint64_t v77 = v112;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v93 = v56;
        swift_bridgeObjectRetain();
        uint64_t v90 = v77;
        swift_bridgeObjectRetain();
        id v78 = v51;
        uint64_t v91 = (void (*)(char *, uint64_t, uint64_t))objc_msgSend(v78, sel_latestFetchResultToken);
        sub_1A72E3460((uint64_t)v94, (unint64_t)v99);
        swift_bridgeObjectRelease();
        uint64_t v79 = v76;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v80 = v74;
        swift_bridgeObjectRelease();
        uint64_t v81 = v73;
        swift_bridgeObjectRelease();
        uint64_t v82 = v72;
        swift_bridgeObjectRelease();
        uint64_t v83 = v92;
        swift_bridgeObjectRelease();
        uint64_t v84 = v100;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        uint64_t v85 = v95;
        uint64_t v86 = v102;
        uint64_t *v95 = v84;
        v85[1] = v86;
        *((unsigned char *)v85 + 16) = (_BYTE)v101;
        v85[3] = v83;
        v85[4] = v82;
        v85[5] = v81;
        id v85[6] = v80;
        v85[7] = v75;
        v85[8] = v79;
        uint64_t v87 = (uint64_t)v91;
        v85[9] = v90;
        v85[10] = v87;
        return;
      }
      uint64_t v102 = (uint64_t)v47;
      sub_1A72E3460(v53, v55);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_1A7571E90();
      __swift_project_value_buffer(v58, (uint64_t)qword_1E96F3940);
      id v59 = v96;
      id v60 = v96;
      id v61 = v59;
      uint64_t v62 = sub_1A7571E80();
      os_log_type_t v63 = sub_1A7572FD0();
      BOOL v64 = os_log_type_enabled(v62, v63);
      uint64_t v65 = v90;
      if (v64)
      {
        uint64_t v66 = swift_slowAlloc();
        uint64_t v67 = swift_slowAlloc();
        v104[0] = v67;
        *(_DWORD *)uint64_t v66 = 136315394;
        swift_getErrorValue();
        uint64_t v68 = Error.rem_errorDescription.getter(v103);
        uint64_t v115 = sub_1A72D1730(v68, v69, v104);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v66 + 12) = 2080;
        uint64_t v115 = v65;
        uint64_t v70 = sub_1A7572670();
        uint64_t v115 = sub_1A72D1730(v70, v71, v104);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v62, v63, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v66, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v67, -1, -1);
        MEMORY[0x1AD0CD330](v66, -1, -1);
      }
      else
      {
      }
      uint64_t v88 = (uint64_t)v94;
      swift_willThrow();
      sub_1A72E3460(v88, (unint64_t)v99);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)v104, (uint64_t)&v115);
      sub_1A7447A74((uint64_t)&v115, 0, 0);
      sub_1A7315924((uint64_t)&v115);
      swift_willThrow();
      sub_1A72E3460(v31, (unint64_t)v99);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
    }
  }
}

void sub_1A731005C(unint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
}

void sub_1A7310104(unint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
}

void sub_1A73101AC(unint64_t *a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, unint64_t *a4@<X3>, void (*a5)(uint64_t)@<X4>, unint64_t a6@<X5>, uint64_t (*a7)(void)@<X6>, uint64_t *a8@<X7>, void *a9@<X8>, void (*a10)(void), uint64_t *a11, unint64_t *a12)
{
  uint64_t v102 = a8;
  uint64_t v101 = a7;
  uint64_t v108 = (unint64_t **)a6;
  uint64_t v106 = a5;
  unsigned __int8 v105 = a4;
  uint64_t v104 = a3;
  uint64_t v107 = a2;
  uint64_t v100 = a1;
  uint64_t v99 = a9;
  uint64_t v13 = (unint64_t *)sub_1A7573790();
  uint64_t v110 = *(v13 - 1);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (void (*)(uint64_t))((char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v124 = v12;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v16 = sub_1A7571820();
  id v17 = v12;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  unint64_t v19 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v20 = type metadata accessor for REMStoreObjectsContainer();
  id v21 = (void *)swift_allocObject();
  v21[2] = v17;
  uint64_t v22 = (uint64_t)v21;
  v21[3] = v19;
  os_log_type_t v23 = (unint64_t **)(v21 + 3);
  v21[4] = sub_1A72B0A88(v18);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v24 = __swift_project_value_buffer((uint64_t)v13, (uint64_t)qword_1EB705A18);
  uint64_t v25 = *(void (**)(void (*)(uint64_t), uint64_t, unint64_t *))(v110 + 16);
  v110 += 16;
  v25(v15, v24, v13);
  uint64_t v113 = v20;
  v112[0] = v22;
  uint64_t v103 = v22;
  swift_retain();
  uint64_t v26 = (void (*)(uint64_t *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)v112, (uint64_t)v15);
  v26(&v123, 0);
  v104(0);
  sub_1A72F0548(v105, v106);
  uint64_t v27 = v109;
  uint64_t v28 = sub_1A7571800();
  if (v27)
  {
    uint64_t v109 = v27;
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1A7571E90();
    __swift_project_value_buffer(v30, (uint64_t)qword_1E96F3940);
    uint64_t v31 = v109;
    uint64_t v32 = v109;
    id v33 = v31;
    unint64_t v34 = sub_1A7571E80();
    os_log_type_t v35 = sub_1A7572FD0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      v112[0] = v37;
      *(_DWORD *)uint64_t v36 = 136315394;
      swift_getErrorValue();
      uint64_t v38 = Error.rem_errorDescription.getter((uint64_t)v122[5]);
      uint64_t v123 = sub_1A72D1730(v38, v39, v112);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v36 + 12) = 2080;
      uint64_t v123 = v101(0);
      __swift_instantiateConcreteTypeFromMangledName(v102);
      uint64_t v40 = sub_1A7572670();
      uint64_t v123 = sub_1A72D1730(v40, v41, v112);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v34, v35, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v37, -1, -1);
      MEMORY[0x1AD0CD330](v36, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    id v42 = v29;
    uint64_t v97 = v25;
    uint64_t v98 = v24;
    uint64_t v104 = (void (*)(void))v20;
    unsigned __int8 v105 = v13;
    uint64_t v106 = v15;
    uint64_t v107 = v16;
    uint64_t v109 = a10;
    uint64_t v43 = (unint64_t *)v28;
    swift_beginAccess();
    uint64_t v44 = *v23;
    id v45 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408((uint64_t)v43, (unint64_t)v42);
    swift_bridgeObjectRetain();
    v122[0] = objc_msgSend(v45, sel_init);
    uint64_t v46 = (uint64_t *)v101(0);
    v112[0] = (uint64_t)v46;
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(v102);
    uint64_t v48 = sub_1A7572670();
    unint64_t v50 = v49;
    uint64_t v108 = &v96;
    MEMORY[0x1F4188790](v48);
    *(&v96 - 6) = (unint64_t *)v122;
    *(&v96 - 5) = (unint64_t *)&v124;
    *(&v96 - 4) = v100;
    *(&v96 - 3) = v43;
    *(&v96 - 2) = v42;
    *(&v96 - 1) = v44;
    int v51 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v48, v50, v51, v109, (uint64_t)(&v96 - 8));
    uint64_t v109 = 0;
    uint64_t v101 = (uint64_t (*)(void))v47;
    uint64_t v102 = v46;
    sub_1A72E3460((uint64_t)v43, (unint64_t)v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v52 = objc_msgSend(v122[0], sel_resultStorages);
    uint64_t v53 = sub_1A75723F0();

    uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v112[0] = v53;
    sub_1A72BEE98((uint64_t)v112, (uint64_t)&v123);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v100 = v43;
      uint64_t v108 = (unint64_t **)v42;
      id v96 = a12;
      uint64_t v54 = v121;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
      unint64_t v55 = v124;
      uint64_t v56 = v104;
      id v57 = (void *)swift_allocObject();
      v57[2] = v55;
      uint64_t v57[3] = v54;
      id v58 = v55;
      v57[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      id v59 = v106;
      v97(v106, v98, v105);
      uint64_t v113 = (uint64_t)v56;
      v112[0] = (uint64_t)v57;
      swift_retain();
      id v60 = (void (*)(uint64_t *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v112, (uint64_t)v59);
      v60(&v123, 0);
      __swift_instantiateConcreteTypeFromMangledName(a11);
      id v61 = v122[0];
      id v62 = objc_msgSend(v122[0], sel_resultData);
      uint64_t v63 = sub_1A7571A20();
      unint64_t v65 = v64;

      sub_1A7317738(v96, a11);
      uint64_t v66 = v109;
      sub_1A75717C0();
      if (!v66)
      {
        sub_1A72E3460(v63, v65);
        uint64_t v104 = (void (*)(void))v112[0];
        uint64_t v110 = v112[1];
        uint64_t v106 = (void (*)(uint64_t))v112[2];
        LODWORD(v105) = v113;
        uint64_t v102 = v114;
        uint64_t v98 = v115;
        uint64_t v80 = v116;
        uint64_t v81 = v117;
        uint64_t v82 = v118;
        uint64_t v83 = v119;
        uint64_t v109 = 0;
        uint64_t v84 = v120;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v85 = v80;
        swift_bridgeObjectRetain();
        uint64_t v86 = v81;
        swift_bridgeObjectRetain();
        id v96 = v82;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v97 = v84;
        swift_bridgeObjectRetain();
        id v87 = v61;
        uint64_t v101 = (uint64_t (*)(void))objc_msgSend(v87, sel_latestFetchResultToken);
        sub_1A72E3460((uint64_t)v100, (unint64_t)v108);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v88 = v85;
        swift_bridgeObjectRelease();
        uint64_t v89 = v98;
        swift_bridgeObjectRelease();
        uint64_t v90 = v102;
        swift_bridgeObjectRelease();
        uint64_t v91 = v104;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        uint64_t v92 = v99;
        uint64_t v93 = v110;
        *uint64_t v99 = v91;
        v92[1] = v93;
        v92[2] = v106;
        *((unsigned char *)v92 + 24) = (_BYTE)v105;
        v92[4] = v90;
        v92[5] = v89;
        id v92[6] = v88;
        v92[7] = v86;
        v92[8] = v96;
        v92[9] = v83;
        uint64_t v94 = v101;
        v92[10] = v97;
        v92[11] = v94;
        return;
      }
      uint64_t v110 = (uint64_t)v57;
      sub_1A72E3460(v63, v65);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v67 = sub_1A7571E90();
      __swift_project_value_buffer(v67, (uint64_t)qword_1E96F3940);
      uint64_t v68 = v66;
      unint64_t v69 = v66;
      uint64_t v70 = sub_1A7571E80();
      os_log_type_t v71 = sub_1A7572FD0();
      BOOL v72 = os_log_type_enabled(v70, v71);
      uint64_t v73 = v102;
      if (v72)
      {
        uint64_t v74 = swift_slowAlloc();
        uint64_t v75 = swift_slowAlloc();
        v112[0] = v75;
        *(_DWORD *)uint64_t v74 = 136315394;
        swift_getErrorValue();
        uint64_t v76 = Error.rem_errorDescription.getter(v111);
        uint64_t v123 = sub_1A72D1730(v76, v77, v112);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v74 + 12) = 2080;
        uint64_t v123 = (uint64_t)v73;
        uint64_t v78 = sub_1A7572670();
        uint64_t v123 = sub_1A72D1730(v78, v79, v112);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v70, v71, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v74, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v75, -1, -1);
        MEMORY[0x1AD0CD330](v74, -1, -1);
      }
      else
      {
      }
      uint64_t v95 = v100;
      swift_willThrow();
      sub_1A72E3460((uint64_t)v95, (unint64_t)v108);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)v112, (uint64_t)&v123);
      sub_1A7447A74((uint64_t)&v123, 0, 0);
      sub_1A7315924((uint64_t)&v123);
      swift_willThrow();
      sub_1A72E3460((uint64_t)v43, (unint64_t)v42);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
    }
  }
}

void sub_1A7310F40(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
}

void sub_1A7310FD4(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, unint64_t *a4@<X3>, void (*a5)(uint64_t)@<X4>, unint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t **a9@<X8>, uint64_t *a10)
{
  uint64_t v100 = a8;
  uint64_t v99 = a7;
  uint64_t v106 = (void *)a6;
  uint64_t v104 = a5;
  uint64_t v103 = a4;
  uint64_t v102 = a3;
  unsigned __int8 v105 = a2;
  uint64_t v98 = a1;
  uint64_t v97 = a9;
  uint64_t v11 = (unint64_t *)sub_1A7573790();
  uint64_t v108 = *(v11 - 1);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (void (*)(uint64_t))((char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v122 = v10;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v14 = sub_1A7571820();
  id v15 = v10;
  uint64_t v16 = MEMORY[0x1E4FBC860];
  unint64_t v17 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v18 = type metadata accessor for REMStoreObjectsContainer();
  unint64_t v19 = (void *)swift_allocObject();
  v19[2] = v15;
  uint64_t v20 = (uint64_t)v19;
  _OWORD v19[3] = v17;
  id v21 = (uint64_t **)(v19 + 3);
  v19[4] = sub_1A72B0A88(v16);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v22 = __swift_project_value_buffer((uint64_t)v11, (uint64_t)qword_1EB705A18);
  os_log_type_t v23 = *(uint64_t **)(v108 + 16);
  v108 += 16;
  ((void (*)(void (*)(uint64_t), uint64_t, unint64_t *))v23)(v13, v22, v11);
  uint64_t v111 = v18;
  v110[0] = v20;
  uint64_t v101 = v20;
  swift_retain();
  uint64_t v24 = (void (*)(void (**)(void), void))sub_1A7571810();
  sub_1A7447898((uint64_t)v110, (uint64_t)v13);
  v24(&v121, 0);
  v102(0);
  sub_1A72F0548(v103, v104);
  uint64_t v25 = v107;
  uint64_t v26 = sub_1A7571800();
  uint64_t v107 = (void *)v14;
  if (v25)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1A7571E90();
    __swift_project_value_buffer(v28, (uint64_t)qword_1E96F3940);
    id v29 = v25;
    id v30 = v25;
    uint64_t v31 = sub_1A7571E80();
    os_log_type_t v32 = sub_1A7572FD0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      v110[0] = v34;
      *(_DWORD *)uint64_t v33 = 136315394;
      swift_getErrorValue();
      uint64_t v35 = Error.rem_errorDescription.getter((uint64_t)v120[5]);
      uint64_t v121 = (void (*)(void))sub_1A72D1730(v35, v36, v110);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v121 = (void (*)(void))((uint64_t (*)(void))v99)(0);
      __swift_instantiateConcreteTypeFromMangledName(v100);
      uint64_t v37 = sub_1A7572670();
      uint64_t v121 = (void (*)(void))sub_1A72D1730(v37, v38, v110);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v31, v32, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v34, -1, -1);
      MEMORY[0x1AD0CD330](v33, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    unint64_t v39 = v27;
    uint64_t v95 = v23;
    id v96 = (uint64_t *)v22;
    uint64_t v102 = (void (*)(void))v18;
    uint64_t v103 = v11;
    uint64_t v104 = v13;
    unsigned __int8 v105 = a10;
    uint64_t v40 = (uint64_t *)v26;
    swift_beginAccess();
    unint64_t v41 = *v21;
    id v42 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408((uint64_t)v40, v39);
    swift_bridgeObjectRetain();
    v120[0] = objc_msgSend(v42, sel_init);
    uint64_t v43 = (uint64_t *)((uint64_t (*)(void))v99)(0);
    v110[0] = (uint64_t)v43;
    uint64_t v44 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(v100);
    uint64_t v45 = sub_1A7572670();
    unint64_t v47 = v46;
    uint64_t v106 = &v94;
    MEMORY[0x1F4188790](v45);
    *(&v94 - 6) = (uint64_t *)v120;
    *(&v94 - 5) = (uint64_t *)&v122;
    *(&v94 - 4) = v98;
    *(&v94 - 3) = v40;
    *(&v94 - 2) = (uint64_t *)v39;
    *(&v94 - 1) = v41;
    int v48 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v45, v47, v48, (void (*)(void))v105, (uint64_t)(&v94 - 8));
    uint64_t v100 = v44;
    unsigned __int8 v105 = v43;
    sub_1A72E3460((uint64_t)v40, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    uint64_t v49 = sub_1A75717E0();
    id v50 = objc_msgSend(v120[0], sel_resultStorages);
    uint64_t v51 = sub_1A75723F0();

    uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    v110[0] = v51;
    sub_1A72BEE98((uint64_t)v110, (uint64_t)&v121);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v99 = v40;
      uint64_t v106 = (void *)v39;
      uint64_t v52 = v119;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
      uint64_t v53 = v122;
      uint64_t v98 = 0;
      uint64_t v54 = v102;
      unint64_t v55 = (void *)swift_allocObject();
      v55[2] = v53;
      v55[3] = v52;
      id v56 = v53;
      v55[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      id v57 = v104;
      ((void (*)(void (*)(uint64_t), uint64_t *, unint64_t *))v95)(v104, v96, v103);
      uint64_t v111 = (uint64_t)v54;
      v110[0] = (uint64_t)v55;
      swift_retain();
      id v58 = (void (*)(void (**)(void), void))sub_1A75717D0();
      sub_1A7447898((uint64_t)v110, (uint64_t)v57);
      v58(&v121, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700D38);
      id v59 = v120[0];
      id v60 = objc_msgSend(v120[0], sel_resultData);
      uint64_t v61 = v49;
      uint64_t v62 = sub_1A7571A20();
      unint64_t v64 = v63;

      sub_1A7317738(&qword_1EB700D30, &qword_1EB700D38);
      unint64_t v65 = v98;
      sub_1A75717C0();
      if (!v65)
      {
        sub_1A72E3460(v62, v64);
        uint64_t v100 = (uint64_t *)v110[0];
        uint64_t v108 = v110[1];
        unsigned __int8 v105 = (uint64_t *)v110[2];
        LODWORD(v104) = v111;
        LODWORD(v103) = BYTE1(v111);
        unint64_t v77 = v113;
        uint64_t v98 = v112;
        uint64_t v78 = v114;
        unint64_t v79 = v115;
        uint64_t v81 = v116;
        uint64_t v80 = v117;
        uint64_t v102 = (void (*)(void))v55;
        uint64_t v82 = v118;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v94 = v81;
        swift_bridgeObjectRetain();
        uint64_t v95 = v80;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v83 = v59;
        id v96 = (uint64_t *)objc_msgSend(v83, sel_latestFetchResultToken);
        sub_1A72E3460((uint64_t)v99, (unint64_t)v106);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v84 = v79;
        swift_bridgeObjectRelease();
        uint64_t v85 = v78;
        swift_bridgeObjectRelease();
        uint64_t v86 = v77;
        swift_bridgeObjectRelease();
        id v87 = v98;
        swift_bridgeObjectRelease();
        uint64_t v88 = v100;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        uint64_t v89 = v97;
        uint64_t v90 = v108;
        *uint64_t v97 = v88;
        v89[1] = (uint64_t *)v90;
        uint64_t v89[2] = v105;
        *((unsigned char *)v89 + 24) = (_BYTE)v104;
        *((unsigned char *)v89 + 25) = (_BYTE)v103;
        v89[4] = v87;
        v89[5] = v86;
        id v89[6] = v85;
        v89[7] = v84;
        uint64_t v91 = v95;
        v89[8] = v94;
        v89[9] = v91;
        uint64_t v92 = v96;
        v89[10] = v82;
        v89[11] = v92;
        return;
      }
      uint64_t v108 = v61;
      sub_1A72E3460(v62, v64);
      if (qword_1E96F0838 != -1) {
        swift_once();
      }
      uint64_t v66 = sub_1A7571E90();
      __swift_project_value_buffer(v66, (uint64_t)qword_1E96F3940);
      uint64_t v67 = v65;
      uint64_t v68 = v65;
      unint64_t v69 = sub_1A7571E80();
      os_log_type_t v70 = sub_1A7572FD0();
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v71 = swift_slowAlloc();
        uint64_t v72 = swift_slowAlloc();
        v110[0] = v72;
        *(_DWORD *)uint64_t v71 = 136315394;
        swift_getErrorValue();
        uint64_t v73 = Error.rem_errorDescription.getter(v109);
        uint64_t v121 = (void (*)(void))sub_1A72D1730(v73, v74, v110);
        sub_1A7573250();
        swift_bridgeObjectRelease();

        *(_WORD *)(v71 + 12) = 2080;
        uint64_t v121 = (void (*)(void))v105;
        uint64_t v75 = sub_1A7572670();
        uint64_t v121 = (void (*)(void))sub_1A72D1730(v75, v76, v110);
        sub_1A7573250();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v69, v70, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v71, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v72, -1, -1);
        MEMORY[0x1AD0CD330](v71, -1, -1);
      }
      else
      {
      }
      uint64_t v93 = v99;
      swift_willThrow();
      sub_1A72E3460((uint64_t)v93, (unint64_t)v106);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A72BEE98((uint64_t)v110, (uint64_t)&v121);
      sub_1A7447A74((uint64_t)&v121, 0, 0);
      sub_1A7315924((uint64_t)&v121);
      swift_willThrow();
      sub_1A72E3460((uint64_t)v40, v39);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
    }
  }
}

void sub_1A7311D48(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v82 = a1;
  uint64_t v79 = a3;
  uint64_t v80 = type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Result();
  uint64_t v6 = MEMORY[0x1F4188790](v80);
  uint64_t v78 = (uint64_t)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v81 = (char *)v71 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v77 = (uint64_t)v71 - v10;
  uint64_t v11 = sub_1A7573790();
  uint64_t v86 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v93 = a2;
  uint64_t v92 = v4;
  sub_1A7571830();
  swift_allocObject();
  uint64_t v14 = sub_1A7571820();
  id v15 = v4;
  uint64_t v16 = MEMORY[0x1E4FBC860];
  unint64_t v17 = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
  uint64_t v18 = type metadata accessor for REMStoreObjectsContainer();
  unint64_t v19 = (void *)swift_allocObject();
  v19[2] = v15;
  uint64_t v20 = (uint64_t)v19;
  _OWORD v19[3] = v17;
  id v21 = v19 + 3;
  v19[4] = sub_1A72B0A88(v16);
  if (qword_1EB705BE8 != -1) {
    swift_once();
  }
  uint64_t v22 = __swift_project_value_buffer(v11, (uint64_t)qword_1EB705A18);
  os_log_type_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 16);
  v86 += 16;
  v23(v13, v22, v11);
  uint64_t v91 = v18;
  uint64_t v90 = (void *)v20;
  uint64_t v83 = v20;
  swift_retain();
  uint64_t v24 = (void (*)(void *, void))sub_1A7571810();
  sub_1A7447898((uint64_t)&v90, (uint64_t)v13);
  v24(v89, 0);
  sub_1A73158B8();
  uint64_t v84 = v14;
  uint64_t v25 = v85;
  uint64_t v26 = sub_1A7571800();
  if (v25)
  {
    if (qword_1E96F0838 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1A7571E90();
    __swift_project_value_buffer(v28, (uint64_t)qword_1E96F3940);
    id v29 = v25;
    id v30 = v25;
    uint64_t v31 = sub_1A7571E80();
    os_log_type_t v32 = sub_1A7572FD0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v90 = (void *)v34;
      *(_DWORD *)uint64_t v33 = 136315394;
      swift_getErrorValue();
      uint64_t v35 = Error.rem_errorDescription.getter((uint64_t)v88[5]);
      v89[0] = sub_1A72D1730(v35, v36, (uint64_t *)&v90);
      sub_1A7573250();
      swift_bridgeObjectRelease();

      *(_WORD *)(v33 + 12) = 2080;
      v89[0] = type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1590);
      uint64_t v37 = sub_1A7572670();
      v89[0] = sub_1A72D1730(v37, v38, (uint64_t *)&v90);
      sub_1A7573250();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v31, v32, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v34, -1, -1);
      MEMORY[0x1AD0CD330](v33, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v39 = v26;
    unint64_t v40 = v27;
    uint64_t v72 = v23;
    uint64_t v73 = v13;
    uint64_t v74 = v22;
    uint64_t v75 = v18;
    uint64_t v76 = v11;
    swift_beginAccess();
    uint64_t v41 = *v21;
    id v42 = objc_allocWithZone(MEMORY[0x1E4F94CC8]);
    sub_1A72E3408(v39, v40);
    swift_bridgeObjectRetain();
    v88[0] = objc_msgSend(v42, sel_init);
    uint64_t v43 = type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation();
    uint64_t v90 = (void *)v43;
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1590);
    uint64_t v45 = sub_1A7572670();
    unint64_t v47 = v46;
    uint64_t v85 = v71;
    MEMORY[0x1F4188790](v45);
    v71[-6] = (uint64_t)v88;
    v71[-5] = (uint64_t)&v92;
    v71[-4] = v82;
    v71[-3] = v39;
    v71[-2] = v40;
    v71[-1] = v41;
    int v48 = sub_1A7572FB0();
    measureTimeElapsed(_:level:block:)(v45, v47, v48, (void (*)(void))sub_1A731590C, (uint64_t)&v71[-8]);
    v71[1] = v44;
    uint64_t v82 = v43;
    uint64_t v49 = v39;
    sub_1A72E3460(v39, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A75717F0();
    swift_allocObject();
    sub_1A75717E0();
    id v50 = objc_msgSend(v88[0], sel_resultStorages);
    uint64_t v51 = sub_1A75723F0();

    uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705488);
    uint64_t v90 = (void *)v51;
    sub_1A72BEE98((uint64_t)&v90, (uint64_t)v89);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705480);
    if (swift_dynamicCast())
    {
      uint64_t v85 = (uint64_t *)v40;
      v71[0] = v49;
      uint64_t v52 = v87;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v90);
      uint64_t v53 = v92;
      uint64_t v54 = v75;
      unint64_t v55 = (void *)swift_allocObject();
      v55[2] = v53;
      v55[3] = v52;
      id v56 = v53;
      v55[4] = sub_1A72B0A88(MEMORY[0x1E4FBC860]);
      uint64_t v57 = (uint64_t)v73;
      v72(v73, v74, v76);
      uint64_t v91 = v54;
      uint64_t v90 = v55;
      swift_retain();
      id v58 = (void (*)(void *, void))sub_1A75717D0();
      sub_1A7447898((uint64_t)&v90, v57);
      v58(v89, 0);
      id v59 = v88[0];
      id v60 = objc_msgSend(v88[0], sel_resultData);
      uint64_t v61 = sub_1A7571A20();
      unint64_t v63 = v62;

      sub_1A72F0548(&qword_1E96F1598, (void (*)(uint64_t))type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Result);
      unint64_t v64 = v81;
      sub_1A75717C0();
      sub_1A72E3460(v61, v63);
      uint64_t v65 = (uint64_t)v64;
      uint64_t v66 = v77;
      sub_1A7317B94(v65, v77, (uint64_t (*)(void))type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Result);
      uint64_t v67 = v78;
      sub_1A7317BFC(v66, v78, (uint64_t (*)(void))type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Result);
      id v68 = v59;
      id v69 = objc_msgSend(v68, sel_latestFetchResultToken);
      sub_1A72E3460(v71[0], (unint64_t)v85);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      sub_1A7317C64(v66, (uint64_t (*)(void))type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Result);
      uint64_t v70 = v79;
      sub_1A7317B94(v67, v79, (uint64_t (*)(void))type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Result);
      *(void *)(v70 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96F15A0) + 28)) = v69;
    }
    else
    {
      sub_1A72BEE98((uint64_t)&v90, (uint64_t)v89);
      sub_1A7447A74((uint64_t)v89, 0, 0);
      sub_1A7315924((uint64_t)v89);
      swift_willThrow();
      sub_1A72E3460(v49, v40);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v90);
    }
  }
}

uint64_t static REMRemindersInCalendarDataView.Invocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMRemindersInCalendarDataView.Invocation.Parameters.lastFetchPredicateVersion.getter()
{
  return *(void *)v0;
}

unint64_t sub_1A73129FC()
{
  return 0xD000000000000019;
}

uint64_t sub_1A7312A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A731571C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A7312A44(uint64_t a1)
{
  unint64_t v2 = sub_1A7313C1C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7312A80(uint64_t a1)
{
  unint64_t v2 = sub_1A7313C1C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersInCalendarDataView.Invocation.Parameters.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7017B8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7313C1C();
  sub_1A75741B0();
  sub_1A7573AF0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t REMRemindersInCalendarDataView.Invocation.Parameters.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701880);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7313C1C();
  sub_1A7574190();
  if (!v2)
  {
    uint64_t v9 = sub_1A75739E0();
    char v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v11 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A7312D70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersInCalendarDataView.Invocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A7312D88(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7017B8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7313C1C();
  sub_1A75741B0();
  sub_1A7573AF0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t REMRemindersInCalendarDataView.Invocation.Result.remindersResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return sub_1A7313B4C(v2, v3, v4, v5);
}

uint64_t REMRemindersInCalendarDataView.Invocation.Result.predicateVersion.getter()
{
  return *(void *)(v0 + 32);
}

__n128 REMRemindersInCalendarDataView.Invocation.Result.init(remindersResult:predicateVersion:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v3 = a1[1].n128_u64[0];
  unsigned __int8 v4 = a1[1].n128_u8[8];
  __n128 result = *a1;
  *a3 = *a1;
  a3[1].n128_u64[0] = v3;
  a3[1].n128_u8[8] = v4;
  a3[2].n128_u64[0] = a2;
  return result;
}

uint64_t sub_1A7312F08()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x7265646E696D6572;
  }
}

uint64_t sub_1A7312F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A73157A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A7312F7C(uint64_t a1)
{
  unint64_t v2 = sub_1A7313C70();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7312FB8(uint64_t a1)
{
  unint64_t v2 = sub_1A7313C70();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMRemindersInCalendarDataView.Invocation.Result.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7018B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *v1;
  uint64_t v7 = *((void *)v1 + 2);
  char v8 = *((unsigned char *)v1 + 24);
  v11[1] = *((void *)v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7313C70();
  sub_1A75741B0();
  long long v14 = v12;
  uint64_t v15 = v7;
  char v16 = v8;
  char v17 = 0;
  sub_1A7313CC4();
  uint64_t v9 = v13;
  sub_1A7573B60();
  if (!v9)
  {
    LOBYTE(v14) = 1;
    sub_1A7573B40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMRemindersInCalendarDataView.Invocation.Result.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7017A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7313C70();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v22 = 0;
  sub_1A7313D18();
  sub_1A7573A50();
  uint64_t v9 = v17;
  uint64_t v10 = v18;
  LOBYTE(v17) = 1;
  uint64_t v16 = v19;
  int v21 = v20;
  sub_1A7313B4C(v9, v18, v19, v20);
  uint64_t v11 = sub_1A7573A30();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  uint64_t v12 = v16;
  *(void *)(a2 + 16) = v16;
  char v13 = v21;
  *(unsigned char *)(a2 + 24) = v21;
  *(void *)(a2 + 32) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1A7313BB8(v9, v10, v12, v13);
}

uint64_t sub_1A73133CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersInCalendarDataView.Invocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A73133E4(void *a1)
{
  return REMRemindersInCalendarDataView.Invocation.Result.encode(to:)(a1);
}

id REMRemindersInCalendarDataView.Invocation.init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMRemindersInCalendarDataView.Invocation.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMRemindersInCalendarDataView.Invocation.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id REMRemindersInCalendarDataView.Invocation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A73135B0()
{
  id v1 = objc_msgSend(v0, sel_name);
  uint64_t v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v2;
}

uint64_t REMRemindersInCalendarDataView.deinit()
{
  return v0;
}

uint64_t REMRemindersInCalendarDataView.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

void sub_1A7313620(void **a1, void *a2, uint64_t a3)
{
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = (void *)sub_1A7571A00();
  sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
  sub_1A72D8FDC();
  uint64_t v7 = (void *)sub_1A75723D0();
  v13[0] = 0;
  id v8 = objc_msgSend(a2, sel_resultFromPerformingSwiftInvocation_parametersData_storages_error_, a3, v6, v7, v13);

  id v9 = v13[0];
  if (v8)
  {
    uint64_t v10 = *a1;
    *a1 = v8;
    id v11 = v9;
  }
  else
  {
    id v12 = v13[0];
    sub_1A7571850();

    swift_willThrow();
  }
}

uint64_t _s19ReminderKitInternal30REMRemindersInCalendarDataViewC09ReminderseF6ResultV0iJ0O2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  if ((v5 & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 24) & 1) == 0)
    {
      sub_1A7313B4C(*(void *)a2, *(void *)(a2 + 8), v8, 0);
      sub_1A7313B4C(v3, v2, v4, 0);
      char v16 = sub_1A72DD304(v3, v7);
      sub_1A7313BB8(v3, v2, v4, 0);
      sub_1A7313BB8(v7, v6, v8, 0);
      return v16 & 1;
    }
    goto LABEL_8;
  }
  if ((*(unsigned char *)(a2 + 24) & 1) == 0)
  {
LABEL_8:
    sub_1A7313B4C(*(void *)a2, *(void *)(a2 + 8), v8, v9);
    sub_1A7313B4C(v3, v2, v4, v5);
    sub_1A7313BB8(v3, v2, v4, v5);
    uint64_t v12 = v7;
    uint64_t v13 = v6;
    uint64_t v14 = v8;
    char v15 = v9;
    goto LABEL_11;
  }
  sub_1A7313B4C(*(void *)a2, *(void *)(a2 + 8), v8, 1);
  sub_1A7313B4C(v3, v2, v4, 1);
  sub_1A7313B4C(v7, v6, v8, 1);
  sub_1A7313B4C(v3, v2, v4, 1);
  if (sub_1A72DD304(v3, v7) & 1) != 0 && (sub_1A72DD304(v2, v6))
  {
    char v10 = sub_1A72DD304(v4, v8);
    uint64_t v11 = 1;
    sub_1A7313BB8(v3, v2, v4, 1);
    sub_1A7313BB8(v7, v6, v8, 1);
    sub_1A7313BB8(v7, v6, v8, 1);
    sub_1A7313BB8(v3, v2, v4, 1);
    if (v10) {
      return v11;
    }
    return 0;
  }
  sub_1A7313BB8(v3, v2, v4, 1);
  sub_1A7313BB8(v7, v6, v8, 1);
  sub_1A7313BB8(v7, v6, v8, 1);
  uint64_t v12 = v3;
  uint64_t v13 = v2;
  uint64_t v14 = v4;
  char v15 = 1;
LABEL_11:
  sub_1A7313BB8(v12, v13, v14, v15);
  return 0;
}

unint64_t sub_1A73139A8()
{
  unint64_t result = qword_1EB703238;
  if (!qword_1EB703238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703238);
  }
  return result;
}

unint64_t sub_1A73139FC()
{
  unint64_t result = qword_1EB703260;
  if (!qword_1EB703260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703260);
  }
  return result;
}

unint64_t sub_1A7313A50()
{
  unint64_t result = qword_1EB701850;
  if (!qword_1EB701850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701850);
  }
  return result;
}

unint64_t sub_1A7313AA4()
{
  unint64_t result = qword_1EB703410;
  if (!qword_1EB703410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703410);
  }
  return result;
}

unint64_t sub_1A7313AF8()
{
  unint64_t result = qword_1EB7016A8;
  if (!qword_1EB7016A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7016A8);
  }
  return result;
}

uint64_t sub_1A7313B4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v4 = vars8;
  }
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for REMRemindersInCalendarDataView.Invocation()
{
  return self;
}

uint64_t sub_1A7313BB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A7313C1C()
{
  unint64_t result = qword_1EB703278;
  if (!qword_1EB703278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703278);
  }
  return result;
}

unint64_t sub_1A7313C70()
{
  unint64_t result = qword_1EB703290;
  if (!qword_1EB703290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703290);
  }
  return result;
}

unint64_t sub_1A7313CC4()
{
  unint64_t result = qword_1EB701858;
  if (!qword_1EB701858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701858);
  }
  return result;
}

unint64_t sub_1A7313D18()
{
  unint64_t result = qword_1EB7016B0;
  if (!qword_1EB7016B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7016B0);
  }
  return result;
}

unint64_t sub_1A7313D70()
{
  unint64_t result = qword_1E96F1540;
  if (!qword_1E96F1540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1540);
  }
  return result;
}

unint64_t sub_1A7313DC8()
{
  unint64_t result = qword_1EB7016B8;
  if (!qword_1EB7016B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7016B8);
  }
  return result;
}

unint64_t sub_1A7313E20()
{
  unint64_t result = qword_1EB7016C0;
  if (!qword_1EB7016C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7016C0);
  }
  return result;
}

unint64_t sub_1A7313E78()
{
  unint64_t result = qword_1E96F1548;
  if (!qword_1E96F1548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1548);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersInCalendarDataView()
{
  return self;
}

uint64_t method lookup function for REMRemindersInCalendarDataView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMRemindersInCalendarDataView);
}

void *initializeBufferWithCopyOfBuffer for REMRemindersInCalendarDataView.FetchResultToken(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = v3;
  return a1;
}

void *assignWithCopy for REMRemindersInCalendarDataView.FetchResultToken(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)a2[1];
  id v4 = (void *)a1[1];
  a1[1] = v3;
  id v5 = v3;

  return a1;
}

void *assignWithTake for REMRemindersInCalendarDataView.FetchResultToken(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  id v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.FetchResultToken()
{
  return &type metadata for REMRemindersInCalendarDataView.FetchResultToken;
}

void destroy for REMRemindersInCalendarDataView.RemindersInCalendarResult(uint64_t a1)
{
  sub_1A7313BB8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for REMRemindersInCalendarDataView.RemindersInCalendarResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1A7313B4C(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  id v9 = v8;
  return a1;
}

uint64_t assignWithCopy for REMRemindersInCalendarDataView.RemindersInCalendarResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1A7313B4C(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  sub_1A7313BB8(v8, v9, v10, v11);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v12 = *(void **)(a2 + 40);
  uint64_t v13 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v12;
  id v14 = v12;

  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for REMRemindersInCalendarDataView.RemindersInCalendarResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1A7313BB8(v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 40);
  char v11 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v10;

  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersInCalendarDataView.RemindersInCalendarResult(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersInCalendarDataView.RemindersInCalendarResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.RemindersInCalendarResult()
{
  return &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult;
}

uint64_t destroy for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult(uint64_t a1)
{
  return sub_1A7313BB8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1A7313B4C(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1A7313B4C(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1A7313BB8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1A7313BB8(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A73143DC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1A73143E4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult()
{
  return &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult;
}

uint64_t destroy for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s19ReminderKitInternal30REMRemindersInCalendarDataViewC25RemindersInCalendarResultV15RemindersResultO17IncrementalResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult()
{
  return &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult;
}

uint64_t getEnumTagSinglePayload for REMRemindersInCalendarDataView.Invocation.Parameters(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for REMRemindersInCalendarDataView.Invocation.Parameters(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.Invocation.Parameters()
{
  return &type metadata for REMRemindersInCalendarDataView.Invocation.Parameters;
}

uint64_t initializeWithCopy for REMRemindersInCalendarDataView.Invocation.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1A7313B4C(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for REMRemindersInCalendarDataView.Invocation.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1A7313B4C(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  sub_1A7313BB8(v8, v9, v10, v11);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for REMRemindersInCalendarDataView.Invocation.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1A7313BB8(v6, v7, v8, v9);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersInCalendarDataView.Invocation.Result(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersInCalendarDataView.Invocation.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.Invocation.Result()
{
  return &type metadata for REMRemindersInCalendarDataView.Invocation.Result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.Invocation.Result.CodingKeys()
{
  return &type metadata for REMRemindersInCalendarDataView.Invocation.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.Invocation.Parameters.CodingKeys()
{
  return &type metadata for REMRemindersInCalendarDataView.Invocation.Parameters.CodingKeys;
}

unsigned char *sub_1A7314868(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.CodingKeys()
{
  return &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.ReloadCodingKeys()
{
  return &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.ReloadCodingKeys;
}

unsigned char *_s19ReminderKitInternal30REMRemindersInCalendarDataViewC10InvocationC10ParametersV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A7314930);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalCodingKeys()
{
  return &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7314A34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.CodingKeys()
{
  return &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.CodingKeys;
}

uint64_t getEnumTagSinglePayload for REMSiriSearchDataView.ListsResult_Codable.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s19ReminderKitInternal30REMRemindersInCalendarDataViewC10InvocationC6ResultV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7314BC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.FetchResultToken.CodingKeys()
{
  return &type metadata for REMRemindersInCalendarDataView.FetchResultToken.CodingKeys;
}

unint64_t sub_1A7314C04()
{
  unint64_t result = qword_1E96F1550;
  if (!qword_1E96F1550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1550);
  }
  return result;
}

unint64_t sub_1A7314C5C()
{
  unint64_t result = qword_1E96F1558;
  if (!qword_1E96F1558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1558);
  }
  return result;
}

unint64_t sub_1A7314CB4()
{
  unint64_t result = qword_1E96F1560;
  if (!qword_1E96F1560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1560);
  }
  return result;
}

unint64_t sub_1A7314D0C()
{
  unint64_t result = qword_1E96F1568;
  if (!qword_1E96F1568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1568);
  }
  return result;
}

unint64_t sub_1A7314D64()
{
  unint64_t result = qword_1E96F1570;
  if (!qword_1E96F1570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1570);
  }
  return result;
}

unint64_t sub_1A7314DBC()
{
  unint64_t result = qword_1E96F1578;
  if (!qword_1E96F1578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1578);
  }
  return result;
}

unint64_t sub_1A7314E14()
{
  unint64_t result = qword_1E96F1580;
  if (!qword_1E96F1580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1580);
  }
  return result;
}

unint64_t sub_1A7314E6C()
{
  unint64_t result = qword_1EB7032A0;
  if (!qword_1EB7032A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7032A0);
  }
  return result;
}

unint64_t sub_1A7314EC4()
{
  unint64_t result = qword_1EB703298;
  if (!qword_1EB703298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703298);
  }
  return result;
}

unint64_t sub_1A7314F1C()
{
  unint64_t result = qword_1EB703288;
  if (!qword_1EB703288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703288);
  }
  return result;
}

unint64_t sub_1A7314F74()
{
  unint64_t result = qword_1EB703280;
  if (!qword_1EB703280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703280);
  }
  return result;
}

unint64_t sub_1A7314FCC()
{
  unint64_t result = qword_1EB703258;
  if (!qword_1EB703258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703258);
  }
  return result;
}

unint64_t sub_1A7315024()
{
  unint64_t result = qword_1EB703250;
  if (!qword_1EB703250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703250);
  }
  return result;
}

unint64_t sub_1A731507C()
{
  unint64_t result = qword_1EB703270;
  if (!qword_1EB703270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703270);
  }
  return result;
}

unint64_t sub_1A73150D4()
{
  unint64_t result = qword_1EB703268;
  if (!qword_1EB703268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703268);
  }
  return result;
}

unint64_t sub_1A731512C()
{
  unint64_t result = qword_1EB703248;
  if (!qword_1EB703248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703248);
  }
  return result;
}

unint64_t sub_1A7315184()
{
  unint64_t result = qword_1EB703240;
  if (!qword_1EB703240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703240);
  }
  return result;
}

unint64_t sub_1A73151DC()
{
  unint64_t result = qword_1EB703230;
  if (!qword_1EB703230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703230);
  }
  return result;
}

unint64_t sub_1A7315234()
{
  unint64_t result = qword_1EB703228;
  if (!qword_1EB703228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703228);
  }
  return result;
}

unint64_t sub_1A731528C()
{
  unint64_t result = qword_1EB7016E0;
  if (!qword_1EB7016E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7016E0);
  }
  return result;
}

unint64_t sub_1A73152E4()
{
  unint64_t result = qword_1EB7016D8;
  if (!qword_1EB7016D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7016D8);
  }
  return result;
}

uint64_t sub_1A7315338(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001A759F540 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656B6F74 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A7315420(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001A759F560 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A759F580 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C64657461647075 && a2 == 0xEE00734449747369)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A7315590(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64616F6C6572 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6572636E69 && a2 == 0xEB000000006C6174)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A7315694(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001A759F560)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1A731571C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000001A759F5A0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1A73157A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265646E696D6572 && a2 == 0xEF746C7573655273;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A759F540)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1A73158B8()
{
  unint64_t result = qword_1E96F1588;
  if (!qword_1E96F1588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1588);
  }
  return result;
}

void sub_1A731590C()
{
}

uint64_t sub_1A7315924(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB705938);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A7315984()
{
  unint64_t result = qword_1E96F15F8;
  if (!qword_1E96F15F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F15F8);
  }
  return result;
}

unint64_t sub_1A73159D8()
{
  unint64_t result = qword_1E96F1608;
  if (!qword_1E96F1608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1608);
  }
  return result;
}

unint64_t sub_1A7315A2C()
{
  unint64_t result = qword_1E96F1640;
  if (!qword_1E96F1640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1640);
  }
  return result;
}

unint64_t sub_1A7315A80()
{
  unint64_t result = qword_1E96F1650;
  if (!qword_1E96F1650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1650);
  }
  return result;
}

unint64_t sub_1A7315AD4()
{
  unint64_t result = qword_1E96F1670;
  if (!qword_1E96F1670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1670);
  }
  return result;
}

uint64_t sub_1A7315B28(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 80);
  id v3 = *(id *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A7315C10(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1A7315C10(void *result)
{
  if (result)
  {
    id v1 = result;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A7315C50(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 72);
  unsigned int v4 = *(void **)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1A7315D30(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1A7315D30(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A7315D70()
{
  unint64_t result = qword_1E96F1700;
  if (!qword_1E96F1700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1700);
  }
  return result;
}

unint64_t sub_1A7315DC4()
{
  unint64_t result = qword_1E96F1708;
  if (!qword_1E96F1708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1708);
  }
  return result;
}

unint64_t sub_1A7315E18()
{
  unint64_t result = qword_1EB702F88;
  if (!qword_1EB702F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB702F88);
  }
  return result;
}

unint64_t sub_1A7315E6C()
{
  unint64_t result = qword_1E96F1718;
  if (!qword_1E96F1718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1718);
  }
  return result;
}

unint64_t sub_1A7315EC0()
{
  unint64_t result = qword_1E96F1728;
  if (!qword_1E96F1728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1728);
  }
  return result;
}

unint64_t sub_1A7315F14()
{
  unint64_t result = qword_1E96F1730;
  if (!qword_1E96F1730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1730);
  }
  return result;
}

unint64_t sub_1A7315F68()
{
  unint64_t result = qword_1E96F1740;
  if (!qword_1E96F1740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1740);
  }
  return result;
}

unint64_t sub_1A7315FBC()
{
  unint64_t result = qword_1E96F1750;
  if (!qword_1E96F1750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1750);
  }
  return result;
}

unint64_t sub_1A7316010()
{
  unint64_t result = qword_1E96F1758;
  if (!qword_1E96F1758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1758);
  }
  return result;
}

unint64_t sub_1A7316064()
{
  unint64_t result = qword_1E96F1770;
  if (!qword_1E96F1770)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F1768);
    sub_1A72F0548(&qword_1E96F1778, (void (*)(uint64_t))type metadata accessor for REMHashtagLabelDetailed_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1770);
  }
  return result;
}

unint64_t sub_1A7316108()
{
  unint64_t result = qword_1EB6FFEA0;
  if (!qword_1EB6FFEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FFEA0);
  }
  return result;
}

unint64_t sub_1A731615C()
{
  unint64_t result = qword_1EB7042B0;
  if (!qword_1EB7042B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB705760);
    sub_1A72F0548(&qword_1EB704280, (void (*)(uint64_t))type metadata accessor for REMHashtagLabel_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7042B0);
  }
  return result;
}

unint64_t sub_1A7316200()
{
  unint64_t result = qword_1E96F1780;
  if (!qword_1E96F1780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1780);
  }
  return result;
}

unint64_t sub_1A7316254()
{
  unint64_t result = qword_1E96F1790;
  if (!qword_1E96F1790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1790);
  }
  return result;
}

uint64_t sub_1A73162A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if ((a22 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A73163B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A7316400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  if ((a59 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A73166C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  if (a10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    char v12 = a9 & 1;
    return sub_1A7316744(a1, a2, a3, a4, a5, a6, a7, a8, v12);
  }
}

uint64_t sub_1A7316744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A73167B4(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t, char), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))
{
  uint64_t v41 = *(void *)(a1 + 176);
  uint64_t v40 = *(void *)(a1 + 184);
  uint64_t v39 = *(void *)(a1 + 192);
  uint64_t v38 = *(void *)(a1 + 200);
  uint64_t v37 = *(void *)(a1 + 208);
  uint64_t v36 = *(void *)(a1 + 216);
  uint64_t v35 = *(void *)(a1 + 224);
  unsigned int v34 = *(unsigned __int8 *)(a1 + 232);
  uint64_t v62 = *(void *)(a1 + 248);
  uint64_t v63 = *(void *)(a1 + 240);
  uint64_t v60 = *(void *)(a1 + 264);
  uint64_t v61 = *(void *)(a1 + 256);
  uint64_t v58 = *(void *)(a1 + 280);
  uint64_t v59 = *(void *)(a1 + 272);
  long long v55 = *(_OWORD *)(a1 + 320);
  long long v56 = *(_OWORD *)(a1 + 304);
  long long v53 = *(_OWORD *)(a1 + 352);
  long long v54 = *(_OWORD *)(a1 + 336);
  long long v51 = *(_OWORD *)(a1 + 384);
  long long v52 = *(_OWORD *)(a1 + 368);
  long long v49 = *(_OWORD *)(a1 + 416);
  long long v50 = *(_OWORD *)(a1 + 400);
  long long v47 = *(_OWORD *)(a1 + 448);
  long long v48 = *(_OWORD *)(a1 + 432);
  long long v46 = *(_OWORD *)(a1 + 464);
  long long v33 = *(_OWORD *)(a1 + 480);
  long long v29 = *(_OWORD *)(a1 + 512);
  long long v30 = *(_OWORD *)(a1 + 496);
  long long v27 = *(_OWORD *)(a1 + 544);
  long long v28 = *(_OWORD *)(a1 + 528);
  long long v25 = *(_OWORD *)(a1 + 576);
  long long v26 = *(_OWORD *)(a1 + 560);
  long long v23 = *(_OWORD *)(a1 + 608);
  long long v24 = *(_OWORD *)(a1 + 592);
  long long v21 = *(_OWORD *)(a1 + 640);
  long long v22 = *(_OWORD *)(a1 + 624);
  long long v19 = *(_OWORD *)(a1 + 672);
  long long v20 = *(_OWORD *)(a1 + 656);
  char v31 = *(unsigned char *)(a1 + 777);
  uint64_t v7 = *(void *)(a1 + 288);
  uint64_t v6 = *(void *)(a1 + 296);
  uint64_t v8 = *(void *)(a1 + 688);
  uint64_t v9 = *(void *)(a1 + 696);
  char v10 = *(unsigned char *)(a1 + 704);
  uint64_t v11 = *(void *)(a1 + 712);
  uint64_t v12 = *(void *)(a1 + 720);
  uint64_t v13 = *(void *)(a1 + 728);
  uint64_t v32 = *(void *)(a1 + 736);
  uint64_t v42 = *(void *)(a1 + 744);
  uint64_t v43 = *(void *)(a1 + 752);
  uint64_t v44 = *(void *)(a1 + 760);
  uint64_t v45 = *(void *)(a1 + 768);
  char v14 = *(unsigned char *)(a1 + 776);
  char v17 = *(unsigned char *)(a1 + 168);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    v17);
  a3(v41, v40, v39, v38, v37, v36, v35, v34);
  char v18 = v10;
  a4(v63, v62, v61, v60, v59, v58, v7, v6, v56, *((void *)&v56 + 1), v55, *((void *)&v55 + 1), v54, *((void *)&v54 + 1), v53, *((void *)&v53 + 1), v52, *((void *)&v52 + 1), v51,
    *((void *)&v51 + 1),
    v50,
    *((void *)&v50 + 1),
    v49,
    *((void *)&v49 + 1),
    v48,
    *((void *)&v48 + 1),
    v47,
    *((void *)&v47 + 1),
    v46,
    *((void *)&v46 + 1),
    v33,
    *((void *)&v33 + 1),
    v30,
    *((void *)&v30 + 1),
    v29,
    *((void *)&v29 + 1),
    v28,
    *((void *)&v28 + 1),
    v27,
    *((void *)&v27 + 1),
    v26,
    *((void *)&v26 + 1),
    v25,
    *((void *)&v25 + 1),
    v24,
    *((void *)&v24 + 1),
    v23,
    *((void *)&v23 + 1),
    v22,
    *((void *)&v22 + 1),
    v21,
    *((void *)&v21 + 1),
    v20,
    *((void *)&v20 + 1),
    v19,
    *((void *)&v19 + 1),
    v8,
    v9,
    v18);
  BYTE1(v16) = v31;
  LOBYTE(v16) = v14;
  a5(v11, v12, v13, v32, v42, v43, v44, v45, v16);
  return a1;
}

uint64_t sub_1A7316AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if ((a22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7316BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A7316C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  if ((a59 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7316EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  if (a10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = a9 & 1;
    return sub_1A7316F60(a1, a2, a3, a4, a5, a6, a7, a8, v12);
  }
}

uint64_t sub_1A7316F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

unint64_t sub_1A7316FD0()
{
  unint64_t result = qword_1E96F1798;
  if (!qword_1E96F1798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1798);
  }
  return result;
}

unint64_t sub_1A7317024()
{
  unint64_t result = qword_1E96F17A8;
  if (!qword_1E96F17A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F17A8);
  }
  return result;
}

unint64_t sub_1A7317078()
{
  unint64_t result = qword_1E96F17B8;
  if (!qword_1E96F17B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F17B8);
  }
  return result;
}

unint64_t sub_1A73170CC()
{
  unint64_t result = qword_1EB700AF0;
  if (!qword_1EB700AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700AF0);
  }
  return result;
}

unint64_t sub_1A7317120()
{
  unint64_t result = qword_1EB700AD8;
  if (!qword_1EB700AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700AD8);
  }
  return result;
}

unint64_t sub_1A7317174()
{
  unint64_t result = qword_1EB700B08;
  if (!qword_1EB700B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB700B08);
  }
  return result;
}

unint64_t sub_1A73171C8()
{
  unint64_t result = qword_1EB704288;
  if (!qword_1EB704288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704288);
  }
  return result;
}

unint64_t sub_1A731721C()
{
  unint64_t result = qword_1EB703A50;
  if (!qword_1EB703A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703A50);
  }
  return result;
}

uint64_t sub_1A7317270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = vars8;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A73172BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = vars8;
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A7317308()
{
  unint64_t result = qword_1EB703A68;
  if (!qword_1EB703A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703A68);
  }
  return result;
}

unint64_t sub_1A731735C()
{
  unint64_t result = qword_1EB703A70;
  if (!qword_1EB703A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB703A70);
  }
  return result;
}

uint64_t sub_1A73173B0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 88);
  uint64_t v8 = *(void *)(a1 + 96);
  uint64_t v9 = *(void *)(a1 + 104);
  uint64_t v10 = *(void *)(a1 + 112);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 120);
  uint64_t v19 = *(void *)(a1 + 136);
  uint64_t v20 = *(void *)(a1 + 128);
  uint64_t v17 = *(void *)(a1 + 152);
  uint64_t v18 = *(void *)(a1 + 144);
  uint64_t v15 = *(void *)(a1 + 168);
  uint64_t v16 = *(void *)(a1 + 160);
  uint64_t v14 = *(void *)(a1 + 176);
  unsigned int v13 = *(unsigned __int8 *)(a1 + 184);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  a2(v4, v5, v6, v7, v8, v9, v10, v11);
  a2(v20, v19, v18, v17, v16, v15, v14, v13);
  return a1;
}

unint64_t sub_1A73174A8()
{
  unint64_t result = qword_1E96F17C0;
  if (!qword_1E96F17C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F17C0);
  }
  return result;
}

unint64_t sub_1A73174FC()
{
  unint64_t result = qword_1E96F17D0;
  if (!qword_1E96F17D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F17D0);
  }
  return result;
}

unint64_t sub_1A7317550()
{
  unint64_t result = qword_1E96F17D8;
  if (!qword_1E96F17D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F17D8);
  }
  return result;
}

uint64_t sub_1A73175A4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 56);
  id v3 = *(id *)a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A7315C10(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A7317670(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  id v3 = *(void **)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1A7315D30(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A7317738(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A7317788(uint64_t a1)
{
  id v3 = *(void **)(a1 + 48);
  uint64_t v2 = *(void **)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = v3;
  sub_1A7315C10(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A7317850(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 56);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A7315D30(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1A731791C()
{
  unint64_t result = qword_1EB6FFE88;
  if (!qword_1EB6FFE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FFE88);
  }
  return result;
}

unint64_t sub_1A7317970()
{
  unint64_t result = qword_1EB7037C0;
  if (!qword_1EB7037C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7037C0);
  }
  return result;
}

uint64_t sub_1A73179C4(uint64_t a1)
{
  id v2 = *(id *)(a1 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A7317A84(uint64_t a1)
{
  id v3 = *(void **)(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

unint64_t sub_1A7317B40()
{
  unint64_t result = qword_1E96F1830;
  if (!qword_1E96F1830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1830);
  }
  return result;
}

uint64_t sub_1A7317B94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A7317BFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A7317C64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A7317CC4()
{
  unint64_t result = qword_1E96F1860;
  if (!qword_1E96F1860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1860);
  }
  return result;
}

unint64_t sub_1A7317D18()
{
  unint64_t result = qword_1E96F1880;
  if (!qword_1E96F1880)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F1878);
    sub_1A72F0548(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    sub_1A72F0548(&qword_1EB705890, (void (*)(uint64_t))type metadata accessor for REMList_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1880);
  }
  return result;
}

unint64_t sub_1A7317DF4()
{
  unint64_t result = qword_1EB701970;
  if (!qword_1EB701970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701970);
  }
  return result;
}

unint64_t sub_1A7317E48()
{
  unint64_t result = qword_1EB701A00;
  if (!qword_1EB701A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701A00);
  }
  return result;
}

unint64_t sub_1A7317E9C()
{
  unint64_t result = qword_1EB701A28;
  if (!qword_1EB701A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701A28);
  }
  return result;
}

unint64_t sub_1A7317EF0()
{
  unint64_t result = qword_1EB701A30;
  if (!qword_1EB701A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB701A30);
  }
  return result;
}

unint64_t sub_1A7317F44()
{
  unint64_t result = qword_1E96F1888;
  if (!qword_1E96F1888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1888);
  }
  return result;
}

unint64_t sub_1A7317F98()
{
  unint64_t result = qword_1E96F1898;
  if (!qword_1E96F1898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1898);
  }
  return result;
}

unint64_t sub_1A7317FEC()
{
  unint64_t result = qword_1E96F18B0;
  if (!qword_1E96F18B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F18B0);
  }
  return result;
}

uint64_t sub_1A7318040(uint64_t a1)
{
  id v2 = *(void **)(a1 + 88);
  uint64_t v5 = *(void **)(a1 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  sub_1A7315C10(v5);
  return a1;
}

uint64_t sub_1A7318104(uint64_t a1)
{
  id v2 = *(void **)(a1 + 96);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A7315D30(v2);
  return a1;
}

unint64_t sub_1A73181CC()
{
  unint64_t result = qword_1E96F18B8;
  if (!qword_1E96F18B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F18B8);
  }
  return result;
}

unint64_t sub_1A7318220()
{
  unint64_t result = qword_1E96F18C8;
  if (!qword_1E96F18C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F18C8);
  }
  return result;
}

unint64_t sub_1A7318274()
{
  unint64_t result = qword_1E96F18D0;
  if (!qword_1E96F18D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F18D0);
  }
  return result;
}

unint64_t sub_1A73182C8()
{
  unint64_t result = qword_1EB704C50;
  if (!qword_1EB704C50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7058E0);
    sub_1A72F0548(&qword_1EB704C48, (void (*)(uint64_t))type metadata accessor for REMReminder_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704C50);
  }
  return result;
}

void sub_1A731836C()
{
  sub_1A7313620(*(void ***)(v0 + 16), **(void ***)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t REMManualOrderingListType.init(intValue:)(unsigned __int16 a1)
{
  return sub_1A73184D4(a1) & 0x1FFFF;
}

unint64_t REMManualOrderingListType.description.getter(unsigned __int16 a1)
{
  int v1 = a1 - 1;
  unint64_t result = 0xD000000000000013;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x6D536D6F74737563;
      break;
    case 2:
      unint64_t result = 0x646567676174;
      break;
    case 3:
      unint64_t result = 0x64656E6E6970;
      break;
    case 4:
      unint64_t result = 0x6574616C706D6574;
      break;
    case 5:
      unint64_t result = 0x6D65526465766173;
      break;
    default:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_1A73184D4(unsigned __int16 a1)
{
  int v1 = a1;
  int v2 = 0;
  switch(a1)
  {
    case 1u:
      return v1 | (v2 << 16);
    case 2u:
      int v2 = 0;
      int v1 = 2;
      break;
    case 3u:
      int v2 = 0;
      int v1 = 3;
      break;
    case 4u:
      int v2 = 0;
      int v1 = 4;
      break;
    case 5u:
      int v2 = 0;
      int v1 = 5;
      break;
    default:
      int v2 = a1 != 6;
      if (a1 == 6) {
        int v1 = 6;
      }
      else {
        int v1 = 0;
      }
      break;
  }
  return v1 | (v2 << 16);
}

void ACAccount.rem_childCalDAVAccountEnabledForReminders.getter()
{
  id v1 = objc_msgSend(v0, sel_displayAccount);
  if (!v1) {
    return;
  }
  int v2 = v1;
  id v3 = objc_msgSend(v1, sel_childAccountsWithAccountTypeIdentifier_, *MEMORY[0x1E4F17770]);
  if (!v3)
  {

    return;
  }
  sub_1A731874C();
  unint64_t v4 = sub_1A7572A10();

  if (!(v4 >> 62))
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_18:

    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1A75738D0();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_18;
  }
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x1AD0CB800](0, v4);
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_21;
    }
    id v5 = *(id *)(v4 + 32);
  }
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v6, sel_enabledDataclasses);
  if (!v7)
  {
LABEL_21:
    __break(1u);
    return;
  }
  uint64_t v8 = v7;
  unsigned __int8 v9 = objc_msgSend(v7, sel_containsObject_, *MEMORY[0x1E4F17B08]);

  if (v9)
  {
    if (objc_msgSend(v6, sel_accountPropertyForKey_, *MEMORY[0x1E4F94D78]))
    {
      sub_1A7573330();

      swift_unknownObjectRelease();
    }
    else
    {

      memset(v11, 0, sizeof(v11));
    }
    sub_1A7315924((uint64_t)v11);
  }
  else
  {
  }
}

unint64_t sub_1A731874C()
{
  unint64_t result = qword_1EB703C98;
  if (!qword_1EB703C98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB703C98);
  }
  return result;
}

uint64_t sub_1A731878C()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F18E0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F18E0);
  if (qword_1EB6FFF40 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F00);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t REMSiriSearchDataView.ListsResult.lists.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSiriSearchDataView.ListsResult.smartLists.getter()
{
  return swift_bridgeObjectRetain();
}

ReminderKitInternal::REMSiriSearchDataView::ListsResult __swiftcall REMSiriSearchDataView.ListsResult.init(lists:smartLists:)(Swift::OpaquePointer lists, Swift::OpaquePointer smartLists)
{
  v2->_unint64_t rawValue = lists._rawValue;
  v2[1]._unint64_t rawValue = smartLists._rawValue;
  result.smartLists = smartLists;
  result.lists = lists;
  return result;
}

uint64_t sub_1A731886C()
{
  if (*v0) {
    return 0x73694C7472616D73;
  }
  else {
    return 0x737473696CLL;
  }
}

uint64_t sub_1A73188A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A731E998(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A73188D0(uint64_t a1)
{
  unint64_t v2 = sub_1A7318AF8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A731890C(uint64_t a1)
{
  unint64_t v2 = sub_1A7318AF8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSiriSearchDataView.ListsResult_Codable.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F18F8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7318AF8();
  sub_1A75741B0();
  uint64_t v12 = v8;
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1908);
  sub_1A7318B4C();
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1918);
    sub_1A7318BF0();
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A7318AF8()
{
  unint64_t result = qword_1E96F1900;
  if (!qword_1E96F1900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1900);
  }
  return result;
}

unint64_t sub_1A7318B4C()
{
  unint64_t result = qword_1E96F1910;
  if (!qword_1E96F1910)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F1908);
    sub_1A731DC28(&qword_1EB705888, (void (*)(uint64_t))type metadata accessor for REMList_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1910);
  }
  return result;
}

unint64_t sub_1A7318BF0()
{
  unint64_t result = qword_1E96F1920;
  if (!qword_1E96F1920)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F1918);
    sub_1A731DC28(&qword_1EB703F48, (void (*)(uint64_t))type metadata accessor for REMSmartList_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1920);
  }
  return result;
}

uint64_t REMSiriSearchDataView.ListsResult_Codable.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1928);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7318AF8();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1908);
  char v13 = 0;
  sub_1A7318EBC();
  sub_1A7573A50();
  uint64_t v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1918);
  char v13 = 1;
  sub_1A7318F60();
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v14;
  *a2 = v9;
  a2[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A7318EBC()
{
  unint64_t result = qword_1E96F1930;
  if (!qword_1E96F1930)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F1908);
    sub_1A731DC28(&qword_1EB705890, (void (*)(uint64_t))type metadata accessor for REMList_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1930);
  }
  return result;
}

unint64_t sub_1A7318F60()
{
  unint64_t result = qword_1E96F1938;
  if (!qword_1E96F1938)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F1918);
    sub_1A731DC28(&qword_1EB703698, (void (*)(uint64_t))type metadata accessor for REMSmartList_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1938);
  }
  return result;
}

uint64_t sub_1A7319004@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMSiriSearchDataView.ListsResult_Codable.init(from:)(a1, a2);
}

uint64_t sub_1A731901C(void *a1)
{
  return REMSiriSearchDataView.ListsResult_Codable.encode(to:)(a1);
}

uint64_t static REMSiriSearchDataView.fetchReminders(store:criteria:fetchOptions:diffingAgainst:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (a3) {
    id v9 = a3;
  }
  else {
    id v9 = objc_msgSend(self, sel_defaultFetchOptions);
  }
  Options_Codable = (objc_class *)type metadata accessor for REMReminderFetchOptions_Codable();
  v21.receiver = objc_allocWithZone(Options_Codable);
  v21.super_class = Options_Codable;
  id v11 = a3;
  id v12 = v9;
  id v13 = objc_msgSendSuper2(&v21, sel_init);
  objc_msgSend(v13, sel_copyFromFetchOptions_, v12);

  *(void *)&long long v22 = a2;
  *((void *)&v22 + 1) = v13;
  uint64_t v23 = 0;
  char v24 = 0;
  uint64_t v25 = 51;
  char v26 = 0;
  id v14 = objc_allocWithZone((Class)type metadata accessor for REMSiriSearchDataView.RemindersByCriteriaInvocation());
  swift_bridgeObjectRetain();
  id v15 = v13;
  id v16 = objc_msgSend(v14, sel_initWithFetchResultTokenToDiffAgainst_, a4);
  sub_1A72F2900((uint64_t)v16, &v22, v20);
  if (v4)
  {
    swift_bridgeObjectRelease();
  }
  else
  {

    uint64_t v17 = v20[0];
    uint64_t v18 = (void *)v20[1];
    if ((unint64_t)v20[0] >> 62)
    {
      sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1310);
      swift_bridgeObjectRetain();
      a1 = sub_1A7573850();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1A7573DE0();
      sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1310);

      a1 = v17;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return a1;
}

void static REMSiriSearchDataView.fetchLists(store:criteria:diffingAgainst:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  id v8 = objc_allocWithZone((Class)type metadata accessor for REMSiriSearchDataView.ListsByCriteriaInvocation());
  swift_bridgeObjectRetain();
  id v9 = objc_msgSend(v8, sel_initWithFetchResultTokenToDiffAgainst_, a2);
  sub_1A72F34A0((uint64_t)v9, a1, v15);
  swift_bridgeObjectRelease();

  if (!v4)
  {
    uint64_t v10 = v15[0];
    unint64_t v11 = v15[1];
    id v12 = (void *)v15[2];
    if ((unint64_t)v15[0] >> 62)
    {
      sub_1A72BEFEC(0, &qword_1E96F1940);
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1A7573850();
      swift_bridgeObjectRelease();
      if (!(v11 >> 62)) {
        goto LABEL_4;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1A7573DE0();
      sub_1A72BEFEC(0, &qword_1E96F1940);
      uint64_t v13 = v10;
      if (!(v11 >> 62))
      {
LABEL_4:
        swift_bridgeObjectRetain();
        sub_1A7573DE0();
        sub_1A72BEFEC(0, &qword_1E96F1948);
        uint64_t v14 = v11;
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        *a3 = v13;
        a3[1] = v14;
        return;
      }
    }
    sub_1A72BEFEC(0, &qword_1E96F1948);
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1A7573850();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
}

id REMSiriSearchDataView.ListsByCriteriaInvocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

uint64_t static REMSiriSearchDataView.fetchReminders(store:inCustomSmartList:diffingAgainst:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation.Parameters(0);
  uint64_t v7 = (int *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_allocWithZone((Class)type metadata accessor for REMSmartList_Codable());
  id v10 = a2;
  id v11 = REMSmartList_Codable.init(_:)(v10);
  type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  swift_storeEnumTagMultiPayload();
  *(void *)&v9[v7[10]] = 51;
  type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  swift_storeEnumTagMultiPayload();
  *(void *)id v9 = v11;
  v9[8] = 0x80;
  v9[v7[9]] = 0;
  v9[v7[11]] = 2;
  v9[v7[12]] = 0;
  id v12 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a3);
  uint64_t v13 = a1;
  uint64_t v14 = v46;
  sub_1A72F4028((uint64_t)v12, (uint64_t)v9, (uint64_t)v49);
  if (v14)
  {

    sub_1A731D078((uint64_t)v9);
  }
  else
  {
    uint64_t v42 = 0;

    v47[6] = v54;
    v47[7] = v55;
    uint64_t v48 = v56;
    v47[0] = v49[0];
    v47[1] = v49[1];
    _OWORD v47[2] = v50;
    v47[3] = v51;
    v47[4] = v52;
    v47[5] = v53;
    long long v15 = v50;
    id v16 = (void *)*((void *)&v53 + 1);
    long long v17 = v54;
    long long v18 = v55;
    uint64_t v44 = *(void *)&v49[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = *((void *)&v15 + 1);
    swift_bridgeObjectRetain();
    id v39 = v16;
    uint64_t v45 = *((void *)&v18 + 1);
    long long v46 = (void *)v17;
    sub_1A7315C10((void *)v17);
    uint64_t v19 = qword_1E96F0700;
    swift_bridgeObjectRetain();
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A7571E90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E96F18E0);
    id v21 = v10;
    swift_bridgeObjectRetain_n();
    id v22 = v21;
    uint64_t v23 = sub_1A7571E80();
    int v24 = sub_1A7572FF0();
    uint64_t v41 = v23;
    BOOL v25 = os_log_type_enabled(v23, (os_log_type_t)v24);
    unint64_t v43 = (unint64_t)v15 >> 62;
    if (v25)
    {
      int v36 = v24;
      uint64_t v37 = v18;
      uint64_t v38 = *((void *)&v17 + 1);
      uint64_t v26 = swift_slowAlloc();
      long long v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138412546;
      id v28 = objc_msgSend(*((id *)&v15 + 1), sel_objectID);
      uint64_t v57 = (uint64_t)v28;
      long long v29 = v27;
      sub_1A7573250();
      *long long v27 = v28;

      *(_WORD *)(v26 + 12) = 2048;
      if ((unint64_t)v15 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_1A75738D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v30 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      os_log_type_t v31 = v36;
      swift_bridgeObjectRelease();
      uint64_t v57 = v30;
      sub_1A7573250();
      swift_bridgeObjectRelease();
      uint64_t v32 = v41;
      _os_log_impl(&dword_1A72A1000, v41, v31, "SIRISEARCH_DATAVIEW RESULT {name: REMRemindersListDataView_CustomSmartListInvocation, smartList.objectID: %@, prefetchedReminders.count: %ld}", (uint8_t *)v26, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702870);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v29, -1, -1);
      MEMORY[0x1AD0CD330](v26, -1, -1);

      long long v33 = v46;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      long long v33 = v46;
    }
    if (v43)
    {
      sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1310);
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1A7573850();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1A7573DE0();
      sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1310);

      uint64_t v13 = v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A7315D30(v33);
    sub_1A731D0D4((uint64_t)v47);
    swift_bridgeObjectRelease();
    sub_1A731D078((uint64_t)v9);
  }
  return v13;
}

uint64_t static REMSiriSearchDataView.RemindersByCriteriaInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.criteria.getter()
{
  return swift_bridgeObjectRetain();
}

id REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.reminderFetchOptions.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.fetchOffset.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.fetchLimit.getter()
{
  return *(void *)(v0 + 32);
}

unint64_t sub_1A7319994()
{
  unint64_t result = 0x6169726574697263;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x66664F6863746566;
      break;
    case 3:
      unint64_t result = 0x6D694C6863746566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A7319A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A731EA90(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A7319A5C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1A7319A68(uint64_t a1)
{
  unint64_t v2 = sub_1A731D1A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7319AA4(uint64_t a1)
{
  unint64_t v2 = sub_1A731D1A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1950);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v14 = v1[2];
  uint64_t v15 = v8;
  int v13 = *((unsigned __int8 *)v1 + 24);
  uint64_t v12 = v1[4];
  v11[1] = *((unsigned __int8 *)v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A731D1A8();
  sub_1A75741B0();
  uint64_t v17 = v9;
  char v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1960);
  sub_1A731D1FC();
  sub_1A7573B60();
  if (!v2)
  {
    uint64_t v17 = v15;
    char v16 = 1;
    type metadata accessor for REMReminderFetchOptions_Codable();
    sub_1A731DC28(&qword_1E96F1978, (void (*)(uint64_t))type metadata accessor for REMReminderFetchOptions_Codable);
    sub_1A7573B60();
    LOBYTE(v17) = 2;
    sub_1A7573AF0();
    LOBYTE(v17) = 3;
    sub_1A7573AF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1980);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A731D1A8();
  sub_1A7574190();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1960);
    char v22 = 0;
    sub_1A731D2A0();
    sub_1A7573A50();
    uint64_t v9 = v23;
    type metadata accessor for REMReminderFetchOptions_Codable();
    char v22 = 1;
    sub_1A731DC28(&qword_1E96F1998, (void (*)(uint64_t))type metadata accessor for REMReminderFetchOptions_Codable);
    swift_bridgeObjectRetain();
    sub_1A7573A50();
    id v10 = v23;
    LOBYTE(v23) = 2;
    id v21 = v10;
    uint64_t v11 = sub_1A75739E0();
    HIDWORD(v19) = v12;
    uint64_t v20 = v11;
    LOBYTE(v23) = 3;
    uint64_t v13 = sub_1A75739E0();
    uint64_t v14 = v8;
    char v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
    uint64_t v17 = v20;
    long long v18 = v21;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v18;
    *(void *)(a2 + 16) = v17;
    *(unsigned char *)(a2 + 24) = BYTE4(v19) & 1;
    *(void *)(a2 + 32) = v13;
    *(unsigned char *)(a2 + 40) = v16 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_bridgeObjectRelease();
  }
}

void sub_1A731A05C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1A731A074(void *a1)
{
  return REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.encode(to:)(a1);
}

uint64_t static REMSiriSearchDataView.ListsByCriteriaInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.criteria.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A731A0BC()
{
  return 0x6169726574697263;
}

uint64_t sub_1A731A0D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6169726574697263 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A731A16C(uint64_t a1)
{
  unint64_t v2 = sub_1A731D344();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A731A1A8(uint64_t a1)
{
  unint64_t v2 = sub_1A731D344();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F19A0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A731D344();
  sub_1A75741B0();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1960);
  sub_1A731D1FC();
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F19B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A731D344();
  sub_1A7574190();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1960);
    sub_1A731D2A0();
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A731A4AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A731A4C4(void *a1)
{
  return REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.encode(to:)(a1);
}

id _s19ReminderKitInternal21REMSiriSearchDataViewC29RemindersByCriteriaInvocationC29fetchResultTokenToDiffAgainstAESo08REMFetchmN0CSg_tcfc_0(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMSiriSearchDataView.ListsByCriteriaInvocation.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id _s19ReminderKitInternal21REMSiriSearchDataViewC29RemindersByCriteriaInvocationC5coderAESgSo7NSCoderC_tcfc_0(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id _s19ReminderKitInternal21REMSiriSearchDataViewC29RemindersByCriteriaInvocationCfD_0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t REMSiriSearchDataView.deinit()
{
  return v0;
}

uint64_t REMSiriSearchDataView.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

unint64_t sub_1A731A6BC(char a1)
{
  unint64_t result = 0x657079546D657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x44497463656A626FLL;
      break;
    case 2:
      unint64_t result = 0x49746E756F636361;
      break;
    case 3:
      unint64_t result = 0x44497473696CLL;
      break;
    case 4:
      unint64_t result = 0x466C617574786574;
      break;
    case 5:
      unint64_t result = 0x4E79616C70736964;
      break;
    case 6:
      unint64_t result = 0x656C706D6F437369;
      break;
    case 7:
      unint64_t result = 0x6974656C706D6F63;
      break;
    case 8:
      unint64_t result = 0x7461636F4C736168;
      break;
    case 9:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 10:
      unint64_t result = 0x65746144657564;
      break;
    case 11:
      unint64_t result = 0x6144657544736168;
      break;
    case 12:
      unint64_t result = 0x6465696669646F6DLL;
      break;
    case 13:
      unint64_t result = 0x6E6F697461657263;
      break;
    case 14:
      unint64_t result = 0x7272756365527369;
      break;
    case 15:
      unint64_t result = 0x656767616C467369;
      break;
    case 16:
      unint64_t result = 0xD000000000000017;
      break;
    case 17:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 18:
      unint64_t result = 0x657079547473696CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A731A944(char *a1, char *a2)
{
  return sub_1A754459C(*a1, *a2);
}

uint64_t sub_1A731A950()
{
  return sub_1A7574110();
}

uint64_t sub_1A731A9AC()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A731A9EC()
{
  return sub_1A7574110();
}

uint64_t sub_1A731AA44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A731EC68();
  *a1 = result;
  return result;
}

void sub_1A731AA74(void *a1@<X8>)
{
  *a1 = *(void *)&aBase_10[8 * *v1];
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1A731AA90()
{
  return *(void *)&aBase_10[8 * *v0];
}

uint64_t sub_1A731AAA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A731EC68();
  *a1 = result;
  return result;
}

uint64_t sub_1A731AAD0(uint64_t a1)
{
  unint64_t v2 = sub_1A731D398();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A731AB0C(uint64_t a1)
{
  unint64_t v2 = sub_1A731D398();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A731AB48(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1A731A6BC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1A731A6BC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1A7573DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A731ABD4()
{
  char v1 = *v0;
  sub_1A75740C0();
  sub_1A731A6BC(v1);
  sub_1A75726F0();
  swift_bridgeObjectRelease();
  return sub_1A7574110();
}

uint64_t sub_1A731AC38()
{
  sub_1A731A6BC(*v0);
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A731AC8C()
{
  char v1 = *v0;
  sub_1A75740C0();
  sub_1A731A6BC(v1);
  sub_1A75726F0();
  swift_bridgeObjectRelease();
  return sub_1A7574110();
}

uint64_t sub_1A731ACEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A731ED08();
  *a1 = result;
  return result;
}

unint64_t sub_1A731AD1C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1A731A6BC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A731AD48()
{
  return sub_1A75729D0();
}

uint64_t sub_1A731ADA8()
{
  return sub_1A7572980();
}

uint64_t REMSearchCriterion.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v83 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v77 = (uint64_t)&v72 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v82 = (char *)&v72 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v78 = (uint64_t)&v72 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v75 = (char *)&v72 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v80 = (char *)&v72 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v76 = (char *)&v72 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v72 - v18;
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F19B8);
  uint64_t v84 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  id v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for REMSearchCriterion();
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  BOOL v25 = (uint64_t *)((char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  id v28 = (char *)&v72 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (uint64_t *)((char *)&v72 - v29);
  uint64_t v31 = a1[3];
  uint64_t v86 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v31);
  sub_1A731D398();
  uint64_t v32 = v85;
  sub_1A7574190();
  if (v32)
  {
    uint64_t v37 = (uint64_t)v86;
  }
  else
  {
    uint64_t v72 = v25;
    uint64_t v73 = (uint64_t *)v28;
    long long v33 = v80;
    uint64_t v34 = (uint64_t)v82;
    uint64_t v35 = (uint64_t)v83;
    uint64_t v85 = v22;
    uint64_t v74 = v30;
    char v88 = 0;
    sub_1A731D3EC();
    uint64_t v36 = v81;
    sub_1A7573A50();
    switch((char)v87)
    {
      case 1:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F19E8);
        char v88 = 1;
        sub_1A731D668();
        sub_1A7573A50();
        uint64_t v40 = v21;
        uint64_t v41 = v87;
        if (v87 >> 62)
        {
          sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
          swift_bridgeObjectRetain();
          uint64_t v42 = sub_1A7573850();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1A7573DE0();
          sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
          uint64_t v42 = v41;
        }
        uint64_t v43 = v79;
        uint64_t v44 = v73;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v40, v36);
        *uint64_t v44 = v42;
        swift_storeEnumTagMultiPayload();
        uint64_t v45 = (uint64_t)v44;
        id v39 = v74;
        goto LABEL_13;
      case 2:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F19E8);
        char v88 = 1;
        sub_1A731D668();
        sub_1A7573A50();
        long long v46 = v21;
        uint64_t v47 = v87;
        if (v87 >> 62)
        {
          sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
          swift_bridgeObjectRetain();
          uint64_t v48 = sub_1A7573850();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1A7573DE0();
          sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
          uint64_t v48 = v47;
        }
        uint64_t v43 = v79;
        id v39 = v74;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v46, v36);
        long long v49 = v72;
        *uint64_t v72 = v48;
        swift_storeEnumTagMultiPayload();
        uint64_t v45 = (uint64_t)v49;
LABEL_13:
        sub_1A731D494(v45, (uint64_t)v39);
        uint64_t v37 = (uint64_t)v86;
        goto LABEL_26;
      case 3:
        type metadata accessor for REMObjectID_Codable();
        char v88 = 1;
        sub_1A731DC28(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
        sub_1A7573A50();
        uint64_t v50 = v87;
        char v88 = 2;
        sub_1A731D614();
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v21, v36);
        char v62 = v87;
        id v39 = v74;
        *uint64_t v74 = v50;
        *((unsigned char *)v39 + 8) = v62;
        goto LABEL_23;
      case 4:
      case 5:
      case 9:
        LOBYTE(v87) = 1;
        long long v52 = v21;
        uint64_t v53 = sub_1A7573A00();
        uint64_t v55 = v54;
        char v88 = 2;
        sub_1A731D5C0();
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v36);
        char v65 = v87;
        id v39 = v74;
        *uint64_t v74 = v53;
        v39[1] = v55;
        *((unsigned char *)v39 + 16) = v65;
        goto LABEL_25;
      case 6:
      case 8:
      case 11:
      case 14:
      case 15:
        LOBYTE(v87) = 1;
        char v58 = sub_1A7573A10();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v21, v36);
        id v39 = v74;
        *(unsigned char *)uint64_t v74 = v58 & 1;
        goto LABEL_23;
      case 7:
        sub_1A7571B60();
        LOBYTE(v87) = 1;
        sub_1A731DC28((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
        sub_1A75739F0();
        LOBYTE(v87) = 2;
        uint64_t v51 = (uint64_t)v76;
        sub_1A75739F0();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v21, v36);
        uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670);
        id v39 = v74;
        uint64_t v64 = (uint64_t)v74 + *(int *)(v63 + 48);
        sub_1A731D558((uint64_t)v19, (uint64_t)v74);
        sub_1A731D558(v51, v64);
        goto LABEL_23;
      case 10:
        sub_1A7571B60();
        LOBYTE(v87) = 1;
        sub_1A731DC28((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
        uint64_t v56 = (uint64_t)v33;
        sub_1A75739F0();
        LOBYTE(v87) = 2;
        uint64_t v57 = (uint64_t)v75;
        sub_1A75739F0();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v21, v36);
        uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670);
        id v39 = v74;
        uint64_t v67 = (uint64_t)v74 + *(int *)(v66 + 48);
        sub_1A731D558(v56, (uint64_t)v74);
        sub_1A731D558(v57, v67);
        goto LABEL_25;
      case 12:
        sub_1A7571B60();
        LOBYTE(v87) = 1;
        sub_1A731DC28((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
        sub_1A75739F0();
        LOBYTE(v87) = 2;
        sub_1A75739F0();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v21, v36);
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670);
        id v39 = v74;
        uint64_t v69 = (uint64_t)v74 + *(int *)(v68 + 48);
        sub_1A731D558(v78, (uint64_t)v74);
        sub_1A731D558(v34, v69);
        goto LABEL_25;
      case 13:
        sub_1A7571B60();
        LOBYTE(v87) = 1;
        sub_1A731DC28((unint64_t *)&unk_1EB704AE0, MEMORY[0x1E4F27928]);
        sub_1A75739F0();
        LOBYTE(v87) = 2;
        sub_1A75739F0();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v21, v36);
        uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670);
        id v39 = v74;
        uint64_t v71 = (uint64_t)v74 + *(int *)(v70 + 48);
        sub_1A731D558(v77, (uint64_t)v74);
        sub_1A731D558(v35, v71);
        goto LABEL_25;
      case 16:
      case 17:
        LOBYTE(v87) = 1;
        uint64_t v59 = sub_1A7573A00();
        uint64_t v61 = v60;
        (*(void (**)(char *, uint64_t))(v84 + 8))(v21, v36);
        id v39 = v74;
        *uint64_t v74 = v59;
        v39[1] = v61;
LABEL_25:
        swift_storeEnumTagMultiPayload();
        uint64_t v37 = (uint64_t)v86;
        uint64_t v43 = v79;
        goto LABEL_26;
      case 18:
        char v88 = 1;
        sub_1A731D440();
        sub_1A7573A50();
        uint64_t v37 = (uint64_t)v86;
        (*(void (**)(char *, uint64_t))(v84 + 8))(v21, v36);
        id v39 = v74;
        *(unsigned char *)uint64_t v74 = v87;
        swift_storeEnumTagMultiPayload();
        goto LABEL_24;
      default:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F19F8);
        char v88 = 1;
        sub_1A731D70C(&qword_1E96F1A00, (void (*)(void))sub_1A731D77C);
        sub_1A7573A50();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v21, v36);
        id v39 = v74;
        *uint64_t v74 = v87;
LABEL_23:
        swift_storeEnumTagMultiPayload();
        uint64_t v37 = (uint64_t)v86;
LABEL_24:
        uint64_t v43 = v79;
LABEL_26:
        sub_1A731D494((uint64_t)v39, v43);
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1(v37);
}

void REMSearchCriterion.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v4 = MEMORY[0x1F4188790](v105);
  uint64_t v103 = (uint64_t)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v104 = (uint64_t)&v98 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v101 = (uint64_t)&v98 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v102 = (uint64_t)&v98 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v99 = (uint64_t)&v98 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v100 = (uint64_t)&v98 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v98 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v98 - v19;
  uint64_t v106 = sub_1A7571BC0();
  uint64_t v98 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v107 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for REMSearchCriterion();
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1A10);
  uint64_t v108 = *(void *)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  uint64_t v26 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A731D398();
  uint64_t v110 = v26;
  sub_1A75741B0();
  sub_1A731D7D0(v2, (uint64_t)v24);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v31 = *(void *)v24;
      LOBYTE(v114) = 1;
      char v116 = 0;
      sub_1A731D834();
      uint64_t v32 = v110;
      uint64_t v33 = v111;
      uint64_t v34 = v109;
      sub_1A7573B60();
      if (v34) {
        goto LABEL_17;
      }
      if (v31 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v35 = sub_1A75738D0();
        swift_bridgeObjectRelease();
        uint64_t v36 = v106;
        if (v35) {
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v35 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v36 = v106;
        if (v35)
        {
LABEL_8:
          uint64_t v104 = 0;
          id v114 = (id)MEMORY[0x1E4FBC860];
          sub_1A75736F0();
          if ((v35 & 0x8000000000000000) == 0)
          {
            uint64_t v37 = 0;
            unint64_t v105 = v31 & 0xC000000000000001;
            uint64_t v38 = (void (**)(char *, uint64_t))(v98 + 8);
            uint64_t v109 = v31;
            do
            {
              if (v105) {
                id v39 = (id)MEMORY[0x1AD0CB800](v37, v31);
              }
              else {
                id v39 = *(id *)(v31 + 8 * v37 + 32);
              }
              uint64_t v40 = v39;
              uint64_t v41 = (objc_class *)type metadata accessor for REMObjectID_Codable();
              id v42 = objc_allocWithZone(v41);
              id v43 = objc_msgSend(v40, sel_uuid);
              uint64_t v44 = v107;
              sub_1A7571BB0();

              uint64_t v45 = (void *)sub_1A7571B90();
              (*v38)(v44, v36);
              id v46 = objc_msgSend(v40, sel_entityName);
              if (!v46)
              {
                _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
                id v46 = (id)sub_1A75725E0();
                uint64_t v36 = v106;
                swift_bridgeObjectRelease();
              }
              ++v37;
              v112.receiver = v42;
              v112.super_class = v41;
              objc_msgSendSuper2(&v112, sel_initWithUUID_entityName_, v45, v46);

              sub_1A75736C0();
              sub_1A7573700();
              sub_1A7573710();
              sub_1A75736D0();
              unint64_t v31 = v109;
            }
            while (v35 != v37);
LABEL_61:
            id v88 = v114;
            swift_bridgeObjectRelease();
            uint64_t v32 = v110;
            uint64_t v33 = v111;
            goto LABEL_69;
          }
          __break(1u);
          goto LABEL_72;
        }
      }
      goto LABEL_68;
    case 2u:
      unint64_t v47 = *(void *)v24;
      LOBYTE(v114) = 2;
      char v116 = 0;
      sub_1A731D834();
      uint64_t v32 = v110;
      uint64_t v33 = v111;
      uint64_t v48 = v109;
      sub_1A7573B60();
      if (v48)
      {
LABEL_17:
        (*(void (**)(char *, uint64_t))(v108 + 8))(v32, v33);
        swift_bridgeObjectRelease();
        return;
      }
      if (v47 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v76 = sub_1A75738D0();
        swift_bridgeObjectRelease();
        uint64_t v77 = v106;
        if (v76)
        {
LABEL_53:
          uint64_t v104 = 0;
          id v114 = (id)MEMORY[0x1E4FBC860];
          sub_1A75736F0();
          if ((v76 & 0x8000000000000000) == 0)
          {
            uint64_t v78 = 0;
            unint64_t v105 = v47 & 0xC000000000000001;
            uint64_t v79 = (void (**)(char *, uint64_t))(v98 + 8);
            uint64_t v109 = v47;
            do
            {
              if (v105) {
                id v80 = (id)MEMORY[0x1AD0CB800](v78, v47);
              }
              else {
                id v80 = *(id *)(v47 + 8 * v78 + 32);
              }
              uint64_t v81 = v80;
              uint64_t v82 = (objc_class *)type metadata accessor for REMObjectID_Codable();
              id v83 = objc_allocWithZone(v82);
              id v84 = objc_msgSend(v81, sel_uuid);
              uint64_t v85 = v107;
              sub_1A7571BB0();

              uint64_t v86 = (void *)sub_1A7571B90();
              (*v79)(v85, v77);
              id v87 = objc_msgSend(v81, sel_entityName);
              if (!v87)
              {
                _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
                id v87 = (id)sub_1A75725E0();
                uint64_t v77 = v106;
                swift_bridgeObjectRelease();
              }
              ++v78;
              v113.receiver = v83;
              v113.super_class = v82;
              objc_msgSendSuper2(&v113, sel_initWithUUID_entityName_, v86, v87);

              sub_1A75736C0();
              sub_1A7573700();
              sub_1A7573710();
              sub_1A75736D0();
              unint64_t v47 = v109;
            }
            while (v76 != v78);
            goto LABEL_61;
          }
LABEL_72:
          __break(1u);
          JUMPOUT(0x1A731CFB4);
        }
      }
      else
      {
        uint64_t v76 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v77 = v106;
        if (v76) {
          goto LABEL_53;
        }
      }
LABEL_68:
      swift_bridgeObjectRelease();
      id v88 = (id)MEMORY[0x1E4FBC860];
LABEL_69:
      id v114 = v88;
      char v116 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F19E8);
      sub_1A731DA28();
      sub_1A7573B60();
      swift_bridgeObjectRelease();
LABEL_70:
      (*(void (**)(char *, uint64_t))(v108 + 8))(v32, v33);
      return;
    case 3u:
      id v49 = *(id *)v24;
      char v50 = v24[8];
      LOBYTE(v114) = 3;
      char v116 = 0;
      sub_1A731D834();
      uint64_t v51 = v110;
      uint64_t v52 = v111;
      uint64_t v53 = v109;
      sub_1A7573B60();
      if (v53)
      {
        (*(void (**)(char *, uint64_t))(v108 + 8))(v51, v52);
      }
      else
      {
        uint64_t v89 = (objc_class *)type metadata accessor for REMObjectID_Codable();
        id v90 = objc_allocWithZone(v89);
        id v49 = v49;
        id v91 = objc_msgSend(v49, sel_uuid);
        uint64_t v92 = v107;
        sub_1A7571BB0();

        char v93 = (void *)sub_1A7571B90();
        (*(void (**)(char *, uint64_t))(v98 + 8))(v92, v106);
        id v94 = objc_msgSend(v49, sel_entityName);
        if (!v94)
        {
          _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          id v94 = (id)sub_1A75725E0();
          swift_bridgeObjectRelease();
        }
        v115.receiver = v90;
        v115.super_class = v89;
        id v95 = objc_msgSendSuper2(&v115, sel_initWithUUID_entityName_, v93, v94);

        id v114 = v95;
        char v116 = 1;
        sub_1A731DC28(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
        id v96 = v110;
        uint64_t v97 = v111;
        sub_1A7573B60();

        LOBYTE(v114) = v50;
        char v116 = 2;
        sub_1A731D9D4();
        sub_1A7573B60();
        (*(void (**)(char *, uint64_t))(v108 + 8))(v96, v97);
      }

      return;
    case 4u:
      char v54 = v24[16];
      char v55 = 4;
      goto LABEL_29;
    case 5u:
      char v54 = v24[16];
      char v55 = 5;
      goto LABEL_29;
    case 6u:
      char v56 = 6;
      goto LABEL_41;
    case 7u:
      uint64_t v57 = (uint64_t)&v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48)];
      sub_1A731D558((uint64_t)v24, (uint64_t)v20);
      sub_1A731D558(v57, (uint64_t)v18);
      LOBYTE(v114) = 7;
      char v116 = 0;
      sub_1A731D834();
      uint64_t v32 = v110;
      uint64_t v33 = v111;
      uint64_t v58 = v109;
      sub_1A7573B60();
      if (!v58)
      {
        LOBYTE(v114) = 1;
        sub_1A731D8DC();
        sub_1A7573B60();
        LOBYTE(v114) = 2;
        sub_1A7573B60();
      }
      sub_1A731D4F8((uint64_t)v18);
      sub_1A731D4F8((uint64_t)v20);
      goto LABEL_70;
    case 8u:
      char v56 = 8;
      goto LABEL_41;
    case 9u:
      char v54 = v24[16];
      char v55 = 9;
LABEL_29:
      LOBYTE(v114) = v55;
      char v116 = 0;
      sub_1A731D834();
      uint64_t v59 = v110;
      uint64_t v60 = v111;
      uint64_t v61 = v109;
      sub_1A7573B60();
      if (v61)
      {
        (*(void (**)(char *, uint64_t))(v108 + 8))(v59, v60);
LABEL_48:
        swift_bridgeObjectRelease();
      }
      else
      {
        LOBYTE(v114) = 1;
        sub_1A7573B10();
        swift_bridgeObjectRelease();
        LOBYTE(v114) = v54;
        char v116 = 2;
        sub_1A731D980();
        sub_1A7573B60();
        (*(void (**)(char *, uint64_t))(v108 + 8))(v59, v60);
      }
      return;
    case 0xAu:
      uint64_t v62 = (uint64_t)&v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48)];
      uint64_t v63 = v100;
      sub_1A731D558((uint64_t)v24, v100);
      uint64_t v64 = v99;
      sub_1A731D558(v62, v99);
      char v65 = 10;
      goto LABEL_36;
    case 0xBu:
      char v56 = 11;
      goto LABEL_41;
    case 0xCu:
      uint64_t v66 = (uint64_t)&v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48)];
      uint64_t v63 = v102;
      sub_1A731D558((uint64_t)v24, v102);
      uint64_t v64 = v101;
      sub_1A731D558(v66, v101);
      char v65 = 12;
      goto LABEL_36;
    case 0xDu:
      uint64_t v67 = (uint64_t)&v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB700670) + 48)];
      uint64_t v63 = v104;
      sub_1A731D558((uint64_t)v24, v104);
      uint64_t v64 = v103;
      sub_1A731D558(v67, v103);
      char v65 = 13;
LABEL_36:
      LOBYTE(v114) = v65;
      char v116 = 0;
      sub_1A731D834();
      uint64_t v32 = v110;
      uint64_t v33 = v111;
      uint64_t v68 = v109;
      sub_1A7573B60();
      if (!v68)
      {
        LOBYTE(v114) = 1;
        sub_1A731D8DC();
        sub_1A7573B60();
        LOBYTE(v114) = 2;
        sub_1A7573B60();
      }
      sub_1A731D4F8(v64);
      sub_1A731D4F8(v63);
      goto LABEL_70;
    case 0xEu:
      char v56 = 14;
      goto LABEL_41;
    case 0xFu:
      char v56 = 15;
LABEL_41:
      LOBYTE(v114) = v56;
      char v116 = 0;
      sub_1A731D834();
      uint64_t v32 = v110;
      uint64_t v33 = v111;
      uint64_t v69 = v109;
      sub_1A7573B60();
      if (!v69)
      {
        LOBYTE(v114) = 1;
        sub_1A7573B20();
      }
      goto LABEL_70;
    case 0x10u:
      char v70 = 16;
      goto LABEL_45;
    case 0x11u:
      char v70 = 17;
LABEL_45:
      LOBYTE(v114) = v70;
      char v116 = 0;
      sub_1A731D834();
      uint64_t v71 = v110;
      uint64_t v72 = v111;
      uint64_t v73 = v109;
      sub_1A7573B60();
      if (!v73)
      {
        LOBYTE(v114) = 1;
        sub_1A7573B10();
      }
      (*(void (**)(char *, uint64_t))(v108 + 8))(v71, v72);
      goto LABEL_48;
    case 0x12u:
      char v74 = *v24;
      LOBYTE(v114) = 18;
      char v116 = 0;
      sub_1A731D834();
      uint64_t v32 = v110;
      uint64_t v33 = v111;
      uint64_t v75 = v109;
      sub_1A7573B60();
      if (!v75)
      {
        LOBYTE(v114) = v74;
        char v116 = 1;
        sub_1A731D888();
        sub_1A7573B60();
      }
      goto LABEL_70;
    default:
      uint64_t v27 = *(void **)v24;
      LOBYTE(v114) = 0;
      char v116 = 0;
      sub_1A731D834();
      id v28 = v110;
      uint64_t v29 = v111;
      uint64_t v30 = v109;
      sub_1A7573B60();
      if (!v30)
      {
        id v114 = v27;
        char v116 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F19F8);
        sub_1A731D70C(&qword_1E96F1A48, (void (*)(void))sub_1A731DACC);
        sub_1A7573B60();
      }
      (*(void (**)(char *, uint64_t))(v108 + 8))(v28, v29);
      goto LABEL_48;
  }
}

uint64_t sub_1A731D000@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSearchCriterion.init(from:)(a1, a2);
}

void sub_1A731D018(void *a1)
{
}

uint64_t type metadata accessor for REMSiriSearchDataView.RemindersByCriteriaInvocation()
{
  return self;
}

uint64_t type metadata accessor for REMSiriSearchDataView.ListsByCriteriaInvocation()
{
  return self;
}

uint64_t sub_1A731D078(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation.Parameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A731D0D4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 96);
  uint64_t v4 = *(void **)(a1 + 128);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A7315D30(v2);

  return a1;
}

unint64_t sub_1A731D1A8()
{
  unint64_t result = qword_1E96F1958;
  if (!qword_1E96F1958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1958);
  }
  return result;
}

unint64_t sub_1A731D1FC()
{
  unint64_t result = qword_1E96F1968;
  if (!qword_1E96F1968)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F1960);
    sub_1A731DC28(&qword_1E96F1970, (void (*)(uint64_t))type metadata accessor for REMSearchCriterion);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1968);
  }
  return result;
}

unint64_t sub_1A731D2A0()
{
  unint64_t result = qword_1E96F1988;
  if (!qword_1E96F1988)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F1960);
    sub_1A731DC28(&qword_1E96F1990, (void (*)(uint64_t))type metadata accessor for REMSearchCriterion);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1988);
  }
  return result;
}

unint64_t sub_1A731D344()
{
  unint64_t result = qword_1E96F19A8;
  if (!qword_1E96F19A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F19A8);
  }
  return result;
}

unint64_t sub_1A731D398()
{
  unint64_t result = qword_1E96F19C0;
  if (!qword_1E96F19C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F19C0);
  }
  return result;
}

unint64_t sub_1A731D3EC()
{
  unint64_t result = qword_1E96F19C8;
  if (!qword_1E96F19C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F19C8);
  }
  return result;
}

unint64_t sub_1A731D440()
{
  unint64_t result = qword_1E96F19D0;
  if (!qword_1E96F19D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F19D0);
  }
  return result;
}

uint64_t sub_1A731D494(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMSearchCriterion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A731D4F8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A731D558(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A731D5C0()
{
  unint64_t result = qword_1E96F19D8;
  if (!qword_1E96F19D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F19D8);
  }
  return result;
}

unint64_t sub_1A731D614()
{
  unint64_t result = qword_1E96F19E0;
  if (!qword_1E96F19E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F19E0);
  }
  return result;
}

unint64_t sub_1A731D668()
{
  unint64_t result = qword_1E96F19F0;
  if (!qword_1E96F19F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F19E8);
    sub_1A731DC28(&qword_1EB705A50, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F19F0);
  }
  return result;
}

uint64_t sub_1A731D70C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F19F8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A731D77C()
{
  unint64_t result = qword_1E96F1A08;
  if (!qword_1E96F1A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A08);
  }
  return result;
}

uint64_t sub_1A731D7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMSearchCriterion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A731D834()
{
  unint64_t result = qword_1E96F1A18;
  if (!qword_1E96F1A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A18);
  }
  return result;
}

unint64_t sub_1A731D888()
{
  unint64_t result = qword_1E96F1A20;
  if (!qword_1E96F1A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A20);
  }
  return result;
}

unint64_t sub_1A731D8DC()
{
  unint64_t result = qword_1E96F1A28;
  if (!qword_1E96F1A28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB704C60);
    sub_1A731DC28(&qword_1EB704C38, MEMORY[0x1E4F27928]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A28);
  }
  return result;
}

unint64_t sub_1A731D980()
{
  unint64_t result = qword_1E96F1A30;
  if (!qword_1E96F1A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A30);
  }
  return result;
}

unint64_t sub_1A731D9D4()
{
  unint64_t result = qword_1E96F1A38;
  if (!qword_1E96F1A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A38);
  }
  return result;
}

unint64_t sub_1A731DA28()
{
  unint64_t result = qword_1E96F1A40;
  if (!qword_1E96F1A40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F19E8);
    sub_1A731DC28(&qword_1EB704E40, (void (*)(uint64_t))type metadata accessor for REMObjectID_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A40);
  }
  return result;
}

unint64_t sub_1A731DACC()
{
  unint64_t result = qword_1E96F1A50;
  if (!qword_1E96F1A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A50);
  }
  return result;
}

unint64_t sub_1A731DB24()
{
  unint64_t result = qword_1E96F1A58;
  if (!qword_1E96F1A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A58);
  }
  return result;
}

unint64_t sub_1A731DB84()
{
  unint64_t result = qword_1EB704058;
  if (!qword_1EB704058)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7058E0);
    sub_1A731DC28(&qword_1EB703F20, (void (*)(uint64_t))type metadata accessor for REMReminder_Codable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704058);
  }
  return result;
}

uint64_t sub_1A731DC28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A731DC74()
{
  unint64_t result = qword_1E96F1A60;
  if (!qword_1E96F1A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A60);
  }
  return result;
}

unint64_t sub_1A731DCD4()
{
  unint64_t result = qword_1E96F1A68;
  if (!qword_1E96F1A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A68);
  }
  return result;
}

uint64_t type metadata accessor for REMSiriSearchDataView()
{
  return self;
}

uint64_t method lookup function for REMSiriSearchDataView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMSiriSearchDataView);
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.Model()
{
  return &type metadata for REMSiriSearchDataView.Model;
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.ListsResult()
{
  return &type metadata for REMSiriSearchDataView.ListsResult;
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.ListsResult_Codable()
{
  return &type metadata for REMSiriSearchDataView.ListsResult_Codable;
}

void destroy for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t initializeWithCopy for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v8;
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters()
{
  return &type metadata for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters;
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters()
{
  return &type metadata for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters;
}

void *_s11CodingErrorOwCP(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11CodingErrorOwxx()
{
  return swift_bridgeObjectRelease();
}

void *_s11CodingErrorOwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s11CodingErrorOwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMSearchCriterion.CodingError()
{
  return &type metadata for REMSearchCriterion.CodingError;
}

uint64_t _s4BaseOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEE) {
    goto LABEL_17;
  }
  if (a2 + 18 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 18) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 18;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v8 = v6 - 19;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s4BaseOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *__n128 result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A731E1F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4BaseOMa()
{
  return &_s4BaseON;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unsigned char *storeEnumTagSinglePayload for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A731E2E0);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.CodingKeys;
}

unsigned char *_s10CodingKeysOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A731E3E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for REMSiriSearchDataView.ListsResult_Codable.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A731E4E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.ListsResult_Codable.CodingKeys()
{
  return &type metadata for REMSiriSearchDataView.ListsResult_Codable.CodingKeys;
}

unint64_t sub_1A731E524()
{
  unint64_t result = qword_1E96F1A70;
  if (!qword_1E96F1A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A70);
  }
  return result;
}

unint64_t sub_1A731E57C()
{
  unint64_t result = qword_1E96F1A78;
  if (!qword_1E96F1A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A78);
  }
  return result;
}

unint64_t sub_1A731E5D4()
{
  unint64_t result = qword_1E96F1A80;
  if (!qword_1E96F1A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A80);
  }
  return result;
}

unint64_t sub_1A731E62C()
{
  unint64_t result = qword_1E96F1A88;
  if (!qword_1E96F1A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A88);
  }
  return result;
}

unint64_t sub_1A731E684()
{
  unint64_t result = qword_1E96F1A90;
  if (!qword_1E96F1A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A90);
  }
  return result;
}

unint64_t sub_1A731E6DC()
{
  unint64_t result = qword_1E96F1A98;
  if (!qword_1E96F1A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1A98);
  }
  return result;
}

unint64_t sub_1A731E734()
{
  unint64_t result = qword_1E96F1AA0;
  if (!qword_1E96F1AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1AA0);
  }
  return result;
}

unint64_t sub_1A731E78C()
{
  unint64_t result = qword_1E96F1AA8;
  if (!qword_1E96F1AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1AA8);
  }
  return result;
}

unint64_t sub_1A731E7E4()
{
  unint64_t result = qword_1E96F1AB0;
  if (!qword_1E96F1AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1AB0);
  }
  return result;
}

unint64_t sub_1A731E83C()
{
  unint64_t result = qword_1E96F1AB8;
  if (!qword_1E96F1AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1AB8);
  }
  return result;
}

unint64_t sub_1A731E894()
{
  unint64_t result = qword_1E96F1AC0;
  if (!qword_1E96F1AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1AC0);
  }
  return result;
}

unint64_t sub_1A731E8EC()
{
  unint64_t result = qword_1E96F1AC8;
  if (!qword_1E96F1AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1AC8);
  }
  return result;
}

unint64_t sub_1A731E944()
{
  unint64_t result = qword_1E96F1AD0;
  if (!qword_1E96F1AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1AD0);
  }
  return result;
}

uint64_t sub_1A731E998(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737473696CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73694C7472616D73 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A731EA90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6169726574697263 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A759F690 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x66664F6863746566 && a2 == 0xEB00000000746573 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D694C6863746566 && a2 == 0xEA00000000007469)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A731EC68()
{
  unint64_t v0 = sub_1A7573970();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1A731ECB4()
{
  unint64_t result = qword_1E96F1AD8;
  if (!qword_1E96F1AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1AD8);
  }
  return result;
}

uint64_t sub_1A731ED08()
{
  unint64_t v0 = sub_1A7573F90();
  swift_bridgeObjectRelease();
  if (v0 >= 0x13) {
    return 19;
  }
  else {
    return v0;
  }
}

uint64_t REMSmartListSection.PredefinedSectionType.Today.remObjectID.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  unsigned int v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  BOOL v7 = (char *)&v22 - v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  if (!*v0)
  {
    sub_1A7571B70();
    uint64_t v15 = sub_1A7571BC0();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15);
    if (result != 1)
    {
      sub_1A731F094();
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      uint64_t v14 = (void *)sub_1A7571B90();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v15);
      goto LABEL_7;
    }
    goto LABEL_12;
  }
  if (*v0 == 1)
  {
    sub_1A7571B70();
    uint64_t v10 = sub_1A7571BC0();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10);
    if (result != 1)
    {
      sub_1A731F094();
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      uint64_t v14 = (void *)sub_1A7571B90();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
LABEL_7:
      id v17 = objc_msgSend(ObjCClassFromMetadata, sel_objectIDWithUUID_, v14);
LABEL_10:
      id v21 = v17;

      return (uint64_t)v21;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1A7571B70();
  uint64_t v18 = sub_1A7571BC0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v18);
  if (result != 1)
  {
    sub_1A731F094();
    uint64_t v20 = (void *)swift_getObjCClassFromMetadata();
    uint64_t v14 = (void *)sub_1A7571B90();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v18);
    id v17 = objc_msgSend(v20, sel_objectIDWithUUID_, v14);
    goto LABEL_10;
  }
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_1A731F094()
{
  unint64_t result = qword_1EB700580;
  if (!qword_1EB700580)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB700580);
  }
  return result;
}

BOOL static REMSmartListSection.PredefinedSectionType.Today.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMSmartListSection.PredefinedSectionType.Today.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t sub_1A731F114()
{
  return 0;
}

uint64_t sub_1A731F120@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1A731F150(uint64_t a1)
{
  unint64_t v2 = sub_1A731F834();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A731F18C(uint64_t a1)
{
  unint64_t v2 = sub_1A731F834();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A731F1C8()
{
  uint64_t v1 = 0x6C6C417961646F74;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F4E7961646F74;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6F5465726F666562;
  }
}

uint64_t sub_1A731F238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A73203F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A731F260(uint64_t a1)
{
  unint64_t v2 = sub_1A731F738();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A731F29C(uint64_t a1)
{
  unint64_t v2 = sub_1A731F738();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A731F2D8(uint64_t a1)
{
  unint64_t v2 = sub_1A731F7E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A731F314(uint64_t a1)
{
  unint64_t v2 = sub_1A731F7E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A731F350(uint64_t a1)
{
  unint64_t v2 = sub_1A731F78C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A731F38C(uint64_t a1)
{
  unint64_t v2 = sub_1A731F78C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *static REMSmartListSection.PredefinedSectionType.Today.allCases.getter()
{
  return &unk_1EFC8F7C8;
}

uint64_t REMSmartListSection.PredefinedSectionType.Today.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1AE0);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1AE8);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1AF0);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1AF8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A731F738();
  sub_1A75741B0();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_1A731F7E0();
      sub_1A7573AB0();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_1A731F78C();
      id v17 = v23;
      sub_1A7573AB0();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_1A731F834();
    sub_1A7573AB0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_1A731F738()
{
  unint64_t result = qword_1E96F1B00;
  if (!qword_1E96F1B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B00);
  }
  return result;
}

unint64_t sub_1A731F78C()
{
  unint64_t result = qword_1E96F1B08;
  if (!qword_1E96F1B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B08);
  }
  return result;
}

unint64_t sub_1A731F7E0()
{
  unint64_t result = qword_1E96F1B10;
  if (!qword_1E96F1B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B10);
  }
  return result;
}

unint64_t sub_1A731F834()
{
  unint64_t result = qword_1E96F1B18;
  if (!qword_1E96F1B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B18);
  }
  return result;
}

uint64_t REMSmartListSection.PredefinedSectionType.Today.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t REMSmartListSection.PredefinedSectionType.Today.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1B20);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1B28);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1B30);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1B38);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A731F738();
  uint64_t v12 = (uint64_t)v39;
  sub_1A7574190();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  id v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_1A7573A70();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_1A7573640();
    swift_allocError();
    uint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1538);
    *uint64_t v23 = &type metadata for REMSmartListSection.PredefinedSectionType.Today;
    sub_1A75739A0();
    sub_1A7573620();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x1E4FBBA70], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_1A731F7E0();
      uint64_t v18 = v30;
      sub_1A7573990();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_1A731F78C();
      uint64_t v25 = v30;
      sub_1A7573990();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_1A731F834();
    uint64_t v24 = v30;
    sub_1A7573990();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

unint64_t sub_1A731FE8C()
{
  unint64_t result = qword_1E96F1B40;
  if (!qword_1E96F1B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B40);
  }
  return result;
}

uint64_t sub_1A731FEE0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMSmartListSection.PredefinedSectionType.Today.init(from:)(a1, a2);
}

uint64_t sub_1A731FEF8(void *a1)
{
  return REMSmartListSection.PredefinedSectionType.Today.encode(to:)(a1);
}

unint64_t sub_1A731FF14()
{
  unint64_t result = qword_1E96F1B48;
  if (!qword_1E96F1B48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96F1B50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B48);
  }
  return result;
}

void sub_1A731FF70(void *a1@<X8>)
{
  *a1 = &unk_1EFC8F7F0;
}

ValueMetadata *type metadata accessor for REMSmartListSection.PredefinedSectionType()
{
  return &type metadata for REMSmartListSection.PredefinedSectionType;
}

ValueMetadata *type metadata accessor for REMSmartListSection.PredefinedSectionType.Today()
{
  return &type metadata for REMSmartListSection.PredefinedSectionType.Today;
}

unsigned char *_s21PredefinedSectionTypeO5TodayOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7320074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s21PredefinedSectionTypeO5TodayO10CodingKeysOMa()
{
  return &_s21PredefinedSectionTypeO5TodayO10CodingKeysON;
}

ValueMetadata *_s21PredefinedSectionTypeO5TodayO21BeforeTodayCodingKeysOMa()
{
  return &_s21PredefinedSectionTypeO5TodayO21BeforeTodayCodingKeysON;
}

ValueMetadata *_s21PredefinedSectionTypeO5TodayO21TodayAllDayCodingKeysOMa()
{
  return &_s21PredefinedSectionTypeO5TodayO21TodayAllDayCodingKeysON;
}

ValueMetadata *_s21PredefinedSectionTypeO5TodayO24TodayNonAllDayCodingKeysOMa()
{
  return &_s21PredefinedSectionTypeO5TodayO24TodayNonAllDayCodingKeysON;
}

unint64_t sub_1A73200E0()
{
  unint64_t result = qword_1E96F1B58;
  if (!qword_1E96F1B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B58);
  }
  return result;
}

unint64_t sub_1A7320138()
{
  unint64_t result = qword_1E96F1B60;
  if (!qword_1E96F1B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B60);
  }
  return result;
}

unint64_t sub_1A7320190()
{
  unint64_t result = qword_1E96F1B68;
  if (!qword_1E96F1B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B68);
  }
  return result;
}

unint64_t sub_1A73201E8()
{
  unint64_t result = qword_1E96F1B70;
  if (!qword_1E96F1B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B70);
  }
  return result;
}

unint64_t sub_1A7320240()
{
  unint64_t result = qword_1E96F1B78;
  if (!qword_1E96F1B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B78);
  }
  return result;
}

unint64_t sub_1A7320298()
{
  unint64_t result = qword_1E96F1B80;
  if (!qword_1E96F1B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B80);
  }
  return result;
}

unint64_t sub_1A73202F0()
{
  unint64_t result = qword_1E96F1B88;
  if (!qword_1E96F1B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B88);
  }
  return result;
}

unint64_t sub_1A7320348()
{
  unint64_t result = qword_1E96F1B90;
  if (!qword_1E96F1B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B90);
  }
  return result;
}

unint64_t sub_1A73203A0()
{
  unint64_t result = qword_1E96F1B98;
  if (!qword_1E96F1B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1B98);
  }
  return result;
}

uint64_t sub_1A73203F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F5465726F666562 && a2 == 0xEB00000000796164 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6C417961646F74 && a2 == 0xEB00000000796144 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F4E7961646F74 && a2 == 0xEE007961446C6C41)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A7320598(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  char v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_1A7572DA0();
  if (!v20) {
    return sub_1A7572A80();
  }
  uint64_t v21 = v20;
  char v27 = v15;
  uint64_t v43 = sub_1A75723A0();
  uint64_t v35 = sub_1A7573740();
  sub_1A75736E0();
  char v41 = v19;
  uint64_t result = sub_1A7572D90();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_1A7572E80();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_1A7573720();
      sub_1A7572DE0();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t Diff.patch<A>(from:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = 0;
  long long v10 = *v4;
  void v9[2] = a3;
  uint64_t v9[3] = a4;
  v9[4] = &v11;
  v9[5] = a2;
  void v9[6] = a1;
  swift_getAssociatedTypeWitness();
  uint64_t v5 = type metadata accessor for Patch();
  unint64_t v6 = sub_1A72AE61C();
  return sub_1A7320598((void (*)(char *, char *))sub_1A7320C68, (uint64_t)v9, (uint64_t)&type metadata for Diff, v5, MEMORY[0x1E4FBC248], v6, MEMORY[0x1E4FBC278], v7);
}

uint64_t sub_1A7320A50@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)result;
  if (!*(unsigned char *)(result + 16))
  {
    if (!__OFADD__(*a2, 1))
    {
      ++*a2;
      swift_getAssociatedTypeWitness();
      uint64_t v9 = (uint64_t)a3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      *a3 = v4;
      sub_1A748BC4C(v9);
      goto LABEL_11;
    }
    goto LABEL_15;
  }
  if (*(unsigned char *)(result + 16) == 1)
  {
    uint64_t v5 = *a2 - 1;
    if (__OFSUB__(*a2, 1))
    {
      __break(1u);
    }
    else
    {
      *a2 = v5;
      BOOL v6 = __OFADD__(v4, v5);
      uint64_t v7 = v4 + v5;
      if (!v6)
      {
        BOOL v6 = __OFADD__(v7, 1);
        uint64_t v8 = v7 + 1;
        if (!v6)
        {
          *a3 = v8;
          swift_getAssociatedTypeWitness();
LABEL_11:
          type metadata accessor for Patch();
          return swift_storeEnumTagMultiPayload();
        }
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (!__OFADD__(v4, *a2))
  {
    uint64_t v13 = v4 + *a2;
    swift_getAssociatedTypeWitness();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v11 = (uint64_t)a3 + *(int *)(TupleTypeMetadata3 + 64);
    uint64_t v12 = (uint64_t)a3 + *(int *)(TupleTypeMetadata3 + 48);
    *a3 = v13;
    sub_1A748BC4C(v12);
    sub_1A748BC4C(v11);
    goto LABEL_11;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1A7320C68@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1A7320A50(a1, *(uint64_t **)(v2 + 32), a2);
}

uint64_t type metadata accessor for Patch()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t patch<A>(from:to:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  Collection<>.diff(_:)(a2, a3, a4, a5, &v11);
  uint64_t v9 = Diff.patch<A>(from:to:)(a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t Patch.debugDescription.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = *(void *)v7;
      uint64_t v21 = 10308;
      unint64_t v22 = 0xE200000000000000;
      uint64_t v20 = v10;
      sub_1A7573BC0();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      return v21;
    }
    else
    {
      uint64_t v14 = *(void *)v7;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v16 = &v7[*(int *)(TupleTypeMetadata3 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, &v7[*(int *)(TupleTypeMetadata3 + 64)], v1);
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_1A7572740();
      uint64_t v20 = v14;
      sub_1A7573BC0();
      sub_1A7572740();
      swift_bridgeObjectRelease();
      sub_1A7572740();
      sub_1A7573D70();
      sub_1A7572740();
      uint64_t v11 = v21;
      uint64_t v17 = *(void (**)(char *, uint64_t))(v2 + 8);
      v17(v5, v1);
      v17(v16, v1);
    }
  }
  else
  {
    uint64_t v12 = *(void *)v7;
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, &v7[*(int *)(TupleTypeMetadata2 + 48)], v1);
    uint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_1A7572740();
    uint64_t v20 = v12;
    sub_1A7573BC0();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    sub_1A7573D70();
    sub_1A7572740();
    uint64_t v11 = v21;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return v11;
}

uint64_t sub_1A73210BC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = MEMORY[0x1E4FBADA0] + 64;
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v4;
    uint64_t v6 = v2;
    swift_getTupleTypeLayout3();
    uint64_t v7 = &v3;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1A732118C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v5 + 64);
  unint64_t v9 = ((v7 + 8) & ~v7) + v8;
  if (v9 <= ((v9 + v7) & ~v7) + v8) {
    unint64_t v9 = ((v9 + v6) & ~(unint64_t)v6) + v8;
  }
  if (v9 <= 8) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = v9;
  }
  int v11 = v6 & 0x100000;
  if (v7 > 7 || v11 != 0 || (unint64_t)(v10 + 1) > 0x18)
  {
    uint64_t v14 = *(void *)a2;
    *char v3 = *(void *)a2;
    char v3 = (void *)(v14 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    unsigned int v15 = a2[v10];
    unsigned int v16 = v15 - 3;
    if (v15 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v17 = v10;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a2;
          goto LABEL_24;
        case 2:
          int v18 = *(unsigned __int16 *)a2;
          goto LABEL_24;
        case 3:
          int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_24;
        case 4:
          int v18 = *(_DWORD *)a2;
LABEL_24:
          int v19 = (v18 | (v16 << (8 * v10))) + 3;
          unsigned int v15 = v18 + 3;
          if (v10 < 4) {
            unsigned int v15 = v19;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v20 = ~v7;
    if (v15 == 2)
    {
      *a1 = *(void *)a2;
      uint64_t v21 = (unint64_t)&a2[v7 + 8] & v20;
      unint64_t v22 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
      v22(((unint64_t)a1 + v7 + 8) & v20, v21, v4);
      v22((v8 + v7 + (((unint64_t)v3 + v7 + 8) & v20)) & v20, (v8 + v7 + v21) & v20, v4);
      *((unsigned char *)v3 + v10) = 2;
    }
    else
    {
      *a1 = *(void *)a2;
      if (v15 == 1)
      {
        *((unsigned char *)a1 + v10) = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v7 + 8) & v20, (unint64_t)&a2[v7 + 8] & v20, v4);
        *((unsigned char *)v3 + v10) = 0;
      }
    }
  }
  return v3;
}

unsigned __int8 *sub_1A73213E0(unsigned __int8 *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  unint64_t v6 = ((v4 + 8) & ~v4) + v5;
  if (v6 <= ((v6 + v4) & ~v4) + v5) {
    unint64_t v6 = ((v6 + v4) & ~v4) + v5;
  }
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  unsigned int v7 = result[v6];
  unsigned int v8 = v7 - 3;
  if (v7 >= 3)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *result;
        goto LABEL_14;
      case 2:
        int v10 = *(unsigned __int16 *)result;
        goto LABEL_14;
      case 3:
        int v10 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_14;
      case 4:
        int v10 = *(_DWORD *)result;
LABEL_14:
        int v11 = (v10 | (v8 << (8 * v6))) + 3;
        unsigned int v7 = v10 + 3;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v12 = ~v4;
  if (v7 == 2)
  {
    uint64_t v13 = (unint64_t)&result[v4 + 8] & v12;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v17(v13, v2);
    uint64_t v14 = (v5 + v4 + v13) & v12;
    uint64_t v15 = v2;
    unsigned int v16 = (uint64_t (*)(uint64_t, uint64_t))v17;
  }
  else
  {
    if (v7 == 1) {
      return result;
    }
    uint64_t v14 = (unint64_t)&result[v4 + 8] & v12;
    unsigned int v16 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    uint64_t v15 = *(void *)(a2 + 16);
  }

  return (unsigned __int8 *)v16(v14, v15);
}

void *sub_1A73215B4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  unint64_t v8 = ((v6 + 8) & ~v6) + v7;
  if (v8 <= ((v8 + v6) & ~v6) + v7) {
    unint64_t v8 = ((v8 + v6) & ~v6) + v7;
  }
  if (v8 <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = v8;
  }
  unsigned int v10 = a2[v9];
  unsigned int v11 = v10 - 3;
  if (v10 >= 3)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_15;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_15:
        int v14 = (v13 | (v11 << (8 * v9))) + 3;
        unsigned int v10 = v13 + 3;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v15 = ~v6;
  if (v10 == 2)
  {
    *a1 = *(void *)a2;
    uint64_t v17 = (unint64_t)&a2[v6 + 8] & v15;
    int v18 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
    v18(((unint64_t)a1 + v6 + 8) & v15, v17, v4);
    v18((v7 + v6 + (((unint64_t)a1 + v6 + 8) & v15)) & v15, (v7 + v6 + v17) & v15, v4);
    char v16 = 2;
  }
  else
  {
    *a1 = *(void *)a2;
    if (v10 == 1)
    {
      char v16 = 1;
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & v15, (unint64_t)&a2[v6 + 8] & v15, v4);
      char v16 = 0;
    }
  }
  *((unsigned char *)a1 + v9) = v16;
  return a1;
}

unsigned __int8 *sub_1A73217C4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = *(void *)(v6 + 64);
    unint64_t v9 = ((v7 + 8) & ~v7) + v8;
    if (v9 <= ((v9 + v7) & ~v7) + v8) {
      unint64_t v9 = ((v9 + v7) & ~v7) + v8;
    }
    if (v9 <= 8) {
      uint64_t v10 = 8;
    }
    else {
      uint64_t v10 = v9;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 3;
    if (v11 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          if (v10 < 4) {
            goto LABEL_17;
          }
          goto LABEL_19;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          if (v10 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_17;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v10 < 4) {
            goto LABEL_17;
          }
          goto LABEL_19;
        case 4:
          int v14 = *(_DWORD *)a1;
          if (v10 < 4) {
LABEL_17:
          }
            unsigned int v11 = (v14 | (v12 << (8 * v10))) + 3;
          else {
LABEL_19:
          }
            unsigned int v11 = v14 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v15 = ~v7;
    if (v11 == 2)
    {
      uint64_t v16 = (unint64_t)&a1[v7 + 8] & v15;
      uint64_t v25 = *(void *)(*(void *)(a3 + 16) - 8);
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v17(v16, v5);
      v17((v8 + v7 + v16) & v15, v5);
      uint64_t v6 = v25;
    }
    else if (v11 != 1)
    {
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&a1[v7 + 8] & v15, v5);
    }
    unsigned int v18 = a2[v10];
    unsigned int v19 = v18 - 3;
    if (v18 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v20 = v10;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          if (v10 >= 4) {
            goto LABEL_40;
          }
          goto LABEL_34;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          if (v10 >= 4) {
            goto LABEL_40;
          }
          goto LABEL_34;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v10 < 4) {
            goto LABEL_34;
          }
          goto LABEL_40;
        case 4:
          int v21 = *(_DWORD *)a2;
          if (v10 < 4)
          {
LABEL_34:
            unsigned int v18 = (v21 | (v19 << (8 * v10))) + 3;
            break;
          }
LABEL_40:
          unsigned int v18 = v21 + 3;
          if (v18 == 2) {
            goto LABEL_41;
          }
          goto LABEL_36;
        default:
          break;
      }
    }
    if (v18 == 2)
    {
LABEL_41:
      *(void *)a1 = *(void *)a2;
      uint64_t v23 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
      v23((unint64_t)&a1[v7 + 8] & v15, (unint64_t)&a2[v7 + 8] & v15, v5);
      v23((v8 + v7 + ((unint64_t)&a1[v7 + 8] & v15)) & v15, (v8 + v7 + ((unint64_t)&a2[v7 + 8] & v15)) & v15, v5);
      char v22 = 2;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      if (v18 == 1)
      {
        char v22 = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))((unint64_t)&a1[v7 + 8] & v15, (unint64_t)&a2[v7 + 8] & v15, v5);
        char v22 = 0;
      }
    }
    a1[v10] = v22;
  }
  return a1;
}

void *sub_1A7321B40(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  unint64_t v8 = ((v6 + 8) & ~v6) + v7;
  if (v8 <= ((v8 + v6) & ~v6) + v7) {
    unint64_t v8 = ((v8 + v6) & ~v6) + v7;
  }
  if (v8 <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = v8;
  }
  unsigned int v10 = a2[v9];
  unsigned int v11 = v10 - 3;
  if (v10 >= 3)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_15;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_15:
        int v14 = (v13 | (v11 << (8 * v9))) + 3;
        unsigned int v10 = v13 + 3;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v15 = ~v6;
  if (v10 == 2)
  {
    *a1 = *(void *)a2;
    uint64_t v17 = (unint64_t)&a2[v6 + 8] & v15;
    unsigned int v18 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32);
    v18(((unint64_t)a1 + v6 + 8) & v15, v17, v4);
    v18((v7 + v6 + (((unint64_t)a1 + v6 + 8) & v15)) & v15, (v7 + v6 + v17) & v15, v4);
    char v16 = 2;
  }
  else
  {
    *a1 = *(void *)a2;
    if (v10 == 1)
    {
      char v16 = 1;
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & v15, (unint64_t)&a2[v6 + 8] & v15, v4);
      char v16 = 0;
    }
  }
  *((unsigned char *)a1 + v9) = v16;
  return a1;
}

unsigned __int8 *sub_1A7321D50(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = *(void *)(v6 + 64);
    unint64_t v9 = ((v7 + 8) & ~v7) + v8;
    if (v9 <= ((v9 + v7) & ~v7) + v8) {
      unint64_t v9 = ((v9 + v7) & ~v7) + v8;
    }
    if (v9 <= 8) {
      uint64_t v10 = 8;
    }
    else {
      uint64_t v10 = v9;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 3;
    if (v11 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          if (v10 < 4) {
            goto LABEL_17;
          }
          goto LABEL_19;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          if (v10 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_17;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v10 < 4) {
            goto LABEL_17;
          }
          goto LABEL_19;
        case 4:
          int v14 = *(_DWORD *)a1;
          if (v10 < 4) {
LABEL_17:
          }
            unsigned int v11 = (v14 | (v12 << (8 * v10))) + 3;
          else {
LABEL_19:
          }
            unsigned int v11 = v14 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v15 = ~v7;
    if (v11 == 2)
    {
      uint64_t v16 = (unint64_t)&a1[v7 + 8] & v15;
      uint64_t v25 = *(void *)(*(void *)(a3 + 16) - 8);
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v17(v16, v5);
      v17((v8 + v7 + v16) & v15, v5);
      uint64_t v6 = v25;
    }
    else if (v11 != 1)
    {
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&a1[v7 + 8] & v15, v5);
    }
    unsigned int v18 = a2[v10];
    unsigned int v19 = v18 - 3;
    if (v18 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v20 = v10;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          if (v10 >= 4) {
            goto LABEL_40;
          }
          goto LABEL_34;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          if (v10 >= 4) {
            goto LABEL_40;
          }
          goto LABEL_34;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v10 < 4) {
            goto LABEL_34;
          }
          goto LABEL_40;
        case 4:
          int v21 = *(_DWORD *)a2;
          if (v10 < 4)
          {
LABEL_34:
            unsigned int v18 = (v21 | (v19 << (8 * v10))) + 3;
            break;
          }
LABEL_40:
          unsigned int v18 = v21 + 3;
          if (v18 == 2) {
            goto LABEL_41;
          }
          goto LABEL_36;
        default:
          break;
      }
    }
    if (v18 == 2)
    {
LABEL_41:
      *(void *)a1 = *(void *)a2;
      uint64_t v23 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
      v23((unint64_t)&a1[v7 + 8] & v15, (unint64_t)&a2[v7 + 8] & v15, v5);
      v23((v8 + v7 + ((unint64_t)&a1[v7 + 8] & v15)) & v15, (v8 + v7 + ((unint64_t)&a2[v7 + 8] & v15)) & v15, v5);
      char v22 = 2;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      if (v18 == 1)
      {
        char v22 = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))((unint64_t)&a1[v7 + 8] & v15, (unint64_t)&a2[v7 + 8] & v15, v5);
        char v22 = 0;
      }
    }
    a1[v10] = v22;
  }
  return a1;
}

uint64_t sub_1A73220CC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  unint64_t v6 = ((v4 + 8) & ~v4) + v5;
  unint64_t v7 = ((v6 + v4) & ~v4) + v5;
  if (v6 > v7) {
    unint64_t v7 = v6;
  }
  uint64_t v8 = 8;
  if (v7 > 8) {
    uint64_t v8 = v7;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_24;
  }
  uint64_t v9 = v8 + 1;
  char v10 = 8 * (v8 + 1);
  if ((v8 + 1) <= 3)
  {
    unsigned int v13 = ((a2 + ~(-1 << v10) - 253) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v13 < 2)
    {
LABEL_24:
      unsigned int v15 = *((unsigned __int8 *)a1 + v8);
      if (v15 >= 3) {
        return (v15 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_24;
  }
LABEL_16:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v9 | v14) + 254;
}

void sub_1A7322250(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  unint64_t v8 = ((v6 + 8) & ~v6) + v7;
  unint64_t v9 = ((v8 + v6) & ~v6) + v7;
  if (v8 > v9) {
    unint64_t v9 = v8;
  }
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  size_t v10 = v9 + 1;
  if (a3 < 0xFE)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 + ~(-1 << (8 * v10)) - 253) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v12 = a2 - 254;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        break;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        break;
      case 3:
LABEL_36:
        __break(1u);
        JUMPOUT(0x1A7322468);
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v11)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        goto LABEL_24;
      case 3:
        goto LABEL_36;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      default:
LABEL_24:
        if (a2) {
LABEL_25:
        }
          a1[v9] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1A7322490(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  unint64_t v5 = ((v3 + 8) & ~v3) + v4;
  unint64_t v6 = ((v5 + v3) & ~v3) + v4;
  if (v5 > v6) {
    unint64_t v6 = v5;
  }
  uint64_t v7 = 8;
  if (v6 > 8) {
    uint64_t v7 = v6;
  }
  uint64_t v8 = a1[v7];
  int v9 = v8 - 3;
  if (v8 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_14:
        unsigned int v12 = (v11 | (v9 << (8 * v7))) + 3;
        LODWORD(v8) = v11 + 3;
        if (v7 >= 4) {
          uint64_t v8 = v8;
        }
        else {
          uint64_t v8 = v12;
        }
        break;
      default:
        return v8;
    }
  }
  return v8;
}

void sub_1A7322598(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  unint64_t v7 = ((v5 + 8) & ~v5) + v6;
  unint64_t v8 = ((v7 + v5) & ~v5) + v6;
  if (a2 > 2)
  {
    if (v7 > v8) {
      unint64_t v8 = v7;
    }
    if (v8 <= 8) {
      size_t v9 = 8;
    }
    else {
      size_t v9 = v8;
    }
    unsigned int v10 = a2 - 3;
    if (v9 < 4)
    {
      unsigned int v11 = v10 >> (8 * v9);
      int v12 = v10 & ~(-1 << (8 * v9));
      a1[v9] = v11 + 3;
      bzero(a1, v9);
      if (v9 == 3)
      {
        *(_WORD *)a1 = v12;
        a1[2] = BYTE2(v12);
      }
      else if (v9 == 2)
      {
        *(_WORD *)a1 = v12;
      }
      else
      {
        *a1 = v12;
      }
    }
    else
    {
      a1[v9] = 3;
      bzero(a1, v9);
      *(_DWORD *)a1 = v10;
    }
  }
  else
  {
    if (v7 > v8) {
      unint64_t v8 = v7;
    }
    if (v8 <= 8) {
      unint64_t v8 = 8;
    }
    a1[v8] = a2;
  }
}

void DateComponents.init(testing_parsedFrom:calendar:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v61 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B60);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v51 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v53 = (char *)&v48 - v7;
  uint64_t v8 = sub_1A7571E00();
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  MEMORY[0x1F4188790](v8);
  char v50 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A7571E60();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unsigned int v18 = (char *)&v48 - v17;
  uint64_t v19 = sub_1A7571B60();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  id v49 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v48 - v23;
  uint64_t v25 = sub_1A75717A0();
  uint64_t v58 = *(void *)(v25 - 8);
  uint64_t v59 = v25;
  MEMORY[0x1F4188790](v25);
  uint64_t v52 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v27 = a1;
  Date.init(testing_parsedFrom:)(a1, v18);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v28(v18, 1, v19) != 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v24, v18, v19);
    uint64_t v33 = self;
    uint64_t v34 = (void *)sub_1A7571AB0();
    sub_1A7571E50();
    id v35 = (id)sub_1A7571E30();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v57);
    id v36 = objc_msgSend(v33, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v34, v35, 0);

    uint64_t v37 = v24;
LABEL_7:
    uint64_t v41 = v60;
    uint64_t v43 = v54;
    uint64_t v42 = v55;
    uint64_t v45 = v52;
    uint64_t v44 = (uint64_t)v53;

    sub_1A75716C0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v37, v19);
    sub_1A72BF1E8(v41, v44, &qword_1EB701B60);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v44, 1, v42) == 1)
    {
      sub_1A72CB560(v41, &qword_1EB701B60);
      sub_1A72CB560(v44, &qword_1EB701B60);
    }
    else
    {
      id v46 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v50, v44, v42);
      unint64_t v47 = v51;
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v51, v46, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v47, 0, 1, v42);
      sub_1A7571780();
      sub_1A72CB560(v41, &qword_1EB701B60);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v42);
    }
    uint64_t v30 = v61;
    uint64_t v32 = v58;
    uint64_t v31 = v59;
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v61, v45, v59);
    uint64_t v29 = 0;
    goto LABEL_11;
  }
  sub_1A72CB560((uint64_t)v18, &qword_1EB704C60);
  Date.init(testing_allDayParsedFrom:)(v27, v16);
  if (v28(v16, 1, v19) == 1)
  {
    sub_1A72CB560(v60, &qword_1EB701B60);
    sub_1A72CB560((uint64_t)v16, &qword_1EB704C60);
    uint64_t v29 = 1;
    uint64_t v30 = v61;
    uint64_t v32 = v58;
    uint64_t v31 = v59;
LABEL_11:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v30, v29, 1, v31);
    return;
  }
  uint64_t v37 = v49;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v49, v16, v19);
  uint64_t v38 = self;
  uint64_t v39 = (void *)sub_1A7571AB0();
  sub_1A7571E50();
  char v40 = (void *)sub_1A7571E30();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v57);
  id v35 = objc_msgSend(v38, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v39, v40, 1);

  if (v35)
  {
    id v36 = objc_msgSend(v35, sel_rem_strippingTimeZone);
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t DateComponents.testing_localizedDescription.getter()
{
  uint64_t v1 = sub_1A7571D30();
  uint64_t v57 = *(void *)(v1 - 8);
  uint64_t v58 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v56 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1A7571B60();
  uint64_t v3 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  char v65 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v54 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v64 = (uint64_t)&v54 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B68);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v60 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v54 - v16;
  uint64_t v18 = sub_1A7571E60();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v54 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v55 = (char *)&v54 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v54 - v24;
  uint64_t v62 = v0;
  sub_1A7571790();
  uint64_t v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v59(v17, 1, v18) == 1)
  {
    sub_1A7571E50();
    sub_1A72CB560((uint64_t)v17, &qword_1EB701B68);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v17, v18);
  }
  uint64_t v26 = self;
  uint64_t v27 = (void *)sub_1A75716B0();
  uint64_t v63 = v25;
  uint64_t v28 = (void *)sub_1A7571E30();
  id v29 = objc_msgSend(v26, sel_rem_dateWithDateComponents_timeZone_, v27, v28);

  if (v29)
  {
    sub_1A7571B20();

    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v30 = 1;
  }
  uint64_t v31 = v61;
  uint64_t v32 = v3;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, v30, 1, v61);
  uint64_t v33 = v64;
  sub_1A731D558((uint64_t)v11, v64);
  sub_1A72BF1E8(v33, (uint64_t)v8, &qword_1EB704C60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v31) == 1)
  {
    sub_1A72CB560((uint64_t)v8, &qword_1EB704C60);
    sub_1A72CB560(v33, &qword_1EB704C60);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v63, v18);
    return 63;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v65, v8, v31);
    id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
    id v36 = v56;
    sub_1A7571C00();
    uint64_t v37 = (void *)sub_1A7571C30();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v58);
    objc_msgSend(v35, sel_setLocale_, v37);

    uint64_t v38 = (void *)sub_1A7571E30();
    objc_msgSend(v35, sel_setTimeZone_, v38);

    objc_msgSend(v35, sel_setDateStyle_, 1);
    uint64_t v39 = (void *)sub_1A75716B0();
    LODWORD(v36) = objc_msgSend(v39, sel_rem_isAllDayDateComponents);

    objc_msgSend(v35, sel_setTimeStyle_, v36 ^ 1);
    char v40 = (void *)sub_1A7571AB0();
    id v41 = objc_msgSend(v35, sel_stringFromDate_, v40);

    uint64_t v42 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v44 = v43;

    uint64_t v70 = v42;
    uint64_t v71 = v44;
    uint64_t v68 = 11501794;
    unint64_t v69 = 0xA300000000000000;
    uint64_t v66 = 32;
    unint64_t v67 = 0xE100000000000000;
    sub_1A72DF534();
    uint64_t v45 = sub_1A75732C0();
    uint64_t v47 = v46;
    swift_bridgeObjectRelease();
    uint64_t v70 = v45;
    uint64_t v71 = v47;
    uint64_t v48 = (uint64_t)v60;
    sub_1A7571790();
    if (v59((char *)v48, 1, v18) == 1)
    {
      sub_1A72CB560(v48, &qword_1EB701B68);
      sub_1A7572740();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v65, v31);
      sub_1A72CB560(v64, &qword_1EB704C60);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v63, v18);
    }
    else
    {
      id v49 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v55, v48, v18);
      char v50 = v54;
      sub_1A7571E50();
      sub_1A73235AC();
      char v51 = sub_1A75725C0();
      uint64_t v52 = *(void (**)(char *, uint64_t))(v19 + 8);
      v52(v50, v18);
      if (v51)
      {
      }
      else
      {
        uint64_t v68 = 10272;
        unint64_t v69 = 0xE200000000000000;
        sub_1A7571E20();
        sub_1A7572740();
        swift_bridgeObjectRelease();
        sub_1A7572740();
        sub_1A7572740();

        swift_bridgeObjectRelease();
      }
      uint64_t v53 = v64;
      v52(v49, v18);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v65, v31);
      sub_1A72CB560(v53, &qword_1EB704C60);
      v52(v63, v18);
    }
    return v70;
  }
}

unint64_t sub_1A73235AC()
{
  unint64_t result = qword_1E96F1BA0;
  if (!qword_1E96F1BA0)
  {
    sub_1A7571E60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1BA0);
  }
  return result;
}

uint64_t DateComponents.nextDate(after:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v43 = sub_1A7571D70();
  uint64_t v39 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  char v40 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A7571D80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A7571D60();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A7571E00();
  uint64_t v41 = *(void *)(v13 - 8);
  uint64_t v42 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1A75717A0();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v23;
  uint64_t v45 = v22;
  (*(void (**)(char *, uint64_t))(v23 + 16))(v21, v3);
  uint64_t v48 = v21;
  sub_1A7571630();
  if ((v24 & 1) == 0)
  {
    sub_1A7571690();
    if ((v25 & 1) == 0)
    {
      sub_1A7571670();
      if ((v26 & 1) == 0)
      {
        sub_1A7571640();
        sub_1A75716A0();
      }
    }
  }
  uint64_t v27 = v15;
  sub_1A7571DC0();
  uint64_t v28 = *MEMORY[0x1E4F27B68];
  id v29 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  uint64_t v38 = v9;
  v29(v12, v28, v9);
  uint64_t v30 = v5;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F27BA8], v5);
  uint64_t v32 = v39;
  uint64_t v31 = v40;
  uint64_t v33 = v43;
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v40, *MEMORY[0x1E4F27B80], v43);
  sub_1A7571DD0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v30);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v38);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v42);
  uint64_t v34 = sub_1A7571B60();
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v18, 1, v34) == 1)
  {
    sub_1A72CB560((uint64_t)v18, &qword_1EB704C60);
    sub_1A7571B50();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v48, v45);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v48, v45);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v35 + 32))(v47, v18, v34);
  }
}

uint64_t DateComponents.fifteenMinuteBin.getter()
{
  uint64_t v0 = sub_1A75716F0();
  if (v1) {
    return 0;
  }
  uint64_t v2 = v0;
  uint64_t result = sub_1A7571720();
  if (v4) {
    return 0;
  }
  if ((unint64_t)(v2 - 0x2000000000000000) >> 62 != 3)
  {
    __break(1u);
    goto LABEL_8;
  }
  BOOL v5 = __OFADD__(result / 15, 4 * v2);
  uint64_t result = result / 15 + 4 * v2;
  if (v5) {
LABEL_8:
  }
    __break(1u);
  return result;
}

uint64_t DateComponents.dayOfWeekWithCurrentCalendar.getter()
{
  uint64_t v0 = sub_1A7571E00();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571DC0();
  uint64_t v4 = DateComponents.dayOfWeek(with:)((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t DateComponents.dayOfWeek(with:)(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v26 = sub_1A7571DE0();
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v23 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C60);
  MEMORY[0x1F4188790](v3 - 8);
  BOOL v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1A7571B60();
  uint64_t v6 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  char v25 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A75717A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A7571E00();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1A7571750();
  char v17 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v27, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v1, v8);
  if (v17)
  {
    sub_1A7571D90();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v28) == 1)
    {
      sub_1A72CB560((uint64_t)v5, &qword_1EB704C60);
    }
    else
    {
      uint64_t v18 = v6;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v25, v5, v28);
      uint64_t v19 = v23;
      uint64_t v20 = v24;
      (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, *MEMORY[0x1E4F27C68], v26);
      uint64_t v29 = sub_1A7571DF0();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v19, v26);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v25, v28);
    }
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v29;
}

uint64_t DateComponents.applying(other:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v95 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B68);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  id v90 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v101 = (char *)&v84 - v5;
  uint64_t v6 = sub_1A75717A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  id v94 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  char v93 = (char *)&v84 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  id v91 = (char *)&v84 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v100 = (char *)&v84 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v99 = (char *)&v84 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v98 = (char *)&v84 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v97 = (char *)&v84 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  id v88 = (char *)&v84 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v84 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v84 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB701B60);
  uint64_t v30 = MEMORY[0x1F4188790](v29 - 8);
  uint64_t v32 = (char *)&v84 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v34 = (char *)&v84 - v33;
  sub_1A7571770();
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v102 = v1;
  uint64_t v103 = v35;
  v35(v28, v1, v6);
  uint64_t v36 = sub_1A7571E00();
  uint64_t v37 = *(void *)(v36 - 8);
  int v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v32, 1, v36);
  uint64_t v92 = v34;
  uint64_t v96 = v7;
  if (v38 == 1)
  {
    sub_1A7571770();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v7 + 8);
    v39(v28, v6);
    sub_1A72CB560((uint64_t)v32, &qword_1EB701B60);
  }
  else
  {
    uint64_t v39 = *(void (**)(char *, uint64_t))(v7 + 8);
    v39(v28, v6);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v32, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  uint64_t v40 = (uint64_t)v90;
  sub_1A7571790();
  v103(v26, v102, v6);
  uint64_t v41 = sub_1A7571E60();
  uint64_t v42 = *(void *)(v41 - 8);
  int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41);
  uint64_t v44 = v91;
  if (v43 == 1)
  {
    sub_1A7571790();
    v39(v26, v6);
    sub_1A72CB560(v40, &qword_1EB701B68);
  }
  else
  {
    v39(v26, v6);
    uint64_t v45 = v101;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v101, v40, v41);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v45, 0, 1, v41);
  }
  uint64_t v46 = sub_1A75716E0();
  char v48 = v47;
  id v49 = v88;
  uint64_t v50 = v102;
  v103(v88, v102, v6);
  if (v48)
  {
    id v90 = (char *)sub_1A75716E0();
    int v89 = v51 & 1;
  }
  else
  {
    id v90 = (char *)v46;
    int v89 = 0;
  }
  v39(v49, v6);
  uint64_t v96 = sub_1A7571700();
  char v53 = v52;
  uint64_t v54 = v97;
  v103(v97, v50, v6);
  if (v53)
  {
    uint64_t v55 = sub_1A7571700();
    uint64_t v54 = v97;
    uint64_t v96 = v55;
    LODWORD(v88) = v56 & 1;
  }
  else
  {
    LODWORD(v88) = 0;
  }
  v39(v54, v6);
  uint64_t v57 = sub_1A7571710();
  char v59 = v58;
  uint64_t v60 = v98;
  v103(v98, v50, v6);
  if (v59)
  {
    uint64_t v61 = sub_1A7571710();
    uint64_t v60 = v98;
    uint64_t v57 = v61;
    int v87 = v62 & 1;
  }
  else
  {
    int v87 = 0;
  }
  v39(v60, v6);
  uint64_t v98 = (char *)sub_1A75716D0();
  char v64 = v63;
  char v65 = v99;
  v103(v99, v50, v6);
  if (v64)
  {
    uint64_t v66 = sub_1A75716D0();
    char v65 = v99;
    uint64_t v98 = (char *)v66;
    int v86 = v67 & 1;
  }
  else
  {
    int v86 = 0;
  }
  v39(v65, v6);
  uint64_t v99 = (char *)sub_1A75716F0();
  char v69 = v68;
  uint64_t v70 = v100;
  v103(v100, v50, v6);
  if (v69)
  {
    uint64_t v71 = sub_1A75716F0();
    uint64_t v70 = v100;
    uint64_t v99 = (char *)v71;
    int v85 = v72 & 1;
  }
  else
  {
    int v85 = 0;
  }
  v39(v70, v6);
  uint64_t v73 = sub_1A7571720();
  char v75 = v74;
  v103(v44, v50, v6);
  if (v75)
  {
    uint64_t v100 = (char *)sub_1A7571720();
    int v84 = v76 & 1;
  }
  else
  {
    uint64_t v100 = (char *)v73;
    int v84 = 0;
  }
  v39(v44, v6);
  sub_1A7571730();
  char v78 = v77;
  uint64_t v79 = v93;
  v103(v93, v50, v6);
  uint64_t v97 = (char *)v57;
  if (v78) {
    sub_1A7571730();
  }
  v39(v79, v6);
  sub_1A7571620();
  char v81 = v80;
  uint64_t v82 = v94;
  v103(v94, v102, v6);
  if (v81) {
    sub_1A7571620();
  }
  v39(v82, v6);
  return sub_1A7571760();
}

uint64_t sub_1A7324980(uint64_t a1)
{
  return a1;
}

uint64_t RangeReplaceableCollection.apply(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v105 = a3;
  uint64_t v7 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  int v89 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v88 = (char *)&v77 - v11;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v87 = sub_1A75725B0();
  uint64_t v12 = *(void *)(v87 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v87);
  int v86 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  int v85 = (char *)&v77 - v16;
  uint64_t v111 = AssociatedTypeWitness;
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v106 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  char v93 = (char *)&v77 - v20;
  uint64_t v107 = v7;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  id v91 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v77 - v25;
  uint64_t v27 = type metadata accessor for Patch();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v108 = (char *)&v77 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = v30;
  MEMORY[0x1F4188790](v29);
  id v114 = (char *)&v77 - v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v115, a2);
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v109 = v27;
  if (MEMORY[0x1AD0CAD00](v32, v27))
  {
    uint64_t v110 = a2;
    uint64_t v33 = 0;
    uint64_t v103 = v28;
    uint64_t v104 = (void (**)(char *, uint64_t *, uint64_t))(v28 + 16);
    uint64_t v98 = (void (**)(char *, char *, uint64_t))(v22 + 32);
    uint64_t v101 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v102 = (void (**)(char *, char *, uint64_t))(v28 + 32);
    uint64_t v82 = (void (**)(char *, char *, uint64_t))(v17 + 16);
    char v81 = (void (**)(char *, char *, uint64_t))(v17 + 32);
    char v80 = (void (**)(char *, char *, uint64_t))(v12 + 32);
    uint64_t v97 = (void (**)(char *, char *, uint64_t))(v22 + 16);
    uint64_t v79 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v100 = (void (**)(char *, uint64_t))(v22 + 8);
    uint64_t v116 = a4;
    uint64_t v34 = v93;
    uint64_t v115 = v21;
    uint64_t v83 = v22;
    objc_super v112 = v26;
    uint64_t v35 = v109;
    uint64_t v84 = a1;
    while (1)
    {
      char v43 = sub_1A7572AA0();
      sub_1A7572A50();
      if (v43)
      {
        uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v103 + 16))(v114, a1+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(void *)(v103 + 72) * v33, v35);
      }
      else
      {
        uint64_t result = sub_1A75735F0();
        if (v78 != 8) {
          goto LABEL_21;
        }
        uint64_t v117 = result;
        (*v104)(v114, &v117, v35);
        uint64_t result = swift_unknownObjectRelease();
      }
      uint64_t v45 = v108;
      if (__OFADD__(v33, 1)) {
        break;
      }
      (*v102)(v108, v114, v35);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v113 = v33 + 1;
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          char v47 = v106;
          sub_1A7572D90();
          uint64_t v21 = v115;
          sub_1A7572DB0();
          char v48 = *v101;
          id v49 = v47;
          uint64_t v50 = v111;
          (*v101)(v49, v111);
          char v51 = v112;
          sub_1A7572EB0();
          (*v100)(v51, v21);
          v48(v34, v50);
        }
        else
        {
          uint64_t v99 = *(void (**)(char *, uint64_t))v45;
          TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
          uint64_t v53 = *(int *)(TupleTypeMetadata3 + 48);
          (*v98)(v112, &v45[*(int *)(TupleTypeMetadata3 + 64)], v21);
          uint64_t v54 = v106;
          sub_1A7572D90();
          sub_1A7572DB0();
          uint64_t v55 = *v101;
          (*v101)(v54, v111);
          uint64_t result = sub_1A75725A0();
          if ((result & 1) == 0) {
            goto LABEL_20;
          }
          uint64_t v96 = &v45[v53];
          uint64_t v56 = TupleTypeMetadata2;
          uint64_t v57 = v88;
          char v58 = &v88[*(int *)(TupleTypeMetadata2 + 48)];
          char v59 = *v82;
          uint64_t v60 = v111;
          (*v82)(v88, v34, v111);
          id v94 = v58;
          v59(v58, v34, v60);
          uint64_t v61 = *(int *)(v56 + 48);
          char v62 = v89;
          uint64_t v99 = v55;
          char v63 = &v89[v61];
          v59(v89, v57, v60);
          v59(v63, v58, v60);
          char v64 = *v81;
          char v65 = v86;
          (*v81)(v86, v62, v60);
          uint64_t v95 = v33;
          uint64_t v66 = v99;
          v99(v63, v60);
          char v67 = &v62[*(int *)(v56 + 48)];
          v64(v62, v57, v60);
          v64(v67, v94, v60);
          uint64_t v68 = v87;
          v64(&v65[*(int *)(v87 + 36)], v67, v60);
          v66(v62, v60);
          uint64_t v33 = v95;
          char v69 = v85;
          (*v80)(v85, v65, v68);
          sub_1A7325580(v115, v115);
          uint64_t v70 = v83;
          swift_allocObject();
          uint64_t v71 = sub_1A7572A40();
          char v72 = v112;
          (*(void (**)(uint64_t, char *, uint64_t))(v70 + 16))(v73, v112, v115);
          sub_1A7572B30();
          uint64_t v117 = v71;
          swift_getWitnessTable();
          swift_getWitnessTable();
          sub_1A7572ED0();
          char v74 = v69;
          uint64_t v34 = v93;
          uint64_t v75 = v68;
          uint64_t v21 = v115;
          (*v79)(v74, v75);
          v99(v34, v60);
          char v76 = *(void (**)(char *, uint64_t))(v70 + 8);
          v76(v72, v21);
          v76(v96, v21);
          a1 = v84;
        }
      }
      else
      {
        uint64_t v36 = swift_getTupleTypeMetadata2();
        (*v98)(v112, &v45[*(int *)(v36 + 48)], v21);
        uint64_t v37 = v106;
        sub_1A7572D90();
        int v38 = v112;
        uint64_t v21 = v115;
        sub_1A7572DB0();
        uint64_t v39 = *v101;
        uint64_t v40 = v37;
        uint64_t v41 = v111;
        (*v101)(v40, v111);
        (*v97)(v91, v38, v21);
        sub_1A7572EA0();
        v39(v34, v41);
        (*v100)(v38, v21);
      }
      uint64_t v35 = v109;
      uint64_t v42 = MEMORY[0x1AD0CAD00](a1, v109);
      ++v33;
      if (v113 == v42) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t TupleTypeMetadata3;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  uint64_t v90;
  void (**v91)(char *, uint64_t);
  void (**v92)(char *, char *, uint64_t);
  void (**v93)(char *, char *, uint64_t);
  void (**v94)(char *, char *, uint64_t);
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t TupleTypeMetadata2;
  char *v102;
  uint64_t AssociatedConformanceWitness;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  void (**v108)(char *, char *, uint64_t);
  char *v109;
  char *v110;
  void (**v111)(char *, char *, uint64_t);
  void (**v112)(char *, uint64_t);
  uint64_t v113;
  uint64_t v114;
  void (**v115)(char *, char *, uint64_t);
  void (**v116)(char *, uint64_t *, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  void (**v121)(char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t vars8;

  uint64_t v5 = v4;
  uint64_t v117 = a3;
  uint64_t v9 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v100 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v99 = (char *)&v90 - v13;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v98 = sub_1A75725B0();
  uint64_t v14 = *(void *)(v98 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v98);
  uint64_t v97 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v96 = (char *)&v90 - v18;
  uint64_t v123 = AssociatedTypeWitness;
  uint64_t v125 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v102 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v126 = (char *)&v90 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v120 = (char *)&v90 - v23;
  uint64_t v118 = v9;
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v109 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v124 = (char *)&v90 - v28;
  uint64_t v29 = type metadata accessor for ExtendedPatch();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v119 = (char *)&v90 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v90 = v32;
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v90 - v33;
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16);
  uint64_t v129 = a4;
  v35(a4, v5, a2);
  uint64_t v36 = swift_bridgeObjectRetain();
  uint64_t v128 = a1;
  if (MEMORY[0x1AD0CAD00](v36, v29))
  {
    uint64_t v122 = a2;
    uint64_t v37 = 0;
    uint64_t v115 = (void (**)(char *, char *, uint64_t))(v30 + 32);
    uint64_t v116 = (void (**)(char *, uint64_t *, uint64_t))(v30 + 16);
    uint64_t v108 = (void (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v121 = (void (**)(char *, uint64_t))(v125 + 8);
    id v94 = (void (**)(char *, char *, uint64_t))(v125 + 16);
    char v93 = (void (**)(char *, char *, uint64_t))(v125 + 32);
    uint64_t v92 = (void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v111 = (void (**)(char *, char *, uint64_t))(v25 + 16);
    id v91 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v95 = v25;
    objc_super v112 = (void (**)(char *, uint64_t))(v25 + 8);
    int v38 = v120;
    uint64_t v127 = v24;
    uint64_t v39 = v30;
    uint64_t v107 = v34;
    uint64_t v113 = v30;
    id v114 = v29;
    while (2)
    {
      char v47 = sub_1A7572AA0();
      sub_1A7572A50();
      if (v47)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v34, v128+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v37, v29);
      }
      else
      {
        id v88 = sub_1A75735F0();
        if (v90 != 8) {
          goto LABEL_21;
        }
        id v130 = v88;
        (*v116)(v34, &v130, v29);
        swift_unknownObjectRelease();
      }
      char v48 = v119;
      if (!__OFADD__(v37, 1))
      {
        uint64_t v125 = v37 + 1;
        (*v115)(v119, v34, v29);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            id v49 = v126;
            sub_1A7572D90();
            uint64_t v24 = v127;
            sub_1A7572DB0();
            uint64_t v50 = (char *)*v121;
            char v51 = v123;
            (*v121)(v49, v123);
            char v52 = v124;
            sub_1A7572EB0();
            (*v112)(v52, v24);
            ((void (*)(char *, uint64_t))v50)(v38, v51);
            goto LABEL_4;
          case 2u:
            uint64_t v110 = &v48[*(int *)(swift_getTupleTypeMetadata3() + 64)];
            sub_1A7572D90();
            sub_1A7572DB0();
            uint64_t v53 = (char *)*v121;
            uint64_t v54 = v123;
            (*v121)(v126, v123);
            uint64_t v55 = v102;
            sub_1A7572D90();
            uint64_t v56 = v126;
            sub_1A7572DB0();
            uint64_t v57 = v55;
            int v38 = v120;
            ((void (*)(char *, uint64_t))v53)(v57, v54);
            char v58 = v124;
            sub_1A7572EB0();
            (*v111)(v109, v58, v127);
            sub_1A7572EA0();
            char v59 = *v112;
            (*v112)(v58, v127);
            uint64_t v60 = v56;
            uint64_t v34 = v107;
            ((void (*)(char *, uint64_t))v53)(v60, v54);
            ((void (*)(char *, uint64_t))v53)(v38, v54);
            uint64_t v24 = v127;
            v59(v110, v127);
            goto LABEL_4;
          case 3u:
            uint64_t v110 = *(char **)v48;
            TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
            char v62 = *(int *)(TupleTypeMetadata3 + 48);
            (*v108)(v124, &v48[*(int *)(TupleTypeMetadata3 + 64)], v24);
            char v63 = v126;
            sub_1A7572D90();
            sub_1A7572DB0();
            char v64 = (char *)*v121;
            (*v121)(v63, v123);
            if ((sub_1A75725A0() & 1) == 0) {
              goto LABEL_20;
            }
            uint64_t v106 = &v48[v62];
            char v65 = TupleTypeMetadata2;
            uint64_t v66 = *(int *)(TupleTypeMetadata2 + 48);
            char v67 = v99;
            uint64_t v110 = v64;
            uint64_t v68 = &v99[v66];
            char v69 = *v94;
            uint64_t v70 = v123;
            (*v94)(v99, v120, v123);
            uint64_t v104 = v68;
            v69(v68, v120, v70);
            uint64_t v71 = v100;
            char v72 = &v100[*(int *)(v65 + 48)];
            v69(v100, v67, v70);
            v69(v72, v68, v70);
            uint64_t v73 = *v93;
            uint64_t v105 = v37;
            char v74 = v97;
            v73(v97, v71, v70);
            uint64_t v75 = v110;
            ((void (*)(char *, uint64_t))v110)(v72, v70);
            char v76 = *(int *)(v65 + 48);
            uint64_t v34 = v107;
            uint64_t v77 = &v71[v76];
            v73(v71, v67, v70);
            v73(v77, v104, v70);
            uint64_t v78 = v98;
            v73(&v74[*(int *)(v98 + 36)], v77, v70);
            ((void (*)(char *, uint64_t))v75)(v71, v70);
            uint64_t v79 = v96;
            char v80 = v74;
            uint64_t v37 = v105;
            (*v92)(v96, v80, v78);
            char v81 = v127;
            sub_1A7325580(v127, v127);
            uint64_t v82 = v95;
            swift_allocObject();
            uint64_t v83 = sub_1A7572A40();
            uint64_t v84 = v124;
            (*(void (**)(uint64_t, char *, uint64_t))(v82 + 16))(v85, v124, v81);
            id v130 = sub_1A7324980(v83);
            sub_1A7572B30();
            swift_getWitnessTable();
            swift_getWitnessTable();
            sub_1A7572ED0();
            int v86 = v78;
            int v38 = v120;
            (*v91)(v79, v86);
            ((void (*)(char *, uint64_t))v110)(v38, v70);
            uint64_t v87 = *(void (**)(char *, uint64_t))(v82 + 8);
            v87(v84, v81);
            v87(v106, v81);
            uint64_t v24 = v81;
LABEL_4:
            uint64_t v29 = v114;
            uint64_t v46 = MEMORY[0x1AD0CAD00](v128, v114);
            ++v37;
            uint64_t v39 = v113;
            if (v125 != v46) {
              continue;
            }
            return swift_bridgeObjectRelease();
          default:
            uint64_t v40 = swift_getTupleTypeMetadata2();
            uint64_t v41 = v124;
            (*v108)(v124, &v48[*(int *)(v40 + 48)], v127);
            uint64_t v42 = v126;
            sub_1A7572D90();
            uint64_t v24 = v127;
            sub_1A7572DB0();
            char v43 = (char *)*v121;
            uint64_t v44 = v42;
            uint64_t v45 = v123;
            (*v121)(v44, v123);
            (*v111)(v109, v41, v24);
            sub_1A7572EA0();
            ((void (*)(char *, uint64_t))v43)(v38, v45);
            (*v112)(v41, v24);
            goto LABEL_4;
        }
      }
      break;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    JUMPOUT(0x1A75000F0);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7325580(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EB700C80);
  }
  else
  {
    return sub_1A7573BD0();
  }
}

uint64_t sub_1A73255F0(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  void (*v30)(uint64_t *__return_ptr, char *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v5 = sub_1A7571BC0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v29 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v28 = (char *)v24 - v10;
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v32 = v3;
    uint64_t v26 = v9;
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_1A75736F0();
    uint64_t result = sub_1A73263E4(a3);
    uint64_t v13 = result;
    uint64_t v15 = v14;
    char v17 = v16 & 1;
    uint64_t v27 = a3 + 56;
    v24[1] = v6 + 32;
    void v24[2] = v6 + 16;
    uint64_t v25 = (void (**)(char *, uint64_t))(v6 + 8);
    while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(unsigned char *)(a3 + 32))
    {
      if (((*(void *)(v27 + (((unint64_t)v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_13;
      }
      if (*(_DWORD *)(a3 + 36) != v15) {
        goto LABEL_14;
      }
      uint64_t v18 = v28;
      uint64_t v19 = v26;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v28, *(void *)(a3 + 48) + *(void *)(v6 + 72) * v13, v26);
      uint64_t v20 = v29;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v29, v18, v19);
      uint64_t v21 = v32;
      v30(&v33, v20);
      if (v21)
      {
        (*v25)(v20, v19);
        return swift_release();
      }
      uint64_t v32 = 0;
      (*v25)(v20, v19);
      sub_1A75736C0();
      sub_1A7573700();
      sub_1A7573710();
      sub_1A75736D0();
      uint64_t result = sub_1A7347DE4(v13, v15, v17 & 1, a3);
      uint64_t v13 = result;
      uint64_t v15 = v22;
      char v17 = v23 & 1;
      if (!--v11)
      {
        sub_1A7326484(result, v22, v23 & 1);
        return v34;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

void sub_1A73258BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A7571BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v36 = (uint64_t)v32 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v32 - v10;
  uint64_t v46 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A75733C0();
    sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
    sub_1A72D8FDC();
    sub_1A7572CD0();
    a2 = v41;
    uint64_t v34 = v42;
    uint64_t v13 = v43;
    uint64_t v12 = v44;
    unint64_t v14 = v45;
  }
  else
  {
    uint64_t v15 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v16 = *(void *)(a2 + 56);
    uint64_t v34 = a2 + 56;
    uint64_t v13 = ~v15;
    uint64_t v17 = -v15;
    if (v17 < 64) {
      uint64_t v18 = ~(-1 << v17);
    }
    else {
      uint64_t v18 = -1;
    }
    unint64_t v14 = v18 & v16;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
  }
  v32[1] = v13;
  v32[4] = a2 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v33 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v35 = (void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v19 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  v32[3] = MEMORY[0x1E4FBC838] + 8;
  uint64_t v38 = a2;
  if (a2 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v14)
    {
      uint64_t v20 = (v14 - 1) & v14;
      unint64_t v21 = __clz(__rbit64(v14)) | (v12 << 6);
      uint64_t v22 = v12;
      goto LABEL_29;
    }
    int64_t v25 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v25 >= v33) {
      goto LABEL_32;
    }
    unint64_t v26 = *(void *)(v34 + 8 * v25);
    uint64_t v22 = v12 + 1;
    if (!v26)
    {
      uint64_t v22 = v12 + 2;
      if (v12 + 2 >= v33) {
        goto LABEL_32;
      }
      unint64_t v26 = *(void *)(v34 + 8 * v22);
      if (!v26)
      {
        uint64_t v22 = v12 + 3;
        if (v12 + 3 >= v33) {
          goto LABEL_32;
        }
        unint64_t v26 = *(void *)(v34 + 8 * v22);
        if (!v26)
        {
          uint64_t v22 = v12 + 4;
          if (v12 + 4 >= v33) {
            goto LABEL_32;
          }
          unint64_t v26 = *(void *)(v34 + 8 * v22);
          if (!v26)
          {
            uint64_t v22 = v12 + 5;
            if (v12 + 5 >= v33) {
              goto LABEL_32;
            }
            unint64_t v26 = *(void *)(v34 + 8 * v22);
            if (!v26)
            {
              uint64_t v27 = v12 + 6;
              while (v33 != v27)
              {
                unint64_t v26 = *(void *)(v34 + 8 * v27++);
                if (v26)
                {
                  uint64_t v22 = v27 - 1;
                  a2 = v38;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1A72D99A4();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v20 = (v26 - 1) & v26;
    unint64_t v21 = __clz(__rbit64(v26)) + (v22 << 6);
LABEL_29:
    id v24 = *(id *)(*(void *)(a2 + 48) + 8 * v21);
    if (!v24) {
      goto LABEL_32;
    }
    while (1)
    {
      id v28 = objc_msgSend(v24, sel_uuid);
      sub_1A7571BB0();

      uint64_t v29 = v37;
      (*v35)(v37, v11, v4);
      uint64_t v30 = v36;
      sub_1A72DF9A4(v36, v29);
      uint64_t v31 = *v19;
      (*v19)(v30, v4);
      v31((uint64_t)v11, v4);

      uint64_t v12 = v22;
      unint64_t v14 = v20;
      a2 = v38;
      if ((v38 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      uint64_t v23 = sub_1A7573440();
      if (v23)
      {
        uint64_t v39 = v23;
        sub_1A72BEFEC(0, (unint64_t *)&qword_1EB705BA8);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v24 = v40;
        swift_unknownObjectRelease();
        uint64_t v22 = v12;
        uint64_t v20 = v14;
        if (v24) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t REMChangeItemWithUnsavedMembershipsOfRemindersInSections.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:modifiedOn:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A73258BC(MEMORY[0x1E4FBC870], a1);
  uint64_t v14 = v13;
  if (a2)
  {
    id v15 = objc_msgSend(a2, sel_uuid);
    sub_1A7571BB0();

    uint64_t v16 = sub_1A7571BC0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v12, 0, 1, v16);
  }
  else
  {
    uint64_t v17 = sub_1A7571BC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 1, 1, v17);
  }
  REMChangeItemWithUnsavedMembershipsOfRemindersInSections.updateMembershipsOfReminders(withReminderIdentifiers:destinationSectionIdentifier:modifiedOn:)(v14, (uint64_t)v12, a3, a4, a5);
  swift_bridgeObjectRelease();
  return sub_1A72EF338((uint64_t)v12);
}

void REMChangeItemWithUnsavedMembershipsOfRemindersInSections.updateMembershipsOfReminders(withReminderIdentifiers:destinationSectionIdentifier:modifiedOn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v14[2] = a2;
  v14[3] = a3;
  sub_1A73255F0((void (*)(uint64_t *__return_ptr, char *))sub_1A7326204, (uint64_t)v14, a1);
  id v7 = objc_allocWithZone(MEMORY[0x1E4F94BB0]);
  sub_1A72BEFEC(0, (unint64_t *)&qword_1E96F1BA8);
  uint64_t v8 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithMemberships_, v8);

  uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 8))(a4, a5);
  if (v10)
  {
    uint64_t v11 = v10;
    (*(void (**)(id, uint64_t, uint64_t))(a5 + 16))(objc_msgSend(v10, sel_mergingWith_mergePolicy_, v9, 0), a4, a5);
  }
  else
  {
    uint64_t v12 = *(void (**)(id, uint64_t, uint64_t))(a5 + 16);
    id v13 = v9;
    v12(v9, a4, a5);
  }
}

uint64_t sub_1A7325FC0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  unint64_t v21 = a3;
  uint64_t v5 = sub_1A7571B60();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704C40);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A72EFD80(a1, (uint64_t)v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  uint64_t v12 = (void *)sub_1A7571B90();
  uint64_t v13 = sub_1A7571BC0();
  uint64_t v14 = *(void *)(v13 - 8);
  id v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1)
  {
    id v15 = (void *)sub_1A7571B90();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
  }
  id v16 = objc_allocWithZone(MEMORY[0x1E4F94BA8]);
  uint64_t v17 = (void *)sub_1A7571AB0();
  id v18 = objc_msgSend(v16, sel_initWithMemberIdentifier_groupIdentifier_isObsolete_modifiedOn_, v12, v15, 0, v17);

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *unint64_t v21 = v18;
  return result;
}

uint64_t sub_1A7326204@<X0>(void *a1@<X8>)
{
  return sub_1A7325FC0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

id sub_1A7326224()
{
  id v1 = objc_msgSend(v0, sel_unsavedMembershipsOfRemindersInSections);

  return v1;
}

void sub_1A732625C(void *a1)
{
  objc_msgSend(v1, sel_setUnsavedMembershipsOfRemindersInSections_, a1);
}

void (*sub_1A73262A4(void *a1))(id *a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_unsavedMembershipsOfRemindersInSections);
  return sub_1A7326300;
}

void sub_1A7326300(id *a1)
{
  id v1 = *a1;
  objc_msgSend(a1[1], sel_setUnsavedMembershipsOfRemindersInSections_);
}

void (*sub_1A7326348(void *a1))(id *)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_unsavedMembershipsOfRemindersInSections);
  return sub_1A7326498;
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedMembershipsOfRemindersInSections.unsavedMembershipsOfRemindersInSections.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedMembershipsOfRemindersInSections.unsavedMembershipsOfRemindersInSections.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedMembershipsOfRemindersInSections.unsavedMembershipsOfRemindersInSections.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1A73263E4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1A7326484(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static REMPermanentlyHiddenDataView.fetchReminderAndCheckIfPermanentlyHidden(store:reminderID:)(char a1, void *a2)
{
  uint64_t v5 = sub_1A7571BC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  id v10 = objc_allocWithZone(v9);
  id v11 = a2;
  id v12 = objc_msgSend(v11, sel_uuid);
  sub_1A7571BB0();

  uint64_t v13 = (void *)sub_1A7571B90();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  id v14 = objc_msgSend(v11, sel_entityName);
  if (!v14)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    id v14 = (id)sub_1A75725E0();
    swift_bridgeObjectRelease();
  }
  v21.receiver = v10;
  v21.super_class = v9;
  id v15 = objc_msgSendSuper2(&v21, sel_initWithUUID_entityName_, v13, v14);

  type metadata accessor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation();
  id v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  char v17 = a1;
  sub_1A72F4B28((uint64_t)v16, (uint64_t)v15, v19);

  if (!v2)
  {
    char v17 = v19[0];
  }
  return v17 & 1;
}

uint64_t REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.init(reminderID:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t static REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.supportsSecureCoding.getter()
{
  return 1;
}

id REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.reminderID.getter()
{
  return *v0;
}

uint64_t sub_1A73266A4()
{
  return 0x7265646E696D6572;
}

uint64_t sub_1A73266C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7265646E696D6572 && a2 == 0xEA00000000004449)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A7573DB0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A7326764(uint64_t a1)
{
  unint64_t v2 = sub_1A73271DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A73267A0(uint64_t a1)
{
  unint64_t v2 = sub_1A73271DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1BB0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73271DC();
  sub_1A75741B0();
  v9[1] = v7;
  type metadata accessor for REMObjectID_Codable();
  sub_1A7327230(&qword_1EB704E40);
  sub_1A7573B60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1BC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A73271DC();
  sub_1A7574190();
  if (!v2)
  {
    type metadata accessor for REMObjectID_Codable();
    sub_1A7327230(&qword_1EB705A50);
    sub_1A7573A50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A7326AD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A7326AEC(void *a1)
{
  return REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.encode(to:)(a1);
}

uint64_t REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.isPermanentlyHidden.getter()
{
  return *v0;
}

ReminderKitInternal::REMPermanentlyHiddenDataView::PermanentlyHiddenInvocation::Result __swiftcall REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.init(isPermanentlyHidden:)(ReminderKitInternal::REMPermanentlyHiddenDataView::PermanentlyHiddenInvocation::Result isPermanentlyHidden)
{
  v1->isPermanentlyHidden = isPermanentlyHidden.isPermanentlyHidden;
  return isPermanentlyHidden;
}

unint64_t sub_1A7326B14()
{
  return 0xD000000000000013;
}

uint64_t sub_1A7326B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A7327868(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A7326B5C(uint64_t a1)
{
  unint64_t v2 = sub_1A7327274();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A7326B98(uint64_t a1)
{
  unint64_t v2 = sub_1A7327274();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1BC8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7327274();
  sub_1A75741B0();
  sub_1A7573B20();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1BD8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7327274();
  sub_1A7574190();
  if (!v2)
  {
    char v9 = sub_1A7573A10();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A7326E5C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A7326E74(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1BC8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A7327274();
  sub_1A75741B0();
  sub_1A7573B20();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t REMPermanentlyHiddenDataView.deinit()
{
  return v0;
}

uint64_t REMPermanentlyHiddenDataView.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t type metadata accessor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation()
{
  return self;
}

unint64_t sub_1A73271DC()
{
  unint64_t result = qword_1E96F1BB8;
  if (!qword_1E96F1BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1BB8);
  }
  return result;
}

uint64_t sub_1A7327230(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for REMObjectID_Codable();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A7327274()
{
  unint64_t result = qword_1E96F1BD0;
  if (!qword_1E96F1BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1BD0);
  }
  return result;
}

unint64_t sub_1A73272CC()
{
  unint64_t result = qword_1E96F1BE0;
  if (!qword_1E96F1BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1BE0);
  }
  return result;
}

unint64_t sub_1A732732C()
{
  unint64_t result = qword_1E96F1BE8;
  if (!qword_1E96F1BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1BE8);
  }
  return result;
}

uint64_t type metadata accessor for REMPermanentlyHiddenDataView()
{
  return self;
}

uint64_t method lookup function for REMPermanentlyHiddenDataView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMPermanentlyHiddenDataView);
}

ValueMetadata *type metadata accessor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters()
{
  return &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters;
}

uint64_t getEnumTagSinglePayload for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7327538);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result()
{
  return &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result;
}

ValueMetadata *type metadata accessor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.CodingKeys()
{
  return &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.CodingKeys;
}

unsigned char *_s19ReminderKitInternal28REMPermanentlyHiddenDataViewC27PermanentlyHiddenInvocationC6ResultV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A7327620);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.CodingKeys;
}

unint64_t sub_1A732765C()
{
  unint64_t result = qword_1E96F1BF0;
  if (!qword_1E96F1BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1BF0);
  }
  return result;
}

unint64_t sub_1A73276B4()
{
  unint64_t result = qword_1E96F1BF8;
  if (!qword_1E96F1BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1BF8);
  }
  return result;
}

unint64_t sub_1A732770C()
{
  unint64_t result = qword_1E96F1C00;
  if (!qword_1E96F1C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1C00);
  }
  return result;
}

unint64_t sub_1A7327764()
{
  unint64_t result = qword_1E96F1C08;
  if (!qword_1E96F1C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1C08);
  }
  return result;
}

unint64_t sub_1A73277BC()
{
  unint64_t result = qword_1E96F1C10;
  if (!qword_1E96F1C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1C10);
  }
  return result;
}

unint64_t sub_1A7327814()
{
  unint64_t result = qword_1E96F1C18;
  if (!qword_1E96F1C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1C18);
  }
  return result;
}

uint64_t sub_1A7327868(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001A759F7D0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t firstly<A>(closure:)(uint64_t (*a1)(void))
{
  return a1();
}

{
  return a1();
}

void *firstly<A>(closure:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  uint64_t v5 = (void (*)(void))MEMORY[0x1F4188790](a1);
  BOOL v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5();
  type metadata accessor for Promise();
  int v8 = sub_1A72C77C4((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v8;
}

uint64_t firstly<A>(on:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A7328758(a1, a2, a3, a4, (void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A73290FC);
}

{
  void *v7;
  uint64_t v8;

  BOOL v7 = (void *)swift_allocObject();
  void v7[2] = a4;
  v7[3] = a2;
  v7[4] = a3;
  swift_retain();
  type metadata accessor for Promise();
  int v8 = Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A73290FC);
  swift_release();
  return v8;
}

uint64_t sub_1A7327A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v25 = a8;
  uint64_t v26 = a3;
  uint64_t v28 = a5;
  uint64_t v13 = sub_1A7572210();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1A7572260();
  uint64_t v17 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = (void *)swift_allocObject();
  uint64_t v20[2] = v25;
  v20[3] = a6;
  void v20[4] = a7;
  v20[5] = a1;
  uint64_t v21 = v26;
  v20[6] = a2;
  v20[7] = v21;
  v20[8] = a4;
  aBlock[4] = sub_1A73294C0;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A73322E4;
  aBlock[3] = &block_descriptor_63;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A7572240();
  uint64_t v29 = MEMORY[0x1E4FBC860];
  sub_1A732938C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
  sub_1A73293E4();
  sub_1A7573380();
  MEMORY[0x1AD0CB2C0](0, v19, v16, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v27);
  return swift_release();
}

void sub_1A7327D3C(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a1();
  id v12 = (void *)swift_allocObject();
  void v12[2] = a7;
  void v12[3] = a3;
  v12[4] = a4;
  uint64_t v13 = qword_1EB705720;
  swift_retain();
  if (v13 != -1) {
    swift_once();
  }
  id v14 = (id)qword_1EB704C70;
  uint64_t v15 = sub_1A72C01A0(v14, (uint64_t)sub_1A73294F4, (uint64_t)v12);
  swift_release();
  swift_release();

  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a5;
  *(void *)(v16 + 24) = a6;
  uint64_t v17 = (void *)qword_1EB704C70;
  uint64_t v18 = *(void *)(*(void *)(v15 + 16) + 16);
  swift_retain();
  id v19 = v17;
  os_unfair_lock_lock_with_options();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = 0;
  *(unsigned char *)(v20 + 32) = 1;
  *(void *)(v20 + 40) = nullsub_1;
  *(void *)(v20 + 48) = 0;
  *(void *)(v20 + 56) = sub_1A7329524;
  *(void *)(v20 + 64) = v16;
  *(void *)(v20 + 72) = nullsub_1;
  *(void *)(v20 + 80) = 0;
  id v22 = v19;
  swift_retain();
  uint64_t v21 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v20);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
  v21();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1A7327F68(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void *sub_1A7328050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  uint64_t v5 = (void (*)(void))MEMORY[0x1F4188790](a1);
  BOOL v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5();
  type metadata accessor for Promise();
  int v8 = sub_1A72C77C4((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v8;
}

uint64_t firstly<A, B>(on:disposeOn:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A7328BA4(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A7329184);
}

uint64_t sub_1A7328178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v34 = a7;
  uint64_t v35 = a8;
  uint64_t v37 = a5;
  uint64_t v32 = a3;
  uint64_t v33 = a1;
  uint64_t v30 = a9;
  uint64_t v31 = a10;
  uint64_t v13 = sub_1A7572210();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1A7572260();
  uint64_t v17 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  id v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a6 + 16;
  uint64_t v21 = swift_allocObject();
  swift_beginAccess();
  MEMORY[0x1AD0CD420](v20);
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  id v22 = (void *)swift_allocObject();
  uint64_t v23 = v31;
  _OWORD v22[2] = v30;
  id v22[3] = v23;
  uint64_t v24 = v32;
  v22[4] = v21;
  v22[5] = v24;
  uint64_t v25 = v34;
  uint64_t v26 = v35;
  v22[6] = a4;
  v22[7] = v25;
  uint64_t v27 = v33;
  v22[8] = v26;
  v22[9] = v27;
  v22[10] = a2;
  aBlock[4] = sub_1A7329334;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A73322E4;
  aBlock[3] = &block_descriptor_47;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A7572240();
  uint64_t v38 = MEMORY[0x1E4FBC860];
  sub_1A732938C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
  sub_1A73293E4();
  sub_1A7573380();
  MEMORY[0x1AD0CB2C0](0, v19, v16, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v36);
  swift_release();
  return swift_release();
}

void sub_1A7328498(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = a1 + 16;
  swift_beginAccess();
  if (MEMORY[0x1AD0CD420](v15))
  {
    a4();
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = a8;
    void v16[3] = a9;
    v16[4] = a6;
    v16[5] = a7;
    uint64_t v17 = qword_1EB705720;
    swift_retain();
    if (v17 != -1) {
      swift_once();
    }
    id v18 = (id)qword_1EB704C70;
    uint64_t v19 = sub_1A72C01A0(v18, (uint64_t)sub_1A732925C, (uint64_t)v16);
    swift_release();
    swift_release();

    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a2;
    *(void *)(v20 + 24) = a3;
    uint64_t v21 = (void *)qword_1EB704C70;
    uint64_t v22 = *(void *)(*(void *)(v19 + 16) + 16);
    swift_retain();
    id v23 = v21;
    os_unfair_lock_lock_with_options();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v23;
    *(void *)(v24 + 24) = 0;
    *(unsigned char *)(v24 + 32) = 1;
    *(void *)(v24 + 40) = nullsub_1;
    *(void *)(v24 + 48) = 0;
    *(void *)(v24 + 56) = sub_1A7329550;
    *(void *)(v24 + 64) = v20;
    *(void *)(v24 + 72) = nullsub_1;
    *(void *)(v24 + 80) = 0;
    id v25 = v23;
    swift_retain();
    uint64_t v26 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v24);
    swift_release();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 16));
    v26();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_1A72C8344();
    uint64_t v27 = (void *)swift_allocError();
    *(void *)uint64_t v28 = 0;
    *(void *)(v28 + 8) = 0;
    *(void *)(v28 + 16) = 0;
    *(void *)(v28 + 24) = 1;
    *(_OWORD *)(v28 + 32) = 0u;
    *(_OWORD *)(v28 + 48) = 0u;
    a2();
  }
}

uint64_t firstly<A>(syncOn:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A7328758(a1, a2, a3, a4, (void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A732919C);
}

uint64_t sub_1A7328758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t (*)(uint64_t a1), uint64_t, uint64_t (*)(void *a1), uint64_t))
{
  return Promise.__allocating_init(resolver:)(a5);
}

uint64_t sub_1A73287C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a8;
  void v16[3] = a6;
  v16[4] = a7;
  v16[5] = a1;
  v16[6] = a2;
  v16[7] = a3;
  v16[8] = a4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A73292B4;
  *(void *)(v17 + 24) = v16;
  void v20[4] = sub_1A7329554;
  v20[5] = v17;
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 1107296256;
  uint64_t v20[2] = sub_1A72E36EC;
  v20[3] = &block_descriptor_30;
  id v18 = _Block_copy(v20);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(a5, v18);
  _Block_release(v18);
  LOBYTE(a5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a5) {
    __break(1u);
  }
  return result;
}

void sub_1A7328960(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a1();
  id v12 = (void *)swift_allocObject();
  void v12[2] = a7;
  void v12[3] = a3;
  v12[4] = a4;
  uint64_t v13 = qword_1EB705720;
  swift_retain();
  if (v13 != -1) {
    swift_once();
  }
  id v14 = (id)qword_1EB704C70;
  uint64_t v15 = sub_1A72C01A0(v14, (uint64_t)sub_1A7329588, (uint64_t)v12);
  swift_release();
  swift_release();

  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a5;
  *(void *)(v16 + 24) = a6;
  uint64_t v17 = (void *)qword_1EB704C70;
  uint64_t v18 = *(void *)(*(void *)(v15 + 16) + 16);
  swift_retain();
  id v19 = v17;
  os_unfair_lock_lock_with_options();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = 0;
  *(unsigned char *)(v20 + 32) = 1;
  *(void *)(v20 + 40) = nullsub_1;
  *(void *)(v20 + 48) = 0;
  *(void *)(v20 + 56) = sub_1A7329550;
  *(void *)(v20 + 64) = v16;
  *(void *)(v20 + 72) = nullsub_1;
  *(void *)(v20 + 80) = 0;
  id v22 = v19;
  swift_retain();
  uint64_t v21 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v20);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
  v21();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t firstly<A, B>(syncOn:disposeOn:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A7328BA4(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void *), uint64_t))sub_1A73291A8);
}

uint64_t sub_1A7328BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t (*)(uint64_t a1), uint64_t, uint64_t (*)(void *a1), uint64_t))
{
  type metadata accessor for Promise();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = Promise.__allocating_init(resolver:)(a7);
  swift_release();
  return v8;
}

uint64_t sub_1A7328C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15 = a6 + 16;
  uint64_t v16 = swift_allocObject();
  swift_beginAccess();
  MEMORY[0x1AD0CD420](v15);
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  uint64_t v17 = (void *)swift_allocObject();
  id v17[2] = a9;
  v17[3] = a10;
  v17[4] = v16;
  v17[5] = a3;
  v17[6] = a4;
  v17[7] = a7;
  v17[8] = a8;
  v17[9] = a1;
  v17[10] = a2;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1A73291FC;
  *(void *)(v18 + 24) = v17;
  aBlock[4] = sub_1A72C9D1C;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A72E36EC;
  aBlock[3] = &block_descriptor_1;
  id v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(a5, v19);
  _Block_release(v19);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_1A7328E54(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = a1 + 16;
  swift_beginAccess();
  if (MEMORY[0x1AD0CD420](v15))
  {
    a4();
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = a8;
    void v16[3] = a9;
    v16[4] = a6;
    v16[5] = a7;
    uint64_t v17 = qword_1EB705720;
    swift_retain();
    if (v17 != -1) {
      swift_once();
    }
    id v18 = (id)qword_1EB704C70;
    uint64_t v19 = sub_1A72C01A0(v18, (uint64_t)sub_1A732925C, (uint64_t)v16);
    swift_release();
    swift_release();

    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a2;
    *(void *)(v20 + 24) = a3;
    uint64_t v21 = (void *)qword_1EB704C70;
    uint64_t v22 = *(void *)(*(void *)(v19 + 16) + 16);
    swift_retain();
    id v23 = v21;
    os_unfair_lock_lock_with_options();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v23;
    *(void *)(v24 + 24) = 0;
    *(unsigned char *)(v24 + 32) = 1;
    *(void *)(v24 + 40) = nullsub_1;
    *(void *)(v24 + 48) = 0;
    *(void *)(v24 + 56) = sub_1A7329550;
    *(void *)(v24 + 64) = v20;
    *(void *)(v24 + 72) = nullsub_1;
    *(void *)(v24 + 80) = 0;
    id v25 = v23;
    swift_retain();
    uint64_t v26 = (void (*)(void))sub_1A73A8AC8((uint64_t)sub_1A72C9148, v24);
    swift_release();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 16));
    v26();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_1A72C8344();
    uint64_t v27 = (void *)swift_allocError();
    *(void *)uint64_t v28 = 0;
    *(void *)(v28 + 8) = 0;
    *(void *)(v28 + 16) = 0;
    *(void *)(v28 + 24) = 1;
    *(_OWORD *)(v28 + 32) = 0u;
    *(_OWORD *)(v28 + 48) = 0u;
    a2();
  }
}

uint64_t sub_1A73290FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A7327A9C(a1, a2, a3, a4, v4[3], v4[4], v4[5], v4[2]);
}

uint64_t sub_1A7329108()
{
  swift_release();

  return swift_deallocObject();
}

void *sub_1A7329140()
{
  return sub_1A7328050(v0[3], v0[4], v0[2]);
}

uint64_t sub_1A732914C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1A7329184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A73291C0(a1, a2, a3, a4, sub_1A7328178);
}

uint64_t sub_1A732919C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A73287C8(a1, a2, a3, a4, *(NSObject **)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 16));
}

uint64_t sub_1A73291A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A73291C0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))sub_1A7328C64);
}

uint64_t sub_1A73291C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))
{
  return a5(a1, a2, a3, a4, v5[4], v5[5], v5[6], v5[7], v5[2], v5[3]);
}

uint64_t sub_1A73291FC()
{
  return sub_1A732934C((uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_1A7328E54);
}

uint64_t sub_1A7329214()
{
  return swift_deallocObject();
}

uint64_t sub_1A7329224()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A732925C()
{
  return sub_1A7329440();
}

uint64_t sub_1A7329274()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A73292B4()
{
  return sub_1A73294D8((uint64_t (*)(void, void, void, void, void, void, void))sub_1A7328960);
}

uint64_t sub_1A73292CC()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_7Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A7329334()
{
  return sub_1A732934C((uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_1A7328498);
}

uint64_t sub_1A732934C(uint64_t (*a1)(void, void, void, void, void, void, void, void, void))
{
  return a1(v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[2], v1[3]);
}

unint64_t sub_1A732938C()
{
  unint64_t result = qword_1EB704A90;
  if (!qword_1EB704A90)
  {
    sub_1A7572210();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704A90);
  }
  return result;
}

unint64_t sub_1A73293E4()
{
  unint64_t result = qword_1EB704AB0;
  if (!qword_1EB704AB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB704AA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB704AB0);
  }
  return result;
}

uint64_t sub_1A7329440()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t objectdestroy_22Tm()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A73294C0()
{
  return sub_1A73294D8((uint64_t (*)(void, void, void, void, void, void, void))sub_1A7327D3C);
}

uint64_t sub_1A73294D8(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[2]);
}

uint64_t sub_1A73294F4()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1A7329524()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A7329588()
{
  return sub_1A73294F4();
}

uint64_t sub_1A73295A0(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_1A7573830();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t result = sub_1A7572A90();
  *(void *)(result + 16) = a2;
  uint64_t v5 = (unint64_t *)(result + 32);
  if (a2 < 4)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v5 += a2 & 0xFFFFFFFFFFFFFFFCLL;
  int64x2_t v7 = vdupq_n_s64(a1);
  uint64_t v8 = (int64x2_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    int64x2_t *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1A732968C(uint64_t a1, uint64_t a2, double a3)
{
  if (a2 < 0)
  {
    uint64_t result = sub_1A7573830();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      uint64_t v6 = sub_1A7572A90();
      uint64_t v7 = v6;
      *(void *)(v6 + 16) = a2;
      *(void *)(v6 + 32) = a1;
      *(double *)(v6 + 40) = a3;
      if (a2 != 1)
      {
        *(void *)(v6 + 48) = a1;
        *(double *)(v6 + 56) = a3;
        uint64_t v8 = a2 - 2;
        if (v8)
        {
          unint64_t v9 = (double *)(v6 + 72);
          do
          {
            *((void *)v9 - 1) = a1;
            *unint64_t v9 = a3;
            v9 += 2;
            swift_bridgeObjectRetain();
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    }
    return v7;
  }
  return result;
}

uint64_t sub_1A7329790(unint64_t a1, double a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_1A7573830();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t result = sub_1A7572A90();
  *(void *)(result + 16) = a1;
  uint64_t v4 = (double *)(result + 32);
  if (a1 < 4)
  {
    unint64_t v5 = 0;
    double v6 = a2;
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v4 += a1 & 0xFFFFFFFFFFFFFFFCLL;
  double v6 = a2;
  int64x2_t v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  uint64_t v8 = (int64x2_t *)(result + 48);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    int64x2_t *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1A7329884(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_1A7573830();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F0EA0);
      uint64_t v4 = (void *)sub_1A7572A90();
      unint64_t v5 = v4;
      v4[2] = a2;
      v4[4] = a1;
      if (a2 != 1)
      {
        v4[5] = a1;
        uint64_t v6 = a2 - 2;
        if (v6)
        {
          int64x2_t v7 = v4 + 6;
          do
          {
            *v7++ = a1;
            swift_bridgeObjectRetain();
            --v6;
          }
          while (v6);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    }
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_1A7329978(unint64_t a1, int32x2_t a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_1A7573830();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t result = sub_1A7572A90();
  *(void *)(result + 16) = a1;
  uint64_t v4 = (__int32 *)(result + 32);
  if (a1 < 8)
  {
    unint64_t v5 = 0;
    __int32 v6 = a2.i32[0];
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 += a1 & 0xFFFFFFFFFFFFFFF8;
  __int32 v6 = a2.i32[0];
  int32x4_t v7 = vdupq_lane_s32(a2, 0);
  uint64_t v8 = (int32x4_t *)(result + 48);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    int32x4_t *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1A7329A6C()
{
  uint64_t v0 = sub_1A7571E90();
  __swift_allocate_value_buffer(v0, qword_1E96F1C20);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96F1C20);
  if (qword_1EB7042A8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB718F18);
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

ReminderKitInternal::REMTitleEmbeddingMethods_optional __swiftcall REMTitleEmbeddingMethods.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A7573970();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t REMTitleEmbeddingMethods.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65636E65746E6553;
  }
}

uint64_t sub_1A7329BF8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A7542FAC(*a1, *a2);
}

uint64_t sub_1A7329C04()
{
  return sub_1A75015F8();
}

uint64_t sub_1A7329C0C()
{
  sub_1A75726F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A7329CA8()
{
  return sub_1A7503B48();
}

ReminderKitInternal::REMTitleEmbeddingMethods_optional sub_1A7329CB0(Swift::String *a1)
{
  return REMTitleEmbeddingMethods.init(rawValue:)(*a1);
}

void sub_1A7329CBC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEC00000063655632;
  unint64_t v4 = 0x80000001A759DA30;
  unint64_t v5 = 0xD000000000000010;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000011;
    unint64_t v4 = 0x80000001A759DA50;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x65636E65746E6553;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t REMTitleEmbeddingConfig.majorLanguage.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMTitleEmbeddingConfig.revision.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t REMTitleEmbeddingConfig.currentMethod.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMTitleEmbeddingConfig.stopWords.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t static REMTitleEmbeddingConfig.configFileName.getter()
{
  return 0xD000000000000018;
}

void __swiftcall REMTitleEmbeddingConfig.init(majorLanguage:revision:currentMethod:stopWords:)(ReminderKitInternal::REMTitleEmbeddingConfig *__return_ptr retstr, Swift::String majorLanguage, Swift::Int revision, Swift::String currentMethod, Swift::OpaquePointer stopWords)
{
  retstr->majorLanguage = majorLanguage;
  retstr->revision = revision;
  retstr->currentMethod = currentMethod;
  retstr->stopWords = stopWords;
}

uint64_t REMTitleEmbeddingConfig.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A75719C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A7571910();
  uint64_t v9 = sub_1A75719D0();
  if (v2)
  {

    uint64_t v11 = self;
    *(void *)&long long v22 = 0;
    *((void *)&v22 + 1) = 0xE000000000000000;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    *(void *)&long long v22 = 0xD00000000000002ELL;
    *((void *)&v22 + 1) = 0x80000001A759F810;
    sub_1A7571890();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    id v12 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_internalErrorWithDebugDescription_, v12);

    swift_willThrow();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v15(a1, v5);
    return ((uint64_t (*)(char *, uint64_t))v15)(v8, v5);
  }
  else
  {
    uint64_t v13 = v9;
    unint64_t v14 = v10;
    uint64_t v26 = a1;
    sub_1A7571460();
    swift_allocObject();
    sub_1A7571450();
    sub_1A732A0F8();
    sub_1A7571440();
    sub_1A72E3460(v13, v14);
    swift_release();
    uint64_t v17 = v23;
    uint64_t v18 = v24;
    long long v20 = v25;
    long long v21 = v22;
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v19(v26, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v8, v5);
    *(_OWORD *)a2 = v21;
    *(void *)(a2 + 16) = v17;
    *(void *)(a2 + 24) = v18;
    *(_OWORD *)(a2 + 32) = v20;
  }
  return result;
}

unint64_t sub_1A732A0F8()
{
  unint64_t result = qword_1E96F1C38;
  if (!qword_1E96F1C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1C38);
  }
  return result;
}

uint64_t REMTitleEmbeddingConfig.saveConfig(to:)()
{
  uint64_t v1 = sub_1A75719C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *v0;
  uint64_t v5 = *((void *)v0 + 2);
  uint64_t v6 = *((void *)v0 + 3);
  sub_1A7571910();
  sub_1A75714B0();
  swift_allocObject();
  sub_1A75714A0();
  long long v13 = v12;
  uint64_t v14 = v5;
  uint64_t v15 = v6;
  long long v16 = v0[2];
  sub_1A732A580();
  uint64_t v7 = sub_1A7571490();
  unint64_t v9 = v8;
  swift_release();
  sub_1A7571A30();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1A72E3460(v7, v9);
  return 1;
}

unint64_t sub_1A732A580()
{
  unint64_t result = qword_1E96F1C40;
  if (!qword_1E96F1C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1C40);
  }
  return result;
}

uint64_t sub_1A732A5D4()
{
  uint64_t result = 0x6E614C726F6A616DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F697369766572;
      break;
    case 2:
      uint64_t result = 0x4D746E6572727563;
      break;
    case 3:
      uint64_t result = 0x64726F57706F7473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A732A680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A733042C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A732A6A8(uint64_t a1)
{
  unint64_t v2 = sub_1A732EDB8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A732A6E4(uint64_t a1)
{
  unint64_t v2 = sub_1A732EDB8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t REMTitleEmbeddingConfig.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1C48);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  void v12[2] = v1[3];
  void v12[3] = v7;
  uint64_t v8 = v1[4];
  v12[0] = v1[5];
  v12[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A732EDB8();
  sub_1A75741B0();
  char v16 = 0;
  uint64_t v9 = v12[4];
  sub_1A7573B10();
  if (!v9)
  {
    uint64_t v10 = v12[0];
    char v15 = 1;
    sub_1A7573B40();
    char v14 = 2;
    sub_1A7573B10();
    v12[5] = v10;
    char v13 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    sub_1A72A817C(&qword_1EB7003D8);
    sub_1A7573B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMTitleEmbeddingConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1C58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A732EDB8();
  sub_1A7574190();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_1A7573A00();
  uint64_t v11 = v10;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1A7573A30();
  char v25 = 2;
  uint64_t v19 = sub_1A7573A00();
  uint64_t v14 = v13;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  char v24 = 3;
  sub_1A72A817C(&qword_1EB700070);
  uint64_t v21 = v14;
  swift_bridgeObjectRetain();
  sub_1A7573A50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v11;
  uint64_t v16 = v21;
  uint64_t v17 = v19;
  a2[2] = v22;
  a2[3] = v17;
  a2[4] = v16;
  a2[5] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A732AC58(void *a1)
{
  return REMTitleEmbeddingConfig.encode(to:)(a1);
}

uint64_t sub_1A732AC70@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMTitleEmbeddingConfig.init(from:)(a1, a2);
}

void *static REMTitleEmbedding.detectLanguages(string:threshold:)(double a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F388D8]), sel_init);
  uint64_t v3 = (void *)sub_1A75725E0();
  objc_msgSend(v2, sel_processString_, v3);

  uint64_t v4 = sub_1A75730F0();
  sub_1A732F77C(v4, a1);
  swift_bridgeObjectRelease();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1A72D22A4(v5);
  swift_release();
  uint64_t v8 = v6;
  sub_1A732E74C(&v8);
  swift_release();

  return v8;
}

id REMSentence2VecTitleEmbedding.lang.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t REMSentence2VecTitleEmbedding.revision.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t REMSentence2VecTitleEmbedding.__allocating_init(lang:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  REMSentence2VecTitleEmbedding.init(lang:)(a1);
  return v2;
}

uint64_t REMSentence2VecTitleEmbedding.init(lang:)(void *a1)
{
  uint64_t v2 = v1;
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = self;
  id v5 = a1;
  id v6 = objc_msgSend(v4, sel_sentenceEmbeddingForLanguage_, v5);
  if (v6)
  {
    *(void *)(v2 + 32) = v6;
    id v7 = v6;
    id v8 = objc_msgSend(v7, sel_revision);

    *(void *)(v2 + 24) = v8;
  }
  else
  {
    uint64_t v9 = self;
    sub_1A7573560();
    sub_1A7572740();
    type metadata accessor for NLLanguage(0);
    sub_1A7573760();
    uint64_t v10 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_internalErrorWithDebugDescription_, v10);

    swift_willThrow();
    swift_deallocPartialClassInstance();
  }
  return v2;
}

uint64_t REMSentence2VecTitleEmbedding.__allocating_init(from:)()
{
  return sub_1A733063C();
}

void *REMSentence2VecTitleEmbedding.__allocating_init(from:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A72E3500();
  sub_1A7572570();
  swift_bridgeObjectRelease();
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_dominantLanguageForString_, v1);

  if (v2)
  {
    uint64_t v3 = (void *)swift_allocObject();
    REMSentence2VecTitleEmbedding.init(lang:)(v2);
  }
  else
  {
    uint64_t v4 = self;
    uint64_t v3 = (void *)sub_1A75725E0();
    objc_msgSend(v4, sel_internalErrorWithDebugDescription_, v3);

    swift_willThrow();
  }
  return v3;
}

int64_t sub_1A732B100(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t REMSentence2VecTitleEmbedding.vector(for:)(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    uint64_t v10 = (void *)sub_1A7329790((unint64_t)objc_msgSend(*(id *)(v2 + 32), sel_dimension), 0.0);
    swift_bridgeObjectRetain();
    uint64_t v11 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1A72AC59C(0, v10[2] + 1, 1, v10);
    }
    unint64_t v13 = v11[2];
    unint64_t v12 = v11[3];
    if (v13 >= v12 >> 1) {
      uint64_t v11 = sub_1A72AC59C((void *)(v12 > 1), v13 + 1, 1, v11);
    }
    _DWORD v11[2] = v13 + 1;
    uint64_t v14 = &v11[v13];
    goto LABEL_18;
  }
  unint64_t v3 = *(void **)(v2 + 32);
  uint64_t v4 = sub_1A7572F40();
  if (!v4)
  {
    uint64_t v15 = (void *)sub_1A7329790((unint64_t)objc_msgSend(v3, sel_dimension), 0.0);
    swift_bridgeObjectRetain();
    uint64_t v11 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1A72AC59C(0, v15[2] + 1, 1, v15);
    }
    unint64_t v16 = v11[2];
    unint64_t v17 = v11[3];
    unint64_t v18 = v16 + 1;
    if (v16 >= v17 >> 1)
    {
      uint64_t v19 = v11;
      unint64_t v20 = v11[2];
      uint64_t v21 = sub_1A72AC59C((void *)(v17 > 1), v16 + 1, 1, v19);
      unint64_t v16 = v20;
      uint64_t v11 = v21;
    }
    _DWORD v11[2] = v18;
    uint64_t v14 = &v11[v16];
LABEL_18:
    void v14[4] = 0x3FF0000000000000;
    swift_bridgeObjectRelease();
    type metadata accessor for RDVector();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v11;
    unint64_t v8 = v11[2];
    goto LABEL_19;
  }
  id v5 = (void *)v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v5 = sub_1A72AC59C(0, v5[2] + 1, 1, v5);
  }
  unint64_t v7 = v5[2];
  unint64_t v6 = v5[3];
  unint64_t v8 = v7 + 1;
  if (v7 >= v6 >> 1) {
    id v5 = sub_1A72AC59C((void *)(v6 > 1), v7 + 1, 1, v5);
  }
  v5[2] = v8;
  v5[v7 + 4] = 0;
  type metadata accessor for RDVector();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v5;
LABEL_19:
  *(void *)(result + 24) = v8;
  return result;
}

void __swiftcall REMSentence2VecTitleEmbedding.config()(ReminderKitInternal::REMTitleEmbeddingConfig *__return_ptr retstr)
{
}

uint64_t REMSentence2VecTitleEmbedding.deinit()
{
  return v0;
}

uint64_t REMSentence2VecTitleEmbedding.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 40, 7);
}

id sub_1A732B3C8()
{
  return *(id *)(*(void *)v0 + 16);
}

uint64_t sub_1A732B3D4()
{
  return *(void *)(*(void *)v0 + 24);
}

uint64_t sub_1A732B3E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = REMSentence2VecTitleEmbedding.init(lang:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1A732B438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A733063C();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1A732B464(uint64_t a1, uint64_t a2)
{
  return REMSentence2VecTitleEmbedding.vector(for:)(a1, a2);
}

uint64_t sub_1A732B488@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v5 = *(void *)(v3 + 24);
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v5;
  strcpy((char *)(a1 + 24), "Sentence2Vec");
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a1 + 37) = 0;
  *(_WORD *)(a1 + 38) = -5120;
  *(void *)(a1 + 40) = v7;
  return result;
}

uint64_t sub_1A732B4E8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  *(void *)(v2 + 48) = 22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1C88);
  uint64_t inited = swift_initStackObject();
  uint64_t v5 = (void *)*MEMORY[0x1E4F387F0];
  *(void *)(inited + 32) = *MEMORY[0x1E4F387F0];
  uint64_t v6 = (void **)MEMORY[0x1E4F38838];
  *(_OWORD *)(inited + 16) = xmmword_1A757B2C0;
  uint64_t v7 = *v6;
  unint64_t v8 = (void *)*MEMORY[0x1E4F38898];
  *(void *)(inited + 40) = *v6;
  *(void *)(inited + 48) = v8;
  uint64_t v9 = (void *)*MEMORY[0x1E4F387C8];
  *(void *)(inited + 56) = *MEMORY[0x1E4F387C8];
  *(void *)(inited + 64) = v9;
  uint64_t v10 = (void *)*MEMORY[0x1E4F38820];
  uint64_t v11 = (void *)*MEMORY[0x1E4F38828];
  *(void *)(inited + 72) = *MEMORY[0x1E4F38820];
  *(void *)(inited + 80) = v11;
  unint64_t v12 = (void *)*MEMORY[0x1E4F38800];
  *(void *)(inited + 88) = *MEMORY[0x1E4F38800];
  id v13 = v9;
  id v14 = v5;
  id v15 = v7;
  id v16 = v8;
  id v17 = v10;
  id v18 = v11;
  id v19 = v12;
  uint64_t v20 = sub_1A74FA1B8(inited);
  swift_setDeallocating();
  type metadata accessor for NLTag(0);
  swift_arrayDestroy();
  *(void *)(v3 + 56) = v20;
  *(void *)(v3 + 40) = a2;
  *(void *)(v3 + 16) = a1;
  uint64_t v21 = self;
  id v22 = a2;
  id v23 = a1;
  id v24 = objc_msgSend(v21, sel_wordEmbeddingForLanguage_, v23);
  if (v24)
  {
    *(void *)(v3 + 32) = v24;
    id v25 = v24;
    id v26 = objc_msgSend(v25, sel_revision);

    *(void *)(v3 + 24) = v26;
  }
  else
  {
    char v27 = self;
    sub_1A7573560();
    sub_1A7572740();
    type metadata accessor for NLLanguage(0);
    sub_1A7573760();
    sub_1A7572740();
    uint64_t v28 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_internalErrorWithDebugDescription_, v28);

    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  return v3;
}

uint64_t REMUniversalGrammarTitleEmbedding.__allocating_init(from:)()
{
  return sub_1A7330788();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;

  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A72E3500();
  sub_1A7572570();
  swift_bridgeObjectRelease();
  uint64_t v2 = self;
  uint64_t v3 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  uint64_t v4 = objc_msgSend(v2, sel_dominantLanguageForString_, v3);

  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1C60);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1A7578D60;
    uint64_t v6 = (void *)*MEMORY[0x1E4F38850];
    uint64_t v7 = (void *)*MEMORY[0x1E4F38870];
    *(void *)(v5 + 32) = *MEMORY[0x1E4F38850];
    *(void *)(v5 + 40) = v7;
    unint64_t v8 = objc_allocWithZone(MEMORY[0x1E4F388F0]);
    type metadata accessor for NLTagScheme(0);
    uint64_t v9 = v6;
    uint64_t v10 = v7;
    uint64_t v11 = (void *)sub_1A7572A00();
    swift_bridgeObjectRelease();
    unint64_t v12 = objc_msgSend(v8, sel_initWithTagSchemes_, v11);

    uint64_t v1 = swift_allocObject();
    sub_1A732B4E8(v4, v12);
  }
  else
  {
    id v13 = self;
    id v14 = (void *)sub_1A75725E0();
    objc_msgSend(v13, sel_internalErrorWithDebugDescription_, v14);

    swift_willThrow();
  }
  return v1;
}

uint64_t REMUniversalGrammarTitleEmbedding.__allocating_init(lang:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1C60);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A75785A0;
  uint64_t v3 = (void *)*MEMORY[0x1E4F38870];
  *(void *)(v2 + 32) = *MEMORY[0x1E4F38870];
  id v4 = objc_allocWithZone(MEMORY[0x1E4F388F0]);
  type metadata accessor for NLTagScheme(0);
  id v5 = v3;
  uint64_t v6 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v4, sel_initWithTagSchemes_, v6);

  uint64_t v8 = swift_allocObject();
  sub_1A732B4E8(a1, v7);
  return v8;
}

uint64_t _s19ReminderKitInternal29REMSentence2VecTitleEmbeddingC11closestWord3forSSSgAA8RDVectorC_tF_0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(a1 + 16);
  id v4 = *(void **)(v1 + 32);
  swift_bridgeObjectRetain();
  int64_t v5 = sub_1A732B100((int64_t)objc_msgSend(v4, sel_dimension), v3);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  unint64_t v11 = v10;
  if ((v10 & 1) == 0) {
    goto LABEL_2;
  }
  sub_1A7573DF0();
  swift_unknownObjectRetain_n();
  uint64_t v12 = swift_dynamicCastClass();
  if (!v12)
  {
    swift_unknownObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = *(void *)(v12 + 16);
  swift_release();
  if (__OFSUB__(v11 >> 1, v9))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v13 != (v11 >> 1) - v9)
  {
LABEL_14:
    swift_unknownObjectRelease();
LABEL_2:
    sub_1A72D23CC(v5, v7, v9, v11);
    goto LABEL_9;
  }
  if (!swift_dynamicCastClass()) {
    swift_unknownObjectRelease();
  }
LABEL_9:
  swift_unknownObjectRelease();
  uint64_t v14 = sub_1A7572F60();
  swift_release();
  if (*(void *)(v14 + 16))
  {
    uint64_t v15 = *(void *)(v14 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = 0;
  }
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t REMUniversalGrammarTitleEmbedding.vector(for:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  if (a2)
  {
    uint64_t v6 = *(void **)(v2 + 40);
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_1A75725E0();
    objc_msgSend(v6, sel_setString_, v7);

    unint64_t v33 = MEMORY[0x1E4FBC860];
    MEMORY[0x1F4188790](v8);
    sub_1A7573150();
    if (v33 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1A75738D0();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_4;
      }
    }
    else if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      swift_bridgeObjectRelease();
LABEL_16:
      unint64_t v20 = swift_bridgeObjectRetain();
      uint64_t v21 = Array<A>.average()(v20);
      swift_bridgeObjectRelease();
      if (v21)
      {
        swift_beginAccess();
        id v22 = *(void **)(v21 + 16);
        swift_bridgeObjectRetain_n();
        id v23 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v23 = sub_1A72AC59C(0, v22[2] + 1, 1, v22);
        }
        unint64_t v25 = v23[2];
        unint64_t v24 = v23[3];
        if (v25 >= v24 >> 1) {
          id v23 = sub_1A72AC59C((void *)(v24 > 1), v25 + 1, 1, v23);
        }
        v23[2] = v25 + 1;
        v23[v25 + 4] = 0;
        swift_bridgeObjectRelease();
        swift_release();
        type metadata accessor for RDVector();
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = v23;
        uint64_t v26 = v23[2];
      }
      else
      {
        char v27 = (void *)sub_1A7329790((unint64_t)objc_msgSend(*(id *)(v3 + 32), sel_dimension), 0.0);
        swift_bridgeObjectRetain();
        uint64_t v28 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v28 = sub_1A72AC59C(0, v27[2] + 1, 1, v27);
        }
        unint64_t v30 = v28[2];
        unint64_t v29 = v28[3];
        if (v30 >= v29 >> 1) {
          uint64_t v28 = sub_1A72AC59C((void *)(v29 > 1), v30 + 1, 1, v28);
        }
        uint64_t v28[2] = v30 + 1;
        v28[v30 + 4] = 0x3FF0000000000000;
        swift_bridgeObjectRelease();
        type metadata accessor for RDVector();
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = v28;
        uint64_t v26 = v28[2];
      }
      swift_bridgeObjectRelease();
      *(void *)(v13 + 24) = v26;
      return v13;
    }
    if (qword_1E96F0708 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1A7571E90();
    __swift_project_value_buffer(v15, (uint64_t)qword_1E96F1C20);
    swift_bridgeObjectRetain();
    id v16 = sub_1A7571E80();
    os_log_type_t v17 = sub_1A7572FD0();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v32[0] = v19;
      *(_DWORD *)id v18 = 136315138;
      swift_bridgeObjectRetain();
      sub_1A72D1730(a1, a2, v32);
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A72A1000, v16, v17, "Failed vectorizing title: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v19, -1, -1);
      MEMORY[0x1AD0CD330](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_16;
  }
  uint64_t v9 = (void *)sub_1A7329790((unint64_t)objc_msgSend(*(id *)(v2 + 32), sel_dimension), 0.0);
  swift_bridgeObjectRetain();
  unint64_t v10 = v9;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v10 = sub_1A72AC59C(0, v9[2] + 1, 1, v9);
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    unint64_t v10 = sub_1A72AC59C((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  void v10[2] = v12 + 1;
  v10[v12 + 4] = 0x3FF0000000000000;
  swift_bridgeObjectRelease();
  type metadata accessor for RDVector();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v10;
  *(void *)(v13 + 24) = v10[2];
  return v13;
}

uint64_t sub_1A732C1BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (!a1) {
    return 0;
  }
  uint64_t v8 = *(void *)(a4 + 56);
  id v9 = a1;
  if (sub_1A72DB52C((uint64_t)v9, v8))
  {
    uint64_t v10 = sub_1A7572860();
    MEMORY[0x1AD0CA8A0](v10);
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_1A7572F40();
    swift_bridgeObjectRelease();
    if (v11)
    {
      type metadata accessor for RDVector();
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v11;
      *(void *)(v12 + 24) = *(void *)(v11 + 16);
      MEMORY[0x1AD0CABF0]();
      if (*(void *)((*a7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1A7572A60();
      }
      sub_1A7572AB0();
      sub_1A7572A30();
      uint64_t v11 = 1;
    }
  }
  else
  {
    uint64_t v11 = 0;
  }

  return v11;
}

void __swiftcall REMUniversalGrammarTitleEmbedding.config()(ReminderKitInternal::REMTitleEmbeddingConfig *__return_ptr retstr)
{
}

uint64_t sub_1A732C320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v8 = *(void *)(v3 + 24);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v8;
  a3[3] = a1;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  a3[4] = a2;
  a3[5] = v10;
  return result;
}

id *REMUniversalGrammarTitleEmbedding.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMUniversalGrammarTitleEmbedding.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 64, 7);
}

uint64_t sub_1A732C3F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1C60);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1A75785A0;
  uint64_t v6 = (void *)*MEMORY[0x1E4F38870];
  *(void *)(v5 + 32) = *MEMORY[0x1E4F38870];
  id v7 = objc_allocWithZone(MEMORY[0x1E4F388F0]);
  type metadata accessor for NLTagScheme(0);
  id v8 = v6;
  uint64_t v9 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v7, sel_initWithTagSchemes_, v9);

  uint64_t v11 = swift_allocObject();
  uint64_t result = sub_1A732B4E8(a1, v10);
  if (!v2) {
    *a2 = v11;
  }
  return result;
}

uint64_t sub_1A732C4F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A7330788();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1A732C524(uint64_t a1, unint64_t a2)
{
  return REMUniversalGrammarTitleEmbedding.vector(for:)(a1, a2);
}

uint64_t sub_1A732C548@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v5 = *(void *)(v3 + 24);
  *a1 = result;
  a1[1] = v6;
  a1[2] = v5;
  a1[3] = 0xD000000000000010;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  a1[4] = 0x80000001A759DA30;
  a1[5] = v7;
  return result;
}

uint64_t REMFilteredTitleEmbedding.revision.getter()
{
  return *(void *)(v0 + 16);
}

id REMFilteredTitleEmbedding.lang.getter()
{
  return *(id *)(v0 + 24);
}

uint64_t REMFilteredTitleEmbedding.stopWords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A732C5BC(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F38908]), sel_initWithUnit_, 0);
  *(void *)(v3 + 48) = v6;
  *(void *)(v3 + 24) = a1;
  id v7 = a1;
  objc_msgSend(v6, sel_setLanguage_, v7);
  id v8 = objc_msgSend(self, sel_wordEmbeddingForLanguage_, v7);
  if (v8)
  {
    *(void *)(v3 + 32) = v8;
    id v9 = v8;
    id v10 = objc_msgSend(v9, sel_revision);

    *(void *)(v3 + 16) = v10;
    *(void *)(v3 + 40) = a2;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = self;
    sub_1A7573560();
    sub_1A7572740();
    type metadata accessor for NLLanguage(0);
    sub_1A7573760();
    uint64_t v12 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_internalErrorWithDebugDescription_, v12);

    swift_willThrow();
    swift_deallocPartialClassInstance();
  }
  return v3;
}

uint64_t REMFilteredTitleEmbedding.__allocating_init(from:)()
{
  return sub_1A7330978();
}

uint64_t REMFilteredTitleEmbedding.__allocating_init(lang:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1A732C5BC(a1, MEMORY[0x1E4FBC870]);
  return v2;
}

uint64_t REMFilteredTitleEmbedding.__allocating_init(from:stopWordThresholdByPercent:)(uint64_t a1, double a2)
{
  uint64_t v4 = swift_allocObject();
  REMFilteredTitleEmbedding.init(from:stopWordThresholdByPercent:)(a1, a2);
  return v4;
}

uint64_t REMFilteredTitleEmbedding.init(from:stopWordThresholdByPercent:)(uint64_t a1, double a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = *v4;
  uint64_t v138 = v3;
  uint64_t v139 = v7;
  uint64_t v143 = sub_1A7571D10();
  uint64_t v8 = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143);
  v140 = (char *)&v136 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7029E8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v145 = (char *)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_1A7571D30();
  v146 = (char *)*(v12 - 1);
  id v147 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v144 = (char *)&v136 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[6] = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F38908]), sel_initWithUnit_, 0);
  uint64_t v142 = a1;
  v148[0] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A72E3500();
  uint64_t v14 = sub_1A7572570();
  unint64_t v16 = v15;
  os_log_type_t v17 = self;
  id v18 = (void *)sub_1A75725E0();
  id v19 = objc_msgSend(v17, sel_dominantLanguageForString_, v18);

  unint64_t v141 = v4;
  if (v19)
  {
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(self, sel_wordEmbeddingForLanguage_, v19);
    if (v20)
    {
      v4[4] = (uint64_t)v20;
      id v21 = v20;
      id v22 = v19;
      id v137 = v21;
      v4[2] = (uint64_t)objc_msgSend(v137, sel_revision);
      v4[3] = (uint64_t)v22;
      id v23 = (void *)v4[6];
      unint64_t v24 = v22;
      objc_msgSend(v23, sel_setLanguage_, v24);
      if (qword_1E96F0708 == -1) {
        goto LABEL_4;
      }
      goto LABEL_98;
    }
    if (qword_1E96F0708 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_1A7571E90();
    __swift_project_value_buffer(v37, (uint64_t)qword_1E96F1C20);
    id v38 = v19;
    uint64_t v39 = sub_1A7571E80();
    os_log_type_t v40 = sub_1A7572FD0();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      v148[0] = v42;
      *(_DWORD *)uint64_t v41 = 136315138;
      id v137 = v41 + 4;
      uint64_t v43 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      uint64_t v149 = sub_1A72D1730(v43, v44, v148);
      sub_1A7573250();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A72A1000, v39, v40, "failed loading word embedding for detected language %s", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v42, -1, -1);
      MEMORY[0x1AD0CD330](v41, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    if (qword_1E96F0708 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1A7571E90();
    __swift_project_value_buffer(v32, (uint64_t)qword_1E96F1C20);
    swift_bridgeObjectRetain();
    unint64_t v33 = sub_1A7571E80();
    os_log_type_t v34 = sub_1A7572FD0();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      v148[0] = v36;
      *(_DWORD *)uint64_t v35 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v149 = sub_1A72D1730(v14, v16, v148);
      uint64_t v4 = v141;
      sub_1A7573250();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A72A1000, v33, v34, "failed detecting language %s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0CD330](v36, -1, -1);
      MEMORY[0x1AD0CD330](v35, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  uint64_t v46 = v144;
  uint64_t v45 = (uint64_t)v145;
  uint64_t v47 = v143;
  char v48 = v140;
  sub_1A7571C80();
  sub_1A7571D20();
  sub_1A7571CE0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v48, v47);
  uint64_t v49 = sub_1A7571C20();
  uint64_t v50 = *(void *)(v49 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v45, 1, v49) == 1)
  {
    sub_1A7330AF8(v45);
    (*((void (**)(char *, id))v146 + 1))(v46, v147);
    swift_bridgeObjectRelease();
    char v51 = self;
    char v52 = (void *)sub_1A75725E0();
    objc_msgSend(v51, sel_internalErrorWithDebugDescription_, v52);

    swift_willThrow();
LABEL_25:

    swift_deallocPartialClassInstance();
    return (uint64_t)v4;
  }
  sub_1A7571C10();
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v45, v49);
  (*((void (**)(char *, id))v146 + 1))(v46, v147);
  uint64_t v53 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v54 = objc_msgSend(self, sel_wordEmbeddingForLanguage_, v53);
  if (!v54)
  {
    swift_bridgeObjectRelease();
    char v65 = self;
    v148[0] = 0;
    v148[1] = 0xE000000000000000;
    sub_1A7573560();
    sub_1A7572740();
    uint64_t v149 = (uint64_t)v53;
    type metadata accessor for NLLanguage(0);
    sub_1A7573760();
    sub_1A7572740();
    uint64_t v66 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v65, sel_internalErrorWithDebugDescription_, v66);

    swift_willThrow();
    goto LABEL_25;
  }
  v4[4] = (uint64_t)v54;
  id v55 = v54;
  v4[2] = (uint64_t)objc_msgSend(v55, sel_revision);
  v4[3] = (uint64_t)v53;
  uint64_t v56 = (void *)v4[6];
  id v57 = v53;
  objc_msgSend(v56, sel_setLanguage_, v57);
  if (qword_1E96F0708 != -1) {
    swift_once();
  }
  uint64_t v58 = sub_1A7571E90();
  __swift_project_value_buffer(v58, (uint64_t)qword_1E96F1C20);
  id v59 = v57;
  unint64_t v24 = sub_1A7571E80();
  os_log_type_t v60 = sub_1A7572FF0();
  if (os_log_type_enabled(v24, v60))
  {
    id v147 = v55;
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    v148[0] = v62;
    *(_DWORD *)uint64_t v61 = 136315138;
    uint64_t v63 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    uint64_t v149 = sub_1A72D1730(v63, v64, v148);
    sub_1A7573250();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A72A1000, v24, v60, "loaded word embedding for local lang %s", v61, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0CD330](v62, -1, -1);
    MEMORY[0x1AD0CD330](v61, -1, -1);
  }
  else
  {
  }
  uint64_t v26 = 0;
  id v137 = 0;
LABEL_28:
  char v136 = v26;
  uint64_t v139 = *(void *)(v142 + 16);
  if (!v139)
  {
    double v130 = 0.0;
LABEL_88:
    uint64_t v131 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v131);
    *(double *)&(&v136)[-2] = v130;
    *(double *)&(&v136)[-1] = a2;
    uint64_t v132 = swift_bridgeObjectRetain();
    uint64_t v133 = sub_1A7330D50(v132, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A7330B58, (uint64_t)&(&v136)[-4]);
    swift_bridgeObjectRelease();
    uint64_t v134 = sub_1A72E59D0(v133);

    uint64_t v4 = v141;
    v141[5] = v134;
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  v140 = (char *)(v142 + 32);
  uint64_t v67 = swift_bridgeObjectRetain();
  unint64_t v68 = 0;
  char v69 = MEMORY[0x1E4FBC868];
  while (1)
  {
    if (v68 >= *(void *)(v67 + 16))
    {
LABEL_97:
      __break(1u);
LABEL_98:
      swift_once();
LABEL_4:
      uint64_t v25 = sub_1A7571E90();
      __swift_project_value_buffer(v25, (uint64_t)qword_1E96F1C20);
      uint64_t v26 = v24;
      unint64_t v24 = sub_1A7571E80();
      os_log_type_t v27 = sub_1A7572FF0();
      if (os_log_type_enabled(v24, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        v148[0] = v29;
        *(_DWORD *)uint64_t v28 = 136315138;
        uint64_t v30 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        uint64_t v149 = sub_1A72D1730(v30, v31, v148);
        sub_1A7573250();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A72A1000, v24, v27, "loaded word embedding for detected language %s", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0CD330](v29, -1, -1);
        MEMORY[0x1AD0CD330](v28, -1, -1);
      }
      else
      {
      }
      goto LABEL_28;
    }
    uint64_t v70 = v141;
    uint64_t v143 = v68;
    uint64_t v71 = (void *)v141[6];
    swift_bridgeObjectRetain();
    id v72 = v71;
    uint64_t v73 = (void *)sub_1A75725E0();
    objc_msgSend(v72, sel_setString_, v73, v136);

    unint64_t v24 = (id)v70[6];
    uint64_t v74 = sub_1A7572F70();

    uint64_t v149 = MEMORY[0x1E4FBC870];
    uint64_t v75 = *(void *)(v74 + 16);
    if (v75)
    {
      char v76 = v69;
      uint64_t v77 = v74 + 40;
      do
      {
        uint64_t v78 = sub_1A7572860();
        uint64_t v79 = MEMORY[0x1AD0CA8A0](v78);
        uint64_t v81 = v80;
        swift_bridgeObjectRelease();
        unint64_t v24 = &v149;
        sub_1A72DF384(v148, v79, v81);
        swift_bridgeObjectRelease();
        v77 += 16;
        --v75;
      }
      while (v75);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v82 = (char *)v149;
      char v69 = v76;
    }
    else
    {
      uint64_t v82 = (char *)MEMORY[0x1E4FBC870];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v83 = 0;
    ++v143;
    uint64_t v144 = v82;
    uint64_t v84 = *((void *)v82 + 7);
    v146 = v82 + 56;
    uint64_t v85 = 1 << v82[32];
    uint64_t v86 = v85 < 64 ? ~(-1 << v85) : -1;
    unint64_t v87 = v86 & v84;
    id v147 = (id)((unint64_t)(v85 + 63) >> 6);
    if ((v86 & v84) != 0) {
      break;
    }
LABEL_45:
    uint64_t v90 = v83 + 1;
    if (__OFADD__(v83, 1)) {
      goto LABEL_91;
    }
    if (v90 < (uint64_t)v147)
    {
      unint64_t v91 = *(void *)&v146[8 * v90];
      ++v83;
      if (v91) {
        goto LABEL_58;
      }
      uint64_t v83 = v90 + 1;
      if (v90 + 1 < (uint64_t)v147)
      {
        unint64_t v91 = *(void *)&v146[8 * v83];
        if (v91) {
          goto LABEL_58;
        }
        uint64_t v83 = v90 + 2;
        if (v90 + 2 < (uint64_t)v147)
        {
          unint64_t v91 = *(void *)&v146[8 * v83];
          if (v91) {
            goto LABEL_58;
          }
          uint64_t v92 = v90 + 3;
          if (v92 < (uint64_t)v147)
          {
            unint64_t v91 = *(void *)&v146[8 * v92];
            if (v91)
            {
              uint64_t v83 = v92;
LABEL_58:
              unint64_t v87 = (v91 - 1) & v91;
              unint64_t v89 = __clz(__rbit64(v91)) + (v83 << 6);
              goto LABEL_59;
            }
            while (1)
            {
              uint64_t v83 = v92 + 1;
              if (__OFADD__(v92, 1)) {
                goto LABEL_96;
              }
              if (v83 >= (uint64_t)v147) {
                break;
              }
              unint64_t v91 = *(void *)&v146[8 * v83];
              ++v92;
              if (v91) {
                goto LABEL_58;
              }
            }
          }
        }
      }
    }
    swift_release();
    uint64_t v67 = v142;
    unint64_t v68 = v143;
    if (v143 == v139)
    {
      swift_bridgeObjectRelease();
      double v130 = (double)*(uint64_t *)(v142 + 16);
      goto LABEL_88;
    }
  }
  while (1)
  {
    while (1)
    {
      unint64_t v88 = __clz(__rbit64(v87));
      v87 &= v87 - 1;
      unint64_t v89 = v88 | (v83 << 6);
LABEL_59:
      char v93 = (uint64_t *)(*((void *)v82 + 6) + 16 * v89);
      uint64_t v95 = *v93;
      uint64_t v94 = v93[1];
      Class isa = v69[2].isa;
      swift_bridgeObjectRetain();
      if (!isa) {
        break;
      }
      unint64_t v24 = v69;
      unint64_t v97 = sub_1A72B2210(v95, v94);
      if ((v98 & 1) == 0) {
        break;
      }
      uint64_t v99 = *((void *)v69[7].isa + v97);
      uint64_t v100 = v99 + 1;
      if (__OFADD__(v99, 1)) {
        goto LABEL_93;
      }
      uint64_t v145 = (char *)v83;
      unint64_t v24 = v69;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v148[0] = (uint64_t)v24;
      uint64_t v102 = v95;
      unint64_t v104 = sub_1A72B2210(v95, v94);
      Class v105 = v24[2].isa;
      BOOL v106 = (v103 & 1) == 0;
      uint64_t v107 = (uint64_t)v105 + v106;
      if (__OFADD__(v105, v106)) {
        goto LABEL_94;
      }
      char v108 = v103;
      if ((uint64_t)v24[3].isa >= v107)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          char v69 = v148[0];
          if ((v103 & 1) == 0) {
            goto LABEL_82;
          }
        }
        else
        {
          unint64_t v24 = v148;
          sub_1A72BB5E0();
          char v69 = v148[0];
          if ((v108 & 1) == 0) {
            goto LABEL_82;
          }
        }
      }
      else
      {
        sub_1A72B5120(v107, isUniquelyReferenced_nonNull_native);
        unint64_t v24 = v148[0];
        unint64_t v109 = sub_1A72B2210(v102, v94);
        if ((v108 & 1) != (v110 & 1)) {
          goto LABEL_99;
        }
        unint64_t v104 = v109;
        char v69 = v148[0];
        if ((v108 & 1) == 0)
        {
LABEL_82:
          v69[(v104 >> 6) + 8].Class isa = (Class)((uint64_t)v69[(v104 >> 6) + 8].isa | (1 << v104));
          uint64_t v127 = (uint64_t *)((char *)v69[6].isa + 16 * v104);
          uint64_t *v127 = v102;
          v127[1] = v94;
          *((void *)v69[7].isa + v104) = v100;
          Class v128 = v69[2].isa;
          BOOL v125 = __OFADD__(v128, 1);
          uint64_t v129 = (Class)((char *)v128 + 1);
          if (v125) {
            goto LABEL_95;
          }
          v69[2].Class isa = v129;
          swift_bridgeObjectRetain();
          goto LABEL_84;
        }
      }
      *((void *)v69[7].isa + v104) = v100;
LABEL_84:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v82 = v144;
      uint64_t v83 = (uint64_t)v145;
      if (!v87) {
        goto LABEL_45;
      }
    }
    uint64_t v111 = v82;
    uint64_t v112 = v83;
    unint64_t v24 = v69;
    char v113 = swift_isUniquelyReferenced_nonNull_native();
    v148[0] = (uint64_t)v24;
    uint64_t v114 = v95;
    unint64_t v116 = sub_1A72B2210(v95, v94);
    Class v117 = v24[2].isa;
    BOOL v118 = (v115 & 1) == 0;
    uint64_t v119 = (uint64_t)v117 + v118;
    if (__OFADD__(v117, v118))
    {
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    char v120 = v115;
    if ((uint64_t)v24[3].isa < v119) {
      break;
    }
    if (v113)
    {
      char v69 = v148[0];
      if (v115) {
        goto LABEL_42;
      }
    }
    else
    {
      unint64_t v24 = v148;
      sub_1A72BB5E0();
      char v69 = v148[0];
      if (v120)
      {
LABEL_42:
        *((void *)v69[7].isa + v116) = 1;
        goto LABEL_43;
      }
    }
LABEL_74:
    v69[(v116 >> 6) + 8].Class isa = (Class)((uint64_t)v69[(v116 >> 6) + 8].isa | (1 << v116));
    uint64_t v123 = (uint64_t *)((char *)v69[6].isa + 16 * v116);
    *uint64_t v123 = v114;
    v123[1] = v94;
    *((void *)v69[7].isa + v116) = 1;
    Class v124 = v69[2].isa;
    BOOL v125 = __OFADD__(v124, 1);
    uint64_t v126 = (Class)((char *)v124 + 1);
    if (v125) {
      goto LABEL_92;
    }
    v69[2].Class isa = v126;
    swift_bridgeObjectRetain();
LABEL_43:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v83 = v112;
    uint64_t v82 = v111;
    if (!v87) {
      goto LABEL_45;
    }
  }
  sub_1A72B5120(v119, v113);
  unint64_t v24 = v148[0];
  unint64_t v121 = sub_1A72B2210(v114, v94);
  if ((v120 & 1) == (v122 & 1))
  {
    unint64_t v116 = v121;
    char v69 = v148[0];
    if (v120) {
      goto LABEL_42;
    }
    goto LABEL_74;
  }
LABEL_99:
  uint64_t result = sub_1A7574010();
  __break(1u);
  return result;
}

uint64_t REMFilteredTitleEmbedding.vector(for:)(uint64_t a1, unint64_t a2)
{
  if (!a2)
  {
    id v25 = objc_msgSend(*(id *)(v2 + 32), sel_dimension);
    BOOL v26 = __OFADD__(v25, 1);
    unint64_t v27 = (unint64_t)v25 + 1;
    if (v26)
    {
      __break(1u);
LABEL_23:
      swift_bridgeObjectRelease();
LABEL_74:
      swift_bridgeObjectRelease();
      uint64_t v4 = v92;
      char v79 = v94;
      goto LABEL_75;
    }
    goto LABEL_25;
  }
  uint64_t v4 = a2;
  uint64_t v6 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    id v28 = objc_msgSend(*(id *)(v2 + 32), sel_dimension);
    BOOL v26 = __OFADD__(v28, 1);
    unint64_t v27 = (unint64_t)v28 + 1;
    if (v26)
    {
      __break(1u);
      goto LABEL_93;
    }
LABEL_25:
    uint64_t v29 = (void *)sub_1A7329790(v27, 0.0);
    swift_bridgeObjectRetain();
    uint64_t v30 = v29;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v30 = sub_1A72AC59C(0, v29[2] + 1, 1, v29);
    }
    unint64_t v32 = v30[2];
    unint64_t v31 = v30[3];
    if (v32 >= v31 >> 1) {
      uint64_t v30 = sub_1A72AC59C((void *)(v31 > 1), v32 + 1, 1, v30);
    }
    uint64_t v30[2] = v32 + 1;
    v30[v32 + 4] = 0x3FF0000000000000;
    swift_bridgeObjectRelease();
    type metadata accessor for RDVector();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v30;
    *(void *)(v3 + 24) = v30[2];
    return v3;
  }
  swift_bridgeObjectRetain();
  uint64_t v93 = a1;
  _s19ReminderKitInternal25REMFilteredTitleEmbeddingC17decodeEmojiInText_8languageS2S_So10NLLanguageatFZ_0(a1, v4);
  uint64_t v7 = v2;
  uint64_t v8 = *(void **)(v2 + 48);
  uint64_t v9 = (void *)sub_1A75725E0();
  objc_msgSend(v8, sel_setString_, v9);

  uint64_t v10 = sub_1A7572F70();
  unint64_t v99 = MEMORY[0x1E4FBC860];
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v96 = v7;
  if (v11)
  {
    uint64_t v92 = v4;
    int v94 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = *(void *)(v7 + 40);
    uint64_t v14 = -v11;
    uint64_t v15 = v10 + 40;
    uint64_t v16 = v10;
    uint64_t v95 = v10;
    uint64_t v91 = v10 + 40;
LABEL_7:
    uint64_t v17 = v15 + 16 * v12++;
    while (1)
    {
      if ((unint64_t)(v12 - 1) >= *(void *)(v16 + 16))
      {
        __break(1u);
        goto LABEL_90;
      }
      uint64_t v18 = sub_1A7572860();
      uint64_t v19 = MEMORY[0x1AD0CA8A0](v18);
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      if (sub_1A72DB328(v19, v21, v13))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v22 = sub_1A7572F40();
        if (v22)
        {
          uint64_t v23 = v22;
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1A7572680();
          swift_bridgeObjectRelease();
          uint64_t v23 = sub_1A7572F40();
          swift_bridgeObjectRelease();
          if (!v23)
          {
            int v94 = 1;
            uint64_t v16 = v95;
            uint64_t v15 = v91;
            if (v14 + v12) {
              goto LABEL_7;
            }
            swift_bridgeObjectRelease();
LABEL_91:
            swift_bridgeObjectRelease();
            char v79 = 1;
            uint64_t v4 = v92;
LABEL_75:
            uint64_t v80 = Array<A>.average()(v99);
            swift_bridgeObjectRelease();
            if (v80)
            {
              swift_beginAccess();
              uint64_t v81 = *(void *)(v80 + 16);
              swift_bridgeObjectRetain();
              swift_release();
            }
            else
            {
              uint64_t v81 = sub_1A7329790((unint64_t)objc_msgSend(*(id *)(v96 + 32), sel_dimension), 0.0);
            }
            if (v79) {
              uint64_t v82 = &unk_1EFC8F880;
            }
            else {
              uint64_t v82 = &unk_1EFC8F8B0;
            }
            uint64_t v98 = v81;
            sub_1A72D0DC4((uint64_t)v82);
            uint64_t v83 = v98;
            type metadata accessor for RDVector();
            uint64_t v3 = swift_allocObject();
            *(void *)(v3 + 16) = v83;
            *(void *)(v3 + 24) = *(void *)(v83 + 16);
            if ((sub_1A74D9EF8() & 1) == 0)
            {
              swift_bridgeObjectRelease();
              return v3;
            }
            if (qword_1E96F0708 == -1)
            {
LABEL_83:
              uint64_t v84 = sub_1A7571E90();
              __swift_project_value_buffer(v84, (uint64_t)qword_1E96F1C20);
              swift_bridgeObjectRetain();
              uint64_t v85 = sub_1A7571E80();
              os_log_type_t v86 = sub_1A7572FF0();
              if (os_log_type_enabled(v85, v86))
              {
                unint64_t v87 = v4;
                unint64_t v88 = (uint8_t *)swift_slowAlloc();
                uint64_t v89 = swift_slowAlloc();
                uint64_t v98 = v89;
                *(_DWORD *)unint64_t v88 = 136315138;
                swift_bridgeObjectRetain();
                v97[10] = sub_1A72D1730(v93, v87, &v98);
                sub_1A7573250();
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_1A72A1000, v85, v86, "title %s is mapped to all-zero vector", v88, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1AD0CD330](v89, -1, -1);
                MEMORY[0x1AD0CD330](v88, -1, -1);
              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              return v3;
            }
LABEL_93:
            swift_once();
            goto LABEL_83;
          }
        }
        type metadata accessor for RDVector();
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v23;
        *(void *)(v24 + 24) = *(void *)(v23 + 16);
        MEMORY[0x1AD0CABF0]();
        if (*(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1A7572A60();
        }
        sub_1A7572AB0();
        sub_1A7572A30();
        uint64_t v16 = v95;
      }
      ++v12;
      v17 += 16;
      if (v14 + v12 == 1) {
        goto LABEL_23;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v35 = v34;
  if (v33 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v35 == v36)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v38 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
    {
      uint64_t v39 = swift_bridgeObjectRetain();
      uint64_t v40 = v93;
      unint64_t v41 = v4;
LABEL_46:
      v97[0] = 32;
      v97[1] = 0xE100000000000000;
      MEMORY[0x1F4188790](v39);
      v90[2] = v97;
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_1A732E7B8(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A7331AE8, (uint64_t)v90, v40, v41);
      swift_bridgeObjectRelease();
      uint64_t v54 = *(void *)(v53 + 16);
      if (!v54)
      {
        swift_bridgeObjectRelease();
        char v79 = 0;
        goto LABEL_75;
      }
      uint64_t v92 = v4;
      int v94 = 0;
      unint64_t v55 = 0;
      uint64_t v56 = *(void *)(v96 + 40);
      uint64_t v95 = v53 + 32;
      uint64_t v57 = v56 + 56;
      while (1)
      {
        while (1)
        {
          if (v55 >= *(void *)(v53 + 16))
          {
LABEL_90:
            __break(1u);
            goto LABEL_91;
          }
          uint64_t v58 = v55++;
          id v59 = (uint64_t *)(v95 + 32 * v58);
          uint64_t v61 = v59[2];
          uint64_t v60 = v59[3];
          uint64_t v63 = *v59;
          uint64_t v62 = v59[1];
          swift_bridgeObjectRetain();
          uint64_t v64 = MEMORY[0x1AD0CA8A0](v63, v62, v61, v60);
          uint64_t v66 = v65;
          swift_bridgeObjectRelease();
          if (*(void *)(v56 + 16))
          {
            sub_1A75740C0();
            sub_1A75726F0();
            uint64_t v67 = sub_1A7574110();
            uint64_t v68 = -1 << *(unsigned char *)(v56 + 32);
            unint64_t v69 = v67 & ~v68;
            if ((*(void *)(v57 + ((v69 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v69)) {
              break;
            }
          }
LABEL_65:
          uint64_t v76 = sub_1A7572F40();
          if (v76)
          {
            uint64_t v77 = v76;
            swift_bridgeObjectRelease();
LABEL_68:
            type metadata accessor for RDVector();
            uint64_t v78 = swift_allocObject();
            *(void *)(v78 + 16) = v77;
            *(void *)(v78 + 24) = *(void *)(v77 + 16);
            MEMORY[0x1AD0CABF0]();
            if (*(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1A7572A60();
            }
            sub_1A7572AB0();
            sub_1A7572A30();
            if (v55 == v54) {
              goto LABEL_74;
            }
          }
          else
          {
            sub_1A7572680();
            swift_bridgeObjectRelease();
            uint64_t v77 = sub_1A7572F40();
            swift_bridgeObjectRelease();
            if (v77) {
              goto LABEL_68;
            }
            int v94 = 1;
            if (v55 == v54) {
              goto LABEL_91;
            }
          }
        }
        uint64_t v70 = *(void *)(v56 + 48);
        uint64_t v71 = (void *)(v70 + 16 * v69);
        BOOL v72 = *v71 == v64 && v71[1] == v66;
        if (!v72 && (sub_1A7573DB0() & 1) == 0)
        {
          uint64_t v73 = ~v68;
          do
          {
            unint64_t v69 = (v69 + 1) & v73;
            if (((*(void *)(v57 + ((v69 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v69) & 1) == 0) {
              goto LABEL_65;
            }
            uint64_t v74 = (void *)(v70 + 16 * v69);
            BOOL v75 = *v74 == v64 && v74[1] == v66;
          }
          while (!v75 && (sub_1A7573DB0() & 1) == 0);
        }
        swift_bridgeObjectRelease();
        if (v55 == v54) {
          goto LABEL_74;
        }
      }
    }
  }
  uint64_t v42 = sub_1A7572700();
  uint64_t v43 = MEMORY[0x1E4FBC860];
  if (!v42)
  {
LABEL_45:
    v97[0] = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
    sub_1A72E3500();
    uint64_t v40 = sub_1A7572570();
    unint64_t v41 = v52;
    uint64_t v39 = swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  uint64_t v44 = v42;
  v97[0] = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1A72D2D00(0, v42 & ~(v42 >> 63), 0);
  if ((v44 & 0x8000000000000000) == 0)
  {
    uint64_t v43 = v97[0];
    do
    {
      uint64_t v46 = sub_1A7572830();
      unint64_t v48 = v47;
      if ((sub_1A7572530() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v48 = 0xE100000000000000;
        uint64_t v46 = 32;
      }
      v97[0] = v43;
      unint64_t v50 = *(void *)(v43 + 16);
      unint64_t v49 = *(void *)(v43 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_1A72D2D00(v49 > 1, v50 + 1, 1);
        uint64_t v43 = v97[0];
      }
      *(void *)(v43 + 16) = v50 + 1;
      uint64_t v51 = v43 + 16 * v50;
      *(void *)(v51 + 32) = v46;
      *(void *)(v51 + 40) = v48;
      sub_1A7572710();
      --v44;
    }
    while (v44);
    goto LABEL_45;
  }
  __break(1u);
  return result;
}

void __swiftcall REMFilteredTitleEmbedding.config()(ReminderKitInternal::REMTitleEmbeddingConfig *__return_ptr retstr)
{
  uint64_t v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v5 = v4;
  Swift::Int v6 = *(void *)(v1 + 16);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1A72D1F58(v7);
  swift_bridgeObjectRelease();
  retstr->majorLanguage._uint64_t countAndFlagsBits = v3;
  retstr->majorLanguage._object = v5;
  retstr->revision = v6;
  retstr->currentMethod._uint64_t countAndFlagsBits = 0xD000000000000011;
  retstr->currentMethod._object = (void *)0x80000001A759DA50;
  retstr->stopWords._unint64_t rawValue = v8;
}

id *REMFilteredTitleEmbedding.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMFilteredTitleEmbedding.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 56, 7);
}

id sub_1A732E5E4()
{
  return *(id *)(*(void *)v0 + 24);
}

uint64_t sub_1A732E5F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_1A732C5BC(a1, MEMORY[0x1E4FBC870]);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1A732E650@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A7330978();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1A732E67C(uint64_t a1, unint64_t a2)
{
  return REMFilteredTitleEmbedding.vector(for:)(a1, a2);
}

uint64_t sub_1A732E6A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1A72D1F58(v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = 0xD000000000000011;
  a1[4] = 0x80000001A759DA50;
  a1[5] = (uint64_t)v9;
  return result;
}

uint64_t sub_1A732E728()
{
  return REMFilteredTitleEmbedding.closestWord(for:)();
}

uint64_t sub_1A732E74C(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_1A74F9E54(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_1A732EE0C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A732E7B8(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_1A732EC5C(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_1A7572830();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_1A7572710();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_1A7572710();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_1A7572860();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_1A72ACC3C(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_1A72ACC3C((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  id v13[2] = v27 + 1;
  id v28 = &v13[4 * v27];
  v28[4] = v45;
  void v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_1A7572710();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_1A7572860();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1A72ACC3C(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_1A72ACC3C((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    id v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1A7573830();
  __break(1u);
LABEL_42:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A732EC5C(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_1A7572860();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_1A72ACC3C(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_1A72ACC3C((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    void v18[4] = v7;
    void v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

unint64_t sub_1A732EDB8()
{
  unint64_t result = qword_1E96F1C50;
  if (!qword_1E96F1C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1C50);
  }
  return result;
}

uint64_t sub_1A732EE0C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A7573BB0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 8;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v88 = *(double *)(v84 + 16 * i + 8);
        uint64_t v89 = v86;
        uint64_t v90 = v85;
        do
        {
          if (*(double *)v90 >= v88) {
            break;
          }
          if (!v84) {
            goto LABEL_141;
          }
          uint64_t v91 = *(void *)(v90 + 8);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 8);
          *(void *)(v90 - 8) = v91;
          *(double *)uint64_t v90 = v88;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  uint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v93 = v12;
      uint64_t v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v94) {
            goto LABEL_145;
          }
          uint64_t v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_1A732F4F0((char *)(v94 + 16 * v97), (char *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v96 = sub_1A74F9DDC((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_134;
          }
          unint64_t v99 = &v96[16 * v95 + 32];
          *(void *)unint64_t v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_135;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1468);
    uint64_t v8 = sub_1A7572A90();
    *(void *)(v8 + 16) = v7;
    uint64_t v103 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v104 = v6;
  uint64_t v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 16 * v10 + 8);
      double v16 = *(double *)(v11 + 16 * v14 + 8);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        unint64_t v17 = (double *)(v102 + 16 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v16 < v15 == v19 >= *v17) {
            break;
          }
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 16 * v10;
          uint64_t v21 = 16 * v14;
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v20;
              uint64_t v25 = *(void *)(v11 + v21);
              uint64_t v26 = *(void *)(v11 + v21 + 8);
              *(_OWORD *)(v11 + v21) = *(_OWORD *)(v11 + v20 - 16);
              *(void *)(v24 - 16) = v25;
              *(void *)(v24 - 8) = v26;
            }
            ++v23;
            v20 -= 16;
            v21 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v27 >= v3) {
      uint64_t v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      id v28 = (double *)(v11 + 16 * v10);
      do
      {
        double v29 = *(double *)(v11 + 16 * v10 + 8);
        uint64_t v30 = v14;
        uint64_t v31 = v28;
        do
        {
          if (*(v31 - 1) >= v29) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          double v32 = *v31;
          *(_OWORD *)uint64_t v31 = *((_OWORD *)v31 - 1);
          *(v31 - 1) = v29;
          *(v31 - 2) = v32;
          v31 -= 2;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 2;
      }
      while (v10 != v27);
      uint64_t v10 = v27;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1A74F9714(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v106;
    if (v34 >= v33 >> 1)
    {
      uint64_t v83 = sub_1A74F9714((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v106;
      uint64_t v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v35 = v12 + 32;
    uint64_t v36 = &v12[16 * v34 + 32];
    *(void *)uint64_t v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_120;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_121;
          }
          unint64_t v49 = v13 - 2;
          unint64_t v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_123;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_126;
          }
          if (v54 >= v45)
          {
            BOOL v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_130;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_77;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_122;
        }
        unint64_t v49 = v13 - 2;
        unint64_t v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_125;
        }
        uint64_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_128;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_129;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_83:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v60) {
          goto LABEL_124;
        }
        uint64_t v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_127;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v77 = v12;
        uint64_t v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_1A732F4F0((char *)(v11 + 16 * *(void *)v78), (char *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v81 < v79) {
          goto LABEL_117;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_119;
        }
        uint64_t v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v106;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v104;
    uint64_t v3 = v105;
    if (v10 >= v105)
    {
      uint64_t v9 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1A7573830();
  __break(1u);
  return result;
}

uint64_t sub_1A732F4F0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  unint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v25 = __src;
  uint64_t v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      double v18 = &v4[16 * v13];
      uint64_t v23 = v18;
      uint64_t v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        double v19 = (char *)(a3 - 16);
        do
        {
          uint64_t v20 = v19 + 16;
          if (*((double *)v6 - 1) >= *((double *)v18 - 1))
          {
            uint64_t v23 = v18 - 16;
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              *(_OWORD *)double v19 = *((_OWORD *)v18 - 1);
            }
            uint64_t v21 = v6;
            v18 -= 16;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v21 = v6 - 16;
            if (v20 != v6 || v19 >= v6) {
              *(_OWORD *)double v19 = *(_OWORD *)v21;
            }
            uint64_t v25 = v6 - 16;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 16;
          uint64_t v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_1A74F9ADC(&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v23 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      double v15 = v4;
      while (1)
      {
        if (*((double *)v15 + 1) >= *((double *)v6 + 1))
        {
          unint64_t v4 = v15 + 16;
          unint64_t v17 = v15;
          double v16 = v6;
          if (v7 == v15)
          {
            v15 += 16;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 16;
          }
        }
        else
        {
          double v16 = v6 + 16;
          unint64_t v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 16;
        if (v15 < v14)
        {
          uint64_t v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        uint64_t v24 = v4;
        uint64_t v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_1A7573940();
  __break(1u);
  return result;
}

unint64_t *sub_1A732F77C(uint64_t isStackAllocationSafe, double a2)
{
  unint64_t v4 = (unint64_t *)isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    int64_t v8 = sub_1A732F8E8((void *)((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, (uint64_t)v4, a2);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v8;
    }
  }
  else
  {
    int64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    unint64_t v4 = sub_1A732F8E8((unint64_t *)v9, v6, (uint64_t)v4, a2);
    MEMORY[0x1AD0CD330](v9, -1, -1);
  }
  return v4;
}

unint64_t *sub_1A732F8E8(unint64_t *result, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      return (unint64_t *)sub_1A732FA38(result, a2, v5, a3);
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        return (unint64_t *)sub_1A732FA38(result, a2, v5, a3);
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          return (unint64_t *)sub_1A732FA38(result, a2, v5, a3);
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    if (*(double *)(*(void *)(a3 + 56) + 8 * v13) >= a4)
    {
      *(unint64_t *)((char *)result + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1A732FA38(result, a2, v5, a3);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    return (unint64_t *)sub_1A732FA38(result, a2, v5, a3);
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      return (unint64_t *)sub_1A732FA38(result, a2, v5, a3);
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A732FA38(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1C90);
  uint64_t result = sub_1A7573920();
  uint64_t v9 = result;
  unint64_t v33 = a1;
  uint64_t v34 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v34) {
        return v9;
      }
      unint64_t v16 = v33[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v34) {
          return v9;
        }
        unint64_t v16 = v33[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v34) {
            return v9;
          }
          unint64_t v16 = v33[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v34) {
              return v9;
            }
            unint64_t v16 = v33[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v34) {
                  return v9;
                }
                unint64_t v16 = v33[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = 8 * v14;
    double v19 = *(void **)(*(void *)(v4 + 48) + v18);
    uint64_t v20 = *(void *)(*(void *)(v4 + 56) + v18);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A75740C0();
    id v21 = v19;
    sub_1A75726F0();
    uint64_t v22 = sub_1A7574110();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t v31 = 8 * v26;
    *(void *)(*(void *)(v9 + 48) + v31) = v21;
    *(void *)(*(void *)(v9 + 56) + v31) = v20;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A732FCF4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F11B0);
  uint64_t result = sub_1A7573920();
  uint64_t v8 = result;
  uint64_t v31 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v31) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        uint64_t v10 = v14 + 1;
        if (v14 + 1 >= v31) {
          return v8;
        }
        unint64_t v15 = a1[v10];
        if (!v15)
        {
          uint64_t v10 = v14 + 2;
          if (v14 + 2 >= v31) {
            return v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v16 = v14 + 3;
            if (v16 >= v31) {
              return v8;
            }
            unint64_t v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                uint64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_41;
                }
                if (v10 >= v31) {
                  return v8;
                }
                unint64_t v15 = a1[v10];
                ++v16;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v10 = v16;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(*(void *)(v4 + 56) + 8 * v13);
    sub_1A75740C0();
    swift_bridgeObjectRetain();
    sub_1A75726F0();
    uint64_t result = sub_1A7574110();
    uint64_t v21 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    BOOL v29 = (void *)(*(void *)(v8 + 48) + 16 * v24);
    *BOOL v29 = v19;
    v29[1] = v18;
    *(void *)(*(void *)(v8 + 56) + 8 * v24) = v20;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1A732FF9C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_1A733003C(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1A73300AC(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1A733003C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    uint64_t result = sub_1A73549FC(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_1A73300AC(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      id v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v10 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          unint64_t v5 = v10;
        }
        return v5 << 16;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 != (a2 & 0xFFFFFFFFFFFFLL))
        {
          do
LABEL_9:
            int v7 = *(unsigned char *)(v6 + v5--) & 0xC0;
          while (v7 == 128);
          ++v5;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_1A7573680();
        unint64_t v5 = v12;
        if (v12 != v9) {
          goto LABEL_9;
        }
      }
      return v5 << 16;
    }
    uint64_t v8 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v8 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v8)
    {
      return MEMORY[0x1F4184CD0]();
    }
  }
  return result;
}

unint64_t sub_1A73301C0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = sub_1A732FF9C(a1, a3, a4);
  unint64_t result = sub_1A732FF9C(a2, a3, a4);
  unint64_t v9 = result >> 14;
  if (v7 >> 14 < result >> 14)
  {
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v11 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if ((a4 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1A75726B0();
        unint64_t v7 = result;
      }
      else
      {
        unint64_t v12 = v7 >> 16;
        if ((a4 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a3;
          uint64_t v23 = a4 & 0xFFFFFFFFFFFFFFLL;
          int v13 = *((unsigned __int8 *)&v22 + v12);
        }
        else
        {
          unint64_t result = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0) {
            unint64_t result = sub_1A7573680();
          }
          int v13 = *(unsigned __int8 *)(result + v12);
        }
        int v14 = (char)v13;
        unsigned int v15 = __clz(v13 ^ 0xFF) - 24;
        if (v14 >= 0) {
          LOBYTE(v15) = 1;
        }
        unint64_t v7 = ((v12 + v15) << 16) | 5;
      }
      if (v9 <= v7 >> 14) {
        return v11;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  if (v9 < v7 >> 14)
  {
    uint64_t v11 = 0;
    while (!__OFSUB__(v11--, 1))
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1A75726C0();
        unint64_t v7 = result;
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a3;
          uint64_t v23 = a4 & 0xFFFFFFFFFFFFFFLL;
          if ((*((unsigned char *)&v22 + (v7 >> 16) - 1) & 0xC0) == 0x80)
          {
            uint64_t v20 = 0;
            do
              int v21 = *((unsigned char *)&v22 + (v7 >> 16) + v20-- - 2) & 0xC0;
            while (v21 == 128);
            uint64_t v19 = 1 - v20;
          }
          else
          {
            uint64_t v19 = 1;
          }
        }
        else
        {
          unint64_t result = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0) {
            unint64_t result = sub_1A7573680();
          }
          uint64_t v17 = 0;
          do
            int v18 = *(unsigned char *)(result + (v7 >> 16) - 1 + v17--) & 0xC0;
          while (v18 == 128);
          uint64_t v19 = -v17;
        }
        unint64_t v7 = (v7 - (v19 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v9 >= v7 >> 14) {
        return v11;
      }
    }
    goto LABEL_36;
  }
  return 0;
}

uint64_t sub_1A73303D4(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1A7573DB0() & 1;
  }
}

uint64_t sub_1A733042C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E614C726F6A616DLL && a2 == 0xED00006567617567;
  if (v2 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697369766572 && a2 == 0xE800000000000000 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4D746E6572727563 && a2 == 0xED0000646F687465 || (sub_1A7573DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64726F57706F7473 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A7573DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A733063C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_1A75725E0();
  type metadata accessor for REMSentence2VecTitleEmbedding();
  uint64_t v2 = swift_allocObject();
  REMSentence2VecTitleEmbedding.init(lang:)(v1);
  if (v0)
  {
    uint64_t v3 = self;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    uint64_t v4 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_internalErrorWithDebugDescription_, v4, 0xD000000000000023, 0x80000001A759F870);

    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1A7330788()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_1A75725E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96F1C60);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A75785A0;
  uint64_t v3 = (void *)*MEMORY[0x1E4F38870];
  *(void *)(v2 + 32) = *MEMORY[0x1E4F38870];
  id v4 = objc_allocWithZone(MEMORY[0x1E4F388F0]);
  type metadata accessor for NLTagScheme(0);
  id v5 = v3;
  char v6 = (void *)sub_1A7572A00();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v4, sel_initWithTagSchemes_, v6);

  type metadata accessor for REMUniversalGrammarTitleEmbedding();
  uint64_t v8 = swift_allocObject();
  sub_1A732B4E8(v1, v7);
  if (v0)
  {
    unint64_t v9 = self;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    unint64_t v10 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_internalErrorWithDebugDescription_, v10, 0xD000000000000023, 0x80000001A759F870);

    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1A733096C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A732C1BC(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_1A7330978()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1A75725E0();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A72E6AB4(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  type metadata accessor for REMFilteredTitleEmbedding();
  uint64_t v4 = swift_allocObject();
  sub_1A732C5BC(v1, v3);
  if (v0)
  {
    id v5 = self;
    sub_1A7573560();
    swift_bridgeObjectRelease();
    sub_1A7572740();
    swift_bridgeObjectRelease();
    char v6 = (void *)sub_1A75725E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_internalErrorWithDebugDescription_, v6, 0xD000000000000023, 0x80000001A759F870);

    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1A7330AF8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7029E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1A7330B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (double)a3 / *(double *)(v3 + 16) > *(double *)(v3 + 24);
}

uint64_t sub_1A7330B70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v22 = (unint64_t *)result;
  int64_t v6 = 0;
  uint64_t v24 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v10) {
      return sub_1A732FCF4(v22, a2, v23, a3);
    }
    unint64_t v18 = *(void *)(v24 + 8 * v17);
    ++v6;
    if (!v18)
    {
      int64_t v6 = v17 + 1;
      if (v17 + 1 >= v10) {
        return sub_1A732FCF4(v22, a2, v23, a3);
      }
      unint64_t v18 = *(void *)(v24 + 8 * v6);
      if (!v18)
      {
        int64_t v6 = v17 + 2;
        if (v17 + 2 >= v10) {
          return sub_1A732FCF4(v22, a2, v23, a3);
        }
        unint64_t v18 = *(void *)(v24 + 8 * v6);
        if (!v18) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v6 << 6);
LABEL_5:
    int v13 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v12);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = *(void *)(*(void *)(a3 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    LOBYTE(v16) = a4(v14, v15, v16);
    unint64_t result = swift_bridgeObjectRelease();
    if (v16)
    {
      *(unint64_t *)((char *)v22 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
        return sub_1A732FCF4(v22, a2, v23, a3);
      }
    }
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v10) {
    return sub_1A732FCF4(v22, a2, v23, a3);
  }
  unint64_t v18 = *(void *)(v24 + 8 * v19);
  if (v18)
  {
    int64_t v6 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v6 >= v10) {
      return sub_1A732FCF4(v22, a2, v23, a3);
    }
    unint64_t v18 = *(void *)(v24 + 8 * v6);
    ++v19;
    if (v18) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A7330D50(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_1A7330B70((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    unint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_1A7330B70((uint64_t)v11, v8, v6, a2);
    MEMORY[0x1AD0CD330](v11, -1, -1);
  }
  return a3;
}

uint64_t _s19ReminderKitInternal25REMFilteredTitleEmbeddingC17decodeEmojiInText_8languageS2S_So10NLLanguageatFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v100 = sub_1A75741D0();
  uint64_t v4 = *(void *)(v100 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v100);
  unint64_t v99 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v98 = (char *)&v94 - v7;
  uint64_t v120 = sub_1A7574220();
  uint64_t v8 = *(void *)(v120 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v120);
  unint64_t v11 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  Class v117 = (char *)&v94 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v102 = (char *)&v94 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)&v94 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v106 = (char *)&v94 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v94 - v22;
  uint64_t v94 = (void *)MEMORY[0x1AD0CC790](v21);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  uint64_t v24 = (void *)sub_1A75725E0();
  swift_bridgeObjectRelease();
  id v107 = objc_msgSend(self, sel_emojiLocaleDataWithLocaleIdentifier_, v24);

  uint64_t v25 = sub_1A7572700();
  unint64_t v26 = MEMORY[0x1E4FBC860];
  if (v25)
  {
    uint64_t v27 = v25;
    unint64_t v124 = MEMORY[0x1E4FBC860];
    sub_1A72D2D00(0, v25 & ~(v25 >> 63), 0);
    if ((v27 & 0x8000000000000000) == 0)
    {
      uint64_t v28 = 0;
      uint64_t v104 = (void (**)(char *, char *, uint64_t))(v8 + 32);
      BOOL v29 = (void (**)(char *, char *, uint64_t))(v8 + 16);
      uint64_t v30 = (void (**)(char *, uint64_t))(v8 + 8);
      unsigned int v97 = *MEMORY[0x1E4FBC610];
      uint64_t v96 = (void (**)(char *, void, uint64_t))(v4 + 104);
      unint64_t v95 = (void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v31 = 15;
      uint64_t v109 = a1;
      uint64_t v110 = a2;
      uint64_t v32 = v120;
      uint64_t v111 = v27;
      uint64_t v112 = v23;
      uint64_t v105 = v18;
      uint64_t v103 = v29;
      while (v28 != v27)
      {
        uint64_t v115 = v31;
        uint64_t v116 = v28;
        unint64_t v33 = sub_1A7572830();
        unint64_t v35 = v34;
        swift_bridgeObjectRetain();
        unint64_t v36 = sub_1A72DA188(v33, v35);
        swift_bridgeObjectRelease();
        uint64_t v118 = v33;
        unint64_t v121 = v35;
        if ((v36 & 0x100000000) != 0)
        {
          uint64_t v119 = v35 & 0x2000000000000000;
          uint64_t v50 = HIBYTE(v35) & 0xF;
          uint64_t v51 = v33 & 0xFFFFFFFFFFFFLL;
          uint64_t v40 = v35 & 0x1000000000000000;
          uint64_t v52 = v33 & 0x800000000000000;
          unint64_t v49 = v33;
          goto LABEL_16;
        }
        unint64_t v37 = v106;
        sub_1A7574230();
        (*v104)(v23, v37, v32);
        uint64_t v119 = v35 & 0x2000000000000000;
        uint64_t v38 = HIBYTE(v35) & 0xF;
        uint64_t v39 = v23;
        uint64_t v113 = v33 & 0xFFFFFFFFFFFFLL;
        uint64_t v114 = v38;
        if ((v35 & 0x2000000000000000) == 0) {
          uint64_t v38 = v33 & 0xFFFFFFFFFFFFLL;
        }
        uint64_t v40 = v35 & 0x1000000000000000;
        uint64_t v108 = v33 & 0x800000000000000;
        uint64_t v41 = 7;
        if (((v35 >> 60) & ((v33 & 0x800000000000000) == 0)) != 0) {
          uint64_t v41 = 11;
        }
        unint64_t v42 = sub_1A73301C0(0xFuLL, v41 | (v38 << 16), v33, v35);
        uint64_t v43 = v32;
        uint64_t v44 = *v103;
        uint64_t v45 = v105;
        (*v103)(v105, v39, v43);
        if (v42 != 1)
        {
          uint64_t v53 = *v30;
          (*v30)(v45, v43);
          v53(v39, v43);
          uint64_t v32 = v43;
          unint64_t v49 = v118;
          unint64_t v35 = v121;
          uint64_t v51 = v113;
          uint64_t v50 = v114;
          uint64_t v52 = v108;
LABEL_16:
          if (v119) {
            uint64_t v59 = v50;
          }
          else {
            uint64_t v59 = v51;
          }
          if (v52) {
            BOOL v60 = 1;
          }
          else {
            BOOL v60 = v40 == 0;
          }
          uint64_t v61 = 7;
          if (!v60) {
            uint64_t v61 = 11;
          }
          if ((uint64_t)sub_1A73301C0(0xFuLL, v61 | (v59 << 16), v49, v35) < 2 || v59 == 0)
          {
            if (!v59) {
              goto LABEL_68;
            }
            goto LABEL_30;
          }
          uint64_t v113 = (v35 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v114 = v35 & 0xFFFFFFFFFFFFFFLL;
          swift_bridgeObjectRetain();
          uint64_t v69 = 0;
          while (2)
          {
            if (v40)
            {
              sub_1A7573550();
              uint64_t v71 = v70;
            }
            else
            {
              if (v119)
              {
                unint64_t v122 = v49;
                uint64_t v123 = v114;
                if (*((char *)&v122 + v69) < 0)
                {
                  switch(__clz(*((unsigned __int8 *)&v122 + v69) ^ 0xFF))
                  {
                    case 0x1Au:
                      goto LABEL_61;
                    case 0x1Bu:
                      goto LABEL_62;
                    case 0x1Cu:
                      goto LABEL_63;
                    default:
                      break;
                  }
                }
              }
              else
              {
                uint64_t v72 = v113;
                if ((v49 & 0x1000000000000000) == 0) {
                  uint64_t v72 = sub_1A7573680();
                }
                if (*(char *)(v72 + v69) < 0)
                {
                  switch(__clz(*(unsigned __int8 *)(v72 + v69) ^ 0xFF))
                  {
                    case 0x1Au:
LABEL_61:
                      uint64_t v71 = 2;
                      break;
                    case 0x1Bu:
LABEL_62:
                      uint64_t v71 = 3;
                      break;
                    case 0x1Cu:
LABEL_63:
                      uint64_t v71 = 4;
                      break;
                    default:
                      goto LABEL_55;
                  }
                  goto LABEL_56;
                }
              }
LABEL_55:
              uint64_t v71 = 1;
            }
LABEL_56:
            uint64_t v73 = v117;
            sub_1A7574230();
            char v74 = sub_1A75741E0();
            uint64_t v75 = *v30;
            unint64_t v76 = v73;
            uint64_t v77 = v120;
            (*v30)(v76, v120);
            if (v74)
            {
              swift_bridgeObjectRelease();
              uint64_t v32 = v77;
LABEL_67:
              unint64_t v49 = v118;
              goto LABEL_68;
            }
            sub_1A7574230();
            char v78 = sub_1A7574210();
            v75(v11, v77);
            if (v78)
            {
              swift_bridgeObjectRelease();
              uint64_t v32 = v120;
              goto LABEL_67;
            }
            v69 += v71;
            uint64_t v32 = v120;
            unint64_t v49 = v118;
            if (v69 >= v59)
            {
              unint64_t v35 = v121;
              swift_bridgeObjectRelease();
              if (!v59) {
                goto LABEL_68;
              }
LABEL_30:
              uint64_t v63 = v35 & 0xFFFFFFFFFFFFFFLL;
              uint64_t v118 = (v35 & 0xFFFFFFFFFFFFFFFLL) + 32;
              swift_bridgeObjectRetain();
              uint64_t v64 = 0;
              while (2)
              {
                if (v40)
                {
                  sub_1A7573550();
                  uint64_t v66 = v65;
                }
                else
                {
                  if (v119)
                  {
                    unint64_t v122 = v49;
                    uint64_t v123 = v63;
                    if (*((char *)&v122 + v64) < 0)
                    {
                      switch(__clz(*((unsigned __int8 *)&v122 + v64) ^ 0xFF))
                      {
                        case 0x1Au:
                          goto LABEL_44;
                        case 0x1Bu:
                          goto LABEL_45;
                        case 0x1Cu:
                          goto LABEL_46;
                        default:
                          break;
                      }
                    }
                  }
                  else
                  {
                    uint64_t v67 = v118;
                    if ((v49 & 0x1000000000000000) == 0) {
                      uint64_t v67 = sub_1A7573680();
                    }
                    if (*(char *)(v67 + v64) < 0)
                    {
                      switch(__clz(*(unsigned __int8 *)(v67 + v64) ^ 0xFF))
                      {
                        case 0x1Au:
LABEL_44:
                          uint64_t v66 = 2;
                          break;
                        case 0x1Bu:
LABEL_45:
                          uint64_t v66 = 3;
                          break;
                        case 0x1Cu:
LABEL_46:
                          uint64_t v66 = 4;
                          break;
                        default:
                          goto LABEL_39;
                      }
                      goto LABEL_40;
                    }
                  }
LABEL_39:
                  uint64_t v66 = 1;
                }
LABEL_40:
                sub_1A7574230();
                char v68 = sub_1A7574200();
                (*v30)(v11, v32);
                if ((v68 & 1) == 0)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_72;
                }
                v64 += v66;
                if (v64 >= v59)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_68;
                }
                continue;
              }
            }
            continue;
          }
        }
        char v46 = sub_1A7574200();
        uint64_t v47 = v102;
        v44(v102, v45, v43);
        if (v46)
        {
          BOOL v48 = *v30;
          (*v30)(v47, v43);
          v48(v45, v43);
          v48(v112, v43);
          uint64_t v32 = v43;
          unint64_t v49 = v118;
          goto LABEL_68;
        }
        uint64_t v54 = v98;
        sub_1A75741F0();
        unint64_t v55 = v99;
        uint64_t v56 = v100;
        (*v96)(v99, v97, v100);
        int v101 = sub_1A75741C0();
        uint64_t v57 = *v95;
        (*v95)(v55, v56);
        v57(v54, v56);
        BOOL v58 = *v30;
        (*v30)(v102, v43);
        v58(v45, v43);
        v58(v112, v43);
        uint64_t v32 = v43;
        unint64_t v49 = v118;
        unint64_t v35 = v121;
        uint64_t v51 = v113;
        uint64_t v50 = v114;
        uint64_t v52 = v108;
        if ((v101 & 1) == 0) {
          goto LABEL_16;
        }
LABEL_68:
        swift_bridgeObjectRetain();
        id v79 = v107;
        uint64_t v80 = (void *)sub_1A75725E0();
        swift_bridgeObjectRelease();
        id v81 = objc_msgSend(self, sel_emojiTokenWithString_localeData_, v80, v79);

        if (v81)
        {
          id v82 = objc_msgSend(v81, sel_nameForType_, 2);
          if (v82)
          {
            uint64_t v83 = v82;
            unint64_t v49 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
            unint64_t v85 = v84;
            swift_bridgeObjectRelease();

            unint64_t v121 = v85;
          }
          else
          {
          }
        }
LABEL_72:
        unint64_t v26 = v124;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A72D2D00(0, *(void *)(v26 + 16) + 1, 1);
          unint64_t v26 = v124;
        }
        uint64_t v86 = v116;
        unint64_t v88 = *(void *)(v26 + 16);
        unint64_t v87 = *(void *)(v26 + 24);
        if (v88 >= v87 >> 1)
        {
          sub_1A72D2D00(v87 > 1, v88 + 1, 1);
          uint64_t v86 = v116;
          unint64_t v26 = v124;
        }
        uint64_t v89 = v86 + 1;
        *(void *)(v26 + 16) = v88 + 1;
        unint64_t v90 = v26 + 16 * v88;
        unint64_t v91 = v121;
        *(void *)(v90 + 32) = v49;
        *(void *)(v90 + 40) = v91;
        uint64_t v31 = sub_1A7572710();
        uint64_t v28 = v89;
        uint64_t v27 = v111;
        uint64_t v23 = v112;
        if (v89 == v111) {
          goto LABEL_80;
        }
      }
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x1A7331AA8);
  }
LABEL_80:
  unint64_t v122 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB704AC0);
  sub_1A72E3500();
  uint64_t v92 = sub_1A7572570();
  swift_bridgeObjectRelease();

  return v92;
}

uint64_t sub_1A7331AE8(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_1A7573DB0() & 1;
  }
}

unint64_t sub_1A7331B44()
{
  unint64_t result = qword_1E96F1C68;
  if (!qword_1E96F1C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1C68);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for REMTitleEmbeddingMethods(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7331C64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTitleEmbeddingMethods()
{
  return &type metadata for REMTitleEmbeddingMethods;
}

uint64_t destroy for REMTitleEmbeddingConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMTitleEmbeddingConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for REMTitleEmbeddingConfig(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMTitleEmbeddingConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTitleEmbeddingConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTitleEmbeddingConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTitleEmbeddingConfig()
{
  return &type metadata for REMTitleEmbeddingConfig;
}

uint64_t dispatch thunk of REMTitleEmbedding.lang.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of REMTitleEmbedding.revision.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of REMTitleEmbedding.init(lang:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of REMTitleEmbedding.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of REMTitleEmbedding.vector(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of REMTitleEmbedding.config()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of REMTitleEmbedding.closestWord(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t type metadata accessor for REMSentence2VecTitleEmbedding()
{
  return self;
}

uint64_t method lookup function for REMSentence2VecTitleEmbedding(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMSentence2VecTitleEmbedding);
}

uint64_t dispatch thunk of REMSentence2VecTitleEmbedding.__allocating_init(lang:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for REMUniversalGrammarTitleEmbedding()
{
  return self;
}

uint64_t method lookup function for REMUniversalGrammarTitleEmbedding(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMUniversalGrammarTitleEmbedding);
}

uint64_t type metadata accessor for REMFilteredTitleEmbedding()
{
  return self;
}

uint64_t method lookup function for REMFilteredTitleEmbedding(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for REMFilteredTitleEmbedding);
}

uint64_t dispatch thunk of REMFilteredTitleEmbedding.__allocating_init(from:stopWordThresholdByPercent:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

unsigned char *storeEnumTagSinglePayload for REMTitleEmbeddingConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A7332148);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTitleEmbeddingConfig.CodingKeys()
{
  return &type metadata for REMTitleEmbeddingConfig.CodingKeys;
}

unint64_t sub_1A7332184()
{
  unint64_t result = qword_1E96F1C70;
  if (!qword_1E96F1C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1C70);
  }
  return result;
}

unint64_t sub_1A73321DC()
{
  unint64_t result = qword_1E96F1C78;
  if (!qword_1E96F1C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1C78);
  }
  return result;
}

unint64_t sub_1A7332234()
{
  unint64_t result = qword_1E96F1C80;
  if (!qword_1E96F1C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96F1C80);
  }
  return result;
}

uint64_t sub_1A7332288()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A73322C0()
{
  return swift_deallocObject();
}

uint64_t sub_1A73322E4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

BOOL static REMCache.ExecutionMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t REMCache.ExecutionMode.hash(into:)()
{
  return sub_1A75740D0();
}

uint64_t REMCache.ExecutionMode.hashValue.getter()
{
  return sub_1A7574110();
}

uint64_t sub_1A73323C0()
{
  return sub_1A7574110();
}

uint64_t REMCache.__allocating_init(cacheQueue:countLimit:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  REMCache.init(cacheQueue:countLimit:)(a1, a2);
  return v4;
}

uint64_t REMCache.init(cacheQueue:countLimit:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)(v3 + 16) = a1;
  type metadata accessor for REMCacheContext();
  uint64_t v5 = swift_allocObject();
  sub_1A7332EF8(a2);
  *(void *)(v3 + 24) = v5;
  return v3;
}

uint64_t type metadata accessor for REMCacheContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A73324EC(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1A7332EF8(a1);
  return v2;
}

uint64_t sub_1A733252C(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v4;
  uint64_t v9 = (void *)sub_1A7572210();
  uint64_t v21 = *(v9 - 1);
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1A7572260();
  uint64_t v12 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  dispatch_queue_t v22 = (dispatch_queue_t)v4[2];
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  if (a1)
  {
    uint64_t v9 = (void *)swift_allocObject();
    void v9[2] = *(void *)(v8 + 80);
    uint64_t v9[3] = *(void *)(v8 + 88);
    v9[4] = v15;
    v9[5] = a2;
    void v9[6] = a3;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_1A7332984;
    *(void *)(v12 + 24) = v9;
    uint64_t v28 = sub_1A72C9D1C;
    BOOL v29 = (void *)v12;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v25 = 1107296256;
    unint64_t v26 = sub_1A72E36EC;
    uint64_t v27 = &block_descriptor_2;
    unint64_t v11 = (char *)_Block_copy(&aBlock);
    uint64_t v15 = (uint64_t)v29;
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v22, v11);
    _Block_release(v11);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  unint64_t v18 = (void *)swift_allocObject();
  _OWORD v18[2] = *(void *)(v8 + 80);
  void v18[3] = *(void *)(v8 + 88);
  void v18[4] = v15;
  void v18[5] = a2;
  v18[6] = a3;
  uint64_t v28 = sub_1A7332984;
  BOOL v29 = v18;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v25 = 1107296256;
  unint64_t v26 = sub_1A73322E4;
  uint64_t v27 = &block_descriptor_13;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  sub_1A7572240();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1A732938C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB704AA0);
  sub_1A73293E4();
  sub_1A7573380();
  MEMORY[0x1AD0CB2C0](0, v14, v11, v19);
  _Block_release(v19);
  (*(void (**)(char *, void *))(v21 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  swift_release();
  return swift_release();
}

uint64_t sub_1A7332948()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1A7332988()
{
  return swift_deallocObject();
}

uint64_t sub_1A733299C()
{
  return sub_1A7332CF4(*(void *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t sub_1A73329C0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v6 = *v4;
  uint64_t v22 = sub_1A7572260();
  uint64_t v7 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A7572210();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = *a1;
  sub_1A7572200();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = swift_weakInit();
  if (v14)
  {
    MEMORY[0x1F4188790](v16);
    *((_OWORD *)&v22 - 3) = *(_OWORD *)(v6 + 80);
    uint64_t v17 = v23;
    *(&v22 - 4) = v15;
    *(&v22 - 3) = v17;
    *(&v22 - 2) = v24;
    sub_1A75730B0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    unint64_t v18 = (void *)swift_allocObject();
    _OWORD v18[2] = *(void *)(v6 + 80);
    void v18[3] = *(void *)(v6 + 88);
    void v18[4] = v15;
    uint64_t v19 = v24;
    void v18[5] = v23;
    v18[6] = v19;
    aBlock[4] = sub_1A7332984;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A73322E4;
    aBlock[3] = &block_descriptor_21;
    uint64_t v20 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_1A7572240();
    MEMORY[0x1AD0CB2C0](0, v9, v13, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1A7332CF4(uint64_t a1, void (*a2)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = swift_retain();
    a2(v4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A7332D74(uint64_t a1, void (*a2)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = swift_retain();
    a2(v4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A7332E04()
{
  return sub_1A7332D74(*(void *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t sub_1A7332E2C(char *a1)
{
  char v2 = *a1;
  return sub_1A73329C0(&v2, (uint64_t)sub_1A7332E70, 0);
}

id sub_1A7332E70(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 16), sel_removeAllObjects);
}

Swift::Void __swiftcall REMCacheContext.clearAll()()
{
  objc_msgSend(*(id *)(v0 + 16), sel_removeAllObjects);
}

uint64_t REMCache.deinit()
{
  swift_release();
  return v0;
}

uint64_t REMCache.__deallocating_deinit()
{
  swift_release();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t sub_1A7332EF8(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB702868);
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  *(void *)(v1 + 16) = v3;
  objc_msgSend(v3, sel_setCountLimit_, a1);
  return v1;
}

uint64_t REMCacheContext.deinit()
{
  return v0;
}

uint64_t REMCacheContext.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 24, 7);
}