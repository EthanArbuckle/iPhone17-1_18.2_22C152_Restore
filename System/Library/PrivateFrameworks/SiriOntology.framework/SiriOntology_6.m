uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MillimolePerLiter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MillimolePerLiter(void)::common_TemperatureUnit_MillimolePerLiter;
}

void sub_1CA300518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Calorie(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Calorie(void)::common_TemperatureUnit_Calorie;
}

void sub_1CA3006F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_CupPerFluidOunce(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_CupPerFluidOunce(void)::common_TemperatureUnit_CupPerFluidOunce;
}

void sub_1CA3008C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MinutePerKilometer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MinutePerKilometer(void)::common_TemperatureUnit_MinutePerKilometer;
}

void sub_1CA300AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Pound(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Pound(void)::common_TemperatureUnit_Pound;
}

void sub_1CA300C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Milliliter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Milliliter(void)::common_TemperatureUnit_Milliliter;
}

void sub_1CA300E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_CupPerLiter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_CupPerLiter(void)::common_TemperatureUnit_CupPerLiter;
}

void sub_1CA301028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_FootPerSecond(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_FootPerSecond(void)::common_TemperatureUnit_FootPerSecond;
}

void sub_1CA301200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_CupPerPint(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_CupPerPint(void)::common_TemperatureUnit_CupPerPint;
}

void sub_1CA3013D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_UnitOfInsulin(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_UnitOfInsulin(void)::common_TemperatureUnit_UnitOfInsulin;
}

void sub_1CA3015B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_SecondPerMeter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_SecondPerMeter(void)::common_TemperatureUnit_SecondPerMeter;
}

void sub_1CA301788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Kilogram(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Kilogram(void)::common_TemperatureUnit_Kilogram;
}

void sub_1CA301960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MinutePerMile(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MinutePerMile(void)::common_TemperatureUnit_MinutePerMile;
}

void sub_1CA301B38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Lap(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Lap(void)::common_TemperatureUnit_Lap;
}

void sub_1CA301D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Gram(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Gram(void)::common_TemperatureUnit_Gram;
}

void sub_1CA301EE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Foot(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Foot(void)::common_TemperatureUnit_Foot;
}

void sub_1CA3020C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_HourPerMeter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_HourPerMeter(void)::common_TemperatureUnit_HourPerMeter;
}

void sub_1CA302298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Inch(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Inch(void)::common_TemperatureUnit_Inch;
}

void sub_1CA302470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MeterPerSecond(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MeterPerSecond(void)::common_TemperatureUnit_MeterPerSecond;
}

void sub_1CA302648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Milligram(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Milligram(void)::common_TemperatureUnit_Milligram;
}

void sub_1CA302820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Kilojoule(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Kilojoule(void)::common_TemperatureUnit_Kilojoule;
}

void sub_1CA3029F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_SecondPerMile(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_SecondPerMile(void)::common_TemperatureUnit_SecondPerMile;
}

void sub_1CA302BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_HourPerMile(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_HourPerMile(void)::common_TemperatureUnit_HourPerMile;
}

void sub_1CA302DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_SwimmingStrokePerMeter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_SwimmingStrokePerMeter(void)::common_TemperatureUnit_SwimmingStrokePerMeter;
}

void sub_1CA302F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MilePerHour(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MilePerHour(void)::common_TemperatureUnit_MilePerHour;
}

void sub_1CA303158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_HourPerKilometer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_HourPerKilometer(void)::common_TemperatureUnit_HourPerKilometer;
}

void sub_1CA303330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Yard(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Yard(void)::common_TemperatureUnit_Yard;
}

void sub_1CA303508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_DegreesFahrenheit(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_DegreesFahrenheit(void)::common_TemperatureUnit_DegreesFahrenheit;
}

void sub_1CA3036E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Degrees(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Degrees(void)::common_TemperatureUnit_Degrees;
}

void sub_1CA3038B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_DegreesCelsius(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_DegreesCelsius(void)::common_TemperatureUnit_DegreesCelsius;
}

void sub_1CA303A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Beginning(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Beginning(void)::common_ListPosition_Beginning;
}

void sub_1CA303C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_End(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_End(void)::common_ListPosition_End;
}

void sub_1CA303E40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Current(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Current(void)::common_ListPosition_Current;
}

void sub_1CA304018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Eighteenth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Eighteenth(void)::common_ListPosition_Eighteenth;
}

void sub_1CA3041F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Eighth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Eighth(void)::common_ListPosition_Eighth;
}

void sub_1CA3043C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Eleventh(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Eleventh(void)::common_ListPosition_Eleventh;
}

void sub_1CA3045A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Fifteenth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Fifteenth(void)::common_ListPosition_Fifteenth;
}

void sub_1CA304778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Fifth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Fifth(void)::common_ListPosition_Fifth;
}

void sub_1CA304950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_First(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_First(void)::common_ListPosition_First;
}

void sub_1CA304B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Fourteenth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Fourteenth(void)::common_ListPosition_Fourteenth;
}

void sub_1CA304D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Fourth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Fourth(void)::common_ListPosition_Fourth;
}

void sub_1CA304ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Last(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Last(void)::common_ListPosition_Last;
}

void sub_1CA3050B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Middle(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Middle(void)::common_ListPosition_Middle;
}

void sub_1CA305288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Next(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Next(void)::common_ListPosition_Next;
}

void sub_1CA305460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Nineteenth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Nineteenth(void)::common_ListPosition_Nineteenth;
}

void sub_1CA305638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Ninth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Ninth(void)::common_ListPosition_Ninth;
}

void sub_1CA305810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Previous(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Previous(void)::common_ListPosition_Previous;
}

void sub_1CA3059E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Second(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Second(void)::common_ListPosition_Second;
}

void sub_1CA305BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_SecondToLast(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_SecondToLast(void)::common_ListPosition_SecondToLast;
}

void sub_1CA305D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Seventeenth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Seventeenth(void)::common_ListPosition_Seventeenth;
}

void sub_1CA305F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Seventh(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Seventh(void)::common_ListPosition_Seventh;
}

void sub_1CA306148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Sixteenth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Sixteenth(void)::common_ListPosition_Sixteenth;
}

void sub_1CA306320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Sixth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Sixth(void)::common_ListPosition_Sixth;
}

void sub_1CA3064F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Tenth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Tenth(void)::common_ListPosition_Tenth;
}

void sub_1CA3066D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Third(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Third(void)::common_ListPosition_Third;
}

void sub_1CA3068A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_ThirdToLast(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_ThirdToLast(void)::common_ListPosition_ThirdToLast;
}

void sub_1CA306A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Thirteenth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Thirteenth(void)::common_ListPosition_Thirteenth;
}

void sub_1CA306C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Twelfth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Twelfth(void)::common_ListPosition_Twelfth;
}

void sub_1CA306E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_Twentieth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_Twentieth(void)::common_ListPosition_Twentieth;
}

void sub_1CA307008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentyFifth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentyFifth(void)::common_ListPosition_TwentyFifth;
}

void sub_1CA3071E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentyFirst(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentyFirst(void)::common_ListPosition_TwentyFirst;
}

void sub_1CA3073B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentyFourth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentyFourth(void)::common_ListPosition_TwentyFourth;
}

void sub_1CA307590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentySecond(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentySecond(void)::common_ListPosition_TwentySecond;
}

void sub_1CA307768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentyThird(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentyThird(void)::common_ListPosition_TwentyThird;
}

void sub_1CA307940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_VoiceTrigger_JustSiri(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_VoiceTrigger_JustSiri(void)::common_VoiceTrigger_JustSiri;
}

void sub_1CA307B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_VoiceTrigger_HeySiri(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_VoiceTrigger_HeySiri(void)::common_VoiceTrigger_HeySiri;
}

void sub_1CA307CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_VoiceTrigger_OtherVoiceAssistant(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_VoiceTrigger_OtherVoiceAssistant(void)::common_VoiceTrigger_OtherVoiceAssistant;
}

void sub_1CA307EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_VoiceTrigger_OtherSiriTriggers(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_VoiceTrigger_OtherSiriTriggers(void)::common_VoiceTrigger_OtherSiriTriggers;
}

void sub_1CA3080A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Time24HourClock_Sunrise(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Time24HourClock_Sunrise(void)::common_Time24HourClock_Sunrise;
}

void sub_1CA308278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Time24HourClock_Sunset(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Time24HourClock_Sunset(void)::common_Time24HourClock_Sunset;
}

void sub_1CA308450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Time24HourClock_CurrentTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Time24HourClock_CurrentTime(void)::common_Time24HourClock_CurrentTime;
}

void sub_1CA308628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Time24HourClock_Midnight(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Time24HourClock_Midnight(void)::common_Time24HourClock_Midnight;
}

void sub_1CA308800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Time24HourClock_Noon(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Time24HourClock_Noon(void)::common_Time24HourClock_Noon;
}

void sub_1CA3089D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnitType_SpeedUnit(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnitType_SpeedUnit(void)::common_MeasurementUnitType_SpeedUnit;
}

void sub_1CA308BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnitType_EnergyUnit(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnitType_EnergyUnit(void)::common_MeasurementUnitType_EnergyUnit;
}

void sub_1CA308D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnitType_DistanceUnit(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnitType_DistanceUnit(void)::common_MeasurementUnitType_DistanceUnit;
}

void sub_1CA308F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnitType_WeightUnit(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnitType_WeightUnit(void)::common_MeasurementUnitType_WeightUnit;
}

void sub_1CA309138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_StepPerMinute(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_StepPerMinute(void)::common_TimeUnit_StepPerMinute;
}

void sub_1CA309310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_MegaHertz(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_MegaHertz(void)::common_TimeUnit_MegaHertz;
}

void sub_1CA3094E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_KiloHertz(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_KiloHertz(void)::common_TimeUnit_KiloHertz;
}

void sub_1CA3096C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_SwimmingStroke(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_SwimmingStroke(void)::common_TimeUnit_SwimmingStroke;
}

void sub_1CA309898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Liter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Liter(void)::common_TimeUnit_Liter;
}

void sub_1CA309A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_MilligramPerDeciliter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_MilligramPerDeciliter(void)::common_TimeUnit_MilligramPerDeciliter;
}

void sub_1CA309C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Meter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Meter(void)::common_TimeUnit_Meter;
}

void sub_1CA309E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Kilocalorie(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Kilocalorie(void)::common_TimeUnit_Kilocalorie;
}

void sub_1CA309FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_WheelchairPush(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_WheelchairPush(void)::common_TimeUnit_WheelchairPush;
}

void sub_1CA30A1D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_KilometerPerHour(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_KilometerPerHour(void)::common_TimeUnit_KilometerPerHour;
}

void sub_1CA30A3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_MinutePerYard(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_MinutePerYard(void)::common_TimeUnit_MinutePerYard;
}

void sub_1CA30A580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_SwimmingStrokePerYard(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_SwimmingStrokePerYard(void)::common_TimeUnit_SwimmingStrokePerYard;
}

void sub_1CA30A758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Kilometer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Kilometer(void)::common_TimeUnit_Kilometer;
}

void sub_1CA30A930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_FlightOfStairs(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_FlightOfStairs(void)::common_TimeUnit_FlightOfStairs;
}

void sub_1CA30AB08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_SecondPerYard(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_SecondPerYard(void)::common_TimeUnit_SecondPerYard;
}

void sub_1CA30ACE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_MillimeterOfMercury(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_MillimeterOfMercury(void)::common_TimeUnit_MillimeterOfMercury;
}

void sub_1CA30AEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_LiterPerMinute(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_LiterPerMinute(void)::common_TimeUnit_LiterPerMinute;
}

void sub_1CA30B090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Microgram(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Microgram(void)::common_TimeUnit_Microgram;
}

void sub_1CA30B268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_BeatPerMinute(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_BeatPerMinute(void)::common_TimeUnit_BeatPerMinute;
}

void sub_1CA30B440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Stone(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Stone(void)::common_TimeUnit_Stone;
}

void sub_1CA30B618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_HourPerYard(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_HourPerYard(void)::common_TimeUnit_HourPerYard;
}

void sub_1CA30B7F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Mile(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Mile(void)::common_TimeUnit_Mile;
}

void sub_1CA30B9C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_SecondPerKilometer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_SecondPerKilometer(void)::common_TimeUnit_SecondPerKilometer;
}

void sub_1CA30BBA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_MinutePerMeter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_MinutePerMeter(void)::common_TimeUnit_MinutePerMeter;
}

void sub_1CA30BD78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Centimeter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Centimeter(void)::common_TimeUnit_Centimeter;
}

void sub_1CA30BF50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_CupPerMillileter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_CupPerMillileter(void)::common_TimeUnit_CupPerMillileter;
}

void sub_1CA30C128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Step(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Step(void)::common_TimeUnit_Step;
}

void sub_1CA30C300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_MillimolePerLiter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_MillimolePerLiter(void)::common_TimeUnit_MillimolePerLiter;
}

void sub_1CA30C4D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Calorie(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Calorie(void)::common_TimeUnit_Calorie;
}

void sub_1CA30C6B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_CupPerFluidOunce(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_CupPerFluidOunce(void)::common_TimeUnit_CupPerFluidOunce;
}

void sub_1CA30C888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_MinutePerKilometer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_MinutePerKilometer(void)::common_TimeUnit_MinutePerKilometer;
}

void sub_1CA30CA60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Pound(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Pound(void)::common_TimeUnit_Pound;
}

void sub_1CA30CC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Milliliter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Milliliter(void)::common_TimeUnit_Milliliter;
}

void sub_1CA30CE10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_CupPerLiter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_CupPerLiter(void)::common_TimeUnit_CupPerLiter;
}

void sub_1CA30CFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_FootPerSecond(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_FootPerSecond(void)::common_TimeUnit_FootPerSecond;
}

void sub_1CA30D1C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_CupPerPint(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_CupPerPint(void)::common_TimeUnit_CupPerPint;
}

void sub_1CA30D398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_UnitOfInsulin(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_UnitOfInsulin(void)::common_TimeUnit_UnitOfInsulin;
}

void sub_1CA30D570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_SecondPerMeter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_SecondPerMeter(void)::common_TimeUnit_SecondPerMeter;
}

void sub_1CA30D748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Kilogram(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Kilogram(void)::common_TimeUnit_Kilogram;
}

void sub_1CA30D920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_MinutePerMile(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_MinutePerMile(void)::common_TimeUnit_MinutePerMile;
}

void sub_1CA30DAF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Lap(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Lap(void)::common_TimeUnit_Lap;
}

void sub_1CA30DCD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Gram(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Gram(void)::common_TimeUnit_Gram;
}

void sub_1CA30DEA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Foot(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Foot(void)::common_TimeUnit_Foot;
}

void sub_1CA30E080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_HourPerMeter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_HourPerMeter(void)::common_TimeUnit_HourPerMeter;
}

void sub_1CA30E258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Inch(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Inch(void)::common_TimeUnit_Inch;
}

void sub_1CA30E430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_MeterPerSecond(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_MeterPerSecond(void)::common_TimeUnit_MeterPerSecond;
}

void sub_1CA30E608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Milligram(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Milligram(void)::common_TimeUnit_Milligram;
}

void sub_1CA30E7E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Kilojoule(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Kilojoule(void)::common_TimeUnit_Kilojoule;
}

void sub_1CA30E9B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_SecondPerMile(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_SecondPerMile(void)::common_TimeUnit_SecondPerMile;
}

void sub_1CA30EB90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_HourPerMile(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_HourPerMile(void)::common_TimeUnit_HourPerMile;
}

void sub_1CA30ED68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_SwimmingStrokePerMeter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_SwimmingStrokePerMeter(void)::common_TimeUnit_SwimmingStrokePerMeter;
}

void sub_1CA30EF40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_MilePerHour(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_MilePerHour(void)::common_TimeUnit_MilePerHour;
}

void sub_1CA30F118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_HourPerKilometer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_HourPerKilometer(void)::common_TimeUnit_HourPerKilometer;
}

void sub_1CA30F2F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Yard(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Yard(void)::common_TimeUnit_Yard;
}

void sub_1CA30F4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Decade(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Decade(void)::common_TimeUnit_Decade;
}

void sub_1CA30F6A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Day(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Day(void)::common_TimeUnit_Day;
}

void sub_1CA30F878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Century(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Century(void)::common_TimeUnit_Century;
}

void sub_1CA30FA50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Fortnight(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Fortnight(void)::common_TimeUnit_Fortnight;
}

void sub_1CA30FC28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Hour(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Hour(void)::common_TimeUnit_Hour;
}

void sub_1CA30FE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Millisecond(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Millisecond(void)::common_TimeUnit_Millisecond;
}

void sub_1CA30FFD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Minute(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Minute(void)::common_TimeUnit_Minute;
}

void sub_1CA3101B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Month(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Month(void)::common_TimeUnit_Month;
}

void sub_1CA310388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_QuarterOfYear(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_QuarterOfYear(void)::common_TimeUnit_QuarterOfYear;
}

void sub_1CA310560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_SeasonOfYear(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_SeasonOfYear(void)::common_TimeUnit_SeasonOfYear;
}

void sub_1CA310738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Second(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Second(void)::common_TimeUnit_Second;
}

void sub_1CA310910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Week(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Week(void)::common_TimeUnit_Week;
}

void sub_1CA310AE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_TimeUnit_Year(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_TimeUnit_Year(void)::common_TimeUnit_Year;
}

void sub_1CA310CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Politeness_Polite(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Politeness_Polite(void)::common_Politeness_Polite;
}

void sub_1CA310E98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Politeness_Impolite(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Politeness_Impolite(void)::common_Politeness_Impolite;
}

void sub_1CA311070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Age_Teenager(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Age_Teenager(void)::common_Age_Teenager;
}

void sub_1CA311248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Age_Senior(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Age_Senior(void)::common_Age_Senior;
}

void sub_1CA311420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SettingValueType_Current(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_SettingValueType_Current(void)::common_SettingValueType_Current;
}

void sub_1CA3115F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SettingValueType_Target(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_SettingValueType_Target(void)::common_SettingValueType_Target;
}

void sub_1CA3117D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Interjection_IncorrectBehavior(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Interjection_IncorrectBehavior(void)::common_Interjection_IncorrectBehavior;
}

void sub_1CA3119A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Interjection_Attention(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Interjection_Attention(void)::common_Interjection_Attention;
}

void sub_1CA311B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Interjection_ThankYou(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Interjection_ThankYou(void)::common_Interjection_ThankYou;
}

void sub_1CA311D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Interjection_IndirectDismissal(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Interjection_IndirectDismissal(void)::common_Interjection_IndirectDismissal;
}

void sub_1CA311F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Interjection_Ignore(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Interjection_Ignore(void)::common_Interjection_Ignore;
}

void sub_1CA312108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Interjection_DirectDismissal(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Interjection_DirectDismissal(void)::common_Interjection_DirectDismissal;
}

void sub_1CA3122E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Organization_UnknownAgent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Organization_UnknownAgent(void)::common_Organization_UnknownAgent;
}

void sub_1CA3124B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Friday(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Friday(void)::common_DayOfWeek_Friday;
}

void sub_1CA312690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Monday(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Monday(void)::common_DayOfWeek_Monday;
}

void sub_1CA312868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Saturday(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Saturday(void)::common_DayOfWeek_Saturday;
}

void sub_1CA312A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Sunday(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Sunday(void)::common_DayOfWeek_Sunday;
}

void sub_1CA312C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Thursday(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Thursday(void)::common_DayOfWeek_Thursday;
}

void sub_1CA312DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Tuesday(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Tuesday(void)::common_DayOfWeek_Tuesday;
}

void sub_1CA312FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Wednesday(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Wednesday(void)::common_DayOfWeek_Wednesday;
}

void sub_1CA3131A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_AppState_Deleted(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_AppState_Deleted(void)::common_AppState_Deleted;
}

void sub_1CA313378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_AppState_Installed(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_AppState_Installed(void)::common_AppState_Installed;
}

void sub_1CA313550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MessageMode_Text(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MessageMode_Text(void)::common_MessageMode_Text;
}

void sub_1CA313728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MessageMode_Video(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MessageMode_Video(void)::common_MessageMode_Video;
}

void sub_1CA313900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MessageMode_Email(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MessageMode_Email(void)::common_MessageMode_Email;
}

void sub_1CA313AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MessageMode_Audio(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MessageMode_Audio(void)::common_MessageMode_Audio;
}

void sub_1CA313CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_CalendarEventType_Meeting(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_CalendarEventType_Meeting(void)::common_CalendarEventType_Meeting;
}

void sub_1CA313E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_CalendarEventType_Event(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_CalendarEventType_Event(void)::common_CalendarEventType_Event;
}

void sub_1CA314060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_CalendarEventType_Appointment(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_CalendarEventType_Appointment(void)::common_CalendarEventType_Appointment;
}

void sub_1CA314238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_CalendarEventType_Conflict(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_CalendarEventType_Conflict(void)::common_CalendarEventType_Conflict;
}

void sub_1CA314410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_CollaborationMode_Namedrop(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_CollaborationMode_Namedrop(void)::common_CollaborationMode_Namedrop;
}

void sub_1CA3145E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_CollaborationMode_Airdrop(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_CollaborationMode_Airdrop(void)::common_CollaborationMode_Airdrop;
}

void sub_1CA3147C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_CollaborationMode_SendCopy(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_CollaborationMode_SendCopy(void)::common_CollaborationMode_SendCopy;
}

void sub_1CA314998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_CollaborationMode_Collaborate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_CollaborationMode_Collaborate(void)::common_CollaborationMode_Collaborate;
}

void sub_1CA314B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_CollaborationMode_SharePlay(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_CollaborationMode_SharePlay(void)::common_CollaborationMode_SharePlay;
}

void sub_1CA314D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_CollaborationMode_Together(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_CollaborationMode_Together(void)::common_CollaborationMode_Together;
}

void sub_1CA314F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MessageState_Draft(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MessageState_Draft(void)::common_MessageState_Draft;
}

void sub_1CA3150F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MessageState_Sent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MessageState_Sent(void)::common_MessageState_Sent;
}

void sub_1CA3152D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MessageState_Unread(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MessageState_Unread(void)::common_MessageState_Unread;
}

void sub_1CA3154A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MessageState_Unsent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MessageState_Unsent(void)::common_MessageState_Unsent;
}

void sub_1CA315680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MessageState_Received(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MessageState_Received(void)::common_MessageState_Received;
}

void sub_1CA315858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MessageState_Read(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MessageState_Read(void)::common_MessageState_Read;
}

void sub_1CA315A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MessageState_Unsaved(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MessageState_Unsaved(void)::common_MessageState_Unsaved;
}

void sub_1CA315C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MessageState_Saved(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MessageState_Saved(void)::common_MessageState_Saved;
}

void sub_1CA315DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MessageState_Deleted(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MessageState_Deleted(void)::common_MessageState_Deleted;
}

void sub_1CA315FB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Exactly(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Exactly(void)::common_SearchQualifier_Exactly;
}

void sub_1CA316190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Approximate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Approximate(void)::common_SearchQualifier_Approximate;
}

void sub_1CA316368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Favorite(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Favorite(void)::common_SearchQualifier_Favorite;
}

void sub_1CA316540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SearchQualifier_NewToMe(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_SearchQualifier_NewToMe(void)::common_SearchQualifier_NewToMe;
}

void sub_1CA316718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Personalized(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Personalized(void)::common_SearchQualifier_Personalized;
}

void sub_1CA3168F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SearchQualifier_New(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_SearchQualifier_New(void)::common_SearchQualifier_New;
}

void sub_1CA316AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Another(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Another(void)::common_SearchQualifier_Another;
}

void sub_1CA316CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Old(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Old(void)::common_SearchQualifier_Old;
}

void sub_1CA316E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_OffsetDate_DayBeforeYesterday(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_OffsetDate_DayBeforeYesterday(void)::common_OffsetDate_DayBeforeYesterday;
}

void sub_1CA317050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_OffsetDate_DayAfterTomorrow(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_OffsetDate_DayAfterTomorrow(void)::common_OffsetDate_DayAfterTomorrow;
}

void sub_1CA317228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_OffsetDate_Today(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_OffsetDate_Today(void)::common_OffsetDate_Today;
}

void sub_1CA317400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_OffsetDate_Tomorrow(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_OffsetDate_Tomorrow(void)::common_OffsetDate_Tomorrow;
}

void sub_1CA3175D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_OffsetDate_Yesterday(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_OffsetDate_Yesterday(void)::common_OffsetDate_Yesterday;
}

void sub_1CA3177B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_PlaybackState_Stopped(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_PlaybackState_Stopped(void)::common_PlaybackState_Stopped;
}

void sub_1CA317988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_PlaybackState_Interrupted(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_PlaybackState_Interrupted(void)::common_PlaybackState_Interrupted;
}

void sub_1CA317B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_PlaybackState_Seeking(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_PlaybackState_Seeking(void)::common_PlaybackState_Seeking;
}

void sub_1CA317D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_PlaybackState_Playing(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_PlaybackState_Playing(void)::common_PlaybackState_Playing;
}

void sub_1CA317F10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_PlaybackState_Paused(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_PlaybackState_Paused(void)::common_PlaybackState_Paused;
}

void sub_1CA3180E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Integer_LargeUnspecifiedAmount(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Integer_LargeUnspecifiedAmount(void)::common_Integer_LargeUnspecifiedAmount;
}

void sub_1CA3182C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Integer_SmallUnspecifiedAmount(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Integer_SmallUnspecifiedAmount(void)::common_Integer_SmallUnspecifiedAmount;
}

void sub_1CA318498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Stock_UnknownAgent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Stock_UnknownAgent(void)::common_Stock_UnknownAgent;
}

void sub_1CA318670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_StepPerMinute(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_StepPerMinute(void)::common_MeasurementUnit_StepPerMinute;
}

void sub_1CA318848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MegaHertz(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MegaHertz(void)::common_MeasurementUnit_MegaHertz;
}

void sub_1CA318A20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_KiloHertz(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_KiloHertz(void)::common_MeasurementUnit_KiloHertz;
}

void sub_1CA318BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SwimmingStroke(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SwimmingStroke(void)::common_MeasurementUnit_SwimmingStroke;
}

void sub_1CA318DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Liter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Liter(void)::common_MeasurementUnit_Liter;
}

void sub_1CA318FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MilligramPerDeciliter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MilligramPerDeciliter(void)::common_MeasurementUnit_MilligramPerDeciliter;
}

void sub_1CA319180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Meter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Meter(void)::common_MeasurementUnit_Meter;
}

void sub_1CA319358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Kilocalorie(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Kilocalorie(void)::common_MeasurementUnit_Kilocalorie;
}

void sub_1CA319530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_WheelchairPush(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_WheelchairPush(void)::common_MeasurementUnit_WheelchairPush;
}

void sub_1CA319708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_KilometerPerHour(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_KilometerPerHour(void)::common_MeasurementUnit_KilometerPerHour;
}

void sub_1CA3198E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MinutePerYard(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MinutePerYard(void)::common_MeasurementUnit_MinutePerYard;
}

void sub_1CA319AB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SwimmingStrokePerYard(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SwimmingStrokePerYard(void)::common_MeasurementUnit_SwimmingStrokePerYard;
}

void sub_1CA319C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Kilometer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Kilometer(void)::common_MeasurementUnit_Kilometer;
}

void sub_1CA319E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_FlightOfStairs(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_FlightOfStairs(void)::common_MeasurementUnit_FlightOfStairs;
}

void sub_1CA31A040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SecondPerYard(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SecondPerYard(void)::common_MeasurementUnit_SecondPerYard;
}

void sub_1CA31A218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MillimeterOfMercury(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MillimeterOfMercury(void)::common_MeasurementUnit_MillimeterOfMercury;
}

void sub_1CA31A3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_LiterPerMinute(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_LiterPerMinute(void)::common_MeasurementUnit_LiterPerMinute;
}

void sub_1CA31A5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Microgram(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Microgram(void)::common_MeasurementUnit_Microgram;
}

void sub_1CA31A7A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_BeatPerMinute(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_BeatPerMinute(void)::common_MeasurementUnit_BeatPerMinute;
}

void sub_1CA31A978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Stone(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Stone(void)::common_MeasurementUnit_Stone;
}

void sub_1CA31AB50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_HourPerYard(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_HourPerYard(void)::common_MeasurementUnit_HourPerYard;
}

void sub_1CA31AD28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Mile(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Mile(void)::common_MeasurementUnit_Mile;
}

void sub_1CA31AF00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SecondPerKilometer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SecondPerKilometer(void)::common_MeasurementUnit_SecondPerKilometer;
}

void sub_1CA31B0D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MinutePerMeter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MinutePerMeter(void)::common_MeasurementUnit_MinutePerMeter;
}

void sub_1CA31B2B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Centimeter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Centimeter(void)::common_MeasurementUnit_Centimeter;
}

void sub_1CA31B488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_CupPerMillileter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_CupPerMillileter(void)::common_MeasurementUnit_CupPerMillileter;
}

void sub_1CA31B660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Step(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Step(void)::common_MeasurementUnit_Step;
}

void sub_1CA31B838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MillimolePerLiter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MillimolePerLiter(void)::common_MeasurementUnit_MillimolePerLiter;
}

void sub_1CA31BA10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Calorie(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Calorie(void)::common_MeasurementUnit_Calorie;
}

void sub_1CA31BBE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_CupPerFluidOunce(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_CupPerFluidOunce(void)::common_MeasurementUnit_CupPerFluidOunce;
}

void sub_1CA31BDC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MinutePerKilometer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MinutePerKilometer(void)::common_MeasurementUnit_MinutePerKilometer;
}

void sub_1CA31BF98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Pound(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Pound(void)::common_MeasurementUnit_Pound;
}

void sub_1CA31C170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Milliliter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Milliliter(void)::common_MeasurementUnit_Milliliter;
}

void sub_1CA31C348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_CupPerLiter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_CupPerLiter(void)::common_MeasurementUnit_CupPerLiter;
}

void sub_1CA31C520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_FootPerSecond(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_FootPerSecond(void)::common_MeasurementUnit_FootPerSecond;
}

void sub_1CA31C6F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_CupPerPint(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_CupPerPint(void)::common_MeasurementUnit_CupPerPint;
}

void sub_1CA31C8D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_UnitOfInsulin(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_UnitOfInsulin(void)::common_MeasurementUnit_UnitOfInsulin;
}

void sub_1CA31CAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SecondPerMeter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SecondPerMeter(void)::common_MeasurementUnit_SecondPerMeter;
}

void sub_1CA31CC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Kilogram(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Kilogram(void)::common_MeasurementUnit_Kilogram;
}

void sub_1CA31CE58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MinutePerMile(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MinutePerMile(void)::common_MeasurementUnit_MinutePerMile;
}

void sub_1CA31D030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Lap(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Lap(void)::common_MeasurementUnit_Lap;
}

void sub_1CA31D208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Gram(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Gram(void)::common_MeasurementUnit_Gram;
}

void sub_1CA31D3E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Foot(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Foot(void)::common_MeasurementUnit_Foot;
}

void sub_1CA31D5B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_HourPerMeter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_HourPerMeter(void)::common_MeasurementUnit_HourPerMeter;
}

void sub_1CA31D790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Inch(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Inch(void)::common_MeasurementUnit_Inch;
}

void sub_1CA31D968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MeterPerSecond(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MeterPerSecond(void)::common_MeasurementUnit_MeterPerSecond;
}

void sub_1CA31DB40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Milligram(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Milligram(void)::common_MeasurementUnit_Milligram;
}

void sub_1CA31DD18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Kilojoule(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Kilojoule(void)::common_MeasurementUnit_Kilojoule;
}

void sub_1CA31DEF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SecondPerMile(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SecondPerMile(void)::common_MeasurementUnit_SecondPerMile;
}

void sub_1CA31E0C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_HourPerMile(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_HourPerMile(void)::common_MeasurementUnit_HourPerMile;
}

void sub_1CA31E2A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SwimmingStrokePerMeter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SwimmingStrokePerMeter(void)::common_MeasurementUnit_SwimmingStrokePerMeter;
}

void sub_1CA31E478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MilePerHour(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MilePerHour(void)::common_MeasurementUnit_MilePerHour;
}

void sub_1CA31E650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_HourPerKilometer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_HourPerKilometer(void)::common_MeasurementUnit_HourPerKilometer;
}

void sub_1CA31E828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Yard(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Yard(void)::common_MeasurementUnit_Yard;
}

void sub_1CA31EA00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_RecurringDateTime_EveryDay(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_RecurringDateTime_EveryDay(void)::common_RecurringDateTime_EveryDay;
}

void sub_1CA31EBD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_RecurringDateTime_Weekdays(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_RecurringDateTime_Weekdays(void)::common_RecurringDateTime_Weekdays;
}

void sub_1CA31EDB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_RecurringDateTime_Weekends(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_RecurringDateTime_Weekends(void)::common_RecurringDateTime_Weekends;
}

void sub_1CA31EF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Sounds(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Sounds(void)::common_MediaItemType_Sounds;
}

void sub_1CA31F160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_MusicPlaylist(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_MusicPlaylist(void)::common_MediaItemType_MusicPlaylist;
}

void sub_1CA31F338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Single(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Single(void)::common_MediaItemType_Single;
}

void sub_1CA31F510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Show(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Show(void)::common_MediaItemType_Show;
}

void sub_1CA31F6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Artist(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Artist(void)::common_MediaItemType_Artist;
}

void sub_1CA31F8C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Album(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Album(void)::common_MediaItemType_Album;
}

void sub_1CA31FA98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Compilation(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Compilation(void)::common_MediaItemType_Compilation;
}

void sub_1CA31FC70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_ITunesU(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_ITunesU(void)::common_MediaItemType_ITunesU;
}

void sub_1CA31FE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Playlist(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Playlist(void)::common_MediaItemType_Playlist;
}

void sub_1CA320020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Ringtone(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Ringtone(void)::common_MediaItemType_Ringtone;
}

void sub_1CA3201F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Ep(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Ep(void)::common_MediaItemType_Ep;
}

void sub_1CA3203D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Song(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Song(void)::common_MediaItemType_Song;
}

void sub_1CA3205A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_News(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_News(void)::common_MediaItemType_News;
}

void sub_1CA320780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Lp(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Lp(void)::common_MediaItemType_Lp;
}

void sub_1CA320958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_PodcastPromotionTopic(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_PodcastPromotionTopic(void)::common_MediaItemType_PodcastPromotionTopic;
}

void sub_1CA320B30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_PodcastStation(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_PodcastStation(void)::common_MediaItemType_PodcastStation;
}

void sub_1CA320D08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Genre(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Genre(void)::common_MediaItemType_Genre;
}

void sub_1CA320EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Station(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Station(void)::common_MediaItemType_Station;
}

void sub_1CA3210B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_TvShow(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_TvShow(void)::common_MediaItemType_TvShow;
}

void sub_1CA321290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_MusicVideo(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_MusicVideo(void)::common_MediaItemType_MusicVideo;
}

void sub_1CA321468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_AudioBook(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_AudioBook(void)::common_MediaItemType_AudioBook;
}

void sub_1CA321640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Podcast(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Podcast(void)::common_MediaItemType_Podcast;
}

void sub_1CA321818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Music(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Music(void)::common_MediaItemType_Music;
}

void sub_1CA3219F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Chapter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Chapter(void)::common_MediaItemType_Chapter;
}

void sub_1CA321BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Library(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Library(void)::common_MediaItemType_Library;
}

void sub_1CA321DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_UpNext(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_UpNext(void)::common_MediaItemType_UpNext;
}

void sub_1CA321F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Episode(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Episode(void)::common_MediaItemType_Episode;
}

void sub_1CA322150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Wishlist(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Wishlist(void)::common_MediaItemType_Wishlist;
}

void sub_1CA322328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_StreamingLibrary(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_StreamingLibrary(void)::common_MediaItemType_StreamingLibrary;
}

void sub_1CA322500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_RadioStation(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_RadioStation(void)::common_MediaItemType_RadioStation;
}

void sub_1CA3226D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_RadioShow(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_RadioShow(void)::common_MediaItemType_RadioShow;
}

void sub_1CA3228B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Movie(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Movie(void)::common_MediaItemType_Movie;
}

void sub_1CA322A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Audio(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Audio(void)::common_MediaItemType_Audio;
}

void sub_1CA322C60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Video(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Video(void)::common_MediaItemType_Video;
}

void sub_1CA322E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_Article(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_Article(void)::common_MediaItemType_Article;
}

void sub_1CA323010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaItemType_ReadingList(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaItemType_ReadingList(void)::common_MediaItemType_ReadingList;
}

void sub_1CA3231E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MultipliedNumber_LargeUnspecifiedAmount(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MultipliedNumber_LargeUnspecifiedAmount(void)::common_MultipliedNumber_LargeUnspecifiedAmount;
}

void sub_1CA3233C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MultipliedNumber_SmallUnspecifiedAmount(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MultipliedNumber_SmallUnspecifiedAmount(void)::common_MultipliedNumber_SmallUnspecifiedAmount;
}

void sub_1CA323598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_GeographicArea_Nearby(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_GeographicArea_Nearby(void)::common_GeographicArea_Nearby;
}

void sub_1CA323770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_GeographicArea_Here(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_GeographicArea_Here(void)::common_GeographicArea_Here;
}

void sub_1CA323948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ActivationValue_Off(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ActivationValue_Off(void)::common_ActivationValue_Off;
}

void sub_1CA323B20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ActivationValue_On(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ActivationValue_On(void)::common_ActivationValue_On;
}

void sub_1CA323CF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DateTime_Now(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DateTime_Now(void)::common_DateTime_Now;
}

void sub_1CA323ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_HalfOf(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_HalfOf(void)::common_DateTimeRangeQualifier_HalfOf;
}

void sub_1CA3240A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_AllOf(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_AllOf(void)::common_DateTimeRangeQualifier_AllOf;
}

void sub_1CA324280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_EarlierPartOf(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_EarlierPartOf(void)::common_DateTimeRangeQualifier_EarlierPartOf;
}

void sub_1CA324458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_EndOf(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_EndOf(void)::common_DateTimeRangeQualifier_EndOf;
}

void sub_1CA324630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_LaterPartOf(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_LaterPartOf(void)::common_DateTimeRangeQualifier_LaterPartOf;
}

void sub_1CA324808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_MiddleOf(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_MiddleOf(void)::common_DateTimeRangeQualifier_MiddleOf;
}

void sub_1CA3249E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_RestOf(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_RestOf(void)::common_DateTimeRangeQualifier_RestOf;
}

void sub_1CA324BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_StartOf(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_StartOf(void)::common_DateTimeRangeQualifier_StartOf;
}

void sub_1CA324D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Date_DayBeforeYesterday(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Date_DayBeforeYesterday(void)::common_Date_DayBeforeYesterday;
}

void sub_1CA324F68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Date_DayAfterTomorrow(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Date_DayAfterTomorrow(void)::common_Date_DayAfterTomorrow;
}

void sub_1CA325140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Date_Today(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Date_Today(void)::common_Date_Today;
}

void sub_1CA325318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Date_Tomorrow(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Date_Tomorrow(void)::common_Date_Tomorrow;
}

void sub_1CA3254F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Date_Yesterday(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Date_Yesterday(void)::common_Date_Yesterday;
}

void sub_1CA3256C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_AllDay_NotAllDay(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_AllDay_NotAllDay(void)::common_AllDay_NotAllDay;
}

void sub_1CA3258A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_AllDay_AllDay(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_AllDay_AllDay(void)::common_AllDay_AllDay;
}

void sub_1CA325A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_WorkoutGoal_RingClosed(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_WorkoutGoal_RingClosed(void)::common_WorkoutGoal_RingClosed;
}

void sub_1CA325C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_WorkoutGoal_ExerciseRingClosed(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_WorkoutGoal_ExerciseRingClosed(void)::common_WorkoutGoal_ExerciseRingClosed;
}

void sub_1CA325E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_WorkoutGoal_Open(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_WorkoutGoal_Open(void)::common_WorkoutGoal_Open;
}

void sub_1CA326000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_WorkoutGoal_MoveRingClosed(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_WorkoutGoal_MoveRingClosed(void)::common_WorkoutGoal_MoveRingClosed;
}

void sub_1CA3261D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SummaryMode_Entirety(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_SummaryMode_Entirety(void)::common_SummaryMode_Entirety;
}

void sub_1CA3263B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SummaryMode_Abridged(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_SummaryMode_Abridged(void)::common_SummaryMode_Abridged;
}

void sub_1CA326588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_OffsetDirection_After(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_OffsetDirection_After(void)::common_OffsetDirection_After;
}

void sub_1CA326760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_OffsetDirection_Before(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_OffsetDirection_Before(void)::common_OffsetDirection_Before;
}

void sub_1CA326938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Time_Sunrise(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Time_Sunrise(void)::common_Time_Sunrise;
}

void sub_1CA326B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Time_Sunset(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Time_Sunset(void)::common_Time_Sunset;
}

void sub_1CA326CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Time_CurrentTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Time_CurrentTime(void)::common_Time_CurrentTime;
}

void sub_1CA326EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Time_Midnight(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Time_Midnight(void)::common_Time_Midnight;
}

void sub_1CA327098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Time_Noon(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Time_Noon(void)::common_Time_Noon;
}

void sub_1CA327270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Person_UnknownAgent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Person_UnknownAgent(void)::common_Person_UnknownAgent;
}

void sub_1CA327448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Person_User(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Person_User(void)::common_Person_User;
}

void sub_1CA327620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Car_Nowhere(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Car_Nowhere(void)::common_Car_Nowhere;
}

void sub_1CA3277F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Car_There(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Car_There(void)::common_Car_There;
}

void sub_1CA3279D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Car_Here(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Car_Here(void)::common_Car_Here;
}

void sub_1CA327BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Car_Everywhere(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Car_Everywhere(void)::common_Car_Everywhere;
}

void sub_1CA327D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_RadioBand_FM(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_RadioBand_FM(void)::common_RadioBand_FM;
}

void sub_1CA327F58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_RadioBand_AM(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_RadioBand_AM(void)::common_RadioBand_AM;
}

void sub_1CA328130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_RadioBand_XM(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_RadioBand_XM(void)::common_RadioBand_XM;
}

void sub_1CA328308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_RadioBand_DAB(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_RadioBand_DAB(void)::common_RadioBand_DAB;
}

void sub_1CA3284E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_RadioBand_HD(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_RadioBand_HD(void)::common_RadioBand_HD;
}

void sub_1CA3286B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_LocalBusiness_UnknownAgent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_LocalBusiness_UnknownAgent(void)::common_LocalBusiness_UnknownAgent;
}

void sub_1CA328890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Duration_TotalDuration(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Duration_TotalDuration(void)::common_Duration_TotalDuration;
}

void sub_1CA328A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Duration_NoDuration(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Duration_NoDuration(void)::common_Duration_NoDuration;
}

void sub_1CA328C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Duration_AllDay(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Duration_AllDay(void)::common_Duration_AllDay;
}

void sub_1CA328E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ActiveType_Active(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ActiveType_Active(void)::common_ActiveType_Active;
}

void sub_1CA328FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ActiveType_Upcoming(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ActiveType_Upcoming(void)::common_ActiveType_Upcoming;
}

void sub_1CA3291C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ActiveType_NotActive(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ActiveType_NotActive(void)::common_ActiveType_NotActive;
}

void sub_1CA3293A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_SpatialVideo(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_SpatialVideo(void)::common_MediaCaptureMode_SpatialVideo;
}

void sub_1CA329578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_SpatialPhoto(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_SpatialPhoto(void)::common_MediaCaptureMode_SpatialPhoto;
}

void sub_1CA329750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_AudioRecording(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_AudioRecording(void)::common_MediaCaptureMode_AudioRecording;
}

void sub_1CA329928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_Screenshot(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_Screenshot(void)::common_MediaCaptureMode_Screenshot;
}

void sub_1CA329B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_ScreenRecording(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_ScreenRecording(void)::common_MediaCaptureMode_ScreenRecording;
}

void sub_1CA329CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_Photo(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_Photo(void)::common_MediaCaptureMode_Photo;
}

void sub_1CA329EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_Video(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_Video(void)::common_MediaCaptureMode_Video;
}

void sub_1CA32A088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_Selfie(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_Selfie(void)::common_MediaCaptureMode_Selfie;
}

void sub_1CA32A260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_NumberSign_NegativeSign(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_NumberSign_NegativeSign(void)::common_NumberSign_NegativeSign;
}

void sub_1CA32A438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_NumberSign_PositiveSign(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_NumberSign_PositiveSign(void)::common_NumberSign_PositiveSign;
}

void sub_1CA32A610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ResponseStatus_ResponseNo(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ResponseStatus_ResponseNo(void)::common_ResponseStatus_ResponseNo;
}

void sub_1CA32A7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ResponseStatus_ResponseMaybe(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ResponseStatus_ResponseMaybe(void)::common_ResponseStatus_ResponseMaybe;
}

void sub_1CA32A9C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ResponseStatus_RespondedNo(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ResponseStatus_RespondedNo(void)::common_ResponseStatus_RespondedNo;
}

void sub_1CA32AB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ResponseStatus_RespondedMaybe(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ResponseStatus_RespondedMaybe(void)::common_ResponseStatus_RespondedMaybe;
}

void sub_1CA32AD70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ResponseStatus_RespondedYes(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ResponseStatus_RespondedYes(void)::common_ResponseStatus_RespondedYes;
}

void sub_1CA32AF48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ResponseStatus_NotResponded(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ResponseStatus_NotResponded(void)::common_ResponseStatus_NotResponded;
}

void sub_1CA32B120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ResponseStatus_Responded(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ResponseStatus_Responded(void)::common_ResponseStatus_Responded;
}

void sub_1CA32B2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ZoomDirection_ZoomOut(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ZoomDirection_ZoomOut(void)::common_ZoomDirection_ZoomOut;
}

void sub_1CA32B4D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ZoomDirection_ZoomToFitWidth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ZoomDirection_ZoomToFitWidth(void)::common_ZoomDirection_ZoomToFitWidth;
}

void sub_1CA32B6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ZoomDirection_ZoomToFit(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ZoomDirection_ZoomToFit(void)::common_ZoomDirection_ZoomToFit;
}

void sub_1CA32B880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_ZoomDirection_ZoomIn(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_ZoomDirection_ZoomIn(void)::common_ZoomDirection_ZoomIn;
}

void sub_1CA32BA58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DateType_Holiday(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DateType_Holiday(void)::common_DateType_Holiday;
}

void sub_1CA32BC30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_DateType_BankHoliday(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_DateType_BankHoliday(void)::common_DateType_BankHoliday;
}

void sub_1CA32BE08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Similarity_DifferentThan(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Similarity_DifferentThan(void)::common_Similarity_DifferentThan;
}

void sub_1CA32BFE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Similarity_SimilarTo(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Similarity_SimilarTo(void)::common_Similarity_SimilarTo;
}

void sub_1CA32C1B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_Group_UnknownAgent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_Group_UnknownAgent(void)::common_Group_UnknownAgent;
}

void sub_1CA32C390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SortOrder_LeastFirst(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_SortOrder_LeastFirst(void)::common_SortOrder_LeastFirst;
}

void sub_1CA32C568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_SortOrder_MostFirst(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_SortOrder_MostFirst(void)::common_SortOrder_MostFirst;
}

void sub_1CA32C740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_OffsetTime_CurrentTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_OffsetTime_CurrentTime(void)::common_OffsetTime_CurrentTime;
}

void sub_1CA32C918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_OffsetTime_Midnight(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_OffsetTime_Midnight(void)::common_OffsetTime_Midnight;
}

void sub_1CA32CAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_OffsetTime_Noon(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_OffsetTime_Noon(void)::common_OffsetTime_Noon;
}

void sub_1CA32CCC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MicroGeographicArea_Nearby(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MicroGeographicArea_Nearby(void)::common_MicroGeographicArea_Nearby;
}

void sub_1CA32CEA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::common_MicroGeographicArea_Here(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::common_MicroGeographicArea_Here(void)::common_MicroGeographicArea_Here;
}

void sub_1CA32D078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonContact_ContactAttribute_Contact(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonContact_ContactAttribute_Contact(void)::commonContact_ContactAttribute_Contact;
}

void sub_1CA32D250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonContact_ContactAttribute_ContactPoster(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonContact_ContactAttribute_ContactPoster(void)::commonContact_ContactAttribute_ContactPoster;
}

void sub_1CA32D428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonEventTrigger_EventTriggerAttribute_ConditionEnterVehicle(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonEventTrigger_EventTriggerAttribute_ConditionEnterVehicle(void)::commonEventTrigger_EventTriggerAttribute_ConditionEnterVehicle;
}

void sub_1CA32D600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonEventTrigger_EventTriggerAttribute_ConditionDeparture(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonEventTrigger_EventTriggerAttribute_ConditionDeparture(void)::commonEventTrigger_EventTriggerAttribute_ConditionDeparture;
}

void sub_1CA32D7D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonEventTrigger_EventTriggerAttribute_ConditionDepartVehicle(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonEventTrigger_EventTriggerAttribute_ConditionDepartVehicle(void)::commonEventTrigger_EventTriggerAttribute_ConditionDepartVehicle;
}

void sub_1CA32D9B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonEventTrigger_EventTriggerAttribute_ConditionArrival(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonEventTrigger_EventTriggerAttribute_ConditionArrival(void)::commonEventTrigger_EventTriggerAttribute_ConditionArrival;
}

void sub_1CA32DB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Folder(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Folder(void)::commonNotebook_NotebookItemType_Folder;
}

void sub_1CA32DD60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Note(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Note(void)::commonNotebook_NotebookItemType_Note;
}

void sub_1CA32DF38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Task(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Task(void)::commonNotebook_NotebookItemType_Task;
}

void sub_1CA32E110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Reminder(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Reminder(void)::commonNotebook_NotebookItemType_Reminder;
}

void sub_1CA32E2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Item(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Item(void)::commonNotebook_NotebookItemType_Item;
}

void sub_1CA32E4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Subtask(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Subtask(void)::commonNotebook_NotebookItemType_Subtask;
}

void sub_1CA32E698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_List(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_List(void)::commonNotebook_NotebookItemType_List;
}

void sub_1CA32E870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonPhoneCall_PhoneCallAttribute_History(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonPhoneCall_PhoneCallAttribute_History(void)::commonPhoneCall_PhoneCallAttribute_History;
}

void sub_1CA32EA48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonPhoneCall_PhoneCallAttribute_Group(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonPhoneCall_PhoneCallAttribute_Group(void)::commonPhoneCall_PhoneCallAttribute_Group;
}

void sub_1CA32EC20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockType_StockMarket(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockType_StockMarket(void)::commonStock_StockType_StockMarket;
}

void sub_1CA32EDF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockType_Stock(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockType_Stock(void)::commonStock_StockType_Stock;
}

void sub_1CA32EFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Volume(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Volume(void)::commonStock_StockAttribute_Volume;
}

void sub_1CA32F1A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_PreviousClosingPrice(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_PreviousClosingPrice(void)::commonStock_StockAttribute_PreviousClosingPrice;
}

void sub_1CA32F380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_PriceChangePercent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_PriceChangePercent(void)::commonStock_StockAttribute_PriceChangePercent;
}

void sub_1CA32F558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Symbol(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Symbol(void)::commonStock_StockAttribute_Symbol;
}

void sub_1CA32F730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_PERatio(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_PERatio(void)::commonStock_StockAttribute_PERatio;
}

void sub_1CA32F908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_High52w(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_High52w(void)::commonStock_StockAttribute_High52w;
}

void sub_1CA32FAE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Earnings(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Earnings(void)::commonStock_StockAttribute_Earnings;
}

void sub_1CA32FCB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_MarketCap(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_MarketCap(void)::commonStock_StockAttribute_MarketCap;
}

void sub_1CA32FE90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_PriceChange(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_PriceChange(void)::commonStock_StockAttribute_PriceChange;
}

void sub_1CA330068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_LowPrice(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_LowPrice(void)::commonStock_StockAttribute_LowPrice;
}

void sub_1CA330240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_HighPrice(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_HighPrice(void)::commonStock_StockAttribute_HighPrice;
}

void sub_1CA330418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Name(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Name(void)::commonStock_StockAttribute_Name;
}

void sub_1CA3305F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_EarningsPerShare(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_EarningsPerShare(void)::commonStock_StockAttribute_EarningsPerShare;
}

void sub_1CA3307C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_OpeningPrice(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_OpeningPrice(void)::commonStock_StockAttribute_OpeningPrice;
}

void sub_1CA3309A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_EarningsReleaseDate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_EarningsReleaseDate(void)::commonStock_StockAttribute_EarningsReleaseDate;
}

void sub_1CA330B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_ClosingPrice(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_ClosingPrice(void)::commonStock_StockAttribute_ClosingPrice;
}

void sub_1CA330D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_DividendYield(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_DividendYield(void)::commonStock_StockAttribute_DividendYield;
}

void sub_1CA330F28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Profit(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Profit(void)::commonStock_StockAttribute_Profit;
}

void sub_1CA331100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Price(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Price(void)::commonStock_StockAttribute_Price;
}

void sub_1CA3312D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Low52w(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Low52w(void)::commonStock_StockAttribute_Low52w;
}

void sub_1CA3314B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockChangeState_GoUpOrDown(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockChangeState_GoUpOrDown(void)::commonStock_StockChangeState_GoUpOrDown;
}

void sub_1CA331688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockChangeState_Unchanged(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockChangeState_Unchanged(void)::commonStock_StockChangeState_Unchanged;
}

void sub_1CA331860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockChangeState_GoUp(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockChangeState_GoUp(void)::commonStock_StockChangeState_GoUp;
}

void sub_1CA331A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonStock_StockChangeState_GoDown(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonStock_StockChangeState_GoDown(void)::commonStock_StockChangeState_GoDown;
}

void sub_1CA331C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonUserEntity_UserEntityAttribute_Old(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonUserEntity_UserEntityAttribute_Old(void)::commonUserEntity_UserEntityAttribute_Old;
}

void sub_1CA331DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::commonUserEntity_UserEntityAttribute_New(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::commonUserEntity_UserEntityAttribute_New(void)::commonUserEntity_UserEntityAttribute_New;
}

void sub_1CA331FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::sirikit_ContactAgent_UnknownAgent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::sirikit_ContactAgent_UnknownAgent(void)::sirikit_ContactAgent_UnknownAgent;
}

void sub_1CA332198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::sirikit_PaymentOrganization_UnknownAgent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::sirikit_PaymentOrganization_UnknownAgent(void)::sirikit_PaymentOrganization_UnknownAgent;
}

void sub_1CA332370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::sirikit_MusicArtist_UnknownAgent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::sirikit_MusicArtist_UnknownAgent(void)::sirikit_MusicArtist_UnknownAgent;
}

void sub_1CA332548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::sirikit_ContactGroup_UnknownAgent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::sirikit_ContactGroup_UnknownAgent(void)::sirikit_ContactGroup_UnknownAgent;
}

void sub_1CA332720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::sirikit_AudiobookAuthor_User(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::sirikit_AudiobookAuthor_User(void)::sirikit_AudiobookAuthor_User;
}

void sub_1CA3328F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::sirikit_AudiobookAuthor_UnknownAgent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::sirikit_AudiobookAuthor_UnknownAgent(void)::sirikit_AudiobookAuthor_UnknownAgent;
}

void sub_1CA332AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_AppViewTypeGlance(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_AppViewTypeGlance(void)::appleApp_AppAttribute_AppViewTypeGlance;
}

void sub_1CA332CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_OperatingSystemIos(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_OperatingSystemIos(void)::appleApp_AppAttribute_OperatingSystemIos;
}

void sub_1CA332E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_OperatingSystemMacosX(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_OperatingSystemMacosX(void)::appleApp_AppAttribute_OperatingSystemMacosX;
}

void sub_1CA333058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_OperatingSystemTvos(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_OperatingSystemTvos(void)::appleApp_AppAttribute_OperatingSystemTvos;
}

void sub_1CA333230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_OperatingSystemWatchos(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_OperatingSystemWatchos(void)::appleApp_AppAttribute_OperatingSystemWatchos;
}

void sub_1CA333408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchEditorsChoice(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchEditorsChoice(void)::appleApp_AppListingAttribute_AppListingCuratedSearchEditorsChoice;
}

void sub_1CA3335E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchTopFree(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchTopFree(void)::appleApp_AppListingAttribute_AppListingCuratedSearchTopFree;
}

void sub_1CA3337B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchTopGrossing(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchTopGrossing(void)::appleApp_AppListingAttribute_AppListingCuratedSearchTopGrossing;
}

void sub_1CA333990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchTopPaid(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchTopPaid(void)::appleApp_AppListingAttribute_AppListingCuratedSearchTopPaid;
}

void sub_1CA333B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchWhatAppShouldIGet(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchWhatAppShouldIGet(void)::appleApp_AppListingAttribute_AppListingCuratedSearchWhatAppShouldIGet;
}

void sub_1CA333D40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeS(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeS(void)::appleApp_AppListingAttribute_AppListingPriceRangeS;
}

void sub_1CA333F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeSS(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeSS(void)::appleApp_AppListingAttribute_AppListingPriceRangeSS;
}

void sub_1CA3340F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeSSS(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeSSS(void)::appleApp_AppListingAttribute_AppListingPriceRangeSSS;
}

void sub_1CA3342C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeSSSS(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeSSSS(void)::appleApp_AppListingAttribute_AppListingPriceRangeSSSS;
}

void sub_1CA3344A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeOnSale(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeOnSale(void)::appleApp_AppListingAttribute_AppListingPriceRangeOnSale;
}

void sub_1CA334678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProviderAppleAppStore(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProviderAppleAppStore(void)::appleApp_AppListingAttribute_AppListingProviderAppleAppStore;
}

void sub_1CA334850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProviderGeneric(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProviderGeneric(void)::appleApp_AppListingAttribute_AppListingProviderGeneric;
}

void sub_1CA334A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProviderItunes(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProviderItunes(void)::appleApp_AppListingAttribute_AppListingProviderItunes;
}

void sub_1CA334C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProviderGooglePlayStore(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProviderGooglePlayStore(void)::appleApp_AppListingAttribute_AppListingProviderGooglePlayStore;
}

void sub_1CA334DD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProximityNear(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProximityNear(void)::appleApp_AppListingAttribute_AppListingProximityNear;
}

void sub_1CA334FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSearchAttributesGoodReviews(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSearchAttributesGoodReviews(void)::appleApp_AppListingAttribute_AppListingSearchAttributesGoodReviews;
}

void sub_1CA335188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSearchAttributesCriticallyAcclaimed(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSearchAttributesCriticallyAcclaimed(void)::appleApp_AppListingAttribute_AppListingSearchAttributesCriticallyAcclaimed;
}

void sub_1CA335360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSearchAttributesPaid(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSearchAttributesPaid(void)::appleApp_AppListingAttribute_AppListingSearchAttributesPaid;
}

void sub_1CA335538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSearchAttributesPurchased(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSearchAttributesPurchased(void)::appleApp_AppListingAttribute_AppListingSearchAttributesPurchased;
}

void sub_1CA335710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSortBest(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSortBest(void)::appleApp_AppListingAttribute_AppListingSortBest;
}

void sub_1CA3358E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSortNewest(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSortNewest(void)::appleApp_AppListingAttribute_AppListingSortNewest;
}

void sub_1CA335AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSortPopular(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSortPopular(void)::appleApp_AppListingAttribute_AppListingSortPopular;
}

void sub_1CA335C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAvailability(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAvailability(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAvailability;
}

void sub_1CA335E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAllDay(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAllDay(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAllDay;
}

void sub_1CA336048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesBefore(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesBefore(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesBefore;
}

void sub_1CA336220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAfter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAfter(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAfter;
}

void sub_1CA3363F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesDate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesDate(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesDate;
}

void sub_1CA3365D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesTime(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesTime;
}

void sub_1CA3367A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesName(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesName(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesName;
}

void sub_1CA336980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesLocation(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesLocation(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesLocation;
}

void sub_1CA336B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAttendees(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAttendees(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAttendees;
}

void sub_1CA336D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesDraft(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesDraft(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesDraft;
}

void sub_1CA336F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAlert(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAlert(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAlert;
}

void sub_1CA3370E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesComment(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesComment(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesComment;
}

void sub_1CA3372B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesNote(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesNote(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesNote;
}

void sub_1CA337490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesTravelTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesTravelTime(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesTravelTime;
}

void sub_1CA337668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesShowAs(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesShowAs(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesShowAs;
}

void sub_1CA337840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesOrganizer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesOrganizer(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesOrganizer;
}

void sub_1CA337A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesCategories(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesCategories(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesCategories;
}

void sub_1CA337BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounAppointment(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounAppointment(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounAppointment;
}

void sub_1CA337DC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounAppointments(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounAppointments(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounAppointments;
}

void sub_1CA337FA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounMeeting(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounMeeting(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounMeeting;
}

void sub_1CA338178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounMeetings(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounMeetings(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounMeetings;
}

void sub_1CA338350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounEvent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounEvent(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounEvent;
}

void sub_1CA338528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounEvents(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounEvents(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounEvents;
}

void sub_1CA338700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionFull(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionFull(void)::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionFull;
}

void sub_1CA3388D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionMinimum(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionMinimum(void)::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionMinimum;
}

void sub_1CA338AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionAmountDue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionAmountDue(void)::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionAmountDue;
}

void sub_1CA338C88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionStatementBalance(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionStatementBalance(void)::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionStatementBalance;
}

void sub_1CA338E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionMaximumAllowed(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionMaximumAllowed(void)::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionMaximumAllowed;
}

void sub_1CA339038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionMinimumAllowed(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionMinimumAllowed(void)::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionMinimumAllowed;
}

void sub_1CA339210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeCompleted(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeCompleted(void)::applePayments_PaymentAttribute_PaymentsAttributeCompleted;
}

void sub_1CA3393E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributePending(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributePending(void)::applePayments_PaymentAttribute_PaymentsAttributePending;
}

void sub_1CA3395C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeAborted(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeAborted(void)::applePayments_PaymentAttribute_PaymentsAttributeAborted;
}

void sub_1CA339798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeDeclined(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeDeclined(void)::applePayments_PaymentAttribute_PaymentsAttributeDeclined;
}

void sub_1CA339970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributePaid(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributePaid(void)::applePayments_PaymentAttribute_PaymentsAttributePaid;
}

void sub_1CA339B48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeUnpaid(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeUnpaid(void)::applePayments_PaymentAttribute_PaymentsAttributeUnpaid;
}

void sub_1CA339D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeDeposited(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeDeposited(void)::applePayments_PaymentAttribute_PaymentsAttributeDeposited;
}

void sub_1CA339EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeSent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeSent(void)::applePayments_PaymentAttribute_PaymentsAttributeSent;
}

void sub_1CA33A0D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeRequested(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeRequested(void)::applePayments_PaymentAttribute_PaymentsAttributeRequested;
}

void sub_1CA33A2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeCashed(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeCashed(void)::applePayments_PaymentAttribute_PaymentsAttributeCashed;
}

void sub_1CA33A480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeWhenDue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeWhenDue(void)::applePayments_PaymentAttribute_PaymentsAttributeWhenDue;
}

void sub_1CA33A658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeDue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeDue(void)::applePayments_PaymentAttribute_PaymentsAttributeDue;
}

void sub_1CA33A830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeOverdue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeOverdue(void)::applePayments_PaymentAttribute_PaymentsAttributeOverdue;
}

void sub_1CA33AA08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeMininumDue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeMininumDue(void)::applePayments_PaymentAttribute_PaymentsAttributeMininumDue;
}

void sub_1CA33ABE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeRewards(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeRewards(void)::applePayments_PaymentAttribute_PaymentsAttributeRewards;
}

void sub_1CA33ADB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeRecurring(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeRecurring(void)::applePayments_PaymentAttribute_PaymentsAttributeRecurring;
}

void sub_1CA33AF90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeReceived(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeReceived(void)::applePayments_PaymentAttribute_PaymentsAttributeReceived;
}

void sub_1CA33B168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeActivate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeActivate(void)::applePayments_PaymentAttribute_PaymentsAttributeActivate;
}

void sub_1CA33B340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeCashed(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeCashed(void)::applePayments_PaymentAccountAttribute_PaymentsAttributeCashed;
}

void sub_1CA33B518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeLateFee(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeLateFee(void)::applePayments_PaymentAccountAttribute_PaymentsAttributeLateFee;
}

void sub_1CA33B6F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeInterestRate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeInterestRate(void)::applePayments_PaymentAccountAttribute_PaymentsAttributeInterestRate;
}

void sub_1CA33B8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeMininumDue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeMininumDue(void)::applePayments_PaymentAccountAttribute_PaymentsAttributeMininumDue;
}

void sub_1CA33BAA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeRewards(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeRewards(void)::applePayments_PaymentAccountAttribute_PaymentsAttributeRewards;
}

void sub_1CA33BC78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeExpirationDate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeExpirationDate(void)::applePayments_PaymentAccountAttribute_PaymentsAttributeExpirationDate;
}

void sub_1CA33BE50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeSecurityCode(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeSecurityCode(void)::applePayments_PaymentAccountAttribute_PaymentsAttributeSecurityCode;
}

void sub_1CA33C028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributePin(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributePin(void)::applePayments_PaymentAccountAttribute_PaymentsAttributePin;
}

void sub_1CA33C200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributePassword(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributePassword(void)::applePayments_PaymentAccountAttribute_PaymentsAttributePassword;
}

void sub_1CA33C3D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeCreditLimit(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeCreditLimit(void)::applePayments_PaymentAccountAttribute_PaymentsAttributeCreditLimit;
}

void sub_1CA33C5B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeLastFourDigits(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeLastFourDigits(void)::applePayments_PaymentAccountAttribute_PaymentsAttributeLastFourDigits;
}

void sub_1CA33C788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeCreditRemaining(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeCreditRemaining(void)::applePayments_PaymentAccountAttribute_PaymentsAttributeCreditRemaining;
}

void sub_1CA33C960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributePaymentSchedule(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributePaymentSchedule(void)::applePayments_PaymentAccountAttribute_PaymentsAttributePaymentSchedule;
}

void sub_1CA33CB38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeActivate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeActivate(void)::applePayments_PaymentAccountAttribute_PaymentsAttributeActivate;
}

void sub_1CA33CD10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeLock(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeLock(void)::applePayments_PaymentAccountAttribute_PaymentsAttributeLock;
}

void sub_1CA33CEE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionArrival(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionArrival(void)::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionArrival;
}

void sub_1CA33D0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionDeparture(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionDeparture(void)::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionDeparture;
}

void sub_1CA33D298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionEnterVehicle(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionEnterVehicle(void)::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionEnterVehicle;
}

void sub_1CA33D470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionDepartVehicle(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionDepartVehicle(void)::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionDepartVehicle;
}

void sub_1CA33D648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesRecentlyAdded(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesRecentlyAdded(void)::applePhotos_PhotoAttribute_PhotoAttributesRecentlyAdded;
}

void sub_1CA33D820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesRecentlyDeleted(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesRecentlyDeleted(void)::applePhotos_PhotoAttribute_PhotoAttributesRecentlyDeleted;
}

void sub_1CA33D9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFavorites(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFavorites(void)::applePhotos_PhotoAttribute_PhotoAttributesFavorites;
}

void sub_1CA33DBD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesPanoramas(void)::applePhotos_PhotoAttribute_PhotoAttributesPanoramas;
}

void sub_1CA33DDA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesVerticalPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesVerticalPanoramas(void)::applePhotos_PhotoAttribute_PhotoAttributesVerticalPanoramas;
}

void sub_1CA33DF80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesHorizontalPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesHorizontalPanoramas(void)::applePhotos_PhotoAttribute_PhotoAttributesHorizontalPanoramas;
}

void sub_1CA33E158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesSloMo(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesSloMo(void)::applePhotos_PhotoAttribute_PhotoAttributesSloMo;
}

void sub_1CA33E330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesTimeLapse(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesTimeLapse(void)::applePhotos_PhotoAttribute_PhotoAttributesTimeLapse;
}

void sub_1CA33E508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesBursts(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesBursts(void)::applePhotos_PhotoAttribute_PhotoAttributesBursts;
}

void sub_1CA33E6E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesHDR(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesHDR(void)::applePhotos_PhotoAttribute_PhotoAttributesHDR;
}

void sub_1CA33E8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFlashOn(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFlashOn(void)::applePhotos_PhotoAttribute_PhotoAttributesFlashOn;
}

void sub_1CA33EA90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFlashOff(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFlashOff(void)::applePhotos_PhotoAttribute_PhotoAttributesFlashOff;
}

void sub_1CA33EC68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesHiFrameRate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesHiFrameRate(void)::applePhotos_PhotoAttribute_PhotoAttributesHiFrameRate;
}

void sub_1CA33EE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributes120fps(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributes120fps(void)::applePhotos_PhotoAttribute_PhotoAttributes120fps;
}

void sub_1CA33F018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributes240fps(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributes240fps(void)::applePhotos_PhotoAttribute_PhotoAttributes240fps;
}

void sub_1CA33F1F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesLandscape(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesLandscape(void)::applePhotos_PhotoAttribute_PhotoAttributesLandscape;
}

void sub_1CA33F3C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesPortrait(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesPortrait(void)::applePhotos_PhotoAttribute_PhotoAttributesPortrait;
}

void sub_1CA33F5A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesSquare(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesSquare(void)::applePhotos_PhotoAttribute_PhotoAttributesSquare;
}

void sub_1CA33F778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFromFrontFacingCamera(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFromFrontFacingCamera(void)::applePhotos_PhotoAttribute_PhotoAttributesFromFrontFacingCamera;
}

void sub_1CA33F950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFromRearFacingCamera(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFromRearFacingCamera(void)::applePhotos_PhotoAttribute_PhotoAttributesFromRearFacingCamera;
}

void sub_1CA33FB28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesPortraitMode(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesPortraitMode(void)::applePhotos_PhotoAttribute_PhotoAttributesPortraitMode;
}

void sub_1CA33FD00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesLive(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesLive(void)::applePhotos_PhotoAttribute_PhotoAttributesLive;
}

void sub_1CA33FED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesLoop(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesLoop(void)::applePhotos_PhotoAttribute_PhotoAttributesLoop;
}

void sub_1CA3400B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesBounce(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesBounce(void)::applePhotos_PhotoAttribute_PhotoAttributesBounce;
}

void sub_1CA340288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesLongExposure(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesLongExposure(void)::applePhotos_PhotoAttribute_PhotoAttributesLongExposure;
}

void sub_1CA340460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesScreenshot(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesScreenshot(void)::applePhotos_PhotoAttribute_PhotoAttributesScreenshot;
}

void sub_1CA340638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesSelfie(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesSelfie(void)::applePhotos_PhotoAttribute_PhotoAttributesSelfie;
}

void sub_1CA340810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoNounGIFs(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoNounGIFs(void)::applePhotos_PhotoAttribute_PhotoNounGIFs;
}

void sub_1CA3409E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterRedEye(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterRedEye(void)::applePhotos_PhotoFilter_PhotoFilterRedEye;
}

void sub_1CA340BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterBlackAndWhite(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterBlackAndWhite(void)::applePhotos_PhotoFilter_PhotoFilterBlackAndWhite;
}

void sub_1CA340D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterMono(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterMono(void)::applePhotos_PhotoFilter_PhotoFilterMono;
}

void sub_1CA340F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterTonal(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterTonal(void)::applePhotos_PhotoFilter_PhotoFilterTonal;
}

void sub_1CA341148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterNoir(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterNoir(void)::applePhotos_PhotoFilter_PhotoFilterNoir;
}

void sub_1CA341320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterFade(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterFade(void)::applePhotos_PhotoFilter_PhotoFilterFade;
}

void sub_1CA3414F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterNone(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterNone(void)::applePhotos_PhotoFilter_PhotoFilterNone;
}

void sub_1CA3416D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterChrome(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterChrome(void)::applePhotos_PhotoFilter_PhotoFilterChrome;
}

void sub_1CA3418A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterProcess(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterProcess(void)::applePhotos_PhotoFilter_PhotoFilterProcess;
}

void sub_1CA341A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterTransfer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterTransfer(void)::applePhotos_PhotoFilter_PhotoFilterTransfer;
}

void sub_1CA341C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterInstant(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterInstant(void)::applePhotos_PhotoFilter_PhotoFilterInstant;
}

void sub_1CA341E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterRedEye(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterRedEye(void)::applePhotoCollection_PhotoCollectionFilter_PhotoFilterRedEye;
}

void sub_1CA342008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterBlackAndWhite(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterBlackAndWhite(void)::applePhotoCollection_PhotoCollectionFilter_PhotoFilterBlackAndWhite;
}

void sub_1CA3421E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterMono(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterMono(void)::applePhotoCollection_PhotoCollectionFilter_PhotoFilterMono;
}

void sub_1CA3423B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterTonal(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterTonal(void)::applePhotoCollection_PhotoCollectionFilter_PhotoFilterTonal;
}

void sub_1CA342590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterNoir(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterNoir(void)::applePhotoCollection_PhotoCollectionFilter_PhotoFilterNoir;
}

void sub_1CA342768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterFade(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterFade(void)::applePhotoCollection_PhotoCollectionFilter_PhotoFilterFade;
}

void sub_1CA342940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterNone(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterNone(void)::applePhotoCollection_PhotoCollectionFilter_PhotoFilterNone;
}

void sub_1CA342B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterChrome(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterChrome(void)::applePhotoCollection_PhotoCollectionFilter_PhotoFilterChrome;
}

void sub_1CA342CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterProcess(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterProcess(void)::applePhotoCollection_PhotoCollectionFilter_PhotoFilterProcess;
}

void sub_1CA342EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterTransfer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterTransfer(void)::applePhotoCollection_PhotoCollectionFilter_PhotoFilterTransfer;
}

void sub_1CA3430A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterInstant(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterInstant(void)::applePhotoCollection_PhotoCollectionFilter_PhotoFilterInstant;
}

void sub_1CA343278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesRecentlyAdded(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesRecentlyAdded(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesRecentlyAdded;
}

void sub_1CA343450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesRecentlyDeleted(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesRecentlyDeleted(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesRecentlyDeleted;
}

void sub_1CA343628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFavorites(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFavorites(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFavorites;
}

void sub_1CA343800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesPanoramas(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesPanoramas;
}

void sub_1CA3439D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesVerticalPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesVerticalPanoramas(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesVerticalPanoramas;
}

void sub_1CA343BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesHorizontalPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesHorizontalPanoramas(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesHorizontalPanoramas;
}

void sub_1CA343D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesSloMo(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesSloMo(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesSloMo;
}

void sub_1CA343F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesTimeLapse(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesTimeLapse(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesTimeLapse;
}

void sub_1CA344138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesBursts(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesBursts(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesBursts;
}

void sub_1CA344310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesHDR(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesHDR(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesHDR;
}

void sub_1CA3444E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFlashOn(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFlashOn(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFlashOn;
}

void sub_1CA3446C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFlashOff(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFlashOff(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFlashOff;
}

void sub_1CA344898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesHiFrameRate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesHiFrameRate(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesHiFrameRate;
}

void sub_1CA344A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributes120fps(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributes120fps(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributes120fps;
}

void sub_1CA344C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributes240fps(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributes240fps(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributes240fps;
}

void sub_1CA344E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLandscape(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLandscape(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLandscape;
}

void sub_1CA344FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesPortrait(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesPortrait(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesPortrait;
}

void sub_1CA3451D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesSquare(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesSquare(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesSquare;
}

void sub_1CA3453A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFromFrontFacingCamera(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFromFrontFacingCamera(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFromFrontFacingCamera;
}

void sub_1CA345580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFromRearFacingCamera(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFromRearFacingCamera(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFromRearFacingCamera;
}

void sub_1CA345758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesPortraitMode(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesPortraitMode(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesPortraitMode;
}

void sub_1CA345930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLive(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLive(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLive;
}

void sub_1CA345B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLoop(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLoop(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLoop;
}

void sub_1CA345CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesBounce(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesBounce(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesBounce;
}

void sub_1CA345EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLongExposure(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLongExposure(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLongExposure;
}

void sub_1CA346090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesScreenshot(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesScreenshot(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesScreenshot;
}

void sub_1CA346268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesSelfie(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesSelfie(void)::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesSelfie;
}

void sub_1CA346440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesRecentlyAdded(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesRecentlyAdded(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesRecentlyAdded;
}

void sub_1CA346618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesRecentlyDeleted(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesRecentlyDeleted(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesRecentlyDeleted;
}

void sub_1CA3467F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFavorites(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFavorites(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFavorites;
}

void sub_1CA3469C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesPanoramas(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesPanoramas;
}

void sub_1CA346BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesVerticalPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesVerticalPanoramas(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesVerticalPanoramas;
}

void sub_1CA346D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesHorizontalPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesHorizontalPanoramas(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesHorizontalPanoramas;
}

void sub_1CA346F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesSloMo(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesSloMo(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesSloMo;
}

void sub_1CA347128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesTimeLapse(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesTimeLapse(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesTimeLapse;
}

void sub_1CA347300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesBursts(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesBursts(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesBursts;
}

void sub_1CA3474D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesHDR(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesHDR(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesHDR;
}

void sub_1CA3476B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFlashOn(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFlashOn(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFlashOn;
}

void sub_1CA347888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFlashOff(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFlashOff(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFlashOff;
}

void sub_1CA347A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesHiFrameRate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesHiFrameRate(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesHiFrameRate;
}

void sub_1CA347C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributes120fps(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributes120fps(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributes120fps;
}

void sub_1CA347E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributes240fps(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributes240fps(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributes240fps;
}

void sub_1CA347FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLandscape(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLandscape(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLandscape;
}

void sub_1CA3481C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesPortrait(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesPortrait(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesPortrait;
}

void sub_1CA348398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesSquare(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesSquare(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesSquare;
}

void sub_1CA348570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFromFrontFacingCamera(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFromFrontFacingCamera(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFromFrontFacingCamera;
}

void sub_1CA348748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFromRearFacingCamera(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFromRearFacingCamera(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFromRearFacingCamera;
}

void sub_1CA348920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesPortraitMode(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesPortraitMode(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesPortraitMode;
}

void sub_1CA348AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLive(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLive(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLive;
}

void sub_1CA348CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLoop(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLoop(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLoop;
}

void sub_1CA348EA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesBounce(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesBounce(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesBounce;
}

void sub_1CA349080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLongExposure(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLongExposure(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLongExposure;
}

void sub_1CA349258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesScreenshot(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesScreenshot(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesScreenshot;
}

void sub_1CA349430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesSelfie(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesSelfie(void)::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesSelfie;
}

void sub_1CA349608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterRedEye(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterRedEye(void)::applePhotoMemory_PhotoMemoryFilter_PhotoFilterRedEye;
}

void sub_1CA3497E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterBlackAndWhite(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterBlackAndWhite(void)::applePhotoMemory_PhotoMemoryFilter_PhotoFilterBlackAndWhite;
}

void sub_1CA3499B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterMono(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterMono(void)::applePhotoMemory_PhotoMemoryFilter_PhotoFilterMono;
}

void sub_1CA349B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterTonal(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterTonal(void)::applePhotoMemory_PhotoMemoryFilter_PhotoFilterTonal;
}

void sub_1CA349D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterNoir(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterNoir(void)::applePhotoMemory_PhotoMemoryFilter_PhotoFilterNoir;
}

void sub_1CA349F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterFade(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterFade(void)::applePhotoMemory_PhotoMemoryFilter_PhotoFilterFade;
}

void sub_1CA34A118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterNone(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterNone(void)::applePhotoMemory_PhotoMemoryFilter_PhotoFilterNone;
}

void sub_1CA34A2F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterChrome(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterChrome(void)::applePhotoMemory_PhotoMemoryFilter_PhotoFilterChrome;
}

void sub_1CA34A4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterProcess(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterProcess(void)::applePhotoMemory_PhotoMemoryFilter_PhotoFilterProcess;
}

void sub_1CA34A6A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterTransfer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterTransfer(void)::applePhotoMemory_PhotoMemoryFilter_PhotoFilterTransfer;
}

void sub_1CA34A878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterInstant(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterInstant(void)::applePhotoMemory_PhotoMemoryFilter_PhotoFilterInstant;
}

void sub_1CA34AA50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesRecentlyAdded(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesRecentlyAdded(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesRecentlyAdded;
}

void sub_1CA34AC28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesRecentlyDeleted(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesRecentlyDeleted(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesRecentlyDeleted;
}

void sub_1CA34AE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFavorites(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFavorites(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesFavorites;
}

void sub_1CA34AFD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesPanoramas(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesPanoramas;
}

void sub_1CA34B1B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesVerticalPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesVerticalPanoramas(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesVerticalPanoramas;
}

void sub_1CA34B388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesHorizontalPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesHorizontalPanoramas(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesHorizontalPanoramas;
}

void sub_1CA34B560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesSloMo(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesSloMo(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesSloMo;
}

void sub_1CA34B738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesTimeLapse(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesTimeLapse(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesTimeLapse;
}

void sub_1CA34B910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesBursts(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesBursts(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesBursts;
}

void sub_1CA34BAE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesHDR(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesHDR(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesHDR;
}

void sub_1CA34BCC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFlashOn(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFlashOn(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesFlashOn;
}

void sub_1CA34BE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFlashOff(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFlashOff(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesFlashOff;
}

void sub_1CA34C070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesHiFrameRate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesHiFrameRate(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesHiFrameRate;
}

void sub_1CA34C248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributes120fps(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributes120fps(void)::appleSlideshow_SlideshowAttribute_PhotoAttributes120fps;
}

void sub_1CA34C420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributes240fps(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributes240fps(void)::appleSlideshow_SlideshowAttribute_PhotoAttributes240fps;
}

void sub_1CA34C5F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesLandscape(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesLandscape(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesLandscape;
}

void sub_1CA34C7D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesPortrait(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesPortrait(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesPortrait;
}

void sub_1CA34C9A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesSquare(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesSquare(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesSquare;
}

void sub_1CA34CB80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFromFrontFacingCamera(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFromFrontFacingCamera(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesFromFrontFacingCamera;
}

void sub_1CA34CD58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFromRearFacingCamera(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFromRearFacingCamera(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesFromRearFacingCamera;
}

void sub_1CA34CF30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesPortraitMode(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesPortraitMode(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesPortraitMode;
}

void sub_1CA34D108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesLive(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesLive(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesLive;
}

void sub_1CA34D2E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesLoop(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesLoop(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesLoop;
}

void sub_1CA34D4B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesBounce(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesBounce(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesBounce;
}

void sub_1CA34D690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesLongExposure(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesLongExposure(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesLongExposure;
}

void sub_1CA34D868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesScreenshot(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesScreenshot(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesScreenshot;
}

void sub_1CA34DA40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesSelfie(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesSelfie(void)::appleSlideshow_SlideshowAttribute_PhotoAttributesSelfie;
}

void sub_1CA34DC18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterRedEye(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterRedEye(void)::appleSlideshow_SlideshowFilter_PhotoFilterRedEye;
}

void sub_1CA34DDF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterBlackAndWhite(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterBlackAndWhite(void)::appleSlideshow_SlideshowFilter_PhotoFilterBlackAndWhite;
}

void sub_1CA34DFC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterMono(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterMono(void)::appleSlideshow_SlideshowFilter_PhotoFilterMono;
}

void sub_1CA34E1A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterTonal(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterTonal(void)::appleSlideshow_SlideshowFilter_PhotoFilterTonal;
}

void sub_1CA34E378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterNoir(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterNoir(void)::appleSlideshow_SlideshowFilter_PhotoFilterNoir;
}

void sub_1CA34E550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterFade(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterFade(void)::appleSlideshow_SlideshowFilter_PhotoFilterFade;
}

void sub_1CA34E728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterNone(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterNone(void)::appleSlideshow_SlideshowFilter_PhotoFilterNone;
}

void sub_1CA34E900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterChrome(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterChrome(void)::appleSlideshow_SlideshowFilter_PhotoFilterChrome;
}

void sub_1CA34EAD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterProcess(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterProcess(void)::appleSlideshow_SlideshowFilter_PhotoFilterProcess;
}

void sub_1CA34ECB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterTransfer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterTransfer(void)::appleSlideshow_SlideshowFilter_PhotoFilterTransfer;
}

void sub_1CA34EE88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterInstant(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterInstant(void)::appleSlideshow_SlideshowFilter_PhotoFilterInstant;
}

void sub_1CA34F060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesRecentlyAdded(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesRecentlyAdded(void)::appleVideo_VideoAttribute_PhotoAttributesRecentlyAdded;
}

void sub_1CA34F238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesRecentlyDeleted(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesRecentlyDeleted(void)::appleVideo_VideoAttribute_PhotoAttributesRecentlyDeleted;
}

void sub_1CA34F410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFavorites(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFavorites(void)::appleVideo_VideoAttribute_PhotoAttributesFavorites;
}

void sub_1CA34F5E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesPanoramas(void)::appleVideo_VideoAttribute_PhotoAttributesPanoramas;
}

void sub_1CA34F7C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesVerticalPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesVerticalPanoramas(void)::appleVideo_VideoAttribute_PhotoAttributesVerticalPanoramas;
}

void sub_1CA34F998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesHorizontalPanoramas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesHorizontalPanoramas(void)::appleVideo_VideoAttribute_PhotoAttributesHorizontalPanoramas;
}

void sub_1CA34FB70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesSloMo(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesSloMo(void)::appleVideo_VideoAttribute_PhotoAttributesSloMo;
}

void sub_1CA34FD48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesTimeLapse(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesTimeLapse(void)::appleVideo_VideoAttribute_PhotoAttributesTimeLapse;
}

void sub_1CA34FF20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesBursts(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesBursts(void)::appleVideo_VideoAttribute_PhotoAttributesBursts;
}

void sub_1CA3500F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesHDR(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesHDR(void)::appleVideo_VideoAttribute_PhotoAttributesHDR;
}

void sub_1CA3502D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFlashOn(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFlashOn(void)::appleVideo_VideoAttribute_PhotoAttributesFlashOn;
}

void sub_1CA3504A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFlashOff(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFlashOff(void)::appleVideo_VideoAttribute_PhotoAttributesFlashOff;
}

void sub_1CA350680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesHiFrameRate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesHiFrameRate(void)::appleVideo_VideoAttribute_PhotoAttributesHiFrameRate;
}

void sub_1CA350858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributes120fps(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributes120fps(void)::appleVideo_VideoAttribute_PhotoAttributes120fps;
}

void sub_1CA350A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributes240fps(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributes240fps(void)::appleVideo_VideoAttribute_PhotoAttributes240fps;
}

void sub_1CA350C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesLandscape(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesLandscape(void)::appleVideo_VideoAttribute_PhotoAttributesLandscape;
}

void sub_1CA350DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesPortrait(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesPortrait(void)::appleVideo_VideoAttribute_PhotoAttributesPortrait;
}

void sub_1CA350FB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesSquare(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesSquare(void)::appleVideo_VideoAttribute_PhotoAttributesSquare;
}

void sub_1CA351190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFromFrontFacingCamera(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFromFrontFacingCamera(void)::appleVideo_VideoAttribute_PhotoAttributesFromFrontFacingCamera;
}

void sub_1CA351368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFromRearFacingCamera(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFromRearFacingCamera(void)::appleVideo_VideoAttribute_PhotoAttributesFromRearFacingCamera;
}

void sub_1CA351540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesPortraitMode(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesPortraitMode(void)::appleVideo_VideoAttribute_PhotoAttributesPortraitMode;
}

void sub_1CA351718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesLive(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesLive(void)::appleVideo_VideoAttribute_PhotoAttributesLive;
}

void sub_1CA3518F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesLoop(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesLoop(void)::appleVideo_VideoAttribute_PhotoAttributesLoop;
}

void sub_1CA351AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesBounce(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesBounce(void)::appleVideo_VideoAttribute_PhotoAttributesBounce;
}

void sub_1CA351CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesLongExposure(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesLongExposure(void)::appleVideo_VideoAttribute_PhotoAttributesLongExposure;
}

void sub_1CA351E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesScreenshot(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesScreenshot(void)::appleVideo_VideoAttribute_PhotoAttributesScreenshot;
}

void sub_1CA352050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesSelfie(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesSelfie(void)::appleVideo_VideoAttribute_PhotoAttributesSelfie;
}

void sub_1CA352228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterRedEye(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterRedEye(void)::appleVideo_VideoFilter_PhotoFilterRedEye;
}

void sub_1CA352400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterBlackAndWhite(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterBlackAndWhite(void)::appleVideo_VideoFilter_PhotoFilterBlackAndWhite;
}

void sub_1CA3525D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterMono(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterMono(void)::appleVideo_VideoFilter_PhotoFilterMono;
}

void sub_1CA3527B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterTonal(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterTonal(void)::appleVideo_VideoFilter_PhotoFilterTonal;
}

void sub_1CA352988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterNoir(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterNoir(void)::appleVideo_VideoFilter_PhotoFilterNoir;
}

void sub_1CA352B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterFade(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterFade(void)::appleVideo_VideoFilter_PhotoFilterFade;
}

void sub_1CA352D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterNone(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterNone(void)::appleVideo_VideoFilter_PhotoFilterNone;
}

void sub_1CA352F10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterChrome(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterChrome(void)::appleVideo_VideoFilter_PhotoFilterChrome;
}

void sub_1CA3530E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterProcess(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterProcess(void)::appleVideo_VideoFilter_PhotoFilterProcess;
}

void sub_1CA3532C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterTransfer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterTransfer(void)::appleVideo_VideoFilter_PhotoFilterTransfer;
}

void sub_1CA353498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterInstant(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterInstant(void)::appleVideo_VideoFilter_PhotoFilterInstant;
}

void sub_1CA353670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a30);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v31 - 96);
  if (*(char *)(v31 - 33) < 0) {
    operator delete(*(void **)(v31 - 56));
  }
  MEMORY[0x1CB796510](v30, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Confetti(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Confetti(void)::apple_MessageEffect_Confetti;
}

void sub_1CA353834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Echo(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Echo(void)::apple_MessageEffect_Echo;
}

void sub_1CA3539F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Fireworks(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Fireworks(void)::apple_MessageEffect_Fireworks;
}

void sub_1CA353BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Gentle(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Gentle(void)::apple_MessageEffect_Gentle;
}

void sub_1CA353D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::apple_MessageEffect_HappyBirthday(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::apple_MessageEffect_HappyBirthday(void)::apple_MessageEffect_HappyBirthday;
}

void sub_1CA353F24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Heart(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Heart(void)::apple_MessageEffect_Heart;
}

void sub_1CA3540E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Impact(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Impact(void)::apple_MessageEffect_Impact;
}

void sub_1CA35429C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::apple_MessageEffect_InvisibleInk(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::apple_MessageEffect_InvisibleInk(void)::apple_MessageEffect_InvisibleInk;
}

void sub_1CA354458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Lasers(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Lasers(void)::apple_MessageEffect_Lasers;
}

void sub_1CA354614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Loud(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Loud(void)::apple_MessageEffect_Loud;
}

void sub_1CA3547D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::apple_MessageEffect_ShootingStar(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::apple_MessageEffect_ShootingStar(void)::apple_MessageEffect_ShootingStar;
}

void sub_1CA35498C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Sparkles(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Sparkles(void)::apple_MessageEffect_Sparkles;
}

void sub_1CA354B48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Spotlight(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Spotlight(void)::apple_MessageEffect_Spotlight;
}

void sub_1CA354D04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesMessage(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesMessage(void)::appleMessage_MessageAttribute_SmsAttributesMessage;
}

void sub_1CA354EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsNounAnnouncement(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsNounAnnouncement(void)::appleMessage_MessageAttribute_SmsNounAnnouncement;
}

void sub_1CA35507C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesRecurrence(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesRecurrence(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesRecurrence;
}

void sub_1CA355238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesReturn(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesReturn(void)::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesReturn;
}

void sub_1CA3553F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleAlarm_AlarmAttribute_AlarmAttributesRecurring(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleAlarm_AlarmAttribute_AlarmAttributesRecurring(void)::appleAlarm_AlarmAttribute_AlarmAttributesRecurring;
}

void sub_1CA3555B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleAlarm_AlarmAttribute_AlarmAttributesOn(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleAlarm_AlarmAttribute_AlarmAttributesOn(void)::appleAlarm_AlarmAttribute_AlarmAttributesOn;
}

void sub_1CA35576C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleAlarm_AlarmAttribute_AlarmAttributesOff(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleAlarm_AlarmAttribute_AlarmAttributesOff(void)::appleAlarm_AlarmAttribute_AlarmAttributesOff;
}

void sub_1CA355928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingAgeRatingSeniorCitizen(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingAgeRatingSeniorCitizen(void)::appleApp_AppListingAttribute_AppListingAgeRatingSeniorCitizen;
}

void sub_1CA355AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingAgeRatingTeenStudent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingAgeRatingTeenStudent(void)::appleApp_AppListingAttribute_AppListingAgeRatingTeenStudent;
}

void sub_1CA355CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_summarise(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_summarise(void)::Reference_summarise;
}

void sub_1CA355E44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

void siri::ontology::OntologyVerbName::OntologyVerbName(uint64_t a1, int a2, const void **a3, uint64_t *a4, uint64_t *a5)
{
  v21[2] = *MEMORY[0x1E4F143B8];
  uint64_t v8 = *a4;
  v21[0] = a4[1];
  *(void *)((char *)v21 + 7) = *(uint64_t *)((char *)a4 + 15);
  char v9 = *((unsigned char *)a4 + 23);
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  *(void *)(a1 + 8) = v8;
  v10 = (const std::string::value_type *)(a1 + 8);
  *(void *)(a1 + 23) = *(void *)((char *)v21 + 7);
  *(void *)(a1 + 16) = v21[0];
  *(unsigned char *)(a1 + 31) = v9;
  *(_DWORD *)(a1 + 32) = 7;
  *(_DWORD *)(a1 + 36) = a2;
  *(void *)a1 = &unk_1F246D200;
  if (*((char *)a3 + 23) >= 0) {
    size_t v11 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v11 = (size_t)a3[1];
  }
  v12 = &v20;
  std::string::basic_string[abi:ne180100]((uint64_t)&v20, v11 + 1);
  if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    v12 = (std::string *)v20.__r_.__value_.__r.__words[0];
  }
  if (v11)
  {
    if (*((char *)a3 + 23) >= 0) {
      v13 = a3;
    }
    else {
      v13 = *a3;
    }
    memmove(v12, v13, v11);
  }
  *(_WORD *)((char *)&v12->__r_.__value_.__l.__data_ + v11) = 95;
  int v14 = *(char *)(a1 + 31);
  if (v14 >= 0) {
    v15 = v10;
  }
  else {
    v15 = *(const std::string::value_type **)(a1 + 8);
  }
  if (v14 >= 0) {
    std::string::size_type v16 = *(unsigned __int8 *)(a1 + 31);
  }
  else {
    std::string::size_type v16 = *(void *)(a1 + 16);
  }
  v17 = std::string::append(&v20, v15, v16);
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  *(void *)(a1 + 56) = *((void *)&v17->__r_.__value_.__l + 2);
  *(_OWORD *)(a1 + 40) = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  std::__hash_table<std::__hash_value_type<int,int>,std::__unordered_map_hasher<int,std::__hash_value_type<int,int>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,int>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,int>>>::__hash_table((uint64_t)v19, a5);
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  operator new[]();
}

void sub_1CA35615C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  *(void *)uint64_t v20 = v21;
  if (*(char *)(v20 + 31) < 0) {
    operator delete(*v22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::ontology::oname::graph::ontology_init::Target_create(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Target_create(void)::Target_create;
}

void sub_1CA356314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_like(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_like(void)::Reference_like;
}

void sub_1CA3564B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_delete(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_delete(void)::Reference_delete;
}

void sub_1CA35664C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_play(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_play(void)::Reference_play;
}

void sub_1CA3567E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_checkExistence(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_checkExistence(void)::Reference_checkExistence;
}

void sub_1CA356984(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_unlike(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_unlike(void)::Reference_unlike;
}

void sub_1CA356B20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferencePhotoCollection_removeFromAlbum(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferencePhotoCollection_removeFromAlbum(void)::ReferencePhotoCollection_removeFromAlbum;
}

void sub_1CA356CBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferencePhotoTag_applyTag(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferencePhotoTag_applyTag(void)::ReferencePhotoTag_applyTag;
}

void sub_1CA356E58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferencePhotoCollection_addToAlbum(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferencePhotoCollection_addToAlbum(void)::ReferencePhotoCollection_addToAlbum;
}

void sub_1CA356FF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferencePhotoTag_removeTag(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferencePhotoTag_removeTag(void)::ReferencePhotoTag_removeTag;
}

void sub_1CA357190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferencePhotoMemoryFilter_applyFilter(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferencePhotoMemoryFilter_applyFilter(void)::ReferencePhotoMemoryFilter_applyFilter;
}

void sub_1CA35732C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferencePhotoMemoryFilter_removeFilter(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferencePhotoMemoryFilter_removeFilter(void)::ReferencePhotoMemoryFilter_removeFilter;
}

void sub_1CA3574C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::NoVerb_noVerb(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::NoVerb_noVerb(void)::NoVerb_noVerb;
}

void sub_1CA357664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_tell(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_tell(void)::Reference_tell;
}

void sub_1CA357800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_hear(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_hear(void)::Reference_hear;
}

void sub_1CA35799C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_repeat(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_repeat(void)::Reference_repeat;
}

void sub_1CA357B38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_discoverCapabilities(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_discoverCapabilities(void)::Reference_discoverCapabilities;
}

void sub_1CA357CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_cancel(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_cancel(void)::Reference_cancel;
}

void sub_1CA357E70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_pause(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_pause(void)::ReferenceControl_pause;
}

void sub_1CA358010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_update(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_update(void)::ReferenceTarget_update;
}

void sub_1CA3581BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_resume(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_resume(void)::ReferenceControl_resume;
}

void sub_1CA35835C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_stop(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_stop(void)::ReferenceControl_stop;
}

void sub_1CA3584FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_getLocation(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_getLocation(void)::Reference_getLocation;
}

void sub_1CA358698(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_ping(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_ping(void)::Reference_ping;
}

void sub_1CA358834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceSelect_request(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceSelect_request(void)::ReferenceSelect_request;
}

void sub_1CA3589E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_find(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_find(void)::Reference_find;
}

void sub_1CA358B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_restart(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_restart(void)::Reference_restart;
}

void sub_1CA358D18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_reset(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_reset(void)::Reference_reset;
}

void sub_1CA358EB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_softwareUpdate(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_softwareUpdate(void)::Reference_softwareUpdate;
}

void sub_1CA359050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_reping(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_reping(void)::Reference_reping;
}

void sub_1CA3591EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_stopPing(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_stopPing(void)::Reference_stopPing;
}

void sub_1CA359388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceGeographicArea_checkLocation(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceGeographicArea_checkLocation(void)::ReferenceGeographicArea_checkLocation;
}

void sub_1CA359524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_undo(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_undo(void)::Reference_undo;
}

void sub_1CA3596C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_redo(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_redo(void)::Reference_redo;
}

void sub_1CA35985C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_runCommand(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_runCommand(void)::Reference_runCommand;
}

void sub_1CA3599F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::RecipientsEventTrigger_disableNotifications(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::RecipientsEventTrigger_disableNotifications(void)::RecipientsEventTrigger_disableNotifications;
}

void sub_1CA359B94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::RecipientsEventTrigger_enableNotifications(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::RecipientsEventTrigger_enableNotifications(void)::RecipientsEventTrigger_enableNotifications;
}

void sub_1CA359D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::RecipientsHiddenPeople_unhide(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::RecipientsHiddenPeople_unhide(void)::RecipientsHiddenPeople_unhide;
}

void sub_1CA359ECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::RecipientsHiddenPeople_hide(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::RecipientsHiddenPeople_hide(void)::RecipientsHiddenPeople_hide;
}

void sub_1CA35A068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_goBack(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_goBack(void)::Reference_goBack;
}

void sub_1CA35A204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_goHome(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_goHome(void)::Reference_goHome;
}

void sub_1CA35A3A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_read(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_read(void)::Reference_read;
}

void sub_1CA35A53C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTargetSelect_convert(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTargetSelect_convert(void)::ReferenceTargetSelect_convert;
}

void sub_1CA35A6E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTrigger_snooze(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTrigger_snooze(void)::ReferenceTrigger_snooze;
}

void sub_1CA35A894(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_state(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_state(void)::Reference_state;
}

void sub_1CA35AA30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_enable(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_enable(void)::Reference_enable;
}

void sub_1CA35ABCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_disable(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_disable(void)::Reference_disable;
}

void sub_1CA35AD68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_open(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_open(void)::Reference_open;
}

void sub_1CA35AF04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferencePhotoCollectionFilter_applyFilter(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferencePhotoCollectionFilter_applyFilter(void)::ReferencePhotoCollectionFilter_applyFilter;
}

void sub_1CA35B0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferencePhotoCollectionFilter_removeFilter(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferencePhotoCollectionFilter_removeFilter(void)::ReferencePhotoCollectionFilter_removeFilter;
}

void sub_1CA35B23C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_enableSetting(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_enableSetting(void)::ReferenceControl_enableSetting;
}

void sub_1CA35B3DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_disableSetting(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_disableSetting(void)::ReferenceControl_disableSetting;
}

void sub_1CA35B57C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_snooze(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_snooze(void)::ReferenceTarget_snooze;
}

void sub_1CA35B728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_hide(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_hide(void)::ReferenceControl_hide;
}

void sub_1CA35B8C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_unhide(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_unhide(void)::ReferenceControl_unhide;
}

void sub_1CA35BA68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_show(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_show(void)::Reference_show;
}

void sub_1CA35BC04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_skipBackward(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_skipBackward(void)::ReferenceControl_skipBackward;
}

void sub_1CA35BDA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_skipForward(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_skipForward(void)::ReferenceControl_skipForward;
}

void sub_1CA35BF44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTrigger_set(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTrigger_set(void)::ReferenceTrigger_set;
}

void sub_1CA35C0F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_play(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_play(void)::ReferenceControl_play;
}

void sub_1CA35C290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_scan(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_scan(void)::ReferenceControl_scan;
}

void sub_1CA35C430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_enable(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_enable(void)::ReferenceControl_enable;
}

void sub_1CA35C5D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_disable(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_disable(void)::ReferenceControl_disable;
}

void sub_1CA35C770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_capture(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_capture(void)::Reference_capture;
}

void sub_1CA35C90C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_stopCapture(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_stopCapture(void)::Reference_stopCapture;
}

void sub_1CA35CAA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_startCapture(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_startCapture(void)::Reference_startCapture;
}

void sub_1CA35CC44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_stop(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_stop(void)::Reference_stop;
}

void sub_1CA35CDE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_continue(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_continue(void)::Reference_continue;
}

void sub_1CA35CF7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_skip(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_skip(void)::Reference_skip;
}

void sub_1CA35D118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_previous(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_previous(void)::Reference_previous;
}

void sub_1CA35D2B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Target_call(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Target_call(void)::Target_call;
}

void sub_1CA35D450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_pause(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_pause(void)::Reference_pause;
}

void sub_1CA35D5EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_resume(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_resume(void)::Reference_resume;
}

void sub_1CA35D788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_repeat(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_repeat(void)::ReferenceControl_repeat;
}

void sub_1CA35D928(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_start(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_start(void)::ReferenceControl_start;
}

void sub_1CA35DAC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_seekTo(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_seekTo(void)::ReferenceControl_seekTo;
}

void sub_1CA35DC68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_learnNameCorrection(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_learnNameCorrection(void)::ReferenceTarget_learnNameCorrection;
}

void sub_1CA35DE14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_forgetNameCorrection(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_forgetNameCorrection(void)::Reference_forgetNameCorrection;
}

void sub_1CA35DFB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceNumberTrigger_decreaseBy(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceNumberTrigger_decreaseBy(void)::ReferenceNumberTrigger_decreaseBy;
}

void sub_1CA35E150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceNumberTrigger_increaseBy(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceNumberTrigger_increaseBy(void)::ReferenceNumberTrigger_increaseBy;
}

void sub_1CA35E2F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceDurationTrigger_setDuration(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceDurationTrigger_setDuration(void)::ReferenceDurationTrigger_setDuration;
}

void sub_1CA35E490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTrigger_toggle(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTrigger_toggle(void)::ReferenceTrigger_toggle;
}

void sub_1CA35E63C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTrigger_enable(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTrigger_enable(void)::ReferenceTrigger_enable;
}

void sub_1CA35E7E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTrigger_disable(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTrigger_disable(void)::ReferenceTrigger_disable;
}

void sub_1CA35E994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceNumberTrigger_setNumber(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceNumberTrigger_setNumber(void)::ReferenceNumberTrigger_setNumber;
}

void sub_1CA35EB34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceDateTimeRangeTrigger_setDateTimeRange(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceDateTimeRangeTrigger_setDateTimeRange(void)::ReferenceDateTimeRangeTrigger_setDateTimeRange;
}

void sub_1CA35ECD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceMeasurementTrigger_increaseByMeasurement(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceMeasurementTrigger_increaseByMeasurement(void)::ReferenceMeasurementTrigger_increaseByMeasurement;
}

void sub_1CA35EE74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceMeasurementTrigger_decreaseByMeasurement(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceMeasurementTrigger_decreaseByMeasurement(void)::ReferenceMeasurementTrigger_decreaseByMeasurement;
}

void sub_1CA35F014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceMeasurementTrigger_setMeasurement(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceMeasurementTrigger_setMeasurement(void)::ReferenceMeasurementTrigger_setMeasurement;
}

void sub_1CA35F1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceStringTrigger_setLabel(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceStringTrigger_setLabel(void)::ReferenceStringTrigger_setLabel;
}

void sub_1CA35F360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceProfile_setProfile(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceProfile_setProfile(void)::ReferenceProfile_setProfile;
}

void sub_1CA35F4FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceVideoFilter_removeFilter(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceVideoFilter_removeFilter(void)::ReferenceVideoFilter_removeFilter;
}

void sub_1CA35F698(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceVideoFilter_applyFilter(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceVideoFilter_applyFilter(void)::ReferenceVideoFilter_applyFilter;
}

void sub_1CA35F834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_answer(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_answer(void)::ReferenceTarget_answer;
}

void sub_1CA35F9E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_callback(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_callback(void)::ReferenceTarget_callback;
}

void sub_1CA35FB8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_hangup(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_hangup(void)::Reference_hangup;
}

void sub_1CA35FD28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_redial(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_redial(void)::ReferenceTarget_redial;
}

void sub_1CA35FED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Target_videocall(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Target_videocall(void)::Target_videocall;
}

void sub_1CA360070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_join(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_join(void)::ReferenceTarget_join;
}

void sub_1CA36021C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Target_action(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Target_action(void)::Target_action;
}

void sub_1CA3603B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_close(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_close(void)::Reference_close;
}

void sub_1CA360554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_cc(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_cc(void)::ReferenceTarget_cc;
}

void sub_1CA360700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_forward(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_forward(void)::ReferenceTarget_forward;
}

void sub_1CA3608AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_reply(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_reply(void)::ReferenceTarget_reply;
}

void sub_1CA360A58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_save(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_save(void)::ReferenceTarget_save;
}

void sub_1CA360C04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Target_send(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Target_send(void)::Target_send;
}

void sub_1CA360DA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_scan(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_scan(void)::Reference_scan;
}

void sub_1CA360F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_checkLike(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_checkLike(void)::Reference_checkLike;
}

void sub_1CA3610D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_checkUnlike(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_checkUnlike(void)::Reference_checkUnlike;
}

void sub_1CA361274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceSelect_guess(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceSelect_guess(void)::ReferenceSelect_guess;
}

void sub_1CA361420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_perform(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_perform(void)::Reference_perform;
}

void sub_1CA3615BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::StockSummarise_summarise(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::StockSummarise_summarise(void)::StockSummarise_summarise;
}

void sub_1CA36175C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_justify(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_justify(void)::Reference_justify;
}

void sub_1CA3618F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Target_ask(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Target_ask(void)::Target_ask;
}

void sub_1CA361A94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_deny(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_deny(void)::Reference_deny;
}

void sub_1CA361C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Target_pay(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Target_pay(void)::Target_pay;
}

void sub_1CA361DCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Target_requestMoney(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Target_requestMoney(void)::Target_requestMoney;
}

void sub_1CA361F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferencePaymentSortKey_summariseHighest(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferencePaymentSortKey_summariseHighest(void)::ReferencePaymentSortKey_summariseHighest;
}

void sub_1CA362104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferencePaymentSortKey_summariseLowest(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferencePaymentSortKey_summariseLowest(void)::ReferencePaymentSortKey_summariseLowest;
}

void sub_1CA3622A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_reset(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_reset(void)::ReferenceTarget_reset;
}

void sub_1CA36244C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Target_start(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Target_start(void)::Target_start;
}

void sub_1CA3625E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_deactivate(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_deactivate(void)::Reference_deactivate;
}

void sub_1CA362784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceVoiceCommandPayload_execute(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceVoiceCommandPayload_execute(void)::ReferenceVoiceCommandPayload_execute;
}

void sub_1CA362920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_run(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_run(void)::Reference_run;
}

void sub_1CA362ABC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_getPerson(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_getPerson(void)::Reference_getPerson;
}

void sub_1CA362C58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_join(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_join(void)::ReferenceControl_join;
}

void sub_1CA362DF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_snooze(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_snooze(void)::Reference_snooze;
}

void sub_1CA362F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceSlideshowFilter_removeFilter(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceSlideshowFilter_removeFilter(void)::ReferenceSlideshowFilter_removeFilter;
}

void sub_1CA363130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceSlideshowFilter_applyFilter(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceSlideshowFilter_applyFilter(void)::ReferenceSlideshowFilter_applyFilter;
}

void sub_1CA3632CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Target_share(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Target_share(void)::Target_share;
}

void sub_1CA363468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_check(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_check(void)::ReferenceTarget_check;
}

void sub_1CA363614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_unshare(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_unshare(void)::Reference_unshare;
}

void sub_1CA3637B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_unsend(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_unsend(void)::Reference_unsend;
}

void sub_1CA36394C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceReactionType_react(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceReactionType_react(void)::ReferenceReactionType_react;
}

void sub_1CA363AE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceReactionType_unreact(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceReactionType_unreact(void)::ReferenceReactionType_unreact;
}

void sub_1CA363C84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceMeasurementUnit_requestLog(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceMeasurementUnit_requestLog(void)::ReferenceMeasurementUnit_requestLog;
}

void sub_1CA363E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_stopTranslation(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_stopTranslation(void)::ReferenceControl_stopTranslation;
}

void sub_1CA363FC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Target_translate(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Target_translate(void)::Target_translate;
}

void sub_1CA36415C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_startTranslation(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_startTranslation(void)::ReferenceControl_startTranslation;
}

void sub_1CA3642FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferencePhotoFilter_applyFilter(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferencePhotoFilter_applyFilter(void)::ReferencePhotoFilter_applyFilter;
}

void sub_1CA364498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferencePhotoFilter_removeFilter(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferencePhotoFilter_removeFilter(void)::ReferencePhotoFilter_removeFilter;
}

void sub_1CA364634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_quit(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_quit(void)::Reference_quit;
}

void sub_1CA3647D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_pronounceName(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_pronounceName(void)::Reference_pronounceName;
}

void sub_1CA36496C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_setIdentity(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_setIdentity(void)::ReferenceTarget_setIdentity;
}

void sub_1CA364B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_checkIdentity(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_checkIdentity(void)::Reference_checkIdentity;
}

void sub_1CA364CB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Target_submitApplication(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Target_submitApplication(void)::Target_submitApplication;
}

void sub_1CA364E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_park(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_park(void)::Reference_park;
}

void sub_1CA364FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_like(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_like(void)::ReferenceControl_like;
}

void sub_1CA36518C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_unlike(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_unlike(void)::ReferenceControl_unlike;
}

void sub_1CA36532C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_save(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_save(void)::ReferenceControl_save;
}

void sub_1CA3654CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_switch(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_switch(void)::ReferenceTarget_switch;
}

void sub_1CA365678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceSelect_unrequest(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceSelect_unrequest(void)::ReferenceSelect_unrequest;
}

void sub_1CA365824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_copy(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_copy(void)::Reference_copy;
}

void sub_1CA3659C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_cut(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_cut(void)::Reference_cut;
}

void sub_1CA365B5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceTarget_paste(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceTarget_paste(void)::ReferenceTarget_paste;
}

void sub_1CA365D08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_enterMarkup(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_enterMarkup(void)::Reference_enterMarkup;
}

void sub_1CA365EA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_exitMarkup(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_exitMarkup(void)::Reference_exitMarkup;
}

void sub_1CA366040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_skipForward(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_skipForward(void)::Reference_skipForward;
}

void sub_1CA3661DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_skipBackward(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_skipBackward(void)::Reference_skipBackward;
}

void sub_1CA366378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_preview(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_preview(void)::Reference_preview;
}

void sub_1CA366514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Adjustment_adjust(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Adjustment_adjust(void)::Adjustment_adjust;
}

void sub_1CA3666B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_lap(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_lap(void)::Reference_lap;
}

void sub_1CA366850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_start(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_start(void)::Reference_start;
}

void sub_1CA3669EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_restart(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_restart(void)::ReferenceControl_restart;
}

void sub_1CA366B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_shuffle(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_shuffle(void)::ReferenceControl_shuffle;
}

void sub_1CA366D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControlDuration_seekForward(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControlDuration_seekForward(void)::ReferenceControlDuration_seekForward;
}

void sub_1CA366ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_repeatAudio(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_repeatAudio(void)::ReferenceControl_repeatAudio;
}

void sub_1CA367078(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControlDuration_seekBackward(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControlDuration_seekBackward(void)::ReferenceControlDuration_seekBackward;
}

void sub_1CA367224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControlOffsetDuration_seekTo(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControlOffsetDuration_seekTo(void)::ReferenceControlOffsetDuration_seekTo;
}

void sub_1CA3673D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_transfer(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_transfer(void)::Reference_transfer;
}

void sub_1CA36756C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_summarise(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_summarise(void)::ReferenceControl_summarise;
}

void sub_1CA36770C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_checkExistence(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_checkExistence(void)::ReferenceControl_checkExistence;
}

void sub_1CA3678AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_subscribe(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_subscribe(void)::Reference_subscribe;
}

void sub_1CA367A48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_follow(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_follow(void)::Reference_follow;
}

void sub_1CA367BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_read(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_read(void)::ReferenceControl_read;
}

void sub_1CA367D84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_updateApp(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_updateApp(void)::Reference_updateApp;
}

void sub_1CA367F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_uninstall(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_uninstall(void)::Reference_uninstall;
}

void sub_1CA3680BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_install(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_install(void)::Reference_install;
}

void sub_1CA368258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_offload(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_offload(void)::Reference_offload;
}

void sub_1CA3683F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_authorise(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_authorise(void)::ReferenceControl_authorise;
}

void sub_1CA368594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::ReferenceControl_deauthorise(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::ReferenceControl_deauthorise(void)::ReferenceControl_deauthorise;
}

void sub_1CA368734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_save(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_save(void)::Reference_save;
}

void sub_1CA3688D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_catchMeUp(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_catchMeUp(void)::Reference_catchMeUp;
}

void sub_1CA368A6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::PlaceholderVerb_placeholderVerb(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::PlaceholderVerb_placeholderVerb(void)::PlaceholderVerb_placeholderVerb;
}

void sub_1CA368C08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a10);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  MEMORY[0x1CB796510](v26, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Request_request(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Request_request(void)::Request_request;
}

void sub_1CA368D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Summarise_summarise(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Summarise_summarise(void)::Summarise_summarise;
}

void sub_1CA368EC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Control_open(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Control_open(void)::Control_open;
}

void sub_1CA369024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Delete_delete(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Delete_delete(void)::Delete_delete;
}

void sub_1CA369180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Update_update(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Update_update(void)::Update_update;
}

void sub_1CA3692DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Summarise_checkExistence(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Summarise_checkExistence(void)::Summarise_checkExistence;
}

void sub_1CA369438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Convert_convert(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Convert_convert(void)::Convert_convert;
}

void sub_1CA369594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Check_check(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Check_check(void)::Check_check;
}

void sub_1CA3696F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Create_create(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Create_create(void)::Create_create;
}

void sub_1CA36984C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Summarise_read(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Summarise_read(void)::Summarise_read;
}

void sub_1CA3699A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Control_pause(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Control_pause(void)::Control_pause;
}

void sub_1CA369B04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Control_restart(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Control_restart(void)::Control_restart;
}

void sub_1CA369C60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Control_resume(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Control_resume(void)::Control_resume;
}

void sub_1CA369DBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Control_start(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Control_start(void)::Control_start;
}

void sub_1CA369F18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Control_stop(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Control_stop(void)::Control_stop;
}

void sub_1CA36A074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Control_buy(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Control_buy(void)::Control_buy;
}

void sub_1CA36A1D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Update_reset(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Update_reset(void)::Update_reset;
}

void sub_1CA36A32C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Summarise_summarize(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Summarise_summarize(void)::Summarise_summarize;
}

void sub_1CA36A488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Control_close(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Control_close(void)::Control_close;
}

void sub_1CA36A5E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Control_accept(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Control_accept(void)::Control_accept;
}

void sub_1CA36A740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Control_reject(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Control_reject(void)::Control_reject;
}

void sub_1CA36A89C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Control_install(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Control_install(void)::Control_install;
}

void sub_1CA36A9F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Control_uninstall(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Control_uninstall(void)::Control_uninstall;
}

void sub_1CA36AB54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Control_skipTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Control_skipTime(void)::Control_skipTime;
}

void sub_1CA36ACB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Control_skipItem(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Control_skipItem(void)::Control_skipItem;
}

void sub_1CA36AE0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Create_translate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Create_translate(void)::Create_translate;
}

void sub_1CA36AF68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Update_forward(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Update_forward(void)::Update_forward;
}

void sub_1CA36B0C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Update_reply(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Update_reply(void)::Update_reply;
}

void sub_1CA36B220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Entity_restart(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Entity_restart(void)::Entity_restart;
}

void sub_1CA36B37C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Entity_start(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Entity_start(void)::Entity_start;
}

void sub_1CA36B4D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_update(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_update(void)::Reference_update;
}

void sub_1CA36B634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Reference_create(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Reference_create(void)::Reference_create;
}

void sub_1CA36B790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Entity_noVerb(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Entity_noVerb(void)::Entity_noVerb;
}

void sub_1CA36B8EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  MEMORY[0x1CB796510](v20, 0x10B3C40A3033806);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_reference(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_reference(void)::Argument_reference;
}

void sub_1CA36BA30(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_slideshowFilters(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_slideshowFilters(void)::Argument_slideshowFilters;
}

void sub_1CA36BB3C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_target(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_target(void)::Argument_target;
}

void sub_1CA36BC48(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_userEntities(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_userEntities(void)::Argument_userEntities;
}

void sub_1CA36BD54(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_trigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_trigger(void)::Argument_trigger;
}

void sub_1CA36BE60(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dateTimeRange(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dateTimeRange(void)::Argument_dateTimeRange;
}

void sub_1CA36BF6C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_requestedAttributes(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_requestedAttributes(void)::Argument_requestedAttributes;
}

void sub_1CA36C078(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dateTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dateTime(void)::Argument_dateTime;
}

void sub_1CA36C184(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_stockChangeState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_stockChangeState(void)::Argument_stockChangeState;
}

void sub_1CA36C290(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_select(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_select(void)::Argument_select;
}

void sub_1CA36C39C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_settings(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_settings(void)::Argument_settings;
}

void sub_1CA36C4A8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_paymentSortKey(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_paymentSortKey(void)::Argument_paymentSortKey;
}

void sub_1CA36C5B4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_offsetDuration(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_offsetDuration(void)::Argument_offsetDuration;
}

void sub_1CA36C6C0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_photoFilters(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_photoFilters(void)::Argument_photoFilters;
}

void sub_1CA36C7CC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_number(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_number(void)::Argument_number;
}

void sub_1CA36C8D8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_photoCollections(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_photoCollections(void)::Argument_photoCollections;
}

void sub_1CA36C9E4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_hiddenPeople(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_hiddenPeople(void)::Argument_hiddenPeople;
}

void sub_1CA36CAF0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_recipients(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_recipients(void)::Argument_recipients;
}

void sub_1CA36CBFC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_string(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_string(void)::Argument_string;
}

void sub_1CA36CD08(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_duration(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_duration(void)::Argument_duration;
}

void sub_1CA36CE14(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_photoCollectionFilters(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_photoCollectionFilters(void)::Argument_photoCollectionFilters;
}

void sub_1CA36CF20(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_people(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_people(void)::Argument_people;
}

void sub_1CA36D02C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_amount(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_amount(void)::Argument_amount;
}

void sub_1CA36D138(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_adjustmentType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_adjustmentType(void)::Argument_adjustmentType;
}

void sub_1CA36D244(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_adjustmentDirection(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_adjustmentDirection(void)::Argument_adjustmentDirection;
}

void sub_1CA36D350(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_videoFilters(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_videoFilters(void)::Argument_videoFilters;
}

void sub_1CA36D45C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_photoMemoryFilters(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_photoMemoryFilters(void)::Argument_photoMemoryFilters;
}

void sub_1CA36D568(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_measurement(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_measurement(void)::Argument_measurement;
}

void sub_1CA36D674(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_profile(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_profile(void)::Argument_profile;
}

void sub_1CA36D780(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_geographicArea(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_geographicArea(void)::Argument_geographicArea;
}

void sub_1CA36D88C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_eventTrigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_eventTrigger(void)::Argument_eventTrigger;
}

void sub_1CA36D998(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_photoTags(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_photoTags(void)::Argument_photoTags;
}

void sub_1CA36DAA4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_reactionType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_reactionType(void)::Argument_reactionType;
}

void sub_1CA36DBB0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_payload(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_payload(void)::Argument_payload;
}

void sub_1CA36DCBC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_measurementUnit(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_measurementUnit(void)::Argument_measurementUnit;
}

void sub_1CA36DDC8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedDateTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedDateTime(void)::Argument_associatedDateTime;
}

void sub_1CA36DED4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_author(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_author(void)::Argument_author;
}

void sub_1CA36DFE0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_pointOfInterest(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_pointOfInterest(void)::Argument_pointOfInterest;
}

void sub_1CA36E0EC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_tags(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_tags(void)::Argument_tags;
}

void sub_1CA36E1F8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_topics(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_topics(void)::Argument_topics;
}

void sub_1CA36E304(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_attributes(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_attributes(void)::Argument_attributes;
}

void sub_1CA36E410(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_contents(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_contents(void)::Argument_contents;
}

void sub_1CA36E51C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_filters(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_filters(void)::Argument_filters;
}

void sub_1CA36E628(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_name(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_name(void)::Argument_name;
}

void sub_1CA36E734(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedMediaItem(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedMediaItem(void)::Argument_associatedMediaItem;
}

void sub_1CA36E840(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_episodeNumber(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_episodeNumber(void)::Argument_episodeNumber;
}

void sub_1CA36E94C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_equipment(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_equipment(void)::Argument_equipment;
}

void sub_1CA36EA58(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_instructor(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_instructor(void)::Argument_instructor;
}

void sub_1CA36EB64(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_audience(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_audience(void)::Argument_audience;
}

void sub_1CA36EC70(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_audienceAge(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_audienceAge(void)::Argument_audienceAge;
}

void sub_1CA36ED7C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_type(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_type(void)::Argument_type;
}

void sub_1CA36EE88(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_goal(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_goal(void)::Argument_goal;
}

void sub_1CA36EF94(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_healthLog(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_healthLog(void)::Argument_healthLog;
}

void sub_1CA36F0A0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_workoutClass(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_workoutClass(void)::Argument_workoutClass;
}

void sub_1CA36F1AC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_ageRating(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_ageRating(void)::Argument_ageRating;
}

void sub_1CA36F2B8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_app(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_app(void)::Argument_app;
}

void sub_1CA36F3C4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_genres(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_genres(void)::Argument_genres;
}

void sub_1CA36F4D0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_keywords(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_keywords(void)::Argument_keywords;
}

void sub_1CA36F5DC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_price(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_price(void)::Argument_price;
}

void sub_1CA36F6E8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedPerson(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedPerson(void)::Argument_associatedPerson;
}

void sub_1CA36F7F4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedUserEntities(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedUserEntities(void)::Argument_associatedUserEntities;
}

void sub_1CA36F900(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_names(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_names(void)::Argument_names;
}

void sub_1CA36FA0C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedAppEntity(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedAppEntity(void)::Argument_associatedAppEntity;
}

void sub_1CA36FB18(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_unit(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_unit(void)::Argument_unit;
}

void sub_1CA36FC24(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_value(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_value(void)::Argument_value;
}

void sub_1CA36FD30(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_device(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_device(void)::Argument_device;
}

void sub_1CA36FE3C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_userEntity(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_userEntity(void)::Argument_userEntity;
}

void sub_1CA36FF48(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_hour(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_hour(void)::Argument_hour;
}

void sub_1CA370054(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_minute(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_minute(void)::Argument_minute;
}

void sub_1CA370160(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_occurringIn(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_occurringIn(void)::Argument_occurringIn;
}

void sub_1CA37026C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_second(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_second(void)::Argument_second;
}

void sub_1CA370378(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_timeZone(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_timeZone(void)::Argument_timeZone;
}

void sub_1CA370484(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_meridiem(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_meridiem(void)::Argument_meridiem;
}

void sub_1CA370590(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedGeographicArea(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedGeographicArea(void)::Argument_associatedGeographicArea;
}

void sub_1CA37069C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_specifyingContactAddress(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_specifyingContactAddress(void)::Argument_specifyingContactAddress;
}

void sub_1CA3707A8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_containedIn(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_containedIn(void)::Argument_containedIn;
}

void sub_1CA3708B4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_label(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_label(void)::Argument_label;
}

void sub_1CA3709C0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_components(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_components(void)::Argument_components;
}

void sub_1CA370ACC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_sign(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_sign(void)::Argument_sign;
}

void sub_1CA370BD8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_at(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_at(void)::Argument_at;
}

void sub_1CA370CE4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_end(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_end(void)::Argument_end;
}

void sub_1CA370DF0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_qualifier(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_qualifier(void)::Argument_qualifier;
}

void sub_1CA370EFC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_start(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_start(void)::Argument_start;
}

void sub_1CA371008(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_recurrencePattern(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_recurrencePattern(void)::Argument_recurrencePattern;
}

void sub_1CA371114(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_completionStatus(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_completionStatus(void)::Argument_completionStatus;
}

void sub_1CA371220(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_medicationSchedule(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_medicationSchedule(void)::Argument_medicationSchedule;
}

void sub_1CA37132C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_person(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_person(void)::Argument_person;
}

void sub_1CA371438(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_currency(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_currency(void)::Argument_currency;
}

void sub_1CA371544(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_date(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_date(void)::Argument_date;
}

void sub_1CA371650(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_time(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_time(void)::Argument_time;
}

void sub_1CA37175C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_direction(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_direction(void)::Argument_direction;
}

void sub_1CA371868(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_offsetReference(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_offsetReference(void)::Argument_offsetReference;
}

void sub_1CA371974(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_offsetValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_offsetValue(void)::Argument_offsetValue;
}

void sub_1CA371A80(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_geographicAreaTrigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_geographicAreaTrigger(void)::Argument_geographicAreaTrigger;
}

void sub_1CA371B8C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_personTrigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_personTrigger(void)::Argument_personTrigger;
}

void sub_1CA371C98(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_recurringDateTimeTrigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_recurringDateTimeTrigger(void)::Argument_recurringDateTimeTrigger;
}

void sub_1CA371DA4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_pointOfInterestTrigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_pointOfInterestTrigger(void)::Argument_pointOfInterestTrigger;
}

void sub_1CA371EB0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dateTimeRangeTrigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dateTimeRangeTrigger(void)::Argument_dateTimeRangeTrigger;
}

void sub_1CA371FBC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dateTimeTrigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dateTimeTrigger(void)::Argument_dateTimeTrigger;
}

void sub_1CA3720C8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_settingTrigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_settingTrigger(void)::Argument_settingTrigger;
}

void sub_1CA3721D4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_userEntityTrigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_userEntityTrigger(void)::Argument_userEntityTrigger;
}

void sub_1CA3722E0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_contactAddressTrigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_contactAddressTrigger(void)::Argument_contactAddressTrigger;
}

void sub_1CA3723EC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_specifyingContactTrigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_specifyingContactTrigger(void)::Argument_specifyingContactTrigger;
}

void sub_1CA3724F8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_communicationTrigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_communicationTrigger(void)::Argument_communicationTrigger;
}

void sub_1CA372604(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_journeyTrigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_journeyTrigger(void)::Argument_journeyTrigger;
}

void sub_1CA372710(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_photos(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_photos(void)::Argument_photos;
}

void sub_1CA37281C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_assignee(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_assignee(void)::Argument_assignee;
}

void sub_1CA372928(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_attachments(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_attachments(void)::Argument_attachments;
}

void sub_1CA372A34(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_childReminders(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_childReminders(void)::Argument_childReminders;
}

void sub_1CA372B40(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_list(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_list(void)::Argument_list;
}

void sub_1CA372C4C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_stringContent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_stringContent(void)::Argument_stringContent;
}

void sub_1CA372D58(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_frequency(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_frequency(void)::Argument_frequency;
}

void sub_1CA372E64(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_frequencyName(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_frequencyName(void)::Argument_frequencyName;
}

void sub_1CA372F70(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_frequencyUnit(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_frequencyUnit(void)::Argument_frequencyUnit;
}

void sub_1CA37307C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_genre(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_genre(void)::Argument_genre;
}

void sub_1CA373188(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_radioBand(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_radioBand(void)::Argument_radioBand;
}

void sub_1CA373294(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_canonicalString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_canonicalString(void)::Argument_canonicalString;
}

void sub_1CA3733A0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_order(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_order(void)::Argument_order;
}

void sub_1CA3734AC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedSportsItems(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedSportsItems(void)::Argument_associatedSportsItems;
}

void sub_1CA3735B8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_surfaceForm(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_surfaceForm(void)::Argument_surfaceForm;
}

void sub_1CA3736C4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_mode(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_mode(void)::Argument_mode;
}

void sub_1CA3737D0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_message(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_message(void)::Argument_message;
}

void sub_1CA3738DC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_sender(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_sender(void)::Argument_sender;
}

void sub_1CA3739E8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_items(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_items(void)::Argument_items;
}

void sub_1CA373AF4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_denominatorValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_denominatorValue(void)::Argument_denominatorValue;
}

void sub_1CA373C00(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_numeratorValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_numeratorValue(void)::Argument_numeratorValue;
}

void sub_1CA373D0C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_wholeValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_wholeValue(void)::Argument_wholeValue;
}

void sub_1CA373E18(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_participants(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_participants(void)::Argument_participants;
}

void sub_1CA373F24(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedDateTimeRange(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedDateTimeRange(void)::Argument_associatedDateTimeRange;
}

void sub_1CA374030(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_address(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_address(void)::Argument_address;
}

void sub_1CA37413C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_categories(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_categories(void)::Argument_categories;
}

void sub_1CA374248(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_distance(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_distance(void)::Argument_distance;
}

void sub_1CA374354(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_count(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_count(void)::Argument_count;
}

void sub_1CA374460(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedRecipe(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedRecipe(void)::Argument_associatedRecipe;
}

void sub_1CA37456C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_description(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_description(void)::Argument_description;
}

void sub_1CA374678(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_ingredients(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_ingredients(void)::Argument_ingredients;
}

void sub_1CA374784(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_substitutions(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_substitutions(void)::Argument_substitutions;
}

void sub_1CA374890(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_timeRemaining(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_timeRemaining(void)::Argument_timeRemaining;
}

void sub_1CA37499C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_timeRequired(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_timeRequired(void)::Argument_timeRequired;
}

void sub_1CA374AA8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_integerValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_integerValue(void)::Argument_integerValue;
}

void sub_1CA374BB4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_secondaryUnit(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_secondaryUnit(void)::Argument_secondaryUnit;
}

void sub_1CA374CC0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_completed(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_completed(void)::Argument_completed;
}

void sub_1CA374DCC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_workout(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_workout(void)::Argument_workout;
}

void sub_1CA374ED8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_offsetDirection(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_offsetDirection(void)::Argument_offsetDirection;
}

void sub_1CA374FE4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_offsetToReference(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_offsetToReference(void)::Argument_offsetToReference;
}

void sub_1CA3750F0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_referenceListPosition(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_referenceListPosition(void)::Argument_referenceListPosition;
}

void sub_1CA3751FC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_folder(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_folder(void)::Argument_folder;
}

void sub_1CA375308(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_bearing(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_bearing(void)::Argument_bearing;
}

void sub_1CA375414(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_elevation(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_elevation(void)::Argument_elevation;
}

void sub_1CA375520(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_geoCoordinates(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_geoCoordinates(void)::Argument_geoCoordinates;
}

void sub_1CA37562C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_heading(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_heading(void)::Argument_heading;
}

void sub_1CA375738(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_familyName(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_familyName(void)::Argument_familyName;
}

void sub_1CA375844(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_givenName(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_givenName(void)::Argument_givenName;
}

void sub_1CA375950(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_maidenName(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_maidenName(void)::Argument_maidenName;
}

void sub_1CA375A5C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_middleName(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_middleName(void)::Argument_middleName;
}

void sub_1CA375B68(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_namePostfix(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_namePostfix(void)::Argument_namePostfix;
}

void sub_1CA375C74(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_namePrefix(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_namePrefix(void)::Argument_namePrefix;
}

void sub_1CA375D80(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_nickName(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_nickName(void)::Argument_nickName;
}

void sub_1CA375E8C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_mathExpression(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_mathExpression(void)::Argument_mathExpression;
}

void sub_1CA375F98(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_language(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_language(void)::Argument_language;
}

void sub_1CA3760A4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_locale(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_locale(void)::Argument_locale;
}

void sub_1CA3761B0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_romanisedString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_romanisedString(void)::Argument_romanisedString;
}

void sub_1CA3762BC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_stringValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_stringValue(void)::Argument_stringValue;
}

void sub_1CA3763C8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedSetting(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedSetting(void)::Argument_associatedSetting;
}

void sub_1CA3764D4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_referenceDateTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_referenceDateTime(void)::Argument_referenceDateTime;
}

void sub_1CA3765E0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_albums(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_albums(void)::Argument_albums;
}

void sub_1CA3766EC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_color(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_color(void)::Argument_color;
}

void sub_1CA3767F8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_size(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_size(void)::Argument_size;
}

void sub_1CA376904(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_politeness(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_politeness(void)::Argument_politeness;
}

void sub_1CA376A10(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dialog(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dialog(void)::Argument_dialog;
}

void sub_1CA376B1C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_nextTurns(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_nextTurns(void)::Argument_nextTurns;
}

void sub_1CA376C28(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_activationValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_activationValue(void)::Argument_activationValue;
}

void sub_1CA376D34(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dateTimeRangeValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dateTimeRangeValue(void)::Argument_dateTimeRangeValue;
}

void sub_1CA376E40(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_labeledValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_labeledValue(void)::Argument_labeledValue;
}

void sub_1CA376F4C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_measurementValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_measurementValue(void)::Argument_measurementValue;
}

void sub_1CA377058(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_numericValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_numericValue(void)::Argument_numericValue;
}

void sub_1CA377164(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_valueType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_valueType(void)::Argument_valueType;
}

void sub_1CA377270(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_bccRecipients(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_bccRecipients(void)::Argument_bccRecipients;
}

void sub_1CA37737C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_ccRecipients(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_ccRecipients(void)::Argument_ccRecipients;
}

void sub_1CA377488(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_emailFolder(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_emailFolder(void)::Argument_emailFolder;
}

void sub_1CA377594(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_emailLabels(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_emailLabels(void)::Argument_emailLabels;
}

void sub_1CA3776A0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_emailState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_emailState(void)::Argument_emailState;
}

void sub_1CA3777AC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_labels(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_labels(void)::Argument_labels;
}

void sub_1CA3778B8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_provider(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_provider(void)::Argument_provider;
}

void sub_1CA3779C4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_subject(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_subject(void)::Argument_subject;
}

void sub_1CA377AD0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_qrCodeType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_qrCodeType(void)::Argument_qrCodeType;
}

void sub_1CA377BDC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_situation(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_situation(void)::Argument_situation;
}

void sub_1CA377CE8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_collaborationMode(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_collaborationMode(void)::Argument_collaborationMode;
}

void sub_1CA377DF4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_query(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_query(void)::Argument_query;
}

void sub_1CA377F00(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_sharedApp(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_sharedApp(void)::Argument_sharedApp;
}

void sub_1CA37800C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_sharedAppEntity(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_sharedAppEntity(void)::Argument_sharedAppEntity;
}

void sub_1CA378118(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_category(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_category(void)::Argument_category;
}

void sub_1CA378224(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_instance(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_instance(void)::Argument_instance;
}

void sub_1CA378330(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_fromIngredient(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_fromIngredient(void)::Argument_fromIngredient;
}

void sub_1CA37843C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_toIngredient(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_toIngredient(void)::Argument_toIngredient;
}

void sub_1CA378548(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_reminders(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_reminders(void)::Argument_reminders;
}

void sub_1CA378654(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedNotification(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedNotification(void)::Argument_associatedNotification;
}

void sub_1CA378760(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_similarity(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_similarity(void)::Argument_similarity;
}

void sub_1CA37886C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_sortDirections(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_sortDirections(void)::Argument_sortDirections;
}

void sub_1CA378978(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_calendarEra(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_calendarEra(void)::Argument_calendarEra;
}

void sub_1CA378A84(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_calendarSystem(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_calendarSystem(void)::Argument_calendarSystem;
}

void sub_1CA378B90(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dateType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dateType(void)::Argument_dateType;
}

void sub_1CA378C9C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dayOfMonth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dayOfMonth(void)::Argument_dayOfMonth;
}

void sub_1CA378DA8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dayOfWeek(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dayOfWeek(void)::Argument_dayOfWeek;
}

void sub_1CA378EB4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_monthOfYear(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_monthOfYear(void)::Argument_monthOfYear;
}

void sub_1CA378FC0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_partOfRecurringDateTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_partOfRecurringDateTime(void)::Argument_partOfRecurringDateTime;
}

void sub_1CA3790CC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_weekOfYear(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_weekOfYear(void)::Argument_weekOfYear;
}

void sub_1CA3791D8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_year(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_year(void)::Argument_year;
}

void sub_1CA3792E4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_action(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_action(void)::Argument_action;
}

void sub_1CA3793F0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_stockType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_stockType(void)::Argument_stockType;
}

void sub_1CA3794FC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_ticker(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_ticker(void)::Argument_ticker;
}

void sub_1CA379608(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_deviceCategory(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_deviceCategory(void)::Argument_deviceCategory;
}

void sub_1CA379714(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_model(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_model(void)::Argument_model;
}

void sub_1CA379820(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_productCategories(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_productCategories(void)::Argument_productCategories;
}

void sub_1CA37992C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_properties(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_properties(void)::Argument_properties;
}

void sub_1CA379A38(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dosage(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dosage(void)::Argument_dosage;
}

void sub_1CA379B44(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_judgment(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_judgment(void)::Argument_judgment;
}

void sub_1CA379C50(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_topic(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_topic(void)::Argument_topic;
}

void sub_1CA379D5C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_arguments(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_arguments(void)::Argument_arguments;
}

void sub_1CA379E68(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_question(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_question(void)::Argument_question;
}

void sub_1CA379F74(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_phrase(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_phrase(void)::Argument_phrase;
}

void sub_1CA37A080(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_contiguousFromDateTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_contiguousFromDateTime(void)::Argument_contiguousFromDateTime;
}

void sub_1CA37A18C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_contiguousToDateTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_contiguousToDateTime(void)::Argument_contiguousToDateTime;
}

void sub_1CA37A298(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_recurrenceDateTimeRange(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_recurrenceDateTimeRange(void)::Argument_recurrenceDateTimeRange;
}

void sub_1CA37A3A4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_recurrenceDateTimes(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_recurrenceDateTimes(void)::Argument_recurrenceDateTimes;
}

void sub_1CA37A4B0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_recurrencePeriod(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_recurrencePeriod(void)::Argument_recurrencePeriod;
}

void sub_1CA37A5BC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_totalNumberOfOccurrences(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_totalNumberOfOccurrences(void)::Argument_totalNumberOfOccurrences;
}

void sub_1CA37A6C8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_content(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_content(void)::Argument_content;
}

void sub_1CA37A7D4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_amountDue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_amountDue(void)::Argument_amountDue;
}

void sub_1CA37A8E0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_billCategory(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_billCategory(void)::Argument_billCategory;
}

void sub_1CA37A9EC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dueDate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dueDate(void)::Argument_dueDate;
}

void sub_1CA37AAF8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_memo(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_memo(void)::Argument_memo;
}

void sub_1CA37AC04(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_payee(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_payee(void)::Argument_payee;
}

void sub_1CA37AD10(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_payer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_payer(void)::Argument_payer;
}

void sub_1CA37AE1C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_paymentType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_paymentType(void)::Argument_paymentType;
}

void sub_1CA37AF28(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_recipient(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_recipient(void)::Argument_recipient;
}

void sub_1CA37B034(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_spendingCategory(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_spendingCategory(void)::Argument_spendingCategory;
}

void sub_1CA37B140(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_transactionDateTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_transactionDateTime(void)::Argument_transactionDateTime;
}

void sub_1CA37B24C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_multiplier(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_multiplier(void)::Argument_multiplier;
}

void sub_1CA37B358(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_endTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_endTime(void)::Argument_endTime;
}

void sub_1CA37B464(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_totalDuration(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_totalDuration(void)::Argument_totalDuration;
}

void sub_1CA37B570(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dateTimeCreated(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dateTimeCreated(void)::Argument_dateTimeCreated;
}

void sub_1CA37B67C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dateTimeModified(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dateTimeModified(void)::Argument_dateTimeModified;
}

void sub_1CA37B788(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_itemType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_itemType(void)::Argument_itemType;
}

void sub_1CA37B894(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_notebookList(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_notebookList(void)::Argument_notebookList;
}

void sub_1CA37B9A0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_areaType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_areaType(void)::Argument_areaType;
}

void sub_1CA37BAAC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_containing(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_containing(void)::Argument_containing;
}

void sub_1CA37BBB8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_contains(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_contains(void)::Argument_contains;
}

void sub_1CA37BCC4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_allDay(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_allDay(void)::Argument_allDay;
}

void sub_1CA37BDD0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_location(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_location(void)::Argument_location;
}

void sub_1CA37BEDC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedCalendar(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedCalendar(void)::Argument_associatedCalendar;
}

void sub_1CA37BFE8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_attendees(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_attendees(void)::Argument_attendees;
}

void sub_1CA37C0F4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_note(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_note(void)::Argument_note;
}

void sub_1CA37C200(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_responseStatus(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_responseStatus(void)::Argument_responseStatus;
}

void sub_1CA37C30C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_virtualLocation(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_virtualLocation(void)::Argument_virtualLocation;
}

void sub_1CA37C418(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_active(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_active(void)::Argument_active;
}

void sub_1CA37C524(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_medications(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_medications(void)::Argument_medications;
}

void sub_1CA37C630(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_schedule(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_schedule(void)::Argument_schedule;
}

void sub_1CA37C73C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_scheduleType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_scheduleType(void)::Argument_scheduleType;
}

void sub_1CA37C848(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_endDateTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_endDateTime(void)::Argument_endDateTime;
}

void sub_1CA37C954(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_recurringDateTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_recurringDateTime(void)::Argument_recurringDateTime;
}

void sub_1CA37CA60(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_elapsedDistance(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_elapsedDistance(void)::Argument_elapsedDistance;
}

void sub_1CA37CB6C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_elapsedDuration(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_elapsedDuration(void)::Argument_elapsedDuration;
}

void sub_1CA37CC78(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_endPointOfInterest(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_endPointOfInterest(void)::Argument_endPointOfInterest;
}

void sub_1CA37CD84(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_remainingDistance(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_remainingDistance(void)::Argument_remainingDistance;
}

void sub_1CA37CE90(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_remainingDuration(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_remainingDuration(void)::Argument_remainingDuration;
}

void sub_1CA37CF9C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_startPointOfInterest(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_startPointOfInterest(void)::Argument_startPointOfInterest;
}

void sub_1CA37D0A8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_totalDistance(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_totalDistance(void)::Argument_totalDistance;
}

void sub_1CA37D1B4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_messageLanguage(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_messageLanguage(void)::Argument_messageLanguage;
}

void sub_1CA37D2C0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_messageState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_messageState(void)::Argument_messageState;
}

void sub_1CA37D3CC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_messageType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_messageType(void)::Argument_messageType;
}

void sub_1CA37D4D8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_summaryMode(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_summaryMode(void)::Argument_summaryMode;
}

void sub_1CA37D5E4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_tapbacks(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_tapbacks(void)::Argument_tapbacks;
}

void sub_1CA37D6F0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_valueCategory(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_valueCategory(void)::Argument_valueCategory;
}

void sub_1CA37D7FC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_valueQualifier(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_valueQualifier(void)::Argument_valueQualifier;
}

void sub_1CA37D908(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_fromPerson(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_fromPerson(void)::Argument_fromPerson;
}

void sub_1CA37DA14(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_relationshipType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_relationshipType(void)::Argument_relationshipType;
}

void sub_1CA37DB20(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_toPerson(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_toPerson(void)::Argument_toPerson;
}

void sub_1CA37DC2C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_sourceString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_sourceString(void)::Argument_sourceString;
}

void sub_1CA37DD38(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_targetString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_targetString(void)::Argument_targetString;
}

void sub_1CA37DE44(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_alias(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_alias(void)::Argument_alias;
}

void sub_1CA37DF50(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_authors(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_authors(void)::Argument_authors;
}

void sub_1CA37E05C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_identifyingVerseContent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_identifyingVerseContent(void)::Argument_identifyingVerseContent;
}

void sub_1CA37E168(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_owner(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_owner(void)::Argument_owner;
}

void sub_1CA37E274(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_viewDate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_viewDate(void)::Argument_viewDate;
}

void sub_1CA37E380(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_viewPeriod(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_viewPeriod(void)::Argument_viewPeriod;
}

void sub_1CA37E48C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_requiredStatus(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_requiredStatus(void)::Argument_requiredStatus;
}

void sub_1CA37E598(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_role(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_role(void)::Argument_role;
}

void sub_1CA37E6A4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_age(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_age(void)::Argument_age;
}

void sub_1CA37E7B0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedDate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedDate(void)::Argument_associatedDate;
}

void sub_1CA37E8BC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedOrganization(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedOrganization(void)::Argument_associatedOrganization;
}

void sub_1CA37E9C8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_birthdate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_birthdate(void)::Argument_birthdate;
}

void sub_1CA37EAD4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_identifyingRelationship(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_identifyingRelationship(void)::Argument_identifyingRelationship;
}

void sub_1CA37EBE0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_phoneticName(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_phoneticName(void)::Argument_phoneticName;
}

void sub_1CA37ECEC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_phoneticStructuredName(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_phoneticStructuredName(void)::Argument_phoneticStructuredName;
}

void sub_1CA37EDF8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_relationships(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_relationships(void)::Argument_relationships;
}

void sub_1CA37EF04(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_structuredName(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_structuredName(void)::Argument_structuredName;
}

void sub_1CA37F010(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_accountNumber(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_accountNumber(void)::Argument_accountNumber;
}

void sub_1CA37F11C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_accountType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_accountType(void)::Argument_accountType;
}

void sub_1CA37F228(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_balance(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_balance(void)::Argument_balance;
}

void sub_1CA37F334(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_bank(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_bank(void)::Argument_bank;
}

void sub_1CA37F440(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_holder(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_holder(void)::Argument_holder;
}

void sub_1CA37F54C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_nickname(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_nickname(void)::Argument_nickname;
}

void sub_1CA37F658(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_organization(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_organization(void)::Argument_organization;
}

void sub_1CA37F764(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_secondaryBalance(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_secondaryBalance(void)::Argument_secondaryBalance;
}

void sub_1CA37F870(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_notes(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_notes(void)::Argument_notes;
}

void sub_1CA37F97C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_types(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_types(void)::Argument_types;
}

void sub_1CA37FA88(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_contactAddress(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_contactAddress(void)::Argument_contactAddress;
}

void sub_1CA37FB94(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_notebookItems(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_notebookItems(void)::Argument_notebookItems;
}

void sub_1CA37FCA0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_city(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_city(void)::Argument_city;
}

void sub_1CA37FDAC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_country(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_country(void)::Argument_country;
}

void sub_1CA37FEB8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_crossStreet(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_crossStreet(void)::Argument_crossStreet;
}

void sub_1CA37FFC4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_neighborhood(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_neighborhood(void)::Argument_neighborhood;
}

void sub_1CA3800D0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_postalCode(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_postalCode(void)::Argument_postalCode;
}

void sub_1CA3801DC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_province(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_province(void)::Argument_province;
}

void sub_1CA3802E8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_street(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_street(void)::Argument_street;
}

void sub_1CA3803F4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_streetNumber(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_streetNumber(void)::Argument_streetNumber;
}

void sub_1CA380500(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_subStreetAddress(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_subStreetAddress(void)::Argument_subStreetAddress;
}

void sub_1CA38060C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_addedDateTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_addedDateTime(void)::Argument_addedDateTime;
}

void sub_1CA380718(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_cookTimeRequired(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_cookTimeRequired(void)::Argument_cookTimeRequired;
}

void sub_1CA380824(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_globalRating(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_globalRating(void)::Argument_globalRating;
}

void sub_1CA380930(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_lastUsedDateTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_lastUsedDateTime(void)::Argument_lastUsedDateTime;
}

void sub_1CA380A3C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_nutrients(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_nutrients(void)::Argument_nutrients;
}

void sub_1CA380B48(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_personalRating(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_personalRating(void)::Argument_personalRating;
}

void sub_1CA380C54(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_prepTimeRequired(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_prepTimeRequired(void)::Argument_prepTimeRequired;
}

void sub_1CA380D60(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_recipeSteps(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_recipeSteps(void)::Argument_recipeSteps;
}

void sub_1CA380E6C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_servings(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_servings(void)::Argument_servings;
}

void sub_1CA380F78(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_totalTimeRequired(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_totalTimeRequired(void)::Argument_totalTimeRequired;
}

void sub_1CA381084(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_uri(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_uri(void)::Argument_uri;
}

void sub_1CA381190(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_religion(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_religion(void)::Argument_religion;
}

void sub_1CA38129C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_agent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_agent(void)::Argument_agent;
}

void sub_1CA3813A8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_appEntity(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_appEntity(void)::Argument_appEntity;
}

void sub_1CA3814B4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_members(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_members(void)::Argument_members;
}

void sub_1CA3815C0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_lap(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_lap(void)::Argument_lap;
}

void sub_1CA3816CC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedMediaItems(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedMediaItems(void)::Argument_associatedMediaItems;
}

void sub_1CA3817D8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_lyrics(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_lyrics(void)::Argument_lyrics;
}

void sub_1CA3818E4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_mediaItemType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_mediaItemType(void)::Argument_mediaItemType;
}

void sub_1CA3819F0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_mediaItemVersion(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_mediaItemVersion(void)::Argument_mediaItemVersion;
}

void sub_1CA381AFC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_playbackState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_playbackState(void)::Argument_playbackState;
}

void sub_1CA381C08(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_appListing(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_appListing(void)::Argument_appListing;
}

void sub_1CA381D14(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_appSection(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_appSection(void)::Argument_appSection;
}

void sub_1CA381E20(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_developer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_developer(void)::Argument_developer;
}

void sub_1CA381F2C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_section(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_section(void)::Argument_section;
}

void sub_1CA382038(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_state(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_state(void)::Argument_state;
}

void sub_1CA382144(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedActions(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedActions(void)::Argument_associatedActions;
}

void sub_1CA382250(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedPeople(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedPeople(void)::Argument_associatedPeople;
}

void sub_1CA38235C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_usoAssociatedApp(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_usoAssociatedApp(void)::Argument_usoAssociatedApp;
}

void sub_1CA382468(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_usoListPosition(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_usoListPosition(void)::Argument_usoListPosition;
}

void sub_1CA382574(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_usoQuantifier(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_usoQuantifier(void)::Argument_usoQuantifier;
}

void sub_1CA382680(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_usoReferenceType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_usoReferenceType(void)::Argument_usoReferenceType;
}

void sub_1CA38278C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_usoSearchQualifier(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_usoSearchQualifier(void)::Argument_usoSearchQualifier;
}

void sub_1CA382898(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_usoSameAs(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_usoSameAs(void)::Argument_usoSameAs;
}

void sub_1CA3829A4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_usoConvertFrom(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_usoConvertFrom(void)::Argument_usoConvertFrom;
}

void sub_1CA382AB0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_usoSpatialPosition(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_usoSpatialPosition(void)::Argument_usoSpatialPosition;
}

void sub_1CA382BBC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_usoRedactionId(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_usoRedactionId(void)::Argument_usoRedactionId;
}

void sub_1CA382CC8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_selectOne(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_selectOne(void)::Argument_selectOne;
}

void sub_1CA382DD4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_quantifier(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_quantifier(void)::Argument_quantifier;
}

void sub_1CA382EE0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_usoId(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_usoId(void)::Argument_usoId;
}

void sub_1CA382FEC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_application(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_application(void)::Argument_application;
}

void sub_1CA3830F8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_flowControl(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_flowControl(void)::Argument_flowControl;
}

void sub_1CA383204(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_focus(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_focus(void)::Argument_focus;
}

void sub_1CA383310(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_followUpToGoalId(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_followUpToGoalId(void)::Argument_followUpToGoalId;
}

void sub_1CA38341C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_goalId(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_goalId(void)::Argument_goalId;
}

void sub_1CA383528(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_taskId(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_taskId(void)::Argument_taskId;
}

void sub_1CA383634(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_source(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_source(void)::Argument_source;
}

void sub_1CA383740(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_id(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_id(void)::Argument_id;
}

void sub_1CA38384C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_referenceQuantifier(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_referenceQuantifier(void)::Argument_referenceQuantifier;
}

void sub_1CA383958(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_presentation(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_presentation(void)::Argument_presentation;
}

void sub_1CA383A64(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_controller(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_controller(void)::Argument_controller;
}

void sub_1CA383B70(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_collection(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_collection(void)::Argument_collection;
}

void sub_1CA383C7C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_creators(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_creators(void)::Argument_creators;
}

void sub_1CA383D88(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_identifiers(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_identifiers(void)::Argument_identifiers;
}

void sub_1CA383E94(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_identifyingCollection(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_identifyingCollection(void)::Argument_identifyingCollection;
}

void sub_1CA383FA0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_mediaData(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_mediaData(void)::Argument_mediaData;
}

void sub_1CA3840AC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_metadata(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_metadata(void)::Argument_metadata;
}

void sub_1CA3841B8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_nameString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_nameString(void)::Argument_nameString;
}

void sub_1CA3842C4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_quality(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_quality(void)::Argument_quality;
}

void sub_1CA3843D0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_releaseDate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_releaseDate(void)::Argument_releaseDate;
}

void sub_1CA3844DC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_releaseType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_releaseType(void)::Argument_releaseType;
}

void sub_1CA3845E8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_siriBaseId(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_siriBaseId(void)::Argument_siriBaseId;
}

void sub_1CA3846F4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_attachment(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_attachment(void)::Argument_attachment;
}

void sub_1CA384800(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_notificationNewState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_notificationNewState(void)::Argument_notificationNewState;
}

void sub_1CA38490C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_notificationReadState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_notificationReadState(void)::Argument_notificationReadState;
}

void sub_1CA384A18(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_answerStatus(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_answerStatus(void)::Argument_answerStatus;
}

void sub_1CA384B24(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_callDirection(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_callDirection(void)::Argument_callDirection;
}

void sub_1CA384C30(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_caller(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_caller(void)::Argument_caller;
}

void sub_1CA384D3C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_replyTo(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_replyTo(void)::Argument_replyTo;
}

void sub_1CA384E48(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_communicationDirection(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_communicationDirection(void)::Argument_communicationDirection;
}

void sub_1CA384F54(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_groupRecipients(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_groupRecipients(void)::Argument_groupRecipients;
}

void sub_1CA385060(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_newness(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_newness(void)::Argument_newness;
}

void sub_1CA38516C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_personRecipients(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_personRecipients(void)::Argument_personRecipients;
}

void sub_1CA385278(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_intensifier(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_intensifier(void)::Argument_intensifier;
}

void sub_1CA385384(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_media(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_media(void)::Argument_media;
}

void sub_1CA385490(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_contactAddresses(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_contactAddresses(void)::Argument_contactAddresses;
}

void sub_1CA38559C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_memberships(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_memberships(void)::Argument_memberships;
}

void sub_1CA3856A8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_postalAddress(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_postalAddress(void)::Argument_postalAddress;
}

void sub_1CA3857B4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_weatherRecordType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_weatherRecordType(void)::Argument_weatherRecordType;
}

void sub_1CA3858C0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_weatherReport(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_weatherReport(void)::Argument_weatherReport;
}

void sub_1CA3859CC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_pressure(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_pressure(void)::Argument_pressure;
}

void sub_1CA385AD8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_pressureDirection(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_pressureDirection(void)::Argument_pressureDirection;
}

void sub_1CA385BE4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dateTimeTriggers(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dateTimeTriggers(void)::Argument_dateTimeTriggers;
}

void sub_1CA385CF0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_angle(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_angle(void)::Argument_angle;
}

void sub_1CA385DFC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_latitudeHemisphere(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_latitudeHemisphere(void)::Argument_latitudeHemisphere;
}

void sub_1CA385F08(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dateTimeLastModified(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dateTimeLastModified(void)::Argument_dateTimeLastModified;
}

void sub_1CA386014(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_groupLabel(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_groupLabel(void)::Argument_groupLabel;
}

void sub_1CA386120(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_groupNameString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_groupNameString(void)::Argument_groupNameString;
}

void sub_1CA38622C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_itemList(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_itemList(void)::Argument_itemList;
}

void sub_1CA386338(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_status(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_status(void)::Argument_status;
}

void sub_1CA386444(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_taskList(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_taskList(void)::Argument_taskList;
}

void sub_1CA386550(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_playState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_playState(void)::Argument_playState;
}

void sub_1CA38665C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_timeElapsed(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_timeElapsed(void)::Argument_timeElapsed;
}

void sub_1CA386768(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_currentlyPlaying(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_currentlyPlaying(void)::Argument_currentlyPlaying;
}

void sub_1CA386874(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_alarmDateTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_alarmDateTime(void)::Argument_alarmDateTime;
}

void sub_1CA386980(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_alarmSound(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_alarmSound(void)::Argument_alarmSound;
}

void sub_1CA386A8C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_enabledStatus(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_enabledStatus(void)::Argument_enabledStatus;
}

void sub_1CA386B98(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_snoozeStatus(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_snoozeStatus(void)::Argument_snoozeStatus;
}

void sub_1CA386CA4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_emailAddress(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_emailAddress(void)::Argument_emailAddress;
}

void sub_1CA386DB0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_phoneNumber(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_phoneNumber(void)::Argument_phoneNumber;
}

void sub_1CA386EBC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_confirmationStatus(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_confirmationStatus(void)::Argument_confirmationStatus;
}

void sub_1CA386FC8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_contact(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_contact(void)::Argument_contact;
}

void sub_1CA3870D4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_speed(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_speed(void)::Argument_speed;
}

void sub_1CA3871E0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_labelString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_labelString(void)::Argument_labelString;
}

void sub_1CA3872EC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_moonPhaseType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_moonPhaseType(void)::Argument_moonPhaseType;
}

void sub_1CA3873F8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_valueString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_valueString(void)::Argument_valueString;
}

void sub_1CA387504(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_emergencyType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_emergencyType(void)::Argument_emergencyType;
}

void sub_1CA387610(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_descriptors(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_descriptors(void)::Argument_descriptors;
}

void sub_1CA38771C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_purchasedStatus(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_purchasedStatus(void)::Argument_purchasedStatus;
}

void sub_1CA387828(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_rating(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_rating(void)::Argument_rating;
}

void sub_1CA387934(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_building(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_building(void)::Argument_building;
}

void sub_1CA387A40(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_relationshipToOtherPerson(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_relationshipToOtherPerson(void)::Argument_relationshipToOtherPerson;
}

void sub_1CA387B4C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_devices(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_devices(void)::Argument_devices;
}

void sub_1CA387C58(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_activationStatus(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_activationStatus(void)::Argument_activationStatus;
}

void sub_1CA387D64(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_localeLocation(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_localeLocation(void)::Argument_localeLocation;
}

void sub_1CA387E70(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_tasks(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_tasks(void)::Argument_tasks;
}

void sub_1CA387F7C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_batteryPowerLevel(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_batteryPowerLevel(void)::Argument_batteryPowerLevel;
}

void sub_1CA388088(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_chargingStatus(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_chargingStatus(void)::Argument_chargingStatus;
}

void sub_1CA388194(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_modelNameString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_modelNameString(void)::Argument_modelNameString;
}

void sub_1CA3882A0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_productCategory(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_productCategory(void)::Argument_productCategory;
}

void sub_1CA3883AC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_timerType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_timerType(void)::Argument_timerType;
}

void sub_1CA3884B8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_allDayStatus(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_allDayStatus(void)::Argument_allDayStatus;
}

void sub_1CA3885C4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_eventQuantifier(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_eventQuantifier(void)::Argument_eventQuantifier;
}

void sub_1CA3886D0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_calendar(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_calendar(void)::Argument_calendar;
}

void sub_1CA3887DC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_calendarEventType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_calendarEventType(void)::Argument_calendarEventType;
}

void sub_1CA3888E8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_conflictingEvents(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_conflictingEvents(void)::Argument_conflictingEvents;
}

void sub_1CA3889F4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_createdBy(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_createdBy(void)::Argument_createdBy;
}

void sub_1CA388B00(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_utcOffset(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_utcOffset(void)::Argument_utcOffset;
}

void sub_1CA388C0C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_journey(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_journey(void)::Argument_journey;
}

void sub_1CA388D18(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_mapType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_mapType(void)::Argument_mapType;
}

void sub_1CA388E24(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_pointsOfInterest(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_pointsOfInterest(void)::Argument_pointsOfInterest;
}

void sub_1CA388F30(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_zoomLevel(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_zoomLevel(void)::Argument_zoomLevel;
}

void sub_1CA38903C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_preferenceType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_preferenceType(void)::Argument_preferenceType;
}

void sub_1CA389148(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_preferredObject(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_preferredObject(void)::Argument_preferredObject;
}

void sub_1CA389254(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_settingGroup(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_settingGroup(void)::Argument_settingGroup;
}

void sub_1CA389360(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_navigationDisplay(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_navigationDisplay(void)::Argument_navigationDisplay;
}

void sub_1CA38946C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_textValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_textValue(void)::Argument_textValue;
}

void sub_1CA389578(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_characteristic(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_characteristic(void)::Argument_characteristic;
}

void sub_1CA389684(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_mantissa(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_mantissa(void)::Argument_mantissa;
}

void sub_1CA389790(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_denominator(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_denominator(void)::Argument_denominator;
}

void sub_1CA38989C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_activityCategories(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_activityCategories(void)::Argument_activityCategories;
}

void sub_1CA3899A8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_storeItem(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_storeItem(void)::Argument_storeItem;
}

void sub_1CA389AB4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_sunEventType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_sunEventType(void)::Argument_sunEventType;
}

void sub_1CA389BC0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_uvIndex(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_uvIndex(void)::Argument_uvIndex;
}

void sub_1CA389CCC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_locationTrigger(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_locationTrigger(void)::Argument_locationTrigger;
}

void sub_1CA389DD8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_locationTriggerType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_locationTriggerType(void)::Argument_locationTriggerType;
}

void sub_1CA389EE4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_chanceOfPrecipitation(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_chanceOfPrecipitation(void)::Argument_chanceOfPrecipitation;
}

void sub_1CA389FF0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_precipitationType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_precipitationType(void)::Argument_precipitationType;
}

void sub_1CA38A0FC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_weatherReportItems(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_weatherReportItems(void)::Argument_weatherReportItems;
}

void sub_1CA38A208(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_weatherTypes(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_weatherTypes(void)::Argument_weatherTypes;
}

void sub_1CA38A314(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_dominantAirPollutantType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_dominantAirPollutantType(void)::Argument_dominantAirPollutantType;
}

void sub_1CA38A420(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_scene(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_scene(void)::Argument_scene;
}

void sub_1CA38A52C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_audio(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_audio(void)::Argument_audio;
}

void sub_1CA38A638(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_formality(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_formality(void)::Argument_formality;
}

void sub_1CA38A744(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedAgent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedAgent(void)::Argument_associatedAgent;
}

void sub_1CA38A850(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_quoteString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_quoteString(void)::Argument_quoteString;
}

void sub_1CA38A95C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_originatingCall(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_originatingCall(void)::Argument_originatingCall;
}

void sub_1CA38AA68(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_readState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_readState(void)::Argument_readState;
}

void sub_1CA38AB74(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_saveState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_saveState(void)::Argument_saveState;
}

void sub_1CA38AC80(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_currentWebPage(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_currentWebPage(void)::Argument_currentWebPage;
}

void sub_1CA38AD8C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_userPointOfInterestType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_userPointOfInterestType(void)::Argument_userPointOfInterestType;
}

void sub_1CA38AE98(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_lookupId(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_lookupId(void)::Argument_lookupId;
}

void sub_1CA38AFA4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_participant(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_participant(void)::Argument_participant;
}

void sub_1CA38B0B0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_currentlyCalling(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_currentlyCalling(void)::Argument_currentlyCalling;
}

void sub_1CA38B1BC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_speakerState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_speakerState(void)::Argument_speakerState;
}

void sub_1CA38B2C8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_startTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_startTime(void)::Argument_startTime;
}

void sub_1CA38B3D4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_airQualityWeatherReportType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_airQualityWeatherReportType(void)::Argument_airQualityWeatherReportType;
}

void sub_1CA38B4E0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_holidayType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_holidayType(void)::Argument_holidayType;
}

void sub_1CA38B5EC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_recurringNamedDateRange(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_recurringNamedDateRange(void)::Argument_recurringNamedDateRange;
}

void sub_1CA38B6F8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_bundleId(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_bundleId(void)::Argument_bundleId;
}

void sub_1CA38B804(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_installed(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_installed(void)::Argument_installed;
}

void sub_1CA38B910(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_version(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_version(void)::Argument_version;
}

void sub_1CA38BA1C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_mediaLanguageOptionType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_mediaLanguageOptionType(void)::Argument_mediaLanguageOptionType;
}

void sub_1CA38BB28(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_subAreas(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_subAreas(void)::Argument_subAreas;
}

void sub_1CA38BC34(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_fullName(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_fullName(void)::Argument_fullName;
}

void sub_1CA38BD40(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_offset(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_offset(void)::Argument_offset;
}

void sub_1CA38BE4C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_referenceLocation(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_referenceLocation(void)::Argument_referenceLocation;
}

void sub_1CA38BF58(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_fromDateTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_fromDateTime(void)::Argument_fromDateTime;
}

void sub_1CA38C064(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_toDateTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_toDateTime(void)::Argument_toDateTime;
}

void sub_1CA38C170(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_referencePoint(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_referencePoint(void)::Argument_referencePoint;
}

void sub_1CA38C27C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_geolocation(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_geolocation(void)::Argument_geolocation;
}

void sub_1CA38C388(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_streetAddress(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_streetAddress(void)::Argument_streetAddress;
}

void sub_1CA38C494(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_observanceType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_observanceType(void)::Argument_observanceType;
}

void sub_1CA38C5A0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_geocoordinate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_geocoordinate(void)::Argument_geocoordinate;
}

void sub_1CA38C6AC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_attachedObject(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_attachedObject(void)::Argument_attachedObject;
}

void sub_1CA38C7B8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_strings(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_strings(void)::Argument_strings;
}

void sub_1CA38C8C4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_text(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_text(void)::Argument_text;
}

void sub_1CA38C9D0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_directionType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_directionType(void)::Argument_directionType;
}

void sub_1CA38CADC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_distanceToDirection(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_distanceToDirection(void)::Argument_distanceToDirection;
}

void sub_1CA38CBE8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_timeToDirection(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_timeToDirection(void)::Argument_timeToDirection;
}

void sub_1CA38CCF4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_directionFromNorth(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_directionFromNorth(void)::Argument_directionFromNorth;
}

void sub_1CA38CE00(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_image(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_image(void)::Argument_image;
}

void sub_1CA38CF0C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_relationship(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_relationship(void)::Argument_relationship;
}

void sub_1CA38D018(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_preferenceCategory(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_preferenceCategory(void)::Argument_preferenceCategory;
}

void sub_1CA38D124(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_preferenceStatementType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_preferenceStatementType(void)::Argument_preferenceStatementType;
}

void sub_1CA38D230(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_familyNameString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_familyNameString(void)::Argument_familyNameString;
}

void sub_1CA38D33C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_givenNameString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_givenNameString(void)::Argument_givenNameString;
}

void sub_1CA38D448(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_middleNameString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_middleNameString(void)::Argument_middleNameString;
}

void sub_1CA38D554(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_nickNameString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_nickNameString(void)::Argument_nickNameString;
}

void sub_1CA38D660(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_siriCanonicalLocaleName(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_siriCanonicalLocaleName(void)::Argument_siriCanonicalLocaleName;
}

void sub_1CA38D76C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_siriLocaleCode(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_siriLocaleCode(void)::Argument_siriLocaleCode;
}

void sub_1CA38D878(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_recurringNamedDate(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_recurringNamedDate(void)::Argument_recurringNamedDate;
}

void sub_1CA38D984(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_languageOption(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_languageOption(void)::Argument_languageOption;
}

void sub_1CA38DA90(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_subtitleState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_subtitleState(void)::Argument_subtitleState;
}

void sub_1CA38DB9C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_repeatPlayState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_repeatPlayState(void)::Argument_repeatPlayState;
}

void sub_1CA38DCA8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_shufflePlayState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_shufflePlayState(void)::Argument_shufflePlayState;
}

void sub_1CA38DDB4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_namespaceString(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_namespaceString(void)::Argument_namespaceString;
}

void sub_1CA38DEC0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_privacy(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_privacy(void)::Argument_privacy;
}

void sub_1CA38DFCC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedReligion(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedReligion(void)::Argument_associatedReligion;
}

void sub_1CA38E0D8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_conversation(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_conversation(void)::Argument_conversation;
}

void sub_1CA38E1E4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_effect(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_effect(void)::Argument_effect;
}

void sub_1CA38E2F0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_flagState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_flagState(void)::Argument_flagState;
}

void sub_1CA38E3FC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_textContent(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_textContent(void)::Argument_textContent;
}

void sub_1CA38E508(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_latitude(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_latitude(void)::Argument_latitude;
}

void sub_1CA38E614(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_longitude(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_longitude(void)::Argument_longitude;
}

void sub_1CA38E720(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_suggestedWeatherProducts(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_suggestedWeatherProducts(void)::Argument_suggestedWeatherProducts;
}

void sub_1CA38E82C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_temperature(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_temperature(void)::Argument_temperature;
}

void sub_1CA38E938(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_temperatureMeasurementType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_temperatureMeasurementType(void)::Argument_temperatureMeasurementType;
}

void sub_1CA38EA44(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_temperatureReportType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_temperatureReportType(void)::Argument_temperatureReportType;
}

void sub_1CA38EB50(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_webSite(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_webSite(void)::Argument_webSite;
}

void sub_1CA38EC5C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_longitudeHemisphere(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_longitudeHemisphere(void)::Argument_longitudeHemisphere;
}

void sub_1CA38ED68(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_communicationLabels(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_communicationLabels(void)::Argument_communicationLabels;
}

void sub_1CA38EE74(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_forwardOf(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_forwardOf(void)::Argument_forwardOf;
}

void sub_1CA38EF80(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_fromDraft(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_fromDraft(void)::Argument_fromDraft;
}

void sub_1CA38F08C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_sendState(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_sendState(void)::Argument_sendState;
}

void sub_1CA38F198(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_height(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_height(void)::Argument_height;
}

void sub_1CA38F2A4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_tideType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_tideType(void)::Argument_tideType;
}

void sub_1CA38F3B0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_settingType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_settingType(void)::Argument_settingType;
}

void sub_1CA38F4BC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_participation(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_participation(void)::Argument_participation;
}

void sub_1CA38F5C8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_canonicalName(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_canonicalName(void)::Argument_canonicalName;
}

void sub_1CA38F6D4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_groupMembers(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_groupMembers(void)::Argument_groupMembers;
}

void sub_1CA38F7E0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_groupName(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_groupName(void)::Argument_groupName;
}

void sub_1CA38F8EC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_endPoint(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_endPoint(void)::Argument_endPoint;
}

void sub_1CA38F9F8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_eta(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_eta(void)::Argument_eta;
}

void sub_1CA38FB04(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_startPoint(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_startPoint(void)::Argument_startPoint;
}

void sub_1CA38FC10(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_trafficStatus(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_trafficStatus(void)::Argument_trafficStatus;
}

void sub_1CA38FD1C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_transportationMode(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_transportationMode(void)::Argument_transportationMode;
}

void sub_1CA38FE28(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_travelTime(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_travelTime(void)::Argument_travelTime;
}

void sub_1CA38FF34(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_velocity(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_velocity(void)::Argument_velocity;
}

void sub_1CA390040(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_windReportType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_windReportType(void)::Argument_windReportType;
}

void sub_1CA39014C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_shelter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_shelter(void)::Argument_shelter;
}

void sub_1CA390258(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_mediaPlayer(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_mediaPlayer(void)::Argument_mediaPlayer;
}

void sub_1CA390364(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_descriptorStrings(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_descriptorStrings(void)::Argument_descriptorStrings;
}

void sub_1CA390470(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_associatedWeatherReports(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_associatedWeatherReports(void)::Argument_associatedWeatherReports;
}

void sub_1CA39057C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_containerOfCurrentlyPlaying(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_containerOfCurrentlyPlaying(void)::Argument_containerOfCurrentlyPlaying;
}

void sub_1CA390688(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_queue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_queue(void)::Argument_queue;
}

void sub_1CA390794(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_audioTrackLanguageOption(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_audioTrackLanguageOption(void)::Argument_audioTrackLanguageOption;
}

void sub_1CA3908A0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_videoCaptioning(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_videoCaptioning(void)::Argument_videoCaptioning;
}

void sub_1CA3909AC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_product(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_product(void)::Argument_product;
}

void sub_1CA390AB8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_quantity(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_quantity(void)::Argument_quantity;
}

void sub_1CA390BC4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_store(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_store(void)::Argument_store;
}

void sub_1CA390CD0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_generalStatus(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_generalStatus(void)::Argument_generalStatus;
}

void sub_1CA390DDC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_brand(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_brand(void)::Argument_brand;
}

void sub_1CA390EE8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_packageType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_packageType(void)::Argument_packageType;
}

void sub_1CA390FF4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_notificationType(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_notificationType(void)::Argument_notificationType;
}

void sub_1CA391100(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_propertyValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_propertyValue(void)::Argument_propertyValue;
}

void sub_1CA39120C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_photoCollectionFilter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_photoCollectionFilter(void)::Argument_photoCollectionFilter;
}

void sub_1CA391318(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_slideshowFilter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_slideshowFilter(void)::Argument_slideshowFilter;
}

void sub_1CA391424(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_videoFilter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_videoFilter(void)::Argument_videoFilter;
}

void sub_1CA391530(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_photoMemoryFilter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_photoMemoryFilter(void)::Argument_photoMemoryFilter;
}

void sub_1CA39163C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_photoTag(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_photoTag(void)::Argument_photoTag;
}

void sub_1CA391748(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_photoFilter(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_photoFilter(void)::Argument_photoFilter;
}

void sub_1CA391854(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_photoCollection(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_photoCollection(void)::Argument_photoCollection;
}

void sub_1CA391960(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_payment(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_payment(void)::Argument_payment;
}

void sub_1CA391A6C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_recipents(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_recipents(void)::Argument_recipents;
}

void sub_1CA391B78(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_favoriteInstance(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_favoriteInstance(void)::Argument_favoriteInstance;
}

void sub_1CA391C84(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_favoriteCategory(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_favoriteCategory(void)::Argument_favoriteCategory;
}

void sub_1CA391D90(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_replace(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_replace(void)::Operator_replace;
}

void sub_1CA391E78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

void siri::ontology::OntologyNodeName::OntologyNodeName(uint64_t a1, int a2, int a3, uint64_t *a4)
{
  uint64_t v4 = *a4;
  *(void *)&long long v6 = a4[1];
  *(void *)((char *)&v6 + 7) = *(uint64_t *)((char *)a4 + 15);
  char v5 = *((unsigned char *)a4 + 23);
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  *(void *)(a1 + 23) = *(void *)((char *)&v6 + 7);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 31) = v5;
  *(_DWORD *)(a1 + 32) = a3;
  *(_DWORD *)(a1 + 36) = a2;
  *(void *)a1 = &unk_1F246D418;
  siri::ontology::OntologyUnitMetaData<2ul,4ul>::OntologyUnitMetaData(a1 + 40);
}

void sub_1CA391F74(_Unwind_Exception *exception_object)
{
  *(void *)uint64_t v1 = &unk_1F246D440;
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*(void **)(v1 + 8));
  }
  _Unwind_Resume(exception_object);
}

void siri::ontology::OntologyUnitMetaData<2ul,4ul>::OntologyUnitMetaData(uint64_t a1)
{
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  operator new[]();
}

void sub_1CA392054(_Unwind_Exception *exception_object)
{
  uint64_t v3 = v1[1];
  v1[1] = 0;
  if (v3) {
    MEMORY[0x1CB7964F0](v3, 0x1000C8052888210);
  }
  uint64_t v4 = *v1;
  *uint64_t v1 = 0;
  if (v4) {
    MEMORY[0x1CB7964F0](v4, 0x1000C8000313F17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_lessThanOrEquals(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_lessThanOrEquals(void)::Operator_lessThanOrEquals;
}

void sub_1CA392154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_delete(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_delete(void)::Operator_delete;
}

void sub_1CA392254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_and(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_and(void)::Operator_and;
}

void sub_1CA392354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_lessThan(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_lessThan(void)::Operator_lessThan;
}

void sub_1CA392454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_notIn(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_notIn(void)::Operator_notIn;
}

void sub_1CA392554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_remainingConstant(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_remainingConstant(void)::Operator_remainingConstant;
}

void sub_1CA392654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_greaterThan(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_greaterThan(void)::Operator_greaterThan;
}

void sub_1CA392754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_removeFromSet(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_removeFromSet(void)::Operator_removeFromSet;
}

void sub_1CA392854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_in(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_in(void)::Operator_in;
}

void sub_1CA392954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_correctFrom(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_correctFrom(void)::Operator_correctFrom;
}

void sub_1CA392A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_removeFromValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_removeFromValue(void)::Operator_removeFromValue;
}

void sub_1CA392B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_notExists(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_notExists(void)::Operator_notExists;
}

void sub_1CA392C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_decreasing(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_decreasing(void)::Operator_decreasing;
}

void sub_1CA392D54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_greaterThanOrEquals(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_greaterThanOrEquals(void)::Operator_greaterThanOrEquals;
}

void sub_1CA392E54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_contains(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_contains(void)::Operator_contains;
}

void sub_1CA392F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_notContains(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_notContains(void)::Operator_notContains;
}

void sub_1CA393054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_addToValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_addToValue(void)::Operator_addToValue;
}

void sub_1CA393154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_equals(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_equals(void)::Operator_equals;
}

void sub_1CA393254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_increasing(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_increasing(void)::Operator_increasing;
}

void sub_1CA393354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_notEquals(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_notEquals(void)::Operator_notEquals;
}

void sub_1CA393454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_correctInto(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_correctInto(void)::Operator_correctInto;
}

void sub_1CA393554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_append(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_append(void)::Operator_append;
}

void sub_1CA393654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_assign(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_assign(void)::Operator_assign;
}

void sub_1CA393754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Operator_addToSet(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Operator_addToSet(void)::Operator_addToSet;
}

void sub_1CA393854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB796510](v15, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::UsoVocabManager::UsoVocabManager(uint64_t a1, const void ***a2, uint64_t a3)
{
  *(void *)a1 = a2;
  long long v4 = 0uLL;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a3;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  int v5 = 1065353216;
  *(_DWORD *)(a1 + 168) = 1065353216;
  uint64_t v6 = (char *)a2[1] - (char *)*a2;
  v77 = (std::vector<int> *)(a1 + 80);
  v78 = (std::vector<int> *)(a1 + 8);
  if (v6)
  {
    if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFF9) {
      std::vector<int>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v8 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::reference_wrapper<siri::ontology::UsoGraphNode>,std::reference_wrapper<siri::ontology::UsoGraphEdge const>>>>(v6 >> 3);
    v80 = &v8[16 * v9];
    int64x2_t v81 = vdupq_n_s64((unint64_t)v8);
    a2 = *(const void ****)a1;
    long long v4 = 0uLL;
  }
  else
  {
    v80 = 0;
    int64x2_t v81 = 0u;
  }
  *(_OWORD *)__p = v4;
  long long v88 = v4;
  float v89 = 1.0;
  v10 = *a2;
  v79 = a2[1];
  if (*a2 != v79)
  {
    while (1)
    {
      size_t v11 = *v10;
      if (*v10)
      {
        if (v12)
        {
          v13 = v12;
          uint64_t v14 = v12[16];
          int v15 = v12[17] - v14;
          if (!v15)
          {
LABEL_9:
            std::string::size_type v16 = v13 + 2;
            unint64_t v3 = v81.u64[1];
            if (v81.i64[1] < (unint64_t)v80)
            {
              *(void *)v81.i64[1] = v16;
              *(void *)(v81.i64[1] + 8) = v13;
              uint64_t v17 = v81.i64[1] + 16;
LABEL_132:
              v69.i64[0] = v81.i64[0];
              v69.i64[1] = v17;
              int64x2_t v81 = v69;
              goto LABEL_133;
            }
            uint64_t v57 = (v81.i64[1] - v81.i64[0]) >> 4;
            unint64_t v58 = v57 + 1;
            if ((unint64_t)(v57 + 1) >> 60) {
              std::vector<int>::__throw_length_error[abi:ne180100]();
            }
            if ((uint64_t)&v80[-v81.i64[0]] >> 3 > v58) {
              unint64_t v58 = (uint64_t)&v80[-v81.i64[0]] >> 3;
            }
            if ((unint64_t)&v80[-v81.i64[0]] >= 0x7FFFFFFFFFFFFFF0) {
              unint64_t v59 = 0xFFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v59 = v58;
            }
            v60 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::reference_wrapper<siri::ontology::UsoGraphNode>,std::reference_wrapper<siri::ontology::UsoGraphEdge const>>>>(v59);
            v62 = &v60[16 * v57];
            *(void *)v62 = v16;
            *((void *)v62 + 1) = v13;
            v63 = v62;
            if (v81.i64[1] != v81.i64[0])
            {
              do
              {
                *((_OWORD *)v63 - 1) = *(_OWORD *)(v3 - 16);
                v63 -= 16;
                v3 -= 16;
              }
              while (v3 != v81.i64[0]);
              unint64_t v3 = v81.i64[0];
            }
            v80 = &v60[16 * v61];
            uint64_t v17 = (uint64_t)(v62 + 16);
            v81.i64[0] = (uint64_t)v63;
            if (!v3) {
              goto LABEL_132;
            }
            v64 = (void *)v3;
            goto LABEL_131;
          }
          uint64_t v29 = (int *)(*((void *)v12 + 6) + 4 * v14);
          uint64_t v30 = &v29[v15];
          while (2)
          {
            int v31 = *v29;
            unint64_t v32 = (unint64_t)__p[1];
            if (__p[1])
            {
              uint8x8_t v33 = (uint8x8_t)vcnt_s8((int8x8_t)__p[1]);
              v33.i16[0] = vaddlv_u8(v33);
              if (v33.u32[0] > 1uLL)
              {
                unint64_t v3 = v31;
                if (__p[1] <= (void *)v31) {
                  unint64_t v3 = v31 % (unint64_t)__p[1];
                }
              }
              else
              {
                unint64_t v3 = ((unint64_t)__p[1] - 1) & v31;
              }
              v34 = (uint64_t **)*((void *)__p[0] + v3);
              if (v34)
              {
                for (i = *v34; i; i = (uint64_t *)*i)
                {
                  unint64_t v36 = i[1];
                  if (v36 == v31)
                  {
                    if (*((_DWORD *)i + 4) == v31) {
                      goto LABEL_95;
                    }
                  }
                  else
                  {
                    if (v33.u32[0] > 1uLL)
                    {
                      if ((void *)v36 >= __p[1]) {
                        v36 %= (unint64_t)__p[1];
                      }
                    }
                    else
                    {
                      v36 &= (unint64_t)__p[1] - 1;
                    }
                    if (v36 != v3) {
                      break;
                    }
                  }
                }
              }
            }
            v37 = (char *)operator new(0x40uLL);
            v90[0] = v37;
            v90[1] = &v88;
            *(void *)v37 = 0;
            *((void *)v37 + 1) = v31;
            *((_DWORD *)v37 + 4) = v31;
            *(_OWORD *)(v37 + 24) = 0u;
            *(_OWORD *)(v37 + 40) = 0u;
            *((_DWORD *)v37 + 14) = 1065353216;
            char v91 = 1;
            float v38 = (float)(unint64_t)(*((void *)&v88 + 1) + 1);
            if (!v32 || (float)(v89 * (float)v32) < v38)
            {
              BOOL v39 = (v32 & (v32 - 1)) != 0;
              if (v32 < 3) {
                BOOL v39 = 1;
              }
              unint64_t v40 = v39 | (2 * v32);
              unint64_t v41 = vcvtps_u32_f32(v38 / v89);
              if (v40 <= v41) {
                int8x8_t prime = (int8x8_t)v41;
              }
              else {
                int8x8_t prime = (int8x8_t)v40;
              }
              if (*(void *)&prime == 1)
              {
                int8x8_t prime = (int8x8_t)2;
              }
              else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
              {
                int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
                unint64_t v32 = (unint64_t)__p[1];
              }
              if (*(void *)&prime <= v32)
              {
                if (*(void *)&prime < v32)
                {
                  unint64_t v49 = vcvtps_u32_f32((float)*((unint64_t *)&v88 + 1) / v89);
                  if (v32 < 3
                    || (uint8x8_t v50 = (uint8x8_t)vcnt_s8((int8x8_t)v32), v50.i16[0] = vaddlv_u8(v50), v50.u32[0] > 1uLL))
                  {
                    unint64_t v49 = std::__next_prime(v49);
                  }
                  else
                  {
                    uint64_t v51 = 1 << -(char)__clz(v49 - 1);
                    if (v49 >= 2) {
                      unint64_t v49 = v51;
                    }
                  }
                  if (*(void *)&prime <= v49) {
                    int8x8_t prime = (int8x8_t)v49;
                  }
                  if (*(void *)&prime >= v32)
                  {
                    unint64_t v32 = (unint64_t)__p[1];
                  }
                  else
                  {
                    if (prime) {
                      goto LABEL_51;
                    }
                    v56 = __p[0];
                    __p[0] = 0;
                    if (v56) {
                      operator delete(v56);
                    }
                    unint64_t v32 = 0;
                    __p[1] = 0;
                  }
                }
              }
              else
              {
LABEL_51:
                if (*(void *)&prime >> 61) {
                  std::__throw_bad_array_new_length[abi:ne180100]();
                }
                v43 = operator new(8 * *(void *)&prime);
                v44 = __p[0];
                __p[0] = v43;
                if (v44) {
                  operator delete(v44);
                }
                uint64_t v45 = 0;
                __p[1] = (void *)prime;
                do
                  *((void *)__p[0] + v45++) = 0;
                while (*(void *)&prime != v45);
                v46 = (void **)v88;
                if ((void)v88)
                {
                  unint64_t v47 = *(void *)(v88 + 8);
                  uint8x8_t v48 = (uint8x8_t)vcnt_s8(prime);
                  v48.i16[0] = vaddlv_u8(v48);
                  if (v48.u32[0] > 1uLL)
                  {
                    if (v47 >= *(void *)&prime) {
                      v47 %= *(void *)&prime;
                    }
                  }
                  else
                  {
                    v47 &= *(void *)&prime - 1;
                  }
                  *((void *)__p[0] + v47) = &v88;
                  for (j = *v46; j; unint64_t v47 = v53)
                  {
                    unint64_t v53 = j[1];
                    if (v48.u32[0] > 1uLL)
                    {
                      if (v53 >= *(void *)&prime) {
                        v53 %= *(void *)&prime;
                      }
                    }
                    else
                    {
                      v53 &= *(void *)&prime - 1;
                    }
                    if (v53 != v47)
                    {
                      if (!*((void *)__p[0] + v53))
                      {
                        *((void *)__p[0] + v53) = v46;
                        goto LABEL_76;
                      }
                      *v46 = (void *)*j;
                      void *j = **((void **)__p[0] + v53);
                      **((void **)__p[0] + v53) = j;
                      j = v46;
                    }
                    unint64_t v53 = v47;
LABEL_76:
                    v46 = (void **)j;
                    j = (void *)*j;
                  }
                }
                unint64_t v32 = (unint64_t)prime;
              }
              if ((v32 & (v32 - 1)) != 0)
              {
                if (v32 <= v31) {
                  unint64_t v3 = v31 % v32;
                }
                else {
                  unint64_t v3 = v31;
                }
              }
              else
              {
                unint64_t v3 = (v32 - 1) & v31;
              }
            }
            v54 = (void *)*((void *)__p[0] + v3);
            i = (uint64_t *)v90[0];
            if (v54)
            {
              *(void *)v90[0] = *v54;
              goto LABEL_93;
            }
            *(void *)v90[0] = v88;
            *(void *)&long long v88 = i;
            *((void *)__p[0] + v3) = &v88;
            if (*i)
            {
              unint64_t v55 = *(void *)(*i + 8);
              if ((v32 & (v32 - 1)) != 0)
              {
                if (v55 >= v32) {
                  v55 %= v32;
                }
              }
              else
              {
                v55 &= v32 - 1;
              }
              v54 = (char *)__p[0] + 8 * v55;
LABEL_93:
              void *v54 = i;
            }
            v90[0] = 0;
            ++*((void *)&v88 + 1);
            std::unique_ptr<std::__hash_node<std::__hash_value_type<int,std::unordered_set<int>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<int,std::unordered_set<int>>,void *>>>>::reset[abi:ne180100]((uint64_t)v90);
LABEL_95:
            std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int>((uint64_t)(i + 3), v13[9], v13[9]);
            if (++v29 == v30) {
              goto LABEL_9;
            }
            continue;
          }
        }
        if (v18)
        {
          unint64_t v3 = (unint64_t)v18;
          v19 = v18 + 40;
          uint64_t v20 = (void *)v81.i64[1];
          if (v81.i64[1] < (unint64_t)v80) {
            goto LABEL_119;
          }
          uint64_t v21 = (void *)v81.i64[0];
          uint64_t v22 = (v81.i64[1] - v81.i64[0]) >> 4;
          unint64_t v23 = v22 + 1;
          if ((unint64_t)(v22 + 1) >> 60) {
            std::vector<int>::__throw_length_error[abi:ne180100]();
          }
          if ((uint64_t)&v80[-v81.i64[0]] >> 3 > v23) {
            unint64_t v23 = (uint64_t)&v80[-v81.i64[0]] >> 3;
          }
          if ((unint64_t)&v80[-v81.i64[0]] >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v24 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v24 = v23;
          }
          v25 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::reference_wrapper<siri::ontology::UsoGraphNode>,std::reference_wrapper<siri::ontology::UsoGraphEdge const>>>>(v24);
          v27 = &v25[16 * v22];
          *(void *)v27 = v19;
          *((void *)v27 + 1) = v3;
          v28 = v27;
          if (v81.i64[1] != v81.i64[0])
          {
            do
            {
              *((_OWORD *)v28 - 1) = *((_OWORD *)v20 - 1);
              v28 -= 16;
              v20 -= 2;
            }
            while (v20 != (void *)v81.i64[0]);
            goto LABEL_128;
          }
          goto LABEL_129;
        }
        if (v65)
        {
          unint64_t v3 = (unint64_t)v65;
          v19 = v65 + 8;
          uint64_t v20 = (void *)v81.i64[1];
          if (v81.i64[1] < (unint64_t)v80)
          {
LABEL_119:
            *uint64_t v20 = v19;
            v20[1] = v3;
            uint64_t v17 = (uint64_t)(v20 + 2);
            goto LABEL_132;
          }
          uint64_t v21 = (void *)v81.i64[0];
          uint64_t v66 = (v81.i64[1] - v81.i64[0]) >> 4;
          unint64_t v67 = v66 + 1;
          if ((unint64_t)(v66 + 1) >> 60) {
            std::vector<int>::__throw_length_error[abi:ne180100]();
          }
          if ((uint64_t)&v80[-v81.i64[0]] >> 3 > v67) {
            unint64_t v67 = (uint64_t)&v80[-v81.i64[0]] >> 3;
          }
          if ((unint64_t)&v80[-v81.i64[0]] >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v68 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v68 = v67;
          }
          v25 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::reference_wrapper<siri::ontology::UsoGraphNode>,std::reference_wrapper<siri::ontology::UsoGraphEdge const>>>>(v68);
          v27 = &v25[16 * v66];
          *(void *)v27 = v19;
          *((void *)v27 + 1) = v3;
          v28 = v27;
          if (v81.i64[1] != v81.i64[0])
          {
            do
            {
              *((_OWORD *)v28 - 1) = *((_OWORD *)v20 - 1);
              v28 -= 16;
              v20 -= 2;
            }
            while (v20 != (void *)v81.i64[0]);
LABEL_128:
            uint64_t v20 = v21;
          }
LABEL_129:
          v80 = &v25[16 * v26];
          uint64_t v17 = (uint64_t)(v27 + 16);
          v81.i64[0] = (uint64_t)v28;
          if (!v20) {
            goto LABEL_132;
          }
          v64 = v20;
LABEL_131:
          operator delete(v64);
          goto LABEL_132;
        }
      }
LABEL_133:
      if (++v10 == v79)
      {
        v70 = __p[0];
        unint64_t v71 = (unint64_t)__p[1];
        uint64_t v73 = *((void *)&v88 + 1);
        uint64_t v72 = v88;
        int v5 = LODWORD(v89);
        goto LABEL_136;
      }
    }
  }
  uint64_t v73 = 0;
  uint64_t v72 = 0;
  unint64_t v71 = 0;
  v70 = 0;
LABEL_136:
  __p[0] = 0;
  __p[1] = 0;
  v84[0] = v70;
  v84[1] = v71;
  v85[0] = v72;
  v85[1] = v73;
  int v86 = v5;
  if (v73)
  {
    unint64_t v74 = *(void *)(v72 + 8);
    if ((v71 & (v71 - 1)) != 0)
    {
      if (v74 >= v71) {
        v74 %= v71;
      }
    }
    else
    {
      v74 &= v71 - 1;
    }
    v70[v74] = v85;
    long long v88 = 0uLL;
  }
  siri::ontology::CompactIdToSetMap::initWithIdToSetMap(v77, v84);
  std::__hash_table<std::__hash_value_type<int,std::unordered_set<int>>,std::__unordered_map_hasher<int,std::__hash_value_type<int,std::unordered_set<int>>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,std::unordered_set<int>>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,std::unordered_set<int>>>>::~__hash_table((uint64_t)v84);
  int64x2_t v82 = v81;
  v83 = v80;
  siri::ontology::CompactHashMap::initWithKeyValueItems(v78, (uint64_t **)&v82);
  if (v81.i64[0]) {
    operator delete((void *)v81.i64[0]);
  }
  std::__hash_table<std::__hash_value_type<int,std::unordered_set<int>>,std::__unordered_map_hasher<int,std::__hash_value_type<int,std::unordered_set<int>>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,std::unordered_set<int>>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,std::unordered_set<int>>>>::~__hash_table((uint64_t)__p);
  return a1;
}

void sub_1CA39529C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, siri::ontology::CompactHashMap *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  std::__hash_table<std::__hash_value_type<int,std::unordered_set<int>>,std::__unordered_map_hasher<int,std::__hash_value_type<int,std::unordered_set<int>>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,std::unordered_set<int>>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,std::unordered_set<int>>>>::~__hash_table((uint64_t)va);
  if (a8) {
    operator delete(a8);
  }
  std::__hash_table<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>>>::~__hash_table(a2);
  boost::detail::adj_list_gen<boost::adjacency_list<boost::vecS,boost::vecS,boost::bidirectionalS,siri::ontology::UsoGraphNode *,siri::ontology::UsoGraphEdge,boost::no_property,boost::listS>,boost::vecS,boost::vecS,boost::bidirectionalS,siri::ontology::UsoGraphNode *,siri::ontology::UsoGraphEdge,boost::no_property,boost::listS>::config::stored_vertex::~stored_vertex(a4);
  siri::ontology::CompactHashMap::~CompactHashMap(a5);
  _Unwind_Resume(a1);
}

void std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int>(uint64_t a1, int a2, int a3)
{
  unint64_t v6 = a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = a2;
      if (v7 <= a2) {
        unint64_t v3 = a2 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & a2;
    }
    uint64_t v9 = *(uint64_t ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      for (i = *v9; i; i = (uint64_t *)*i)
      {
        unint64_t v11 = i[1];
        if (v11 == a2)
        {
          if (*((_DWORD *)i + 4) == a2) {
            return;
          }
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3) {
            break;
          }
        }
      }
    }
  }
  v12 = operator new(0x18uLL);
  void *v12 = 0;
  v12[1] = v6;
  *((_DWORD *)v12 + 4) = a3;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v7 || (float)(v14 * (float)v7) < v13)
  {
    BOOL v15 = 1;
    if (v7 >= 3) {
      BOOL v15 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v7);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__rehash<true>(a1, v18);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v19 = *(void *)a1;
  uint64_t v20 = *(void **)(*(void *)a1 + 8 * v3);
  if (v20)
  {
    void *v12 = *v20;
LABEL_38:
    *uint64_t v20 = v12;
    goto LABEL_39;
  }
  void *v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  *(void *)(v19 + 8 * v3) = a1 + 16;
  if (*v12)
  {
    unint64_t v21 = *(void *)(*v12 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v21 >= v7) {
        v21 %= v7;
      }
    }
    else
    {
      v21 &= v7 - 1;
    }
    uint64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
}

void sub_1CA395544(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::__hash_value_type<int,std::unordered_set<int>>,std::__unordered_map_hasher<int,std::__hash_value_type<int,std::unordered_set<int>>,std::hash<int>,std::equal_to<int>,true>,std::__unordered_map_equal<int,std::__hash_value_type<int,std::unordered_set<int>>,std::equal_to<int>,std::hash<int>,true>,std::allocator<std::__hash_value_type<int,std::unordered_set<int>>>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      unint64_t v3 = (void *)*v2;
      std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)(v2 + 3));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  long long v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      unint64_t v3 = (void *)*v2;
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::unique_ptr<siri::ontology::OntologyUnitName>>,0>((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  long long v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void siri::ontology::CompactHashMap::~CompactHashMap(siri::ontology::CompactHashMap *this)
{
  uint64_t v2 = (void *)*((void *)this + 6);
  if (v2)
  {
    *((void *)this + 7) = v2;
    operator delete(v2);
  }
  unint64_t v3 = (void *)*((void *)this + 3);
  if (v3)
  {
    *((void *)this + 4) = v3;
    operator delete(v3);
  }
  long long v4 = *(void **)this;
  if (*(void *)this)
  {
    *((void *)this + 1) = v4;
    operator delete(v4);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::unique_ptr<siri::ontology::OntologyUnitName>>,0>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    unint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<int,std::unordered_set<int>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<int,std::unordered_set<int>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)v1 + 24);
    }
    operator delete(v1);
  }
}

void *siri::ontology::UsoVocabManager::createCustomEntityName(siri::ontology *a1, unsigned __int8 *a2)
{
  long long v4 = (std::mutex *)siri::ontology::CLASS_MUTEX(a1);
  std::mutex::lock(v4);
  int v5 = std::__hash_table<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>>>::find<std::string>((void *)a1 + 17, a2);
  if (!v5) {
    operator new();
  }
  if (!v6) {
    __cxa_bad_cast();
  }
  std::mutex::unlock(v4);
  return v6;
}

void sub_1CA39589C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  MEMORY[0x1CB796510](v19, 0x10B3C405DBA31E4);
  std::mutex::unlock(v18);
  _Unwind_Resume(a1);
}

void sub_1CA395908(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CA39596C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  __cxa_end_catch();
  JUMPOUT(0x1CA3959A4);
}

uint64_t siri::ontology::CLASS_MUTEX(siri::ontology *this)
{
  {
    operator new();
  }
  return siri::ontology::CLASS_MUTEX(void)::classMutex;
}

void sub_1CA395A48(_Unwind_Exception *a1)
{
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>>>::find<std::string>(void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  for (i = *v10; i; i = *(unsigned __int8 **)i)
  {
    unint64_t v12 = *((void *)i + 1);
    if (v12 == v6)
    {
      if (std::equal_to<std::string>::operator()[abi:ne180100](i + 16, a2)) {
        return i;
      }
    }
    else
    {
      if (v8 > 1)
      {
        if (v12 >= *(void *)&v5) {
          v12 %= *(void *)&v5;
        }
      }
      else
      {
        v12 &= *(void *)&v5 - 1;
      }
      if (v12 != v9) {
        return 0;
      }
    }
  }
  return i;
}

{
  unint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 **v10;
  unsigned __int8 *i;
  unint64_t v12;

  unint64_t v4 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  for (i = *v10; i; i = *(unsigned __int8 **)i)
  {
    unint64_t v12 = *((void *)i + 1);
    if (v6 == v12)
    {
      if (std::equal_to<std::string>::operator()[abi:ne180100](i + 16, a2)) {
        return i;
      }
    }
    else
    {
      if (v8 > 1)
      {
        if (v12 >= *(void *)&v5) {
          v12 %= *(void *)&v5;
        }
      }
      else
      {
        v12 &= *(void *)&v5 - 1;
      }
      if (v12 != v9) {
        return 0;
      }
    }
  }
  return i;
}

void siri::ontology::OntologyNodeName::OntologyNodeName(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  *(void *)&long long v5 = a3[1];
  *(void *)((char *)&v5 + 7) = *(uint64_t *)((char *)a3 + 15);
  char v4 = *((unsigned char *)a3 + 23);
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  *(void *)(a1 + 23) = *(void *)((char *)&v5 + 7);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 31) = v4;
  *(_DWORD *)(a1 + 32) = a2;
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)a1 = &unk_1F246D418;
  siri::ontology::OntologyUnitMetaData<2ul,4ul>::OntologyUnitMetaData(a1 + 40);
}

void sub_1CA395C08(_Unwind_Exception *exception_object)
{
  *(void *)uint64_t v1 = &unk_1F246D440;
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*(void **)(v1 + 8));
  }
  _Unwind_Resume(exception_object);
}

void std::__hash_table<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>>>::__emplace_unique_key_args<std::string,std::string,std::unique_ptr<siri::ontology::OntologyNodeName>>(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v9 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    float v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](i + 16, a2)) {
            return;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  unint64_t v17 = (void *)(a1 + 16);
  size_t v18 = operator new(0x30uLL);
  v30[0] = v18;
  v30[1] = a1 + 16;
  *size_t v18 = 0;
  v18[1] = v10;
  *((_OWORD *)v18 + 1) = *(_OWORD *)a3;
  uint64_t v19 = *(void *)(a3 + 16);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  uint64_t v20 = *a4;
  *a4 = 0;
  v18[4] = v19;
  v18[5] = v20;
  char v31 = 1;
  float v21 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v22 = *(float *)(a1 + 32);
  if (!v11 || (float)(v22 * (float)v11) < v21)
  {
    BOOL v23 = 1;
    if (v11 >= 3) {
      BOOL v23 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v24 = v23 | (2 * v11);
    unint64_t v25 = vcvtps_u32_f32(v21 / v22);
    if (v24 <= v25) {
      size_t v26 = v25;
    }
    else {
      size_t v26 = v24;
    }
    std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__rehash<true>(a1, v26);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v27 = *(void *)a1;
  v28 = *(void **)(*(void *)a1 + 8 * v4);
  if (v28)
  {
    *size_t v18 = *v28;
LABEL_38:
    void *v28 = v18;
    goto LABEL_39;
  }
  *size_t v18 = *v17;
  void *v17 = v18;
  *(void *)(v27 + 8 * v4) = v17;
  if (*v18)
  {
    unint64_t v29 = *(void *)(*v18 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v29 >= v11) {
        v29 %= v11;
      }
    }
    else
    {
      v29 &= v11 - 1;
    }
    v28 = (void *)(*(void *)a1 + 8 * v29);
    goto LABEL_38;
  }
LABEL_39:
  v30[0] = 0;
  ++*(void *)(a1 + 24);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,void *>>>>::reset[abi:ne180100]((uint64_t)v30);
}

void sub_1CA395E94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

unint64_t std::__string_hash<char>::operator()[abi:ne180100](uint64_t a1)
{
  int v1 = *(char *)(a1 + 23);
  unint64_t v2 = *(void *)(a1 + 8);
  BOOL v3 = v1 < 0;
  if (v1 >= 0) {
    unint64_t v4 = (uint64_t *)a1;
  }
  else {
    unint64_t v4 = *(uint64_t **)a1;
  }
  if (!v3) {
    unint64_t v2 = *(unsigned __int8 *)(a1 + 23);
  }
  if (v2 > 0x20)
  {
    if (v2 > 0x40)
    {
      unint64_t v34 = 0x9DDFEA08EB382D69;
      uint64_t v44 = *(uint64_t *)((char *)v4 + v2 - 48);
      uint64_t v43 = *(uint64_t *)((char *)v4 + v2 - 40);
      uint64_t v45 = *(uint64_t *)((char *)v4 + v2 - 24);
      uint64_t v47 = *(uint64_t *)((char *)v4 + v2 - 64);
      uint64_t v46 = *(uint64_t *)((char *)v4 + v2 - 56);
      uint64_t v48 = *(uint64_t *)((char *)v4 + v2 - 16);
      uint64_t v49 = *(uint64_t *)((char *)v4 + v2 - 8);
      unint64_t v50 = v46 + v48;
      unint64_t v51 = 0x9DDFEA08EB382D69
          * (v45 ^ ((0x9DDFEA08EB382D69 * (v45 ^ (v44 + v2))) >> 47) ^ (0x9DDFEA08EB382D69 * (v45 ^ (v44 + v2))));
      unint64_t v52 = 0x9DDFEA08EB382D69 * (v51 ^ (v51 >> 47));
      unint64_t v53 = v47 + v2 + v46 + v44;
      uint64_t v54 = v53 + v43;
      unint64_t v55 = __ROR8__(v53, 44) + v47 + v2 + __ROR8__(v43 + v47 + v2 - 0x622015F714C7D297 * (v51 ^ (v51 >> 47)), 21);
      uint64_t v56 = v46 + v48 + *(uint64_t *)((char *)v4 + v2 - 32) - 0x4B6D499041670D8DLL;
      uint64_t v57 = v56 + v45 + v48;
      uint64_t v58 = __ROR8__(v57, 44);
      uint64_t v59 = v57 + v49;
      uint64_t v60 = v58 + v56 + __ROR8__(v56 + v43 + v49, 21);
      uint64_t v62 = *v4;
      uint64_t v61 = v4 + 4;
      unint64_t v63 = v62 - 0x4B6D499041670D8DLL * v43;
      uint64_t v64 = -(uint64_t)((v2 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        uint64_t v65 = *(v61 - 3);
        uint64_t v66 = v63 + v54 + v50 + v65;
        uint64_t v67 = v61[2];
        uint64_t v68 = v61[3];
        uint64_t v69 = v61[1];
        unint64_t v50 = v69 + v54 - 0x4B6D499041670D8DLL * __ROR8__(v50 + v55 + v67, 42);
        uint64_t v70 = v52 + v59;
        uint64_t v71 = *(v61 - 2);
        uint64_t v72 = *(v61 - 1);
        uint64_t v73 = *(v61 - 4) - 0x4B6D499041670D8DLL * v55;
        uint64_t v74 = v73 + v59 + v72;
        uint64_t v75 = v73 + v65 + v71;
        uint64_t v54 = v75 + v72;
        uint64_t v76 = __ROR8__(v75, 44) + v73;
        unint64_t v77 = (0xB492B66FBE98F273 * __ROR8__(v66, 37)) ^ v60;
        unint64_t v63 = 0xB492B66FBE98F273 * __ROR8__(v70, 33);
        unint64_t v55 = v76 + __ROR8__(v74 + v77, 21);
        unint64_t v78 = v63 + v60 + *v61;
        uint64_t v59 = v78 + v69 + v67 + v68;
        uint64_t v60 = __ROR8__(v78 + v69 + v67, 44) + v78 + __ROR8__(v50 + v71 + v78 + v68, 21);
        v61 += 8;
        unint64_t v52 = v77;
        v64 += 64;
      }
      while (v64);
      unint64_t v79 = 0x9DDFEA08EB382D69
          * (v59 ^ ((0x9DDFEA08EB382D69 * (v59 ^ v54)) >> 47) ^ (0x9DDFEA08EB382D69 * (v59 ^ v54)));
      unint64_t v80 = v63
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v60 ^ ((0x9DDFEA08EB382D69 * (v60 ^ v55)) >> 47) ^ (0x9DDFEA08EB382D69 * (v60 ^ v55)))) ^ ((0x9DDFEA08EB382D69 * (v60 ^ ((0x9DDFEA08EB382D69 * (v60 ^ v55)) >> 47) ^ (0x9DDFEA08EB382D69 * (v60 ^ v55)))) >> 47));
      unint64_t v81 = 0x9DDFEA08EB382D69
          * (v80 ^ (v77 - 0x4B6D499041670D8DLL * (v50 ^ (v50 >> 47)) - 0x622015F714C7D297 * (v79 ^ (v79 >> 47))));
      unint64_t v35 = 0x9DDFEA08EB382D69 * (v80 ^ (v81 >> 47) ^ v81);
    }
    else
    {
      unint64_t v9 = (char *)v4 + v2;
      uint64_t v10 = *(uint64_t *)((char *)v4 + v2 - 16);
      uint64_t v11 = *(uint64_t *)((char *)v4 + v2 - 8);
      uint64_t v12 = v4[1];
      uint64_t v13 = *v4 - 0x3C5A37A36834CED9 * (v10 + v2);
      unint64_t v16 = v4 + 2;
      uint64_t v14 = v4[2];
      uint64_t v15 = v16[1];
      uint64_t v17 = __ROR8__(v13 + v15, 52);
      uint64_t v18 = __ROR8__(v13, 37);
      uint64_t v19 = v13 + v12;
      uint64_t v20 = __ROR8__(v19, 7);
      uint64_t v21 = v19 + v14;
      uint64_t v22 = v20 + v18;
      uint64_t v23 = *((void *)v9 - 4) + v14;
      uint64_t v24 = v11 + v15;
      uint64_t v25 = __ROR8__(v24 + v23, 52);
      uint64_t v26 = v22 + v17;
      uint64_t v27 = __ROR8__(v23, 37);
      uint64_t v28 = *((void *)v9 - 3) + v23;
      uint64_t v29 = __ROR8__(v28, 7);
      uint64_t v30 = v26 + __ROR8__(v21, 31);
      uint64_t v31 = v28 + v10;
      uint64_t v32 = v31 + v24;
      uint64_t v33 = v21 + v15 + v27 + v29 + v25 + __ROR8__(v31, 31);
      unint64_t v34 = 0x9AE16A3B2F90404FLL;
      unint64_t v35 = v30
          - 0x3C5A37A36834CED9
          * ((0xC3A5C85C97CB3127 * (v32 + v30) - 0x651E95C4D06FBFB1 * v33) ^ ((0xC3A5C85C97CB3127 * (v32 + v30)
                                                                                 - 0x651E95C4D06FBFB1 * v33) >> 47));
    }
    return (v35 ^ (v35 >> 47)) * v34;
  }
  else
  {
    if (v2 > 0x10)
    {
      uint64_t v36 = v4[1];
      unint64_t v37 = 0xB492B66FBE98F273 * *v4;
      unint64_t v38 = 0x9AE16A3B2F90404FLL * *(uint64_t *)((char *)v4 + v2 - 8);
      uint64_t v39 = __ROR8__(v38, 30) + __ROR8__(v37 - v36, 43);
      unint64_t v40 = v37 + v2 + __ROR8__(v36 ^ 0xC949D7C7509E6557, 20) - v38;
      unint64_t v41 = 0x9DDFEA08EB382D69 * (v40 ^ (v39 - 0x3C5A37A36834CED9 * *(uint64_t *)((char *)v4 + v2 - 16)));
      unint64_t v42 = v40 ^ (v41 >> 47) ^ v41;
      return 0x9DDFEA08EB382D69 * ((0x9DDFEA08EB382D69 * v42) ^ ((0x9DDFEA08EB382D69 * v42) >> 47));
    }
    if (v2 >= 9)
    {
      uint64_t v5 = *v4;
      uint64_t v6 = *(uint64_t *)((char *)v4 + v2 - 8);
      uint64_t v7 = __ROR8__(v6 + v2, v2);
      return (0x9DDFEA08EB382D69
            * ((0x9DDFEA08EB382D69
              * (v7 ^ ((0x9DDFEA08EB382D69 * (v7 ^ v5)) >> 47) ^ (0x9DDFEA08EB382D69 * (v7 ^ v5)))) ^ ((0x9DDFEA08EB382D69 * (v7 ^ ((0x9DDFEA08EB382D69 * (v7 ^ v5)) >> 47) ^ (0x9DDFEA08EB382D69 * (v7 ^ v5)))) >> 47))) ^ v6;
    }
    if (v2 >= 4)
    {
      int v82 = *(_DWORD *)v4;
      uint64_t v83 = *(unsigned int *)((char *)v4 + v2 - 4);
      unint64_t v84 = 0x9DDFEA08EB382D69 * ((v2 + (8 * v82)) ^ v83);
      unint64_t v42 = v83 ^ (v84 >> 47) ^ v84;
      return 0x9DDFEA08EB382D69 * ((0x9DDFEA08EB382D69 * v42) ^ ((0x9DDFEA08EB382D69 * v42) >> 47));
    }
    unint64_t result = 0x9AE16A3B2F90404FLL;
    if (v2)
    {
      unint64_t v85 = (0xC949D7C7509E6557 * (v2 + 4 * *((unsigned __int8 *)v4 + v2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                     * (*(unsigned __int8 *)v4 | ((unint64_t)*((unsigned __int8 *)v4 + (v2 >> 1)) << 8)));
      return 0x9AE16A3B2F90404FLL * (v85 ^ (v85 >> 47));
    }
  }
  return result;
}

BOOL std::equal_to<std::string>::operator()[abi:ne180100](unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) == 0;
  }
  if (!a1[23]) {
    return 1;
  }
  uint64_t v6 = v2 - 1;
  do
  {
    int v8 = *a1++;
    int v7 = v8;
    int v10 = *a2++;
    int v9 = v10;
    BOOL v12 = v6-- != 0;
    BOOL v13 = v7 == v9;
    BOOL v14 = v7 == v9;
  }
  while (v13 && v12);
  return v14;
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  int v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::unique_ptr<siri::ontology::OntologyUnitName>>,0>((uint64_t)v1 + 16);
    }
    operator delete(v1);
  }
}

void *siri::ontology::UsoVocabManager::createCustomOperatorName(siri::ontology *a1, unsigned __int8 *a2)
{
  uint64_t v4 = (std::mutex *)siri::ontology::CLASS_MUTEX(a1);
  std::mutex::lock(v4);
  int v5 = std::__hash_table<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>>>::find<std::string>((void *)a1 + 17, a2);
  if (!v5) {
    operator new();
  }
  if (!v6) {
    __cxa_bad_cast();
  }
  std::mutex::unlock(v4);
  return v6;
}

void sub_1CA396550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  MEMORY[0x1CB796510](v19, 0x10B3C405DBA31E4);
  std::mutex::unlock(v18);
  _Unwind_Resume(a1);
}

void sub_1CA3965BC(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CA396620(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  __cxa_end_catch();
  JUMPOUT(0x1CA396658);
}

void *siri::ontology::UsoVocabManager::createCustomVerbName(siri::ontology *a1, unsigned __int8 *a2)
{
  uint64_t v4 = (std::mutex *)siri::ontology::CLASS_MUTEX(a1);
  std::mutex::lock(v4);
  int v5 = std::__hash_table<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>>>::find<std::string>((void *)a1 + 17, a2);
  if (!v5) {
    operator new();
  }
  if (!v6) {
    __cxa_bad_cast();
  }
  std::mutex::unlock(v4);
  return v6;
}

void sub_1CA396B74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  MEMORY[0x1CB796510](v22, 0x10B3C40A3033806);
  std::mutex::unlock(a9);
  _Unwind_Resume(a1);
}

void sub_1CA396C6C()
{
}

void sub_1CA396CD0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  __cxa_end_catch();
  JUMPOUT(0x1CA396C5CLL);
}

void sub_1CA396D0C(void *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  JUMPOUT(0x1CA396C64);
}

void *siri::ontology::UsoVocabManager::createCustomEdgeName(siri::ontology *a1, unsigned __int8 *a2)
{
  uint64_t v4 = (std::mutex *)siri::ontology::CLASS_MUTEX(a1);
  std::mutex::lock(v4);
  int v5 = std::__hash_table<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>>>::find<std::string>((void *)a1 + 17, a2);
  if (!v5) {
    operator new();
  }
  if (!v6) {
    __cxa_bad_cast();
  }
  std::mutex::unlock(v4);
  return v6;
}

void sub_1CA39709C(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v2, 0x1093C4057897759);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CA3970BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  std::mutex::unlock(v5);
  _Unwind_Resume(a1);
}

void sub_1CA3970CC(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CA3970FC(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1CA397160(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  __cxa_end_catch();
  JUMPOUT(0x1CA397198);
}

uint64_t siri::ontology::UsoVocabManager::getOntologyName<siri::ontology::OntologyNodeName>(uint64_t **a1, unsigned int a2)
{
  if (a2)
  {
    uint64_t v2 = **a1;
    if (a2 < (unint64_t)(((*a1)[1] - v2) >> 3))
    {
      if (*(void *)(v2 + 8 * a2)) {
        operator new();
      }
    }
  }
  return 0;
}

void sub_1CA3972C8(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 40))(v1);
  _Unwind_Resume(a1);
}

void siri::ontology::IsNameTypeVisitor<siri::ontology::OntologyNodeName>::~IsNameTypeVisitor()
{
}

uint64_t siri::ontology::NoOpONameVisitor::visit(siri::ontology::NoOpONameVisitor *this, const siri::ontology::OntologyEdgeName *a2)
{
  return 0;
}

uint64_t siri::ontology::NoOpONameVisitor::visit(siri::ontology::NoOpONameVisitor *this, const siri::ontology::OntologyTaskName *a2)
{
  return 0;
}

uint64_t siri::ontology::NoOpONameVisitor::visit(siri::ontology::NoOpONameVisitor *this, const siri::ontology::OntologyVerbName *a2)
{
  return 0;
}

uint64_t siri::ontology::IsNameTypeVisitor<siri::ontology::OntologyNodeName>::visit(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = a2;
  return 1;
}

void siri::ontology::UsoVocabManager::getNodeName()
{
}

void siri::ontology::getOntologyNameInternal<siri::ontology::OntologyNodeName>()
{
}

void sub_1CA397448(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 40))(v1);
  _Unwind_Resume(a1);
}

void siri::ontology::getCustomOntologyNameInternal<siri::ontology::OntologyNodeName>(siri::ontology *a1)
{
  uint64_t v1 = (std::mutex *)siri::ontology::CLASS_MUTEX(a1);
  std::mutex::lock(v1);
  operator new();
}

void sub_1CA397578(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::UsoVocabManager::getVerbName(uint64_t **this, unsigned int a2)
{
  if (a2)
  {
    uint64_t v2 = **this;
    if (a2 < (unint64_t)(((*this)[1] - v2) >> 3))
    {
      if (*(void *)(v2 + 8 * a2)) {
        operator new();
      }
    }
  }
  return 0;
}

void sub_1CA3977D0(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 40))(v1);
  _Unwind_Resume(a1);
}

void siri::ontology::IsNameTypeVisitor<siri::ontology::OntologyVerbName>::~IsNameTypeVisitor()
{
}

uint64_t siri::ontology::IsNameTypeVisitor<siri::ontology::OntologyVerbName>::visit(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = a2;
  return 1;
}

uint64_t siri::ontology::NoOpONameVisitor::visit(siri::ontology::NoOpONameVisitor *this, const siri::ontology::OntologyNodeName *a2)
{
  return 0;
}

void siri::ontology::UsoVocabManager::getVerbName()
{
}

void sub_1CA39792C(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 40))(v1);
  _Unwind_Resume(a1);
}

void siri::ontology::getCustomOntologyNameInternal<siri::ontology::OntologyVerbName>(siri::ontology *a1)
{
  uint64_t v1 = (std::mutex *)siri::ontology::CLASS_MUTEX(a1);
  std::mutex::lock(v1);
  operator new();
}

void sub_1CA397A5C(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::UsoVocabManager::getEdgeName(uint64_t **this, unsigned int a2)
{
  if (a2)
  {
    uint64_t v2 = **this;
    if (a2 < (unint64_t)(((*this)[1] - v2) >> 3))
    {
      if (*(void *)(v2 + 8 * a2)) {
        operator new();
      }
    }
  }
  return 0;
}

void sub_1CA397BB8(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 40))(v1);
  _Unwind_Resume(a1);
}

void siri::ontology::IsNameTypeVisitor<siri::ontology::OntologyEdgeName>::~IsNameTypeVisitor()
{
}

uint64_t siri::ontology::IsNameTypeVisitor<siri::ontology::OntologyEdgeName>::visit(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = a2;
  return 1;
}

void siri::ontology::UsoVocabManager::getEdgeName()
{
}

void sub_1CA397D0C(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 40))(v1);
  _Unwind_Resume(a1);
}

void siri::ontology::getCustomOntologyNameInternal<siri::ontology::OntologyEdgeName>(siri::ontology *a1)
{
  uint64_t v1 = (std::mutex *)siri::ontology::CLASS_MUTEX(a1);
  std::mutex::lock(v1);
  operator new();
}

void sub_1CA397E3C(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void siri::ontology::UsoVocabManager::getCustomNodeName(uint64_t a1, siri::ontology *a2)
{
}

void siri::ontology::UsoVocabManager::getCustomVerbName(uint64_t a1, siri::ontology *a2)
{
}

void siri::ontology::UsoVocabManager::getCustomEdgeName(uint64_t a1, siri::ontology *a2)
{
}

void siri::ontology::UsoVocabManager::getAllEntityNameStrings(const void ****this@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_DWORD *)(a2 + 32) = 1065353216;
  uint64_t v4 = **this;
  for (i = (*this)[1]; v4 != i; ++v4)
  {
    if (*v4)
    {
      if (v6)
      {
        if (*((_DWORD *)v6 + 8) == 2) {
          std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t *)a2, v6 + 8, (uint64_t)(v6 + 8));
        }
      }
    }
  }
  for (j = this[19]; j; j = (const void ***)*j)
  {
    int v8 = j[5];
    if (v8)
    {
      if (v9)
      {
        if (v9[8] == 2) {
          std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t *)a2, (unsigned __int8 *)j + 16, (uint64_t)(j + 2));
        }
      }
    }
  }
}

void sub_1CA398000(_Unwind_Exception *a1)
{
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v7 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)a2);
  unint64_t v8 = v7;
  unint64_t v9 = a1[1];
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v9) {
        unint64_t v3 = v7 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v7;
    }
    BOOL v12 = *(unsigned __int8 ***)(*a1 + 8 * v3);
    if (v12)
    {
      for (i = *v12; i; i = *(unsigned __int8 **)i)
      {
        unint64_t v14 = *((void *)i + 1);
        if (v14 == v8)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](i + 16, a2)) {
            return;
          }
        }
        else
        {
          if (v11 > 1)
          {
            if (v14 >= v9) {
              v14 %= v9;
            }
          }
          else
          {
            v14 &= v9 - 1;
          }
          if (v14 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t v15 = operator new(0x28uLL);
  void *v15 = 0;
  v15[1] = v8;
  unint64_t v16 = (std::string *)(v15 + 2);
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v16, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v16->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    v15[4] = *(void *)(a3 + 16);
  }
  uint64_t v17 = a1 + 2;
  float v18 = (float)(unint64_t)(a1[3] + 1);
  float v19 = *((float *)a1 + 8);
  if (!v9 || (float)(v19 * (float)v9) < v18)
  {
    BOOL v20 = 1;
    if (v9 >= 3) {
      BOOL v20 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v9);
    unint64_t v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22) {
      int8x8_t prime = (int8x8_t)v22;
    }
    else {
      int8x8_t prime = (int8x8_t)v21;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
    }
    unint64_t v9 = a1[1];
    if (*(void *)&prime > v9) {
      goto LABEL_33;
    }
    if (*(void *)&prime < v9)
    {
      unint64_t v30 = vcvtps_u32_f32((float)(unint64_t)a1[3] / *((float *)a1 + 8));
      if (v9 < 3 || (uint8x8_t v31 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v31.i16[0] = vaddlv_u8(v31), v31.u32[0] > 1uLL))
      {
        unint64_t v30 = std::__next_prime(v30);
      }
      else
      {
        uint64_t v32 = 1 << -(char)__clz(v30 - 1);
        if (v30 >= 2) {
          unint64_t v30 = v32;
        }
      }
      if (*(void *)&prime <= v30) {
        int8x8_t prime = (int8x8_t)v30;
      }
      if (*(void *)&prime >= v9)
      {
        unint64_t v9 = a1[1];
      }
      else
      {
        if (prime)
        {
LABEL_33:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          uint64_t v24 = operator new(8 * *(void *)&prime);
          uint64_t v25 = (void *)*a1;
          *a1 = (uint64_t)v24;
          if (v25) {
            operator delete(v25);
          }
          uint64_t v26 = 0;
          a1[1] = (uint64_t)prime;
          do
            *(void *)(*a1 + 8 * v26++) = 0;
          while (*(void *)&prime != v26);
          uint64_t v27 = (void *)*v17;
          if (*v17)
          {
            unint64_t v28 = v27[1];
            uint8x8_t v29 = (uint8x8_t)vcnt_s8(prime);
            v29.i16[0] = vaddlv_u8(v29);
            if (v29.u32[0] > 1uLL)
            {
              if (v28 >= *(void *)&prime) {
                v28 %= *(void *)&prime;
              }
            }
            else
            {
              v28 &= *(void *)&prime - 1;
            }
            *(void *)(*a1 + 8 * v28) = v17;
            uint64_t v33 = (void *)*v27;
            if (*v27)
            {
              do
              {
                unint64_t v34 = v33[1];
                if (v29.u32[0] > 1uLL)
                {
                  if (v34 >= *(void *)&prime) {
                    v34 %= *(void *)&prime;
                  }
                }
                else
                {
                  v34 &= *(void *)&prime - 1;
                }
                if (v34 != v28)
                {
                  if (!*(void *)(*a1 + 8 * v34))
                  {
                    *(void *)(*a1 + 8 * v34) = v27;
                    goto LABEL_58;
                  }
                  void *v27 = *v33;
                  *uint64_t v33 = **(void **)(*a1 + 8 * v34);
                  **(void **)(*a1 + 8 * v34) = v33;
                  uint64_t v33 = v27;
                }
                unint64_t v34 = v28;
LABEL_58:
                uint64_t v27 = v33;
                uint64_t v33 = (void *)*v33;
                unint64_t v28 = v34;
              }
              while (v33);
            }
          }
          unint64_t v9 = (unint64_t)prime;
          goto LABEL_62;
        }
        unint64_t v38 = (void *)*a1;
        *a1 = 0;
        if (v38) {
          operator delete(v38);
        }
        unint64_t v9 = 0;
        a1[1] = 0;
      }
    }
LABEL_62:
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v35 = *a1;
  uint64_t v36 = *(void **)(*a1 + 8 * v3);
  if (v36)
  {
    void *v15 = *v36;
LABEL_75:
    *uint64_t v36 = v15;
    goto LABEL_76;
  }
  void *v15 = *v17;
  void *v17 = v15;
  *(void *)(v35 + 8 * v3) = v17;
  if (*v15)
  {
    unint64_t v37 = *(void *)(*v15 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v37 >= v9) {
        v37 %= v9;
      }
    }
    else
    {
      v37 &= v9 - 1;
    }
    uint64_t v36 = (void *)(*a1 + 8 * v37);
    goto LABEL_75;
  }
LABEL_76:
  ++a1[3];
}

void sub_1CA398424(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](0, v1);
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      unint64_t v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](char a1, void **__p)
{
  if (a1)
  {
    if (*((char *)__p + 39) < 0) {
      operator delete(__p[2]);
    }
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

void siri::ontology::UsoVocabManager::getSuperclassesOf(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  siri::ontology::getOntologyNameInternal<siri::ontology::OntologyNodeName>();
}

void sub_1CA398580(_Unwind_Exception *a1)
{
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void siri::ontology::UsoVocabManager::getNameStringsByIds(void **a1, int *a2, uint64_t a3, uint64_t *a4)
{
  if (a3 << 32)
  {
    uint64_t v7 = 4 * (int)a3;
    do
    {
      unint64_t v8 = *(unsigned __int8 **)(**a1 + 8 * *a2);
      if (v8) {
      std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(a4, v8 + 8, (uint64_t)(v8 + 8));
      }
      ++a2;
      v7 -= 4;
    }
    while (v7);
  }
}

void siri::ontology::UsoVocabManager::getAncestorsOf(uint64_t **this@<X0>, const siri::ontology::OntologyNodeName *a2@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_DWORD *)(a3 + 32) = 1065353216;
  uint64_t v4 = *((int *)a2 + 16);
  uint64_t v5 = *((int *)a2 + 17);
  if (v5 != v4)
  {
    uint64_t v7 = (unsigned int *)(*((void *)a2 + 6) + 4 * v4);
    uint64_t v8 = 4 * v5 - 4 * v4;
    do
    {
      uint64_t v9 = siri::ontology::UsoVocabManager::getOntologyName<siri::ontology::OntologyNodeName>(this, *v7);
      siri::ontology::UsoVocabManager::traverseAncestors(this, v9, a3);
      ++v7;
      v8 -= 4;
    }
    while (v8);
  }
}

void sub_1CA3986DC(_Unwind_Exception *a1)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void siri::ontology::UsoVocabManager::traverseAncestors(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int>(a3, *(_DWORD *)(a2 + 36), *(_DWORD *)(a2 + 36));
  uint64_t v6 = *(int *)(a2 + 64);
  uint64_t v7 = *(int *)(a2 + 68);
  if (v7 != v6)
  {
    uint64_t v8 = (unsigned int *)(*(void *)(a2 + 48) + 4 * v6);
    uint64_t v9 = 4 * v7 - 4 * v6;
    do
    {
      unsigned int v10 = *v8++;
      uint64_t v11 = siri::ontology::UsoVocabManager::getOntologyName<siri::ontology::OntologyNodeName>(a1, v10);
      siri::ontology::UsoVocabManager::traverseAncestors(a1, v11, a3);
      v9 -= 4;
    }
    while (v9);
  }
}

void siri::ontology::UsoVocabManager::getAncestorsOf(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  siri::ontology::getOntologyNameInternal<siri::ontology::OntologyNodeName>();
}

void sub_1CA3987F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)va);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v2);
  _Unwind_Resume(a1);
}

void siri::ontology::UsoVocabManager::getNameStringsByIds(void **a1, uint64_t a2, uint64_t *a3)
{
  for (i = *(uint64_t ***)(a2 + 16); i; i = (uint64_t **)*i)
  {
    uint64_t v6 = *(unsigned __int8 **)(**a1 + 8 * *((int *)i + 4));
    if (v6) {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(a3, v6 + 8, (uint64_t)(v6 + 8));
    }
  }
}

uint64_t siri::ontology::UsoVocabManager::getSubclassesOf(siri::ontology::UsoVocabManager *this, const siri::ontology::OntologyNodeName *a2)
{
  return siri::ontology::CompactIdToSetMap::getSetForKey((siri::ontology::UsoVocabManager *)((char *)this + 80), *((_DWORD *)a2 + 9));
}

void siri::ontology::UsoVocabManager::getSubclassesOf(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  siri::ontology::getOntologyNameInternal<siri::ontology::OntologyNodeName>();
}

void sub_1CA398954(_Unwind_Exception *a1)
{
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

unsigned int *siri::ontology::UsoVocabManager::getDescendantsOf@<X0>(siri::ontology::UsoVocabManager *this@<X0>, const siri::ontology::OntologyNodeName *a2@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_DWORD *)(a3 + 32) = 1065353216;
  unint64_t result = (unsigned int *)siri::ontology::CompactIdToSetMap::getSetForKey((siri::ontology::UsoVocabManager *)((char *)this + 80), *((_DWORD *)a2 + 9));
  if (v6 << 32)
  {
    uint64_t v7 = result;
    uint64_t v8 = 4 * (int)v6;
    do
    {
      unint64_t result = (unsigned int *)siri::ontology::UsoVocabManager::traverseDescendants((uint64_t)this, *v7++, a3);
      v8 -= 4;
    }
    while (v8);
  }
  return result;
}

void sub_1CA3989E4(_Unwind_Exception *a1)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::UsoVocabManager::traverseDescendants(uint64_t a1, unsigned int a2, uint64_t a3)
{
  std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int const&>(a3, a2, a2);
  uint64_t result = siri::ontology::CompactIdToSetMap::getSetForKey((siri::ontology::CompactIdToSetMap *)(a1 + 80), a2);
  if (v7 << 32)
  {
    uint64_t v8 = (unsigned int *)result;
    uint64_t v9 = 4 * (int)v7;
    do
    {
      unsigned int v10 = *v8++;
      uint64_t result = siri::ontology::UsoVocabManager::traverseDescendants(a1, v10, a3);
      v9 -= 4;
    }
    while (v9);
  }
  return result;
}

void siri::ontology::UsoVocabManager::getDescendantsOf(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  siri::ontology::getOntologyNameInternal<siri::ontology::OntologyNodeName>();
}

void sub_1CA398AF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)va);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v2);
  _Unwind_Resume(a1);
}

void siri::ontology::UsoVocabManager::resetCustomNames(siri::ontology::UsoVocabManager *this)
{
  uint64_t v2 = (std::mutex *)siri::ontology::CLASS_MUTEX(this);
  std::mutex::lock(v2);
  uint64_t v3 = *((void *)this + 17);
  unint64_t v4 = *((void *)this + 18);
  *((void *)this + 17) = 0;
  *((void *)this + 18) = 0;
  uint64_t v6 = *((void *)this + 19);
  uint64_t v5 = *((void *)this + 20);
  int v7 = *((_DWORD *)this + 42);
  v9[0] = v3;
  v9[1] = v4;
  *((void *)this + 19) = 0;
  *((void *)this + 20) = 0;
  v10[0] = v6;
  v10[1] = v5;
  *((_DWORD *)this + 42) = 1065353216;
  int v11 = v7;
  if (v5)
  {
    unint64_t v8 = *(void *)(v6 + 8);
    if ((v4 & (v4 - 1)) != 0)
    {
      if (v8 >= v4) {
        v8 %= v4;
      }
    }
    else
    {
      v8 &= v4 - 1;
    }
    *(void *)(v3 + 8 * v8) = v10;
  }
  std::__hash_table<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>>>::~__hash_table((uint64_t)v9);
  std::mutex::unlock(v2);
}

uint64_t siri::ontology::operator<<()
{
  v0 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v0, (uint64_t)".", 1);
  uint64_t v1 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)".", 1);
  return std::ostream::operator<<();
}

BOOL siri::ontology::operator==(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(_DWORD *)(a1 + 8) == (unint64_t)*(unsigned int *)(a2 + 8);
}

BOOL siri::ontology::operator!=(_DWORD *a1, _DWORD *a2)
{
  return *a1 != *a2 || a1[1] != a2[1] || a1[2] != a2[2];
}

BOOL siri::ontology::operator>(_DWORD *a1, _DWORD *a2)
{
  BOOL v2 = *a1 > *a2;
  if (*a1 == *a2)
  {
    unsigned int v3 = a1[1];
    unsigned int v4 = a2[1];
    BOOL v2 = v3 > v4;
    if (v3 == v4) {
      return a1[2] > a2[2];
    }
  }
  return v2;
}

uint64_t siri::ontology::operator<=(_DWORD *a1, _DWORD *a2)
{
  BOOL v2 = *a1 > *a2;
  if (*a1 == *a2)
  {
    unsigned int v3 = a1[1];
    unsigned int v4 = a2[1];
    BOOL v2 = v3 > v4;
    if (v3 == v4) {
      BOOL v2 = a1[2] > a2[2];
    }
  }
  int v5 = v2;
  return v5 ^ 1u;
}

BOOL siri::ontology::operator<(_DWORD *a1, _DWORD *a2)
{
  BOOL v2 = *a1 >= *a2;
  if (*a1 == *a2)
  {
    unsigned int v3 = a1[1];
    unsigned int v4 = a2[1];
    BOOL v2 = v3 >= v4;
    if (v3 == v4) {
      BOOL v2 = a1[2] >= a2[2];
    }
  }
  return !v2;
}

uint64_t siri::ontology::operator>=(_DWORD *a1, _DWORD *a2)
{
  BOOL v2 = *a1 >= *a2;
  if (*a1 == *a2)
  {
    unsigned int v3 = a1[1];
    unsigned int v4 = a2[1];
    BOOL v2 = v3 >= v4;
    if (v3 == v4) {
      BOOL v2 = a1[2] >= a2[2];
    }
  }
  int v5 = !v2;
  return v5 ^ 1u;
}

uint64_t siri::ontology::formatExceptionMessageWithLocation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = MEMORY[0x1E4FBA488] + 104;
  v40[0] = MEMORY[0x1E4FBA488] + 104;
  uint64_t v8 = MEMORY[0x1E4FBA488] + 64;
  uint64_t v35 = MEMORY[0x1E4FBA488] + 64;
  uint64_t v9 = (void *)MEMORY[0x1E4FBA408];
  uint64_t v10 = *(void *)(MEMORY[0x1E4FBA408] + 24);
  v34[0] = *(void *)(MEMORY[0x1E4FBA408] + 16);
  *(void *)((char *)v34 + *(void *)(v34[0] - 24)) = v10;
  v34[1] = 0;
  int v11 = (std::ios_base *)((char *)v34 + *(void *)(v34[0] - 24));
  std::ios_base::init(v11, v36);
  uint64_t v12 = MEMORY[0x1E4FBA488] + 24;
  v11[1].__vftable = 0;
  v11[1].__fmtflags_ = -1;
  uint64_t v13 = v9[5];
  uint64_t v35 = v9[4];
  *(uint64_t *)((char *)&v36[-1] + *(void *)(v35 - 24)) = v13;
  v34[0] = v9[1];
  *(void *)((char *)v34 + *(void *)(v34[0] - 24)) = v9[6];
  v40[0] = v7;
  v34[0] = v12;
  uint64_t v35 = v8;
  std::streambuf::basic_streambuf();
  uint64_t v14 = MEMORY[0x1E4FBA470] + 16;
  v36[0] = MEMORY[0x1E4FBA470] + 16;
  *(_OWORD *)__p = 0u;
  long long v38 = 0u;
  int v39 = 24;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v35, (uint64_t)"Exception: ", 11);
  int v15 = *(char *)(a1 + 23);
  if (v15 >= 0) {
    uint64_t v16 = a1;
  }
  else {
    uint64_t v16 = *(void *)a1;
  }
  if (v15 >= 0) {
    uint64_t v17 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v17 = *(void *)(a1 + 8);
  }
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v35, v16, v17);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v35, (uint64_t)" File: ", 7);
  int v18 = *(char *)(a2 + 23);
  if (v18 >= 0) {
    uint64_t v19 = a2;
  }
  else {
    uint64_t v19 = *(void *)a2;
  }
  if (v18 >= 0) {
    uint64_t v20 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v20 = *(void *)(a2 + 8);
  }
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v35, v19, v20);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v35, (uint64_t)" Line Number: ", 14);
  unint64_t v21 = (void *)std::ostream::operator<<();
  unint64_t v22 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)" Function: ", 11);
  int v23 = *(char *)(a4 + 23);
  if (v23 >= 0) {
    uint64_t v24 = a4;
  }
  else {
    uint64_t v24 = *(void *)a4;
  }
  if (v23 >= 0) {
    uint64_t v25 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    uint64_t v25 = *(void *)(a4 + 8);
  }
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v22, v24, v25);
  uint64_t v26 = *(unsigned __int8 *)(a5 + 23);
  if ((v26 & 0x80u) != 0) {
    uint64_t v26 = *(void *)(a5 + 8);
  }
  if (v26)
  {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v35, (uint64_t)" Message: ", 10);
    int v27 = *(char *)(a5 + 23);
    if (v27 >= 0) {
      uint64_t v28 = a5;
    }
    else {
      uint64_t v28 = *(void *)a5;
    }
    if (v27 >= 0) {
      uint64_t v29 = *(unsigned __int8 *)(a5 + 23);
    }
    else {
      uint64_t v29 = *(void *)(a5 + 8);
    }
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v35, v28, v29);
  }
  std::stringbuf::str();
  v34[0] = *v9;
  uint64_t v30 = v9[9];
  *(void *)((char *)v34 + *(void *)(v34[0] - 24)) = v9[8];
  uint64_t v35 = v30;
  v36[0] = v14;
  if (SBYTE7(v38) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x1CB796460](v40);
}

void sub_1CA39EE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
}

uint64_t std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA408];
  uint64_t v3 = *MEMORY[0x1E4FBA408];
  *(void *)a1 = *MEMORY[0x1E4FBA408];
  uint64_t v4 = *(void *)(v2 + 72);
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 64);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBA470] + 16;
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x1CB796460](a1 + 128);
  return a1;
}

uint64_t siri::ontology::OntologyBaseException::OntologyBaseException(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = &unk_1F246D580;
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 8), *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else
  {
    long long v12 = *(_OWORD *)a2;
    *(void *)(a1 + 24) = *(void *)(a2 + 16);
    *(_OWORD *)(a1 + 8) = v12;
  }
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 32), *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    long long v13 = *(_OWORD *)a3;
    *(void *)(a1 + 48) = *(void *)(a3 + 16);
    *(_OWORD *)(a1 + 32) = v13;
  }
  *(_DWORD *)(a1 + 56) = a4;
  if (*(char *)(a5 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 64), *(const std::string::value_type **)a5, *(void *)(a5 + 8));
  }
  else
  {
    long long v14 = *(_OWORD *)a5;
    *(void *)(a1 + 80) = *(void *)(a5 + 16);
    *(_OWORD *)(a1 + 64) = v14;
  }
  siri::ontology::formatExceptionMessageWithLocation(a2, a3, a4, a5, a6);
  return a1;
}

void sub_1CA39F0C8(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 55) < 0) {
    operator delete(*v3);
  }
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  std::exception::~exception((std::exception *)v1);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::UsoVocabManagerTestHelper::getGraphOntologyUnitNameStringList(siri::ontology::UsoVocabManagerTestHelper *this, const UsoVocabManager *a2)
{
  return *(void *)this;
}

void sub_1CA3A0B78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void siri::ontology::UsoIdentifier::~UsoIdentifier(void **this)
{
  if (*((unsigned char *)this + 72) && *((char *)this + 71) < 0) {
    operator delete(this[6]);
  }
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*this);
  }
}

void sub_1CA3A1000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 && a14 < 0) {
    operator delete(__p);
  }
  if (a22)
  {
    if (a21 < 0) {
      operator delete(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_1CA3A118C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 && a14 < 0) {
    operator delete(__p);
  }

  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(a1);
}

void sub_1CA3A1330(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a22)
  {
    if (a21 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_1CA3A14B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_1CA3A1610(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  _Unwind_Resume(a1);
}

void sub_1CA3A17E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a22)
  {
    if (a21 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_1CA3A196C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 && a14 < 0) {
    operator delete(__p);
  }
  if (a22)
  {
    if (a21 < 0) {
      operator delete(a16);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_1CA3A1A74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v17 = v16;

  _Unwind_Resume(a1);
}

void sub_1CA3A24D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,char *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,__int16 *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,char a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62)
{
  if (a30 && a29 < 0) {
    operator delete(__p);
  }
  if (a44 && a43 < 0) {
    operator delete(a38);
  }
  if (v63)
  {
    if (v62) {
      std::default_delete<siri::ontology::MatchInfo>::operator()[abi:ne180100](v62);
    }
  }
  a38 = &a46;
  std::vector<std::unique_ptr<siri::ontology::AsrAlternative>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a38);
  __p = &a52;
  std::vector<std::unique_ptr<siri::ontology::SpanProperty>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t std::optional<std::string>::operator=[abi:ne180100]<char const*,void>(uint64_t a1, char *a2)
{
  if (*(unsigned char *)(a1 + 24))
  {
    MEMORY[0x1CB796310](a1);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>((void *)a1, a2);
    *(unsigned char *)(a1 + 24) = 1;
  }
  return a1;
}

void sub_1CA3A2AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  std::default_delete<siri::ontology::SpanProperty>::operator()[abi:ne180100](v20);
  a20 = (void **)&a11;
  std::vector<std::unique_ptr<siri::ontology::SpanProperty>>::__destroy_vector::operator()[abi:ne180100](&a20);
  _Unwind_Resume(a1);
}

void sub_1CA3A2D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a21 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1CA3A3050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  if (*(char *)(v48 - 57) < 0) {
    operator delete(*(void **)(v48 - 80));
  }
  if (a34 && a33 < 0) {
    operator delete(__p);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  if (a47 < 0) {
    operator delete(a42);
  }
  if (a15 && a14 < 0) {
    operator delete(a9);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  MEMORY[0x1CB796510](v47, 0x1012C40071C2685);
  _Unwind_Resume(a1);
}

void sub_1CA3A31F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1CA3A33E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, siri::ontology::UsoGraph *a18)
{
  if (a11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a11);
  }
  if (__p) {
    operator delete(__p);
  }

  std::unique_ptr<siri::ontology::UsoGraph>::reset[abi:ne180100](&a18, 0);
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Root(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Root(void)::Root;
}

void sub_1CA3A3DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::primitive_String(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::primitive_String(void)::primitive_String;
}

void sub_1CA3A403C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a16);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a21);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a27);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a32);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a37);
  if (*(char *)(v38 - 161) < 0) {
    operator delete(*(void **)(v38 - 184));
  }
  MEMORY[0x1CB796510](v37, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

void sub_1CA3A40CC()
{
}

uint64_t siri::ontology::oname::graph::ontology_init::primitive_Integer(siri::ontology::oname::graph::ontology_init *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::primitive_Integer(void)::primitive_Integer;
}

void sub_1CA3A429C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a16);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a21);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a27);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a32);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a37);
  if (*(char *)(v38 - 177) < 0) {
    operator delete(*(void **)(v38 - 200));
  }
  MEMORY[0x1CB796510](v37, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

void sub_1CA3A432C()
{
}

uint64_t siri::ontology::oname::graph::ontology_init::Empty(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Empty(void)::Empty;
}

void sub_1CA3A4470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a11);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a17);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a23);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table((uint64_t)&a29);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 144);
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v30 - 96);
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  MEMORY[0x1CB796510](v29, 0x10B3C405DBA31E4);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_entity(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_entity(void)::Argument_entity;
}

void sub_1CA3A45C4(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_task(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_task(void)::Argument_task;
}

void sub_1CA3A46D0(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_definedValue(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_definedValue(void)::Argument_definedValue;
}

void sub_1CA3A47DC(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

uint64_t siri::ontology::oname::graph::ontology_init::Argument_operand(siri::ontology::oname::graph::ontology_init *this)
{
  {
    operator new();
  }
  return siri::ontology::oname::graph::ontology_init::Argument_operand(void)::Argument_operand;
}

void sub_1CA3A48E8(_Unwind_Exception *a1)
{
  MEMORY[0x1CB796510](v1, 0x1093C4057897759);
  _Unwind_Resume(a1);
}

void sub_1CA3A5698(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1CA3A5930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1CA3A5B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1CA3A5D30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1CA3A609C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  std::ostringstream::~ostringstream((uint64_t)&a16);
  std::unique_ptr<siri::ontology::UsoGraph>::reset[abi:ne180100]((siri::ontology::UsoGraph **)(v17 - 56), 0);
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  _Unwind_Resume(a1);
}

void sub_1CA3A60EC()
{
  uint64_t v1 = *(std::__shared_weak_count **)(v0 - 64);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  JUMPOUT(0x1CA3A60D8);
}

void sub_1CA3A620C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1CA3A6460(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1CA3A64B4()
{
}

void sub_1CA3A7C60(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, siri::ontology::UsoGraph *a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  if (a2 == 1)
  {
    uint64_t v28 = (const std::exception *)__cxa_begin_catch(a1);
    if (a13)
    {
      uint64_t v29 = NSString;
      std::exception::what(v28);
      uint64_t v30 = [v29 stringWithFormat:@"OntologyException: %s"];
      uint8x8_t v31 = [MEMORY[0x1E4F1C9E8] dictionaryWithObject:v30 forKey:*MEMORY[0x1E4F28568]];
      *a13 = [MEMORY[0x1E4F28C58] errorWithDomain:@"USOSerializedGraphErrorDomain" code:4 userInfo:v31];
    }
    *a10 = 0;
    __cxa_end_catch();
    JUMPOUT(0x1CA3A7B3CLL);
  }

  if (v25) {
    operator delete(v25);
  }
  std::__hash_table<std::__hash_value_type<unsigned long long,std::unique_ptr<siri::ontology::UsoUtteranceAlignment>>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,std::unique_ptr<siri::ontology::UsoUtteranceAlignment>>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,std::unique_ptr<siri::ontology::UsoUtteranceAlignment>>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,std::unique_ptr<siri::ontology::UsoUtteranceAlignment>>>>::~__hash_table((uint64_t)&STACK[0x2A0]);
  std::__hash_table<std::__hash_value_type<unsigned long long,std::vector<std::unique_ptr<siri::ontology::UsoIdentifier>>>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,std::vector<std::unique_ptr<siri::ontology::UsoIdentifier>>>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,std::vector<std::unique_ptr<siri::ontology::UsoIdentifier>>>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,std::vector<std::unique_ptr<siri::ontology::UsoIdentifier>>>>>::~__hash_table((uint64_t)&STACK[0x270]);
  siri::ontology::UsoGraph::~UsoGraph(a11);
  MEMORY[0x1CB796510]();
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::__hash_value_type<unsigned long long,std::unique_ptr<siri::ontology::UsoUtteranceAlignment>>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,std::unique_ptr<siri::ontology::UsoUtteranceAlignment>>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,std::unique_ptr<siri::ontology::UsoUtteranceAlignment>>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,std::unique_ptr<siri::ontology::UsoUtteranceAlignment>>>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      std::unique_ptr<siri::ontology::UsoUtteranceAlignment>::reset[abi:ne180100](v2 + 3);
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

uint64_t std::__hash_table<std::__hash_value_type<unsigned long long,std::vector<std::unique_ptr<siri::ontology::UsoIdentifier>>>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,std::vector<std::unique_ptr<siri::ontology::UsoIdentifier>>>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,std::vector<std::unique_ptr<siri::ontology::UsoIdentifier>>>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,std::vector<std::unique_ptr<siri::ontology::UsoIdentifier>>>>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(char **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = *(char **)v2;
      uint64_t v6 = (void **)(v2 + 24);
      std::vector<std::unique_ptr<siri::ontology::UsoIdentifier>>::__destroy_vector::operator()[abi:ne180100](&v6);
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long,std::vector<std::unique_ptr<siri::ontology::UsoIdentifier>>>,void *>>>::operator()[abi:ne180100](char a1, void **__p)
{
  if (a1)
  {
    uint64_t v3 = __p + 3;
    std::vector<std::unique_ptr<siri::ontology::UsoIdentifier>>::__destroy_vector::operator()[abi:ne180100](&v3);
  }
  if (__p)
  {
    operator delete(__p);
  }
}

void sub_1CA3A8494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  int v18 = v17;

  _Unwind_Resume(a1);
}

void sub_1CA3A866C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  int v18 = v16;

  _Unwind_Resume(a1);
}

void sub_1CA3A8840(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  int v18 = v17;

  _Unwind_Resume(a1);
}

void sub_1CA3A90C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, void *a15, void *a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  if (v24) {
    operator delete(v24);
  }
  std::__hash_table<siri::ontology::UsoGraphNode const*,std::hash<siri::ontology::UsoGraphNode const*>,std::equal_to<siri::ontology::UsoGraphNode const*>,std::allocator<siri::ontology::UsoGraphNode const*>>::~__hash_table(v25 - 128);

  _Unwind_Resume(a1);
}

void *std::__hash_table<std::__hash_value_type<unsigned long long,unsigned long long>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned long long>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned long long>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned long long>>>::find<unsigned long long>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (!a2) {
    return 0;
  }
  uint8x8_t v3 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
  v3.i16[0] = vaddlv_u8(v3);
  if (v3.u32[0] > 1uLL)
  {
    unint64_t v4 = a3;
    if (a3 >= a2) {
      unint64_t v4 = a3 % a2;
    }
  }
  else
  {
    unint64_t v4 = (a2 - 1) & a3;
  }
  int v5 = *(void **)(a1 + 8 * v4);
  if (!v5) {
    return 0;
  }
  uint64_t result = (void *)*v5;
  if (*v5)
  {
    do
    {
      unint64_t v7 = result[1];
      if (v7 == a3)
      {
        if (result[2] == a3) {
          return result;
        }
      }
      else
      {
        if (v3.u32[0] > 1uLL)
        {
          if (v7 >= a2) {
            v7 %= a2;
          }
        }
        else
        {
          v7 &= a2 - 1;
        }
        if (v7 != v4) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void sub_1CA3A977C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_1CA3A99B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1CA3A9D0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  _Unwind_Resume(a1);
}

void sub_1CA3A9EC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1CA3A9FB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void siri::ontology::CompactHashMap::initWithKeyValueItems(std::vector<int> *a1, uint64_t **a2)
{
  uint64_t v4 = (int)((double)(unint64_t)(((char *)a2[1] - (char *)*a2) >> 4) / 0.75);
  __x[0] = 0;
  std::vector<int>::resize(a1, (int)v4, __x);
  uint64_t v5 = (char *)a2[1] - (char *)*a2;
  unint64_t v6 = v5 >> 4;
  std::vector<int>::pointer begin = a1[1].__begin_;
  end = (char *)a1[1].__end_;
  unint64_t v9 = (end - (char *)begin) >> 3;
  if (v5 >> 4 <= v9)
  {
    if (v6 >= v9) {
      goto LABEL_22;
    }
    uint64_t v19 = &begin[2 * v6];
    goto LABEL_21;
  }
  value = a1[1].__end_cap_.__value_;
  if (v6 - v9 <= ((char *)value - end) >> 3)
  {
    uint64_t v19 = (int *)&end[8 * (v6 - v9)];
    uint64_t v20 = 8 * v6 - 8 * v9;
    do
    {
      *(void *)end = 0;
      end += 8;
      v20 -= 8;
    }
    while (v20);
LABEL_21:
    a1[1].__end_ = v19;
    goto LABEL_22;
  }
  if (v5 < 0) {
    std::vector<int>::__throw_length_error[abi:ne180100]();
  }
  unint64_t v11 = (char *)value - (char *)begin;
  unint64_t v12 = value - begin;
  if (v12 <= v6) {
    unint64_t v12 = v6;
  }
  if (v11 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v13 = v12;
  }
  if (v13 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  long long v14 = (char *)operator new(8 * v13);
  int v15 = &v14[8 * v9];
  uint64_t v16 = 8 * v6 - 8 * v9;
  uint64_t v17 = v15;
  do
  {
    *(void *)uint64_t v17 = 0;
    v17 += 8;
    v16 -= 8;
  }
  while (v16);
  if (end != (char *)begin)
  {
    do
    {
      uint64_t v18 = *((void *)end - 1);
      end -= 8;
      *((void *)v15 - 1) = v18;
      v15 -= 8;
    }
    while (end != (char *)begin);
    end = (char *)a1[1].__begin_;
  }
  a1[1].__begin_ = (std::vector<int>::pointer)v15;
  a1[1].__end_ = (std::vector<int>::pointer)&v14[8 * v6];
  a1[1].__end_cap_.__value_ = (int *)&v14[8 * v13];
  if (end) {
    operator delete(end);
  }
LABEL_22:
  uint64_t v21 = (char *)a2[1] - (char *)*a2;
  unint64_t v22 = v21 >> 4;
  std::vector<int>::pointer v24 = a1[2].__begin_;
  int v23 = (char *)a1[2].__end_;
  unint64_t v25 = (v23 - (char *)v24) >> 3;
  if (v21 >> 4 <= v25)
  {
    if (v22 < v25) {
      a1[2].__end_ = &v24[2 * v22];
    }
  }
  else
  {
    uint64_t v26 = a1[2].__end_cap_.__value_;
    if (v22 - v25 <= ((char *)v26 - v23) >> 3)
    {
      unint64_t v40 = (int *)&v23[8 * (v22 - v25)];
      uint64_t v41 = 8 * v22 - 8 * v25;
      do
      {
        *(void *)int v23 = 0;
        v23 += 8;
        v41 -= 8;
      }
      while (v41);
      a1[2].__end_ = v40;
    }
    else
    {
      if (v21 < 0) {
        std::vector<int>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v27 = (char *)v26 - (char *)v24;
      unint64_t v28 = v26 - v24;
      if (v28 <= v22) {
        unint64_t v28 = v21 >> 4;
      }
      if (v27 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v29 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v29 = v28;
      }
      uint64_t v30 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<siri::ontology::SpanProperty>>>(v29);
      uint64_t v32 = &v30[8 * v25];
      uint64_t v33 = (int *)&v30[8 * v22];
      uint64_t v34 = 8 * v22 - 8 * v25;
      uint64_t v35 = v32;
      do
      {
        *(void *)uint64_t v35 = 0;
        v35 += 8;
        v34 -= 8;
      }
      while (v34);
      uint64_t v36 = (int *)&v30[8 * v31];
      std::vector<int>::pointer v38 = a1[2].__begin_;
      std::vector<int>::pointer v37 = a1[2].__end_;
      if (v37 != v38)
      {
        do
        {
          uint64_t v39 = *((void *)v37 - 1);
          v37 -= 2;
          *((void *)v32 - 1) = v39;
          v32 -= 8;
        }
        while (v37 != v38);
        std::vector<int>::pointer v37 = a1[2].__begin_;
      }
      a1[2].__begin_ = (std::vector<int>::pointer)v32;
      a1[2].__end_ = v33;
      a1[2].__end_cap_.__value_ = v36;
      if (v37) {
        operator delete(v37);
      }
    }
  }
  unint64_t v42 = a2[1];
  uint64_t v43 = (char *)v42 - (char *)*a2;
  if (v42 == *a2)
  {
    uint64_t v46 = 0;
    uint64_t v48 = 0;
    BOOL v50 = 1;
  }
  else
  {
    if (v43 < 0) {
      std::vector<int>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v44 = v43 >> 4;
    uint64_t v45 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v43 >> 4);
    uint64_t v46 = v45;
    uint64_t v47 = 0;
    uint64_t v48 = &v45[4 * v44];
    do
    {
      *(_DWORD *)&v45[v47] = 0;
      v47 += 4;
    }
    while (4 * v44 != v47);
    unint64_t v42 = *a2;
    uint64_t v49 = (char *)a2[1] - (char *)*a2;
    BOOL v50 = a2[1] == *a2;
    if (v49)
    {
      unint64_t v51 = 0;
      uint64_t v71 = &v45[4 * v44];
      uint64_t v52 = (4 * v44) >> 2;
      unint64_t v53 = v49 >> 4;
      uint64_t v54 = *a2;
      do
      {
        if (!*v54)
        {
          std::string::basic_string[abi:ne180100]<0>(__x, "OntologyException");
          siri::ontology::throwException<siri::ontology::OntologyException,char const*,int,char const*,char const*>((uint64_t)__x, "/Library/Caches/com.apple.xbs/Sources/SiriOntology/SiriOntology/nlv4/cpp/core/graph/CompactHashMap.cpp", 30, "initWithKeyValueItems", "CompactHashMap: Ontology unit name contains a null name");
        }
        int v55 = std::__string_hash<char>::operator()[abi:ne180100](*v54);
        if (v52 == v51
          || (int v56 = (v4 & ((v55 % (int)v4) >> 31)) + v55 % (int)v4,
              *(_DWORD *)&v46[4 * v51] = v56,
              v56 >= (unint64_t)(a1->__end_ - a1->__begin_)))
        {
          std::vector<int>::__throw_out_of_range[abi:ne180100]();
        }
        ++a1->__begin_[v56];
        ++v51;
        v54 += 2;
      }
      while (v53 > v51);
      uint64_t v48 = v71;
    }
  }
  if ((int)v4 >= 2)
  {
    unint64_t v57 = a1->__end_ - a1->__begin_;
    if (v57 <= 1) {
      uint64_t v58 = 1;
    }
    else {
      uint64_t v58 = a1->__end_ - a1->__begin_;
    }
    unint64_t v59 = v58 - 1;
    if (v57 >= v59) {
      unint64_t v57 = v59;
    }
    uint64_t v60 = a1->__begin_ + 1;
    uint64_t v61 = v4 - 1;
    do
    {
      if (!v57) {
        std::vector<int>::__throw_out_of_range[abi:ne180100]();
      }
      *v60 += *(v60 - 1);
      ++v60;
      --v57;
      --v61;
    }
    while (v61);
  }
  if (v50)
  {
    if (!v46) {
      return;
    }
  }
  else
  {
    uint64_t v62 = 0;
    unint64_t v63 = 0;
    uint64_t v64 = (v48 - v46) >> 2;
    do
    {
      if (v64 == v63) {
        goto LABEL_77;
      }
      unint64_t v65 = *(int *)&v46[4 * v63];
      std::vector<int>::pointer v66 = a1->__begin_;
      if (v65 >= a1->__end_ - a1->__begin_) {
        goto LABEL_77;
      }
      unint64_t v67 = v66[v65] - 1;
      v66[v65] = v67;
      std::vector<int>::pointer v68 = a1[1].__begin_;
      if (v67 >= ((char *)a1[1].__end_ - (char *)v68) >> 3) {
        std::vector<int>::__throw_out_of_range[abi:ne180100]();
      }
      *(void *)&v68[2 * v67] = v42[v62];
      if (v63 >= ((char *)a2[1] - (char *)*a2) >> 4) {
        std::vector<int>::__throw_out_of_range[abi:ne180100]();
      }
      if (v65 >= a1->__end_ - a1->__begin_) {
LABEL_77:
      }
        std::vector<int>::__throw_out_of_range[abi:ne180100]();
      unint64_t v69 = a1->__begin_[v65];
      std::vector<int>::pointer v70 = a1[2].__begin_;
      if (v69 >= ((char *)a1[2].__end_ - (char *)v70) >> 3) {
        std::vector<int>::__throw_out_of_range[abi:ne180100]();
      }
      *(void *)&v70[2 * v69] = (*a2)[v62 + 1];
      ++v63;
      unint64_t v42 = *a2;
      v62 += 2;
    }
    while (v63 < ((char *)a2[1] - (char *)*a2) >> 4);
  }
  operator delete(v46);
}

void sub_1CA3AA498(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (v15) {
    operator delete(v15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::ontology::CompactHashMap::find(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1] - *a1;
  unint64_t v6 = (unint64_t)v5 >> 2;
  int v7 = std::__string_hash<char>::operator()[abi:ne180100](a2);
  int v8 = (v6 & ((v7 % (int)v6) >> 31)) + v7 % (int)v6;
  unint64_t v9 = v5 >> 2;
  if (v5 >> 2 <= (unint64_t)v8) {
    goto LABEL_34;
  }
  unint64_t v10 = *(int *)(v4 + 4 * v8);
  int v11 = v8 + 1;
  if (v11 != v6)
  {
    if (v9 > v11)
    {
      LODWORD(v12) = *(_DWORD *)(v4 + 4 * v11);
      goto LABEL_6;
    }
LABEL_34:
    std::vector<int>::__throw_out_of_range[abi:ne180100]();
  }
  unint64_t v12 = (unint64_t)(a1[4] - a1[3]) >> 3;
LABEL_6:
  if ((int)v10 >= (int)v12) {
    return 0;
  }
  uint64_t v13 = a1[3];
  uint64_t v14 = *(unsigned __int8 *)(a2 + 23);
  uint64_t v16 = *(const void **)a2;
  size_t v15 = *(void *)(a2 + 8);
  if ((v14 & 0x80u) == 0) {
    uint64_t v17 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v17 = *(void *)(a2 + 8);
  }
  if ((a1[4] - v13) >> 3 <= v10) {
    uint64_t v18 = v10;
  }
  else {
    uint64_t v18 = (a1[4] - v13) >> 3;
  }
  while (1)
  {
    if (v10 == v18) {
      std::vector<int>::__throw_out_of_range[abi:ne180100]();
    }
    uint64_t v19 = *(void *)(v13 + 8 * v10);
    if (!v19)
    {
      std::string::basic_string[abi:ne180100]<0>(v35, "OntologyException");
      std::to_string(&v31, v10);
      unint64_t v27 = std::string::insert(&v31, 0, "CompactHashMap: keys array at ");
      long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
      v32.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v28;
      v27->__r_.__value_.__l.__size_ = 0;
      v27->__r_.__value_.__r.__words[2] = 0;
      v27->__r_.__value_.__r.__words[0] = 0;
      unint64_t v29 = std::string::append(&v32, " is nil");
      long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
      std::string::size_type v34 = v29->__r_.__value_.__r.__words[2];
      long long v33 = v30;
      v29->__r_.__value_.__l.__size_ = 0;
      v29->__r_.__value_.__r.__words[2] = 0;
      v29->__r_.__value_.__r.__words[0] = 0;
      siri::ontology::throwException<siri::ontology::OntologyException,char const*,int,char const*,std::string>((uint64_t)v35, "/Library/Caches/com.apple.xbs/Sources/SiriOntology/SiriOntology/nlv4/cpp/core/graph/CompactHashMap.cpp", 53, "find", (uint64_t)&v33);
    }
    uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
    int v21 = (char)v20;
    if ((v20 & 0x80u) != 0) {
      uint64_t v20 = *(void *)(v19 + 8);
    }
    if (v17 != v20) {
      goto LABEL_28;
    }
    unint64_t v22 = v21 >= 0 ? *(unsigned __int8 **)(v13 + 8 * v10) : *(unsigned __int8 **)v19;
    if ((v14 & 0x80) != 0) {
      break;
    }
    if (!v14) {
      goto LABEL_30;
    }
    int v23 = (unsigned __int8 *)a2;
    uint64_t v24 = v14;
    while (*v23 == *v22)
    {
      ++v23;
      ++v22;
      if (!--v24) {
        goto LABEL_30;
      }
    }
LABEL_28:
    if (v12 == ++v10) {
      return 0;
    }
  }
  if (memcmp(v16, v22, v15)) {
    goto LABEL_28;
  }
LABEL_30:
  uint64_t v26 = a1[6];
  if (v10 >= (a1[7] - v26) >> 3) {
    std::vector<int>::__throw_out_of_range[abi:ne180100]();
  }
  return *(void *)(v26 + 8 * v10);
}

void sub_1CA3AA6F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::ontology::makeUsoVocabManager@<X0>(siri::ontology *this@<X0>, uint64_t *a2@<X8>)
{
  siri::ontology::getGraphOntologyUnitNameStringList(this);
  uint64_t GraphOntologyVersion = siri::ontology::getGraphOntologyVersion(v3);
  return std::allocate_shared[abi:ne180100]<siri::ontology::UsoVocabManager,std::allocator<siri::ontology::UsoVocabManager>,std::vector<siri::ontology::OntologyUnitName const*> const&,siri::ontology::OntologyVersion const&,void>(a2, GraphOntologyVersion);
}

void siri::ontology::getGraphOntologyUnitNameStringList(siri::ontology *this)
{
  MEMORY[0x1F4188790](this);
  uint64_t v2411 = *MEMORY[0x1E4F143B8];
  {
    if (v1)
    {
      uint64_t v4 = 0;
      uint64_t v5 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Root(v1);
      uint64_t v6 = siri::ontology::oname::graph::ontology_init::Empty(v5);
      bzero(&v7, 0xF60uLL);
      int v8 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Confetti(v2);
      unint64_t v9 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Echo(v8);
      unint64_t v10 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Fireworks(v9);
      int v11 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Gentle(v10);
      unint64_t v12 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_MessageEffect_HappyBirthday(v11);
      uint64_t v13 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Heart(v12);
      uint64_t v14 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Impact(v13);
      size_t v15 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_MessageEffect_InvisibleInk(v14);
      uint64_t v16 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Lasers(v15);
      uint64_t v17 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Loud(v16);
      uint64_t v18 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_MessageEffect_ShootingStar(v17);
      uint64_t v19 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Sparkles(v18);
      uint64_t v20 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_MessageEffect_Spotlight(v19);
      long long v21 = 0u;
      unint64_t v22 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_reference(v20);
      int v23 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_selectOne(v22);
      uint64_t v24 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_quantifier(v23);
      unint64_t v25 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_usoAssociatedApp(v24);
      uint64_t v26 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_usoId(v25);
      unint64_t v27 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_usoListPosition(v26);
      long long v28 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_usoQuantifier(v27);
      unint64_t v29 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_usoReferenceType(v28);
      long long v30 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_usoSearchQualifier(v29);
      std::string v31 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_app(v30);
      std::string v32 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_application(v31);
      long long v33 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_flowControl(v32);
      std::string::size_type v34 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_focus(v33);
      uint64_t v35 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_followUpToGoalId(v34);
      uint64_t v36 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_goalId(v35);
      std::vector<int>::pointer v37 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_taskId(v36);
      std::vector<int>::pointer v38 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_source(v37);
      uint64_t v39 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_target(v38);
      unint64_t v40 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_id(v39);
      uint64_t v41 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_referenceQuantifier(v40);
      unint64_t v42 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_select(v41);
      uint64_t v43 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_presentation(v42);
      uint64_t v44 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_controller(v43);
      uint64_t v45 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_collection(v44);
      uint64_t v46 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_items(v45);
      uint64_t v47 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_creators(v46);
      uint64_t v48 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_genres(v47);
      uint64_t v49 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_identifiers(v48);
      BOOL v50 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_identifyingCollection(v49);
      unint64_t v51 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_mediaData(v50);
      uint64_t v52 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_metadata(v51);
      unint64_t v53 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_name(v52);
      uint64_t v54 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_nameString(v53);
      int v55 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_qualifier(v54);
      int v56 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_quality(v55);
      unint64_t v57 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_releaseDate(v56);
      uint64_t v58 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_releaseType(v57);
      unint64_t v59 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_siriBaseId(v58);
      uint64_t v60 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_date(v59);
      uint64_t v61 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_time(v60);
      uint64_t v62 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_occurringIn(v61);
      unint64_t v63 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_direction(v62);
      uint64_t v64 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_offsetReference(v63);
      unint64_t v65 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_offsetValue(v64);
      std::vector<int>::pointer v66 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_components(v65);
      unint64_t v67 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_sign(v66);
      std::vector<int>::pointer v68 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_attachment(v67);
      unint64_t v69 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dateTime(v68);
      std::vector<int>::pointer v70 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_notificationNewState(v69);
      State = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_notificationReadState(v70);
      uint64_t v72 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_answerStatus(State);
      uint64_t v73 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_callDirection(v72);
      uint64_t v74 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_caller(v73);
      uint64_t v75 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dateTimeRange(v74);
      uint64_t v76 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_recipients(v75);
      unint64_t v77 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_replyTo(v76);
      unint64_t v78 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_communicationDirection(v77);
      unint64_t v79 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_groupRecipients(v78);
      unint64_t v80 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_newness(v79);
      unint64_t v81 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_participants(v80);
      int v82 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_personRecipients(v81);
      uint64_t v83 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_sender(v82);
      unint64_t v84 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_intensifier(v83);
      unint64_t v85 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_similarity(v84);
      int v86 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_amount(v85);
      v87 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_currency(v86);
      long long v88 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_media(v87);
      float v89 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_calendarEra(v88);
      v90 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_calendarSystem(v89);
      char v91 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dayOfMonth(v90);
      v92 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dayOfWeek(v91);
      v93 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_monthOfYear(v92);
      v94 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_weekOfYear(v93);
      v95 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_year(v94);
      v96 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_categories(v95);
      v97 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_contactAddresses(v96);
      v98 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_memberships(v97);
      v99 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_structuredName(v98);
      v100 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_location(v99);
      v101 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_postalAddress(v100);
      v102 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_weatherRecordType(v101);
      v103 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_weatherReport(v102);
      v104 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_pressure(v103);
      v105 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_pressureDirection(v104);
      v106 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dateTimeTriggers(v105);
      v107 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_angle(v106);
      v108 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_latitudeHemisphere(v107);
      v109 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_areaType(v108);
      v110 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_containedIn(v109);
      v111 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_contains(v110);
      v112 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_count(v111);
      v113 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dateTimeCreated(v112);
      Modified = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dateTimeLastModified(v113);
      v115 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_groupLabel(Modified);
      v116 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_groupNameString(v115);
      v117 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_itemList(v116);
      v118 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_status(v117);
      v119 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_taskList(v118);
      v120 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_trigger(v119);
      v121 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_timeRemaining(v120);
      v122 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_totalDuration(v121);
      v123 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_playState(v122);
      v124 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_timeElapsed(v123);
      v125 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_currentlyPlaying(v124);
      v126 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_alarmDateTime(v125);
      v127 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_alarmSound(v126);
      v128 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_enabledStatus(v127);
      v129 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_label(v128);
      v130 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_snoozeStatus(v129);
      v131 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_contactAddress(v130);
      v132 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_emailAddress(v131);
      v133 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_phoneNumber(v132);
      v134 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_confirmationStatus(v133);
      v135 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_contact(v134);
      v136 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_requiredStatus(v135);
      v137 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_hour(v136);
      v138 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_minute(v137);
      v139 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_second(v138);
      v140 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_timeZone(v139);
      v141 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_speed(v140);
      v142 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_labelString(v141);
      v143 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_moonPhaseType(v142);
      v144 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_value(v143);
      v145 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_valueString(v144);
      v146 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_emergencyType(v145);
      v147 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_descriptors(v146);
      v148 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_price(v147);
      v149 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_purchasedStatus(v148);
      v150 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_rating(v149);
      v151 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_building(v150);
      v152 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_crossStreet(v151);
      v153 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_neighborhood(v152);
      v154 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_street(v153);
      v155 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_streetNumber(v154);
      v156 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_subStreetAddress(v155);
      v157 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_age(v156);
      v158 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_birthdate(v157);
      v159 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_identifyingRelationship(v158);
      v160 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_phoneticName(v159);
      v161 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_relationships(v160);
      v162 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_relationshipToOtherPerson(v161);
      v163 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_device(v162);
      v164 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_devices(v163);
      v165 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_activationStatus(v164);
      v166 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_measurement(v165);
      v167 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_geographicArea(v166);
      v168 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_localeLocation(v167);
      v169 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_tasks(v168);
      v170 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedPeople(v169);
      v171 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_batteryPowerLevel(v170);
      v172 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_chargingStatus(v171);
      v173 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_model(v172);
      v174 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_modelNameString(v173);
      v175 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_productCategory(v174);
      v176 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_unit(v175);
      v177 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_uri(v176);
      v178 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_endTime(v177);
      v179 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_timerType(v178);
      v180 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_allDayStatus(v179);
      v181 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_eventQuantifier(v180);
      v182 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_pointOfInterest(v181);
      v183 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_attendees(v182);
      v184 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_calendar(v183);
      v185 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_calendarEventType(v184);
      v186 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_conflictingEvents(v185);
      v187 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_createdBy(v186);
      v188 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_utcOffset(v187);
      v189 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_journey(v188);
      v190 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_mapType(v189);
      v191 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_pointsOfInterest(v190);
      v192 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_zoomLevel(v191);
      v193 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_agent(v192);
      v194 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_preferenceType(v193);
      v195 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_preferredObject(v194);
      v196 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_settingGroup(v195);
      v197 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_navigationDisplay(v196);
      v198 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_textValue(v197);
      v199 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_characteristic(v198);
      v200 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_mantissa(v199);
      v201 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_denominator(v200);
      v202 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_activityCategories(v201);
      v203 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_productCategories(v202);
      v204 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_storeItem(v203);
      v205 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_sunEventType(v204);
      v206 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_uvIndex(v205);
      v207 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_locationTrigger(v206);
      v208 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_locationTriggerType(v207);
      v209 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_pointOfInterestTrigger(v208);
      v210 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dateTimeTrigger(v209);
      v211 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_chanceOfPrecipitation(v210);
      v212 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_precipitationType(v211);
      v213 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_weatherReportItems(v212);
      v214 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_weatherTypes(v213);
      v215 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dominantAirPollutantType(v214);
      v216 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_multiplier(v215);
      v217 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_scene(v216);
      v218 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_audio(v217);
      v219 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_formality(v218);
      v220 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_locale(v219);
      v221 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_romanisedString(v220);
      v222 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_stringValue(v221);
      v223 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_recurrenceDateTimeRange(v222);
      v224 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_recurrencePeriod(v223);
      v225 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_totalNumberOfOccurrences(v224);
      v226 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedAgent(v225);
      v227 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_quoteString(v226);
      v228 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_notes(v227);
      v229 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_originatingCall(v228);
      v230 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_readState(v229);
      v231 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_saveState(v230);
      v232 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_currentWebPage(v231);
      v233 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_note(v232);
      v234 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_userPointOfInterestType(v233);
      v235 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_lookupId(v234);
      v236 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_participant(v235);
      v237 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_role(v236);
      v238 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_denominatorValue(v237);
      v239 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_numeratorValue(v238);
      v240 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_wholeValue(v239);
      v241 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_currentlyCalling(v240);
      v242 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_speakerState(v241);
      started = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_startTime(v242);
      v244 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_airQualityWeatherReportType(started);
      v245 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_at(v244);
      v246 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_duration(v245);
      v247 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_end(v246);
      v248 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_start(v247);
      v249 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_recurrencePattern(v248);
      v250 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_holidayType(v249);
      v251 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_recurringNamedDateRange(v250);
      v252 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_bundleId(v251);
      v253 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_installed(v252);
      v254 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_version(v253);
      v255 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_language(v254);
      v256 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_mediaLanguageOptionType(v255);
      v257 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_meridiem(v256);
      v258 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_distance(v257);
      v259 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_subAreas(v258);
      v260 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_integerValue(v259);
      v261 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_fullName(v260);
      v262 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_offset(v261);
      v263 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_referenceLocation(v262);
      v264 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_fromDateTime(v263);
      v265 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_toDateTime(v264);
      v266 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_referencePoint(v265);
      v267 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_city(v266);
      v268 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_country(v267);
      v269 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_geolocation(v268);
      v270 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_postalCode(v269);
      v271 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_province(v270);
      v272 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_streetAddress(v271);
      v273 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_observanceType(v272);
      v274 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_geocoordinate(v273);
      v275 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_attachedObject(v274);
      v276 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_offsetDirection(v275);
      v277 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_offsetToReference(v276);
      v278 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_referenceListPosition(v277);
      v279 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_strings(v278);
      v280 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_text(v279);
      v281 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_directionType(v280);
      v282 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_distanceToDirection(v281);
      v283 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_timeToDirection(v282);
      v284 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_directionFromNorth(v283);
      v285 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_recurrenceDateTimes(v284);
      v286 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_image(v285);
      v287 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_person(v286);
      v288 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_fromPerson(v287);
      v289 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_relationship(v288);
      v290 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_relationshipType(v289);
      v291 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_toPerson(v290);
      v292 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_preferenceCategory(v291);
      v293 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_preferenceStatementType(v292);
      v294 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_familyName(v293);
      v295 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_familyNameString(v294);
      v296 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_givenName(v295);
      v297 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_givenNameString(v296);
      v298 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_middleName(v297);
      v299 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_middleNameString(v298);
      v300 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_namePostfix(v299);
      v301 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_namePrefix(v300);
      v302 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_nickName(v301);
      v303 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_nickNameString(v302);
      v304 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_mode(v303);
      v305 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_siriCanonicalLocaleName(v304);
      v306 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_siriLocaleCode(v305);
      v307 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_recurringNamedDate(v306);
      v308 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_languageOption(v307);
      v309 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_subtitleState(v308);
      v310 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_repeatPlayState(v309);
      v311 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_shufflePlayState(v310);
      v312 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_namespaceString(v311);
      v313 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_privacy(v312);
      v314 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_color(v313);
      v315 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_content(v314);
      v316 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedReligion(v315);
      v317 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedDateTime(v316);
      v318 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedNotification(v317);
      v319 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_attachments(v318);
      v320 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_conversation(v319);
      v321 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_effect(v320);
      v322 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_flagState(v321);
      v323 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_textContent(v322);
      v324 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_latitude(v323);
      v325 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_longitude(v324);
      v326 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_suggestedWeatherProducts(v325);
      v327 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_temperature(v326);
      v328 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_temperatureMeasurementType(v327);
      v329 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_temperatureReportType(v328);
      v330 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_webSite(v329);
      v331 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_longitudeHemisphere(v330);
      v332 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_bccRecipients(v331);
      v333 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_ccRecipients(v332);
      v334 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_communicationLabels(v333);
      v335 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_forwardOf(v334);
      v336 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_fromDraft(v335);
      v337 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_sendState(v336);
      v338 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_subject(v337);
      v339 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_height(v338);
      v340 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_tideType(v339);
      v341 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_canonicalString(v340);
      v342 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_settingType(v341);
      v343 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_organization(v342);
      v344 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_participation(v343);
      v345 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_canonicalName(v344);
      v346 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_groupMembers(v345);
      v347 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_groupName(v346);
      v348 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_members(v347);
      v349 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_endPoint(v348);
      v350 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_eta(v349);
      v351 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_startPoint(v350);
      v352 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_trafficStatus(v351);
      v353 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_transportationMode(v352);
      v354 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_travelTime(v353);
      v355 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_velocity(v354);
      v356 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_windReportType(v355);
      v357 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_shelter(v356);
      v358 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_mediaPlayer(v357);
      v359 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_descriptorStrings(v358);
      v360 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedWeatherReports(v359);
      v361 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_containerOfCurrentlyPlaying(v360);
      v362 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_queue(v361);
      v363 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_audioTrackLanguageOption(v362);
      v364 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_videoCaptioning(v363);
      v365 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_product(v364);
      v366 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_quantity(v365);
      v367 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_store(v366);
      v368 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedPerson(v367);
      v369 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_generalStatus(v368);
      v370 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_brand(v369);
      v371 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_category(v370);
      v372 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_packageType(v371);
      v373 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_task(v372);
      uint64_t v374 = siri::ontology::oname::graph::ontology_init::Argument_definedValue(v373);
      bzero(&v375, 0xAB8uLL);
      v376 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::primitive_String(v3);
      v377 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::primitive_Integer(v376);
      v378 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_MessageEffect(v377);
      long long v379 = 0u;
      long long v380 = 0u;
      long long v381 = 0u;
      long long v382 = 0u;
      long long v383 = 0u;
      long long v384 = 0u;
      long long v385 = 0u;
      long long v386 = 0u;
      uint64_t v387 = 0;
      v388 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Request_request(v378);
      v389 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Summarise_summarise(v388);
      v390 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Control_open(v389);
      v391 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Delete_delete(v390);
      updated = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Update_update(v391);
      v393 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Summarise_checkExistence(updated);
      v394 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Convert_convert(v393);
      v395 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Check_check(v394);
      v396 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Create_create(v395);
      v397 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Summarise_read(v396);
      v398 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Control_pause(v397);
      v399 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Control_restart(v398);
      v400 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Control_resume(v399);
      v401 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Control_start(v400);
      v402 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Control_stop(v401);
      v403 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Control_buy(v402);
      v404 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Update_reset(v403);
      v405 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Summarise_summarize(v404);
      v406 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Control_close(v405);
      v407 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Control_accept(v406);
      v408 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Control_reject(v407);
      v409 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Control_install(v408);
      v410 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Control_uninstall(v409);
      v411 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Control_skipTime(v410);
      v412 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Control_skipItem(v411);
      v413 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_equals(v412);
      v414 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_greaterThan(v413);
      v415 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_greaterThanOrEquals(v414);
      v416 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_in(v415);
      v417 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_addToSet(v416);
      v418 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_addToValue(v417);
      v419 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_assign(v418);
      v420 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_removeFromSet(v419);
      v421 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_removeFromValue(v420);
      v422 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_replace(v421);
      v423 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_contains(v422);
      v424 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_lessThan(v423);
      v425 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_lessThanOrEquals(v424);
      v426 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_notContains(v425);
      v427 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_notEquals(v426);
      v428 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_notIn(v427);
      v429 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_usoSameAs(v428);
      v430 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_usoRedactionId(v429);
      v431 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_operand(v430);
      v432 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::NoVerb_noVerb(v431);
      v433 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_entity(v432);
      v434 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::uso_UnknownEntity(v433);
      long long v435 = 0u;
      v436 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_sourceString(v434);
      v437 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_targetString(v436);
      uint64_t v438 = 0;
      translate = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Create_translate(v437);
      v440 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Update_forward(translate);
      v441 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Update_reply(v440);
      v442 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::PlaceholderVerb_placeholderVerb(v441);
      v443 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ReferenceType(v442);
      v444 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DurationComponent(v443);
      v445 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number(v444);
      v446 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeList(v445);
      v447 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time12HourClock(v446);
      v448 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Agent(v447);
      v449 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Measurement(v448);
      v450 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange(v449);
      v451 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetDateTime(v450);
      v452 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Decimal(v451);
      v453 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MixedFraction(v452);
      v454 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ContactAddress(v453);
      v455 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Quantifier(v454);
      v456 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CalendarSystem(v455);
      v457 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time24HourClock(v456);
      v458 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PersonName(v457);
      v459 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit(v458);
      v460 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_LocalisedString(v459);
      v461 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DayOfWeek(v460);
      v462 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SearchQualifier(v461);
      v463 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTime(v462);
      v464 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Message(v463);
      v465 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PersonRelationship(v464);
      v466 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Translation(v465);
      v467 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Contact(v466);
      v468 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Communication(v467);
      v469 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Duration(v468);
      v470 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Similarity(v469);
      v471 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CalendarEra(v470);
      v472 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_App(v471);
      v473 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Geolocation(v472);
      v474 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeZone(v473);
      v475 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Meridiem(v474);
      v476 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Voicemail(v475);
      v477 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MonthOfYear(v476);
      v478 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange(v477);
      v479 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition(v478);
      v480 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Locale(v479);
      v481 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PhoneCall(v480);
      v482 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Organization(v481);
      v483 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Integer(v482);
      v484 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit(v483);
      v485 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTime(v484);
      v486 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MultipliedNumber(v485);
      v487 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_GeographicArea(v486);
      v488 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_EmailAddress(v487);
      v489 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Date(v488);
      v490 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetDirection(v489);
      v491 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time(v490);
      v492 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AgentContact(v491);
      v493 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Person(v492);
      v494 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_NumberSign(v493);
      v495 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_GroupContact(v494);
      v496 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementComponent(v495);
      v497 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PhoneNumber(v496);
      v498 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_append(v497);
      v499 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ReferenceType_DefiniteReference(v498);
      v500 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ReferenceType_IndefiniteReference(v499);
      v501 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_LargeUnspecifiedAmount(v500);
      v502 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_SmallUnspecifiedAmount(v501);
      v503 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time12HourClock_CurrentTime(v502);
      v504 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetDateTime_Now(v503);
      v505 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Decimal_LargeUnspecifiedAmount(v504);
      v506 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Decimal_SmallUnspecifiedAmount(v505);
      v507 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MixedFraction_LargeUnspecifiedAmount(v506);
      v508 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MixedFraction_SmallUnspecifiedAmount(v507);
      v509 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Quantifier_All(v508);
      v510 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Quantifier_Any(v509);
      v511 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Quantifier_Multiple(v510);
      v512 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Quantifier_None(v511);
      v513 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Quantifier_Remainder(v512);
      v514 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Quantifier_Single(v513);
      v515 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time24HourClock_CurrentTime(v514);
      v516 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Friday(v515);
      v517 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Monday(v516);
      v518 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Saturday(v517);
      v519 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Sunday(v518);
      v520 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Thursday(v519);
      v521 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Tuesday(v520);
      v522 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DayOfWeek_Wednesday(v521);
      v523 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTime_Now(v522);
      v524 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Similarity_DifferentThan(v523);
      v525 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Similarity_SimilarTo(v524);
      v526 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Geolocation_Here(v525);
      v527 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Meridiem_AM(v526);
      v528 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Meridiem_PM(v527);
      v529 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MonthOfYear_April(v528);
      v530 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MonthOfYear_August(v529);
      v531 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MonthOfYear_December(v530);
      v532 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MonthOfYear_February(v531);
      v533 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MonthOfYear_January(v532);
      v534 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MonthOfYear_July(v533);
      v535 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MonthOfYear_June(v534);
      v536 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MonthOfYear_March(v535);
      v537 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MonthOfYear_May(v536);
      v538 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MonthOfYear_November(v537);
      v539 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MonthOfYear_October(v538);
      v540 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MonthOfYear_September(v539);
      v541 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Integer_LargeUnspecifiedAmount(v540);
      v542 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Integer_SmallUnspecifiedAmount(v541);
      v543 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MultipliedNumber_LargeUnspecifiedAmount(v542);
      v544 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MultipliedNumber_SmallUnspecifiedAmount(v543);
      v545 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Date_Today(v544);
      v546 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Date_Tomorrow(v545);
      v547 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Date_Yesterday(v546);
      v548 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetDirection_After(v547);
      v549 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetDirection_Before(v548);
      v550 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time_CurrentTime(v549);
      v551 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Person_User(v550);
      v552 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_NumberSign_NegativeSign(v551);
      v553 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_NumberSign_PositiveSign(v552);
      v554 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_attributes(v553);
      v555 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_stringContent(v554);
      v556 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedDateTimeRange(v555);
      v557 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_check(v556);
      v558 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_checkExistence(v557);
      v559 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Target_send(v558);
      v560 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_delete(v559);
      v561 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_forward(v560);
      v562 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_read(v561);
      v563 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_reply(v562);
      v564 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceSelect_request(v563);
      v565 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_summarise(v564);
      v566 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_update(v565);
      v567 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Target_translate(v566);
      v568 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Target_call(v567);
      v569 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_pause(v568);
      v570 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_play(v569);
      v571 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_repeat(v570);
      v572 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_resume(v571);
      v573 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_skip(v572);
      v574 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_callback(v573);
      v575 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Target_videocall(v574);
      v576 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_answer(v575);
      v577 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_hangup(v576);
      v578 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_redial(v577);
      v579 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Timer(v578);
      v580 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Target_create(v579);
      v581 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_reset(v580);
      v582 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Entity_restart(v581);
      v583 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Entity_start(v582);
      v584 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_stop(v583);
      v585 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time12HourClock_Midnight(v584);
      v586 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time12HourClock_Noon(v585);
      v587 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time24HourClock_Midnight(v586);
      v588 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time24HourClock_Noon(v587);
      v589 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Century(v588);
      v590 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Day(v589);
      v591 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Decade(v590);
      v592 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Fortnight(v591);
      v593 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Hour(v592);
      v594 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Millisecond(v593);
      v595 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Minute(v594);
      v596 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Month(v595);
      v597 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_QuarterOfYear(v596);
      v598 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_SeasonOfYear(v597);
      v599 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Second(v598);
      v600 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Week(v599);
      v601 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Year(v600);
      v602 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetDate_Today(v601);
      v603 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetDate_Tomorrow(v602);
      v604 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetDate_Yesterday(v603);
      v605 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetTime_CurrentTime(v604);
      v606 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetTime_Midnight(v605);
      v607 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetTime_Noon(v606);
      v608 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_Afternoon(v607);
      v609 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_Autumn(v608);
      v610 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_BreakfastTime(v609);
      v611 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_BrunchTime(v610);
      v612 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_Dawn(v611);
      v613 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_Daytime(v612);
      v614 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_DinnerTime(v613);
      v615 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_Dusk(v614);
      v616 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_EntireDay(v615);
      v617 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_EntireMonth(v616);
      v618 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_EntireWeek(v617);
      v619 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_EntireYear(v618);
      v620 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_Evening(v619);
      v621 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_LunchTime(v620);
      v622 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_Morning(v621);
      v623 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_Night(v622);
      v624 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_Spring(v623);
      v625 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_Summer(v624);
      v626 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_Weekend(v625);
      v627 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_Winter(v626);
      v628 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_Workweek(v627);
      v629 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Current(v628);
      v630 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_First(v629);
      v631 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Last(v630);
      v632 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Next(v631);
      v633 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Previous(v632);
      v634 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTime_Weekdays(v633);
      v635 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTime_Weekends(v634);
      v636 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_AllOf(v635);
      v637 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_EarlierPartOf(v636);
      v638 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_EndOf(v637);
      v639 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_LaterPartOf(v638);
      v640 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_MiddleOf(v639);
      v641 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_RestOf(v640);
      v642 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_StartOf(v641);
      v643 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time_Midnight(v642);
      v644 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time_Noon(v643);
      v645 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_contiguousFromDateTime(v644);
      v646 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_contiguousToDateTime(v645);
      v647 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonTimer_TimerAttribute(v646);
      v648 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonMessage_MessageAttribute(v647);
      v649 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPhoneCall_PhoneCallAttribute(v648);
      v650 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_URI(v649);
      v651 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaContent(v650);
      v652 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetDate(v651);
      v653 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Device(v652);
      v654 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Event(v653);
      v655 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetTime(v654);
      v656 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ProductCategory(v655);
      v657 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier(v656);
      v658 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PostalAddress(v657);
      v659 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonContact_ContactAttribute(v658);
      v660 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_open(v659);
      v661 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_Afternoon(v660);
      v662 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_Autumn(v661);
      v663 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_BreakfastTime(v662);
      v664 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_BrunchTime(v663);
      v665 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_Dawn(v664);
      v666 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_Daytime(v665);
      v667 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_DinnerTime(v666);
      v668 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_Dusk(v667);
      v669 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_EntireDay(v668);
      v670 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_EntireMonth(v669);
      v671 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_EntireWeek(v670);
      v672 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_EntireYear(v671);
      v673 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_Evening(v672);
      v674 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_LunchTime(v673);
      v675 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_Morning(v674);
      v676 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_Night(v675);
      v677 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_Spring(v676);
      v678 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_Summer(v677);
      v679 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_Weekend(v678);
      v680 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_Winter(v679);
      v681 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_Workweek(v680);
      v682 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Beginning(v681);
      v683 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Eighteenth(v682);
      v684 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Eighth(v683);
      v685 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Eleventh(v684);
      v686 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_End(v685);
      v687 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Fifteenth(v686);
      v688 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Fifth(v687);
      v689 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Fourteenth(v688);
      v690 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Fourth(v689);
      v691 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Middle(v690);
      v692 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Nineteenth(v691);
      v693 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Ninth(v692);
      v694 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Second(v693);
      v695 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_SecondToLast(v694);
      v696 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Seventeenth(v695);
      v697 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Seventh(v696);
      v698 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Sixteenth(v697);
      v699 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Sixth(v698);
      v700 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Tenth(v699);
      v701 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Third(v700);
      v702 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_ThirdToLast(v701);
      v703 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Thirteenth(v702);
      v704 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Twelfth(v703);
      v705 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_Twentieth(v704);
      v706 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentyFifth(v705);
      v707 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentyFirst(v706);
      v708 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentyFourth(v707);
      v709 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentySecond(v708);
      v710 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ListPosition_TwentyThird(v709);
      v711 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_specifyingContactAddress(v710);
      v712 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_partOfRecurringDateTime(v711);
      v713 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Group(v712);
      v714 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_PhoneCallNounSpeakerphone(v713);
      v715 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_PhoneCallNounNotSpeakerphone(v714);
      v716 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_PhoneCallNounEmergency(v715);
      v717 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_PhoneCallNounBluetooth(v716);
      v718 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_PhoneCallAttributesMissed(v717);
      v719 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_PhoneCallAttributesNew(v718);
      v720 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_PhoneCallAttributesRecent(v719);
      v721 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_PhoneCallAttributesUnsaved(v720);
      v722 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_PhoneCallAttributesReceived(v721);
      v723 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_PhoneCallAttributesOutgoing(v722);
      v724 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_PhoneCallAttributesLast(v723);
      v725 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_PhoneCallAttributesBusiness(v724);
      v726 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_PhoneCallAttributesCurrent(v725);
      v727 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesNotification(v726);
      v728 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesNew(v727);
      v729 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesRead(v728);
      v730 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesUnread(v729);
      v731 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesFlagged(v730);
      v732 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesUnflagged(v731);
      v733 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesSaved(v732);
      v734 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesUnsaved(v733);
      v735 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesSent(v734);
      v736 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesReceived(v735);
      v737 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesLatest(v736);
      v738 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesSubject(v737);
      v739 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesMessage(v738);
      v740 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesAttachment(v739);
      v741 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesInvisibleInkEffect(v740);
      v742 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesSlamEffect(v741);
      v743 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesLoudEffect(v742);
      v744 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesGentleEffect(v743);
      v745 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesEchoEffect(v744);
      v746 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesSpotlightEffect(v745);
      v747 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesBalloonsEffect(v746);
      v748 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesConfettiEffect(v747);
      v749 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesLoveEffect(v748);
      v750 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesLasersEffect(v749);
      v751 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesFireworksEffect(v750);
      v752 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesShootingStarEffect(v751);
      v753 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesCelebrationEffect(v752);
      v754 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesDigitalTouch(v753);
      v755 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesHandwritten(v754);
      v756 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesMusicSharing(v755);
      v757 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesStickers(v756);
      v758 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsAttributesTapback(v757);
      v759 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsSharedEntityMyLocation(v758);
      v760 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsNounAudioMessage(v759);
      v761 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsNounImageMessage(v760);
      v762 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsNounVideoMessage(v761);
      v763 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute_SmsNounAnnouncement(v762);
      v764 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute(v763);
      v765 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleMessage_MessageAttribute(v764);
      v766 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAvailability(v765);
      v767 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAllDay(v766);
      v768 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesBefore(v767);
      v769 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAfter(v768);
      v770 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesDate(v769);
      v771 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesTime(v770);
      v772 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesName(v771);
      v773 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesLocation(v772);
      v774 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAttendees(v773);
      v775 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesDraft(v774);
      v776 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesAlert(v775);
      v777 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesComment(v776);
      v778 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesNote(v777);
      v779 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesTravelTime(v778);
      v780 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesShowAs(v779);
      v781 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesOrganizer(v780);
      v782 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesCategories(v781);
      v783 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesRecurrence(v782);
      v784 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventAttributesReturn(v783);
      v785 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounAppointment(v784);
      v786 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounAppointments(v785);
      v787 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounMeeting(v786);
      v788 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounMeetings(v787);
      v789 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute(v788);
      v790 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CalendarEvent(v789);
      v791 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonCalendarEvent_CalendarEventAttribute(v790);
      v792 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_arguments(v791);
      v793 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_question(v792);
      v794 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_surfaceForm(v793);
      v795 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_KnowledgeQuestion(v794);
      v796 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_KnowledgeQuestionAttribute(v795);
      v797 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_KnowledgeQuestionPersonAttribute(v796);
      v798 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Target_ask(v797);
      v799 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Target_start(v798);
      v800 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounEvent(v799);
      v801 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleCalendarEvent_CalendarEventAttribute_CalendarEventNounEvents(v800);
      v802 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleTimer_TimerAttribute_TimerTypeSleep(v801);
      v803 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleTimer_TimerAttribute_TimerNounSleepTimer(v802);
      v804 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleTimer_TimerAttribute_TimerAttributesOn(v803);
      v805 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleTimer_TimerAttribute_TimerAttributesOff(v804);
      v806 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleTimer_TimerAttribute_TimerAttributesPaused(v805);
      v807 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleTimer_TimerAttribute_TimerAttributesRunning(v806);
      uint64_t v808 = 0;
      v809 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleTimer_TimerAttribute(v807);
      long long v810 = 0u;
      long long v811 = 0u;
      v812 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleAlarm_AlarmAttribute_AlarmAttributesRecurring(v809);
      v813 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleAlarm_AlarmAttribute_AlarmAttributesSet(v812);
      v814 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleAlarm_AlarmAttribute_AlarmAttributesNotSet(v813);
      v815 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleAlarm_AlarmAttribute_AlarmAttributesOn(v814);
      v816 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleAlarm_AlarmAttribute_AlarmAttributesOff(v815);
      v817 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleAlarm_AlarmAttribute_AlarmAttributesSleep(v816);
      v818 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleAlarm_AlarmAttribute_AlarmAttributesSound(v817);
      v819 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_endDateTime(v818);
      v820 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Alarm(v819);
      v821 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonAlarm_AlarmAttribute(v820);
      v822 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleAlarm_AlarmAttribute(v821);
      v823 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_disable(v822);
      v824 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_enable(v823);
      v825 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_snooze(v824);
      v826 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_recurringDateTime(v825);
      v827 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::uso_NoEntity(v826);
      v828 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Email(v827);
      v829 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonEmail_EmailAttribute(v828);
      v830 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEmail_EmailAttribute(v829);
      v831 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_cc(v830);
      v832 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_save(v831);
      v833 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEmail_EmailAttribute_EmailAttributesNew(v832);
      v834 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEmail_EmailAttribute_EmailAttributesRead(v833);
      v835 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEmail_EmailAttribute_EmailAttributesUnread(v834);
      v836 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEmail_EmailAttribute_EmailAttributesFlagged(v835);
      v837 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEmail_EmailAttribute_EmailAttributesSaved(v836);
      v838 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEmail_EmailAttribute_EmailAttributesUnsaved(v837);
      v839 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEmail_EmailAttribute_EmailAttributesSent(v838);
      v840 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEmail_EmailAttribute_EmailAttributesReceived(v839);
      v841 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEmail_EmailAttribute_EmailAttributesLatest(v840);
      v842 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEmail_EmailAttribute_EmailAttributesPreview(v841);
      v843 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEmail_EmailAttribute_EmailAttributesAttachment(v842);
      v844 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_folder(v843);
      v845 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_labels(v844);
      v846 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_provider(v845);
      v847 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Writing(v846);
      v848 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Arithmetic(v847);
      v849 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_StopWatch(v848);
      v850 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonArithmetic_ArithmeticAttribute(v849);
      v851 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonWriting_WritingAttribute(v850);
      v852 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleArithmetic_ArithmeticAttribute(v851);
      v853 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleWriting_WritingAttribute(v852);
      v854 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_show(v853);
      v855 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_find(v854);
      v856 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_lap(v855);
      v857 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_reset(v856);
      v858 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_start(v857);
      v859 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleArithmetic_ArithmeticAttribute_ArithmeticAttributesPercentage(v858);
      v860 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleWriting_WritingAttribute_WritingsNounPoem(v859);
      v861 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleWriting_WritingAttribute_WritingsNounCouplet(v860);
      v862 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleWriting_WritingAttribute_WritingsNounXiehouyu(v861);
      v863 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleWriting_WritingAttribute_WritingsNounIdiomSolitaire(v862);
      AttributeNextVerse = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleWriting_WritingAttribute_WritingsQueryAttributeNextVerse(v863);
      AttributePrevVerse = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleWriting_WritingAttribute_WritingsQueryAttributePrevVerse(AttributeNextVerse);
      AttributeMatchingCouplet = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleWriting_WritingAttribute_WritingsQueryAttributeMatchingCouplet(AttributePrevVerse);
      AttributeAuthorCollection = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleWriting_WritingAttribute_WritingsQueryAttributeAuthorCollection(AttributeMatchingCouplet);
      v868 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_authors(AttributeAuthorCollection);
      v869 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_identifyingVerseContent(v868);
      v870 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_topics(v869);
      v871 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_mathExpression(v870);
      v872 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Notification(v871);
      v873 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonNotification_NotificationAttribute(v872);
      v874 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotification_NotificationAttribute(v873);
      v875 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotification_NotificationAttribute_NotificationAttributeLatest(v874);
      v876 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_notificationType(v875);
      v877 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_quit(v876);
      v878 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Announcement(v877);
      v879 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_NotebookItem(v878);
      v880 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_EventTrigger(v879);
      v881 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DailyBriefing(v880);
      v882 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PointOfInterest(v881);
      v883 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PersonContact(v882);
      v884 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_NotebookList(v883);
      v885 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MicroGeographicArea(v884);
      v886 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonEventTrigger_EventTriggerAttribute(v885);
      v887 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType(v886);
      v888 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookAttribute(v887);
      v889 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::uso_NLv3UnknownEntity(v888);
      v890 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleContact_ContactAttribute(v889);
      v891 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEventTrigger_EventTriggerAttribute(v890);
      v892 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute(v891);
      v893 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_deactivate(v892);
      v894 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_forgetNameCorrection(v893);
      v895 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_learnNameCorrection(v894);
      v896 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_pronounceName(v895);
      v897 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Folder(v896);
      v898 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Item(v897);
      v899 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_List(v898);
      v900 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Note(v899);
      v901 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Reminder(v900);
      v902 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Subtask(v901);
      v903 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonNotebook_NotebookItemType_Task(v902);
      v904 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleContact_ContactAttribute_ContactAttributesHomePage(v903);
      v905 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleContact_ContactAttribute_ContactAttributesRingtone(v904);
      v906 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleContact_ContactAttribute_ContactAttributesTextTone(v905);
      v907 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleContact_ContactAttribute_ContactAttributesPast(v906);
      v908 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleContact_ContactAttribute_ContactAttributesPresent(v907);
      v909 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleContact_ContactAttribute_ContactAttributesFuture(v908);
      v910 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionArrival(v909);
      v911 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionDeparture(v910);
      v912 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionEnterVehicle(v911);
      v913 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleEventTrigger_EventTriggerAttribute_NotebookLocationConditionDepartVehicle(v912);
      v914 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookSortUpcoming(v913);
      v915 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookSortRecent(v914);
      v916 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookSortOld(v915);
      v917 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookSortShortDistance(v916);
      v918 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookSortLongDistance(v917);
      v919 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookSortMostItems(v918);
      v920 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookSortLeastItems(v919);
      v921 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookSortLongLength(v920);
      v922 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookSortShortLength(v921);
      v923 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookSortHighPriority(v922);
      v924 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookSortLowPriority(v923);
      v925 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookAttributesComplete(v924);
      v926 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookAttributesIncomplete(v925);
      v927 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookAttributesPriority(v926);
      v928 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookAttributesUnflagged(v927);
      v929 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookAttributesFlagged(v928);
      v930 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookAttributesAudio(v929);
      v931 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookAttributesStatus(v930);
      v932 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookAttributesOverdue(v931);
      v933 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookAttributesScheduled(v932);
      v934 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookAttributesShared(v933);
      v935 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookContentEntityWebsite(v934);
      v936 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookContentEntityUrl(v935);
      v937 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookContentEntityPhoto(v936);
      v938 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookContentEntityVideo(v937);
      v939 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookContentEntityApp(v938);
      v940 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookContentEntityEmail(v939);
      v941 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookContentEntityMessage(v940);
      v942 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookContentEntityPodcast(v941);
      v943 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookContentEntitySong(v942);
      v944 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookContentEntityArticle(v943);
      v945 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookPriorityHigh(v944);
      v946 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookPriorityMedium(v945);
      v947 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookPriorityLow(v946);
      v948 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleNotebook_NotebookAttribute_NotebookContentEntityThis(v947);
      v949 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dateTimeModified(v948);
      v950 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_itemType(v949);
      v951 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_notebookList(v950);
      v952 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_geographicAreaTrigger(v951);
      v953 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_personTrigger(v952);
      v954 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_recurringDateTimeTrigger(v953);
      v955 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_address(v954);
      v956 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedOrganization(v955);
      v957 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_notebookItems(v956);
      v958 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_previous(v957);
      v959 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Uri(v958);
      v960 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedDate(v959);
      v961 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::apple_PhotoMemory(v960);
      v962 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CarProfile(v961);
      v963 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Workout(v962);
      v964 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AppListing(v963);
      v965 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Currency(v964);
      v966 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CurrencyAmount(v965);
      v967 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_VoiceCommand(v966);
      v968 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PhotoCollection(v967);
      v969 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Photo(v968);
      v970 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Audiobook(v969);
      v971 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentAccount(v970);
      v972 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Car(v971);
      v973 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaShow(v972);
      v974 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItem(v973);
      v975 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaPlaylist(v974);
      v976 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonApp_AppListingAttribute(v975);
      v977 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonApp_AppAttribute(v976);
      v978 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::sirikit_MusicArtist(v977);
      v979 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::sirikit_ContactGroup(v978);
      v980 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::sirikit_ContactAgent(v979);
      v981 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::sirikit_MediaShow(v980);
      v982 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::sirikit_PaymentOrganization(v981);
      v983 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::sirikit_AudiobookAuthor(v982);
      v984 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_continue(v983);
      v985 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_close(v984);
      v986 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_install(v985);
      v987 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_uninstall(v986);
      v988 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_updateApp(v987);
      v989 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CurrencyAmount_Free(v988);
      v990 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::sirikit_AudiobookAuthor_User(v989);
      v991 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_keywords(v990);
      v992 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_photos(v991);
      v993 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_tags(v992);
      v994 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_nickname(v993);
      v995 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_appListing(v994);
      v996 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_developer(v995);
      v997 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute(v996);
      v998 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute(v997);
      v999 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_AppViewTypeGlance(v998);
      v1000 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_OperatingSystemIos(v999);
      v1001 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_OperatingSystemMacosX(v1000);
      v1002 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_OperatingSystemTvos(v1001);
      v1003 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppAttribute_OperatingSystemWatchos(v1002);
      v1004 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingAgeRatingSeniorCitizen(v1003);
      v1005 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingAgeRatingTeenStudent(v1004);
      v1006 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchEditorsChoice(v1005);
      v1007 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchTopFree(v1006);
      v1008 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchTopGrossing(v1007);
      v1009 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchTopPaid(v1008);
      ShouldIGet = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingCuratedSearchWhatAppShouldIGet(v1009);
      v1011 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeS(ShouldIGet);
      v1012 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeSS(v1011);
      v1013 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeSSS(v1012);
      v1014 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeSSSS(v1013);
      v1015 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingPriceRangeOnSale(v1014);
      v1016 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProviderAppleAppStore(v1015);
      v1017 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProviderGeneric(v1016);
      v1018 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProviderItunes(v1017);
      v1019 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProviderGooglePlayStore(v1018);
      v1020 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingProximityNear(v1019);
      v1021 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSearchAttributesGoodReviews(v1020);
      v1022 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSearchAttributesCriticallyAcclaimed(v1021);
      v1023 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSearchAttributesPaid(v1022);
      v1024 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSearchAttributesPurchased(v1023);
      v1025 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSortBest(v1024);
      v1026 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSortNewest(v1025);
      v1027 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleApp_AppListingAttribute_AppListingSortPopular(v1026);
      v1028 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_notExists(v1027);
      v1029 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_delete(v1028);
      v1030 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PhoneCallMode(v1029);
      v1031 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Age(v1030);
      v1032 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PhoneCallMode_Audio(v1031);
      v1033 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PhoneCallMode_Video(v1032);
      v1034 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Age_Senior(v1033);
      v1035 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Age_Teenager(v1034);
      v1036 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_ageRating(v1035);
      v1037 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_snooze(v1036);
      v1038 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_run(v1037);
      v1039 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ActivationValue(v1038);
      v1040 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Setting(v1039);
      v1041 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DeviceProperty(v1040);
      v1042 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SettingValue(v1041);
      v1043 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceNumberTrigger_decreaseBy(v1042);
      v1044 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTrigger_disable(v1043);
      v1045 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTrigger_enable(v1044);
      v1046 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceNumberTrigger_increaseBy(v1045);
      v1047 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTrigger_set(v1046);
      v1048 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceDateTimeRangeTrigger_setDateTimeRange(v1047);
      v1049 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceDurationTrigger_setDuration(v1048);
      v1050 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceStringTrigger_setLabel(v1049);
      v1051 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceNumberTrigger_setNumber(v1050);
      v1052 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTrigger_toggle(v1051);
      v1053 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_MaximumValue(v1052);
      v1054 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_MiddleValue(v1053);
      v1055 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_MinimumValue(v1054);
      v1056 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ActivationValue_Off(v1055);
      v1057 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ActivationValue_On(v1056);
      v1058 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_number(v1057);
      v1059 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_string(v1058);
      v1060 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_propertyValue(v1059);
      v1061 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_activationValue(v1060);
      v1062 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dateTimeRangeValue(v1061);
      v1063 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_labeledValue(v1062);
      v1064 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_numericValue(v1063);
      long long v1065 = 0u;
      long long v1066 = 0u;
      long long v1067 = 0u;
      long long v1068 = 0u;
      long long v1069 = 0u;
      long long v1070 = 0u;
      long long v1071 = 0u;
      long long v1072 = 0u;
      long long v1073 = 0u;
      long long v1074 = 0u;
      long long v1075 = 0u;
      long long v1076 = 0u;
      long long v1077 = 0u;
      long long v1078 = 0u;
      long long v1079 = 0u;
      long long v1080 = 0u;
      long long v1081 = 0u;
      long long v1082 = 0u;
      long long v1083 = 0u;
      long long v1084 = 0u;
      long long v1085 = 0u;
      long long v1086 = 0u;
      long long v1087 = 0u;
      long long v1088 = 0u;
      long long v1089 = 0u;
      long long v1090 = 0u;
      long long v1091 = 0u;
      long long v1092 = 0u;
      v1093 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Color(v1064);
      v1094 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DeviceCategory(v1093);
      v1095 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Agent_UnknownAgent(v1094);
      v1096 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_deviceCategory(v1095);
      v1097 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_UserVisualMedia(v1096);
      v1098 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Slideshow(v1097);
      v1099 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PhotoTag(v1098);
      v1100 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_LocalBusiness(v1099);
      v1101 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Size(v1100);
      v1102 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Video(v1101);
      v1103 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PhotoTopic(v1102);
      v1104 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPhotos_PhotoMemoryFilter(v1103);
      v1105 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPhotos_PhotoCollectionAttribute(v1104);
      v1106 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPhotos_SlideshowAttribute(v1105);
      v1107 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPhotos_PhotoFilter(v1106);
      v1108 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPhotos_SlideshowFilter(v1107);
      v1109 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPhotos_VideoFilter(v1108);
      v1110 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPhotos_PhotoAttribute(v1109);
      v1111 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPhotos_PhotoMemoryAttribute(v1110);
      v1112 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPhotos_VideoAttribute(v1111);
      v1113 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPhotos_PhotoCollectionFilter(v1112);
      v1114 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_like(v1113);
      v1115 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_unlike(v1114);
      v1116 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_SunriseToSunset(v1115);
      v1117 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_SunsetToSunrise(v1116);
      v1118 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_SunriseToSunset(v1117);
      v1119 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_SunsetToSunrise(v1118);
      v1120 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Person_UnknownAgent(v1119);
      v1121 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_LocalBusiness_UnknownAgent(v1120);
      v1122 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Organization_UnknownAgent(v1121);
      long long v1123 = 0u;
      v1124 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_photoCollectionFilter(v1122);
      v1125 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_slideshowFilter(v1124);
      v1126 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_videoFilter(v1125);
      v1127 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_photoMemoryFilter(v1126);
      v1128 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_photoTag(v1127);
      v1129 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_photoFilter(v1128);
      v1130 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_photoCollection(v1129);
      v1131 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_author(v1130);
      v1132 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_people(v1131);
      v1133 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_contents(v1132);
      v1134 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_filters(v1133);
      v1135 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_albums(v1134);
      v1136 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Clock(v1135);
      v1137 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpendingCategory(v1136);
      v1138 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentType(v1137);
      v1139 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Payment(v1138);
      v1140 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Religion(v1139);
      v1141 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentSortKey(v1140);
      v1142 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_BillCategory(v1141);
      v1143 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentAccountType(v1142);
      v1144 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateType(v1143);
      v1145 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPayments_CurrencyAmountAttribute(v1144);
      v1146 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPayments_PaymentAccountAttribute(v1145);
      v1147 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPayments_PaymentAttribute(v1146);
      v1148 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferencePhotoCollection_addToAlbum(v1147);
      v1149 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferencePhotoTag_applyTag(v1148);
      v1150 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferencePhotoCollection_removeFromAlbum(v1149);
      v1151 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferencePhotoTag_removeTag(v1150);
      v1152 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferencePhotoMemoryFilter_applyFilter(v1151);
      v1153 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferencePhotoMemoryFilter_removeFilter(v1152);
      v1154 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_cancel(v1153);
      v1155 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Target_pay(v1154);
      v1156 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Target_requestMoney(v1155);
      v1157 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_update(v1156);
      v1158 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTargetSelect_convert(v1157);
      v1159 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferencePhotoCollectionFilter_applyFilter(v1158);
      v1160 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferencePhotoCollectionFilter_removeFilter(v1159);
      v1161 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceSlideshowFilter_applyFilter(v1160);
      v1162 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceSlideshowFilter_removeFilter(v1161);
      v1163 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferencePhotoFilter_applyFilter(v1162);
      v1164 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferencePhotoFilter_removeFilter(v1163);
      v1165 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Target_submitApplication(v1164);
      v1166 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceVideoFilter_applyFilter(v1165);
      v1167 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceVideoFilter_removeFilter(v1166);
      v1168 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentType_Bill(v1167);
      v1169 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentType_Fee(v1168);
      v1170 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentType_Invoice(v1169);
      v1171 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentType_Statement(v1170);
      v1172 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentType_Transaction(v1171);
      v1173 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentSortKey_Age(v1172);
      v1174 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentSortKey_Amount(v1173);
      v1175 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentSortKey_DueDate(v1174);
      v1176 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentSortKey_InterestRate(v1175);
      v1177 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentSortKey_LateFees(v1176);
      v1178 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentSortKey_Rewards(v1177);
      v1179 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateType_BankHoliday(v1178);
      v1180 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateType_Holiday(v1179);
      long long v1181 = 0u;
      long long v1182 = 0u;
      long long v1183 = 0u;
      long long v1184 = 0u;
      long long v1185 = 0u;
      uint64_t v1186 = 0;
      v1187 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_paymentSortKey(v1180);
      v1188 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_amountDue(v1187);
      v1189 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_billCategory(v1188);
      v1190 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dueDate(v1189);
      v1191 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_memo(v1190);
      v1192 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_recipient(v1191);
      v1193 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_spendingCategory(v1192);
      v1194 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_transactionDateTime(v1193);
      v1195 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dateType(v1194);
      v1196 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_payment(v1195);
      v1197 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_accountType(v1196);
      v1198 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_balance(v1197);
      v1199 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_holder(v1198);
      v1200 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_secondaryBalance(v1199);
      v1201 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_religion(v1200);
      v1202 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferencePaymentSortKey_summariseHighest(v1201);
      v1203 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferencePaymentSortKey_summariseLowest(v1202);
      v1204 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetDate_DayAfterTomorrow(v1203);
      v1205 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OffsetDate_DayBeforeYesterday(v1204);
      v1206 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTime_EveryDay(v1205);
      v1207 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRangeQualifier_HalfOf(v1206);
      v1208 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Date_DayAfterTomorrow(v1207);
      v1209 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Date_DayBeforeYesterday(v1208);
      long long v1210 = 0u;
      v1211 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute(v1209);
      v1212 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute(v1211);
      v1213 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute(v1212);
      v1214 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeCompleted(v1213);
      v1215 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributePending(v1214);
      v1216 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeAborted(v1215);
      v1217 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeDeclined(v1216);
      v1218 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributePaid(v1217);
      v1219 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeUnpaid(v1218);
      v1220 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeDeposited(v1219);
      v1221 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeSent(v1220);
      v1222 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeRequested(v1221);
      v1223 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeCashed(v1222);
      v1224 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeWhenDue(v1223);
      v1225 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeDue(v1224);
      v1226 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeOverdue(v1225);
      v1227 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeMininumDue(v1226);
      v1228 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeRewards(v1227);
      v1229 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeRecurring(v1228);
      v1230 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeReceived(v1229);
      v1231 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAttribute_PaymentsAttributeActivate(v1230);
      v1232 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionFull(v1231);
      v1233 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionMinimum(v1232);
      v1234 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionAmountDue(v1233);
      v1235 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionStatementBalance(v1234);
      v1236 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionMaximumAllowed(v1235);
      v1237 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_CurrencyAmountAttribute_PaymentsAmountProportionMinimumAllowed(v1236);
      v1238 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeCashed(v1237);
      v1239 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeLateFee(v1238);
      v1240 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeInterestRate(v1239);
      v1241 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeMininumDue(v1240);
      v1242 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeRewards(v1241);
      v1243 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeExpirationDate(v1242);
      v1244 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeSecurityCode(v1243);
      v1245 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributePin(v1244);
      v1246 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributePassword(v1245);
      v1247 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeCreditLimit(v1246);
      FourDigits = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeLastFourDigits(v1247);
      v1249 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeCreditRemaining(FourDigits);
      v1250 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributePaymentSchedule(v1249);
      v1251 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeActivate(v1250);
      v1252 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePayments_PaymentAccountAttribute_PaymentsAttributeLock(v1251);
      v1253 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute(v1252);
      v1254 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesRecentlyAdded(v1253);
      v1255 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesRecentlyDeleted(v1254);
      v1256 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFavorites(v1255);
      v1257 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesPanoramas(v1256);
      v1258 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesVerticalPanoramas(v1257);
      v1259 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesHorizontalPanoramas(v1258);
      v1260 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesSloMo(v1259);
      v1261 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesTimeLapse(v1260);
      v1262 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesBursts(v1261);
      v1263 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesHDR(v1262);
      v1264 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFlashOn(v1263);
      v1265 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFlashOff(v1264);
      v1266 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesHiFrameRate(v1265);
      v1267 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributes120fps(v1266);
      v1268 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributes240fps(v1267);
      v1269 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesLandscape(v1268);
      v1270 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesPortrait(v1269);
      v1271 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesSquare(v1270);
      v1272 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFromFrontFacingCamera(v1271);
      v1273 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesFromRearFacingCamera(v1272);
      v1274 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesPortraitMode(v1273);
      v1275 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesLive(v1274);
      v1276 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesLoop(v1275);
      v1277 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesBounce(v1276);
      v1278 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesLongExposure(v1277);
      v1279 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesScreenshot(v1278);
      v1280 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoAttributesSelfie(v1279);
      v1281 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoAttribute_PhotoNounGIFs(v1280);
      v1282 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute(v1281);
      v1283 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter(v1282);
      v1284 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute(v1283);
      v1285 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter(v1284);
      v1286 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter(v1285);
      v1287 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute(v1286);
      v1288 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute(v1287);
      v1289 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter(v1288);
      v1290 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter(v1289);
      v1291 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesRecentlyAdded(v1290);
      v1292 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesRecentlyDeleted(v1291);
      v1293 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFavorites(v1292);
      v1294 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesPanoramas(v1293);
      v1295 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesVerticalPanoramas(v1294);
      v1296 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesHorizontalPanoramas(v1295);
      v1297 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesSloMo(v1296);
      v1298 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesTimeLapse(v1297);
      v1299 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesBursts(v1298);
      v1300 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesHDR(v1299);
      v1301 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFlashOn(v1300);
      v1302 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFlashOff(v1301);
      v1303 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesHiFrameRate(v1302);
      v1304 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributes120fps(v1303);
      v1305 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributes240fps(v1304);
      v1306 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLandscape(v1305);
      v1307 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesPortrait(v1306);
      v1308 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesSquare(v1307);
      v1309 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFromFrontFacingCamera(v1308);
      v1310 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesFromRearFacingCamera(v1309);
      v1311 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesPortraitMode(v1310);
      v1312 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLive(v1311);
      v1313 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLoop(v1312);
      v1314 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesBounce(v1313);
      v1315 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesLongExposure(v1314);
      v1316 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesScreenshot(v1315);
      v1317 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionAttribute_PhotoAttributesSelfie(v1316);
      v1318 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterRedEye(v1317);
      v1319 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterBlackAndWhite(v1318);
      v1320 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterMono(v1319);
      v1321 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterTonal(v1320);
      v1322 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterNoir(v1321);
      v1323 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterFade(v1322);
      v1324 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterNone(v1323);
      v1325 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterChrome(v1324);
      v1326 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterProcess(v1325);
      v1327 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterTransfer(v1326);
      v1328 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoCollection_PhotoCollectionFilter_PhotoFilterInstant(v1327);
      v1329 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesRecentlyAdded(v1328);
      v1330 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesRecentlyDeleted(v1329);
      v1331 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFavorites(v1330);
      v1332 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesPanoramas(v1331);
      v1333 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesVerticalPanoramas(v1332);
      v1334 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesHorizontalPanoramas(v1333);
      v1335 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesSloMo(v1334);
      v1336 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesTimeLapse(v1335);
      v1337 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesBursts(v1336);
      v1338 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesHDR(v1337);
      v1339 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFlashOn(v1338);
      v1340 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFlashOff(v1339);
      v1341 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesHiFrameRate(v1340);
      v1342 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributes120fps(v1341);
      v1343 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributes240fps(v1342);
      v1344 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLandscape(v1343);
      v1345 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesPortrait(v1344);
      v1346 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesSquare(v1345);
      v1347 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFromFrontFacingCamera(v1346);
      v1348 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesFromRearFacingCamera(v1347);
      v1349 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesPortraitMode(v1348);
      v1350 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLive(v1349);
      v1351 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLoop(v1350);
      v1352 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesBounce(v1351);
      v1353 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesLongExposure(v1352);
      v1354 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesScreenshot(v1353);
      v1355 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryAttribute_PhotoAttributesSelfie(v1354);
      v1356 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterRedEye(v1355);
      v1357 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterBlackAndWhite(v1356);
      v1358 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterMono(v1357);
      v1359 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterTonal(v1358);
      v1360 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterNoir(v1359);
      v1361 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterFade(v1360);
      v1362 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterNone(v1361);
      v1363 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterChrome(v1362);
      v1364 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterProcess(v1363);
      v1365 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterTransfer(v1364);
      v1366 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotoMemory_PhotoMemoryFilter_PhotoFilterInstant(v1365);
      v1367 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterRedEye(v1366);
      v1368 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterBlackAndWhite(v1367);
      v1369 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterMono(v1368);
      v1370 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterTonal(v1369);
      v1371 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterNoir(v1370);
      v1372 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterFade(v1371);
      v1373 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterNone(v1372);
      v1374 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterChrome(v1373);
      v1375 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterProcess(v1374);
      v1376 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterTransfer(v1375);
      v1377 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowFilter_PhotoFilterInstant(v1376);
      v1378 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesRecentlyAdded(v1377);
      v1379 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesRecentlyDeleted(v1378);
      v1380 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFavorites(v1379);
      v1381 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesPanoramas(v1380);
      v1382 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesVerticalPanoramas(v1381);
      v1383 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesHorizontalPanoramas(v1382);
      v1384 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesSloMo(v1383);
      v1385 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesTimeLapse(v1384);
      v1386 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesBursts(v1385);
      v1387 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesHDR(v1386);
      v1388 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFlashOn(v1387);
      v1389 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFlashOff(v1388);
      v1390 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesHiFrameRate(v1389);
      v1391 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributes120fps(v1390);
      v1392 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributes240fps(v1391);
      v1393 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesLandscape(v1392);
      v1394 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesPortrait(v1393);
      v1395 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesSquare(v1394);
      v1396 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFromFrontFacingCamera(v1395);
      v1397 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesFromRearFacingCamera(v1396);
      v1398 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesPortraitMode(v1397);
      v1399 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesLive(v1398);
      v1400 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesLoop(v1399);
      v1401 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesBounce(v1400);
      v1402 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesLongExposure(v1401);
      v1403 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesScreenshot(v1402);
      v1404 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleSlideshow_SlideshowAttribute_PhotoAttributesSelfie(v1403);
      v1405 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesRecentlyAdded(v1404);
      v1406 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesRecentlyDeleted(v1405);
      v1407 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFavorites(v1406);
      v1408 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesPanoramas(v1407);
      v1409 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesVerticalPanoramas(v1408);
      v1410 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesHorizontalPanoramas(v1409);
      v1411 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesSloMo(v1410);
      v1412 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesTimeLapse(v1411);
      v1413 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesBursts(v1412);
      v1414 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesHDR(v1413);
      v1415 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFlashOn(v1414);
      v1416 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFlashOff(v1415);
      v1417 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesHiFrameRate(v1416);
      v1418 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributes120fps(v1417);
      v1419 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributes240fps(v1418);
      v1420 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesLandscape(v1419);
      v1421 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesPortrait(v1420);
      v1422 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesSquare(v1421);
      v1423 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFromFrontFacingCamera(v1422);
      v1424 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesFromRearFacingCamera(v1423);
      v1425 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesPortraitMode(v1424);
      v1426 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesLive(v1425);
      v1427 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesLoop(v1426);
      v1428 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesBounce(v1427);
      v1429 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesLongExposure(v1428);
      v1430 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesScreenshot(v1429);
      v1431 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoAttribute_PhotoAttributesSelfie(v1430);
      v1432 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterRedEye(v1431);
      v1433 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterBlackAndWhite(v1432);
      v1434 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterMono(v1433);
      v1435 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterTonal(v1434);
      v1436 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterNoir(v1435);
      v1437 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterFade(v1436);
      v1438 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterNone(v1437);
      v1439 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterChrome(v1438);
      v1440 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterProcess(v1439);
      v1441 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterTransfer(v1440);
      v1442 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleVideo_VideoFilter_PhotoFilterInstant(v1441);
      v1443 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterRedEye(v1442);
      v1444 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterBlackAndWhite(v1443);
      v1445 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterMono(v1444);
      v1446 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterTonal(v1445);
      v1447 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterNoir(v1446);
      v1448 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterFade(v1447);
      v1449 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterNone(v1448);
      v1450 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterChrome(v1449);
      v1451 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterProcess(v1450);
      v1452 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterTransfer(v1451);
      v1453 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhotos_PhotoFilter_PhotoFilterInstant(v1452);
      MyStatus = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_FindMyStatus(v1453);
      My_DeviceAttribute = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonFindMy_DeviceAttribute(MyStatus);
      v1456 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_ping(My_DeviceAttribute);
      v1457 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_setIdentity(v1456);
      long long v1458 = 0u;
      v1459 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_hiddenPeople(v1457);
      v1460 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_recipents(v1459);
      v1461 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_eventTrigger(v1460);
      v1462 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_properties(v1461);
      v1463 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_paymentType(v1462);
      v1464 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_contactAddressTrigger(v1463);
      v1465 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_size(v1464);
      v1466 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::RecipientsEventTrigger_disableNotifications(v1465);
      v1467 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::RecipientsEventTrigger_enableNotifications(v1466);
      v1468 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::RecipientsHiddenPeople_hide(v1467);
      v1469 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::RecipientsHiddenPeople_unhide(v1468);
      v1470 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_GeographicArea_Here(v1469);
      v1471 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_GeographicArea_Nearby(v1470);
      long long v1472 = 0u;
      long long v1473 = 0u;
      v1474 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MicroGeographicArea_Here(v1471);
      v1475 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MicroGeographicArea_Nearby(v1474);
      v1476 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_slideshowFilters(v1475);
      v1477 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_photoFilters(v1476);
      v1478 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_photoCollections(v1477);
      v1479 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_photoCollectionFilters(v1478);
      v1480 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_videoFilters(v1479);
      v1481 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_photoMemoryFilters(v1480);
      v1482 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_photoTags(v1481);
      v1483 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_NavigationMenu(v1482);
      v1484 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CarSetting(v1483);
      v1485 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_goBack(v1484);
      v1486 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_goHome(v1485);
      v1487 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_undo(v1486);
      v1488 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_park(v1487);
      v1489 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceMeasurementTrigger_decreaseByMeasurement(v1488);
      v1490 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceMeasurementTrigger_increaseByMeasurement(v1489);
      v1491 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceMeasurementTrigger_setMeasurement(v1490);
      v1492 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceProfile_setProfile(v1491);
      v1493 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PaymentType_Message(v1492);
      long long v1494 = 0u;
      long long v1495 = 0u;
      long long v1496 = 0u;
      long long v1497 = 0u;
      v1498 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_profile(v1493);
      v1499 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType(v1498);
      v1500 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Attachment(v1499);
      v1501 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Target_share(v1500);
      v1502 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Location(v1501);
      v1503 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Photo(v1502);
      v1504 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Podcast(v1503);
      v1505 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Screenshot(v1504);
      v1506 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Song(v1505);
      v1507 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Video(v1506);
      v1508 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Decimal_Percent(v1507);
      uint64_t v1509 = 0;
      v1510 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_type(v1508);
      v1511 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_PhoneCallNounGroupFacetime(v1510);
      v1512 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Stock(v1511);
      v1513 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockType(v1512);
      v1514 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute(v1513);
      v1515 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockChangeState(v1514);
      v1516 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Stock_UnknownAgent(v1515);
      v1517 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockType_Stock(v1516);
      v1518 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockType_StockMarket(v1517);
      v1519 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_ClosingPrice(v1518);
      v1520 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_DividendYield(v1519);
      v1521 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Earnings(v1520);
      v1522 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_EarningsPerShare(v1521);
      v1523 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_EarningsReleaseDate(v1522);
      v1524 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_High52w(v1523);
      v1525 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_HighPrice(v1524);
      v1526 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Low52w(v1525);
      v1527 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_LowPrice(v1526);
      v1528 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_MarketCap(v1527);
      v1529 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Name(v1528);
      v1530 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_OpeningPrice(v1529);
      v1531 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_PERatio(v1530);
      v1532 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_PreviousClosingPrice(v1531);
      v1533 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Price(v1532);
      v1534 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_PriceChange(v1533);
      v1535 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_PriceChangePercent(v1534);
      v1536 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Profit(v1535);
      v1537 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Symbol(v1536);
      v1538 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockAttribute_Volume(v1537);
      v1539 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockChangeState_GoDown(v1538);
      v1540 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockChangeState_GoUp(v1539);
      v1541 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockChangeState_GoUpOrDown(v1540);
      v1542 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonStock_StockChangeState_Unchanged(v1541);
      v1543 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::StockSummarise_summarise(v1542);
      v1544 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_requestedAttributes(v1543);
      v1545 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_stockChangeState(v1544);
      v1546 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_stockType(v1545);
      v1547 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_ticker(v1546);
      v1548 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType(v1547);
      v1549 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_create(v1548);
      v1550 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_pause(v1549);
      v1551 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_play(v1550);
      v1552 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_repeat(v1551);
      v1553 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_restart(v1552);
      v1554 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_resume(v1553);
      v1555 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_shuffle(v1554);
      v1556 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_skipBackward(v1555);
      v1557 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_skipForward(v1556);
      v1558 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_start(v1557);
      v1559 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_stop(v1558);
      v1560 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::appleContact_ContactAttribute_Contact(v1559);
      v1561 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Album(v1560);
      v1562 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Artist(v1561);
      v1563 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_AudioBook(v1562);
      v1564 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Compilation(v1563);
      v1565 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Ep(v1564);
      v1566 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Episode(v1565);
      v1567 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Genre(v1566);
      v1568 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_ITunesU(v1567);
      v1569 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Lp(v1568);
      v1570 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Music(v1569);
      v1571 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_MusicPlaylist(v1570);
      v1572 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_MusicVideo(v1571);
      v1573 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_News(v1572);
      v1574 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Playlist(v1573);
      v1575 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Podcast(v1574);
      v1576 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_PodcastPromotionTopic(v1575);
      v1577 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_PodcastStation(v1576);
      v1578 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_RadioShow(v1577);
      v1579 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_RadioStation(v1578);
      v1580 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Ringtone(v1579);
      v1581 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Show(v1580);
      v1582 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Single(v1581);
      v1583 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Song(v1582);
      v1584 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Sounds(v1583);
      v1585 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Station(v1584);
      v1586 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_TvShow(v1585);
      v1587 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Video(v1586);
      v1588 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Album(v1587);
      v1589 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_App(v1588);
      v1590 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Article(v1589);
      v1591 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Book(v1590);
      v1592 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Episode(v1591);
      v1593 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Movie(v1592);
      v1594 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_MyLocation(v1593);
      v1595 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Playlist(v1594);
      v1596 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Show(v1595);
      v1597 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Webpage(v1596);
      v1598 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonContact_ContactAttribute_Contact(v1597);
      long long v1599 = 0u;
      long long v1600 = 0u;
      v1601 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_phoneticStructuredName(v1598);
      v1602 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_mediaItemType(v1601);
      v1603 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_Group(v1602);
      v1604 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::applePhoneCall_PhoneCallAttribute_History(v1603);
      v1605 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_AudioMessage(v1604);
      v1606 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPhoneCall_PhoneCallAttribute_Group(v1605);
      v1607 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonPhoneCall_PhoneCallAttribute_History(v1606);
      uint64_t v1608 = 0;
      v1609 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_Billion(v1607);
      v1610 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_Hundred(v1609);
      v1611 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_HundredThousand(v1610);
      v1612 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_Million(v1611);
      v1613 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_TenMillion(v1612);
      v1614 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_TenThousand(v1613);
      v1615 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_Thousand(v1614);
      v1616 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_Trillion(v1615);
      v1617 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_Twelve(v1616);
      v1618 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dateTimeRangeTrigger(v1617);
      v1619 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_HomeEntity(v1618);
      v1620 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Business(v1619);
      v1621 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Contact(v1620);
      v1622 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Content(v1621);
      v1623 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_CurrencyAmount(v1622);
      v1624 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_DateTime(v1623);
      v1625 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Document(v1624);
      v1626 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Email(v1625);
      v1627 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Event(v1626);
      v1628 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Group(v1627);
      v1629 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_PhoneNumber(v1628);
      v1630 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_URL(v1629);
      v1631 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedSetting(v1630);
      v1632 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Window(v1631);
      v1633 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Entity_noVerb(v1632);
      v1634 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Window(v1633);
      v1635 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageMode(v1634);
      v1636 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Group_UnknownAgent(v1635);
      v1637 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageMode_Text(v1636);
      v1638 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::sirikit_MusicArtist_UnknownAgent(v1637);
      v1639 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::sirikit_ContactGroup_UnknownAgent(v1638);
      v1640 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::sirikit_ContactAgent_UnknownAgent(v1639);
      v1641 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::sirikit_PaymentOrganization_UnknownAgent(v1640);
      v1642 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::sirikit_AudiobookAuthor_UnknownAgent(v1641);
      v1643 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DailyBriefingItem(v1642);
      v1644 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_join(v1643);
      v1645 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Exactly(v1644);
      uint64_t v1646 = 0;
      v1647 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_UserEntity(v1645);
      v1648 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SearchObjectType(v1647);
      v1649 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureComponent(v1648);
      v1650 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit(v1649);
      v1651 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_UserEntityType(v1650);
      v1652 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SearchObject(v1651);
      v1653 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_UserEntity_Here(v1652);
      v1654 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_UserEntity_There(v1653);
      v1655 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Degrees(v1654);
      v1656 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_DegreesCelsius(v1655);
      v1657 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_DegreesFahrenheit(v1656);
      v1658 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_userEntities(v1657);
      v1659 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedUserEntities(v1658);
      v1660 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_types(v1659);
      v1661 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_settingTrigger(v1660);
      v1662 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_measurementValue(v1661);
      v1663 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_usoConvertFrom(v1662);
      v1664 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SportsItem(v1663);
      v1665 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SocialConversation(v1664);
      v1666 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SportsItemType(v1665);
      v1667 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Target_action(v1666);
      v1668 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_UserEntity_Everywhere(v1667);
      v1669 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_UserEntity_Nowhere(v1668);
      v1670 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time12HourClock_Sunrise(v1669);
      v1671 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time12HourClock_Sunset(v1670);
      v1672 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time_Sunrise(v1671);
      v1673 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time_Sunset(v1672);
      v1674 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Car_Here(v1673);
      v1675 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Car_There(v1674);
      v1676 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time24HourClock_Sunrise(v1675);
      v1677 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Time24HourClock_Sunset(v1676);
      uint64_t v1678 = 0;
      v1679 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_userEntity(v1677);
      v1680 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedSportsItems(v1679);
      v1681 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dialog(v1680);
      v1682 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Car_Everywhere(v1681);
      v1683 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Car_Nowhere(v1682);
      v1684 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AppEntityType(v1683);
      v1685 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AppAction(v1684);
      v1686 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AppSection(v1685);
      v1687 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AppEntity(v1686);
      v1688 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_VoiceCommandPayload(v1687);
      v1689 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_redo(v1688);
      v1690 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceVoiceCommandPayload_execute(v1689);
      v1691 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_copy(v1690);
      v1692 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_cut(v1691);
      v1693 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_paste(v1692);
      long long v1694 = 0u;
      long long v1695 = 0u;
      uint64_t v1696 = 0;
      v1697 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_payload(v1693);
      v1698 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedAppEntity(v1697);
      v1699 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_section(v1698);
      v1700 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SiriAlias(v1699);
      v1701 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_alias(v1700);
      v1702 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_NotificationType(v1701);
      v1703 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SettingValueType(v1702);
      v1704 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_NotificationAction(v1703);
      v1705 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonUserEntity_UserEntityAttribute(v1704);
      v1706 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_perform(v1705);
      v1707 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceGeographicArea_checkLocation(v1706);
      Location = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_getLocation(v1707);
      v1709 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SettingValueType_Current(Location);
      v1710 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SettingValueType_Target(v1709);
      v1711 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonEventTrigger_EventTriggerAttribute_ConditionArrival(v1710);
      v1712 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonEventTrigger_EventTriggerAttribute_ConditionDeparture(v1711);
      v1713 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonEventTrigger_EventTriggerAttribute_ConditionDepartVehicle(v1712);
      v1714 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonEventTrigger_EventTriggerAttribute_ConditionEnterVehicle(v1713);
      v1715 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonUserEntity_UserEntityAttribute_New(v1714);
      v1716 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonUserEntity_UserEntityAttribute_Old(v1715);
      uint64_t v1717 = 0;
      uint64_t v1719 = 0;
      uint64_t v1718 = 0;
      v1720 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_userEntityTrigger(v1716);
      v1721 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_valueType(v1720);
      v1722 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedActions(v1721);
      v1723 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_referenceDateTime(v1722);
      v1724 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_names(v1723);
      v1725 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CrisisSupport(v1724);
      v1726 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Utilities(v1725);
      v1727 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_discoverCapabilities(v1726);
      v1728 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Language(v1727);
      v1729 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_enterMarkup(v1728);
      v1730 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_exitMarkup(v1729);
      v1731 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_skipBackward(v1730);
      v1732 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_skipForward(v1731);
      v1733 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_repeatAudio(v1732);
      v1734 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControlDuration_seekBackward(v1733);
      v1735 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControlDuration_seekForward(v1734);
      v1736 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControlOffsetDuration_seekTo(v1735);
      uint64_t v1737 = 0;
      uint64_t v1739 = 0;
      uint64_t v1738 = 0;
      v1740 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_offsetDuration(v1736);
      Turns = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_nextTurns(v1740);
      v1742 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_checkIdentity(Turns);
      uint64_t v1743 = 0;
      v1744 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialPosition(v1742);
      v1745 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialDirection(v1744);
      v1746 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SizeDirection(v1745);
      v1747 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_UserProfile(v1746);
      v1748 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AdjustmentType(v1747);
      v1749 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AdjustmentDirection(v1748);
      v1750 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ZoomDirection(v1749);
      v1751 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_runCommand(v1750);
      v1752 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Adjustment_adjust(v1751);
      v1753 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_preview(v1752);
      v1754 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_disableSetting(v1753);
      v1755 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_enableSetting(v1754);
      v1756 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialPosition_Bottom(v1755);
      v1757 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialPosition_BottomLeft(v1756);
      v1758 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialPosition_BottomRight(v1757);
      v1759 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialPosition_Center(v1758);
      v1760 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialPosition_Left(v1759);
      v1761 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialPosition_Right(v1760);
      v1762 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialPosition_Top(v1761);
      v1763 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialPosition_TopLeft(v1762);
      v1764 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialPosition_TopRight(v1763);
      v1765 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialDirection_Down(v1764);
      v1766 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialDirection_Further(v1765);
      v1767 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialDirection_Leftward(v1766);
      v1768 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialDirection_Nearer(v1767);
      v1769 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialDirection_Rightward(v1768);
      v1770 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialDirection_Up(v1769);
      v1771 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_UserEntity_Anywhere(v1770);
      v1772 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SizeDirection_Bigger(v1771);
      v1773 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SizeDirection_Narrower(v1772);
      v1774 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SizeDirection_Shorter(v1773);
      v1775 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SizeDirection_Smaller(v1774);
      v1776 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SizeDirection_Taller(v1775);
      v1777 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SizeDirection_Wider(v1776);
      v1778 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AdjustmentType_Move(v1777);
      v1779 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AdjustmentType_Resize(v1778);
      v1780 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AdjustmentType_Scroll(v1779);
      v1781 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AdjustmentType_Zoom(v1780);
      v1782 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ZoomDirection_ZoomIn(v1781);
      v1783 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ZoomDirection_ZoomOut(v1782);
      v1784 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ZoomDirection_ZoomToFit(v1783);
      v1785 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ZoomDirection_ZoomToFitWidth(v1784);
      long long v1786 = 0u;
      long long v1787 = 0u;
      uint64_t v1788 = 0;
      v1789 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_settings(v1785);
      v1790 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_adjustmentType(v1789);
      v1791 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_adjustmentDirection(v1790);
      v1792 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_usoSpatialPosition(v1791);
      v1793 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_HealthLog(v1792);
      v1794 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceMeasurementUnit_requestLog(v1793);
      v1795 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_BeatPerMinute(v1794);
      v1796 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Calorie(v1795);
      v1797 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Centimeter(v1796);
      v1798 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_CupPerFluidOunce(v1797);
      v1799 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_CupPerLiter(v1798);
      v1800 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_CupPerMillileter(v1799);
      v1801 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_CupPerPint(v1800);
      v1802 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_FlightOfStairs(v1801);
      v1803 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Foot(v1802);
      v1804 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_FootPerSecond(v1803);
      v1805 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Gram(v1804);
      v1806 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_HourPerKilometer(v1805);
      v1807 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_HourPerMeter(v1806);
      v1808 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_HourPerMile(v1807);
      v1809 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_HourPerYard(v1808);
      v1810 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Inch(v1809);
      v1811 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Kilocalorie(v1810);
      v1812 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Kilogram(v1811);
      v1813 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Kilojoule(v1812);
      v1814 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Kilometer(v1813);
      v1815 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_KilometerPerHour(v1814);
      v1816 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Lap(v1815);
      v1817 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Liter(v1816);
      v1818 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_LiterPerMinute(v1817);
      v1819 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Meter(v1818);
      v1820 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MeterPerSecond(v1819);
      v1821 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Microgram(v1820);
      v1822 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Mile(v1821);
      v1823 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MilePerHour(v1822);
      v1824 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Milligram(v1823);
      v1825 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MilligramPerDeciliter(v1824);
      v1826 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Milliliter(v1825);
      v1827 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MillimeterOfMercury(v1826);
      v1828 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MillimolePerLiter(v1827);
      v1829 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MinutePerKilometer(v1828);
      v1830 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MinutePerMeter(v1829);
      v1831 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MinutePerMile(v1830);
      v1832 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MinutePerYard(v1831);
      v1833 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Pound(v1832);
      v1834 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SecondPerKilometer(v1833);
      v1835 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SecondPerMeter(v1834);
      v1836 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SecondPerMile(v1835);
      v1837 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SecondPerYard(v1836);
      v1838 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Step(v1837);
      v1839 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_StepPerMinute(v1838);
      v1840 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Stone(v1839);
      v1841 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SwimmingStroke(v1840);
      v1842 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SwimmingStrokePerMeter(v1841);
      v1843 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_SwimmingStrokePerYard(v1842);
      v1844 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_UnitOfInsulin(v1843);
      v1845 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_WheelchairPush(v1844);
      v1846 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_Yard(v1845);
      uint64_t v1847 = 0;
      v1848 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_measurementUnit(v1846);
      v1849 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RadioStation(v1848);
      v1850 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortDirection(v1849);
      v1851 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion(v1850);
      v1852 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementQualifier(v1851);
      v1853 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnitType(v1852);
      v1854 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementCategory(v1853);
      v1855 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RadioBand(v1854);
      v1856 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_disable(v1855);
      v1857 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_enable(v1856);
      v1858 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_scan(v1857);
      v1859 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_restart(v1858);
      v1860 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortDirection_Best(v1859);
      v1861 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortDirection_Newest(v1860);
      v1862 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortDirection_Oldest(v1861);
      v1863 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortDirection_Popular(v1862);
      v1864 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortDirection_Recommended(v1863);
      v1865 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortDirection_Unpopular(v1864);
      v1866 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortDirection_Worst(v1865);
      v1867 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion_Acappela(v1866);
      v1868 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion_Acoustic(v1867);
      v1869 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion_Alternate(v1868);
      v1870 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion_Clean(v1869);
      v1871 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion_Cover(v1870);
      v1872 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion_Explicit(v1871);
      v1873 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion_Instrumental(v1872);
      v1874 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion_Karaoke(v1873);
      v1875 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion_Live(v1874);
      v1876 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion_Remake(v1875);
      v1877 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion_Soundtrack(v1876);
      v1878 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion_Studio(v1877);
      v1879 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementQualifier_Average(v1878);
      v1880 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementQualifier_Maximum(v1879);
      v1881 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementQualifier_Minimum(v1880);
      v1882 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementQualifier_Total(v1881);
      v1883 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Quantifier_Less(v1882);
      v1884 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Quantifier_More(v1883);
      v1885 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_BeatPerMinute(v1884);
      v1886 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Calorie(v1885);
      v1887 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Centimeter(v1886);
      v1888 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_CupPerFluidOunce(v1887);
      v1889 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_CupPerLiter(v1888);
      v1890 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_CupPerMillileter(v1889);
      v1891 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_CupPerPint(v1890);
      v1892 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_FlightOfStairs(v1891);
      v1893 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Foot(v1892);
      v1894 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_FootPerSecond(v1893);
      v1895 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Gram(v1894);
      v1896 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_HourPerKilometer(v1895);
      v1897 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_HourPerMeter(v1896);
      v1898 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_HourPerMile(v1897);
      v1899 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_HourPerYard(v1898);
      v1900 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Inch(v1899);
      v1901 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Kilocalorie(v1900);
      v1902 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Kilogram(v1901);
      v1903 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_KiloHertz(v1902);
      v1904 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Kilojoule(v1903);
      v1905 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Kilometer(v1904);
      v1906 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_KilometerPerHour(v1905);
      v1907 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Lap(v1906);
      v1908 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Liter(v1907);
      v1909 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_LiterPerMinute(v1908);
      v1910 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MegaHertz(v1909);
      v1911 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Meter(v1910);
      v1912 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MeterPerSecond(v1911);
      v1913 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Microgram(v1912);
      v1914 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Mile(v1913);
      v1915 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MilePerHour(v1914);
      v1916 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Milligram(v1915);
      v1917 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MilligramPerDeciliter(v1916);
      v1918 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Milliliter(v1917);
      v1919 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MillimeterOfMercury(v1918);
      v1920 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MillimolePerLiter(v1919);
      v1921 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MinutePerKilometer(v1920);
      v1922 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MinutePerMeter(v1921);
      v1923 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MinutePerMile(v1922);
      v1924 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_MinutePerYard(v1923);
      v1925 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Pound(v1924);
      v1926 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_SecondPerKilometer(v1925);
      v1927 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_SecondPerMeter(v1926);
      v1928 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_SecondPerMile(v1927);
      v1929 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_SecondPerYard(v1928);
      v1930 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Step(v1929);
      v1931 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_StepPerMinute(v1930);
      v1932 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Stone(v1931);
      v1933 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_SwimmingStroke(v1932);
      v1934 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_SwimmingStrokePerMeter(v1933);
      v1935 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_SwimmingStrokePerYard(v1934);
      v1936 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_UnitOfInsulin(v1935);
      v1937 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_WheelchairPush(v1936);
      v1938 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TemperatureUnit_Yard(v1937);
      v1939 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnitType_DistanceUnit(v1938);
      v1940 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnitType_EnergyUnit(v1939);
      v1941 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnitType_SpeedUnit(v1940);
      v1942 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnitType_WeightUnit(v1941);
      v1943 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_BeatPerMinute(v1942);
      v1944 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Calorie(v1943);
      v1945 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Centimeter(v1944);
      v1946 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_CupPerFluidOunce(v1945);
      v1947 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_CupPerLiter(v1946);
      v1948 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_CupPerMillileter(v1947);
      v1949 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_CupPerPint(v1948);
      v1950 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_FlightOfStairs(v1949);
      v1951 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Foot(v1950);
      v1952 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_FootPerSecond(v1951);
      v1953 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Gram(v1952);
      v1954 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_HourPerKilometer(v1953);
      v1955 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_HourPerMeter(v1954);
      v1956 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_HourPerMile(v1955);
      v1957 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_HourPerYard(v1956);
      v1958 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Inch(v1957);
      v1959 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Kilocalorie(v1958);
      v1960 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Kilogram(v1959);
      v1961 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_KiloHertz(v1960);
      v1962 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Kilojoule(v1961);
      v1963 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Kilometer(v1962);
      v1964 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_KilometerPerHour(v1963);
      v1965 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Lap(v1964);
      v1966 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Liter(v1965);
      v1967 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_LiterPerMinute(v1966);
      v1968 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_MegaHertz(v1967);
      v1969 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Meter(v1968);
      v1970 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_MeterPerSecond(v1969);
      v1971 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Microgram(v1970);
      v1972 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Mile(v1971);
      v1973 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_MilePerHour(v1972);
      v1974 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Milligram(v1973);
      v1975 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_MilligramPerDeciliter(v1974);
      v1976 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Milliliter(v1975);
      v1977 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_MillimeterOfMercury(v1976);
      v1978 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_MillimolePerLiter(v1977);
      v1979 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_MinutePerKilometer(v1978);
      v1980 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_MinutePerMeter(v1979);
      v1981 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_MinutePerMile(v1980);
      v1982 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_MinutePerYard(v1981);
      v1983 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Pound(v1982);
      v1984 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_SecondPerKilometer(v1983);
      v1985 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_SecondPerMeter(v1984);
      v1986 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_SecondPerMile(v1985);
      v1987 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_SecondPerYard(v1986);
      v1988 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Step(v1987);
      v1989 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_StepPerMinute(v1988);
      v1990 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Stone(v1989);
      v1991 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_SwimmingStroke(v1990);
      v1992 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_SwimmingStrokePerMeter(v1991);
      v1993 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_SwimmingStrokePerYard(v1992);
      v1994 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_UnitOfInsulin(v1993);
      v1995 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_WheelchairPush(v1994);
      v1996 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TimeUnit_Yard(v1995);
      v1997 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SearchQualifier_NewToMe(v1996);
      v1998 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Personalized(v1997);
      v1999 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_KiloHertz(v1998);
      v2000 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementUnit_MegaHertz(v1999);
      v2001 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Library(v2000);
      v2002 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Movie(v2001);
      v2003 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_StreamingLibrary(v2002);
      v2004 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_UpNext(v2003);
      v2005 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Wishlist(v2004);
      v2006 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RadioBand_AM(v2005);
      v2007 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RadioBand_FM(v2006);
      v2008 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RadioBand_XM(v2007);
      uint64_t v2009 = 0;
      v2010 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_frequency(v2008);
      v2011 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_frequencyUnit(v2010);
      v2012 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_genre(v2011);
      v2013 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_radioBand(v2012);
      v2014 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_sortDirections(v2013);
      v2015 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_valueCategory(v2014);
      v2016 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_valueQualifier(v2015);
      v2017 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedMediaItems(v2016);
      v2018 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_lyrics(v2017);
      v2019 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_mediaItemVersion(v2018);
      v2020 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CollaborationMode(v2019);
      v2021 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CollaborationMode_Collaborate(v2020);
      v2022 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_decreasing(v2021);
      v2023 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_increasing(v2022);
      v2024 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_remainingConstant(v2023);
      v2025 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_collaborationMode(v2024);
      v2026 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_transfer(v2025);
      uint64_t v2027 = 0;
      v2028 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MedicationEvent(v2026);
      v2029 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_unshare(v2028);
      v2030 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_checkExistence(v2029);
      v2031 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_summarise(v2030);
      v2032 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SpatialDirection_Farther(v2031);
      v2033 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Number_DefaultValue(v2032);
      v2034 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Screen(v2033);
      v2035 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortDirection_Atypical(v2034);
      v2036 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortDirection_Trending(v2035);
      v2037 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortDirection_Typical(v2036);
      v2038 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion_3D(v2037);
      v2039 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemVersion_ThemeSong(v2038);
      v2040 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Another(v2039);
      v2041 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SearchQualifier_New(v2040);
      uint64_t v2042 = 0;
      v2043 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_follow(v2041);
      v2044 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_subscribe(v2043);
      v2045 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PlaybackState(v2044);
      v2046 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageMode_Video(v2045);
      v2047 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CollaborationMode_SharePlay(v2046);
      v2048 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CollaborationMode_Together(v2047);
      v2049 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PlaybackState_Interrupted(v2048);
      v2050 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PlaybackState_Paused(v2049);
      v2051 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PlaybackState_Playing(v2050);
      v2052 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PlaybackState_Seeking(v2051);
      v2053 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PlaybackState_Stopped(v2052);
      v2054 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RadioBand_DAB(v2053);
      v2055 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RadioBand_HD(v2054);
      v2056 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_sharedApp(v2055);
      v2057 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_sharedAppEntity(v2056);
      v2058 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_playbackState(v2057);
      v2059 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Word(v2058);
      v2060 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PhoneCallMode_Shared(v2059);
      v2061 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PhoneCallMode_DropIn(v2060);
      v2062 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_frequencyName(v2061);
      v2063 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_WorkoutClass(v2062);
      v2064 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AppGenre(v2063);
      v2065 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_WorkoutEquipment(v2064);
      v2066 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AppState(v2065);
      v2067 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_WorkoutInstructor(v2066);
      v2068 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_WorkoutGoal(v2067);
      v2069 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AppState_Deleted(v2068);
      v2070 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AppState_Installed(v2069);
      v2071 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_WorkoutGoal_ExerciseRingClosed(v2070);
      v2072 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_WorkoutGoal_MoveRingClosed(v2071);
      v2073 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_WorkoutGoal_Open(v2072);
      v2074 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_WorkoutGoal_RingClosed(v2073);
      v2075 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedMediaItem(v2074);
      v2076 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_episodeNumber(v2075);
      v2077 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_equipment(v2076);
      v2078 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_instructor(v2077);
      v2079 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_goal(v2078);
      v2080 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_healthLog(v2079);
      v2081 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_workoutClass(v2080);
      v2082 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_state(v2081);
      Person = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_getPerson(v2082);
      uint64_t v2084 = 0;
      v2085 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_specifyingContactTrigger(Person);
      v2086 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_appEntity(v2085);
      v2087 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CompletionStatus(v2086);
      v2088 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Medication(v2087);
      v2089 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MedicationSchedule(v2088);
      active = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ActiveType(v2089);
      v2091 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTrigger_snooze(active);
      v2092 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_unsend(v2091);
      v2093 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CompletionStatus_Completed(v2092);
      v2094 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CompletionStatus_NotCompleted(v2093);
      v2095 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ActiveType_Active(v2094);
      v2096 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ActiveType_NotActive(v2095);
      v2097 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ActiveType_Upcoming(v2096);
      v2098 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_completionStatus(v2097);
      v2099 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_medicationSchedule(v2098);
      v2100 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_dosage(v2099);
      v2101 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_active(v2100);
      v2102 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_medications(v2101);
      v2103 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_schedule(v2102);
      v2104 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RequiredStatus(v2103);
      v2105 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PersonRole(v2104);
      v2106 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaCapture(v2105);
      v2107 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Calendar(v2106);
      v2108 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Participant(v2107);
      v2109 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode(v2108);
      v2110 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ResponseStatus(v2109);
      v2111 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_reping(v2110);
      v2112 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_softwareUpdate(v2111);
      v2113 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_stopPing(v2112);
      v2114 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_capture(v2113);
      v2115 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_startCapture(v2114);
      v2116 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_stopCapture(v2115);
      v2117 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_join(v2116);
      v2118 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_offload(v2117);
      v2119 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RequiredStatus_Optional(v2118);
      v2120 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RequiredStatus_Required(v2119);
      v2121 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PhoneCallMode_Phone(v2120);
      v2122 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Old(v2121);
      v2123 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_AudioRecording(v2122);
      v2124 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_Photo(v2123);
      v2125 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_ScreenRecording(v2124);
      v2126 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_Screenshot(v2125);
      v2127 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_Video(v2126);
      v2128 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ResponseStatus_NotResponded(v2127);
      v2129 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ResponseStatus_Responded(v2128);
      v2130 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ResponseStatus_RespondedYes(v2129);
      v2131 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ResponseStatus_ResponseMaybe(v2130);
      v2132 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ResponseStatus_ResponseNo(v2131);
      v2133 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedCalendar(v2132);
      v2134 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_virtualLocation(v2133);
      v2135 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_messageLanguage(v2134);
      v2136 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_owner(v2135);
      v2137 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_responseStatus(v2136);
      v2138 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Reminder(v2137);
      v2139 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Tag(v2138);
      v2140 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Note(v2139);
      v2141 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CalendarEventType(v2140);
      v2142 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ReminderList(v2141);
      v2143 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_NoteFolder(v2142);
      v2144 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CompletionStatus_Overdue(v2143);
      v2145 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Message(v2144);
      v2146 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Note(v2145);
      v2147 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_NoteFolder(v2146);
      v2148 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_Reminder(v2147);
      v2149 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_ReminderList(v2148);
      v2150 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecurringDateTimeRange_Forenoon(v2149);
      v2151 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CurrencyAmount_AmountDue(v2150);
      v2152 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CurrencyAmount_MaximumAllowed(v2151);
      v2153 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CurrencyAmount_MinimumAllowed(v2152);
      v2154 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CurrencyAmount_PaidInFull(v2153);
      v2155 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CurrencyAmount_StatementBalance(v2154);
      v2156 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DateTimeRange_Forenoon(v2155);
      v2157 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CalendarEventType_Appointment(v2156);
      v2158 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CalendarEventType_Event(v2157);
      v2159 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CalendarEventType_Meeting(v2158);
      v2160 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Duration_AllDay(v2159);
      v2161 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_assignee(v2160);
      v2162 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_childReminders(v2161);
      v2163 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_list(v2162);
      v2164 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_reminders(v2163);
      v2165 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_payee(v2164);
      v2166 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_payer(v2165);
      v2167 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_accountNumber(v2166);
      v2168 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_bank(v2167);
      v2169 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortValue(v2168);
      v2170 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortOrder(v2169);
      v2171 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortOrder_LeastFirst(v2170);
      v2172 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SortOrder_MostFirst(v2171);
      v2173 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_order(v2172);
      v2174 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_EmailState(v2173);
      v2175 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_EmailLabel(v2174);
      v2176 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_EmailProvider(v2175);
      v2177 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_EmailFolder(v2176);
      v2178 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_EmailState_Read(v2177);
      v2179 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_EmailState_Received(v2178);
      v2180 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_EmailState_Saved(v2179);
      v2181 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_EmailState_Sent(v2180);
      v2182 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_EmailState_Unread(v2181);
      v2183 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_EmailState_Unsaved(v2182);
      v2184 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_EmailState_Unsent(v2183);
      v2185 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_emailFolder(v2184);
      v2186 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_emailLabels(v2185);
      v2187 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_emailState(v2186);
      v2188 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CommunicationTrigger(v2187);
      v2189 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_startTranslation(v2188);
      v2190 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_stopTranslation(v2189);
      v2191 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CommunicationTrigger_CallReceived(v2190);
      v2192 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CommunicationTrigger_CallSent(v2191);
      v2193 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CommunicationTrigger_CommunicationReceived(v2192);
      v2194 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CommunicationTrigger_CommunicationSent(v2193);
      v2195 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CommunicationTrigger_EmailReceived(v2194);
      v2196 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CommunicationTrigger_EmailSent(v2195);
      v2197 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CommunicationTrigger_FaceTimeReceived(v2196);
      v2198 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CommunicationTrigger_FaceTimeSent(v2197);
      v2199 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CommunicationTrigger_TextMessageReceived(v2198);
      v2200 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CommunicationTrigger_TextMessageSent(v2199);
      v2201 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_associatedGeographicArea(v2200);
      v2202 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_communicationTrigger(v2201);
      v2203 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageLabel(v2202);
      v2204 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageState(v2203);
      v2205 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageFolder(v2204);
      v2206 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageMode_Audio(v2205);
      v2207 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageMode_Email(v2206);
      v2208 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageState_Deleted(v2207);
      v2209 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageState_Read(v2208);
      v2210 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageState_Received(v2209);
      v2211 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageState_Saved(v2210);
      v2212 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageState_Sent(v2211);
      v2213 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageState_Unread(v2212);
      v2214 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageState_Unsaved(v2213);
      v2215 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageState_Unsent(v2214);
      v2216 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_messageState(v2215);
      v2217 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemRelationshipType(v2216);
      v2218 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Politeness(v2217);
      v2219 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Interjection(v2218);
      v2220 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AllDay(v2219);
      v2221 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_authorise(v2220);
      v2222 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_deauthorise(v2221);
      v2223 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemRelationshipType_CreatedBy(v2222);
      v2224 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemRelationshipType_ContainedOn(v2223);
      v2225 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Politeness_Polite(v2224);
      v2226 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Politeness_Impolite(v2225);
      v2227 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Interjection_Attention(v2226);
      v2228 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Interjection_ThankYou(v2227);
      v2229 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Interjection_IndirectDismissal(v2228);
      v2230 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Interjection_Ignore(v2229);
      v2231 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Interjection_DirectDismissal(v2230);
      v2232 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AllDay_NotAllDay(v2231);
      v2233 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AllDay_AllDay(v2232);
      v2234 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_politeness(v2233);
      v2235 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_allDay(v2234);
      v2236 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Audio(v2235);
      v2237 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SafetySession(v2236);
      v2238 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Journey(v2237);
      v2239 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_read(v2238);
      v2240 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_save(v2239);
      v2241 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Article(v2240);
      v2242 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_ReadingList(v2241);
      v2243 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_journeyTrigger(v2242);
      v2244 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_secondaryUnit(v2243);
      v2245 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_completed(v2244);
      v2246 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_startPointOfInterest(v2245);
      v2247 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_endPointOfInterest(v2246);
      v2248 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_DisplayedContent(v2247);
      v2249 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_PlayedContent(v2248);
      v2250 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_lap(v2249);
      v2251 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_Selfie(v2250);
      v2252 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementQualifier_EndOf(v2251);
      v2253 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementQualifier_StartOf(v2252);
      v2254 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ScheduleType(v2253);
      v2255 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ScheduleType_AsNeeded(v2254);
      v2256 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ScheduleType_Scheduled(v2255);
      v2257 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CalendarEventType_Conflict(v2256);
      v2258 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_containing(v2257);
      v2259 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_scheduleType(v2258);
      v2260 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Compass(v2259);
      v2261 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_heading(v2260);
      v2262 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_bearing(v2261);
      v2263 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_elevation(v2262);
      v2264 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_geoCoordinates(v2263);
      v2265 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PointOfInterestType(v2264);
      v2266 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_JourneyType(v2265);
      v2267 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_and(v2266);
      v2268 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_correctFrom(v2267);
      v2269 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Operator_correctInto(v2268);
      v2270 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_remainingDuration(v2269);
      v2271 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_elapsedDuration(v2270);
      v2272 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_remainingDistance(v2271);
      v2273 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_elapsedDistance(v2272);
      v2274 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_totalDistance(v2273);
      v2275 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SiriContent(v2274);
      v2276 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Tapback(v2275);
      v2277 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SiriContentTopic(v2276);
      v2278 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SiriContentType(v2277);
      v2279 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ReminderListType(v2278);
      v2280 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_TapbackType(v2279);
      v2281 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_tell(v2280);
      v2282 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_hear(v2281);
      v2283 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AttachmentType_ETA(v2282);
      v2284 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaItemType_Chapter(v2283);
      v2285 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Duration_TotalDuration(v2284);
      v2286 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Duration_NoDuration(v2285);
      v2287 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_audience(v2286);
      v2288 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_audienceAge(v2287);
      v2289 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_tapbacks(v2288);
      v2290 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_VoiceTrigger(v2289);
      v2291 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SiriSocialAction(v2290);
      v2292 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SocialInterjection(v2291);
      v2293 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_UserSocialAction(v2292);
      v2294 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_HolidayPhrase(v2293);
      v2295 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Salutation(v2294);
      v2296 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_JournalEntry(v2295);
      v2297 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_state(v2296);
      v2298 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_VoiceTrigger_JustSiri(v2297);
      v2299 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_VoiceTrigger_HeySiri(v2298);
      v2300 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_VoiceTrigger_OtherVoiceAssistant(v2299);
      v2301 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_VoiceTrigger_OtherSiriTriggers(v2300);
      v2302 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CollaborationMode_Namedrop(v2301);
      v2303 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CollaborationMode_Airdrop(v2302);
      v2304 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::commonContact_ContactAttribute_ContactPoster(v2303);
      v2305 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_situation(v2304);
      v2306 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_action(v2305);
      v2307 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_phrase(v2306);
      v2308 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Website(v2307);
      v2309 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_EasterEgg(v2308);
      v2310 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementQualifier_Remaining(v2309);
      v2311 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MeasurementQualifier_Possible(v2310);
      v2312 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Interjection_IncorrectBehavior(v2311);
      v2313 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageState_Draft(v2312);
      v2314 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_maidenName(v2313);
      v2315 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_UserFavorite(v2314);
      v2316 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SiriFavorite(v2315);
      v2317 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_checkLike(v2316);
      v2318 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_checkUnlike(v2317);
      v2319 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_favoriteInstance(v2318);
      v2320 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_favoriteCategory(v2319);
      v2321 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PersonSocialAction(v2320);
      v2322 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PersonProperty(v2321);
      v2323 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_FavoriteCategory(v2322);
      v2324 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SiriProperty(v2323);
      v2325 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SiriOpinion(v2324);
      v2326 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_UserPossession(v2325);
      v2327 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OpinionJudgment(v2326);
      v2328 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SiriPossession(v2327);
      v2329 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_UserProperty(v2328);
      v2330 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_FavoriteInstance(v2329);
      v2331 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_OpinionTopic(v2330);
      v2332 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceSelect_guess(v2331);
      v2333 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_justify(v2332);
      v2334 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_deny(v2333);
      v2335 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_instance(v2334);
      v2336 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_judgment(v2335);
      v2337 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_topic(v2336);
      v2338 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_workout(v2337);
      v2339 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SummaryMode(v2338);
      v2340 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_catchMeUp(v2339);
      v2341 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SummaryMode_Entirety(v2340);
      v2342 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SummaryMode_Abridged(v2341);
      v2343 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_SpatialVideo(v2342);
      v2344 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_summaryMode(v2343);
      v2345 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_query(v2344);
      v2346 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AppIntent(v2345);
      v2347 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_FormattedString(v2346);
      v2348 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MediaCaptureMode_SpatialPhoto(v2347);
      v2349 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ReminderType(v2348);
      v2350 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ReminderType_Section(v2349);
      v2351 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_CollaborationMode_SendCopy(v2350);
      v2352 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Approximate(v2351);
      v2353 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_PhotoMemory(v2352);
      v2354 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ReactionType(v2353);
      v2355 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageType(v2354);
      v2356 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Reaction(v2355);
      v2357 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceReactionType_react(v2356);
      v2358 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceReactionType_unreact(v2357);
      v2359 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ReactionType_Like(v2358);
      v2360 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ReactionType_Exclamation(v2359);
      v2361 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ReactionType_Love(v2360);
      v2362 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ReactionType_Question(v2361);
      v2363 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ReactionType_Dislike(v2362);
      v2364 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ReactionType_Laugh(v2363);
      v2365 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageType_InlineReply(v2364);
      v2366 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_MessageType_Conversation(v2365);
      v2367 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_reactionType(v2366);
      v2368 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_message(v2367);
      v2369 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_messageType(v2368);
      v2370 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_viewDate(v2369);
      v2371 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_viewPeriod(v2370);
      v2372 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_DigitalFace(v2371);
      v2373 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_QRCodeType(v2372);
      v2374 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_QRCode(v2373);
      v2375 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Reference_scan(v2374);
      v2376 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_unhide(v2375);
      v2377 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_hide(v2376);
      v2378 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_qrCodeType(v2377);
      v2379 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_AppSubSection(v2378);
      v2380 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ResponseStatus_RespondedNo(v2379);
      v2381 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_ResponseStatus_RespondedMaybe(v2380);
      v2382 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_appSection(v2381);
      v2383 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_SearchQualifier_Favorite(v2382);
      v2384 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_RecipeStep(v2383);
      v2385 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_IngredientSubstitution(v2384);
      v2386 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Ingredient(v2385);
      v2387 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::common_Recipe(v2386);
      v2388 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_seekTo(v2387);
      v2389 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_like(v2388);
      v2390 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_unlike(v2389);
      v2391 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceControl_save(v2390);
      v2392 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceTarget_switch(v2391);
      v2393 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_description(v2392);
      v2394 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_ingredients(v2393);
      v2395 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_substitutions(v2394);
      v2396 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_timeRequired(v2395);
      v2397 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_fromIngredient(v2396);
      v2398 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_toIngredient(v2397);
      v2399 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_addedDateTime(v2398);
      v2400 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_cookTimeRequired(v2399);
      v2401 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_globalRating(v2400);
      UsedDateTime = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_lastUsedDateTime(v2401);
      v2403 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_nutrients(UsedDateTime);
      v2404 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_personalRating(v2403);
      v2405 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_prepTimeRequired(v2404);
      v2406 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_recipeSteps(v2405);
      v2407 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_servings(v2406);
      v2408 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::Argument_totalTimeRequired(v2407);
      v2409 = (siri::ontology::oname::graph::ontology_init *)siri::ontology::oname::graph::ontology_init::ReferenceSelect_unrequest(v2408);
      uint64_t v2410 = siri::ontology::oname::graph::ontology_init::Argument_associatedRecipe(v2409);
      std::vector<siri::ontology::OntologyUnitName const*>::vector[abi:ne180100](&v4, 0xCE4uLL);
      __cxa_atexit((void (*)(void *))std::vector<siri::ontology::OntologyUnitName const*>::~vector[abi:ne180100], &siri::ontology::getGraphOntologyUnitNameStringList(void)::graphOntologyUnitNameStringList, &dword_1C9F14000);
    }
  }
}

void sub_1CA3AF3D8(_Unwind_Exception *a1)
{
}

uint64_t siri::ontology::getGraphOntologyVersion(siri::ontology *this)
{
  {
    operator new();
  }
  return siri::ontology::getGraphOntologyVersion(void)::graphOntologyVersion;
}

void sub_1CA3AF470(_Unwind_Exception *a1)
{
}

uint64_t std::allocate_shared[abi:ne180100]<siri::ontology::UsoVocabManager,std::allocator<siri::ontology::UsoVocabManager>,std::vector<siri::ontology::OntologyUnitName const*> const&,siri::ontology::OntologyVersion const&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = operator new(0xC8uLL);
  v4[1] = 0;
  v4[2] = 0;
  *uint64_t v4 = &unk_1F246D5A8;
  uint64_t result = siri::ontology::UsoVocabManager::UsoVocabManager((uint64_t)(v4 + 3), (const void ***)&siri::ontology::getGraphOntologyUnitNameStringList(void)::graphOntologyUnitNameStringList, a2);
  *a1 = result;
  a1[1] = (uint64_t)v4;
  return result;
}

void sub_1CA3AF4F4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<siri::ontology::UsoVocabManager>::__on_zero_shared(void *a1)
{
  std::__hash_table<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::unique_ptr<siri::ontology::OntologyUnitName>>>>::~__hash_table((uint64_t)(a1 + 20));
  uint64_t v2 = (void *)a1[16];
  if (v2)
  {
    a1[17] = v2;
    operator delete(v2);
  }
  uint8x8_t v3 = (void *)a1[13];
  if (v3)
  {
    a1[14] = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void *)a1[10];
  if (v4)
  {
    a1[11] = v4;
    operator delete(v4);
  }
  uint64_t v5 = (void *)a1[7];
  if (v5)
  {
    a1[8] = v5;
    operator delete(v5);
  }
  uint64_t v6 = (void *)a1[4];
  if (v6)
  {
    a1[5] = v6;
    operator delete(v6);
  }
}

void std::__shared_ptr_emplace<siri::ontology::UsoVocabManager>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F246D5A8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1CB796510);
}

void std::__shared_ptr_emplace<siri::ontology::UsoVocabManager>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F246D5A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void *std::vector<siri::ontology::OntologyUnitName const*>::vector[abi:ne180100](void *result, unint64_t a2)
{
  siri::ontology::getGraphOntologyUnitNameStringList(void)::graphOntologyUnitNameStringList = 0;
  qword_1EBCA3B60 = 0;
  qword_1EBCA3B68 = 0;
  if (a2)
  {
    if (a2 >> 61) {
      std::vector<int>::__throw_length_error[abi:ne180100]();
    }
    uint8x8_t v3 = result;
    uint64_t v4 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<siri::ontology::SpanProperty>>>(a2);
    siri::ontology::getGraphOntologyUnitNameStringList(void)::graphOntologyUnitNameStringList = (uint64_t)v4;
    qword_1EBCA3B60 = (uint64_t)v4;
    qword_1EBCA3B68 = (uint64_t)v4 + 8 * v5;
    uint64_t result = memmove(v4, v3, 8 * a2);
    qword_1EBCA3B60 = (uint64_t)v4 + 8 * a2;
  }
  return result;
}

void sub_1CA3AF690(_Unwind_Exception *exception_object)
{
  if (siri::ontology::getGraphOntologyUnitNameStringList(void)::graphOntologyUnitNameStringList)
  {
    qword_1EBCA3B60 = siri::ontology::getGraphOntologyUnitNameStringList(void)::graphOntologyUnitNameStringList;
    operator delete((void *)siri::ontology::getGraphOntologyUnitNameStringList(void)::graphOntologyUnitNameStringList);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::vector<siri::ontology::OntologyUnitName const*>::~vector[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

uint64_t *siri::ontology::getSharedUsoVocabManager(siri::ontology *this)
{
  {
    if (v2)
    {
      siri::ontology::getGraphOntologyUnitNameStringList(v2);
      uint64_t GraphOntologyVersion = siri::ontology::getGraphOntologyVersion(v3);
      std::allocate_shared[abi:ne180100]<siri::ontology::UsoVocabManager,std::allocator<siri::ontology::UsoVocabManager>,std::vector<siri::ontology::OntologyUnitName const*> const&,siri::ontology::OntologyVersion const&,void>(&siri::ontology::getSharedUsoVocabManager(void)::inst, GraphOntologyVersion);
      __cxa_atexit((void (*)(void *))std::shared_ptr<siri::ontology::UsoVocabManager>::~shared_ptr[abi:ne180100], &siri::ontology::getSharedUsoVocabManager(void)::inst, &dword_1C9F14000);
    }
  }
  return &siri::ontology::getSharedUsoVocabManager(void)::inst;
}

void sub_1CA3AF778(_Unwind_Exception *a1)
{
}

uint64_t std::shared_ptr<siri::ontology::UsoVocabManager>::~shared_ptr[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  return a1;
}

void siri::ontology::resetSharedUsoVocabManager(siri::ontology *this)
{
  siri::ontology::getSharedUsoVocabManager(this);
  uint64_t v1 = (siri::ontology::UsoVocabManager *)siri::ontology::getSharedUsoVocabManager(void)::inst;
  siri::ontology::UsoVocabManager::resetCustomNames(v1);
}

uint64_t sub_1CA3AF7F0()
{
  return MEMORY[0x1F40E2E10]();
}

uint64_t sub_1CA3AF800()
{
  return MEMORY[0x1F40E3368]();
}

uint64_t sub_1CA3AF810()
{
  return MEMORY[0x1F40E3420]();
}

uint64_t sub_1CA3AF820()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_1CA3AF830()
{
  return MEMORY[0x1F40E53C8]();
}

uint64_t sub_1CA3AF840()
{
  return MEMORY[0x1F40E5418]();
}

uint64_t sub_1CA3AF850()
{
  return MEMORY[0x1F40E5428]();
}

uint64_t sub_1CA3AF860()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_1CA3AF870()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_1CA3AF880()
{
  return MEMORY[0x1F40E5458]();
}

uint64_t sub_1CA3AF890()
{
  return MEMORY[0x1F40E5890]();
}

uint64_t sub_1CA3AF8A0()
{
  return MEMORY[0x1F4119150]();
}

uint64_t sub_1CA3AF8B0()
{
  return MEMORY[0x1F4157E50]();
}

uint64_t sub_1CA3AF8C0()
{
  return MEMORY[0x1F4157E58]();
}

uint64_t sub_1CA3AF8D0()
{
  return MEMORY[0x1F4157E60]();
}

uint64_t sub_1CA3AF8E0()
{
  return MEMORY[0x1F4157E68]();
}

uint64_t sub_1CA3AF8F0()
{
  return MEMORY[0x1F4157E70]();
}

uint64_t sub_1CA3AF900()
{
  return MEMORY[0x1F4157E78]();
}

uint64_t sub_1CA3AF910()
{
  return MEMORY[0x1F4157E88]();
}

uint64_t sub_1CA3AF920()
{
  return MEMORY[0x1F4157E90]();
}

uint64_t sub_1CA3AF930()
{
  return MEMORY[0x1F4157E98]();
}

uint64_t sub_1CA3AF940()
{
  return MEMORY[0x1F4157EA0]();
}

uint64_t sub_1CA3AF950()
{
  return MEMORY[0x1F4157EA8]();
}

uint64_t sub_1CA3AF960()
{
  return MEMORY[0x1F4157EB0]();
}

uint64_t sub_1CA3AF970()
{
  return MEMORY[0x1F4157EB8]();
}

uint64_t sub_1CA3AF980()
{
  return MEMORY[0x1F4157EC0]();
}

uint64_t sub_1CA3AF990()
{
  return MEMORY[0x1F4157EC8]();
}

uint64_t sub_1CA3AF9A0()
{
  return MEMORY[0x1F4157ED0]();
}

uint64_t sub_1CA3AF9B0()
{
  return MEMORY[0x1F4157ED8]();
}

uint64_t sub_1CA3AF9C0()
{
  return MEMORY[0x1F4157EE0]();
}

uint64_t sub_1CA3AF9D0()
{
  return MEMORY[0x1F4157EE8]();
}

uint64_t sub_1CA3AF9E0()
{
  return MEMORY[0x1F4157EF0]();
}

uint64_t sub_1CA3AF9F0()
{
  return MEMORY[0x1F4157EF8]();
}

uint64_t sub_1CA3AFA00()
{
  return MEMORY[0x1F4157F00]();
}

uint64_t _s12SiriOntology010Com_Apple_A33_Product_Proto_NonTerminalElementVACycfC_0()
{
  return MEMORY[0x1F4157F08]();
}

uint64_t sub_1CA3AFA20()
{
  return MEMORY[0x1F4157F10]();
}

uint64_t sub_1CA3AFA30()
{
  return MEMORY[0x1F4157F18]();
}

uint64_t sub_1CA3AFA40()
{
  return MEMORY[0x1F4157F20]();
}

uint64_t sub_1CA3AFA50()
{
  return MEMORY[0x1F4157F28]();
}

uint64_t sub_1CA3AFA60()
{
  return MEMORY[0x1F4157F30]();
}

uint64_t sub_1CA3AFA90()
{
  return MEMORY[0x1F4157F48]();
}

uint64_t sub_1CA3AFAA0()
{
  return MEMORY[0x1F4157F50]();
}

uint64_t sub_1CA3AFAB0()
{
  return MEMORY[0x1F4157F58]();
}

uint64_t sub_1CA3AFAC0()
{
  return MEMORY[0x1F4157F60]();
}

uint64_t sub_1CA3AFAD0()
{
  return MEMORY[0x1F4157F68]();
}

uint64_t sub_1CA3AFAE0()
{
  return MEMORY[0x1F4157F70]();
}

uint64_t sub_1CA3AFAF0()
{
  return MEMORY[0x1F4157F78]();
}

uint64_t sub_1CA3AFB00()
{
  return MEMORY[0x1F4157F80]();
}

uint64_t sub_1CA3AFB10()
{
  return MEMORY[0x1F4157F88]();
}

uint64_t sub_1CA3AFB20()
{
  return MEMORY[0x1F4157F90]();
}

uint64_t sub_1CA3AFB30()
{
  return MEMORY[0x1F4157F98]();
}

uint64_t sub_1CA3AFB40()
{
  return MEMORY[0x1F4157FA0]();
}

uint64_t sub_1CA3AFB50()
{
  return MEMORY[0x1F4157FA8]();
}

uint64_t sub_1CA3AFB60()
{
  return MEMORY[0x1F4157FB0]();
}

uint64_t sub_1CA3AFB70()
{
  return MEMORY[0x1F4157FB8]();
}

uint64_t sub_1CA3AFB80()
{
  return MEMORY[0x1F4157FC0]();
}

uint64_t sub_1CA3AFB90()
{
  return MEMORY[0x1F4157FC8]();
}

uint64_t sub_1CA3AFBA0()
{
  return MEMORY[0x1F4157FD0]();
}

uint64_t sub_1CA3AFBB0()
{
  return MEMORY[0x1F4157FD8]();
}

uint64_t sub_1CA3AFBC0()
{
  return MEMORY[0x1F4157FE0]();
}

uint64_t sub_1CA3AFBD0()
{
  return MEMORY[0x1F4157FE8]();
}

uint64_t sub_1CA3AFBE0()
{
  return MEMORY[0x1F4157FF0]();
}

uint64_t sub_1CA3AFBF0()
{
  return MEMORY[0x1F4157FF8]();
}

uint64_t sub_1CA3AFC00()
{
  return MEMORY[0x1F4158000]();
}

uint64_t sub_1CA3AFC10()
{
  return MEMORY[0x1F4158008]();
}

uint64_t sub_1CA3AFC20()
{
  return MEMORY[0x1F4158010]();
}

uint64_t sub_1CA3AFC40()
{
  return MEMORY[0x1F4158028]();
}

uint64_t sub_1CA3AFC50()
{
  return MEMORY[0x1F4158030]();
}

uint64_t sub_1CA3AFC60()
{
  return MEMORY[0x1F4158038]();
}

uint64_t sub_1CA3AFC70()
{
  return MEMORY[0x1F4158040]();
}

uint64_t sub_1CA3AFC80()
{
  return MEMORY[0x1F4158048]();
}

uint64_t sub_1CA3AFC90()
{
  return MEMORY[0x1F4158050]();
}

uint64_t sub_1CA3AFCA0()
{
  return MEMORY[0x1F4158058]();
}

uint64_t sub_1CA3AFCB0()
{
  return MEMORY[0x1F4158060]();
}

uint64_t sub_1CA3AFCC0()
{
  return MEMORY[0x1F4158068]();
}

uint64_t sub_1CA3AFCD0()
{
  return MEMORY[0x1F4158070]();
}

uint64_t sub_1CA3AFCE0()
{
  return MEMORY[0x1F4158078]();
}

uint64_t sub_1CA3AFCF0()
{
  return MEMORY[0x1F4158080]();
}

uint64_t sub_1CA3AFD00()
{
  return MEMORY[0x1F4158088]();
}

uint64_t sub_1CA3AFD10()
{
  return MEMORY[0x1F4158090]();
}

uint64_t sub_1CA3AFD20()
{
  return MEMORY[0x1F4158098]();
}

uint64_t sub_1CA3AFD30()
{
  return MEMORY[0x1F41580A0]();
}

uint64_t sub_1CA3AFD40()
{
  return MEMORY[0x1F41580A8]();
}

uint64_t sub_1CA3AFD50()
{
  return MEMORY[0x1F41580B0]();
}

uint64_t sub_1CA3AFD60()
{
  return MEMORY[0x1F41580B8]();
}

uint64_t sub_1CA3AFD70()
{
  return MEMORY[0x1F41580C0]();
}

uint64_t sub_1CA3AFD80()
{
  return MEMORY[0x1F41580C8]();
}

uint64_t sub_1CA3AFD90()
{
  return MEMORY[0x1F41834A8]();
}

uint64_t sub_1CA3AFDA0()
{
  return MEMORY[0x1F41834F8]();
}

uint64_t sub_1CA3AFDB0()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_1CA3AFDC0()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1CA3AFDD0()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1CA3AFDE0()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1CA3AFDF0()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1CA3AFE00()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_1CA3AFE10()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1CA3AFE20()
{
  return MEMORY[0x1F41838A0]();
}

uint64_t sub_1CA3AFE30()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t sub_1CA3AFE40()
{
  return MEMORY[0x1F4183958]();
}

uint64_t sub_1CA3AFE50()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1CA3AFE60()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_1CA3AFE70()
{
  return MEMORY[0x1F4183A10]();
}

uint64_t sub_1CA3AFE80()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1CA3AFE90()
{
  return MEMORY[0x1F4183A40]();
}

uint64_t sub_1CA3AFEA0()
{
  return MEMORY[0x1F4183A78]();
}

uint64_t sub_1CA3AFEB0()
{
  return MEMORY[0x1F4183A88]();
}

uint64_t sub_1CA3AFEC0()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t sub_1CA3AFED0()
{
  return MEMORY[0x1F4183AA8]();
}

uint64_t sub_1CA3AFEE0()
{
  return MEMORY[0x1F4183AB0]();
}

uint64_t sub_1CA3AFEF0()
{
  return MEMORY[0x1F4183B08]();
}

uint64_t sub_1CA3AFF00()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t sub_1CA3AFF10()
{
  return MEMORY[0x1F4183B28]();
}

uint64_t sub_1CA3AFF20()
{
  return MEMORY[0x1F4183B30]();
}

uint64_t sub_1CA3AFF30()
{
  return MEMORY[0x1F4183B38]();
}

uint64_t sub_1CA3AFF40()
{
  return MEMORY[0x1F4183B58]();
}

uint64_t sub_1CA3AFF50()
{
  return MEMORY[0x1F4183B70]();
}

uint64_t sub_1CA3AFF60()
{
  return MEMORY[0x1F4183B90]();
}

uint64_t sub_1CA3AFF70()
{
  return MEMORY[0x1F4183BA0]();
}

uint64_t sub_1CA3AFF80()
{
  return MEMORY[0x1F4183BE8]();
}

uint64_t sub_1CA3AFF90()
{
  return MEMORY[0x1F4183C40]();
}

uint64_t sub_1CA3AFFA0()
{
  return MEMORY[0x1F4183D70]();
}

uint64_t sub_1CA3AFFB0()
{
  return MEMORY[0x1F4183D78]();
}

uint64_t sub_1CA3AFFC0()
{
  return MEMORY[0x1F4183D98]();
}

uint64_t sub_1CA3AFFD0()
{
  return MEMORY[0x1F4183DD0]();
}

uint64_t sub_1CA3AFFE0()
{
  return MEMORY[0x1F4183E10]();
}

uint64_t sub_1CA3AFFF0()
{
  return MEMORY[0x1F4183E48]();
}

uint64_t sub_1CA3B0000()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_1CA3B0010()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1CA3B0020()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_1CA3B0030()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_1CA3B0040()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_1CA3B0050()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_1CA3B0060()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1CA3B0070()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_1CA3B0080()
{
  return MEMORY[0x1F4183F60]();
}

uint64_t sub_1CA3B0090()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_1CA3B00A0()
{
  return MEMORY[0x1F4184008]();
}

uint64_t sub_1CA3B00B0()
{
  return MEMORY[0x1F4184048]();
}

uint64_t sub_1CA3B00C0()
{
  return MEMORY[0x1F4184080]();
}

uint64_t sub_1CA3B00D0()
{
  return MEMORY[0x1F4184098]();
}

uint64_t sub_1CA3B00E0()
{
  return MEMORY[0x1F41840C0]();
}

uint64_t sub_1CA3B00F0()
{
  return MEMORY[0x1F41840E0]();
}

uint64_t sub_1CA3B0100()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_1CA3B0110()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_1CA3B0120()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t sub_1CA3B0130()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_1CA3B0140()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_1CA3B0150()
{
  return MEMORY[0x1F40E64D8]();
}

uint64_t sub_1CA3B0160()
{
  return MEMORY[0x1F40E6978]();
}

uint64_t sub_1CA3B0170()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_1CA3B0180()
{
  return MEMORY[0x1F4184650]();
}

uint64_t sub_1CA3B0190()
{
  return MEMORY[0x1F40E6BB0]();
}

uint64_t sub_1CA3B01A0()
{
  return MEMORY[0x1F40E6C08]();
}

uint64_t sub_1CA3B01B0()
{
  return MEMORY[0x1F40E6C68]();
}

uint64_t sub_1CA3B01C0()
{
  return MEMORY[0x1F40E6D38]();
}

uint64_t sub_1CA3B01D0()
{
  return MEMORY[0x1F40E6D88]();
}

uint64_t sub_1CA3B01E0()
{
  return MEMORY[0x1F4184958]();
}

uint64_t sub_1CA3B0200()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_1CA3B0210()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t sub_1CA3B0220()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_1CA3B0230()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_1CA3B0240()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1CA3B0250()
{
  return MEMORY[0x1F4184D00]();
}

uint64_t sub_1CA3B0260()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_1CA3B0270()
{
  return MEMORY[0x1F4184D88]();
}

uint64_t sub_1CA3B0280()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1CA3B0290()
{
  return MEMORY[0x1F4184E88]();
}

uint64_t sub_1CA3B02A0()
{
  return MEMORY[0x1F4184EE8]();
}

uint64_t sub_1CA3B02B0()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t sub_1CA3B02C0()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t sub_1CA3B02D0()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t sub_1CA3B02E0()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_1CA3B02F0()
{
  return MEMORY[0x1F41851F8]();
}

uint64_t sub_1CA3B0300()
{
  return MEMORY[0x1F4185238]();
}

uint64_t sub_1CA3B0310()
{
  return MEMORY[0x1F4185260]();
}

uint64_t sub_1CA3B0320()
{
  return MEMORY[0x1F4185270]();
}

uint64_t sub_1CA3B0330()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1CA3B0340()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_1CA3B0350()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1CA3B0360()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1CA3B0370()
{
  return MEMORY[0x1F4185378]();
}

uint64_t sub_1CA3B0380()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1CA3B0390()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_1CA3B03A0()
{
  return MEMORY[0x1F41854F8]();
}

uint64_t sub_1CA3B03B0()
{
  return MEMORY[0x1F4185508]();
}

uint64_t sub_1CA3B03C0()
{
  return MEMORY[0x1F4185510]();
}

uint64_t sub_1CA3B03D0()
{
  return MEMORY[0x1F4185518]();
}

uint64_t sub_1CA3B03E0()
{
  return MEMORY[0x1F4185528]();
}

uint64_t sub_1CA3B03F0()
{
  return MEMORY[0x1F4185538]();
}

uint64_t sub_1CA3B0400()
{
  return MEMORY[0x1F4185558]();
}

uint64_t sub_1CA3B0410()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_1CA3B0420()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_1CA3B0430()
{
  return MEMORY[0x1F41855B0]();
}

uint64_t sub_1CA3B0440()
{
  return MEMORY[0x1F41855B8]();
}

uint64_t sub_1CA3B0450()
{
  return MEMORY[0x1F41855D0]();
}

uint64_t sub_1CA3B0460()
{
  return MEMORY[0x1F41855E0]();
}

uint64_t sub_1CA3B0470()
{
  return MEMORY[0x1F4185628]();
}

uint64_t sub_1CA3B0480()
{
  return MEMORY[0x1F4185638]();
}

uint64_t sub_1CA3B0490()
{
  return MEMORY[0x1F4185640]();
}

uint64_t sub_1CA3B04A0()
{
  return MEMORY[0x1F4185648]();
}

uint64_t sub_1CA3B04B0()
{
  return MEMORY[0x1F4185658]();
}

uint64_t sub_1CA3B04C0()
{
  return MEMORY[0x1F4185660]();
}

uint64_t sub_1CA3B04D0()
{
  return MEMORY[0x1F4185680]();
}

uint64_t sub_1CA3B04E0()
{
  return MEMORY[0x1F4185690]();
}

uint64_t sub_1CA3B04F0()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_1CA3B0500()
{
  return MEMORY[0x1F41856D8]();
}

uint64_t sub_1CA3B0510()
{
  return MEMORY[0x1F41856F8]();
}

uint64_t sub_1CA3B0520()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_1CA3B0530()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1CA3B0540()
{
  return MEMORY[0x1F41859E8]();
}

uint64_t sub_1CA3B0550()
{
  return MEMORY[0x1F41859F0]();
}

uint64_t sub_1CA3B0560()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1CA3B0570()
{
  return MEMORY[0x1F4185D10]();
}

uint64_t sub_1CA3B0580()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_1CA3B0590()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1CA3B05A0()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_1CA3B05B0()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_1CA3B05C0()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_1CA3B05D0()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_1CA3B05E0()
{
  return MEMORY[0x1F4185E28]();
}

uint64_t sub_1CA3B05F0()
{
  return MEMORY[0x1F4185E98]();
}

uint64_t sub_1CA3B0600()
{
  return MEMORY[0x1F4185EA8]();
}

uint64_t sub_1CA3B0610()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1CA3B0620()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1CA3B0630()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_1CA3B0640()
{
  return MEMORY[0x1F4185EE0]();
}

uint64_t sub_1CA3B0650()
{
  return MEMORY[0x1F4185EE8]();
}

uint64_t sub_1CA3B0660()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1CA3B0670()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_1CA3B0680()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t sub_1CA3B0690()
{
  return MEMORY[0x1F4186008]();
}

uint64_t sub_1CA3B06C0()
{
  return MEMORY[0x1F4186318]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1F417CE00]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

int std::string::compare(const std::string *this, const std::string::value_type *__s)
{
  return MEMORY[0x1F417E390](this, __s);
}

uint64_t std::stringbuf::str()
{
  return MEMORY[0x1F417E3A8]();
}

const std::locale::facet *__cdecl std::locale::use_facet(const std::locale *this, std::locale::id *a2)
{
  return (const std::locale::facet *)MEMORY[0x1F417E408](this, a2);
}

std::locale std::ios_base::getloc(const std::ios_base *this)
{
  return (std::locale)MEMORY[0x1F417E418](this);
}

const char *__cdecl std::exception::what(const std::exception *this)
{
  return (const char *)MEMORY[0x1F417E430](this);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x1F417E448](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x1F417E530](this);
}

size_t std::__next_prime(size_t __n)
{
  return MEMORY[0x1F417E588](__n);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x1F417E5B8](this, __s);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x1F417E5C0](this, __s, __n);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x1F417E5D8](this, __s);
}

std::string *__cdecl std::string::insert(std::string *this, std::string::size_type __pos, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x1F417E600](this, __pos, __s);
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return (std::string *)MEMORY[0x1F417E670](this, __str);
}

uint64_t std::ostream::sentry::sentry()
{
  return MEMORY[0x1F417E848]();
}

uint64_t std::ostream::sentry::~sentry()
{
  return MEMORY[0x1F417E850]();
}

uint64_t std::ostream::~ostream()
{
  return MEMORY[0x1F417E860]();
}

uint64_t std::ostream::operator<<()
{
  return MEMORY[0x1F417E898]();
}

{
  return MEMORY[0x1F417E8A0]();
}

{
  return MEMORY[0x1F417E8D0]();
}

uint64_t std::iostream::~basic_iostream()
{
  return MEMORY[0x1F417E940]();
}

uint64_t std::streambuf::basic_streambuf()
{
  return MEMORY[0x1F417E978]();
}

uint64_t std::streambuf::~streambuf()
{
  return MEMORY[0x1F417E980]();
}

void std::__shared_weak_count::__release_weak(std::__shared_weak_count *this)
{
}

void std::__shared_weak_count::~__shared_weak_count(std::__shared_weak_count *this)
{
}

void std::mutex::lock(std::mutex *this)
{
}

void std::mutex::unlock(std::mutex *this)
{
}

uint64_t std::__sort<std::__less<int,int> &,int *>()
{
  return MEMORY[0x1F417EC50]();
}

void std::locale::~locale(std::locale *this)
{
}

void std::ios_base::__set_badbit_and_consider_rethrow(std::ios_base *this)
{
}

void std::ios_base::init(std::ios_base *this, void *__sb)
{
}

void std::ios_base::clear(std::ios_base *this, std::ios_base::iostate __state)
{
}

uint64_t std::ios::~ios()
{
  return MEMORY[0x1F417EE40]();
}

std::string *__cdecl std::to_string(std::string *__return_ptr retstr, double __val)
{
  return (std::string *)MEMORY[0x1F417EE58](retstr, __val);
}

std::string *__cdecl std::to_string(std::string *__return_ptr retstr, float __val)
{
  return (std::string *)MEMORY[0x1F417EE68](retstr, __val);
}

std::string *__cdecl std::to_string(std::string *__return_ptr retstr, int __val)
{
  return (std::string *)MEMORY[0x1F417EE70](retstr, *(void *)&__val);
}

std::string *__cdecl std::to_string(std::string *__return_ptr retstr, unsigned int __val)
{
  return (std::string *)MEMORY[0x1F417EE78](retstr, *(void *)&__val);
}

std::string *__cdecl std::to_string(std::string *__return_ptr retstr, uint64_t __val)
{
  return (std::string *)MEMORY[0x1F417EE90](retstr, __val);
}

uint64_t std::operator+<char>()
{
  return MEMORY[0x1F417EEA0]();
}

void std::exception::~exception(std::exception *this)
{
}

void std::terminate(void)
{
}

void operator delete[]()
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x1F417EF30](thrown_size);
}

int __cxa_atexit(void (*lpfunc)(void *), void *obj, void *lpdso_handle)
{
  return MEMORY[0x1F40C9B60](lpfunc, obj, lpdso_handle);
}

void __cxa_bad_cast(void)
{
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x1F417EF48](a1);
}

void __cxa_end_catch(void)
{
}

void __cxa_free_exception(void *a1)
{
}

void *__cxa_get_exception_ptr(void *a1)
{
  return (void *)MEMORY[0x1F417EF70](a1);
}

void __cxa_guard_abort(__guard *a1)
{
}

int __cxa_guard_acquire(__guard *a1)
{
  return MEMORY[0x1F417EF80](a1);
}

void __cxa_guard_release(__guard *a1)
{
}

void __cxa_rethrow(void)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

void *__dynamic_cast(const void *lpsrc, const struct __class_type_info *lpstype, const struct __class_type_info *lpdtype, ptrdiff_t s2d)
{
  return (void *)MEMORY[0x1F417EFA8](lpsrc, lpstype, lpdtype, s2d);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1F40CCCE8](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD20](__b, *(void *)&__c, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1F4181748](self, _cmd, offset, atomic);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

void objc_storeStrong(id *location, id obj)
{
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1F40CE158](__s1, __s2);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1F40CE1C8](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1F4186478]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1F41864C0]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1F4186550]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1F4186690]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x1F41866B0]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1F41866C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1F41866F8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unownedRelease()
{
  return MEMORY[0x1F4186880]();
}

uint64_t swift_unownedRetain()
{
  return MEMORY[0x1F4186888]();
}

uint64_t swift_unownedRetainStrong()
{
  return MEMORY[0x1F4186890]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}