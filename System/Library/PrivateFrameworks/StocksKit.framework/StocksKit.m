uint64_t StockChartResult.stockChart.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BA6ABEC(v1, a1, type metadata accessor for StockChart);
}

uint64_t StockChartResult.source.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StockChartResult();
  return sub_23BA6ABEC(v1 + *(int *)(v3 + 20), a1, type metadata accessor for DataSource);
}

uint64_t type metadata accessor for StockChartResult()
{
  uint64_t result = qword_268A752D8;
  if (!qword_268A752D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23BA6ABEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for StockChartResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = (int *)type metadata accessor for StockChart(0);
    uint64_t v9 = v8[5];
    v10 = (char *)v7 + v9;
    v11 = (char *)a2 + v9;
    uint64_t v12 = sub_23BAD7350();
    v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    sub_23BA6B024();
    v13(&v10[*(int *)(v14 + 36)], &v11[*(int *)(v14 + 36)], v12);
    uint64_t v15 = v8[6];
    v16 = (char *)v7 + v15;
    v17 = (char *)a2 + v15;
    *(void *)v16 = *(void *)v17;
    v16[8] = v17[8];
    uint64_t v18 = v8[7];
    v19 = (char *)v7 + v18;
    v20 = (char *)a2 + v18;
    uint64_t v21 = sub_23BAD74D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = *(int *)(a3 + 20);
    v23 = (uint64_t *)((char *)v7 + v22);
    v24 = (char *)a2 + v22;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v22 + 8);
    void *v23 = *(uint64_t *)((char *)a2 + v22);
    v23[1] = v25;
    uint64_t v26 = type metadata accessor for DataSource(0);
    uint64_t v27 = *(int *)(v26 + 20);
    __dst = (char *)v23 + v27;
    v28 = &v24[v27];
    uint64_t v29 = type metadata accessor for DataSource.Logo(0);
    uint64_t v30 = *(void *)(v29 - 8);
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain();
    if (v31(v28, 1, v29))
    {
      sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
      memcpy(__dst, v28, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      uint64_t v33 = sub_23BAD78E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(__dst, v28, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
    }
    uint64_t v34 = *(int *)(v26 + 24);
    v35 = (char *)v23 + v34;
    v36 = &v24[v34];
    uint64_t v37 = sub_23BAD72C0();
    uint64_t v38 = *(void *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
      memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
  }
  return v7;
}

void sub_23BA6B024()
{
  if (!qword_268A752C0)
  {
    sub_23BAD7350();
    sub_23BA6B088();
    unint64_t v0 = sub_23BAD8210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268A752C0);
    }
  }
}

unint64_t sub_23BA6B088()
{
  unint64_t result = qword_268A752C8;
  if (!qword_268A752C8)
  {
    sub_23BAD7350();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A752C8);
  }
  return result;
}

void sub_23BA6B0E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_23BAD84E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t destroy for StockChartResult(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for StockChart(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_23BAD7350();
  v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  sub_23BA6B024();
  v7(v5 + *(int *)(v8 + 36), v6);
  uint64_t v9 = a1 + *(int *)(v4 + 28);
  uint64_t v10 = sub_23BAD74D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for DataSource(0);
  uint64_t v13 = v11 + *(int *)(v12 + 20);
  uint64_t v14 = type metadata accessor for DataSource.Logo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = sub_23BAD78E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
  }
  uint64_t v16 = v11 + *(int *)(v12 + 24);
  uint64_t v17 = sub_23BAD72C0();
  uint64_t v20 = *(void *)(v17 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v16, 1, v17);
  if (!result)
  {
    v19 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8);
    return v19(v16, v17);
  }
  return result;
}

void *initializeWithCopy for StockChartResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for StockChart(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_23BAD7350();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  sub_23BA6B024();
  v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
  uint64_t v13 = v6[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = v6[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_23BAD74D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a2 + v20 + 8);
  *uint64_t v21 = *(void *)((char *)a2 + v20);
  v21[1] = v23;
  uint64_t v24 = type metadata accessor for DataSource(0);
  uint64_t v25 = *(int *)(v24 + 20);
  __dst = (char *)v21 + v25;
  uint64_t v26 = &v22[v25];
  uint64_t v27 = type metadata accessor for DataSource.Logo(0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  if (v29(v26, 1, v27))
  {
    sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(__dst, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    uint64_t v31 = sub_23BAD78E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(__dst, v26, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
  }
  uint64_t v32 = *(int *)(v24 + 24);
  uint64_t v33 = (char *)v21 + v32;
  uint64_t v34 = &v22[v32];
  uint64_t v35 = sub_23BAD72C0();
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  return a1;
}

void *assignWithCopy for StockChartResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for StockChart(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_23BAD7350();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  sub_23BA6B024();
  v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
  uint64_t v13 = v6[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  char v16 = v15[8];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v16;
  uint64_t v17 = v6[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_23BAD74D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (char *)a2 + v21;
  *uint64_t v22 = *(void *)((char *)a2 + v21);
  v22[1] = *(void *)((char *)a2 + v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = type metadata accessor for DataSource(0);
  uint64_t v24 = *(int *)(v44 + 20);
  uint64_t v25 = (char *)v22 + v24;
  uint64_t v26 = &v23[v24];
  uint64_t v27 = type metadata accessor for DataSource.Logo(0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v9) = v29(v25, 1, v27);
  int v30 = v29(v26, 1, v27);
  if (v9)
  {
    if (!v30)
    {
      uint64_t v31 = sub_23BAD78E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v25, v26, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v30)
  {
    sub_23BA6BB6C((uint64_t)v25);
LABEL_6:
    sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v43 = sub_23BAD78E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 24))(v25, v26, v43);
LABEL_7:
  uint64_t v33 = *(int *)(v44 + 24);
  uint64_t v34 = (char *)v22 + v33;
  uint64_t v35 = &v23[v33];
  uint64_t v36 = sub_23BAD72C0();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  int v39 = v38(v34, 1, v36);
  int v40 = v38(v35, 1, v36);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 24))(v34, v35, v36);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
    goto LABEL_12;
  }
  if (v40)
  {
LABEL_12:
    sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v34, v35, *(void *)(*(void *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  return a1;
}

uint64_t sub_23BA6BB6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DataSource.Logo(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for StockChartResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for StockChart(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_23BAD7350();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  sub_23BA6B024();
  v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
  uint64_t v13 = v6[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = v6[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_23BAD74D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
  uint64_t v23 = type metadata accessor for DataSource(0);
  uint64_t v24 = *(int *)(v23 + 20);
  uint64_t v25 = &v21[v24];
  uint64_t v26 = &v22[v24];
  uint64_t v27 = type metadata accessor for DataSource.Logo(0);
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v30 = sub_23BAD78E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v25, v26, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  uint64_t v31 = *(int *)(v23 + 24);
  uint64_t v32 = &v21[v31];
  uint64_t v33 = &v22[v31];
  uint64_t v34 = sub_23BAD72C0();
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  return a1;
}

void *assignWithTake for StockChartResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for StockChart(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_23BAD7350();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  sub_23BA6B024();
  v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
  uint64_t v13 = v6[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = v6[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_23BAD74D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a2 + v20 + 8);
  *uint64_t v21 = *(void *)((char *)a2 + v20);
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v44 = type metadata accessor for DataSource(0);
  uint64_t v24 = *(int *)(v44 + 20);
  uint64_t v25 = (char *)v21 + v24;
  uint64_t v26 = &v22[v24];
  uint64_t v27 = type metadata accessor for DataSource.Logo(0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v9) = v29(v25, 1, v27);
  int v30 = v29(v26, 1, v27);
  if (v9)
  {
    if (!v30)
    {
      uint64_t v31 = sub_23BAD78E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v25, v26, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v30)
  {
    sub_23BA6BB6C((uint64_t)v25);
LABEL_6:
    sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v43 = sub_23BAD78E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 40))(v25, v26, v43);
LABEL_7:
  uint64_t v33 = *(int *)(v44 + 24);
  uint64_t v34 = (char *)v21 + v33;
  uint64_t v35 = &v22[v33];
  uint64_t v36 = sub_23BAD72C0();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  int v39 = v38(v34, 1, v36);
  int v40 = v38(v35, 1, v36);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 40))(v34, v35, v36);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
    goto LABEL_12;
  }
  if (v40)
  {
LABEL_12:
    sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v34, v35, *(void *)(*(void *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockChartResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23BA6C388);
}

uint64_t sub_23BA6C388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StockChart(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for DataSource(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for StockChartResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23BA6C494);
}

uint64_t sub_23BA6C494(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StockChart(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for DataSource(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_23BA6C598()
{
  uint64_t result = type metadata accessor for StockChart(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DataSource(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for Stock(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for AuditToken(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AuditToken(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
}

void sub_23BA6C718(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_23BA6C760@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA6E780(0, (unint64_t *)&unk_26ADC7F68);
  uint64_t result = sub_23BAD7DD0();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for FeatureAvailability();
    swift_allocObject();
    uint64_t v5 = sub_23BACB958((uint64_t)v6);
    a2[3] = v4;
    uint64_t result = sub_23BA6E26C(&qword_268A753B8, (void (*)(uint64_t))type metadata accessor for FeatureAvailability);
    a2[4] = result;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_23BA6C844(uint64_t a1)
{
  sub_23BAD7D80();
  MEMORY[0x270FA5388]();
  sub_23BA6E140(a1, (uint64_t)&v22);
  uint64_t v2 = swift_allocObject();
  sub_23BA6E620(&v22, v2 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)&long long v22 = MEMORY[0x263F8EE78];
  sub_23BA6E26C((unint64_t *)&qword_26ADC91B8, MEMORY[0x263F7CD78]);
  sub_23BA6E2B4();
  sub_23BA6E26C((unint64_t *)&qword_26ADC96F8, (void (*)(uint64_t))sub_23BA6E2B4);
  sub_23BAD8540();
  sub_23BA6E30C(0, (unint64_t *)&unk_26ADC8010, (unint64_t *)&unk_26ADC7F68);
  swift_allocObject();
  uint64_t v21 = sub_23BAD7F00();
  sub_23BA6E140(a1, (uint64_t)&v22);
  uint64_t v4 = swift_allocObject();
  sub_23BA6E620(&v22, v4 + 16);
  *(void *)&long long v22 = v3;
  sub_23BAD8540();
  sub_23BA6E30C(0, &qword_26ADC8008, &qword_26ADC7F60);
  swift_allocObject();
  uint64_t v20 = sub_23BAD7F00();
  sub_23BA6E140(a1, (uint64_t)&v22);
  uint64_t v5 = swift_allocObject();
  sub_23BA6E620(&v22, v5 + 16);
  *(void *)&long long v22 = v3;
  sub_23BAD8540();
  sub_23BA6E30C(0, &qword_26ADC7FD8, &qword_26ADC7F30);
  swift_allocObject();
  uint64_t v19 = sub_23BAD7F00();
  sub_23BA6E140(a1, (uint64_t)&v22);
  uint64_t v6 = swift_allocObject();
  sub_23BA6E620(&v22, v6 + 16);
  *(void *)&long long v22 = v3;
  sub_23BAD8540();
  sub_23BA6E30C(0, (unint64_t *)&unk_26ADC7FF8, &qword_26ADC7F50);
  swift_allocObject();
  uint64_t v18 = sub_23BAD7F00();
  sub_23BA6E140(a1, (uint64_t)&v22);
  uint64_t v7 = swift_allocObject();
  sub_23BA6E620(&v22, v7 + 16);
  *(void *)&long long v22 = v3;
  sub_23BAD8540();
  sub_23BA6E30C(0, (unint64_t *)&unk_26ADC7FC8, (unint64_t *)&unk_26ADC7F20);
  swift_allocObject();
  uint64_t v17 = sub_23BAD7F00();
  sub_23BA6E140(a1, (uint64_t)&v22);
  uint64_t v8 = swift_allocObject();
  sub_23BA6E620(&v22, v8 + 16);
  *(void *)&long long v22 = v3;
  sub_23BAD8540();
  sub_23BA6E30C(0, (unint64_t *)&unk_26ADC7FE8, &qword_26ADC7F40);
  swift_allocObject();
  uint64_t v16 = sub_23BAD7F00();
  sub_23BA6E140(a1, (uint64_t)&v22);
  uint64_t v9 = swift_allocObject();
  sub_23BA6E620(&v22, v9 + 16);
  *(void *)&long long v22 = v3;
  sub_23BAD8540();
  sub_23BA6E30C(0, (unint64_t *)&unk_26ADC7FB8, (unint64_t *)&unk_26ADC7F10);
  swift_allocObject();
  uint64_t v10 = sub_23BAD7F00();
  sub_23BA6E140(a1, (uint64_t)&v22);
  uint64_t v11 = swift_allocObject();
  sub_23BA6E620(&v22, v11 + 16);
  *(void *)&long long v22 = v3;
  sub_23BAD8540();
  sub_23BA6E30C(0, &qword_26ADC8038, &qword_26ADC80C0);
  swift_allocObject();
  uint64_t v12 = sub_23BAD7F00();
  sub_23BA6E140(a1, (uint64_t)&v22);
  uint64_t v13 = swift_allocObject();
  sub_23BA6E620(&v22, v13 + 16);
  *(void *)&long long v22 = v3;
  sub_23BAD8540();
  sub_23BA6E30C(0, &qword_26ADC8030, &qword_26ADC80B8);
  swift_allocObject();
  uint64_t v14 = sub_23BAD7F00();
  type metadata accessor for StockService(0);
  uint64_t v23 = 0;
  long long v22 = 0uLL;
  swift_allocObject();
  return sub_23BA71EE0((uint64_t *)&v22, v21, v20, v19, v18, v17, v16, v10, v12, v14);
}

uint64_t sub_23BA6CFA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA6E780(0, &qword_26ADC7F60);
  sub_23BAD78C0();
  sub_23BAD7DB0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v5) {
    return sub_23BA6E620(&v4, a2);
  }
  __break(1u);
  return result;
}

uint64_t sub_23BA6D05C@<X0>(void *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(unsigned char *, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA6E780(0, a2);
  uint64_t result = sub_23BAD7DD0();
  if (v9) {
    return a3(v8, a4);
  }
  __break(1u);
  return result;
}

uint64_t sub_23BA6D100@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA6E780(0, (unint64_t *)&unk_26ADC7F10);
  uint64_t result = sub_23BAD7DD0();
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23BA6D184(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StockService(0);
  uint64_t result = sub_23BAD7DC0();
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_23BA6D1D8@<X0>(unsigned char *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_mainBundle);
  id v3 = objc_msgSend(v2, sel_bundleIdentifier);

  if (v3)
  {
    sub_23BAD8240();
  }
  sub_23BA6D2D8();
  swift_bridgeObjectRelease();
  sub_23BAD7D20();
  sub_23BAD7D00();
  sub_23BAD7CB0();
  char v4 = sub_23BAD7D10();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v4 & 1;
  return result;
}

uint64_t sub_23BA6D2D8()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_23BAD8290();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    do
    {
      uint64_t v6 = sub_23BAD8290();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v4 = sub_23BAD88A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      uint64_t v2 = sub_23BAD8290();
      uint64_t v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_23BAD8290();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  BOOL v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23BA6D440@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_23BAD7DB0();
  if (v15 == 2)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if ((v15 & 1) == 0)
  {
    if (qword_26ADC91C8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_23BAD8090();
    __swift_project_value_buffer(v5, (uint64_t)qword_26ADCC840);
    uint64_t v6 = sub_23BAD8070();
    os_log_type_t v7 = sub_23BAD8470();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_23BA68000, v6, v7, "Registering StocksKitService: In-Process", v8, 2u);
      MEMORY[0x23ECCD620](v8, -1, -1);
    }

    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v9 = type metadata accessor for InProcessStockService();
    uint64_t result = sub_23BAD7DC0();
    if (result)
    {
      BOOL v10 = (char **)&protocol witness table for InProcessStockService;
LABEL_15:
      a2[3] = v9;
      a2[4] = (uint64_t)v10;
      *a2 = result;
      return result;
    }
    goto LABEL_17;
  }
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_23BAD8090();
  __swift_project_value_buffer(v11, (uint64_t)qword_26ADCC840);
  uint64_t v12 = sub_23BAD8070();
  os_log_type_t v13 = sub_23BAD8470();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_23BA68000, v12, v13, "Registering StocksKitService: XPC Service", v14, 2u);
    MEMORY[0x23ECCD620](v14, -1, -1);
  }

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = type metadata accessor for StocksKitServiceProxy();
  uint64_t result = sub_23BAD7DC0();
  if (result)
  {
    BOOL v10 = &off_26EEFF958;
    goto LABEL_15;
  }
LABEL_18:
  __break(1u);
  return result;
}

void *sub_23BA6D6BC(uint64_t a1)
{
  sub_23BAD7D80();
  MEMORY[0x270FA5388]();
  sub_23BA6E140(a1, (uint64_t)v13);
  uint64_t v2 = swift_allocObject();
  sub_23BA6E620(v13, v2 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)&v13[0] = MEMORY[0x263F8EE78];
  sub_23BA6E26C((unint64_t *)&qword_26ADC91B8, MEMORY[0x263F7CD78]);
  sub_23BA6E2B4();
  sub_23BA6E26C((unint64_t *)&qword_26ADC96F8, (void (*)(uint64_t))sub_23BA6E2B4);
  sub_23BAD8540();
  sub_23BA6E30C(0, (unint64_t *)&unk_26ADC8010, (unint64_t *)&unk_26ADC7F68);
  swift_allocObject();
  uint64_t v4 = sub_23BAD7F00();
  sub_23BA6E140(a1, (uint64_t)v13);
  uint64_t v5 = swift_allocObject();
  sub_23BA6E620(v13, v5 + 16);
  *(void *)&v13[0] = v3;
  sub_23BAD8540();
  sub_23BA6E30C(0, (unint64_t *)&unk_26ADC8020, &qword_26ADC7F78);
  swift_allocObject();
  uint64_t v6 = sub_23BAD7F00();
  sub_23BA6E140(a1, (uint64_t)v13);
  uint64_t v7 = swift_allocObject();
  sub_23BA6E620(v13, v7 + 16);
  *(void *)&v13[0] = v3;
  sub_23BAD8540();
  sub_23BA6E30C(0, &qword_26ADC7FE0, &qword_26ADC7F38);
  swift_allocObject();
  uint64_t v8 = sub_23BAD7F00();
  type metadata accessor for InProcessStockService();
  uint64_t v9 = (void *)swift_allocObject();
  sub_23BA6E3EC();
  swift_allocObject();
  uint64_t v10 = sub_23BAD8000();
  sub_23BA6E574();
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 24) = 0;
  *(void *)(v11 + 16) = v10;
  v9[2] = v4;
  v9[3] = v6;
  v9[4] = v8;
  v9[5] = v11;
  return v9;
}

uint64_t sub_23BA6DA3C()
{
  type metadata accessor for StocksKitServiceProxy();
  return swift_allocObject();
}

uint64_t sub_23BA6DA70@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (objc_class *)type metadata accessor for IdentificationService();
  id v3 = objc_msgSend(objc_allocWithZone(v2), sel_init);
  a1[3] = v2;
  uint64_t result = sub_23BA6E26C((unint64_t *)&qword_268A753B0, (void (*)(uint64_t))type metadata accessor for IdentificationService);
  a1[4] = result;
  *a1 = v3;
  return result;
}

id sub_23BA6DAF8()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for NoopAppActivityMonitor());
  return objc_msgSend(v0, sel_init);
}

void sub_23BA6DB30(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for BundleReader;
  *(void *)(a1 + 32) = &off_26EF00358;
}

uint64_t sub_23BA6DB48()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ServiceAssembly()
{
  return self;
}

uint64_t sub_23BA6DB80()
{
  uint64_t v0 = sub_23BAD7F20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388]();
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAD7E20();
  sub_23BA6E780(0, &qword_26ADC7F48);
  sub_23BAD7E90();
  swift_release();
  uint64_t v4 = *MEMORY[0x263F7D010];
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_23BAD7D60();
  swift_release();
  swift_release();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_23BAD7E20();
  type metadata accessor for StockService(0);
  sub_23BAD7E80();
  swift_release();
  swift_release();
  sub_23BAD7E20();
  sub_23BAD7E80();
  swift_release();
  v5(v3, v4, v0);
  sub_23BAD7D60();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_23BAD7E20();
  sub_23BAD7E90();
  swift_release();
  swift_release();
  sub_23BAD7E20();
  sub_23BA6E780(0, &qword_26ADC80C0);
  sub_23BAD7E90();
  swift_release();
  v5(v3, v4, v0);
  sub_23BAD7D60();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_23BAD7E20();
  type metadata accessor for InProcessStockService();
  sub_23BAD7E80();
  swift_release();
  swift_release();
  sub_23BAD7E20();
  type metadata accessor for StocksKitServiceProxy();
  sub_23BAD7E80();
  swift_release();
  v5(v3, v4, v0);
  sub_23BAD7D60();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_23BAD7E20();
  sub_23BA6E780(0, &qword_26ADC7F58);
  sub_23BAD7E90();
  swift_release();
  v5(v3, v4, v0);
  sub_23BAD7D60();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_23BAD7E20();
  sub_23BA6E0E8();
  sub_23BAD7E80();
  swift_release();
  swift_release();
  sub_23BAD7E20();
  sub_23BA6E780(0, &qword_26ADC80B8);
  sub_23BAD7E90();
  swift_release();
  return swift_release();
}

unint64_t sub_23BA6E0E8()
{
  unint64_t result = qword_26ADC80F0;
  if (!qword_26ADC80F0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26ADC80F0);
  }
  return result;
}

uint64_t sub_23BA6E140(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23BA6E1A4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_23BA6E22C@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA6D05C((void *)(v1 + 16), (unint64_t *)&unk_26ADC7F68, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

uint64_t sub_23BA6E26C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_23BA6E2B4()
{
  if (!qword_26ADC96F0)
  {
    sub_23BAD7D80();
    unint64_t v0 = sub_23BAD8330();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC96F0);
    }
  }
}

void sub_23BA6E30C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_23BA6E780(255, a3);
    unint64_t v4 = sub_23BAD7F10();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_23BA6E36C@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA6D05C((void *)(v1 + 16), &qword_26ADC7F78, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

uint64_t sub_23BA6E3AC@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA6D05C((void *)(v1 + 16), &qword_26ADC7F38, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

void sub_23BA6E3EC()
{
  if (!qword_26ADC81C0)
  {
    sub_23BA6E458();
    sub_23BA6E4B0();
    unint64_t v0 = sub_23BAD8010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC81C0);
    }
  }
}

void sub_23BA6E458()
{
  if (!qword_26ADC7EE8)
  {
    unint64_t v0 = sub_23BAD84E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC7EE8);
    }
  }
}

unint64_t sub_23BA6E4B0()
{
  unint64_t result = qword_26ADC8200;
  if (!qword_26ADC8200)
  {
    sub_23BA6E458();
    sub_23BA6E520();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC8200);
  }
  return result;
}

unint64_t sub_23BA6E520()
{
  unint64_t result = qword_26ADC81E8;
  if (!qword_26ADC81E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC81E8);
  }
  return result;
}

void sub_23BA6E574()
{
  if (!qword_26ADC8220)
  {
    sub_23BA6E3EC();
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_23BAD8600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC8220);
    }
  }
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_23BA6E620(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_23BA6E670@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA6CFA8((void *)(v1 + 16), a1);
}

uint64_t sub_23BA6E678@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA6D05C((void *)(v1 + 16), &qword_26ADC7F30, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

uint64_t sub_23BA6E6B8@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA6D05C((void *)(v1 + 16), &qword_26ADC7F50, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

uint64_t sub_23BA6E6F8@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA6D05C((void *)(v1 + 16), (unint64_t *)&unk_26ADC7F20, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

uint64_t sub_23BA6E738@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA6D05C((void *)(v1 + 16), &qword_26ADC7F40, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

uint64_t sub_23BA6E778@<X0>(void *a1@<X8>)
{
  return sub_23BA6D100((void *)(v1 + 16), a1);
}

uint64_t sub_23BA6E780(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23BA6E7D0@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA6D05C((void *)(v1 + 16), &qword_26ADC80C0, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

uint64_t sub_23BA6E810@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA6D05C((void *)(v1 + 16), &qword_26ADC80B8, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

void *sub_23BA6E880()
{
  if (qword_26ADC8058 != -1) {
    swift_once();
  }
  sub_23BA87290((uint64_t)v1);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  type metadata accessor for StockService(0);
  uint64_t result = (void *)sub_23BAD7DA0();
  if (result)
  {
    off_26ADC8088 = result;
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static StockService.shared.getter()
{
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  return swift_retain();
}

unint64_t StockService.Configuration.description.getter()
{
  unint64_t v1 = 0xD000000000000015;
  if (*(void *)(v0 + 8))
  {
    sub_23BAD8590();
    sub_23BAD8280();
    sub_23BAD8280();
    sub_23BAD8280();
    sub_23BAD8400();
    return 0;
  }
  return v1;
}

unint64_t StockService.NetworkSession.description.getter()
{
  uint64_t v1 = v0;
  unint64_t v2 = 0xD00000000000001ALL;
  uint64_t v3 = sub_23BAD7350();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA84564(v1, (uint64_t)v8, type metadata accessor for StockService.NetworkSession);
  sub_23BA6ED18();
  uint64_t v10 = v9;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, &v8[*(int *)(v10 + 48)], v3);
    v12[0] = 0;
    v12[1] = 0xE000000000000000;
    sub_23BAD8590();
    sub_23BAD8280();
    sub_23BAD8280();
    swift_bridgeObjectRelease();
    sub_23BAD8280();
    sub_23BAD8400();
    sub_23BAD8280();
    sub_23BAD7330();
    sub_23BAD8280();
    swift_bridgeObjectRelease();
    unint64_t v2 = v12[0];
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v2;
}

uint64_t type metadata accessor for StockService.NetworkSession(uint64_t a1)
{
  return sub_23BA825D8(a1, (uint64_t *)&unk_26ADC9158);
}

void sub_23BA6ED18()
{
  if (!qword_26ADC9168)
  {
    sub_23BAD7350();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26ADC9168);
    }
  }
}

uint64_t StockService.CachePolicy.description.getter()
{
  uint64_t v1 = sub_23BAD74B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  v45 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_23BAD89F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_23BAD89D0();
  uint64_t v44 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_23BAD8A60();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v43 = v11;
  MEMORY[0x270FA5388](v11);
  os_log_type_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_23BAD8A70();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v22 = *v0;
  uint64_t v21 = v0[1];
  if (!*((unsigned char *)v0 + 16))
  {
    unint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    uint64_t v37 = (char *)&v32 - v18;
    uint64_t v38 = v20;
    uint64_t v39 = v19;
    uint64_t v40 = v22;
    uint64_t v41 = v21;
    sub_23BAD8590();
    swift_bridgeObjectRelease();
    unint64_t v46 = 0xD000000000000011;
    unint64_t v47 = 0x800000023BADDAE0;
    sub_23BA808D4(0, &qword_268A753C0, MEMORY[0x263F07EC8], MEMORY[0x263F8E0F8]);
    sub_23BAD8A30();
    uint64_t v34 = v8;
    uint64_t v23 = v5;
    uint64_t v36 = v1;
    uint64_t v33 = v4;
    uint64_t v35 = v2;
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_23BAD9380;
    sub_23BAD8A00();
    sub_23BAD8A10();
    sub_23BAD8A20();
    sub_23BA80258(v25);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_23BAD8A50();
    sub_23BAD89C0();
    sub_23BAD89E0();
    sub_23BAD7280();
    goto LABEL_5;
  }
  if (*((unsigned char *)v0 + 16) == 1)
  {
    unint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    uint64_t v37 = (char *)&v32 - v18;
    uint64_t v38 = v20;
    uint64_t v39 = v19;
    uint64_t v40 = v22;
    uint64_t v41 = v21;
    sub_23BAD8590();
    swift_bridgeObjectRelease();
    unint64_t v46 = 0xD000000000000012;
    unint64_t v47 = 0x800000023BADDAC0;
    sub_23BA808D4(0, &qword_268A753C0, MEMORY[0x263F07EC8], MEMORY[0x263F8E0F8]);
    sub_23BAD8A30();
    uint64_t v35 = v2;
    uint64_t v36 = v1;
    uint64_t v33 = v4;
    uint64_t v34 = v8;
    uint64_t v23 = v5;
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_23BAD9380;
    sub_23BAD8A00();
    sub_23BAD8A10();
    sub_23BAD8A20();
    sub_23BA80258(v24);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_23BAD8A50();
    sub_23BAD89C0();
    sub_23BAD89E0();
    sub_23BAD7280();
LABEL_5:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v33);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v34);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v43);
    uint64_t v26 = v45;
    sub_23BAD73A0();
    uint64_t v27 = v37;
    sub_23BAD8A40();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v36);
    uint64_t v28 = v39;
    uint64_t v29 = *(void (**)(char *, uint64_t))(v38 + 8);
    v29(v17, v39);
    sub_23BA85084(&qword_268A753C8, MEMORY[0x263F07F20]);
    sub_23BAD8A90();
    v29(v27, v28);
    sub_23BAD8280();
    swift_bridgeObjectRelease();
    sub_23BAD8280();
    return v46;
  }
  uint64_t result = 0x746C7561666564;
  switch(v22)
  {
    case 1:
      uint64_t result = 0x6E4F646568636163;
      break;
    case 2:
      uint64_t v31 = 0x65726F6E6769;
      goto LABEL_10;
    case 3:
      uint64_t v31 = 0x726566657270;
LABEL_10:
      uint64_t result = v31 & 0xFFFFFFFFFFFFLL | 0x6143000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23BA6F584@<X0>(unsigned __int8 a1@<W0>, char a2@<W1>, double *a3@<X8>)
{
  if (a2)
  {
LABEL_2:
    uint64_t v5 = (unsigned int *)MEMORY[0x263F7CD48];
  }
  else if (*(unsigned char *)(v3 + 16))
  {
    if (*(unsigned char *)(v3 + 16) == 1)
    {
      *a3 = (double)sub_23BAD8AA0();
LABEL_6:
      uint64_t v5 = (unsigned int *)MEMORY[0x263F7CD70];
    }
    else
    {
      switch(*(void *)v3)
      {
        case 1:
          uint64_t v5 = (unsigned int *)MEMORY[0x263F7CD58];
          break;
        case 2:
          goto LABEL_2;
        case 3:
          int v13 = a1;
          uint64_t v9 = sub_23BAD7D70();
          uint64_t v8 = *(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);
          if (v13 == 4) {
            uint64_t v14 = (unsigned int *)MEMORY[0x263F7CD60];
          }
          else {
            uint64_t v14 = (unsigned int *)MEMORY[0x263F7CD50];
          }
          uint64_t v11 = *v14;
          uint64_t v10 = a3;
          goto LABEL_9;
        default:
          if (a1 < 3u)
          {
            *a3 = 60.0;
            goto LABEL_6;
          }
          if (a1 == 3) {
            uint64_t v5 = (unsigned int *)MEMORY[0x263F7CD50];
          }
          else {
            uint64_t v5 = (unsigned int *)MEMORY[0x263F7CD60];
          }
          break;
      }
    }
  }
  else
  {
    *a3 = (double)sub_23BAD8AA0();
    uint64_t v5 = (unsigned int *)MEMORY[0x263F7CD68];
  }
  uint64_t v6 = *v5;
  uint64_t v7 = sub_23BAD7D70();
  uint64_t v8 = *(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);
  uint64_t v9 = v7;
  uint64_t v10 = a3;
  uint64_t v11 = v6;
LABEL_9:
  return v8(v10, v11, v9);
}

uint64_t sub_23BA6F70C()
{
  return 0;
}

uint64_t sub_23BA6F718()
{
  return 0;
}

void sub_23BA6F724(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23BA6F730(uint64_t a1)
{
  unint64_t v2 = sub_23BA806C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA6F76C(uint64_t a1)
{
  unint64_t v2 = sub_23BA806C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_23BA6F7A8()
{
  return 1;
}

uint64_t sub_23BA6F7B8(char a1)
{
  uint64_t result = 0x746C7561666564;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E4F646568636163;
      break;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t v3 = 0x65726F6E6769;
      goto LABEL_6;
    case 4:
      uint64_t v3 = 0x726566657270;
LABEL_6:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6143000000000000;
      break;
    case 5:
      uint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23BA6F894()
{
  return 12383;
}

uint64_t sub_23BA6F8A4(uint64_t a1)
{
  unint64_t v2 = sub_23BA8066C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA6F8E0(uint64_t a1)
{
  unint64_t v2 = sub_23BA8066C();
  return MEMORY[0x270FA00B8](a1, v2);
}

BOOL sub_23BA6F91C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23BA6F930()
{
  return sub_23BAD8980();
}

uint64_t sub_23BA6F978()
{
  return sub_23BAD8950();
}

uint64_t sub_23BA6F9A4()
{
  return sub_23BAD8980();
}

uint64_t sub_23BA6F9E8()
{
  return sub_23BA6F7B8(*v0);
}

uint64_t sub_23BA6F9F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BA80D4C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BA6FA18(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_23BA6FA24(uint64_t a1)
{
  unint64_t v2 = sub_23BA80768();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA6FA60(uint64_t a1)
{
  unint64_t v2 = sub_23BA80768();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_23BA6FA9C(uint64_t a1)
{
  unint64_t v2 = sub_23BA80714();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA6FAD8(uint64_t a1)
{
  unint64_t v2 = sub_23BA80714();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_23BA6FB14@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_23BA6FB44(uint64_t a1)
{
  unint64_t v2 = sub_23BA80618();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA6FB80(uint64_t a1)
{
  unint64_t v2 = sub_23BA80618();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_23BA6FBBC(uint64_t a1)
{
  unint64_t v2 = sub_23BA805C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA6FBF8(uint64_t a1)
{
  unint64_t v2 = sub_23BA805C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_23BA6FC34()
{
  return sub_23BAD8980();
}

uint64_t sub_23BA6FC78()
{
  return sub_23BAD8950();
}

uint64_t sub_23BA6FCA0()
{
  return sub_23BAD8980();
}

uint64_t sub_23BA6FCE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_23BAD88A0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23BA6FD60(uint64_t a1)
{
  unint64_t v2 = sub_23BA80570();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA6FD9C(uint64_t a1)
{
  unint64_t v2 = sub_23BA80570();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StockService.CachePolicy.encode(to:)(void *a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E0C0];
  sub_23BA807BC(0, &qword_26ADC8168, (uint64_t (*)(void))sub_23BA80570, (uint64_t)&type metadata for StockService.CachePolicy.PreferCacheMaxAgeCodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  MEMORY[0x270FA5388]();
  unint64_t v47 = (char *)&v33 - v5;
  sub_23BA807BC(0, &qword_26ADC8160, (uint64_t (*)(void))sub_23BA805C4, (uint64_t)&type metadata for StockService.CachePolicy.PreferCacheCodingKeys, v3);
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  MEMORY[0x270FA5388]();
  uint64_t v41 = (char *)&v33 - v7;
  sub_23BA807BC(0, &qword_26ADC8158, (uint64_t (*)(void))sub_23BA80618, (uint64_t)&type metadata for StockService.CachePolicy.IgnoreCacheCodingKeys, v3);
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  MEMORY[0x270FA5388]();
  uint64_t v38 = (char *)&v33 - v9;
  sub_23BA807BC(0, &qword_26ADC8188, (uint64_t (*)(void))sub_23BA8066C, (uint64_t)&type metadata for StockService.CachePolicy.CachedOnlyMaxAgeCodingKeys, v3);
  uint64_t v46 = v10;
  uint64_t v44 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388]();
  v45 = (char *)&v33 - v11;
  sub_23BA807BC(0, &qword_26ADC8180, (uint64_t (*)(void))sub_23BA806C0, (uint64_t)&type metadata for StockService.CachePolicy.CachedOnlyCodingKeys, v3);
  uint64_t v36 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  MEMORY[0x270FA5388]();
  uint64_t v35 = (char *)&v33 - v13;
  sub_23BA807BC(0, &qword_26ADC8178, (uint64_t (*)(void))sub_23BA80714, (uint64_t)&type metadata for StockService.CachePolicy.DefaultCodingKeys, v3);
  uint64_t v33 = *(void *)(v14 - 8);
  uint64_t v34 = v14;
  MEMORY[0x270FA5388]();
  uint64_t v16 = (char *)&v33 - v15;
  sub_23BA807BC(0, &qword_26ADC8170, (uint64_t (*)(void))sub_23BA80768, (uint64_t)&type metadata for StockService.CachePolicy.CodingKeys, v3);
  uint64_t v18 = v17;
  uint64_t v51 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v19 = *v1;
  uint64_t v50 = v1[1];
  int v20 = *((unsigned __int8 *)v1 + 16);
  uint64_t v21 = a1[3];
  uint64_t v22 = a1;
  uint64_t v24 = (char *)&v33 - v23;
  __swift_project_boxed_opaque_existential_1(v22, v21);
  sub_23BA80768();
  sub_23BAD89B0();
  if (!v20)
  {
    uint64_t v27 = v44;
    LOBYTE(v52) = 2;
    sub_23BA8066C();
    uint64_t v28 = v45;
    sub_23BAD87E0();
    uint64_t v52 = v19;
    uint64_t v53 = v50;
    uint64_t v29 = v46;
    sub_23BAD8850();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v24, v18);
  }
  if (v20 == 1)
  {
    LOBYTE(v52) = 5;
    sub_23BA80570();
    uint64_t v25 = v47;
    sub_23BAD87E0();
    uint64_t v52 = v19;
    uint64_t v53 = v50;
    uint64_t v26 = v49;
    sub_23BAD8850();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v25, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v24, v18);
  }
  switch(v19)
  {
    case 1:
      LOBYTE(v52) = 1;
      sub_23BA806C0();
      uint64_t v16 = v35;
      sub_23BAD87E0();
      uint64_t v32 = v36;
      uint64_t v31 = v37;
      break;
    case 2:
      LOBYTE(v52) = 3;
      sub_23BA80618();
      uint64_t v16 = v38;
      sub_23BAD87E0();
      uint64_t v32 = v39;
      uint64_t v31 = v40;
      break;
    case 3:
      LOBYTE(v52) = 4;
      sub_23BA805C4();
      uint64_t v16 = v41;
      sub_23BAD87E0();
      uint64_t v32 = v42;
      uint64_t v31 = v43;
      break;
    default:
      LOBYTE(v52) = 0;
      sub_23BA80714();
      sub_23BAD87E0();
      uint64_t v32 = v33;
      uint64_t v31 = v34;
      break;
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v24, v18);
}

uint64_t StockService.CachePolicy.init(from:)@<X0>(void *a1@<X0>, long long *a2@<X8>)
{
  v59 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E040];
  sub_23BA807BC(0, &qword_26ADC8398, (uint64_t (*)(void))sub_23BA80570, (uint64_t)&type metadata for StockService.CachePolicy.PreferCacheMaxAgeCodingKeys, MEMORY[0x263F8E040]);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  uint64_t v57 = v5;
  MEMORY[0x270FA5388]();
  v63 = (char *)&v46 - v6;
  sub_23BA807BC(0, &qword_26ADC8390, (uint64_t (*)(void))sub_23BA805C4, (uint64_t)&type metadata for StockService.CachePolicy.PreferCacheCodingKeys, v3);
  uint64_t v54 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  MEMORY[0x270FA5388]();
  v58 = (char *)&v46 - v8;
  sub_23BA807BC(0, &qword_26ADC8388, (uint64_t (*)(void))sub_23BA80618, (uint64_t)&type metadata for StockService.CachePolicy.IgnoreCacheCodingKeys, v3);
  uint64_t v48 = v9;
  uint64_t v53 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388]();
  v62 = (char *)&v46 - v10;
  sub_23BA807BC(0, &qword_26ADC83B8, (uint64_t (*)(void))sub_23BA8066C, (uint64_t)&type metadata for StockService.CachePolicy.CachedOnlyMaxAgeCodingKeys, v3);
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v52 = v11;
  MEMORY[0x270FA5388]();
  v61 = (char *)&v46 - v12;
  sub_23BA807BC(0, &qword_26ADC83B0, (uint64_t (*)(void))sub_23BA806C0, (uint64_t)&type metadata for StockService.CachePolicy.CachedOnlyCodingKeys, v3);
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  MEMORY[0x270FA5388]();
  v60 = (char *)&v46 - v14;
  sub_23BA807BC(0, &qword_26ADC83A8, (uint64_t (*)(void))sub_23BA80714, (uint64_t)&type metadata for StockService.CachePolicy.DefaultCodingKeys, v3);
  uint64_t v16 = v15;
  uint64_t v47 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v18 = (char *)&v46 - v17;
  sub_23BA807BC(0, &qword_26ADC83A0, (uint64_t (*)(void))sub_23BA80768, (uint64_t)&type metadata for StockService.CachePolicy.CodingKeys, v3);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v22 = a1[3];
  uint64_t v65 = (uint64_t)a1;
  uint64_t v23 = a1;
  uint64_t v25 = (char *)&v46 - v24;
  __swift_project_boxed_opaque_existential_1(v23, v22);
  sub_23BA80768();
  v64 = v25;
  uint64_t v26 = v67;
  sub_23BAD89A0();
  if (v26) {
    goto LABEL_13;
  }
  uint64_t v46 = v16;
  uint64_t v27 = v60;
  uint64_t v28 = v61;
  uint64_t v29 = v62;
  int v30 = v63;
  uint64_t v67 = v21;
  uint64_t v31 = sub_23BAD87C0();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v33 = sub_23BAD85F0();
    swift_allocError();
    uint64_t v35 = v34;
    sub_23BA80824();
    void *v35 = &type metadata for StockService.CachePolicy;
    uint64_t v36 = v64;
    sub_23BAD8740();
    sub_23BAD85D0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, *MEMORY[0x263F8DCB0], v33);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v36, v20);
LABEL_13:
    uint64_t v40 = v65;
    return __swift_destroy_boxed_opaque_existential_1(v40);
  }
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      LOBYTE(v66) = 1;
      sub_23BA806C0();
      sub_23BAD8730();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v27, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v20);
      long long v32 = xmmword_23BAD93B0;
      goto LABEL_10;
    case 2:
      LOBYTE(v66) = 2;
      sub_23BA8066C();
      sub_23BAD8730();
      uint64_t v37 = v52;
      sub_23BAD87B0();
      uint64_t v38 = v67;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v64, v20);
      char v45 = 0;
      long long v32 = v66;
      goto LABEL_11;
    case 3:
      LOBYTE(v66) = 3;
      sub_23BA80618();
      sub_23BAD8730();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v29, v48);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v20);
      long long v32 = xmmword_23BAD93A0;
      goto LABEL_10;
    case 4:
      LOBYTE(v66) = 4;
      sub_23BA805C4();
      uint64_t v39 = v58;
      sub_23BAD8730();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v20);
      long long v32 = xmmword_23BAD9390;
      goto LABEL_10;
    case 5:
      LOBYTE(v66) = 5;
      sub_23BA80570();
      sub_23BAD8730();
      uint64_t v43 = v56;
      sub_23BAD87B0();
      uint64_t v44 = v67;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v30, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v64, v20);
      long long v32 = v66;
      char v45 = 1;
      goto LABEL_11;
    default:
      LOBYTE(v66) = 0;
      sub_23BA80714();
      sub_23BAD8730();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v20);
      long long v32 = 0uLL;
LABEL_10:
      char v45 = 2;
LABEL_11:
      uint64_t v40 = v65;
      uint64_t v41 = v59;
      long long *v59 = v32;
      *((unsigned char *)v41 + 16) = v45;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v40);
}

uint64_t sub_23BA70FD4@<X0>(void *a1@<X0>, long long *a2@<X8>)
{
  return StockService.CachePolicy.init(from:)(a1, a2);
}

uint64_t sub_23BA70FEC(void *a1)
{
  return StockService.CachePolicy.encode(to:)(a1);
}

id sub_23BA71014()
{
  uint64_t v1 = *(void **)(v0 + 136);
  if (v1)
  {
    id v2 = *(id *)(v0 + 136);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A48]), sel_init);
    uint64_t v4 = (void *)sub_23BAD8230();
    objc_msgSend(v3, sel_setName_, v4);

    objc_msgSend(v3, sel_setMaxConcurrentOperationCount_, 1);
    uint64_t v5 = *(void **)(v0 + 136);
    *(void *)(v0 + 136) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v6 = v1;
  return v2;
}

uint64_t StockService.__allocating_init(configuration:)(uint64_t *a1)
{
  uint64_t v2 = swift_allocObject();
  StockService.init(configuration:)(a1);
  return v2;
}

void *StockService.init(configuration:)(uint64_t *a1)
{
  uint64_t v46 = sub_23BAD7D80();
  MEMORY[0x270FA5388]();
  uint64_t v47 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_23BAD84A0();
  uint64_t v48 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAD8480();
  MEMORY[0x270FA5388]();
  sub_23BAD81C0();
  MEMORY[0x270FA5388]();
  uint64_t v6 = *a1;
  uint64_t v43 = a1[1];
  uint64_t v44 = a1[2];
  uint64_t v45 = v6;
  *(void *)(v1 + 40) = objc_msgSend(objc_allocWithZone((Class)sub_23BAD7EE0()), sel_init);
  sub_23BA84528(0, &qword_26ADC9720);
  sub_23BAD81B0();
  uint64_t v50 = MEMORY[0x263F8EE78];
  v40[2] = sub_23BA85084(&qword_26ADC9718, MEMORY[0x263F8F0F8]);
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F0F8];
  sub_23BA808D4(0, &qword_26ADC9700, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
  v40[1] = v8;
  sub_23BA84D6C(&qword_26ADC9708, &qword_26ADC9700, v7);
  sub_23BAD8540();
  uint64_t v9 = *MEMORY[0x263F8F130];
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 104);
  v48 += 104;
  uint64_t v11 = v42;
  v10(v5, v9, v42);
  uint64_t v12 = sub_23BAD84D0();
  uint64_t v13 = v41;
  v41[6] = v12;
  sub_23BAD81A0();
  uint64_t v50 = MEMORY[0x263F8EE78];
  uint64_t v14 = v13;
  sub_23BAD8540();
  v10(v5, v9, v11);
  v13[7] = sub_23BAD84D0();
  v13[17] = 0;
  uint64_t v15 = (char *)v13 + OBJC_IVAR____TtC9StocksKit12StockService____lazy_storage___networkProxy;
  uint64_t v16 = sub_23BAD7D90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_23BAD8090();
  __swift_project_value_buffer(v17, (uint64_t)qword_26ADCC840);
  uint64_t v18 = v43;
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_23BAD8070();
  os_log_type_t v20 = sub_23BAD8470();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(void *)&v49[0] = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v24 = v44;
    uint64_t v23 = v45;
    if (v18)
    {
      uint64_t v50 = 0;
      unint64_t v51 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_23BAD8590();
      sub_23BAD8280();
      sub_23BAD8280();
      sub_23BAD8280();
      sub_23BAD8400();
      swift_bridgeObjectRelease();
      uint64_t v25 = v50;
      unint64_t v26 = v51;
    }
    else
    {
      unint64_t v26 = 0x800000023BADDA30;
      uint64_t v25 = 0xD000000000000015;
    }
    uint64_t v50 = sub_23BA7E794(v25, v26, (uint64_t *)v49);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23BA68000, v19, v20, "Creating stocks service with configuration: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v22, -1, -1);
    MEMORY[0x23ECCD620](v21, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v24 = v44;
    uint64_t v23 = v45;
  }
  long long v13[2] = v23;
  v13[3] = v18;
  v13[4] = v24;
  if (qword_26ADC8058 != -1) {
    swift_once();
  }
  sub_23BA87290((uint64_t)&v50);
  sub_23BA6E140((uint64_t)&v50, (uint64_t)v49);
  uint64_t v27 = swift_allocObject();
  sub_23BA6E620(v49, v27 + 16);
  uint64_t v28 = MEMORY[0x263F8EE78];
  *(void *)&v49[0] = MEMORY[0x263F8EE78];
  sub_23BA85084((unint64_t *)&qword_26ADC91B8, MEMORY[0x263F7CD78]);
  uint64_t v29 = (uint64_t (*)(uint64_t))MEMORY[0x263F7CD78];
  sub_23BA808D4(0, (unint64_t *)&qword_26ADC96F0, MEMORY[0x263F7CD78], MEMORY[0x263F8D488]);
  sub_23BA84D6C((unint64_t *)&qword_26ADC96F8, (unint64_t *)&qword_26ADC96F0, v29);
  sub_23BAD8540();
  sub_23BA6E30C(0, (unint64_t *)&unk_26ADC8010, (unint64_t *)&unk_26ADC7F68);
  swift_allocObject();
  v14[8] = sub_23BAD7F00();
  sub_23BA6E140((uint64_t)&v50, (uint64_t)v49);
  uint64_t v30 = swift_allocObject();
  sub_23BA6E620(v49, v30 + 16);
  *(void *)&v49[0] = v28;
  sub_23BAD8540();
  sub_23BA6E30C(0, &qword_26ADC8008, &qword_26ADC7F60);
  swift_allocObject();
  v14[9] = sub_23BAD7F00();
  sub_23BA6E140((uint64_t)&v50, (uint64_t)v49);
  uint64_t v31 = swift_allocObject();
  sub_23BA6E620(v49, v31 + 16);
  *(void *)&v49[0] = v28;
  sub_23BAD8540();
  sub_23BA6E30C(0, &qword_26ADC7FD8, &qword_26ADC7F30);
  swift_allocObject();
  v14[10] = sub_23BAD7F00();
  sub_23BA6E140((uint64_t)&v50, (uint64_t)v49);
  uint64_t v32 = swift_allocObject();
  sub_23BA6E620(v49, v32 + 16);
  *(void *)&v49[0] = v28;
  sub_23BAD8540();
  sub_23BA6E30C(0, (unint64_t *)&unk_26ADC7FF8, &qword_26ADC7F50);
  swift_allocObject();
  v14[11] = sub_23BAD7F00();
  sub_23BA6E140((uint64_t)&v50, (uint64_t)v49);
  uint64_t v33 = swift_allocObject();
  sub_23BA6E620(v49, v33 + 16);
  *(void *)&v49[0] = v28;
  sub_23BAD8540();
  sub_23BA6E30C(0, (unint64_t *)&unk_26ADC7FC8, (unint64_t *)&unk_26ADC7F20);
  swift_allocObject();
  v14[12] = sub_23BAD7F00();
  sub_23BA6E140((uint64_t)&v50, (uint64_t)v49);
  uint64_t v34 = swift_allocObject();
  sub_23BA6E620(v49, v34 + 16);
  *(void *)&v49[0] = v28;
  sub_23BAD8540();
  sub_23BA6E30C(0, (unint64_t *)&unk_26ADC7FE8, &qword_26ADC7F40);
  swift_allocObject();
  v14[13] = sub_23BAD7F00();
  sub_23BA6E140((uint64_t)&v50, (uint64_t)v49);
  uint64_t v35 = swift_allocObject();
  sub_23BA6E620(v49, v35 + 16);
  *(void *)&v49[0] = v28;
  sub_23BAD8540();
  sub_23BA6E30C(0, (unint64_t *)&unk_26ADC7FB8, (unint64_t *)&unk_26ADC7F10);
  swift_allocObject();
  v14[14] = sub_23BAD7F00();
  sub_23BA6E140((uint64_t)&v50, (uint64_t)v49);
  uint64_t v36 = swift_allocObject();
  sub_23BA6E620(v49, v36 + 16);
  *(void *)&v49[0] = v28;
  sub_23BAD8540();
  sub_23BA6E30C(0, &qword_26ADC8038, &qword_26ADC80C0);
  swift_allocObject();
  v14[15] = sub_23BAD7F00();
  sub_23BA6E140((uint64_t)&v50, (uint64_t)v49);
  uint64_t v37 = swift_allocObject();
  sub_23BA6E620(v49, v37 + 16);
  *(void *)&v49[0] = v28;
  sub_23BAD8540();
  sub_23BA6E30C(0, &qword_26ADC8030, &qword_26ADC80B8);
  swift_allocObject();
  uint64_t v38 = sub_23BAD7F00();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
  v14[16] = v38;
  return v14;
}

uint64_t sub_23BA71E3C@<X0>(void *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(unsigned char *, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA6E780(0, a2);
  uint64_t result = sub_23BAD7DD0();
  if (v9) {
    return a3(v8, a4);
  }
  __break(1u);
  return result;
}

void *sub_23BA71EE0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v57 = a7;
  uint64_t v58 = a8;
  uint64_t v55 = a5;
  uint64_t v56 = a6;
  uint64_t v53 = a3;
  uint64_t v54 = a4;
  uint64_t v52 = a2;
  uint64_t v48 = sub_23BAD84A0();
  uint64_t v13 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v15 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAD8480();
  MEMORY[0x270FA5388]();
  sub_23BAD81C0();
  MEMORY[0x270FA5388]();
  uint64_t v16 = *a1;
  uint64_t v49 = a1[1];
  uint64_t v50 = a1[2];
  uint64_t v51 = v16;
  v11[5] = objc_msgSend(objc_allocWithZone((Class)sub_23BAD7EE0()), sel_init);
  uint64_t v47 = sub_23BA84528(0, &qword_26ADC9720);
  sub_23BAD81B0();
  uint64_t v59 = MEMORY[0x263F8EE78];
  v45[3] = sub_23BA85084(&qword_26ADC9718, MEMORY[0x263F8F0F8]);
  uint64_t v17 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F0F8];
  sub_23BA808D4(0, &qword_26ADC9700, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
  v45[2] = v18;
  uint64_t v46 = sub_23BA84D6C(&qword_26ADC9708, &qword_26ADC9700, v17);
  sub_23BAD8540();
  uint64_t v19 = *MEMORY[0x263F8F130];
  uint64_t v20 = v13 + 104;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v45[1] = v20;
  uint64_t v22 = v48;
  v21(v15, v19, v48);
  v11[6] = sub_23BAD84D0();
  sub_23BAD81A0();
  uint64_t v59 = MEMORY[0x263F8EE78];
  sub_23BAD8540();
  v21(v15, v19, v22);
  v11[7] = sub_23BAD84D0();
  v11[17] = 0;
  uint64_t v23 = (char *)v11 + OBJC_IVAR____TtC9StocksKit12StockService____lazy_storage___networkProxy;
  uint64_t v24 = sub_23BAD7D90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v26 = a9;
  uint64_t v25 = a10;
  uint64_t v27 = sub_23BAD8090();
  __swift_project_value_buffer(v27, (uint64_t)qword_26ADCC840);
  uint64_t v28 = v49;
  swift_bridgeObjectRetain_n();
  uint64_t v29 = sub_23BAD8070();
  os_log_type_t v30 = sub_23BAD8470();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v48 = a10;
    uint64_t v32 = (uint8_t *)v31;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v47 = a9;
    uint64_t v34 = v33;
    *(_DWORD *)uint64_t v32 = 136315138;
    uint64_t v46 = (uint64_t)(v32 + 4);
    uint64_t v35 = v50;
    uint64_t v36 = v51;
    uint64_t v59 = v51;
    uint64_t v60 = v28;
    uint64_t v61 = v50;
    uint64_t v62 = v33;
    unint64_t v37 = StockService.Configuration.description.getter();
    uint64_t v59 = sub_23BA7E794(v37, v38, &v62);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23BA68000, v29, v30, "Creating stocks service with configuration: %s", v32, 0xCu);
    swift_arrayDestroy();
    uint64_t v39 = v34;
    uint64_t v26 = v47;
    MEMORY[0x23ECCD620](v39, -1, -1);
    uint64_t v40 = v32;
    uint64_t v25 = v48;
    MEMORY[0x23ECCD620](v40, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v35 = v50;
    uint64_t v36 = v51;
  }
  v11[2] = v36;
  v11[3] = v28;
  v11[4] = v35;
  uint64_t v41 = v53;
  v11[8] = v52;
  v11[9] = v41;
  uint64_t v42 = v55;
  v11[10] = v54;
  v11[11] = v42;
  uint64_t v43 = v57;
  v11[12] = v56;
  v11[13] = v43;
  v11[14] = v58;
  v11[15] = v26;
  v11[16] = v25;
  return v11;
}

uint64_t StockService.fetch(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_23BA72494, 0, 0);
}

uint64_t sub_23BA72494()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  int8x16_t v2 = *(int8x16_t *)(v0 + 24);
  *(void *)(v1 + 16) = 0x4000000000000000;
  *(int8x16_t *)(v1 + 24) = vextq_s8(v2, v2, 8uLL);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_23BA72580;
  uint64_t v4 = *(void *)(v0 + 16);
  return MEMORY[0x270F7A130](v4, "StockService.fetchLogo", 22, 2, &unk_268A753F0, v1, &type metadata for DataSource.DownloadedLogo);
}

uint64_t sub_23BA72580()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_23BA726BC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_23BA726BC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t StockService.fetch(_:in:)(uint64_t a1, uint64_t a2, void *a3)
{
  v4[3] = a2;
  v4[4] = v3;
  v4[2] = a1;
  v4[5] = *a3;
  return MEMORY[0x270FA2498](sub_23BA7274C, 0, 0);
}

uint64_t sub_23BA7274C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  int8x16_t v3 = *(int8x16_t *)(v0 + 24);
  *(void *)(v2 + 16) = v1;
  *(int8x16_t *)(v2 + 24) = vextq_s8(v3, v3, 8uLL);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_23BA72838;
  uint64_t v5 = *(void *)(v0 + 16);
  return MEMORY[0x270F7A130](v5, "StockService.fetchLogo", 22, 2, &unk_268A75400, v2, &type metadata for DataSource.DownloadedLogo);
}

uint64_t sub_23BA72838()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_23BA72974, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    int8x16_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_23BA72974()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23BA729D8(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  *(void *)(v4 + 192) = a2;
  *(void *)(v4 + 200) = a3;
  *(double *)(v4 + 184) = a4;
  *(void *)(v4 + 176) = a1;
  return MEMORY[0x270FA2498](sub_23BA72A00, 0, 0);
}

uint64_t sub_23BA72A00()
{
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_23BAD8090();
  *(void *)(v0 + 208) = __swift_project_value_buffer(v1, (uint64_t)qword_26ADCC840);
  sub_23BA730CC();
  sub_23BA730CC();
  uint64_t v2 = sub_23BAD8070();
  os_log_type_t v3 = sub_23BAD8470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 184);
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 68157952;
    *(_DWORD *)(v0 + 232) = 1;
    sub_23BAD84F0();
    *(_WORD *)(v5 + 8) = 2048;
    *(void *)(v0 + 168) = v4;
    sub_23BAD84F0();
    _os_log_impl(&dword_23BA68000, v2, v3, "Fetch logo started. scale: %.*f", (uint8_t *)v5, 0x12u);
    MEMORY[0x23ECCD620](v5, -1, -1);
  }

  uint64_t v6 = *(void *)(v0 + 184);
  sub_23BAD7EF0();
  uint64_t v7 = *(void *)(v0 + 136);
  uint64_t v8 = *(void *)(v0 + 144);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 112), v7);
  *(void *)(v0 + 152) = v6;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 8) + **(int **)(v8 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_23BA72C54;
  uint64_t v10 = *(void *)(v0 + 200);
  return v12(v0 + 16, v10, v0 + 152, v7, v8);
}

uint64_t sub_23BA72C54()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_23BA72EE8;
  }
  else {
    uint64_t v2 = sub_23BA72D68;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_23BA72D68()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[9];
  uint64_t v9 = v0[10];
  uint64_t v25 = v0[12];
  uint64_t v26 = v0[11];
  uint64_t v24 = v0[13];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 14));
  uint64_t v10 = sub_23BAD8070();
  os_log_type_t v11 = sub_23BAD8470();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v23 = v8;
    uint64_t v12 = v7;
    uint64_t v13 = v6;
    uint64_t v14 = v5;
    uint64_t v15 = v2;
    uint64_t v16 = v1;
    uint64_t v17 = v9;
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_23BA68000, v10, v11, "Fetch logo succeeded", v18, 2u);
    uint64_t v19 = v18;
    uint64_t v9 = v17;
    uint64_t v1 = v16;
    uint64_t v2 = v15;
    uint64_t v5 = v14;
    uint64_t v6 = v13;
    uint64_t v7 = v12;
    uint64_t v8 = v23;
    MEMORY[0x23ECCD620](v19, -1, -1);
  }
  uint64_t v20 = (void *)v0[22];

  void *v20 = v1;
  v20[1] = v2;
  v20[2] = v3;
  v20[3] = v4;
  v20[4] = v5;
  v20[5] = v6;
  v20[6] = v7;
  v20[7] = v8;
  v20[8] = v9;
  v20[9] = v26;
  v20[10] = v25;
  v20[11] = v24;
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_23BA72EE8()
{
  uint64_t v1 = (void *)v0[28];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 14));
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_23BAD8070();
  os_log_type_t v5 = sub_23BAD8470();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[28];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138543362;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[20] = v10;
    sub_23BAD84F0();
    void *v8 = v10;

    _os_log_impl(&dword_23BA68000, v4, v5, "Fetch logo failed: %{public}@", v7, 0xCu);
    sub_23BA844C0();
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v8, -1, -1);
    MEMORY[0x23ECCD620](v7, -1, -1);
  }
  else
  {
    os_log_type_t v11 = (void *)v0[28];
  }
  uint64_t v12 = v0[28];

  sub_23BA84174();
  swift_allocError();
  *(void *)uint64_t v13 = v12;
  *(void *)(v13 + 8) = 0;
  *(unsigned char *)(v13 + 16) = 1;
  swift_willThrow();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_23BA730CC()
{
  return 0;
}

uint64_t StockService.searchStocks(for:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v7 = *v4;
  uint64_t v8 = sub_23BAD7380();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAD7370();
  uint64_t v12 = sub_23BAD7360();
  unint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_23BAD8090();
  __swift_project_value_buffer(v15, (uint64_t)qword_26ADCC840);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_23BAD8070();
  os_log_type_t v17 = sub_23BAD8470();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    v28[0] = swift_slowAlloc();
    v28[1] = v7;
    uint64_t v32 = v28[0];
    *(_DWORD *)uint64_t v18 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_23BA7E794(v12, v14, &v32);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_23BA7E794(a1, a2, &v32);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23BA68000, v16, v17, "Stocks search started for requestID: %s, query: %s", (uint8_t *)v18, 0x16u);
    uint64_t v19 = v28[0];
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v19, -1, -1);
    MEMORY[0x23ECCD620](v18, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v12;
  *(void *)(v20 + 24) = v14;
  sub_23BAD7770();
  swift_bridgeObjectRetain();
  sub_23BAD7FD0();
  swift_release();
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v12;
  v21[3] = v14;
  v21[4] = a1;
  v21[5] = a2;
  sub_23BA808D4(0, &qword_268A75408, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BAD7F60();
  swift_release();
  swift_release();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v12;
  *(void *)(v22 + 24) = v14;
  type metadata accessor for StockSearchResult();
  swift_bridgeObjectRetain();
  sub_23BAD7F60();
  swift_release();
  swift_release();
  uint64_t v23 = swift_allocObject();
  uint64_t v25 = v29;
  uint64_t v24 = v30;
  *(void *)(v23 + 16) = v30;
  *(void *)(v23 + 24) = v25;
  swift_retain();
  sub_23BAD7F70();
  swift_release();
  swift_release();
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = v12;
  v26[3] = v14;
  v26[4] = v24;
  v26[5] = v25;
  swift_retain();
  sub_23BAD7F80();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23BA7361C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_23BAD8090();
  __swift_project_value_buffer(v6, (uint64_t)qword_26ADCC840);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_23BAD8070();
  os_log_type_t v8 = sub_23BAD8470();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v13[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    v13[6] = sub_23BA7E794(a3, a4, v13);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23BA68000, v7, v8, "Firing stock search for requestID: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v10, -1, -1);
    MEMORY[0x23ECCD620](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_23BAD7EF0();
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  uint64_t v11 = sub_23BAD77F0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v11;
}

uint64_t sub_23BA73848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  uint64_t v6 = sub_23BAD7C90();
  v5[14] = v6;
  v5[15] = *(void *)(v6 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  uint64_t v7 = sub_23BAD7C60();
  v5[18] = v7;
  v5[19] = *(void *)(v7 - 8);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  sub_23BAD7880();
  v5[22] = swift_task_alloc();
  type metadata accessor for DataSource(0);
  v5[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23BA739E4, 0, 0);
}

uint64_t sub_23BA739E4()
{
  v88 = v0;
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_23BAD8090();
  __swift_project_value_buffer(v1, (uint64_t)qword_26ADCC840);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v2 = sub_23BAD8070();
  os_log_type_t v3 = sub_23BAD8470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v83 = v0[18];
    unint64_t v4 = v0[11];
    uint64_t v5 = v0[10];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v86 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_bridgeObjectRetain();
    v0[7] = sub_23BA7E794(v5, v4, &v86);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = MEMORY[0x23ECCC820](v8, v83);
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v0[8] = sub_23BA7E794(v9, v11, &v86);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23BA68000, v2, v3, "Stock search success for requestID: %s, result: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v7, -1, -1);
    MEMORY[0x23ECCD620](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v12 = v0;
  uint64_t v13 = v0[12];
  int64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = MEMORY[0x263F8EE78];
  if (v14)
  {
    uint64_t v16 = v0[19];
    uint64_t v17 = v0[15];
    uint64_t v85 = MEMORY[0x263F8EE78];
    sub_23BAB9BCC(0, v14, 0);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    v16 += 16;
    uint64_t v19 = v13 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
    uint64_t v72 = *(void *)(v16 + 56);
    v73 = v18;
    v70 = (uint64_t (**)(uint64_t, uint64_t))(v17 + 88);
    v71 = (void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
    int v69 = *MEMORY[0x263F7AF90];
    int v66 = *MEMORY[0x263F7AF98];
    int v65 = *MEMORY[0x263F7AF68];
    int v64 = *MEMORY[0x263F7AF80];
    int v63 = *MEMORY[0x263F7AF70];
    int v62 = *MEMORY[0x263F7AF88];
    int v61 = *MEMORY[0x263F7AF78];
    uint64_t v67 = (void (**)(uint64_t, uint64_t))(v16 - 8);
    v68 = (void (**)(uint64_t, uint64_t))(v17 + 8);
    int v60 = *MEMORY[0x263F7AF60];
    do
    {
      int64_t v79 = v14;
      uint64_t v20 = v12[20];
      uint64_t v21 = v12[21];
      uint64_t v23 = v12[17];
      uint64_t v22 = v12[18];
      uint64_t v24 = v12[16];
      uint64_t v25 = v12[14];
      v73(v21, v19, v22);
      v73(v20, v21, v22);
      uint64_t v26 = sub_23BAD7C30();
      uint64_t v82 = v27;
      uint64_t v84 = v26;
      uint64_t v28 = sub_23BAD7C10();
      uint64_t v77 = v29;
      uint64_t v78 = v28;
      uint64_t v30 = sub_23BAD7C40();
      uint64_t v80 = v31;
      uint64_t v81 = v30;
      sub_23BAD7C20();
      (*v71)(v24, v23, v25);
      int v32 = (*v70)(v24, v25);
      if (v32 == v69)
      {
        (*v68)(v12[17], v12[14]);
      }
      else
      {
        int v33 = v32;
        if (v32 == v66)
        {
          (*v68)(v12[17], v12[14]);
          char v34 = 1;
LABEL_25:
          char v74 = v34;
          goto LABEL_26;
        }
        if (v32 == v65)
        {
          (*v68)(v12[17], v12[14]);
          char v34 = 2;
          goto LABEL_25;
        }
        if (v32 == v64)
        {
          (*v68)(v12[17], v12[14]);
          char v34 = 3;
          goto LABEL_25;
        }
        if (v32 == v63)
        {
          (*v68)(v12[17], v12[14]);
          char v34 = 4;
          goto LABEL_25;
        }
        if (v32 == v62)
        {
          (*v68)(v12[17], v12[14]);
          char v34 = 5;
          goto LABEL_25;
        }
        uint64_t v35 = v12[17];
        uint64_t v36 = v12[14];
        if (v33 == v61)
        {
          (*v68)(v35, v36);
          char v34 = 6;
          goto LABEL_25;
        }
        unint64_t v37 = *v68;
        (*v68)(v35, v36);
        if (v33 == v60)
        {
          char v34 = 7;
          goto LABEL_25;
        }
        v37(v12[16], v12[14]);
      }
      char v74 = 0;
LABEL_26:
      uint64_t v39 = v12[20];
      uint64_t v38 = v12[21];
      uint64_t v40 = v12[18];
      uint64_t v41 = sub_23BAD7C50();
      uint64_t v43 = v42;
      uint64_t v44 = sub_23BAD7C00();
      uint64_t v75 = v45;
      uint64_t v76 = v44;
      uint64_t v86 = v81;
      uint64_t v87 = v80;
      swift_bridgeObjectRetain();
      sub_23BAD8280();
      sub_23BAD8280();
      uint64_t v46 = v86;
      uint64_t v47 = v87;
      uint64_t v48 = *v67;
      swift_bridgeObjectRetain();
      v48(v39, v40);
      v48(v38, v40);
      uint64_t v15 = v85;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23BAB9BCC(0, *(void *)(v85 + 16) + 1, 1);
        uint64_t v15 = v85;
      }
      unint64_t v50 = *(void *)(v15 + 16);
      unint64_t v49 = *(void *)(v15 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_23BAB9BCC(v49 > 1, v50 + 1, 1);
        uint64_t v15 = v85;
      }
      *(void *)(v15 + 16) = v50 + 1;
      uint64_t v51 = v15 + 120 * v50;
      *(void *)(v51 + 32) = v46;
      *(void *)(v51 + 40) = v47;
      *(void *)(v51 + 48) = v84;
      *(void *)(v51 + 56) = v82;
      *(void *)(v51 + 64) = v78;
      *(void *)(v51 + 72) = v77;
      *(void *)(v51 + 80) = v81;
      *(void *)(v51 + 88) = v80;
      *(unsigned char *)(v51 + 96) = v74;
      *(void *)(v51 + 104) = v41;
      *(void *)(v51 + 112) = v43;
      *(void *)(v51 + 120) = v41;
      *(void *)(v51 + 128) = v43;
      v19 += v72;
      *(void *)(v51 + 136) = v76;
      *(void *)(v51 + 144) = v75;
      int64_t v14 = v79 - 1;
    }
    while (v79 != 1);
  }
  uint64_t v52 = v12 + 2;
  uint64_t v53 = v12[22];
  uint64_t v54 = (uint64_t *)v12[23];
  uint64_t v55 = v12;
  uint64_t v56 = (void *)v12[9];
  sub_23BAD7EF0();
  __swift_project_boxed_opaque_existential_1(v52, v55[5]);
  sub_23BAD79A0();
  sub_23BA8925C(v53, v54);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  *uint64_t v56 = v15;
  uint64_t v57 = type metadata accessor for StockSearchResult();
  sub_23BA84248((uint64_t)v54, (uint64_t)v56 + *(int *)(v57 + 20), type metadata accessor for DataSource);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v58 = (uint64_t (*)(void))v55[1];
  return v58();
}

uint64_t StockService.fetchStocks(for:cachePolicy:networkSession:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v65 = a4;
  uint64_t v8 = *v5;
  uint64_t v63 = a5;
  uint64_t v64 = v8;
  uint64_t v9 = type metadata accessor for StockService.NetworkSession(0);
  uint64_t v59 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v62 = (uint64_t)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v55 - v12;
  uint64_t v14 = sub_23BAD7380();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)a2;
  uint64_t v67 = *(void *)(a2 + 8);
  int v68 = *(unsigned __int8 *)(a2 + 16);
  sub_23BAD7370();
  uint64_t v19 = sub_23BAD7360();
  unint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v22 = v18;
  uint64_t v23 = sub_23BAD8090();
  __swift_project_value_buffer(v23, (uint64_t)qword_26ADCC840);
  sub_23BA84564(a3, (uint64_t)v13, type metadata accessor for StockService.NetworkSession);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v24 = sub_23BAD8070();
  os_log_type_t v25 = sub_23BAD8470();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v58 = v22;
  uint64_t v66 = v19;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    uint64_t v72 = v56;
    *(_DWORD *)uint64_t v27 = 136315906;
    os_log_t v55 = v24;
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_23BA7E794(v19, v21, &v72);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v29 = MEMORY[0x23ECCC820](v28, MEMORY[0x263F8D310]);
    uint64_t v57 = a3;
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v69 = sub_23BA7E794(v29, v31, &v72);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 22) = 2080;
    uint64_t v69 = v22;
    uint64_t v70 = v67;
    char v71 = v68;
    uint64_t v32 = StockService.CachePolicy.description.getter();
    uint64_t v69 = sub_23BA7E794(v32, v33, &v72);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 32) = 2080;
    unint64_t v34 = StockService.NetworkSession.description.getter();
    uint64_t v69 = sub_23BA7E794(v34, v35, &v72);
    a3 = v57;
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    sub_23BA845CC((uint64_t)v13, type metadata accessor for StockService.NetworkSession);
    os_log_t v36 = v55;
    _os_log_impl(&dword_23BA68000, v55, v25, "Stock metadata fetch started for requestID: %s, symbols: %s, cachePolicy: %s, networkSession: %s", (uint8_t *)v27, 0x2Au);
    uint64_t v37 = v56;
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v37, -1, -1);
    MEMORY[0x23ECCD620](v27, -1, -1);

    uint64_t v38 = v66;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_23BA845CC((uint64_t)v13, type metadata accessor for StockService.NetworkSession);

    uint64_t v38 = v19;
  }
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v57 = sub_23BA81438(v39);
  swift_bridgeObjectRelease();
  uint64_t v56 = *(void *)(v61 + 48);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v38;
  *(void *)(v40 + 24) = v21;
  sub_23BAD7770();
  swift_bridgeObjectRetain();
  sub_23BAD7FD0();
  swift_release();
  uint64_t v41 = v62;
  sub_23BA84564(a3, v62, type metadata accessor for StockService.NetworkSession);
  unint64_t v42 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v43 = (v60 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v38;
  *(void *)(v44 + 24) = v21;
  sub_23BA84248(v41, v44 + v42, type metadata accessor for StockService.NetworkSession);
  uint64_t v45 = v58;
  *(void *)(v44 + v43) = v57;
  unint64_t v46 = v44 + ((v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v47 = v67;
  *(void *)unint64_t v46 = v45;
  *(void *)(v46 + 8) = v47;
  *(unsigned char *)(v46 + 16) = v68;
  sub_23BA84A58(0, &qword_268A75410, MEMORY[0x263F7AF08], MEMORY[0x263F8D060]);
  swift_bridgeObjectRetain();
  sub_23BAD7F60();
  swift_release();
  swift_release();
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = v66;
  *(void *)(v48 + 16) = v66;
  *(void *)(v48 + 24) = v21;
  type metadata accessor for StockResult();
  swift_bridgeObjectRetain();
  sub_23BAD7F60();
  swift_release();
  swift_release();
  uint64_t v50 = swift_allocObject();
  uint64_t v51 = v65;
  uint64_t v52 = v63;
  *(void *)(v50 + 16) = v65;
  *(void *)(v50 + 24) = v52;
  swift_retain();
  sub_23BAD7F70();
  swift_release();
  swift_release();
  uint64_t v53 = (void *)swift_allocObject();
  v53[2] = v49;
  v53[3] = v21;
  v53[4] = v51;
  v53[5] = v52;
  swift_retain();
  sub_23BAD7F80();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23BA74954(uint64_t a1, uint64_t a2, unint64_t a3, const char *a4)
{
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_23BAD8090();
  __swift_project_value_buffer(v7, (uint64_t)qword_26ADCC840);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_23BAD8070();
  os_log_type_t v9 = sub_23BAD8470();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v16[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_23BA7E794(a2, a3, v16);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23BA68000, v8, v9, a4, v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v11, -1, -1);
    MEMORY[0x23ECCD620](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_23BAD7EF0();
  uint64_t v12 = v17;
  uint64_t v13 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t v14 = sub_23BA9A0D0(v12, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v14;
}

uint64_t sub_23BA74B64(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v72 = a8;
  uint64_t v73 = a7;
  uint64_t v69 = a3;
  uint64_t v89 = sub_23BAD7350();
  uint64_t v82 = *(void *)(v89 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v89);
  uint64_t v70 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v81 = (char *)&v63 - v14;
  uint64_t v15 = sub_23BAD7E10();
  uint64_t v79 = *(void *)(v15 - 8);
  uint64_t v80 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v76 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_23BAD7D70();
  uint64_t v77 = *(void *)(v17 - 8);
  uint64_t v78 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  char v71 = (double *)((char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (double *)((char *)&v63 - v20);
  uint64_t v22 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_23BAD7D90();
  uint64_t v74 = *(void *)(v25 - 8);
  uint64_t v75 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (uint64_t *)((char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_23BAD8090();
  __swift_project_value_buffer(v28, (uint64_t)qword_26ADCC840);
  swift_bridgeObjectRetain_n();
  uint64_t v29 = sub_23BAD8070();
  os_log_type_t v30 = sub_23BAD8470();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v65 = (void *)a5;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v66 = a6;
    uint64_t v32 = (uint8_t *)v31;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v67 = v21;
    uint64_t v34 = v33;
    v86[0] = v33;
    uint64_t v64 = v24;
    *(_DWORD *)uint64_t v32 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_23BA7E794((uint64_t)v69, a4, v86);
    a5 = (uint64_t)v65;
    uint64_t v24 = v64;
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23BA68000, v29, v30, "Firing stock metadata fetch for requestID: %s", v32, 0xCu);
    swift_arrayDestroy();
    uint64_t v35 = v34;
    unint64_t v21 = v67;
    MEMORY[0x23ECCD620](v35, -1, -1);
    MEMORY[0x23ECCD620](v32, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_23BA75514(a5, v27);
  sub_23BA84564(a5, (uint64_t)v24, type metadata accessor for StockService.NetworkSession);
  sub_23BA6ED18();
  os_log_t v36 = v27;
  uint64_t v38 = v37;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v24, 1, v37) == 1)
  {
    sub_23BAD7EF0();
    uint64_t v70 = v88;
    char v71 = v87;
    uint64_t v69 = __swift_project_boxed_opaque_existential_1(v86, (uint64_t)v87);
    uint64_t v39 = swift_bridgeObjectRetain();
    sub_23BA7FF64(v39);
    swift_bridgeObjectRelease();
    int v68 = v36;
    if (a9)
    {
      if (a9 == 1)
      {
        *unint64_t v21 = (double)sub_23BAD8AA0();
        uint64_t v40 = (unsigned int *)MEMORY[0x263F7CD70];
      }
      else
      {
        uint64_t v40 = (unsigned int *)qword_264E06740[v73];
      }
    }
    else
    {
      *unint64_t v21 = (double)sub_23BAD8AA0();
      uint64_t v40 = (unsigned int *)MEMORY[0x263F7CD68];
    }
    uint64_t v55 = v77;
    uint64_t v54 = v78;
    (*(void (**)(double *, void, uint64_t))(v77 + 104))(v21, *v40, v78);
    uint64_t v83 = MEMORY[0x263F8EE78];
    sub_23BA85084(&qword_268A75520, MEMORY[0x263F7CDF8]);
    uint64_t v56 = (uint64_t (*)(uint64_t))MEMORY[0x263F7CDF8];
    sub_23BA808D4(0, &qword_268A75528, MEMORY[0x263F7CDF8], MEMORY[0x263F8D488]);
    sub_23BA84D6C(&qword_268A75530, &qword_268A75528, v56);
    uint64_t v57 = v21;
    uint64_t v58 = v76;
    uint64_t v59 = v80;
    sub_23BAD8540();
    uint64_t v60 = v81;
    sub_23BAD7340();
    uint64_t v61 = v68;
    uint64_t v53 = sub_23BAD7990();
    swift_release();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v60, v89);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v58, v59);
    (*(void (**)(double *, uint64_t))(v55 + 8))(v57, v54);
    (*(void (**)(uint64_t *, uint64_t))(v74 + 8))(v61, v75);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v41 = &v24[*(int *)(v38 + 48)];
    unint64_t v42 = v81;
    uint64_t v43 = v82;
    uint64_t v44 = v89;
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v81, v41, v89);
    sub_23BAD7EF0();
    uint64_t v67 = v87;
    uint64_t v69 = v88;
    uint64_t v66 = __swift_project_boxed_opaque_existential_1(v86, (uint64_t)v87);
    uint64_t v45 = swift_bridgeObjectRetain();
    uint64_t v65 = sub_23BA7FF64(v45);
    swift_bridgeObjectRelease();
    uint64_t v83 = v73;
    uint64_t v84 = v72;
    char v85 = a9;
    unint64_t v46 = v70;
    sub_23BAD7340();
    char v47 = sub_23BAD7300();
    uint64_t v82 = *(void *)(v43 + 8);
    ((void (*)(char *, uint64_t))v82)(v46, v44);
    uint64_t v48 = v71;
    sub_23BA6F584(3u, v47 & 1, v71);
    uint64_t v83 = MEMORY[0x263F8EE78];
    sub_23BA85084(&qword_268A75520, MEMORY[0x263F7CDF8]);
    uint64_t v49 = (uint64_t (*)(uint64_t))MEMORY[0x263F7CDF8];
    sub_23BA808D4(0, &qword_268A75528, MEMORY[0x263F7CDF8], MEMORY[0x263F8D488]);
    uint64_t v50 = v36;
    sub_23BA84D6C(&qword_268A75530, &qword_268A75528, v49);
    uint64_t v51 = v76;
    uint64_t v52 = v80;
    sub_23BAD8540();
    uint64_t v53 = sub_23BAD7990();
    swift_release();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v51, v52);
    (*(void (**)(double *, uint64_t))(v77 + 8))(v48, v78);
    ((void (*)(char *, uint64_t))v82)(v42, v89);
    (*(void (**)(uint64_t *, uint64_t))(v74 + 8))(v50, v75);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
  return v53;
}

uint64_t sub_23BA75514@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA84564(a1, (uint64_t)v7, type metadata accessor for StockService.NetworkSession);
  sub_23BA6ED18();
  uint64_t v9 = v8;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    uint64_t v10 = *MEMORY[0x263F7CDA0];
    uint64_t v11 = sub_23BAD7D90();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a2, v10, v11);
  }
  else
  {
    uint64_t v13 = &v7[*(int *)(v9 + 48)];
    double v14 = *(double *)&v7[*(int *)(v9 + 64)];
    uint64_t v15 = self;
    uint64_t v16 = (void *)sub_23BAD8230();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v15, sel_backgroundSessionConfigurationWithIdentifier_, v16);

    objc_msgSend(v17, sel_setTimeoutIntervalForResource_, v14);
    uint64_t v18 = *(void **)(v2 + 40);
    id v19 = v17;
    id v20 = v18;
    id v21 = sub_23BA71014();
    id v22 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v19, v20, v21);

    v29[4] = sub_23BA84528(0, (unint64_t *)&qword_26ADC8218);
    v29[5] = MEMORY[0x263F7D0B0];
    v29[1] = v22;
    sub_23BAD7EC0();
    swift_allocObject();
    id v23 = v20;
    id v24 = v22;
    uint64_t v25 = sub_23BAD7EB0();

    *a2 = v25;
    uint64_t v26 = *MEMORY[0x263F7CD98];
    uint64_t v27 = sub_23BAD7D90();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(a2, v26, v27);
    uint64_t v28 = sub_23BAD7350();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v13, v28);
  }
}

uint64_t sub_23BA75810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  sub_23BAD7880();
  v5[14] = swift_task_alloc();
  type metadata accessor for DataSource(0);
  v5[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23BA758D4, 0, 0);
}

uint64_t sub_23BA758D4()
{
  id v20 = v0;
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_23BAD8090();
  __swift_project_value_buffer(v1, (uint64_t)qword_26ADCC840);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_23BAD8070();
  os_log_type_t v3 = sub_23BAD8470();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[11];
  if (v4)
  {
    uint64_t v6 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v19[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    v0[7] = sub_23BA7E794(v6, v5, v19);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    sub_23BAD7C60();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_23BAD81D0();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v0[8] = sub_23BA7E794(v9, v11, v19);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23BA68000, v2, v3, "Stock metadata fetch success for requestID: %s, result: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v8, -1, -1);
    MEMORY[0x23ECCD620](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v12 = v0[14];
  uint64_t v13 = (uint64_t *)v0[15];
  double v14 = (uint64_t *)v0[9];
  uint64_t v15 = sub_23BA7EE04(v0[12]);
  sub_23BAD7EF0();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_23BAD79A0();
  sub_23BA8925C(v12, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  *double v14 = v15;
  uint64_t v16 = type metadata accessor for StockResult();
  sub_23BA84248((uint64_t)v13, (uint64_t)v14 + *(int *)(v16 + 20), type metadata accessor for DataSource);
  swift_task_dealloc();
  swift_task_dealloc();
  id v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t StockService.fetchStocks(for:cachePolicy:earliestBeginDate:completion:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23BA78904(a1, a2, a3, a4, a5, (uint64_t)&unk_26EF01AC8, (uint64_t)sub_23BA81624, (uint64_t)&unk_26EF01AF0, (uint64_t)sub_23BA81640);
}

uint64_t sub_23BA75C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD8190();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_23BAD81C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388]();
  unint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(self, sel_isMainThread))
  {
    sub_23BAD83A0();
    MEMORY[0x270FA5388]();
    *(&v17 - 2) = a1;
    *(&v17 - 1) = a2;
    return sub_23BA7E42C((uint64_t)sub_23BA84AEC, (uint64_t)(&v17 - 4));
  }
  else
  {
    sub_23BA84528(0, &qword_26ADC9720);
    uint64_t v18 = v8;
    uint64_t v17 = sub_23BAD84B0();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    *(void *)(v13 + 24) = a2;
    aBlock[4] = sub_23BA84ACC;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23BA7E634;
    aBlock[3] = &block_descriptor;
    double v14 = _Block_copy(aBlock);
    swift_retain();
    sub_23BAD81A0();
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_23BA85084(&qword_26ADC8268, MEMORY[0x263F8F030]);
    uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
    sub_23BA808D4(0, &qword_26ADC8310, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_23BA84D6C(&qword_26ADC8318, &qword_26ADC8310, v15);
    sub_23BAD8540();
    uint64_t v16 = (void *)v17;
    MEMORY[0x23ECCC9C0](0, v11, v7, v14);
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
    return swift_release();
  }
}

uint64_t StockService.fetchQuotes(for:cachePolicy:networkSession:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v65 = a4;
  uint64_t v8 = *v5;
  uint64_t v63 = a5;
  uint64_t v64 = v8;
  uint64_t v9 = type metadata accessor for StockService.NetworkSession(0);
  uint64_t v59 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v62 = (uint64_t)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v55 - v12;
  uint64_t v14 = sub_23BAD7380();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)a2;
  uint64_t v67 = *(void *)(a2 + 8);
  int v68 = *(unsigned __int8 *)(a2 + 16);
  sub_23BAD7370();
  uint64_t v19 = sub_23BAD7360();
  unint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v22 = v18;
  uint64_t v23 = sub_23BAD8090();
  __swift_project_value_buffer(v23, (uint64_t)qword_26ADCC840);
  sub_23BA84564(a3, (uint64_t)v13, type metadata accessor for StockService.NetworkSession);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v24 = sub_23BAD8070();
  os_log_type_t v25 = sub_23BAD8470();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v58 = v22;
  uint64_t v66 = v19;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    uint64_t v72 = v56;
    *(_DWORD *)uint64_t v27 = 136315906;
    os_log_t v55 = v24;
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_23BA7E794(v19, v21, &v72);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v29 = MEMORY[0x23ECCC820](v28, MEMORY[0x263F8D310]);
    uint64_t v57 = a3;
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v69 = sub_23BA7E794(v29, v31, &v72);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 22) = 2080;
    uint64_t v69 = v22;
    uint64_t v70 = v67;
    char v71 = v68;
    uint64_t v32 = StockService.CachePolicy.description.getter();
    uint64_t v69 = sub_23BA7E794(v32, v33, &v72);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 32) = 2080;
    unint64_t v34 = StockService.NetworkSession.description.getter();
    uint64_t v69 = sub_23BA7E794(v34, v35, &v72);
    a3 = v57;
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    sub_23BA845CC((uint64_t)v13, type metadata accessor for StockService.NetworkSession);
    os_log_t v36 = v55;
    _os_log_impl(&dword_23BA68000, v55, v25, "Quote fetch started for requestID: %s, symbols: %s, cachePolicy: %s, networkSession: %s", (uint8_t *)v27, 0x2Au);
    uint64_t v37 = v56;
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v37, -1, -1);
    MEMORY[0x23ECCD620](v27, -1, -1);

    uint64_t v38 = v66;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_23BA845CC((uint64_t)v13, type metadata accessor for StockService.NetworkSession);

    uint64_t v38 = v19;
  }
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v57 = sub_23BA81438(v39);
  swift_bridgeObjectRelease();
  uint64_t v56 = *(void *)(v61 + 48);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v38;
  *(void *)(v40 + 24) = v21;
  sub_23BAD7770();
  swift_bridgeObjectRetain();
  sub_23BAD7FD0();
  swift_release();
  uint64_t v41 = v62;
  sub_23BA84564(a3, v62, type metadata accessor for StockService.NetworkSession);
  unint64_t v42 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v43 = (v60 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v38;
  *(void *)(v44 + 24) = v21;
  sub_23BA84248(v41, v44 + v42, type metadata accessor for StockService.NetworkSession);
  uint64_t v45 = v58;
  *(void *)(v44 + v43) = v57;
  unint64_t v46 = v44 + ((v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v47 = v67;
  *(void *)unint64_t v46 = v45;
  *(void *)(v46 + 8) = v47;
  *(unsigned char *)(v46 + 16) = v68;
  sub_23BA84A58(0, &qword_268A75418, MEMORY[0x263F7AEF0], MEMORY[0x263F8D060]);
  swift_bridgeObjectRetain();
  sub_23BAD7F60();
  swift_release();
  swift_release();
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = v66;
  *(void *)(v48 + 16) = v66;
  *(void *)(v48 + 24) = v21;
  type metadata accessor for QuoteResult();
  swift_bridgeObjectRetain();
  sub_23BAD7F60();
  swift_release();
  swift_release();
  uint64_t v50 = swift_allocObject();
  uint64_t v51 = v65;
  uint64_t v52 = v63;
  *(void *)(v50 + 16) = v65;
  *(void *)(v50 + 24) = v52;
  swift_retain();
  sub_23BAD7F70();
  swift_release();
  swift_release();
  uint64_t v53 = (void *)swift_allocObject();
  v53[2] = v49;
  v53[3] = v21;
  v53[4] = v51;
  v53[5] = v52;
  swift_retain();
  sub_23BAD7F80();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23BA767BC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v61 = a3;
  uint64_t v62 = a8;
  uint64_t v64 = a7;
  uint64_t v65 = a6;
  uint64_t v73 = sub_23BAD7350();
  uint64_t v11 = *(void *)(v73 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v73);
  uint64_t v66 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v67 = (char *)&v57 - v14;
  uint64_t v15 = sub_23BAD7D70();
  uint64_t v71 = *(void *)(v15 - 8);
  uint64_t v72 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v63 = (double *)((char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (double *)((char *)&v57 - v18);
  uint64_t v20 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_23BAD7D90();
  uint64_t v69 = *(void *)(v23 - 8);
  uint64_t v70 = v23;
  MEMORY[0x270FA5388](v23);
  os_log_type_t v25 = (uint64_t *)((char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_23BAD8090();
  __swift_project_value_buffer(v26, (uint64_t)qword_26ADCC840);
  swift_bridgeObjectRetain_n();
  uint64_t v27 = sub_23BAD8070();
  os_log_type_t v28 = sub_23BAD8470();
  BOOL v29 = os_log_type_enabled(v27, v28);
  int v68 = v25;
  if (v29)
  {
    uint64_t v58 = a5;
    unint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v59 = v11;
    uint64_t v60 = v19;
    uint64_t v32 = v31;
    v74[0] = v31;
    *(_DWORD *)unint64_t v30 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_23BA7E794(v61, a4, v74);
    a5 = v58;
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23BA68000, v27, v28, "Firing quote fetch for requestID: %s", v30, 0xCu);
    swift_arrayDestroy();
    uint64_t v33 = v32;
    uint64_t v11 = v59;
    uint64_t v19 = v60;
    MEMORY[0x23ECCD620](v33, -1, -1);
    unint64_t v34 = v30;
    os_log_type_t v25 = v68;
    MEMORY[0x23ECCD620](v34, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_23BA75514(a5, v25);
  sub_23BA84564(a5, (uint64_t)v22, type metadata accessor for StockService.NetworkSession);
  sub_23BA6ED18();
  uint64_t v36 = v35;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v22, 1, v35) == 1)
  {
    sub_23BAD7EF0();
    uint64_t v66 = (char *)v76;
    __swift_project_boxed_opaque_existential_1(v74, v75);
    uint64_t v37 = swift_bridgeObjectRetain();
    sub_23BA7FF64(v37);
    swift_bridgeObjectRelease();
    if (a9)
    {
      if (a9 == 1)
      {
        double *v19 = (double)sub_23BAD8AA0();
LABEL_18:
        unint64_t v46 = (unsigned int *)MEMORY[0x263F7CD70];
      }
      else
      {
        unint64_t v46 = (unsigned int *)MEMORY[0x263F7CD48];
        switch(v64)
        {
          case 1:
            unint64_t v46 = (unsigned int *)MEMORY[0x263F7CD58];
            break;
          case 2:
            break;
          case 3:
            unint64_t v46 = (unsigned int *)MEMORY[0x263F7CD50];
            break;
          default:
            double *v19 = 60.0;
            goto LABEL_18;
        }
      }
    }
    else
    {
      double *v19 = (double)sub_23BAD8AA0();
      unint64_t v46 = (unsigned int *)MEMORY[0x263F7CD68];
    }
    uint64_t v48 = v71;
    uint64_t v47 = v72;
    (*(void (**)(double *, void, uint64_t))(v71 + 104))(v19, *v46, v72);
    uint64_t v49 = v67;
    sub_23BAD7340();
    uint64_t v50 = sub_23BAD77E0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v49, v73);
    (*(void (**)(double *, uint64_t))(v48 + 8))(v19, v47);
    (*(void (**)(uint64_t *, uint64_t))(v69 + 8))(v25, v70);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    uint64_t v39 = v11;
    uint64_t v40 = v73;
    v38(v66, &v22[*(int *)(v36 + 48)], v73);
    sub_23BAD7EF0();
    uint64_t v61 = v76;
    __swift_project_boxed_opaque_existential_1(v74, v75);
    uint64_t v41 = swift_bridgeObjectRetain();
    sub_23BA7FF64(v41);
    swift_bridgeObjectRelease();
    unint64_t v42 = v67;
    sub_23BAD7340();
    char v43 = sub_23BAD7300();
    uint64_t v44 = v39;
    LOBYTE(v39) = v43;
    uint64_t v67 = *(char **)(v44 + 8);
    ((void (*)(char *, uint64_t))v67)(v42, v40);
    if (v39)
    {
      uint64_t v45 = (unsigned int *)MEMORY[0x263F7CD48];
    }
    else if (a9)
    {
      if (a9 == 1)
      {
        double *v63 = (double)sub_23BAD8AA0();
LABEL_23:
        uint64_t v45 = (unsigned int *)MEMORY[0x263F7CD70];
      }
      else
      {
        uint64_t v45 = (unsigned int *)MEMORY[0x263F7CD48];
        switch(v64)
        {
          case 1:
            uint64_t v45 = (unsigned int *)MEMORY[0x263F7CD58];
            break;
          case 2:
            break;
          case 3:
            uint64_t v45 = (unsigned int *)MEMORY[0x263F7CD50];
            break;
          default:
            double *v63 = 60.0;
            goto LABEL_23;
        }
      }
    }
    else
    {
      double *v63 = (double)sub_23BAD8AA0();
      uint64_t v45 = (unsigned int *)MEMORY[0x263F7CD68];
    }
    uint64_t v52 = v71;
    uint64_t v51 = v72;
    uint64_t v53 = v63;
    (*(void (**)(double *, void, uint64_t))(v71 + 104))(v63, *v45, v72);
    uint64_t v54 = v66;
    os_log_t v55 = v68;
    uint64_t v50 = sub_23BAD77E0();
    swift_release();
    (*(void (**)(double *, uint64_t))(v52 + 8))(v53, v51);
    ((void (*)(char *, uint64_t))v67)(v54, v73);
    (*(void (**)(uint64_t *, uint64_t))(v69 + 8))(v55, v70);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
  return v50;
}

uint64_t sub_23BA76FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  sub_23BAD7880();
  v5[14] = swift_task_alloc();
  type metadata accessor for DataSource(0);
  v5[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23BA77090, 0, 0);
}

uint64_t sub_23BA77090()
{
  uint64_t v20 = v0;
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_23BAD8090();
  __swift_project_value_buffer(v1, (uint64_t)qword_26ADCC840);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_23BAD8070();
  os_log_type_t v3 = sub_23BAD8470();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[11];
  if (v4)
  {
    uint64_t v6 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v19[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    v0[7] = sub_23BA7E794(v6, v5, v19);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    sub_23BAD7BF0();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_23BAD81D0();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v0[8] = sub_23BA7E794(v9, v11, v19);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23BA68000, v2, v3, "Quote fetch success for requestID: %s, result: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v8, -1, -1);
    MEMORY[0x23ECCD620](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v12 = v0[14];
  uint64_t v13 = (uint64_t *)v0[15];
  uint64_t v14 = (uint64_t *)v0[9];
  uint64_t v15 = sub_23BA7F610(v0[12]);
  sub_23BAD7EF0();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_23BAD79A0();
  sub_23BA8925C(v12, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  *uint64_t v14 = v15;
  uint64_t v16 = type metadata accessor for QuoteResult();
  sub_23BA84248((uint64_t)v13, (uint64_t)v14 + *(int *)(v16 + 20), type metadata accessor for DataSource);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t StockService.fetchQuotes(for:cachePolicy:earliestBeginDate:completion:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23BA78904(a1, a2, a3, a4, a5, (uint64_t)&unk_26EF01BE0, (uint64_t)sub_23BA819D8, (uint64_t)&unk_26EF01C08, (uint64_t)sub_23BA81AB4);
}

uint64_t StockService.fetchQuoteDetails(for:cachePolicy:networkSession:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v65 = a4;
  uint64_t v8 = *v5;
  uint64_t v63 = a5;
  uint64_t v64 = v8;
  uint64_t v9 = type metadata accessor for StockService.NetworkSession(0);
  uint64_t v59 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v62 = (uint64_t)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v55 - v12;
  uint64_t v14 = sub_23BAD7380();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)a2;
  uint64_t v67 = *(void *)(a2 + 8);
  int v68 = *(unsigned __int8 *)(a2 + 16);
  sub_23BAD7370();
  uint64_t v19 = sub_23BAD7360();
  unint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v22 = v18;
  uint64_t v23 = sub_23BAD8090();
  __swift_project_value_buffer(v23, (uint64_t)qword_26ADCC840);
  sub_23BA84564(a3, (uint64_t)v13, type metadata accessor for StockService.NetworkSession);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v24 = sub_23BAD8070();
  os_log_type_t v25 = sub_23BAD8470();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v58 = v22;
  uint64_t v66 = v19;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    uint64_t v72 = v56;
    *(_DWORD *)uint64_t v27 = 136315906;
    os_log_t v55 = v24;
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_23BA7E794(v19, v21, &v72);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v29 = MEMORY[0x23ECCC820](v28, MEMORY[0x263F8D310]);
    uint64_t v57 = a3;
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v69 = sub_23BA7E794(v29, v31, &v72);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 22) = 2080;
    uint64_t v69 = v22;
    uint64_t v70 = v67;
    char v71 = v68;
    uint64_t v32 = StockService.CachePolicy.description.getter();
    uint64_t v69 = sub_23BA7E794(v32, v33, &v72);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 32) = 2080;
    unint64_t v34 = StockService.NetworkSession.description.getter();
    uint64_t v69 = sub_23BA7E794(v34, v35, &v72);
    a3 = v57;
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    sub_23BA845CC((uint64_t)v13, type metadata accessor for StockService.NetworkSession);
    os_log_t v36 = v55;
    _os_log_impl(&dword_23BA68000, v55, v25, "Quote detail fetch started for requestID: %s, symbols: %s, cachePolicy: %s, networkSession: %s", (uint8_t *)v27, 0x2Au);
    uint64_t v37 = v56;
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v37, -1, -1);
    MEMORY[0x23ECCD620](v27, -1, -1);

    uint64_t v38 = v66;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_23BA845CC((uint64_t)v13, type metadata accessor for StockService.NetworkSession);

    uint64_t v38 = v19;
  }
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v57 = sub_23BA81438(v39);
  swift_bridgeObjectRelease();
  uint64_t v56 = *(void *)(v61 + 48);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v38;
  *(void *)(v40 + 24) = v21;
  sub_23BAD7770();
  swift_bridgeObjectRetain();
  sub_23BAD7FD0();
  swift_release();
  uint64_t v41 = v62;
  sub_23BA84564(a3, v62, type metadata accessor for StockService.NetworkSession);
  unint64_t v42 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v43 = (v60 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v38;
  *(void *)(v44 + 24) = v21;
  sub_23BA84248(v41, v44 + v42, type metadata accessor for StockService.NetworkSession);
  uint64_t v45 = v58;
  *(void *)(v44 + v43) = v57;
  unint64_t v46 = v44 + ((v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v47 = v67;
  *(void *)unint64_t v46 = v45;
  *(void *)(v46 + 8) = v47;
  *(unsigned char *)(v46 + 16) = v68;
  sub_23BA84A58(0, &qword_268A75420, MEMORY[0x263F7A890], MEMORY[0x263F8D060]);
  swift_bridgeObjectRetain();
  sub_23BAD7F60();
  swift_release();
  swift_release();
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = v66;
  *(void *)(v48 + 16) = v66;
  *(void *)(v48 + 24) = v21;
  type metadata accessor for QuoteDetailResult();
  swift_bridgeObjectRetain();
  sub_23BAD7F60();
  swift_release();
  swift_release();
  uint64_t v50 = swift_allocObject();
  uint64_t v51 = v65;
  uint64_t v52 = v63;
  *(void *)(v50 + 16) = v65;
  *(void *)(v50 + 24) = v52;
  swift_retain();
  sub_23BAD7F70();
  swift_release();
  swift_release();
  uint64_t v53 = (void *)swift_allocObject();
  v53[2] = v49;
  v53[3] = v21;
  v53[4] = v51;
  v53[5] = v52;
  swift_retain();
  sub_23BAD7F80();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23BA77BE8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v61 = a3;
  uint64_t v62 = a8;
  uint64_t v64 = a7;
  uint64_t v65 = a6;
  uint64_t v73 = sub_23BAD7350();
  uint64_t v11 = *(void *)(v73 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v73);
  uint64_t v66 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v67 = (char *)&v57 - v14;
  uint64_t v15 = sub_23BAD7D70();
  uint64_t v71 = *(void *)(v15 - 8);
  uint64_t v72 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v63 = (double *)((char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (double *)((char *)&v57 - v18);
  uint64_t v20 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_23BAD7D90();
  uint64_t v69 = *(void *)(v23 - 8);
  uint64_t v70 = v23;
  MEMORY[0x270FA5388](v23);
  os_log_type_t v25 = (uint64_t *)((char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_23BAD8090();
  __swift_project_value_buffer(v26, (uint64_t)qword_26ADCC840);
  swift_bridgeObjectRetain_n();
  uint64_t v27 = sub_23BAD8070();
  os_log_type_t v28 = sub_23BAD8470();
  BOOL v29 = os_log_type_enabled(v27, v28);
  int v68 = v25;
  if (v29)
  {
    uint64_t v58 = a5;
    unint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v59 = v11;
    uint64_t v60 = v19;
    uint64_t v32 = v31;
    v74[0] = v31;
    *(_DWORD *)unint64_t v30 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_23BA7E794(v61, a4, v74);
    a5 = v58;
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23BA68000, v27, v28, "Firing quote detail fetch for requestID: %s", v30, 0xCu);
    swift_arrayDestroy();
    uint64_t v33 = v32;
    uint64_t v11 = v59;
    uint64_t v19 = v60;
    MEMORY[0x23ECCD620](v33, -1, -1);
    unint64_t v34 = v30;
    os_log_type_t v25 = v68;
    MEMORY[0x23ECCD620](v34, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_23BA75514(a5, v25);
  sub_23BA84564(a5, (uint64_t)v22, type metadata accessor for StockService.NetworkSession);
  sub_23BA6ED18();
  uint64_t v36 = v35;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v22, 1, v35) == 1)
  {
    sub_23BAD7EF0();
    uint64_t v66 = (char *)v76;
    __swift_project_boxed_opaque_existential_1(v74, v75);
    uint64_t v37 = swift_bridgeObjectRetain();
    sub_23BA7FF64(v37);
    swift_bridgeObjectRelease();
    if (a9)
    {
      if (a9 == 1)
      {
        double *v19 = (double)sub_23BAD8AA0();
LABEL_18:
        unint64_t v46 = (unsigned int *)MEMORY[0x263F7CD70];
      }
      else
      {
        unint64_t v46 = (unsigned int *)MEMORY[0x263F7CD48];
        switch(v64)
        {
          case 1:
            unint64_t v46 = (unsigned int *)MEMORY[0x263F7CD58];
            break;
          case 2:
            break;
          case 3:
            unint64_t v46 = (unsigned int *)MEMORY[0x263F7CD50];
            break;
          default:
            double *v19 = 60.0;
            goto LABEL_18;
        }
      }
    }
    else
    {
      double *v19 = (double)sub_23BAD8AA0();
      unint64_t v46 = (unsigned int *)MEMORY[0x263F7CD68];
    }
    uint64_t v48 = v71;
    uint64_t v47 = v72;
    (*(void (**)(double *, void, uint64_t))(v71 + 104))(v19, *v46, v72);
    uint64_t v49 = v67;
    sub_23BAD7340();
    uint64_t v50 = sub_23BAD7890();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v49, v73);
    (*(void (**)(double *, uint64_t))(v48 + 8))(v19, v47);
    (*(void (**)(uint64_t *, uint64_t))(v69 + 8))(v25, v70);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    uint64_t v39 = v11;
    uint64_t v40 = v73;
    v38(v66, &v22[*(int *)(v36 + 48)], v73);
    sub_23BAD7EF0();
    uint64_t v61 = v76;
    __swift_project_boxed_opaque_existential_1(v74, v75);
    uint64_t v41 = swift_bridgeObjectRetain();
    sub_23BA7FF64(v41);
    swift_bridgeObjectRelease();
    unint64_t v42 = v67;
    sub_23BAD7340();
    char v43 = sub_23BAD7300();
    uint64_t v44 = v39;
    LOBYTE(v39) = v43;
    uint64_t v67 = *(char **)(v44 + 8);
    ((void (*)(char *, uint64_t))v67)(v42, v40);
    if (v39)
    {
      uint64_t v45 = (unsigned int *)MEMORY[0x263F7CD48];
    }
    else if (a9)
    {
      if (a9 == 1)
      {
        double *v63 = (double)sub_23BAD8AA0();
LABEL_23:
        uint64_t v45 = (unsigned int *)MEMORY[0x263F7CD70];
      }
      else
      {
        uint64_t v45 = (unsigned int *)MEMORY[0x263F7CD48];
        switch(v64)
        {
          case 1:
            uint64_t v45 = (unsigned int *)MEMORY[0x263F7CD58];
            break;
          case 2:
            break;
          case 3:
            uint64_t v45 = (unsigned int *)MEMORY[0x263F7CD50];
            break;
          default:
            double *v63 = 60.0;
            goto LABEL_23;
        }
      }
    }
    else
    {
      double *v63 = (double)sub_23BAD8AA0();
      uint64_t v45 = (unsigned int *)MEMORY[0x263F7CD68];
    }
    uint64_t v52 = v71;
    uint64_t v51 = v72;
    uint64_t v53 = v63;
    (*(void (**)(double *, void, uint64_t))(v71 + 104))(v63, *v45, v72);
    uint64_t v54 = v66;
    os_log_t v55 = v68;
    uint64_t v50 = sub_23BAD7890();
    swift_release();
    (*(void (**)(double *, uint64_t))(v52 + 8))(v53, v51);
    ((void (*)(char *, uint64_t))v67)(v54, v73);
    (*(void (**)(uint64_t *, uint64_t))(v69 + 8))(v55, v70);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
  return v50;
}

uint64_t sub_23BA783F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v9 = *a1;
  sub_23BA808D4(0, a5, a6, MEMORY[0x263F7D028]);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = v9;
  v10[5] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_23BAD7F50();
}

uint64_t sub_23BA784B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  sub_23BAD7880();
  v5[14] = swift_task_alloc();
  type metadata accessor for DataSource(0);
  v5[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23BA7857C, 0, 0);
}

uint64_t sub_23BA7857C()
{
  uint64_t v20 = v0;
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_23BAD8090();
  __swift_project_value_buffer(v1, (uint64_t)qword_26ADCC840);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_23BAD8070();
  os_log_type_t v3 = sub_23BAD8470();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[11];
  if (v4)
  {
    uint64_t v6 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v19[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    v0[7] = sub_23BA7E794(v6, v5, v19);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    sub_23BAD7710();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_23BAD81D0();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v0[8] = sub_23BA7E794(v9, v11, v19);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23BA68000, v2, v3, "Quote detail fetch success for requestID: %s, result: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v8, -1, -1);
    MEMORY[0x23ECCD620](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v12 = v0[14];
  uint64_t v13 = (uint64_t *)v0[15];
  uint64_t v14 = (uint64_t *)v0[9];
  uint64_t v15 = sub_23BA7FA10(v0[12]);
  sub_23BAD7EF0();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_23BAD79A0();
  sub_23BA8925C(v12, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  *uint64_t v14 = v15;
  uint64_t v16 = type metadata accessor for QuoteDetailResult();
  sub_23BA84248((uint64_t)v13, (uint64_t)v14 + *(int *)(v16 + 20), type metadata accessor for DataSource);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t StockService.fetchQuoteDetails(for:cachePolicy:earliestBeginDate:completion:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23BA78904(a1, a2, a3, a4, a5, (uint64_t)&unk_26EF01CF8, (uint64_t)sub_23BA81C4C, (uint64_t)&unk_26EF01D20, (uint64_t)sub_23BA81C68);
}

uint64_t sub_23BA78904(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v33 = a6;
  uint64_t v37 = a4;
  uint64_t v31 = a8;
  uint64_t v32 = a9;
  uint64_t v15 = sub_23BAD7350();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388]();
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a2[1];
  uint64_t v34 = *a2;
  uint64_t v35 = v19;
  int v36 = *((unsigned __int8 *)a2 + 16);
  uint64_t v20 = *(void *)(v9 + 24);
  if (v20)
  {
    uint64_t v31 = *(void *)(v9 + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v15);
    unint64_t v21 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    unint64_t v22 = (v17 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v32 = a7;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v31;
    *(void *)(v23 + 24) = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v23 + v21, v18, v15);
    *(void *)(v23 + v22) = a1;
    unint64_t v24 = v23 + v30;
    uint64_t v25 = v35;
    *(void *)unint64_t v24 = v34;
    *(void *)(v24 + 8) = v25;
    *(unsigned char *)(v24 + 16) = v36;
    uint64_t v26 = (void *)(v23 + ((v22 + 39) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v26 = v37;
    v26[1] = a5;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23BA75C5C(v32, v23);
    return swift_release();
  }
  else
  {
    uint64_t v28 = swift_allocObject();
    uint64_t v29 = v34;
    *(void *)(v28 + 16) = a1;
    *(void *)(v28 + 24) = v29;
    *(void *)(v28 + 32) = v35;
    *(unsigned char *)(v28 + 40) = v36;
    *(void *)(v28 + 48) = v37;
    *(void *)(v28 + 56) = a5;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23BA75C5C(v32, v28);
    return swift_release();
  }
}

uint64_t sub_23BA78B6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, void *, char *, uint64_t, uint64_t))
{
  uint64_t v14 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v20[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  v20[0] = a2;
  v20[1] = a3;
  char v21 = a4;
  sub_23BA6ED18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  a7(a1, v20, v16, a5, a6);
  return sub_23BA845CC((uint64_t)v16, type metadata accessor for StockService.NetworkSession);
}

uint64_t sub_23BA78CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t, void *, void *, uint64_t, uint64_t))
{
  int v26 = a7;
  uint64_t v27 = a4;
  uint64_t v28 = a10;
  uint64_t v29 = a8;
  uint64_t v15 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (uint64_t *)((char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23BA6ED18();
  uint64_t v19 = v18;
  uint64_t v20 = (char *)v17 + *(int *)(v18 + 48);
  uint64_t v21 = *(int *)(v18 + 64);
  void *v17 = a1;
  v17[1] = a2;
  uint64_t v22 = sub_23BAD7350();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, a3, v22);
  *(void *)((char *)v17 + v21) = 0x40AC200000000000;
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 0, 1, v19);
  uint64_t v23 = qword_26ADC8090;
  swift_bridgeObjectRetain();
  if (v23 != -1) {
    swift_once();
  }
  v30[0] = a5;
  v30[1] = a6;
  char v31 = v26;
  v28(v27, v30, v17, v29, a9);
  return sub_23BA845CC((uint64_t)v17, type metadata accessor for StockService.NetworkSession);
}

uint64_t StockService.fetchStockChart(for:range:cachePolicy:networkSession:completion:)(uint64_t a1, unint64_t a2, unsigned __int8 *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v64 = a6;
  uint64_t v65 = a7;
  uint64_t v70 = a1;
  uint64_t v72 = *v7;
  uint64_t v12 = type metadata accessor for StockService.NetworkSession(0);
  uint64_t v61 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v63 = (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v59 - v15;
  uint64_t v17 = sub_23BAD7380();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = *a3;
  uint64_t v21 = *a4;
  uint64_t v68 = a4[1];
  uint64_t v69 = v21;
  int v67 = *((unsigned __int8 *)a4 + 16);
  sub_23BAD7370();
  uint64_t v22 = sub_23BAD7360();
  unint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_23BAD8090();
  __swift_project_value_buffer(v25, (uint64_t)qword_26ADCC840);
  sub_23BA84564(a5, (uint64_t)v16, type metadata accessor for StockService.NetworkSession);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  int v26 = sub_23BAD8070();
  int v27 = sub_23BAD8470();
  BOOL v28 = os_log_type_enabled(v26, (os_log_type_t)v27);
  uint64_t v71 = v22;
  if (v28)
  {
    int v60 = v27;
    uint64_t v59 = a5;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v76[0] = v30;
    *(_DWORD *)uint64_t v29 = 136316162;
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_23BA7E794(v22, v24, v76);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v29 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_23BA7E794(v70, a2, v76);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v29 + 22) = 2080;
    unint64_t v31 = 0xE600000000000000;
    uint64_t v32 = 0x796144656E6FLL;
    uint64_t v33 = v69;
    switch(v66)
    {
      case 1:
        unint64_t v31 = 0xE700000000000000;
        uint64_t v32 = 0x6B656557656E6FLL;
        break;
      case 2:
        unint64_t v31 = 0xE800000000000000;
        uint64_t v32 = 0x68746E6F4D656E6FLL;
        break;
      case 3:
        unint64_t v31 = 0xEB00000000736874;
        uint64_t v32 = 0x6E6F4D6565726874;
        break;
      case 4:
        uint64_t v32 = 0x68746E6F4D786973;
        goto LABEL_14;
      case 5:
        unint64_t v31 = 0xEA00000000006574;
        uint64_t v32 = 0x61446F5472616579;
        break;
      case 6:
        unint64_t v31 = 0xE700000000000000;
        uint64_t v32 = 0x72616559656E6FLL;
        break;
      case 7:
        unint64_t v31 = 0xE800000000000000;
        unsigned int v34 = 1500477300;
        goto LABEL_16;
      case 8:
        uint64_t v32 = 0x7261655965766966;
LABEL_14:
        unint64_t v31 = 0xE900000000000073;
        break;
      case 9:
        unint64_t v31 = 0xE800000000000000;
        unsigned int v34 = 1500407156;
LABEL_16:
        uint64_t v32 = v34 | 0x7372616500000000;
        break;
      case 10:
        unint64_t v31 = 0xE300000000000000;
        uint64_t v32 = 7105633;
        break;
      default:
        break;
    }
    uint64_t v73 = sub_23BA7E794(v32, v31, v76);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 32) = 2080;
    uint64_t v73 = v33;
    uint64_t v74 = v68;
    char v75 = v67;
    uint64_t v35 = StockService.CachePolicy.description.getter();
    uint64_t v73 = sub_23BA7E794(v35, v36, v76);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 42) = 2080;
    unint64_t v37 = StockService.NetworkSession.description.getter();
    uint64_t v73 = sub_23BA7E794(v37, v38, v76);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    sub_23BA845CC((uint64_t)v16, type metadata accessor for StockService.NetworkSession);
    _os_log_impl(&dword_23BA68000, v26, (os_log_type_t)v60, "Chart fetch started for requestID: %s, symbol: %s, range: %s, cachePolicy: %s, networkSession: %s", (uint8_t *)v29, 0x34u);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v30, -1, -1);
    MEMORY[0x23ECCD620](v29, -1, -1);

    uint64_t v22 = v71;
    a5 = v59;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_23BA845CC((uint64_t)v16, type metadata accessor for StockService.NetworkSession);
  }
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v22;
  *(void *)(v39 + 24) = v24;
  sub_23BAD7770();
  swift_bridgeObjectRetain();
  sub_23BAD7FD0();
  swift_release();
  uint64_t v40 = a5;
  uint64_t v41 = v63;
  sub_23BA84564(v40, v63, type metadata accessor for StockService.NetworkSession);
  unint64_t v42 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v43 = (v42 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (v42 + v62 + 31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = swift_allocObject();
  uint64_t v46 = v22;
  uint64_t v47 = v45;
  *(void *)(v45 + 16) = v46;
  *(void *)(v45 + 24) = v24;
  sub_23BA84248(v41, v45 + v42, type metadata accessor for StockService.NetworkSession);
  unint64_t v48 = v47 + v43;
  uint64_t v49 = v70;
  *(void *)unint64_t v48 = v70;
  *(void *)(v48 + 8) = a2;
  *(unsigned char *)(v48 + 16) = v66;
  unint64_t v50 = v47 + v44;
  uint64_t v51 = v68;
  *(void *)unint64_t v50 = v69;
  *(void *)(v50 + 8) = v51;
  *(unsigned char *)(v50 + 16) = v67;
  sub_23BAD7AD0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BAD7F60();
  swift_release();
  swift_release();
  uint64_t v52 = (void *)swift_allocObject();
  uint64_t v53 = v71;
  v52[2] = v71;
  v52[3] = v24;
  v52[4] = v49;
  v52[5] = a2;
  type metadata accessor for StockChartResult();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BAD7F60();
  swift_release();
  swift_release();
  uint64_t v54 = swift_allocObject();
  uint64_t v56 = v64;
  uint64_t v55 = v65;
  *(void *)(v54 + 16) = v64;
  *(void *)(v54 + 24) = v55;
  swift_retain();
  sub_23BAD7F70();
  swift_release();
  swift_release();
  uint64_t v57 = (void *)swift_allocObject();
  v57[2] = v53;
  v57[3] = v24;
  v57[4] = v56;
  v57[5] = v55;
  swift_retain();
  sub_23BAD7F80();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23BA797A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v78 = a6;
  uint64_t v79 = a7;
  uint64_t v71 = a5;
  uint64_t v72 = a2;
  uint64_t v83 = sub_23BAD7350();
  uint64_t v86 = *(void *)(v83 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v83);
  char v75 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v65 - v16;
  uint64_t v18 = sub_23BAD7D70();
  uint64_t v80 = *(void *)(v18 - 8);
  uint64_t v81 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v69 = (double *)((char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (double *)((char *)&v65 - v21);
  uint64_t v23 = sub_23BAD7520();
  uint64_t v84 = *(void *)(v23 - 8);
  uint64_t v85 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v74 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v73 = (char *)&v65 - v26;
  uint64_t v27 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v65 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_23BAD7D90();
  uint64_t v76 = *(void *)(v30 - 8);
  uint64_t v77 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (uint64_t *)((char *)&v65 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v68 = a10;
  uint64_t v70 = a9;
  uint64_t v33 = sub_23BAD8090();
  __swift_project_value_buffer(v33, (uint64_t)qword_26ADCC840);
  swift_bridgeObjectRetain_n();
  unsigned int v34 = sub_23BAD8070();
  os_log_type_t v35 = sub_23BAD8470();
  BOOL v36 = os_log_type_enabled(v34, v35);
  uint64_t v82 = v32;
  if (v36)
  {
    int v67 = v22;
    unint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v66 = a8;
    a8 = v38;
    v87[0] = v38;
    *(_DWORD *)unint64_t v37 = 136315138;
    swift_bridgeObjectRetain();
    v87[4] = sub_23BA7E794(a3, a4, v87);
    uint64_t v22 = v67;
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23BA68000, v34, v35, "Firing chart fetch for requestID: %s", v37, 0xCu);
    swift_arrayDestroy();
    uint64_t v39 = a8;
    LOBYTE(a8) = v66;
    MEMORY[0x23ECCD620](v39, -1, -1);
    uint64_t v40 = v37;
    uint64_t v32 = v82;
    MEMORY[0x23ECCD620](v40, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v41 = v32;
  uint64_t v42 = v71;
  sub_23BA75514(v71, v41);
  sub_23BA84564(v42, (uint64_t)v29, type metadata accessor for StockService.NetworkSession);
  sub_23BA6ED18();
  uint64_t v44 = v43;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v29, 1, v43) == 1)
  {
    sub_23BAD7EF0();
    (*(void (**)(char *, void, uint64_t))(v84 + 104))(v73, **((unsigned int **)&unk_264E06760 + (char)a8), v85);
    if (a11)
    {
      if (a11 == 1)
      {
        *uint64_t v22 = (double)sub_23BAD8AA0();
LABEL_18:
        uint64_t v52 = (unsigned int *)MEMORY[0x263F7CD70];
      }
      else
      {
        uint64_t v52 = (unsigned int *)MEMORY[0x263F7CD48];
        switch(v70)
        {
          case 1:
            uint64_t v52 = (unsigned int *)MEMORY[0x263F7CD58];
            break;
          case 2:
            break;
          case 3:
            uint64_t v52 = (unsigned int *)MEMORY[0x263F7CD50];
            break;
          default:
            *uint64_t v22 = 60.0;
            goto LABEL_18;
        }
      }
    }
    else
    {
      *uint64_t v22 = (double)sub_23BAD8AA0();
      uint64_t v52 = (unsigned int *)MEMORY[0x263F7CD68];
    }
    uint64_t v54 = v80;
    uint64_t v53 = v81;
    (*(void (**)(double *, void, uint64_t))(v80 + 104))(v22, *v52, v81);
    swift_getObjectType();
    sub_23BAD7340();
    uint64_t v55 = v73;
    uint64_t v56 = v17;
    uint64_t v57 = v82;
    uint64_t v58 = sub_23BAD7780();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v56, v83);
    (*(void (**)(double *, uint64_t))(v54 + 8))(v22, v53);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v55, v85);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = &v29[*(int *)(v44 + 48)];
    uint64_t v46 = v86;
    uint64_t v47 = v83;
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v75, v45, v83);
    sub_23BAD7EF0();
    uint64_t v73 = (char *)v87[1];
    (*(void (**)(char *, void, uint64_t))(v84 + 104))(v74, **((unsigned int **)&unk_264E06760 + (char)a8), v85);
    sub_23BAD7340();
    char v48 = sub_23BAD7300();
    uint64_t v49 = *(void (**)(char *, uint64_t))(v46 + 8);
    uint64_t v86 = v46 + 8;
    unint64_t v50 = v49;
    v49(v17, v47);
    if (v48)
    {
      uint64_t v51 = (unsigned int *)MEMORY[0x263F7CD48];
    }
    else if (a11)
    {
      if (a11 == 1)
      {
        *uint64_t v69 = (double)sub_23BAD8AA0();
LABEL_23:
        uint64_t v51 = (unsigned int *)MEMORY[0x263F7CD70];
      }
      else
      {
        uint64_t v51 = (unsigned int *)MEMORY[0x263F7CD48];
        switch(v70)
        {
          case 1:
            uint64_t v51 = (unsigned int *)MEMORY[0x263F7CD58];
            break;
          case 2:
            break;
          case 3:
            uint64_t v51 = (unsigned int *)MEMORY[0x263F7CD50];
            break;
          default:
            *uint64_t v69 = 60.0;
            goto LABEL_23;
        }
      }
    }
    else
    {
      *uint64_t v69 = (double)sub_23BAD8AA0();
      uint64_t v51 = (unsigned int *)MEMORY[0x263F7CD68];
    }
    uint64_t v60 = v80;
    uint64_t v59 = v81;
    uint64_t v61 = v69;
    (*(void (**)(double *, void, uint64_t))(v80 + 104))(v69, *v51, v81);
    swift_getObjectType();
    uint64_t v63 = v74;
    uint64_t v62 = v75;
    uint64_t v57 = v82;
    uint64_t v58 = sub_23BAD7780();
    swift_unknownObjectRelease();
    (*(void (**)(double *, uint64_t))(v60 + 8))(v61, v59);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v63, v85);
    v50(v62, v83);
  }
  (*(void (**)(uint64_t *, uint64_t))(v76 + 8))(v57, v77);
  return v58;
}

uint64_t sub_23BA7A0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a2;
  uint64_t v23 = a5;
  uint64_t v21 = a3;
  uint64_t v9 = sub_23BAD7AD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA808D4(0, &qword_268A75498, (uint64_t (*)(uint64_t))type metadata accessor for StockChartResult, MEMORY[0x263F7D028]);
  uint64_t v20 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v21;
  *(void *)(v16 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v14, v12, v9);
  uint64_t v17 = (void *)(v16 + v15);
  uint64_t v18 = v22;
  void *v17 = v23;
  v17[1] = a6;
  *(void *)(v16 + ((v15 + 23) & 0xFFFFFFFFFFFFFFF8)) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_23BAD7F50();
}

uint64_t sub_23BA7A284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  sub_23BAD7880();
  v7[17] = swift_task_alloc();
  type metadata accessor for DataSource(0);
  v7[18] = swift_task_alloc();
  uint64_t v8 = sub_23BAD74D0();
  v7[19] = v8;
  v7[20] = *(void *)(v8 - 8);
  v7[21] = swift_task_alloc();
  v7[22] = type metadata accessor for StockChart(0);
  v7[23] = swift_task_alloc();
  v7[24] = swift_task_alloc();
  uint64_t v9 = sub_23BAD7AD0();
  v7[25] = v9;
  v7[26] = *(void *)(v9 - 8);
  v7[27] = swift_task_alloc();
  v7[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23BA7A454, 0, 0);
}

uint64_t sub_23BA7A454()
{
  uint64_t v46 = v0;
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[13];
  uint64_t v5 = sub_23BAD8090();
  __swift_project_value_buffer(v5, (uint64_t)qword_26ADCC840);
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v44(v1, v4, v2);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_23BAD8070();
  os_log_type_t v7 = sub_23BAD8470();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[28];
  uint64_t v10 = v0[25];
  uint64_t v11 = v0[26];
  unint64_t v12 = v0[12];
  if (v8)
  {
    uint64_t v43 = v0[25];
    uint64_t v13 = v0[11];
    uint64_t v14 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    v45[0] = v40;
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_bridgeObjectRetain();
    v0[8] = sub_23BA7E794(v13, v12, v45);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v15 = sub_23BAD7AB0();
    uint64_t v16 = sub_23BAD7AA0();
    uint64_t v17 = MEMORY[0x23ECCC820](v15, v16);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    v0[9] = sub_23BA7E794(v17, v19, v45);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v42(v9, v43);
    _os_log_impl(&dword_23BA68000, v6, v7, "Chart fetch success for requestID: %s, result: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v40, -1, -1);
    MEMORY[0x23ECCD620](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v42(v9, v10);
  }

  uint64_t v20 = v0[27];
  uint64_t v21 = v0[25];
  uint64_t v37 = v0[24];
  uint64_t v23 = v0[22];
  uint64_t v22 = (uint64_t *)v0[23];
  uint64_t v24 = v0[20];
  uint64_t v35 = v0[21];
  uint64_t v36 = v0[19];
  uint64_t v38 = v0[17];
  uint64_t v39 = (uint64_t *)v0[18];
  uint64_t v25 = v0[15];
  uint64_t v26 = v0[14];
  uint64_t v41 = v0[10];
  v44(v20, v0[13], v21);
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_23BAD7AB0();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_23BA80FF4(v27, v26, v25);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *uint64_t v22 = v28;
  sub_23BAD7AC0();
  uint64_t v29 = sub_23BAD7A20();
  uint64_t v30 = (char *)v22 + *(int *)(v23 + 24);
  *(void *)uint64_t v30 = v29;
  v30[8] = v31 & 1;
  sub_23BAD7A30();
  v42(v20, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))((char *)v22 + *(int *)(v23 + 28), v35, v36);
  sub_23BA84248((uint64_t)v22, v37, type metadata accessor for StockChart);
  sub_23BAD7EF0();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_23BAD79A0();
  sub_23BA8925C(v38, v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  sub_23BA84248(v37, v41, type metadata accessor for StockChart);
  uint64_t v32 = type metadata accessor for StockChartResult();
  sub_23BA84248((uint64_t)v39, v41 + *(int *)(v32 + 20), type metadata accessor for DataSource);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = (uint64_t (*)(void))v0[1];
  return v33();
}

uint64_t sub_23BA7A934(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, unint64_t *a5, void (*a6)(uint64_t), uint64_t (*a7)(void))
{
  sub_23BA84DD0(0, a5, a6);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v16 - v13;
  sub_23BA84564(a1, (uint64_t)v16 - v13, a7);
  swift_storeEnumTagMultiPayload();
  a3(v14);
  return sub_23BA8462C((uint64_t)v14, a5, a6);
}

uint64_t sub_23BA7AA20(void *a1, uint64_t a2, unint64_t a3, void (*a4)(char *), uint64_t a5, unint64_t *a6, void (*a7)(uint64_t), const char *a8)
{
  unsigned int v34 = a8;
  uint64_t v35 = a5;
  BOOL v8 = a7;
  uint64_t v9 = a6;
  uint64_t v36 = a4;
  sub_23BA84DD0(0, a6, a7);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v31 - v14;
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_23BAD8090();
  __swift_project_value_buffer(v16, (uint64_t)qword_26ADCC840);
  swift_bridgeObjectRetain();
  id v17 = a1;
  swift_bridgeObjectRetain();
  id v18 = a1;
  unint64_t v19 = sub_23BAD8070();
  os_log_type_t v20 = sub_23BAD8460();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v32 = v9;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v33 = v8;
    uint64_t v24 = v23;
    uint64_t v38 = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_23BA7E794(a2, a3, &v38);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v25 = sub_23BAD88F0();
    uint64_t v37 = sub_23BA7E794(v25, v26, &v38);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23BA68000, v19, v20, v34, (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    uint64_t v27 = v24;
    BOOL v8 = v33;
    MEMORY[0x23ECCD620](v27, -1, -1);
    uint64_t v28 = v22;
    uint64_t v9 = v32;
    MEMORY[0x23ECCD620](v28, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  *(void *)uint64_t v15 = a1;
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  swift_storeEnumTagMultiPayload();
  id v29 = a1;
  v36(v15);
  return sub_23BA8462C((uint64_t)v15, v9, v8);
}

uint64_t StockService.fetchStockChart(for:range:cachePolicy:earliestBeginDate:completion:)(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v34 = a1;
  uint64_t v35 = a6;
  uint64_t v13 = sub_23BAD7350();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13);
  int v31 = *a3;
  uint64_t v16 = a4[1];
  uint64_t v32 = *a4;
  uint64_t v33 = v16;
  int v17 = *((unsigned __int8 *)a4 + 16);
  uint64_t v18 = *(void *)(v7 + 24);
  if (v18)
  {
    uint64_t v30 = *(void *)(v7 + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v13);
    unint64_t v19 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    unint64_t v28 = (v19 + v15 + 31) & 0xFFFFFFFFFFFFFFF8;
    int v29 = v17;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v30;
    *(void *)(v20 + 24) = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v20 + v19, (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
    unint64_t v21 = v20 + ((v19 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v21 = v34;
    *(void *)(v21 + 8) = a2;
    *(unsigned char *)(v21 + 16) = v31;
    unint64_t v22 = v20 + v28;
    uint64_t v23 = v33;
    *(void *)unint64_t v22 = v32;
    *(void *)(v22 + 8) = v23;
    *(unsigned char *)(v22 + 16) = v29;
    uint64_t v24 = (void *)(v20 + ((v19 + v15 + 55) & 0xFFFFFFFFFFFFFFF8));
    void *v24 = v35;
    v24[1] = a7;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23BA75C5C((uint64_t)sub_23BA82178, v20);
    return swift_release();
  }
  else
  {
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v34;
    *(void *)(v26 + 24) = a2;
    *(unsigned char *)(v26 + 32) = v31;
    uint64_t v27 = v33;
    *(void *)(v26 + 40) = v32;
    *(void *)(v26 + 48) = v27;
    *(unsigned char *)(v26 + 56) = v17;
    *(void *)(v26 + 64) = v35;
    *(void *)(v26 + 72) = a7;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23BA75C5C((uint64_t)sub_23BA82278, v26);
    return swift_release();
  }
}

uint64_t sub_23BA7AFA8(uint64_t a1, unint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v22[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  unsigned __int8 v24 = a3;
  v22[0] = a4;
  v22[1] = a5;
  char v23 = a6;
  sub_23BA6ED18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  StockService.fetchStockChart(for:range:cachePolicy:networkSession:completion:)(a1, a2, &v24, v22, (uint64_t)v18, a7, a8);
  return sub_23BA845CC((uint64_t)v18, type metadata accessor for StockService.NetworkSession);
}

uint64_t sub_23BA7B110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11)
{
  uint64_t v29 = a4;
  unint64_t v30 = a5;
  uint64_t v27 = a8;
  uint64_t v28 = a11;
  uint64_t v26 = a10;
  uint64_t v16 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (uint64_t *)((char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23BA6ED18();
  uint64_t v20 = v19;
  unint64_t v21 = (char *)v18 + *(int *)(v19 + 48);
  uint64_t v22 = *(int *)(v19 + 64);
  *uint64_t v18 = a1;
  v18[1] = a2;
  uint64_t v23 = sub_23BAD7350();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, a3, v23);
  *(void *)((char *)v18 + v22) = 0x40AC200000000000;
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 0, 1, v20);
  uint64_t v24 = qword_26ADC8090;
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  unsigned __int8 v33 = a6;
  v31[0] = a7;
  v31[1] = v27;
  char v32 = a9;
  StockService.fetchStockChart(for:range:cachePolicy:networkSession:completion:)(v29, v30, &v33, v31, (uint64_t)v18, v26, v28);
  return sub_23BA845CC((uint64_t)v18, type metadata accessor for StockService.NetworkSession);
}

uint64_t StockService.fetchCurrencyConversions(cachePolicy:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v6 + 120) = a5;
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 40) = v5;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a3;
  uint64_t v8 = sub_23BAD8680();
  *(void *)(v6 + 48) = v8;
  *(void *)(v6 + 56) = *(void *)(v8 - 8);
  *(void *)(v6 + 64) = swift_task_alloc();
  sub_23BA808D4(0, &qword_26ADC9170, MEMORY[0x263F8F6D8], MEMORY[0x263F8D8F0]);
  *(void *)(v6 + 72) = swift_task_alloc();
  *(_OWORD *)(v6 + 80) = *(_OWORD *)a2;
  *(unsigned char *)(v6 + 121) = *(unsigned char *)(a2 + 16);
  return MEMORY[0x270FA2498](sub_23BA7B41C, 0, 0);
}

uint64_t sub_23BA7B41C()
{
  if (*(unsigned char *)(v0 + 120))
  {
    char v7 = 1;
    uint64_t v6 = 1;
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 64);
    uint64_t v2 = *(void *)(v0 + 48);
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v5 = *(void *)(v0 + 24);
    uint64_t v4 = *(void *)(v0 + 32);
    sub_23BAD8660();
    MEMORY[0x23ECCCBA0](v5, v4);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    uint64_t v6 = 0;
    char v7 = *(unsigned char *)(v0 + 120) & 1;
  }
  char v8 = *(unsigned char *)(v0 + 121);
  uint64_t v10 = *(void *)(v0 + 80);
  uint64_t v9 = *(void *)(v0 + 88);
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v13 = *(void *)(v0 + 32);
  uint64_t v12 = *(void *)(v0 + 40);
  uint64_t v14 = *(void *)(v0 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0 + 56) + 56))(v11, v6, 1, *(void *)(v0 + 48));
  uint64_t v15 = swift_task_alloc();
  *(void *)(v0 + 96) = v15;
  *(void *)(v15 + 16) = v11;
  *(void *)(v15 + 24) = v10;
  *(void *)(v15 + 32) = v9;
  *(unsigned char *)(v15 + 40) = v8;
  *(void *)(v15 + 48) = v14;
  *(void *)(v15 + 56) = v13;
  *(unsigned char *)(v15 + 64) = v7;
  *(void *)(v15 + 72) = v12;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v16;
  uint64_t v17 = type metadata accessor for CurrencyConversionsResult();
  void *v16 = v0;
  v16[1] = sub_23BA7B5C0;
  uint64_t v18 = *(void *)(v0 + 16);
  return MEMORY[0x270F7A130](v18, "StockService.fetchCurrencyConversions", 37, 2, &unk_268A75438, v15, v17);
}

uint64_t sub_23BA7B5C0()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_23BA7B784;
  }
  else {
    uint64_t v2 = sub_23BA7B6F0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_23BA7B6F0()
{
  sub_23BA82384(*(void *)(v0 + 72), &qword_26ADC9170, MEMORY[0x263F8F6D8]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23BA7B784()
{
  sub_23BA82384(*(void *)(v0 + 72), &qword_26ADC9170, MEMORY[0x263F8F6D8]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23BA7B818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 160) = a7;
  *(void *)(v8 + 168) = v13;
  *(unsigned char *)(v8 + 74) = a8;
  *(void *)(v8 + 144) = a4;
  *(void *)(v8 + 152) = a6;
  *(unsigned char *)(v8 + 73) = a5;
  *(void *)(v8 + 128) = a2;
  *(void *)(v8 + 136) = a3;
  *(void *)(v8 + 120) = a1;
  uint64_t v9 = sub_23BAD7E70();
  *(void *)(v8 + 176) = v9;
  *(void *)(v8 + 184) = *(void *)(v9 - 8);
  *(void *)(v8 + 192) = swift_task_alloc();
  *(void *)(v8 + 200) = swift_task_alloc();
  *(void *)(v8 + 208) = swift_task_alloc();
  uint64_t v10 = sub_23BAD8690();
  *(void *)(v8 + 216) = v10;
  *(void *)(v8 + 224) = *(void *)(v10 - 8);
  *(void *)(v8 + 232) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23BA7B96C, 0, 0);
}

uint64_t sub_23BA7B96C()
{
  char v1 = *(unsigned char *)(v0 + 74);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  char v4 = *(unsigned char *)(v0 + 73);
  uint64_t v6 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 136);
  sub_23BAD88E0();
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 240) = v9;
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = v6;
  *(unsigned char *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v3;
  *(unsigned char *)(v9 + 56) = v1 & 1;
  *(void *)(v9 + 64) = v2;
  *(void *)(v9 + 72) = v8;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v10;
  uint64_t v11 = type metadata accessor for CurrencyConversionsResult();
  uint64_t v12 = sub_23BA85084(&qword_26ADC8108, MEMORY[0x263F8F710]);
  void *v10 = v0;
  v10[1] = sub_23BA7BAD0;
  uint64_t v13 = *(void *)(v0 + 232);
  uint64_t v14 = *(void *)(v0 + 216);
  uint64_t v15 = *(void *)(v0 + 120);
  uint64_t v16 = *(void *)(v0 + 128);
  return MEMORY[0x270F7A260](v15, v16, v13, &unk_268A75480, v9, v14, v11, v12);
}

uint64_t sub_23BA7BAD0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[28] + 8))(v2[29], v2[27]);
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = sub_23BA7BCE0;
  }
  else {
    uint64_t v3 = sub_23BA7BC54;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_23BA7BC54()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23BA7BCE0()
{
  uint64_t v51 = v0;
  uint64_t v1 = *(void **)(v0 + 256);
  *(void *)(v0 + 88) = v1;
  uint64_t v2 = (void *)(v0 + 80);
  id v3 = v1;
  sub_23BA6E780(0, (unint64_t *)&qword_26ADC9740);
  char v4 = swift_dynamicCast();
  uint64_t v5 = *(void **)(v0 + 256);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 208);
    uint64_t v8 = *(void *)(v0 + 184);
    uint64_t v7 = *(void *)(v0 + 192);
    uint64_t v9 = *(void *)(v0 + 176);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v7, v9);
    if (qword_26ADC91C8 != -1) {
      swift_once();
    }
    uint64_t v11 = *(void *)(v0 + 200);
    uint64_t v10 = *(void *)(v0 + 208);
    uint64_t v12 = *(void *)(v0 + 176);
    uint64_t v13 = *(void *)(v0 + 184);
    uint64_t v14 = sub_23BAD8090();
    __swift_project_value_buffer(v14, (uint64_t)qword_26ADCC840);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, v10, v12);
    uint64_t v15 = sub_23BAD8070();
    os_log_type_t v16 = sub_23BAD8460();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = *(void *)(v0 + 200);
    uint64_t v19 = *(void *)(v0 + 184);
    if (v17)
    {
      uint64_t v47 = *(void *)(v0 + 176);
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v50 = v48;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v21 = sub_23BAD7E60();
      *(void *)(v0 + 112) = sub_23BA7E794(v21, v22, &v50);
      sub_23BAD84F0();
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v23(v18, v47);
      _os_log_impl(&dword_23BA68000, v15, v16, "Currencies fetch timed out before it could complete: %s.", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v48, -1, -1);
      MEMORY[0x23ECCD620](v20, -1, -1);
    }
    else
    {
      uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v23(*(void *)(v0 + 200), *(void *)(v0 + 176));
    }

    uint64_t v24 = *(void *)(v0 + 208);
    uint64_t v25 = *(void *)(v0 + 176);
    sub_23BA84174();
    uint64_t v5 = (void *)swift_allocError();
    *(void *)uint64_t v26 = 0;
    *(void *)(v26 + 8) = 0;
    *(unsigned char *)(v26 + 16) = 2;
    swift_willThrow();
    v23(v24, v25);
    uint64_t v2 = (void *)(v0 + 80);
  }

  *uint64_t v2 = v5;
  id v27 = v5;
  if (!swift_dynamicCast()) {
    goto LABEL_20;
  }

  uint64_t v29 = *(void **)(v0 + 56);
  uint64_t v28 = *(void **)(v0 + 64);
  char v30 = *(unsigned char *)(v0 + 72);
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_23BAD8090();
  __swift_project_value_buffer(v31, (uint64_t)qword_26ADCC840);
  sub_23BA83550(v29, v28, v30);
  sub_23BA83550(v29, v28, v30);
  char v32 = sub_23BAD8070();
  os_log_type_t v33 = sub_23BAD8470();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 138543362;
    sub_23BA84174();
    swift_allocError();
    uint64_t v35 = v28;
    char v36 = v30;
    *(void *)uint64_t v37 = v29;
    *(void *)(v37 + 8) = v35;
    *(unsigned char *)(v37 + 16) = v30;
    sub_23BA83550(v29, v35, v30);
    uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 104) = v38;
    sub_23BAD84F0();
    *uint64_t v49 = v38;
    char v30 = v36;
    uint64_t v28 = v35;
    sub_23BA83580(v29, v35, v30);
    sub_23BA83580(v29, v35, v30);
    _os_log_impl(&dword_23BA68000, v32, v33, "Currencies fetch failed with error: %{public}@", v34, 0xCu);
    sub_23BA844C0();
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v49, -1, -1);
    MEMORY[0x23ECCD620](v34, -1, -1);
  }
  else
  {
    sub_23BA83580(v29, v28, v30);
    sub_23BA83580(v29, v28, v30);
  }
  unsigned int v39 = *(unsigned __int8 *)(v0 + 73);

  if (v39 >= 2 && !(*(void *)(v0 + 136) ^ 2 | *(void *)(v0 + 144)))
  {
    sub_23BA84174();
    swift_allocError();
    *(void *)uint64_t v40 = v29;
    *(void *)(v40 + 8) = v28;
    *(unsigned char *)(v40 + 16) = v30;
    swift_willThrow();
LABEL_20:

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_21;
  }
  uint64_t v41 = sub_23BAD8070();
  os_log_type_t v42 = sub_23BAD8470();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v43 = 0;
    _os_log_impl(&dword_23BA68000, v41, v42, "Returning bundled static data.", v43, 2u);
    MEMORY[0x23ECCD620](v43, -1, -1);
  }
  uint64_t v44 = *(void *)(v0 + 120);

  sub_23BAD7EF0();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_23BA86AD4(v44);
  sub_23BA83580(v29, v28, v30);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
LABEL_21:
  return v45();
}

uint64_t sub_23BA7C54C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 176) = a8;
  *(void *)(v8 + 184) = v12;
  *(unsigned char *)(v8 + 74) = a7;
  *(void *)(v8 + 160) = a5;
  *(void *)(v8 + 168) = a6;
  *(unsigned char *)(v8 + 73) = a4;
  *(void *)(v8 + 144) = a2;
  *(void *)(v8 + 152) = a3;
  *(void *)(v8 + 136) = a1;
  uint64_t v9 = sub_23BAD8380();
  *(void *)(v8 + 192) = v9;
  *(void *)(v8 + 200) = *(void *)(v9 - 8);
  *(void *)(v8 + 208) = swift_task_alloc();
  *(void *)(v8 + 216) = swift_task_alloc();
  *(void *)(v8 + 224) = type metadata accessor for CurrencyConversionsResult();
  *(void *)(v8 + 232) = swift_task_alloc();
  *(void *)(v8 + 240) = swift_task_alloc();
  *(void *)(v8 + 248) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23BA7C684, 0, 0);
}

uint64_t sub_23BA7C684()
{
  uint64_t v27 = v0;
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_23BAD8090();
  *(void *)(v0 + 256) = __swift_project_value_buffer(v1, (uint64_t)qword_26ADCC840);
  uint64_t v2 = sub_23BAD8070();
  os_log_type_t v3 = sub_23BAD8470();
  if (os_log_type_enabled(v2, v3))
  {
    char v24 = *(unsigned char *)(v0 + 74);
    char v4 = *(unsigned char *)(v0 + 73);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v6 = *(void *)(v0 + 152);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v25[0] = v8;
    v25[1] = v5;
    *(_DWORD *)uint64_t v7 = 136315394;
    v25[2] = v6;
    char v26 = v4;
    uint64_t v9 = StockService.CachePolicy.description.getter();
    *(void *)(v0 + 120) = sub_23BA7E794(v9, v10, v25);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    if (v24)
    {
      unint64_t v13 = 0xE400000000000000;
      uint64_t v11 = 1701736302;
    }
    else
    {
      uint64_t v11 = sub_23BAD8A80();
      unint64_t v13 = v12;
    }
    *(void *)(v0 + 128) = sub_23BA7E794(v11, v13, v25);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23BA68000, v2, v3, "Currencies fetch started, cachePolicy: %s, timeout: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v8, -1, -1);
    MEMORY[0x23ECCD620](v7, -1, -1);
  }

  char v14 = *(unsigned char *)(v0 + 73);
  uint64_t v16 = *(void *)(v0 + 144);
  uint64_t v15 = *(void *)(v0 + 152);
  sub_23BAD7EF0();
  uint64_t v17 = *(void *)(v0 + 40);
  uint64_t v18 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v17);
  *(void *)(v0 + 56) = v16;
  *(void *)(v0 + 64) = v15;
  *(unsigned char *)(v0 + 72) = v14;
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 + 16)
                                                                            + **(int **)(v18 + 16));
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v19;
  void *v19 = v0;
  v19[1] = sub_23BA7C990;
  uint64_t v20 = *(void *)(v0 + 184);
  uint64_t v21 = *(void *)(v0 + 136);
  return v23(v21, v0 + 56, v20, v17, v18);
}

uint64_t sub_23BA7C990()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_23BA7CE04;
  }
  else {
    uint64_t v2 = sub_23BA7CAA4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_23BA7CAA4()
{
  char v24 = v0;
  uint64_t v1 = v0[31];
  uint64_t v3 = v0[29];
  uint64_t v2 = v0[30];
  uint64_t v4 = v0[17];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  sub_23BA84564(v4, v1, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
  sub_23BA84564(v4, v2, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
  sub_23BA84564(v4, v3, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
  uint64_t v5 = sub_23BAD8070();
  os_log_type_t v6 = sub_23BAD8470();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = v0[30];
    uint64_t v8 = v0[31];
    uint64_t v9 = v0[28];
    uint64_t v21 = v0[29];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = v22;
    *(_DWORD *)uint64_t v10 = 134349570;
    uint64_t v11 = *(void *)(*(void *)v8 + 16);
    sub_23BA845CC(v8, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
    v0[12] = v11;
    sub_23BAD84F0();
    *(_WORD *)(v10 + 12) = 2082;
    unint64_t v12 = (uint64_t *)(v7 + *(int *)(v9 + 20));
    uint64_t v14 = *v12;
    unint64_t v13 = v12[1];
    swift_bridgeObjectRetain();
    v0[13] = sub_23BA7E794(v14, v13, &v23);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    sub_23BA845CC(v7, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
    *(_WORD *)(v10 + 22) = 2082;
    sub_23BAD7350();
    sub_23BA85084((unint64_t *)&qword_26ADC91A0, MEMORY[0x263F07490]);
    uint64_t v15 = sub_23BAD8870();
    v0[14] = sub_23BA7E794(v15, v16, &v23);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    sub_23BA845CC(v21, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
    _os_log_impl(&dword_23BA68000, v5, v6, "Currencies fetch succeeded, conversions: %{public}ld, source: %{public}s, createdAt: %{public}s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v22, -1, -1);
    MEMORY[0x23ECCD620](v10, -1, -1);
  }
  else
  {
    uint64_t v17 = v0[30];
    uint64_t v18 = v0[29];
    sub_23BA845CC(v0[31], (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
    sub_23BA845CC(v17, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
    sub_23BA845CC(v18, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_23BA7CE04()
{
  uint64_t v1 = *(void **)(v0 + 272);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  *(void *)(v0 + 80) = v1;
  id v2 = v1;
  sub_23BA6E780(0, (unint64_t *)&qword_26ADC9740);
  int v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 272);
  if (v3)
  {
    uint64_t v6 = *(void *)(v0 + 208);
    uint64_t v5 = *(void *)(v0 + 216);
    uint64_t v7 = *(void *)(v0 + 192);
    uint64_t v8 = *(void *)(v0 + 200);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v5, v6, v7);
    uint64_t v9 = sub_23BAD8070();
    os_log_type_t v10 = sub_23BAD8460();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_23BA68000, v9, v10, "Currencies fetch for was cancelled before it could complete.", v11, 2u);
      MEMORY[0x23ECCD620](v11, -1, -1);
    }
    uint64_t v12 = *(void *)(v0 + 216);
    uint64_t v13 = *(void *)(v0 + 192);
    uint64_t v14 = *(void *)(v0 + 200);

    sub_23BA85084(&qword_268A75488, MEMORY[0x263F8F488]);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v15, v12, v13);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  else
  {

    id v16 = v4;
    id v17 = v4;
    uint64_t v18 = sub_23BAD8070();
    os_log_type_t v19 = sub_23BAD8460();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v21 = *(void **)(v0 + 272);
    if (v20)
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138543362;
      id v24 = v21;
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 88) = v25;
      sub_23BAD84F0();
      void *v23 = v25;

      _os_log_impl(&dword_23BA68000, v18, v19, "Currencies fetch failed, error: %{public}@", v22, 0xCu);
      sub_23BA844C0();
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v23, -1, -1);
      MEMORY[0x23ECCD620](v22, -1, -1);
    }
    else
    {
    }
    uint64_t v26 = *(void *)(v0 + 272);

    sub_23BA84174();
    swift_allocError();
    *(void *)uint64_t v27 = v26;
    *(void *)(v27 + 8) = 0;
    *(unsigned char *)(v27 + 16) = 1;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t StockService.fetchCurrencyConversions(cachePolicy:timeout:networkSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a3;
  uint64_t v7 = sub_23BAD8680();
  *(void *)(v5 + 48) = v7;
  *(void *)(v5 + 56) = *(void *)(v7 - 8);
  *(void *)(v5 + 64) = swift_task_alloc();
  sub_23BA808D4(0, &qword_26ADC9170, MEMORY[0x263F8F6D8], MEMORY[0x263F8D8F0]);
  *(void *)(v5 + 72) = swift_task_alloc();
  *(_OWORD *)(v5 + 80) = *(_OWORD *)a2;
  *(unsigned char *)(v5 + 120) = *(unsigned char *)(a2 + 16);
  return MEMORY[0x270FA2498](sub_23BA7D2E0, 0, 0);
}

uint64_t sub_23BA7D2E0()
{
  char v15 = *(unsigned char *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 40);
  uint64_t v9 = *(void *)(v0 + 24);
  if (sub_23BAD8AB0())
  {
    uint64_t v9 = 0x158E460913D00000;
    uint64_t v7 = 1;
  }
  sub_23BAD8660();
  MEMORY[0x23ECCCBA0](v9, v7);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v3, 0, 1, v5);
  uint64_t v10 = swift_task_alloc();
  *(void *)(v0 + 96) = v10;
  *(void *)(v10 + 16) = v3;
  *(void *)(v10 + 24) = v2;
  *(void *)(v10 + 32) = v1;
  *(unsigned char *)(v10 + 40) = v15;
  *(void *)(v10 + 48) = v9;
  *(void *)(v10 + 56) = v7;
  *(unsigned char *)(v10 + 64) = 0;
  *(void *)(v10 + 72) = v8;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v11;
  uint64_t v12 = type metadata accessor for CurrencyConversionsResult();
  void *v11 = v0;
  v11[1] = sub_23BA7B5C0;
  uint64_t v13 = *(void *)(v0 + 16);
  return MEMORY[0x270F7A130](v13, "StockService.fetchCurrencyConversions", 37, 2, &unk_268A75448, v10, v12);
}

id *StockService.deinit()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_23BA82384((uint64_t)v0 + OBJC_IVAR____TtC9StocksKit12StockService____lazy_storage___networkProxy, &qword_26ADC7F90, MEMORY[0x263F7CDB0]);
  return v0;
}

uint64_t StockService.__deallocating_deinit()
{
  StockService.deinit();
  return swift_deallocClassInstance();
}

uint64_t StockService.observeFetchSessionDidFinish(keepAliveObject:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  swift_unknownObjectRetain();
  swift_retain();
  sub_23BA75C5C((uint64_t)sub_23BA82434, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_23BA7D638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  if (!a1) {
    swift_unknownObjectRetain();
  }
  swift_retain();
  swift_unknownObjectRetain();
  sub_23BAD7ED0();
  swift_release();
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall StockService.reestablishBackgroundSession()()
{
}

uint64_t sub_23BA7D744()
{
  uint64_t v0 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (uint64_t *)((char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_23BAD7D90();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  sub_23BA6ED18();
  uint64_t v8 = v7;
  uint64_t v9 = *(int *)(v7 + 64);
  *uint64_t v2 = 0xD000000000000024;
  v2[1] = 0x800000023BADDE40;
  sub_23BAD7340();
  *(void *)((char *)v2 + v9) = 0x40AC200000000000;
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 0, 1, v8);
  sub_23BA75514((uint64_t)v2, v6);
  sub_23BA845CC((uint64_t)v2, type metadata accessor for StockService.NetworkSession);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Void __swiftcall StockService.reestablishBackgroundSession(identifier:)(Swift::String identifier)
{
  object = identifier._object;
  uint64_t countAndFlagsBits = identifier._countAndFlagsBits;
  uint64_t v3 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_23BAD7D90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23BA6ED18();
  uint64_t v11 = v10;
  uint64_t v12 = *(int *)(v10 + 64);
  *uint64_t v5 = countAndFlagsBits;
  v5[1] = (uint64_t)object;
  swift_bridgeObjectRetain();
  sub_23BAD7340();
  *(uint64_t *)((char *)v5 + v12) = 0x40AC200000000000;
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 0, 1, v11);
  sub_23BA75514((uint64_t)v5, v9);
  sub_23BA845CC((uint64_t)v5, type metadata accessor for StockService.NetworkSession);
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t static StockService.defaultWatchlistForCurrentLocale.getter()
{
  id v0 = objc_msgSend(self, sel_defaultsForCurrentCountry);
  id v1 = objc_msgSend(v0, sel_defaultSymbols);

  uint64_t v2 = sub_23BAD82E0();
  return v2;
}

uint64_t static StockService.defaultWatchlistForCarrierBundle.getter()
{
  id v0 = objc_msgSend(self, sel_defaultsForCurrentCountry);
  id v1 = objc_msgSend(v0, sel_defaultSymbols);

  uint64_t v2 = sub_23BAD82E0();
  return v2;
}

uint64_t StockService.fetchDefaultWatchlist(cachePolicy:networkSession:completion:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  char v9 = *((unsigned char *)a1 + 16);
  id v10 = objc_msgSend(self, sel_defaultsForCurrentCountry);
  id v11 = objc_msgSend(v10, sel_defaultSymbols);

  uint64_t v12 = sub_23BAD82E0();
  v15[0] = v7;
  v15[1] = v8;
  char v16 = v9;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a4;
  swift_retain();
  StockService.fetchStocks(for:cachePolicy:networkSession:completion:)(v12, (uint64_t)v15, a2, (uint64_t)sub_23BA82440, v13);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t StockService.fetchDefaultWatchlist(cachePolicy:earliestBeginDate:completion:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v20 = *v4;
  uint64_t v7 = sub_23BAD7350();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  LOBYTE(a1) = *((unsigned char *)a1 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v12;
  *(void *)(v15 + 24) = v11;
  *(unsigned char *)(v15 + 32) = (_BYTE)a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v13, v10, v7);
  char v16 = (void *)(v15 + v14);
  uint64_t v17 = v22;
  void *v16 = v21;
  v16[1] = v17;
  *(void *)(v15 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8)) = v20;
  swift_retain();
  sub_23BA75C5C((uint64_t)sub_23BA8250C, v15);
  return swift_release();
}

uint64_t sub_23BA7DEA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v36 = a4;
  int v39 = a3;
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v8 = sub_23BAD7350();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  uint64_t v9 = *(void *)(v37 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v35 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  id v10 = off_26ADC8088;
  uint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_defaultsForCurrentCountry);
  id v13 = objc_msgSend(v12, sel_defaultSymbols);

  uint64_t v14 = sub_23BAD82E0();
  id v15 = objc_msgSend(v11, sel_defaultsForCurrentCountry);
  id v16 = objc_msgSend(v15, sel_defaultSymbols);

  uint64_t v17 = sub_23BAD82E0();
  uint64_t v42 = v14;
  sub_23BA7FE10(v17);
  uint64_t v18 = v42;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a5;
  *(void *)(v19 + 24) = a6;
  uint64_t v20 = v10[3];
  if (v20)
  {
    uint64_t v33 = v10[2];
    uint64_t v34 = v18;
    uint64_t v21 = v37;
    uint64_t v22 = v35;
    uint64_t v23 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v35, v36, v38);
    unint64_t v24 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    unint64_t v25 = (v9 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v36 = a6;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v33;
    *(void *)(v26 + 24) = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v26 + v24, v22, v23);
    *(void *)(v26 + v25) = v34;
    unint64_t v27 = v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v28 = v41;
    *(void *)unint64_t v27 = v40;
    *(void *)(v27 + 8) = v28;
    *(unsigned char *)(v27 + 16) = v39;
    uint64_t v29 = (void (**)(uint64_t))(v26 + ((v25 + 39) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v29 = sub_23BA85158;
    v29[1] = (void (*)(uint64_t))v19;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23BA75C5C((uint64_t)sub_23BA81624, v26);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = v40;
    *(void *)(v31 + 16) = v18;
    *(void *)(v31 + 24) = v32;
    *(void *)(v31 + 32) = v41;
    *(unsigned char *)(v31 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v39;
    *(void *)(v31 + 48) = sub_23BA85158;
    *(void *)(v31 + 56) = v19;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23BA75C5C((uint64_t)sub_23BA81640, v31);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

void sub_23BA7E268(uint64_t a1, void (*a2)(void **))
{
  uint64_t v4 = type metadata accessor for StockResult();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (void **)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23BA84DD0(0, &qword_268A75468, (void (*)(uint64_t))type metadata accessor for StockResult);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_23BA841C8(a1, (uint64_t)&v13 - v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v10 = *(void **)v9;
    uint64_t v11 = (void *)*((void *)v9 + 1);
    char v12 = v9[16];
    uint64_t v14 = v10;
    id v15 = v11;
    LOBYTE(v16) = v12;
    HIBYTE(v16) = 1;
    sub_23BA83550(v10, v11, v12);
    a2(&v14);
    sub_23BA83580(v10, v11, v12);
    sub_23BA83580(v10, v11, v12);
  }
  else
  {
    sub_23BA84248((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockResult);
    uint64_t v14 = *v6;
    id v15 = 0;
    __int16 v16 = 0;
    swift_bridgeObjectRetain();
    a2(&v14);
    swift_bridgeObjectRelease();
    sub_23BA845CC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockResult);
  }
}

uint64_t sub_23BA7E42C(uint64_t a1, uint64_t a2)
{
  sub_23BAD8390();
  swift_release();
  swift_task_getMainExecutor();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  sub_23BA84B24();
  if (v2) {
    return swift_release();
  }
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_6:
    sub_23BAD8590();
    sub_23BAD8280();
    sub_23BAD8B20();
    sub_23BAD8280();
    swift_bridgeObjectRelease();
    sub_23BAD8280();
    uint64_t result = sub_23BAD86B0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23BA7E5B8(uint64_t a1, uint64_t a2)
{
  sub_23BAD83A0();
  v5[2] = a1;
  v5[3] = a2;
  return sub_23BA7E42C((uint64_t)sub_23BA85140, (uint64_t)v5);
}

uint64_t sub_23BA7E634(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void *sub_23BA7E678(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_23BA84FA8(0, &qword_268A75470);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23BA842B0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23BA7E794(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_23BA7E868(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_23BA84F4C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_23BA84F4C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_23BA7E868(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23BAD8500();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_23BA7EA24(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_23BAD8610();
  if (!v8)
  {
    sub_23BAD86A0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_23BAD8710();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_23BA7EA24(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_23BA7EABC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_23BA7ECA8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_23BA7ECA8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23BA7EABC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_23BA7EC34(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_23BAD85A0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_23BAD86A0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_23BAD82A0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_23BAD8710();
    __break(1u);
LABEL_14:
    uint64_t result = sub_23BAD86A0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_23BA7EC34(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_23BA84FA8(0, &qword_26ADC9738);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23BA7ECA8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_23BA84FA8(0, &qword_26ADC9738);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_23BAD8710();
  __break(1u);
  return result;
}

uint64_t sub_23BA7EE04(uint64_t a1)
{
  uint64_t v2 = sub_23BAD7C90();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v86 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  int64_t v7 = (char *)&v65 - v6;
  uint64_t v101 = sub_23BAD7C60();
  uint64_t v8 = *(void *)(v101 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v101);
  size_t v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  v100 = (char *)&v65 - v12;
  sub_23BA84D04();
  uint64_t result = sub_23BAD86D0();
  int64_t v14 = 0;
  uint64_t v85 = a1;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v72 = a1 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v73 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v82 = v8 + 16;
  uint64_t v81 = (void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v80 = (uint64_t (**)(char *, uint64_t))(v3 + 88);
  int v79 = *MEMORY[0x263F7AF90];
  int v71 = *MEMORY[0x263F7AF98];
  int v70 = *MEMORY[0x263F7AF68];
  int v69 = *MEMORY[0x263F7AF80];
  int v68 = *MEMORY[0x263F7AF70];
  int v67 = *MEMORY[0x263F7AF88];
  int v66 = *MEMORY[0x263F7AF78];
  int v65 = *MEMORY[0x263F7AF60];
  uint64_t v76 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v84 = v8;
  uint64_t v78 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v77 = result + 64;
  uint64_t v75 = v2;
  uint64_t v74 = v7;
  uint64_t v83 = result;
  if (!v18) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v87 = (v18 - 1) & v18;
  int64_t v88 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    uint64_t v24 = *(void *)(v85 + 56);
    unint64_t v25 = (uint64_t *)(*(void *)(v85 + 48) + 16 * i);
    uint64_t v26 = v25[1];
    uint64_t v98 = *v25;
    unint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v84 + 16);
    uint64_t v29 = v100;
    uint64_t v28 = v101;
    v27(v100, v24 + *(void *)(v84 + 72) * i, v101);
    v27(v11, (unint64_t)v29, v28);
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_23BAD7C30();
    uint64_t v32 = v31;
    uint64_t v33 = sub_23BAD7C10();
    uint64_t v95 = v34;
    uint64_t v96 = v33;
    uint64_t v104 = sub_23BAD7C40();
    uint64_t v94 = v35;
    sub_23BAD7C20();
    uint64_t v36 = v86;
    (*v81)(v86, v7, v2);
    int v37 = (*v80)(v36, v2);
    uint64_t v99 = v26;
    unint64_t v97 = i;
    if (v37 == v79)
    {
      uint64_t v38 = v32;
      (*v76)(v7, v2);
LABEL_21:
      int v89 = 0;
      goto LABEL_37;
    }
    int v39 = v37;
    if (v37 == v71)
    {
      uint64_t v38 = v32;
      (*v76)(v7, v2);
      int v40 = 1;
    }
    else if (v37 == v70)
    {
      uint64_t v38 = v32;
      (*v76)(v7, v2);
      int v40 = 2;
    }
    else if (v37 == v69)
    {
      uint64_t v38 = v32;
      (*v76)(v7, v2);
      int v40 = 3;
    }
    else if (v37 == v68)
    {
      uint64_t v38 = v32;
      (*v76)(v7, v2);
      int v40 = 4;
    }
    else if (v37 == v67)
    {
      uint64_t v38 = v32;
      (*v76)(v7, v2);
      int v40 = 5;
    }
    else
    {
      uint64_t v38 = v32;
      if (v37 == v66)
      {
        (*v76)(v7, v2);
        int v40 = 6;
      }
      else
      {
        uint64_t v41 = *v76;
        (*v76)(v7, v2);
        if (v39 != v65)
        {
          v41(v86, v2);
          goto LABEL_21;
        }
        int v40 = 7;
      }
    }
    int v89 = v40;
LABEL_37:
    uint64_t v93 = sub_23BAD7C50();
    uint64_t v43 = v42;
    uint64_t v44 = sub_23BAD7C00();
    uint64_t v91 = v45;
    uint64_t v92 = v44;
    uint64_t v46 = v94;
    uint64_t v102 = v104;
    uint64_t v103 = v94;
    swift_bridgeObjectRetain();
    sub_23BAD8280();
    uint64_t v47 = v38;
    sub_23BAD8280();
    uint64_t v48 = v102;
    uint64_t v90 = v103;
    uint64_t v49 = *v78;
    swift_bridgeObjectRetain();
    uint64_t v50 = v30;
    uint64_t v51 = v11;
    uint64_t v52 = v11;
    uint64_t v53 = v101;
    v49(v52, v101);
    v49(v100, v53);
    unint64_t v54 = v97;
    *(void *)(v77 + ((v97 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v97;
    uint64_t result = v83;
    uint64_t v55 = (void *)(*(void *)(v83 + 48) + 16 * v54);
    uint64_t v56 = v99;
    *uint64_t v55 = v98;
    v55[1] = v56;
    uint64_t v57 = *(void *)(result + 56) + 120 * v54;
    uint64_t v58 = v90;
    *(void *)uint64_t v57 = v48;
    *(void *)(v57 + 8) = v58;
    *(void *)(v57 + 16) = v50;
    *(void *)(v57 + 24) = v47;
    uint64_t v59 = v95;
    *(void *)(v57 + 32) = v96;
    *(void *)(v57 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v59;
    *(void *)(v57 + 48) = v104;
    *(void *)(v57 + 56) = v46;
    *(unsigned char *)(v57 + 64) = v89;
    uint64_t v60 = v93;
    *(void *)(v57 + 72) = v93;
    *(void *)(v57 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v43;
    *(void *)(v57 + 88) = v60;
    *(void *)(v57 + 96) = v43;
    uint64_t v61 = v91;
    *(void *)(v57 + 104) = v92;
    *(void *)(v57 + 112) = v61;
    uint64_t v62 = *(void *)(result + 16);
    BOOL v63 = __OFADD__(v62, 1);
    uint64_t v64 = v62 + 1;
    if (v63)
    {
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    *(void *)(result + 16) = v64;
    uint64_t v2 = v75;
    int64_t v7 = v74;
    size_t v11 = v51;
    unint64_t v18 = v87;
    int64_t v14 = v88;
    if (v87) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v20 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      goto LABEL_43;
    }
    if (v20 >= v73) {
      return result;
    }
    unint64_t v21 = *(void *)(v72 + 8 * v20);
    int64_t v22 = v14 + 1;
    if (!v21)
    {
      int64_t v22 = v14 + 2;
      if (v14 + 2 >= v73) {
        return result;
      }
      unint64_t v21 = *(void *)(v72 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = v14 + 3;
        if (v14 + 3 >= v73) {
          return result;
        }
        unint64_t v21 = *(void *)(v72 + 8 * v22);
        if (!v21) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v87 = (v21 - 1) & v21;
    int64_t v88 = v22;
  }
  uint64_t v23 = v14 + 4;
  if (v14 + 4 >= v73) {
    return result;
  }
  unint64_t v21 = *(void *)(v72 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v14 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v73) {
      return result;
    }
    unint64_t v21 = *(void *)(v72 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_18;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_23BA7F610(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Quote();
  uint64_t v46 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v45 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_23BAD7BF0();
  uint64_t v4 = *(void *)(v44 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v44);
  uint64_t v42 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v34 - v7;
  sub_23BA84A58(0, &qword_268A754F8, (uint64_t (*)(uint64_t))type metadata accessor for Quote, MEMORY[0x263F8DFB0]);
  uint64_t result = sub_23BAD86D0();
  uint64_t v9 = result;
  int64_t v10 = 0;
  uint64_t v47 = a1;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v12 = a1 + 64;
  uint64_t v11 = v13;
  uint64_t v14 = 1 << *(unsigned char *)(v12 - 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v11;
  uint64_t v35 = v12;
  int64_t v36 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v43 = v4;
  uint64_t v38 = v4 + 8;
  uint64_t v39 = v4 + 16;
  uint64_t v37 = result + 64;
  uint64_t v40 = result;
  uint64_t v17 = v41;
  uint64_t v18 = v44;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v48 = (v16 - 1) & v16;
  int64_t v49 = v10;
  for (unint64_t i = __clz(__rbit64(v16)) | (v10 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    uint64_t v24 = *(void *)(v47 + 56);
    unint64_t v25 = (uint64_t *)(*(void *)(v47 + 48) + 16 * i);
    uint64_t v26 = v25[1];
    uint64_t v50 = *v25;
    unint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    v27(v17, v24 + *(void *)(v4 + 72) * i, v18);
    uint64_t v28 = (uint64_t)v42;
    v27(v42, (unint64_t)v17, v18);
    swift_bridgeObjectRetain();
    uint64_t v29 = v45;
    sub_23BA91958(v28, v45);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v18);
    *(void *)(v37 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v9 = v40;
    uint64_t v30 = (void *)(*(void *)(v40 + 48) + 16 * i);
    *uint64_t v30 = v50;
    v30[1] = v26;
    uint64_t result = sub_23BA84248(v29, *(void *)(v9 + 56) + *(void *)(v46 + 72) * i, (uint64_t (*)(void))type metadata accessor for Quote);
    uint64_t v31 = *(void *)(v9 + 16);
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *(void *)(v9 + 16) = v33;
    unint64_t v16 = v48;
    int64_t v10 = v49;
    if (v48) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_24;
    }
    if (v20 >= v36) {
      return v9;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    int64_t v22 = v10 + 1;
    if (!v21)
    {
      int64_t v22 = v10 + 2;
      if (v10 + 2 >= v36) {
        return v9;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = v10 + 3;
        if (v10 + 3 >= v36) {
          return v9;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v22);
        if (!v21) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v48 = (v21 - 1) & v21;
    int64_t v49 = v22;
  }
  uint64_t v23 = v10 + 4;
  if (v10 + 4 >= v36) {
    return v9;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v10 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v36) {
      return v9;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23BA7FA10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for QuoteDetail();
  uint64_t v46 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v45 = (uint64_t *)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = sub_23BAD7710();
  uint64_t v4 = *(void *)(v44 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v44);
  uint64_t v42 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v34 - v7;
  sub_23BA84A58(0, &qword_268A754D0, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, MEMORY[0x263F8DFB0]);
  uint64_t result = sub_23BAD86D0();
  uint64_t v9 = result;
  int64_t v10 = 0;
  uint64_t v47 = a1;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v12 = a1 + 64;
  uint64_t v11 = v13;
  uint64_t v14 = 1 << *(unsigned char *)(v12 - 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v11;
  uint64_t v35 = v12;
  int64_t v36 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v43 = v4;
  uint64_t v38 = v4 + 8;
  uint64_t v39 = v4 + 16;
  uint64_t v37 = result + 64;
  uint64_t v40 = result;
  uint64_t v17 = v41;
  uint64_t v18 = v44;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v48 = (v16 - 1) & v16;
  int64_t v49 = v10;
  for (unint64_t i = __clz(__rbit64(v16)) | (v10 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    uint64_t v24 = *(void *)(v47 + 56);
    unint64_t v25 = (uint64_t *)(*(void *)(v47 + 48) + 16 * i);
    uint64_t v26 = v25[1];
    uint64_t v50 = *v25;
    unint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    v27(v17, v24 + *(void *)(v4 + 72) * i, v18);
    uint64_t v28 = (uint64_t)v42;
    v27(v42, (unint64_t)v17, v18);
    swift_bridgeObjectRetain();
    uint64_t v29 = v45;
    sub_23BABFDDC(v28, v45);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v18);
    *(void *)(v37 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v9 = v40;
    uint64_t v30 = (void *)(*(void *)(v40 + 48) + 16 * i);
    *uint64_t v30 = v50;
    v30[1] = v26;
    uint64_t result = sub_23BA84248((uint64_t)v29, *(void *)(v9 + 56) + *(void *)(v46 + 72) * i, (uint64_t (*)(void))type metadata accessor for QuoteDetail);
    uint64_t v31 = *(void *)(v9 + 16);
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *(void *)(v9 + 16) = v33;
    unint64_t v16 = v48;
    int64_t v10 = v49;
    if (v48) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_24;
    }
    if (v20 >= v36) {
      return v9;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    int64_t v22 = v10 + 1;
    if (!v21)
    {
      int64_t v22 = v10 + 2;
      if (v10 + 2 >= v36) {
        return v9;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = v10 + 3;
        if (v10 + 3 >= v36) {
          return v9;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v22);
        if (!v21) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v48 = (v21 - 1) & v21;
    int64_t v49 = v22;
  }
  uint64_t v23 = v10 + 4;
  if (v10 + 4 >= v36) {
    return v9;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v10 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v36) {
      return v9;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23BA7FE10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_23BA7E678(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_23BAD8710();
  __break(1u);
  return result;
}

void *sub_23BA7FF64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_23BA84FA8(0, &qword_268A75470);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_23BA80058((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_23BA8498C();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_23BA80058(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23BA80258(uint64_t a1)
{
  uint64_t v2 = sub_23BAD8A30();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_23BA84FF0();
    uint64_t v9 = sub_23BAD8570();
    uint64_t v10 = 0;
    int64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v33 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v13 = *(void *)(v11 + 56);
    int64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = v8;
    BOOL v32 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v13 * v10, v2);
      sub_23BA85084(&qword_268A75560, MEMORY[0x263F07EC8]);
      uint64_t v15 = sub_23BAD81E0();
      uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        uint64_t v21 = ~v16;
        do
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v17 * v13, v2);
          sub_23BA85084(&qword_268A75568, MEMORY[0x263F07EC8]);
          char v23 = sub_23BAD8220();
          uint64_t v24 = *v14;
          (*v14)(v6, v2);
          if (v23)
          {
            v24(v37, v2);
            uint64_t v11 = v22;
            uint64_t v8 = v31;
            goto LABEL_4;
          }
          unint64_t v17 = (v17 + 1) & v21;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
          uint64_t v20 = 1 << v17;
          uint64_t v11 = v22;
        }
        while ((v19 & (1 << v17)) != 0);
        uint64_t v8 = v31;
      }
      unint64_t v25 = v37;
      *(void *)(v36 + 8 * v18) = v20 | v19;
      uint64_t result = (*v32)(*(void *)(v9 + 48) + v17 * v13, v25, v2);
      uint64_t v27 = *(void *)(v9 + 16);
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        break;
      }
      *(void *)(v9 + 16) = v29;
LABEL_4:
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v8) {
        return v9;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE88];
  }
  return result;
}

unint64_t sub_23BA80570()
{
  unint64_t result = qword_26ADC9568;
  if (!qword_26ADC9568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9568);
  }
  return result;
}

unint64_t sub_23BA805C4()
{
  unint64_t result = qword_26ADC9550;
  if (!qword_26ADC9550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9550);
  }
  return result;
}

unint64_t sub_23BA80618()
{
  unint64_t result = qword_26ADC9538;
  if (!qword_26ADC9538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9538);
  }
  return result;
}

unint64_t sub_23BA8066C()
{
  unint64_t result = qword_26ADC95C8;
  if (!qword_26ADC95C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC95C8);
  }
  return result;
}

unint64_t sub_23BA806C0()
{
  unint64_t result = qword_26ADC95B0;
  if (!qword_26ADC95B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC95B0);
  }
  return result;
}

unint64_t sub_23BA80714()
{
  unint64_t result = qword_26ADC9598;
  if (!qword_26ADC9598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9598);
  }
  return result;
}

unint64_t sub_23BA80768()
{
  unint64_t result = qword_26ADC9580;
  if (!qword_26ADC9580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9580);
  }
  return result;
}

void sub_23BA807BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_23BA80824()
{
  if (!qword_268A753D0)
  {
    sub_23BA80894();
    sub_23BAD85E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268A753D0);
    }
  }
}

unint64_t sub_23BA80894()
{
  unint64_t result = qword_268A753D8;
  if (!qword_268A753D8)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268A753D8);
  }
  return result;
}

void sub_23BA808D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_23BA80938()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_23BA80970@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA71E3C((void *)(v1 + 16), (unint64_t *)&unk_26ADC7F68, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

uint64_t sub_23BA809B0@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA71E3C((void *)(v1 + 16), &qword_26ADC7F30, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

uint64_t sub_23BA809F0@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA71E3C((void *)(v1 + 16), &qword_26ADC7F50, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

uint64_t sub_23BA80A30@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA71E3C((void *)(v1 + 16), (unint64_t *)&unk_26ADC7F20, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

uint64_t sub_23BA80A70@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA71E3C((void *)(v1 + 16), &qword_26ADC7F40, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

uint64_t sub_23BA80AB0@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA71E3C((void *)(v1 + 16), &qword_26ADC80C0, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

uint64_t sub_23BA80AF0@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA71E3C((void *)(v1 + 16), &qword_26ADC80B8, (uint64_t (*)(unsigned char *, uint64_t))sub_23BA6E620, a1);
}

uint64_t sub_23BA80B30(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 24);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_23BA850D8;
  *(_OWORD *)(v5 + 192) = v6;
  *(void *)(v5 + 184) = v4;
  *(void *)(v5 + 176) = a1;
  return MEMORY[0x270FA2498](sub_23BA72A00, 0, 0);
}

uint64_t sub_23BA80BF4(uint64_t a1)
{
  return sub_23BA74954(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), "Fetching app config for stock search for requestID: %s");
}

uint64_t sub_23BA80C18()
{
  return objectdestroy_36Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_23BA80C30(uint64_t a1, uint64_t a2)
{
  return sub_23BA7361C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_23BA80C50(uint64_t *a1, uint64_t a2)
{
  return sub_23BA783F8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), &qword_268A75540, (uint64_t (*)(uint64_t))type metadata accessor for StockSearchResult);
}

uint64_t sub_23BA80CA4(uint64_t a1, uint64_t a2)
{
  return sub_23BA7A934(a1, a2, *(void (**)(char *))(v2 + 16), *(void *)(v2 + 24), &qword_268A75538, (void (*)(uint64_t))type metadata accessor for StockSearchResult, (uint64_t (*)(void))type metadata accessor for StockSearchResult);
}

uint64_t sub_23BA80CF0()
{
  return objectdestroy_36Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_23BA80D08(void *a1)
{
  return sub_23BA7AA20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(char *))(v1 + 32), *(void *)(v1 + 40), &qword_268A75538, (void (*)(uint64_t))type metadata accessor for StockSearchResult, "Stock search failed for requestID: %s, error: %s");
}

uint64_t sub_23BA80D4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746C7561666564 && a2 == 0xE700000000000000;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E4F646568636163 && a2 == 0xEA0000000000796CLL || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023BADDD30 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614365726F6E6769 && a2 == 0xEB00000000656863 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6143726566657270 && a2 == 0xEB00000000656863 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BADDD50)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_23BA80FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v52 = sub_23BAD7350();
  uint64_t v5 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v50 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_23BAD7AA0();
  uint64_t v7 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StockChart.Entry(0);
  uint64_t v48 = *(void *)(v10 - 8);
  int64_t v49 = (int *)v10;
  MEMORY[0x270FA5388](v10);
  int64_t v12 = (void *)((char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (v13)
  {
    v42[1] = v3;
    uint64_t v57 = MEMORY[0x263F8EE78];
    sub_23BAB9C4C(0, v13, 0);
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v45 = *(void *)(v15 + 56);
    uint64_t v46 = v16;
    uint64_t v43 = (void (**)(char *, uint64_t))(v15 - 8);
    uint64_t v44 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v47 = v15;
    uint64_t v19 = v50;
    uint64_t v18 = v51;
    do
    {
      v46(v9, v17, v18);
      uint64_t v55 = v53;
      uint64_t v56 = v54;
      swift_bridgeObjectRetain();
      sub_23BAD8280();
      sub_23BAD7A40();
      sub_23BA85084((unint64_t *)&qword_26ADC91A0, MEMORY[0x263F07490]);
      uint64_t v20 = v52;
      sub_23BAD8870();
      sub_23BAD8280();
      swift_bridgeObjectRelease();
      (*v44)(v19, v20);
      uint64_t v21 = v56;
      *int64_t v12 = v55;
      v12[1] = v21;
      uint64_t v22 = v49;
      sub_23BAD7A40();
      uint64_t v23 = sub_23BAD7A70();
      uint64_t v24 = (char *)v12 + v22[6];
      *(void *)uint64_t v24 = v23;
      v24[8] = v25 & 1;
      uint64_t v26 = sub_23BAD7A80();
      uint64_t v27 = (char *)v12 + v22[7];
      *(void *)uint64_t v27 = v26;
      v27[8] = v28 & 1;
      uint64_t v29 = sub_23BAD7A60();
      uint64_t v30 = (char *)v12 + v22[8];
      *(void *)uint64_t v30 = v29;
      v30[8] = v31 & 1;
      uint64_t v32 = sub_23BAD7A50();
      uint64_t v33 = (char *)v12 + v22[9];
      *(void *)uint64_t v33 = v32;
      v33[8] = v34 & 1;
      uint64_t v35 = sub_23BAD7A90();
      char v37 = v36;
      (*v43)(v9, v18);
      uint64_t v38 = (char *)v12 + v22[10];
      *(void *)uint64_t v38 = v35;
      v38[8] = v37 & 1;
      uint64_t v14 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23BAB9C4C(0, *(void *)(v14 + 16) + 1, 1);
        uint64_t v14 = v57;
      }
      unint64_t v40 = *(void *)(v14 + 16);
      unint64_t v39 = *(void *)(v14 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_23BAB9C4C(v39 > 1, v40 + 1, 1);
        uint64_t v14 = v57;
      }
      *(void *)(v14 + 16) = v40 + 1;
      sub_23BA84248((uint64_t)v12, v14+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v40, type metadata accessor for StockChart.Entry);
      v17 += v45;
      --v13;
    }
    while (v13);
  }
  return v14;
}

uint64_t sub_23BA81438(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_23BAD8410();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_23BABA3D4(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_23BA814D0(uint64_t a1)
{
  return sub_23BA74954(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), "Fetching app config for stock metadata fetch for requestID: %s");
}

uint64_t sub_23BA814F8(uint64_t a1, uint64_t a2)
{
  return sub_23BA81804(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, unint64_t, void, void, void, char))sub_23BA74B64);
}

uint64_t sub_23BA81524(uint64_t *a1, uint64_t a2)
{
  return sub_23BA783F8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), &qword_268A75500, (uint64_t (*)(uint64_t))type metadata accessor for StockResult);
}

uint64_t sub_23BA81578(uint64_t a1, uint64_t a2)
{
  return sub_23BA7A934(a1, a2, *(void (**)(char *))(v2 + 16), *(void *)(v2 + 24), &qword_268A75468, (void (*)(uint64_t))type metadata accessor for StockResult, (uint64_t (*)(void))type metadata accessor for StockResult);
}

uint64_t sub_23BA815C4()
{
  return objectdestroy_36Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_23BA815DC(void *a1)
{
  return sub_23BA7AA20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(char *))(v1 + 32), *(void *)(v1 + 40), &qword_268A75468, (void (*)(uint64_t))type metadata accessor for StockResult, "Stock metadata fetch failed for requestID: %s, error: %s");
}

uint64_t sub_23BA81624()
{
  return sub_23BA819F0((void (*)(uint64_t, void *, void *, uint64_t, uint64_t))StockService.fetchStocks(for:cachePolicy:networkSession:completion:));
}

uint64_t sub_23BA81640()
{
  return sub_23BA81ACC((void (*)(uint64_t, void *, char *, uint64_t, uint64_t))StockService.fetchStocks(for:cachePolicy:networkSession:completion:));
}

uint64_t sub_23BA81658(uint64_t a1)
{
  return sub_23BA74954(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), "Fetching app config for quote fetch for requestID: %s");
}

uint64_t objectdestroy_51Tm()
{
  uint64_t v1 = *(void *)(type metadata accessor for StockService.NetworkSession(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_bridgeObjectRelease();
  sub_23BA6ED18();
  uint64_t v6 = v5;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v3, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v0 + v3 + *(int *)(v6 + 48);
    uint64_t v8 = sub_23BAD7350();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 17, v2 | 7);
}

uint64_t sub_23BA817D8(uint64_t a1, uint64_t a2)
{
  return sub_23BA81804(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, unint64_t, void, void, void, char))sub_23BA767BC);
}

uint64_t sub_23BA81804(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, unint64_t, void, void, void, char))
{
  uint64_t v7 = *(void *)(type metadata accessor for StockService.NetworkSession(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v12 = *(unsigned char *)(v3 + v10 + 16);
  return a3(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), v3 + v8, *(void *)(v3 + v9), *(void *)(v3 + v10), *(void *)(v3 + v10 + 8), v12);
}

uint64_t sub_23BA818D8(uint64_t *a1, uint64_t a2)
{
  return sub_23BA783F8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), &qword_268A754E0, (uint64_t (*)(uint64_t))type metadata accessor for QuoteResult);
}

uint64_t sub_23BA8192C(uint64_t a1, uint64_t a2)
{
  return sub_23BA7A934(a1, a2, *(void (**)(char *))(v2 + 16), *(void *)(v2 + 24), &qword_268A754D8, (void (*)(uint64_t))type metadata accessor for QuoteResult, (uint64_t (*)(void))type metadata accessor for QuoteResult);
}

uint64_t sub_23BA81978()
{
  return objectdestroy_36Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_23BA81990(void *a1)
{
  return sub_23BA7AA20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(char *))(v1 + 32), *(void *)(v1 + 40), &qword_268A754D8, (void (*)(uint64_t))type metadata accessor for QuoteResult, "Quote fetch failed for requestID: %s, error: %s");
}

uint64_t sub_23BA819D8()
{
  return sub_23BA819F0((void (*)(uint64_t, void *, void *, uint64_t, uint64_t))StockService.fetchQuotes(for:cachePolicy:networkSession:completion:));
}

uint64_t sub_23BA819F0(void (*a1)(uint64_t, void *, void *, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(sub_23BAD7350() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23BA78CC8(*(void *)(v1 + 16), *(void *)(v1 + 24), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned __int8 *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), *(void *)(v1 + ((v5 + 39) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v5 + 39) & 0xFFFFFFFFFFFFFFF8) + 8), a1);
}

uint64_t sub_23BA81AB4()
{
  return sub_23BA81ACC((void (*)(uint64_t, void *, char *, uint64_t, uint64_t))StockService.fetchQuotes(for:cachePolicy:networkSession:completion:));
}

uint64_t sub_23BA81ACC(void (*a1)(uint64_t, void *, char *, uint64_t, uint64_t))
{
  return sub_23BA78B6C(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1);
}

uint64_t sub_23BA81AF8(uint64_t a1)
{
  return sub_23BA74954(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), "Fetching app config for quote detail fetch for requestID: %s");
}

uint64_t sub_23BA81B20(uint64_t a1, uint64_t a2)
{
  return sub_23BA81804(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, unint64_t, void, void, void, char))sub_23BA77BE8);
}

uint64_t sub_23BA81B4C(uint64_t *a1, uint64_t a2)
{
  return sub_23BA783F8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), &qword_268A754B8, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetailResult);
}

uint64_t sub_23BA81BA0(uint64_t a1, uint64_t a2)
{
  return sub_23BA7A934(a1, a2, *(void (**)(char *))(v2 + 16), *(void *)(v2 + 24), &qword_268A754B0, (void (*)(uint64_t))type metadata accessor for QuoteDetailResult, (uint64_t (*)(void))type metadata accessor for QuoteDetailResult);
}

uint64_t sub_23BA81BEC()
{
  return objectdestroy_36Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_23BA81C04(void *a1)
{
  return sub_23BA7AA20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(char *))(v1 + 32), *(void *)(v1 + 40), &qword_268A754B0, (void (*)(uint64_t))type metadata accessor for QuoteDetailResult, "Quote detail fetch failed for requestID: %s, error: %s");
}

uint64_t sub_23BA81C4C()
{
  return sub_23BA819F0((void (*)(uint64_t, void *, void *, uint64_t, uint64_t))StockService.fetchQuoteDetails(for:cachePolicy:networkSession:completion:));
}

uint64_t sub_23BA81C68()
{
  return sub_23BA81ACC((void (*)(uint64_t, void *, char *, uint64_t, uint64_t))StockService.fetchQuoteDetails(for:cachePolicy:networkSession:completion:));
}

uint64_t sub_23BA81C80()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23BA81CB8(uint64_t a1)
{
  return sub_23BA74954(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), "Fetching app config for chart fetch for requestID: %s");
}

uint64_t sub_23BA81CDC()
{
  uint64_t v1 = *(void *)(type metadata accessor for StockService.NetworkSession(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_bridgeObjectRelease();
  sub_23BA6ED18();
  uint64_t v6 = v5;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v3, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v0 + v3 + *(int *)(v6 + 48);
    uint64_t v8 = sub_23BAD7350();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, ((v3 + v4 + 31) & 0xFFFFFFFFFFFFFFF8) + 17, v2 | 7);
}

uint64_t sub_23BA81E38(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for StockService.NetworkSession(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  return sub_23BA797A0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), v2 + v6, *(void *)(v2 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned __int8 *)(v2 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(void *)(v2 + ((v7 + 31) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v7 + 31) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(v2 + ((v7 + 31) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_23BA81F10()
{
  return objectdestroy_36Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_23BA81F28(uint64_t a1, uint64_t a2)
{
  return sub_23BA7A0AC(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_23BA81F48()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23BA81F80(uint64_t a1, uint64_t a2)
{
  return sub_23BA7A934(a1, a2, *(void (**)(char *))(v2 + 16), *(void *)(v2 + 24), &qword_268A75490, (void (*)(uint64_t))type metadata accessor for StockChartResult, (uint64_t (*)(void))type metadata accessor for StockChartResult);
}

uint64_t sub_23BA81FCC()
{
  return objectdestroy_36Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_36Tm(void (*a1)(void))
{
  swift_bridgeObjectRelease();
  a1(*(void *)(v1 + 40));
  return MEMORY[0x270FA0238](v1, 48, 7);
}

uint64_t sub_23BA82034(void *a1)
{
  return sub_23BA7AA20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(char *))(v1 + 32), *(void *)(v1 + 40), &qword_268A75490, (void (*)(uint64_t))type metadata accessor for StockChartResult, "Chart fetch failed for requestID: %s, error: %s");
}

uint64_t sub_23BA82078()
{
  uint64_t v1 = sub_23BAD7350();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (v4 + *(void *)(v2 + 64) + 55) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, v6 + 16, v5);
}

uint64_t sub_23BA82178()
{
  uint64_t v1 = *(void *)(sub_23BAD7350() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  unint64_t v4 = (v3 + 31) & 0xFFFFFFFFFFFFFFF8;
  return sub_23BA7B110(*(void *)(v0 + 16), *(void *)(v0 + 24), v0 + v2, *(void *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(void *)(v0 + v4), *(void *)(v0 + v4 + 8), *(unsigned char *)(v0 + v4 + 16), *(void *)(v0 + ((v3 + 55) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 55) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23BA82238()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_23BA82278()
{
  return sub_23BA7AFA8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_23BA82290(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 64);
  char v10 = *(unsigned char *)(v1 + 40);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_23BA850D8;
  return sub_23BA7B818(a1, v4, v5, v6, v10, v7, v8, v9);
}

uint64_t sub_23BA82384(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_23BA808D4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_23BA823F4()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_23BA82434()
{
  return sub_23BA7D638(v0[2], v0[3], v0[4]);
}

void sub_23BA82440(uint64_t a1)
{
  sub_23BA7E268(a1, *(void (**)(void **))(v1 + 16));
}

uint64_t sub_23BA8245C()
{
  uint64_t v1 = sub_23BAD7350();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_23BA8250C()
{
  uint64_t v1 = *(void *)(sub_23BAD7350() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v3 + 8);
  int v8 = *(unsigned __int8 *)(v0 + 32);
  return sub_23BA7DEA4(v4, v5, v8, v0 + v2, v6, v7);
}

uint64_t sub_23BA825B0()
{
  return type metadata accessor for StockService(0);
}

uint64_t type metadata accessor for StockService(uint64_t a1)
{
  return sub_23BA825D8(a1, (uint64_t *)&unk_26ADC8098);
}

uint64_t sub_23BA825D8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_23BA82610()
{
  sub_23BA808D4(319, &qword_26ADC7F90, MEMORY[0x263F7CDB0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for StockService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StockService);
}

uint64_t dispatch thunk of StockService.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t destroy for StockService.Configuration()
{
  return swift_bridgeObjectRelease();
}

void *_s9StocksKit12StockServiceC13ConfigurationOwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StockService.Configuration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for StockService.Configuration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for StockService.Configuration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StockService.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_23BA828D4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_23BA828F0(void *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *__n128 result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StockService.Configuration()
{
  return &type metadata for StockService.Configuration;
}

uint64_t *initializeBufferWithCopyOfBuffer for StockService.NetworkSession(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    sub_23BA6ED18();
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = *(int *)(v8 + 48);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_23BAD7350();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      *(uint64_t *)((char *)a1 + *(int *)(v8 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 64));
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
  }
  return a1;
}

uint64_t destroy for StockService.NetworkSession(uint64_t a1)
{
  sub_23BA6ED18();
  uint64_t v3 = v2;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v3 + 48);
    uint64_t v6 = sub_23BAD7350();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  return result;
}

void *initializeWithCopy for StockService.NetworkSession(void *a1, void *a2, uint64_t a3)
{
  sub_23BA6ED18();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = *(int *)(v7 + 48);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_23BAD7350();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    *(void *)((char *)a1 + *(int *)(v7 + 64)) = *(void *)((char *)a2 + *(int *)(v7 + 64));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

void *assignWithCopy for StockService.NetworkSession(void *a1, void *a2, uint64_t a3)
{
  sub_23BA6ED18();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v18 = *(int *)(v7 + 48);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_23BAD7350();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
      *(void *)((char *)a1 + *(int *)(v7 + 64)) = *(void *)((char *)a2 + *(int *)(v7 + 64));
      return a1;
    }
    sub_23BA845CC((uint64_t)a1, (uint64_t (*)(void))sub_23BA6ED18);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v12 = *(int *)(v7 + 48);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_23BAD7350();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  *(void *)((char *)a1 + *(int *)(v7 + 64)) = *(void *)((char *)a2 + *(int *)(v7 + 64));
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

_OWORD *initializeWithTake for StockService.NetworkSession(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  sub_23BA6ED18();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v9 = *(int *)(v7 + 48);
    int v10 = (char *)a1 + v9;
    int v11 = (char *)a2 + v9;
    uint64_t v12 = sub_23BAD7350();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    *(void *)((char *)a1 + *(int *)(v7 + 64)) = *(void *)((char *)a2 + *(int *)(v7 + 64));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for StockService.NetworkSession(void *a1, void *a2, uint64_t a3)
{
  sub_23BA6ED18();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = *(int *)(v7 + 48);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_23BAD7350();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
      *(void *)((char *)a1 + *(int *)(v7 + 64)) = *(void *)((char *)a2 + *(int *)(v7 + 64));
      return a1;
    }
    sub_23BA845CC((uint64_t)a1, (uint64_t (*)(void))sub_23BA6ED18);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v12 = *(int *)(v7 + 48);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_23BAD7350();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  *(void *)((char *)a1 + *(int *)(v7 + 64)) = *(void *)((char *)a2 + *(int *)(v7 + 64));
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockService.NetworkSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23BA83278);
}

uint64_t sub_23BA83278(uint64_t a1, uint64_t a2)
{
  sub_23BA6ED18();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StockService.NetworkSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23BA832F8);
}

uint64_t sub_23BA832F8(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_23BA6ED18();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_23BA83378(uint64_t a1)
{
  sub_23BA6ED18();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_23BA833E0(uint64_t a1, uint64_t a2)
{
  sub_23BA6ED18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t sub_23BA83450()
{
  uint64_t result = sub_23BAD7350();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_23BA8350C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_23BA83524(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StockService.CachePolicy()
{
  return &type metadata for StockService.CachePolicy;
}

id sub_23BA83550(id result, id a2, char a3)
{
  if (a3 == 1) {
    return result;
  }
  if (!a3) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void destroy for StockService.Errors(uint64_t a1)
{
}

void sub_23BA83580(void *a1, id a2, char a3)
{
  if (a3 == 1)
  {
  }
  else if (!a3)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t _s9StocksKit12StockServiceC6ErrorsOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_23BA83550(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for StockService.Errors(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_23BA83550(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_23BA83580(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for StockService.Errors(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_23BA83580(v4, v5, v6);
  return a1;
}

uint64_t _s9StocksKit12StockServiceC11CachePolicyOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s9StocksKit12StockServiceC11CachePolicyOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockService.Errors()
{
  return &type metadata for StockService.Errors;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for StockService.CachePolicy.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StockService.CachePolicy.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BA83890);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_23BA838B8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_23BA838C0(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for StockService.CachePolicy.CodingKeys()
{
  return &type metadata for StockService.CachePolicy.CodingKeys;
}

ValueMetadata *type metadata accessor for StockService.CachePolicy.DefaultCodingKeys()
{
  return &type metadata for StockService.CachePolicy.DefaultCodingKeys;
}

ValueMetadata *type metadata accessor for StockService.CachePolicy.CachedOnlyCodingKeys()
{
  return &type metadata for StockService.CachePolicy.CachedOnlyCodingKeys;
}

ValueMetadata *type metadata accessor for StockService.CachePolicy.CachedOnlyMaxAgeCodingKeys()
{
  return &type metadata for StockService.CachePolicy.CachedOnlyMaxAgeCodingKeys;
}

ValueMetadata *type metadata accessor for StockService.CachePolicy.IgnoreCacheCodingKeys()
{
  return &type metadata for StockService.CachePolicy.IgnoreCacheCodingKeys;
}

ValueMetadata *type metadata accessor for StockService.CachePolicy.PreferCacheCodingKeys()
{
  return &type metadata for StockService.CachePolicy.PreferCacheCodingKeys;
}

uint64_t getEnumTagSinglePayload for BundleJSONDecoderError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s9StocksKit12StockServiceC11CachePolicyO26CachedOnlyMaxAgeCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x23BA83A20);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockService.CachePolicy.PreferCacheMaxAgeCodingKeys()
{
  return &type metadata for StockService.CachePolicy.PreferCacheMaxAgeCodingKeys;
}

unint64_t sub_23BA83A5C()
{
  unint64_t result = qword_268A75450;
  if (!qword_268A75450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75450);
  }
  return result;
}

unint64_t sub_23BA83AB4()
{
  unint64_t result = qword_268A75458;
  if (!qword_268A75458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75458);
  }
  return result;
}

unint64_t sub_23BA83B0C()
{
  unint64_t result = qword_268A75460;
  if (!qword_268A75460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75460);
  }
  return result;
}

unint64_t sub_23BA83B64()
{
  unint64_t result = qword_26ADC9590;
  if (!qword_26ADC9590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9590);
  }
  return result;
}

unint64_t sub_23BA83BBC()
{
  unint64_t result = qword_26ADC9588;
  if (!qword_26ADC9588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9588);
  }
  return result;
}

unint64_t sub_23BA83C14()
{
  unint64_t result = qword_26ADC95A8;
  if (!qword_26ADC95A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC95A8);
  }
  return result;
}

unint64_t sub_23BA83C6C()
{
  unint64_t result = qword_26ADC95A0;
  if (!qword_26ADC95A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC95A0);
  }
  return result;
}

unint64_t sub_23BA83CC4()
{
  unint64_t result = qword_26ADC95C0;
  if (!qword_26ADC95C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC95C0);
  }
  return result;
}

unint64_t sub_23BA83D1C()
{
  unint64_t result = qword_26ADC95B8;
  if (!qword_26ADC95B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC95B8);
  }
  return result;
}

unint64_t sub_23BA83D74()
{
  unint64_t result = qword_26ADC95D8;
  if (!qword_26ADC95D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC95D8);
  }
  return result;
}

unint64_t sub_23BA83DCC()
{
  unint64_t result = qword_26ADC95D0;
  if (!qword_26ADC95D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC95D0);
  }
  return result;
}

unint64_t sub_23BA83E24()
{
  unint64_t result = qword_26ADC9548;
  if (!qword_26ADC9548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9548);
  }
  return result;
}

unint64_t sub_23BA83E7C()
{
  unint64_t result = qword_26ADC9540;
  if (!qword_26ADC9540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9540);
  }
  return result;
}

unint64_t sub_23BA83ED4()
{
  unint64_t result = qword_26ADC9560;
  if (!qword_26ADC9560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9560);
  }
  return result;
}

unint64_t sub_23BA83F2C()
{
  unint64_t result = qword_26ADC9558;
  if (!qword_26ADC9558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9558);
  }
  return result;
}

unint64_t sub_23BA83F84()
{
  unint64_t result = qword_26ADC9578;
  if (!qword_26ADC9578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9578);
  }
  return result;
}

unint64_t sub_23BA83FDC()
{
  unint64_t result = qword_26ADC9570;
  if (!qword_26ADC9570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9570);
  }
  return result;
}

uint64_t objectdestroy_63Tm()
{
  uint64_t v1 = sub_23BAD7350();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, v6 + 16, v5);
}

uint64_t objectdestroy_66Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

unint64_t sub_23BA84174()
{
  unint64_t result = qword_26ADC8080;
  if (!qword_26ADC8080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC8080);
  }
  return result;
}

uint64_t sub_23BA841C8(uint64_t a1, uint64_t a2)
{
  sub_23BA84DD0(0, &qword_268A75468, (void (*)(uint64_t))type metadata accessor for StockResult);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA84248(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23BA842B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23BAD8710();
  __break(1u);
  return result;
}

uint64_t sub_23BA843A8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23BA843D0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  char v8 = *(unsigned char *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  char v10 = *(unsigned char *)(v1 + 32);
  int v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_23BA850D8;
  return sub_23BA7C54C(a1, v4, v5, v10, v6, v7, v8, v9);
}

void sub_23BA844C0()
{
  if (!qword_26ADC9730)
  {
    sub_23BA84528(255, (unint64_t *)&qword_26ADC9728);
    unint64_t v0 = sub_23BAD84E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC9730);
    }
  }
}

uint64_t sub_23BA84528(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23BA84564(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23BA845CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23BA8462C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_23BA84DD0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_23BA84688()
{
  uint64_t v1 = sub_23BAD7AD0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_23BA84784(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_23BAD7AD0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v6 + 8);
  uint64_t v12 = *(void *)(v1 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_23BA850D8;
  return sub_23BA7A284(a1, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_23BA848CC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_23BA850D8;
  return sub_23BA784B8(a1, v4, v5, v7, v6);
}

uint64_t sub_23BA8498C()
{
  return swift_release();
}

uint64_t sub_23BA84998(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_23BA850D8;
  return sub_23BA76FCC(a1, v4, v5, v7, v6);
}

void sub_23BA84A58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, MEMORY[0x263F8D310], v7, MEMORY[0x263F8D320]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_23BA84ACC()
{
  return sub_23BA7E5B8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_23BA84AEC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23BA84B14()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23BA84B24()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23BA84B50(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_23BA84C10;
  return sub_23BA75810(a1, v4, v5, v7, v6);
}

uint64_t sub_23BA84C10()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_23BA84D04()
{
  if (!qword_268A75518)
  {
    unint64_t v0 = sub_23BAD8700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268A75518);
    }
  }
}

uint64_t sub_23BA84D6C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23BA808D4(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_23BA84DD0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_23BA84174();
    unint64_t v4 = sub_23BAD8990();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t objectdestroy_200Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_23BA84E8C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_23BA850D8;
  return sub_23BA73848(a1, v4, v5, v7, v6);
}

uint64_t sub_23BA84F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_23BA84FA8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_23BAD8880();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_23BA84FF0()
{
  if (!qword_268A75558)
  {
    sub_23BAD8A30();
    sub_23BA85084(&qword_268A75560, MEMORY[0x263F07EC8]);
    unint64_t v0 = sub_23BAD8580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268A75558);
    }
  }
}

uint64_t sub_23BA85084(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BA85140()
{
  return sub_23BA84AEC();
}

uint64_t QuoteResult.quotes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t QuoteResult.source.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for QuoteResult() + 20);
  return sub_23BA851F4(v3, a1);
}

uint64_t type metadata accessor for QuoteResult()
{
  uint64_t result = qword_268A75570;
  if (!qword_268A75570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23BA851F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DataSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for QuoteResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    void *v7 = *(uint64_t *)((char *)a2 + v6);
    v7[1] = v9;
    uint64_t v10 = type metadata accessor for DataSource(0);
    uint64_t v11 = *(int *)(v10 + 20);
    __dst = (char *)v7 + v11;
    uint64_t v26 = v10;
    uint64_t v12 = &v8[v11];
    uint64_t v13 = type metadata accessor for DataSource.Logo(0);
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
      memcpy(__dst, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v17 = sub_23BAD78E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v12, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v18 = *(int *)(v26 + 24);
    uint64_t v19 = (char *)v7 + v18;
    uint64_t v20 = &v8[v18];
    uint64_t v21 = sub_23BAD72C0();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
  }
  return v5;
}

uint64_t destroy for QuoteResult(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for DataSource(0);
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = type metadata accessor for DataSource.Logo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = sub_23BAD78E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }
  uint64_t v9 = v4 + *(int *)(v5 + 24);
  uint64_t v10 = sub_23BAD72C0();
  uint64_t v13 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v10);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
    return v12(v9, v10);
  }
  return result;
}

void *initializeWithCopy for QuoteResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (void *)((char *)a1 + v3);
  uint64_t v5 = (char *)a2 + v3;
  uint64_t v6 = *(void *)((char *)a2 + v3 + 8);
  *uint64_t v4 = *(void *)((char *)a2 + v3);
  v4[1] = v6;
  uint64_t v7 = type metadata accessor for DataSource(0);
  uint64_t v8 = *(int *)(v7 + 20);
  __dst = (char *)v4 + v8;
  uint64_t v9 = &v5[v8];
  uint64_t v10 = type metadata accessor for DataSource.Logo(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_23BAD78E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(__dst, v9, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v15 = *(int *)(v7 + 24);
  uint64_t v16 = (char *)v4 + v15;
  uint64_t v17 = &v5[v15];
  uint64_t v18 = sub_23BAD72C0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

void *assignWithCopy for QuoteResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  char v31 = a1;
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  void *v7 = *(void *)((char *)a2 + v6);
  v7[1] = *(void *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for DataSource(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = &v8[v10];
  uint64_t v13 = type metadata accessor for DataSource.Logo(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = sub_23BAD78E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v11, v12, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_23BA6BB6C((uint64_t)v11);
LABEL_6:
    sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v30 = sub_23BAD78E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v11, v12, v30);
LABEL_7:
  uint64_t v20 = *(int *)(v9 + 24);
  uint64_t v21 = (char *)v7 + v20;
  uint64_t v22 = &v8[v20];
  uint64_t v23 = sub_23BAD72C0();
  uint64_t v24 = *(void *)(v23 - 8);
  char v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v21, v22, v23);
      return v31;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    return v31;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return v31;
}

void *initializeWithTake for QuoteResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *(_OWORD *)((char *)a1 + v4) = *(_OWORD *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for DataSource(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = &v5[v8];
  uint64_t v10 = &v6[v8];
  uint64_t v11 = type metadata accessor for DataSource.Logo(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_23BAD78E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v9, v10, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = *(int *)(v7 + 24);
  int v16 = &v5[v15];
  int v17 = &v6[v15];
  uint64_t v18 = sub_23BAD72C0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

void *assignWithTake for QuoteResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v32 = a1;
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
  void *v7 = *(void *)((char *)a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for DataSource(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = (char *)v7 + v11;
  uint64_t v13 = &v8[v11];
  uint64_t v14 = type metadata accessor for DataSource.Logo(0);
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      uint64_t v19 = sub_23BAD78E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v12, v13, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_23BA6BB6C((uint64_t)v12);
LABEL_6:
    sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v31 = sub_23BAD78E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 40))(v12, v13, v31);
LABEL_7:
  uint64_t v21 = *(int *)(v10 + 24);
  uint64_t v22 = (char *)v7 + v21;
  uint64_t v23 = &v8[v21];
  uint64_t v24 = sub_23BAD72C0();
  uint64_t v25 = *(void *)(v24 - 8);
  int v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
      return v32;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    return v32;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return v32;
}

uint64_t getEnumTagSinglePayload for QuoteResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23BA862D8);
}

uint64_t sub_23BA862D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DataSource(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for QuoteResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23BA8639C);
}

void *sub_23BA8639C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DataSource(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_23BA86444()
{
  uint64_t result = type metadata accessor for DataSource(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t ChartRange.rawValue.getter()
{
  uint64_t result = 0x796144656E6FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6B656557656E6FLL;
      break;
    case 2:
      uint64_t result = 0x68746E6F4D656E6FLL;
      break;
    case 3:
      uint64_t result = 0x6E6F4D6565726874;
      break;
    case 4:
      uint64_t result = 0x68746E6F4D786973;
      break;
    case 5:
      uint64_t result = 0x61446F5472616579;
      break;
    case 6:
      uint64_t result = 0x72616559656E6FLL;
      break;
    case 7:
      unsigned int v2 = 1500477300;
      goto LABEL_10;
    case 8:
      uint64_t result = 0x7261655965766966;
      break;
    case 9:
      unsigned int v2 = 1500407156;
LABEL_10:
      uint64_t result = v2 | 0x7372616500000000;
      break;
    case 0xA:
      uint64_t result = 7105633;
      break;
    default:
      return result;
  }
  return result;
}

void *static ChartRange.defaultCases.getter()
{
  return &unk_26EEFFC50;
}

StocksKit::ChartRange_optional __swiftcall ChartRange.init(rawValue:)(Swift::String rawValue)
{
  unsigned int v2 = v1;
  unint64_t v3 = sub_23BAD8720();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *unsigned int v2 = v5;
  return result;
}

uint64_t sub_23BA86694(unsigned __int8 *a1, char *a2)
{
  return sub_23BA9AD60(*a1, *a2);
}

uint64_t sub_23BA866A0()
{
  return sub_23BAD8980();
}

uint64_t sub_23BA866E8()
{
  return sub_23BABDE50();
}

uint64_t sub_23BA866F0()
{
  return sub_23BAD8980();
}

StocksKit::ChartRange_optional sub_23BA86734(Swift::String *a1)
{
  return ChartRange.init(rawValue:)(*a1);
}

uint64_t sub_23BA86740@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ChartRange.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ChartRange.id.getter()
{
  uint64_t result = 0x796144656E6FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6B656557656E6FLL;
      break;
    case 2:
      uint64_t result = 0x68746E6F4D656E6FLL;
      break;
    case 3:
      uint64_t result = 0x6E6F4D6565726874;
      break;
    case 4:
      uint64_t result = 0x68746E6F4D786973;
      break;
    case 5:
      uint64_t result = 0x61446F5472616579;
      break;
    case 6:
      uint64_t result = 0x72616559656E6FLL;
      break;
    case 7:
      unsigned int v2 = 1500477300;
      goto LABEL_10;
    case 8:
      uint64_t result = 0x7261655965766966;
      break;
    case 9:
      unsigned int v2 = 1500407156;
LABEL_10:
      uint64_t result = v2 | 0x7372616500000000;
      break;
    case 0xA:
      uint64_t result = 7105633;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_23BA868B8()
{
  unint64_t result = qword_268A75580;
  if (!qword_268A75580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75580);
  }
  return result;
}

uint64_t sub_23BA8690C()
{
  return MEMORY[0x263F8D320];
}

uint64_t sub_23BA86918@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ChartRange.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ChartRange(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ChartRange(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BA86A9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChartRange()
{
  return &type metadata for ChartRange;
}

uint64_t sub_23BA86AD4@<X0>(uint64_t a1@<X8>)
{
  void v28[2] = a1;
  sub_23BA86EFC();
  MEMORY[0x270FA5388](v1 - 8);
  int v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_23BAD72C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v28 - v9;
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v29 = v10;
  uint64_t v11 = sub_23BAD8090();
  __swift_project_value_buffer(v11, (uint64_t)qword_26ADCC840);
  uint64_t v12 = sub_23BAD8070();
  os_log_type_t v13 = sub_23BAD8470();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_23BA68000, v12, v13, "Reading bundled currency conversion data", v14, 2u);
    MEMORY[0x23ECCD620](v14, -1, -1);
  }

  type metadata accessor for StockService(0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v16 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  v28[1] = type metadata accessor for CurrencyConversionsResult();
  sub_23BAD7D50();
  swift_allocObject();
  sub_23BAD7D40();
  int v17 = (void *)sub_23BAD8230();
  int v18 = (void *)sub_23BAD8230();
  id v19 = objc_msgSend(v16, sel_URLForResource_withExtension_, v17, v18);

  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_10;
  }
  sub_23BAD72B0();

  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v20(v3, v8, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_10:
    sub_23BA86F54((uint64_t)v3);
    sub_23BA86FB0();
    swift_allocError();
    swift_willThrow();
    goto LABEL_11;
  }
  uint64_t v21 = v29;
  v20(v29, v3, v4);
  uint64_t v22 = v30;
  uint64_t v23 = sub_23BAD72D0();
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v21, v4);
  }
  else
  {
    uint64_t v26 = v23;
    unint64_t v27 = v24;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v21, v4);
    sub_23BA87004();
    sub_23BAD7D30();
    sub_23BA8705C(v26, v27);
  }
LABEL_11:

  return swift_release();
}

void sub_23BA86EFC()
{
  if (!qword_26ADC9198)
  {
    sub_23BAD72C0();
    unint64_t v0 = sub_23BAD84E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC9198);
    }
  }
}

uint64_t sub_23BA86F54(uint64_t a1)
{
  sub_23BA86EFC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23BA86FB0()
{
  unint64_t result = qword_268A75588;
  if (!qword_268A75588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75588);
  }
  return result;
}

unint64_t sub_23BA87004()
{
  unint64_t result = qword_26ADC96B0;
  if (!qword_26ADC96B0)
  {
    type metadata accessor for CurrencyConversionsResult();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC96B0);
  }
  return result;
}

uint64_t sub_23BA8705C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for BundleJSONDecoderError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x23BA87150);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BundleJSONDecoderError()
{
  return &type metadata for BundleJSONDecoderError;
}

ValueMetadata *type metadata accessor for BundleReader()
{
  return &type metadata for BundleReader;
}

unint64_t sub_23BA8719C()
{
  unint64_t result = qword_268A75590;
  if (!qword_268A75590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75590);
  }
  return result;
}

id sub_23BA87238()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoopAppActivityMonitor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NoopAppActivityMonitor()
{
  return self;
}

uint64_t sub_23BA87290@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  sub_23BA87A28(v1 + 24, (uint64_t)&v4);
  if (v5) {
    return sub_23BA6E620(&v4, a1);
  }
  sub_23BA87938((uint64_t)&v4);
  sub_23BAD8050();
  sub_23BA6E140(a1, (uint64_t)&v4);
  swift_beginAccess();
  sub_23BA87AB8((uint64_t)&v4, v1 + 24);
  return swift_endAccess();
}

uint64_t sub_23BA87344()
{
  type metadata accessor for StocksKitModule();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_23BA87380();
  qword_26ADCC830 = v0;
  return result;
}

uint64_t sub_23BA87380()
{
  uint64_t v1 = v0;
  uint64_t v23 = sub_23BAD8030();
  uint64_t v2 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388]();
  long long v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_23BAD7DE0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  int v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_23BA879C0(0, &qword_26ADC8198, (unint64_t *)&unk_26ADC7FA8, MEMORY[0x263F7CF00], MEMORY[0x263F8E0F8]);
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 0u;
  *(void *)(v0 + 56) = 0;
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23BAD9380;
  uint64_t v11 = sub_23BAD7C80();
  swift_allocObject();
  uint64_t v12 = sub_23BAD7C70();
  *(void *)(v10 + 56) = v11;
  *(void *)(v10 + 64) = sub_23BA87B98(&qword_26ADC7F80, MEMORY[0x263F7AF30]);
  *(void *)(v10 + 32) = v12;
  os_log_type_t v13 = (objc_class *)sub_23BAD7E50();
  id v14 = objc_msgSend(objc_allocWithZone(v13), sel_init);
  uint64_t v15 = MEMORY[0x263F7CEA8];
  *(void *)(v10 + 96) = v13;
  *(void *)(v10 + 104) = v15;
  *(void *)(v10 + 72) = v14;
  *(void *)(v10 + 136) = &type metadata for Assembly;
  *(void *)(v10 + 144) = sub_23BA87BE0();
  sub_23BA879C0(0, &qword_26ADC8190, &qword_26ADC7F88, MEMORY[0x263F7CD88], v9);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_23BAD9F20;
  uint64_t v17 = type metadata accessor for ServiceAssembly();
  uint64_t v18 = swift_allocObject();
  *(void *)(v16 + 56) = v17;
  *(void *)(v16 + 64) = sub_23BA87B98(&qword_26ADC80B0, (void (*)(uint64_t))type metadata accessor for ServiceAssembly);
  *(void *)(v16 + 32) = v18;
  uint64_t v19 = type metadata accessor for ManagerAssembly();
  uint64_t v20 = swift_allocObject();
  *(void *)(v16 + 96) = v19;
  *(void *)(v16 + 104) = sub_23BA87B98(&qword_26ADC80A8, (void (*)(uint64_t))type metadata accessor for ManagerAssembly);
  *(void *)(v16 + 72) = v20;
  *(void *)(v10 + 112) = v16;
  sub_23BAD7E00();
  swift_allocObject();
  sub_23BAD7DF0();
  void *v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AE0]), sel_init);
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7CDF0], v5);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7D038], v23);
  sub_23BAD8060();
  swift_allocObject();
  *(void *)(v1 + 16) = sub_23BAD8040();
  return v1;
}

uint64_t Assembly.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_23BA879C0(0, &qword_26ADC8190, &qword_26ADC7F88, MEMORY[0x263F7CD88], MEMORY[0x263F8E0F8]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23BAD9F20;
  uint64_t v3 = type metadata accessor for ServiceAssembly();
  uint64_t v4 = swift_allocObject();
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = sub_23BA87B98(&qword_26ADC80B0, (void (*)(uint64_t))type metadata accessor for ServiceAssembly);
  *(void *)(v2 + 32) = v4;
  uint64_t v5 = type metadata accessor for ManagerAssembly();
  uint64_t v6 = swift_allocObject();
  *(void *)(v2 + 96) = v5;
  uint64_t result = sub_23BA87B98(&qword_26ADC80A8, (void (*)(uint64_t))type metadata accessor for ManagerAssembly);
  *(void *)(v2 + 104) = result;
  *(void *)(v2 + 72) = v6;
  *a1 = v2;
  return result;
}

uint64_t sub_23BA878B4()
{
  swift_release();
  sub_23BA87938(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t Assembly.assemblies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA878FC()
{
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for StocksKitModule()
{
  return self;
}

ValueMetadata *type metadata accessor for Assembly()
{
  return &type metadata for Assembly;
}

uint64_t sub_23BA87938(uint64_t a1)
{
  sub_23BA879C0(0, &qword_26ADC7FA0, &qword_26ADC7F98, MEMORY[0x263F7CDB8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23BA879C0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_23BA87B48(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_23BA87A28(uint64_t a1, uint64_t a2)
{
  sub_23BA879C0(0, &qword_26ADC7FA0, &qword_26ADC7F98, MEMORY[0x263F7CDB8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA87AB8(uint64_t a1, uint64_t a2)
{
  sub_23BA879C0(0, &qword_26ADC7FA0, &qword_26ADC7F98, MEMORY[0x263F7CDB8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA87B48(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23BA87B98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23BA87BE0()
{
  unint64_t result = qword_268A75598;
  if (!qword_268A75598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75598);
  }
  return result;
}

uint64_t WatchlistResult.stocks.getter()
{
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for WatchlistResult()
{
  return &type metadata for WatchlistResult;
}

uint64_t sub_23BA87C4C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

StocksKit::PriceFormatter::Options __swiftcall PriceFormatter.Options.init(rawValue:)(StocksKit::PriceFormatter::Options rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static PriceFormatter.Options.capTwoFractionDigits.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static PriceFormatter.Options.showCurrencySymbol.getter(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t PriceFormatter.Options.rawValue.getter()
{
  return *(void *)v0;
}

void *sub_23BA87CCC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_23BA87CD8(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_23BA87CE0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_23BA87CF4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_23BA87D08@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23BA87D1C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_23BA87D4C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_23BA87D78@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_23BA87D9C(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_23BA87DB0(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_23BA87DC4(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_23BA87DD8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23BA87DEC(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_23BA87E00(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_23BA87E14(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_23BA87E28()
{
  return *v0 == 0;
}

uint64_t sub_23BA87E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_23BA87E50(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_23BA87E64@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_23BA87E74(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_23BA87E80(void *a1, void *a2)
{
  return *a1 == *a2;
}

id sub_23BA87E98(uint64_t a1)
{
  return sub_23BA87EEC(a1, 2, &qword_268A7BAF0);
}

id sub_23BA87EA8(uint64_t a1)
{
  return sub_23BA87EEC(a1, 3, &qword_268A7BAF8);
}

id sub_23BA87EB8()
{
  id result = sub_23BA87FCC(3);
  qword_268A7BB00 = (uint64_t)result;
  return result;
}

id sub_23BA87EDC(uint64_t a1)
{
  return sub_23BA87EEC(a1, 0, &qword_268A7BB08);
}

id sub_23BA87EEC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  objc_msgSend(v5, sel_setNumberStyle_, 1);
  objc_msgSend(v5, sel_setMinimumFractionDigits_, a2);
  objc_msgSend(v5, sel_setMaximumFractionDigits_, a2);
  id result = objc_msgSend(v5, sel_setMinimumIntegerDigits_, 1);
  *a3 = v5;
  return result;
}

id sub_23BA87F84()
{
  id result = sub_23BA87FCC(2);
  qword_268A7BB10 = (uint64_t)result;
  return result;
}

id sub_23BA87FA8()
{
  id result = sub_23BA87FCC(0);
  qword_268A7BB18 = (uint64_t)result;
  return result;
}

id sub_23BA87FCC(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  objc_msgSend(v2, sel_setNumberStyle_, 1);
  objc_msgSend(v2, sel_setMinimumFractionDigits_, a1);
  objc_msgSend(v2, sel_setMaximumFractionDigits_, a1);
  objc_msgSend(v2, sel_setMinimumIntegerDigits_, 1);
  uint64_t v3 = (void *)sub_23BAD8230();
  objc_msgSend(v2, sel_setPositivePrefix_, v3);

  uint64_t v4 = (void *)sub_23BAD8230();
  objc_msgSend(v2, sel_setNegativePrefix_, v4);

  return v2;
}

uint64_t PriceFormatter.format(price:style:options:)(uint64_t a1, void *a2, double a3)
{
  id v4 = (id)sub_23BA881D4(*a2, *(void *)a1, *(unsigned char *)(a1 + 8), a3);
  objc_msgSend(v4, sel_setNumberStyle_, 1);
  id v5 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a3);
  id v6 = objc_msgSend(v4, sel_stringFromNumber_, v5);

  if (v6)
  {
    uint64_t v7 = sub_23BAD8240();
  }
  else
  {

    return 0;
  }
  return v7;
}

id PriceFormatter.format(price:currencyCode:style:options:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, double a5)
{
  uint64_t v5 = *a3;
  char v6 = *((unsigned char *)a3 + 8);
  uint64_t v8 = *a4;
  uint64_t v9 = v5;
  char v10 = v6;
  return sub_23BA884D0(a1, a2, (uint64_t)&v9, &v8, a5);
}

uint64_t PriceFormatter.deinit()
{
  return v0;
}

uint64_t PriceFormatter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_23BA881D4(char a1, uint64_t a2, char a3, double a4)
{
  double v5 = fabs(a4);
  if (a4 != 0.0 && v5 < 5.0 && (a1 & 1) == 0)
  {
    if (a3)
    {
      if (qword_268A75288 != -1) {
        swift_once();
      }
      char v10 = &qword_268A7BAF8;
    }
    else
    {
      if (qword_268A75290 != -1) {
        swift_once();
      }
      char v10 = &qword_268A7BB00;
    }
  }
  else
  {
    if (a3)
    {
      if (a3 != 1)
      {
        if (!a2) {
          goto LABEL_18;
        }
        goto LABEL_40;
      }
      if ((~*(void *)&v5 & 0x7FF0000000000000) != 0)
      {
        if (v5 > -9.22337204e18)
        {
          if (v5 < 9.22337204e18)
          {
            if ((uint64_t)v5 < 1)
            {
LABEL_18:
              if (qword_268A75280 != -1) {
                swift_once();
              }
              char v10 = &qword_268A7BAF0;
              return *v10;
            }
            double v9 = log10(v5);
            if ((~*(void *)&v9 & 0x7FF0000000000000) != 0)
            {
              if (v9 > -9.22337204e18)
              {
                if (v9 < 9.22337204e18)
                {
                  if ((uint64_t)v9 < a2) {
                    goto LABEL_18;
                  }
LABEL_40:
                  if (qword_268A75298 == -1)
                  {
LABEL_41:
                    char v10 = &qword_268A7BB08;
                    return *v10;
                  }
LABEL_51:
                  swift_once();
                  goto LABEL_41;
                }
                goto LABEL_54;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          goto LABEL_47;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    if (v5 <= -9.22337204e18)
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (v5 >= 9.22337204e18)
    {
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    if ((uint64_t)v5 >= 1)
    {
      double v11 = log10(v5);
      if ((~*(void *)&v11 & 0x7FF0000000000000) == 0)
      {
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      if (v11 <= -9.22337204e18)
      {
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
      if (v11 >= 9.22337204e18)
      {
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      if ((uint64_t)v11 >= a2)
      {
        if (qword_268A752A8 == -1)
        {
LABEL_43:
          char v10 = &qword_268A7BB18;
          return *v10;
        }
LABEL_58:
        swift_once();
        goto LABEL_43;
      }
    }
    if (qword_268A752A0 != -1) {
      swift_once();
    }
    char v10 = &qword_268A7BB10;
  }
  return *v10;
}

id sub_23BA884D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, double a5)
{
  uint64_t v83 = a2;
  uint64_t v80 = a1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_23BA89148(0, (unint64_t *)&qword_268A755C0, MEMORY[0x263F07598], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v81 = (char *)v73 - v10;
  uint64_t v82 = sub_23BAD7490();
  uint64_t v84 = *(void *)(v82 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v82);
  os_log_type_t v13 = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v73 - v14;
  uint64_t v16 = sub_23BAD74B0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  int v79 = (char *)v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v73 - v21;
  MEMORY[0x270FA5388](v20);
  unint64_t v24 = (char *)v73 - v23;
  sub_23BA89148(0, &qword_268A755C8, MEMORY[0x263F07548], v8);
  MEMORY[0x270FA5388](v25 - 8);
  unint64_t v27 = (char *)v73 - v26;
  uint64_t v28 = *a4;
  uint64_t v29 = (void *)sub_23BA881D4(*a4, *(void *)a3, *(unsigned char *)(a3 + 8), a5);
  uint64_t v30 = v29;
  if ((v28 & 2) != 0 && v83)
  {
    id v76 = v29;
    sub_23BAD7420();
    sub_23BAD74A0();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v32 = v16;
    uint64_t v33 = v17 + 8;
    uint64_t v77 = v32;
    uint64_t v78 = v31;
    ((void (*)(char *))v31)(v24);
    sub_23BAD7470();
    uint64_t v35 = v84 + 8;
    char v34 = *(void (**)(char *, uint64_t))(v84 + 8);
    uint64_t v36 = v82;
    v34(v15, v82);
    uint64_t v37 = sub_23BAD73C0();
    uint64_t v38 = *(void *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v27, 1, v37) == 1)
    {
      sub_23BA89074((uint64_t)v27, &qword_268A755C8, MEMORY[0x263F07548]);
    }
    else
    {
      uint64_t v84 = v35;
      uint64_t v74 = _s9StocksKit8CurrencyV10identifierSSvg_0();
      uint64_t v75 = v44;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v37);
      sub_23BAD7420();
      sub_23BAD74A0();
      uint64_t v45 = v77;
      v73[1] = v33;
      v78(v22, v77);
      uint64_t v46 = (uint64_t)v81;
      sub_23BAD7480();
      v34(v13, v36);
      uint64_t v47 = sub_23BAD7400();
      uint64_t v48 = *(void *)(v47 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) != 1)
      {
        uint64_t v49 = _s9StocksKit8CurrencyV10identifierSSvg_0();
        uint64_t v51 = v50;
        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
        sub_23BA89148(0, &qword_268A755D0, (uint64_t (*)(uint64_t))sub_23BA890E4, MEMORY[0x263F8E0F8]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_23BAD9380;
        *(void *)(inited + 32) = sub_23BAD8240();
        *(void *)(inited + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v53;
        uint64_t v54 = v80;
        uint64_t v55 = v83;
        *(void *)(inited + 48) = v80;
        *(void *)(inited + 56) = v55;
        *(void *)(inited + 64) = sub_23BAD8240();
        *(void *)(inited + 72) = v56;
        uint64_t v57 = v75;
        *(void *)(inited + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v74;
        *(void *)(inited + 88) = v57;
        *(void *)(inited + 96) = sub_23BAD8240();
        *(void *)(inited + 104) = v58;
        *(void *)(inited + 112) = v49;
        *(void *)(inited + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v51;
        swift_bridgeObjectRetain();
        sub_23BAAEF74(inited);
        MEMORY[0x23ECCB8C0]();
        swift_bridgeObjectRelease();
        uint64_t v59 = v79;
        sub_23BAD73A0();
        uint64_t v60 = (void *)sub_23BAD73D0();
        id v61 = v76;
        objc_msgSend(v76, sel_setLocale_, v60);

        if (v54 == 7356999 && v55 == 0xE300000000000000 || (sub_23BAD88A0() & 1) != 0)
        {
          objc_msgSend(v61, sel_setNumberStyle_, 1);
          id v62 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a5);
          id v42 = objc_msgSend(v61, sel_stringFromNumber_, v62);

          if (!v42)
          {

            v78(v59, v45);
            return v42;
          }
          uint64_t v63 = sub_23BAD8240();
          uint64_t v65 = v64;

          sub_23BA89148(0, &qword_268A755E0, (uint64_t (*)(uint64_t))sub_23BA891AC, MEMORY[0x263F8E0F8]);
          uint64_t v66 = swift_allocObject();
          *(_OWORD *)(v66 + 16) = xmmword_23BAD9F20;
          uint64_t v67 = MEMORY[0x263F8D310];
          *(void *)(v66 + 56) = MEMORY[0x263F8D310];
          unint64_t v68 = sub_23BA89204();
          *(void *)(v66 + 32) = 0xD000000000000021;
          *(void *)(v66 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 0x800000023BADE180;
          *(void *)(v66 + 96) = v67;
          *(void *)(v66 + 104) = v68;
          *(void *)(v66 + 64) = v68;
          *(void *)(v66 + 72) = v63;
          *(void *)(v66 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v65;
          id v42 = (id)sub_23BAD8250();

          int v69 = v59;
          uint64_t v70 = v45;
        }
        else
        {
          objc_msgSend(v61, sel_setNumberStyle_, 2);
          id v71 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a5);
          id v72 = objc_msgSend(v61, sel_stringFromNumber_, v71);

          if (v72)
          {
            id v42 = (id)sub_23BAD8240();
          }
          else
          {

            id v42 = 0;
          }
          int v69 = v59;
          uint64_t v70 = v45;
        }
        v78(v69, v70);
        return v42;
      }
      swift_bridgeObjectRelease();
      sub_23BA89074(v46, (unint64_t *)&qword_268A755C0, MEMORY[0x263F07598]);
    }
  }
  else
  {
    id v39 = v29;
  }
  objc_msgSend(v30, sel_setNumberStyle_, 1);
  id v40 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a5);
  id v41 = objc_msgSend(v30, sel_stringFromNumber_, v40);

  if (v41)
  {
    id v42 = (id)sub_23BAD8240();
  }
  else
  {

    return 0;
  }
  return v42;
}

unint64_t sub_23BA88DEC()
{
  unint64_t result = qword_268A755A0;
  if (!qword_268A755A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A755A0);
  }
  return result;
}

unint64_t sub_23BA88E44()
{
  unint64_t result = qword_268A755A8;
  if (!qword_268A755A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A755A8);
  }
  return result;
}

unint64_t sub_23BA88E9C()
{
  unint64_t result = qword_268A755B0;
  if (!qword_268A755B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A755B0);
  }
  return result;
}

unint64_t sub_23BA88EF4()
{
  unint64_t result = qword_268A755B8;
  if (!qword_268A755B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A755B8);
  }
  return result;
}

uint64_t type metadata accessor for PriceFormatter()
{
  return self;
}

uint64_t method lookup function for PriceFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PriceFormatter);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PriceFormatter.Style(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PriceFormatter.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_23BA89024(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_23BA8903C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PriceFormatter.Style()
{
  return &type metadata for PriceFormatter.Style;
}

ValueMetadata *type metadata accessor for PriceFormatter.Options()
{
  return &type metadata for PriceFormatter.Options;
}

uint64_t sub_23BA89074(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_23BA89148(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_23BA890E4()
{
  if (!qword_268A755D8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268A755D8);
    }
  }
}

void sub_23BA89148(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_23BA891AC()
{
  unint64_t result = qword_268A755E8;
  if (!qword_268A755E8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268A755E8);
  }
  return result;
}

unint64_t sub_23BA89204()
{
  unint64_t result = qword_268A755F0;
  if (!qword_268A755F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A755F0);
  }
  return result;
}

uint64_t sub_23BA8925C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v43 = a2;
  sub_23BA89854(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v3 - 8);
  id v42 = (char *)&v36 - v4;
  uint64_t v40 = type metadata accessor for DataSource.Logo(0);
  uint64_t v5 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v37 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_23BAD7980();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v13 = (char *)&v36 - v12;
  uint64_t v14 = (void (*)(uint64_t))MEMORY[0x263F7AD88];
  sub_23BA89854(0, &qword_26ADC8258, MEMORY[0x263F7AD88]);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v36 - v19;
  sub_23BA89854(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v36 - v22;
  uint64_t v24 = sub_23BAD7860();
  uint64_t v38 = v25;
  uint64_t v39 = v24;
  uint64_t v41 = a1;
  sub_23BAD7850();
  sub_23BA90928((uint64_t)v20, (uint64_t)v18, &qword_26ADC8258, v14);
  uint64_t v26 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v18, 1, v7) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v18, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    uint64_t v27 = (uint64_t)v37;
    sub_23BAD78F0();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v8 + 8);
    v28(v11, v7);
    sub_23BA89CA0(v27, (uint64_t)v23);
    v28(v13, v7);
    uint64_t v26 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v23, v26, 1, v40);
  sub_23BA90A54((uint64_t)v20, &qword_26ADC8258, MEMORY[0x263F7AD88]);
  uint64_t v29 = v41;
  uint64_t v30 = (uint64_t)v42;
  sub_23BAD7870();
  uint64_t v31 = sub_23BAD7880();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v29, v31);
  uint64_t v32 = v43;
  uint64_t v33 = v38;
  *uint64_t v43 = v39;
  v32[1] = v33;
  uint64_t v34 = type metadata accessor for DataSource(0);
  sub_23BA8D80C((uint64_t)v23, (uint64_t)v32 + *(int *)(v34 + 20), &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
  return sub_23BA8D80C(v30, (uint64_t)v32 + *(int *)(v34 + 24), (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
}

StocksKit::DataSource::ImageContext __swiftcall DataSource.ImageContext.init(scale:)(StocksKit::DataSource::ImageContext scale)
{
  v1->scale = scale.scale;
  return scale;
}

uint64_t DataSource.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DataSource.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DataSource.name.modify())()
{
  return nullsub_1;
}

uint64_t DataSource.logo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DataSource(0);
  return sub_23BA90928(v1 + *(int *)(v3 + 20), a1, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
}

uint64_t type metadata accessor for DataSource(uint64_t a1)
{
  return sub_23BA825D8(a1, (uint64_t *)&unk_26ADC9528);
}

uint64_t type metadata accessor for DataSource.Logo(uint64_t a1)
{
  return sub_23BA825D8(a1, qword_26ADC9508);
}

uint64_t DataSource.destination.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DataSource(0);
  return sub_23BA90928(v1 + *(int *)(v3 + 24), a1, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
}

void sub_23BA89854(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_23BAD84E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t DataSource.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_23BAD72C0();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v20 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA89854(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - v5;
  uint64_t v7 = type metadata accessor for DataSource.Logo(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA89854(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
  MEMORY[0x270FA5388](v11 - 8);
  os_log_type_t v13 = (char *)&v19 - v12;
  swift_bridgeObjectRetain();
  sub_23BAD8270();
  swift_bridgeObjectRelease();
  uint64_t v14 = type metadata accessor for DataSource(0);
  sub_23BA90928(v1 + *(int *)(v14 + 20), (uint64_t)v13, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
  {
    sub_23BAD8960();
  }
  else
  {
    sub_23BA89CA0((uint64_t)v13, (uint64_t)v10);
    sub_23BAD8960();
    sub_23BAD78E0();
    sub_23BA8ADD4(&qword_268A755F8, MEMORY[0x263F7AD48]);
    sub_23BAD81F0();
    sub_23BA8D878((uint64_t)v10, type metadata accessor for DataSource.Logo);
  }
  sub_23BA90928(v1 + *(int *)(v14 + 24), (uint64_t)v6, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
  uint64_t v16 = v21;
  uint64_t v15 = v22;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v22) == 1) {
    return sub_23BAD8960();
  }
  uint64_t v18 = v20;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v6, v15);
  sub_23BAD8960();
  sub_23BA8ADD4(&qword_268A75600, MEMORY[0x263F06EA8]);
  sub_23BAD81F0();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_23BA89CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DataSource.Logo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA89D10()
{
  uint64_t v1 = 1869049708;
  if (*v0 != 1) {
    uint64_t v1 = 0x74616E6974736564;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_23BA89D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BA90540(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BA89D8C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_23BA89D98(uint64_t a1)
{
  unint64_t v2 = sub_23BA8D7B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA89DD4(uint64_t a1)
{
  unint64_t v2 = sub_23BA8D7B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DataSource.encode(to:)(void *a1)
{
  sub_23BA8DCA0(0, &qword_26ADC83C0, (uint64_t (*)(void))sub_23BA8D7B8, (uint64_t)&type metadata for DataSource.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA8D7B8();
  sub_23BAD89B0();
  char v12 = 0;
  sub_23BAD8830();
  if (!v1)
  {
    type metadata accessor for DataSource(0);
    char v11 = 1;
    type metadata accessor for DataSource.Logo(0);
    sub_23BA8ADD4(&qword_26ADC8288, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    sub_23BAD8820();
    char v10 = 2;
    sub_23BAD72C0();
    sub_23BA8ADD4(&qword_26ADC8230, MEMORY[0x263F06EA8]);
    sub_23BAD8820();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DataSource.hashValue.getter()
{
  return sub_23BAD8980();
}

uint64_t DataSource.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  sub_23BA89854(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v21 = (char *)&v20 - v4;
  sub_23BA89854(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v20 - v6;
  sub_23BA8DCA0(0, &qword_26ADC8110, (uint64_t (*)(void))sub_23BA8D7B8, (uint64_t)&type metadata for DataSource.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v22 = *(void *)(v8 - 8);
  uint64_t v23 = v8;
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v20 - v9;
  uint64_t v11 = type metadata accessor for DataSource(0);
  MEMORY[0x270FA5388](v11);
  os_log_type_t v13 = (uint64_t *)((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA8D7B8();
  uint64_t v24 = v10;
  uint64_t v14 = v25;
  sub_23BAD89A0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v11;
  uint64_t v16 = v22;
  char v28 = 0;
  *os_log_type_t v13 = sub_23BAD8790();
  v13[1] = v17;
  type metadata accessor for DataSource.Logo(0);
  char v27 = 1;
  sub_23BA8ADD4(&qword_26ADC8060, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
  sub_23BAD8780();
  sub_23BA8D80C((uint64_t)v7, (uint64_t)v13 + *(int *)(v11 + 20), &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
  sub_23BAD72C0();
  char v26 = 2;
  sub_23BA8ADD4(&qword_26ADC7EF8, MEMORY[0x263F06EA8]);
  uint64_t v18 = (uint64_t)v21;
  sub_23BAD8780();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v23);
  sub_23BA8D80C(v18, (uint64_t)v13 + *(int *)(v15 + 24), (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
  sub_23BA851F4((uint64_t)v13, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_23BA8D878((uint64_t)v13, type metadata accessor for DataSource);
}

uint64_t sub_23BA8A558()
{
  return sub_23BAD8980();
}

uint64_t sub_23BA8A59C()
{
  return sub_23BAD8980();
}

uint64_t sub_23BA8A5D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DataSource.init(from:)(a1, a2);
}

uint64_t sub_23BA8A5F0(void *a1)
{
  return DataSource.encode(to:)(a1);
}

uint64_t DataSource.Logo.hash(into:)()
{
  sub_23BAD78E0();
  sub_23BA8ADD4(&qword_268A755F8, MEMORY[0x263F7AD48]);
  return sub_23BAD81F0();
}

uint64_t sub_23BA8A694()
{
  return 0x69796C7265646E75;
}

uint64_t sub_23BA8A6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x69796C7265646E75 && a2 == 0xEA0000000000676ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_23BAD88A0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23BA8A754(uint64_t a1)
{
  unint64_t v2 = sub_23BA8D8D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA8A790(uint64_t a1)
{
  unint64_t v2 = sub_23BA8D8D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DataSource.Logo.encode(to:)(void *a1)
{
  sub_23BA8DCA0(0, &qword_26ADC83C8, (uint64_t (*)(void))sub_23BA8D8D8, (uint64_t)&type metadata for DataSource.Logo.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA8D8D8();
  sub_23BAD89B0();
  sub_23BAD78E0();
  sub_23BA8ADD4(&qword_268A75608, MEMORY[0x263F7AD48]);
  sub_23BAD8850();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DataSource.Logo.hashValue.getter()
{
  return sub_23BAD8980();
}

uint64_t DataSource.Logo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v3 = sub_23BAD78E0();
  uint64_t v18 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v19 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA8DCA0(0, &qword_26ADC8118, (uint64_t (*)(void))sub_23BA8D8D8, (uint64_t)&type metadata for DataSource.Logo.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v17 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = type metadata accessor for DataSource.Logo(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA8D8D8();
  uint64_t v12 = v20;
  sub_23BAD89A0();
  if (!v12)
  {
    uint64_t v13 = v17;
    uint64_t v14 = v18;
    sub_23BA8ADD4(&qword_268A75610, MEMORY[0x263F7AD48]);
    sub_23BAD87B0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v19, v3);
    sub_23BA89CA0((uint64_t)v11, v16);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23BA8ACC8()
{
  return sub_23BAD8980();
}

uint64_t sub_23BA8AD50()
{
  sub_23BAD78E0();
  sub_23BA8ADD4(&qword_268A755F8, MEMORY[0x263F7AD48]);
  return sub_23BAD81F0();
}

uint64_t sub_23BA8ADD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BA8AE1C()
{
  return sub_23BAD8980();
}

uint64_t sub_23BA8AEA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DataSource.Logo.init(from:)(a1, a2);
}

uint64_t sub_23BA8AEB8(void *a1)
{
  sub_23BA8DCA0(0, &qword_26ADC83C8, (uint64_t (*)(void))sub_23BA8D8D8, (uint64_t)&type metadata for DataSource.Logo.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA8D8D8();
  sub_23BAD89B0();
  sub_23BAD78E0();
  sub_23BA8ADD4(&qword_268A75608, MEMORY[0x263F7AD48]);
  sub_23BAD8850();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

double DataSource.ImageContext.scale.getter()
{
  return *(double *)v0;
}

void DataSource.ImageContext.scale.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*DataSource.ImageContext.scale.modify())()
{
  return nullsub_1;
}

uint64_t sub_23BA8B098()
{
  return 0x656C616373;
}

uint64_t sub_23BA8B0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656C616373 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_23BAD88A0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23BA8B13C(uint64_t a1)
{
  unint64_t v2 = sub_23BA8D92C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA8B178(uint64_t a1)
{
  unint64_t v2 = sub_23BA8D92C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DataSource.ImageContext.encode(to:)(void *a1)
{
  sub_23BA8DCA0(0, &qword_268A75618, (uint64_t (*)(void))sub_23BA8D92C, (uint64_t)&type metadata for DataSource.ImageContext.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA8D92C();
  sub_23BAD89B0();
  sub_23BAD8840();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DataSource.ImageContext.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v14 = a2;
  sub_23BA8DCA0(0, &qword_268A75628, (uint64_t (*)(void))sub_23BA8D92C, (uint64_t)&type metadata for DataSource.ImageContext.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA8D92C();
  sub_23BAD89A0();
  if (!v2)
  {
    uint64_t v9 = v14;
    sub_23BAD87A0();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *uint64_t v9 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23BA8B4D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DataSource.ImageContext.init(from:)(a1, a2);
}

uint64_t sub_23BA8B4E8(void *a1)
{
  sub_23BA8DCA0(0, &qword_268A75618, (uint64_t (*)(void))sub_23BA8D92C, (uint64_t)&type metadata for DataSource.ImageContext.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA8D92C();
  sub_23BAD89B0();
  sub_23BAD8840();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DataSource.DownloadedLogo.light.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_23BA8D980(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t DataSource.DownloadedLogo.dark.getter()
{
  unint64_t v1 = *(void *)(v0 + 40);
  if (v1 >> 60 == 15) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = *(void *)(v0 + 32);
  }
  sub_23BA8D9D8(*(void *)(v0 + 32), v1);
  return v2;
}

double DataSource.DownloadedLogo.scale.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t DataSource.DownloadedLogo.variants.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  unint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 32);
  unint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  unint64_t v9 = *(void *)(v1 + 72);
  uint64_t v10 = *(void *)(v1 + 80);
  uint64_t v11 = *(void *)(v1 + 88);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v10;
  *(void *)(a1 + 88) = v11;
  sub_23BA8D980(v2, v3);
  sub_23BA8D9D8(v4, v5);
  return sub_23BA8D9D8(v8, v9);
}

uint64_t DataSource.DownloadedLogo.Variants.light.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  unint64_t v3 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  return sub_23BA8D980(v2, v3);
}

uint64_t DataSource.DownloadedLogo.Variants.dark.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[4];
  unint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_23BA8D9D8(v2, v3);
}

uint64_t DataSource.DownloadedLogo.Variants.template.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[8];
  unint64_t v3 = v1[9];
  uint64_t v4 = v1[10];
  uint64_t v5 = v1[11];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_23BA8D9D8(v2, v3);
}

uint64_t sub_23BA8B7B4()
{
  uint64_t v1 = 1802658148;
  if (*v0 != 1) {
    uint64_t v1 = 0x6574616C706D6574;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746867696CLL;
  }
}

uint64_t sub_23BA8B804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BA90690(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BA8B82C(uint64_t a1)
{
  unint64_t v2 = sub_23BA8D9EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA8B868(uint64_t a1)
{
  unint64_t v2 = sub_23BA8D9EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DataSource.DownloadedLogo.Variants.encode(to:)(void *a1)
{
  sub_23BA8DCA0(0, &qword_268A75630, (uint64_t (*)(void))sub_23BA8D9EC, (uint64_t)&type metadata for DataSource.DownloadedLogo.Variants.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v24 - v5;
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  uint64_t v31 = v1[5];
  uint64_t v32 = v11;
  uint64_t v12 = v1[6];
  uint64_t v29 = v1[7];
  uint64_t v30 = v12;
  uint64_t v13 = v1[8];
  uint64_t v27 = v1[9];
  uint64_t v28 = v13;
  uint64_t v14 = v1[10];
  uint64_t v25 = v1[11];
  uint64_t v26 = v14;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1;
  uint64_t v18 = v17;
  __swift_project_boxed_opaque_existential_1(v16, v15);
  sub_23BA8D9EC();
  sub_23BAD89B0();
  uint64_t v34 = v7;
  uint64_t v35 = v8;
  uint64_t v36 = v9;
  uint64_t v37 = v10;
  char v38 = 0;
  sub_23BA8DA40();
  uint64_t v19 = v33;
  sub_23BAD8850();
  if (!v19)
  {
    uint64_t v21 = v26;
    uint64_t v20 = v27;
    uint64_t v34 = v32;
    uint64_t v35 = v31;
    uint64_t v22 = v28;
    uint64_t v36 = v30;
    uint64_t v37 = v29;
    char v38 = 1;
    sub_23BAD8820();
    uint64_t v34 = v22;
    uint64_t v35 = v20;
    uint64_t v36 = v21;
    uint64_t v37 = v25;
    char v38 = 2;
    sub_23BAD8820();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v18);
}

uint64_t DataSource.DownloadedLogo.Variants.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23BA8DCA0(0, &qword_268A75648, (uint64_t (*)(void))sub_23BA8D9EC, (uint64_t)&type metadata for DataSource.DownloadedLogo.Variants.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = a1[3];
  uint64_t v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_23BA8D9EC();
  sub_23BAD89A0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }
  uint64_t v35 = a2;
  uint64_t v36 = v7;
  char v42 = 0;
  sub_23BA8DA94();
  uint64_t v11 = v6;
  sub_23BAD87B0();
  uint64_t v12 = v38;
  unint64_t v13 = v39;
  uint64_t v14 = v40;
  uint64_t v15 = v41;
  char v42 = 1;
  sub_23BA8D980(v38, v39);
  sub_23BAD8780();
  uint64_t v16 = v41;
  char v42 = 2;
  unint64_t v33 = v39;
  uint64_t v34 = v38;
  uint64_t v32 = v40;
  sub_23BA8D9D8(v38, v39);
  sub_23BAD8780();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v11);
  uint64_t v17 = v38;
  unint64_t v18 = v39;
  uint64_t v36 = v38;
  uint64_t v29 = v40;
  uint64_t v30 = v41;
  unint64_t v31 = v39;
  sub_23BA8D980(v12, v13);
  unint64_t v20 = v33;
  uint64_t v19 = v34;
  uint64_t v21 = v32;
  sub_23BA8D9D8(v34, v33);
  unint64_t v22 = v18;
  uint64_t v23 = v29;
  sub_23BA8D9D8(v17, v22);
  sub_23BA8DAE8(v19, v20);
  sub_23BA8705C(v12, v13);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  uint64_t *v35 = v12;
  v25[1] = v13;
  v25[2] = v14;
  uint64_t v25[3] = v15;
  v25[4] = v19;
  v25[5] = v20;
  v25[6] = v21;
  v25[7] = v16;
  unint64_t v26 = v31;
  v25[8] = v24;
  v25[9] = v26;
  v25[10] = v23;
  v25[11] = v30;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  sub_23BA8705C(v12, v13);
  sub_23BA8DAE8(v19, v20);
  return sub_23BA8DAE8(v36, v31);
}

uint64_t sub_23BA8BEF0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DataSource.DownloadedLogo.Variants.init(from:)(a1, a2);
}

uint64_t sub_23BA8BF08(void *a1)
{
  return DataSource.DownloadedLogo.Variants.encode(to:)(a1);
}

uint64_t DataSource.DownloadedLogo.Variant.imageData.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_23BA8D980(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

double DataSource.DownloadedLogo.Variant.scale.getter()
{
  return *(double *)(v0 + 16);
}

double DataSource.DownloadedLogo.Variant.baselineOffsetFromBottom.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t sub_23BA8BF64()
{
  unint64_t v1 = 0x656C616373;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000018;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7461446567616D69;
  }
}

uint64_t sub_23BA8BFC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BA907D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BA8BFEC(uint64_t a1)
{
  unint64_t v2 = sub_23BA8DAFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA8C028(uint64_t a1)
{
  unint64_t v2 = sub_23BA8DAFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DataSource.DownloadedLogo.Variant.encode(to:)(void *a1)
{
  sub_23BA8DCA0(0, &qword_268A75658, (uint64_t (*)(void))sub_23BA8DAFC, (uint64_t)&type metadata for DataSource.DownloadedLogo.Variant.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA8DAFC();
  sub_23BAD89B0();
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  char v15 = 0;
  sub_23BA8DB50();
  uint64_t v10 = v12[1];
  sub_23BAD8850();
  if (!v10)
  {
    LOBYTE(v13) = 1;
    sub_23BAD8840();
    LOBYTE(v13) = 2;
    sub_23BAD8840();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DataSource.DownloadedLogo.Variant.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v19 = a2;
  sub_23BA8DCA0(0, &qword_268A75670, (uint64_t (*)(void))sub_23BA8DAFC, (uint64_t)&type metadata for DataSource.DownloadedLogo.Variant.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA8DAFC();
  sub_23BAD89A0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v19;
  char v22 = 0;
  sub_23BA8DBA4();
  sub_23BAD87B0();
  uint64_t v11 = v20;
  unint64_t v12 = v21;
  LOBYTE(v2sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 1;
  sub_23BA8D980(v11, v21);
  sub_23BAD87A0();
  uint64_t v14 = v13;
  LOBYTE(v2sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 2;
  sub_23BAD87A0();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t *v10 = v11;
  v10[1] = v12;
  v10[2] = v14;
  v10[3] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_23BA8705C(v11, v12);
}

uint64_t sub_23BA8C4B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DataSource.DownloadedLogo.Variant.init(from:)(a1, a2);
}

uint64_t sub_23BA8C4CC(void *a1)
{
  return DataSource.DownloadedLogo.Variant.encode(to:)(a1);
}

uint64_t sub_23BA8C4E4()
{
  return 0x73746E6169726176;
}

uint64_t sub_23BA8C4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73746E6169726176 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_23BAD88A0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23BA8C594(uint64_t a1)
{
  unint64_t v2 = sub_23BA8DBF8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA8C5D0(uint64_t a1)
{
  unint64_t v2 = sub_23BA8DBF8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DataSource.DownloadedLogo.encode(to:)(void *a1)
{
  sub_23BA8DCA0(0, &qword_268A75680, (uint64_t (*)(void))sub_23BA8DBF8, (uint64_t)&type metadata for DataSource.DownloadedLogo.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v14 - v6;
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  long long v12 = *((_OWORD *)v1 + 2);
  long long v17 = *((_OWORD *)v1 + 3);
  long long v18 = v12;
  long long v16 = *((_OWORD *)v1 + 4);
  uint64_t v15 = v1[10];
  uint64_t v14 = v1[11];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA8DBF8();
  sub_23BAD89B0();
  uint64_t v19 = v8;
  uint64_t v20 = v9;
  uint64_t v21 = v10;
  uint64_t v22 = v11;
  long long v23 = v18;
  long long v24 = v17;
  long long v25 = v16;
  uint64_t v26 = v15;
  uint64_t v27 = v14;
  sub_23BA8DC4C();
  sub_23BAD8850();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DataSource.DownloadedLogo.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v17 = a2;
  sub_23BA8DCA0(0, &qword_268A75698, (uint64_t (*)(void))sub_23BA8DBF8, (uint64_t)&type metadata for DataSource.DownloadedLogo.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v16 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA8DBF8();
  sub_23BAD89A0();
  if (!v2)
  {
    uint64_t v9 = v17;
    sub_23BA8DD08();
    sub_23BAD87B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v10 = v16[1];
    long long v11 = v16[2];
    long long v12 = v16[3];
    long long v13 = v16[4];
    long long v14 = v16[5];
    *uint64_t v9 = v16[0];
    v9[1] = v10;
    v9[2] = v11;
    v9[3] = v12;
    v9[4] = v13;
    v9[5] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23BA8C9C0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return DataSource.DownloadedLogo.init(from:)(a1, a2);
}

uint64_t sub_23BA8C9D8(void *a1)
{
  return DataSource.DownloadedLogo.encode(to:)(a1);
}

uint64_t sub_23BA8C9F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v58 = (void (*)(uint64_t))MEMORY[0x263F7AD70];
  sub_23BA89854(0, &qword_268A75728, MEMORY[0x263F7AD70]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v59 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v62 = (uint64_t)&v52 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v57 = (uint64_t)&v52 - v10;
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v52 - v11;
  uint64_t v13 = sub_23BAD7950();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  long long v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v52 - v18;
  sub_23BAD7910();
  uint64_t v20 = sub_23BAD7930();
  uint64_t v60 = v21;
  uint64_t v61 = v20;
  sub_23BAD7940();
  uint64_t v23 = v22;
  sub_23BAD7920();
  uint64_t v25 = v24;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v14 + 8);
  v26(v19, v13);
  uint64_t v63 = a1;
  sub_23BAD7900();
  uint64_t v27 = v57;
  uint64_t v56 = v12;
  sub_23BA90928((uint64_t)v12, v57, &qword_268A75728, v58);
  uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v28 = v55(v27, 1, v13);
  uint64_t v29 = 0;
  uint64_t v53 = v26;
  uint64_t v54 = v14;
  if (v28 == 1)
  {
    uint64_t v57 = 0xF000000000000000;
    uint64_t v58 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v19, v27, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    uint64_t v32 = (void (*)(uint64_t))sub_23BAD7930();
    uint64_t v57 = v33;
    uint64_t v58 = v32;
    sub_23BAD7940();
    uint64_t v30 = v34;
    sub_23BAD7920();
    uint64_t v31 = v35;
    v26(v17, v13);
    v26(v19, v13);
  }
  uint64_t v36 = v17;
  uint64_t v37 = (void (*)(uint64_t))MEMORY[0x263F7AD70];
  sub_23BA90A54((uint64_t)v56, &qword_268A75728, MEMORY[0x263F7AD70]);
  uint64_t v38 = v62;
  sub_23BAD7960();
  uint64_t v39 = v59;
  sub_23BA90928(v38, v59, &qword_268A75728, v37);
  if (v55(v39, 1, v13) == 1)
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xF000000000000000;
    uint64_t v42 = 0;
  }
  else
  {
    uint64_t v43 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v19, v39, v13);
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v36, v19, v13);
    uint64_t v40 = sub_23BAD7930();
    unint64_t v41 = v44;
    sub_23BAD7940();
    uint64_t v29 = v45;
    sub_23BAD7920();
    uint64_t v42 = v46;
    uint64_t v47 = v53;
    v53(v36, v13);
    v47(v19, v13);
  }
  uint64_t v48 = sub_23BAD7970();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v63, v48);
  uint64_t result = sub_23BA90A54(v62, &qword_268A75728, MEMORY[0x263F7AD70]);
  uint64_t v50 = v60;
  *a2 = v61;
  a2[1] = v50;
  a2[2] = v23;
  a2[3] = v25;
  uint64_t v51 = v57;
  a2[4] = (uint64_t)v58;
  a2[5] = v51;
  a2[6] = v30;
  a2[7] = v31;
  a2[8] = v40;
  a2[9] = v41;
  a2[10] = v29;
  a2[11] = v42;
  return result;
}

BOOL _s9StocksKit10DataSourceV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_23BAD72C0();
  uint64_t v66 = *(void *)(v4 - 8);
  uint64_t v67 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v61 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
  sub_23BA90994(0, &qword_268A75730, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
  uint64_t v64 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v60 - v8;
  sub_23BA89854(0, (unint64_t *)&qword_26ADC9198, v6);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v62 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v68 = (uint64_t)&v60 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v65 = (uint64_t)&v60 - v15;
  uint64_t v69 = type metadata accessor for DataSource.Logo(0);
  uint64_t v16 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v63 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA90994(0, &qword_268A75738, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v60 - v20;
  sub_23BA89854(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  int v28 = (char *)&v60 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v60 - v29;
  uint64_t v31 = *a1;
  uint64_t v32 = a1[1];
  uint64_t v70 = a1;
  id v71 = a2;
  if (v31 == *a2 && v32 == a2[1] || (v33 = sub_23BAD88A0(), BOOL result = 0, (v33 & 1) != 0))
  {
    uint64_t v60 = v9;
    uint64_t v35 = type metadata accessor for DataSource(0);
    sub_23BA90928((uint64_t)v70 + *(int *)(v35 + 20), (uint64_t)v30, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    sub_23BA90928((uint64_t)v71 + *(int *)(v35 + 20), (uint64_t)v28, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    uint64_t v36 = (uint64_t)&v21[*(int *)(v19 + 48)];
    sub_23BA90928((uint64_t)v30, (uint64_t)v21, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    sub_23BA90928((uint64_t)v28, v36, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    uint64_t v38 = v69;
    if (v37((uint64_t)v21, 1, v69) == 1)
    {
      sub_23BA90A54((uint64_t)v28, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
      sub_23BA90A54((uint64_t)v30, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
      if (v37(v36, 1, v38) == 1)
      {
        sub_23BA90A54((uint64_t)v21, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
LABEL_11:
        uint64_t v45 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
        uint64_t v46 = v65;
        sub_23BA90928((uint64_t)v70 + *(int *)(v35 + 24), v65, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
        uint64_t v47 = v68;
        sub_23BA90928((uint64_t)v71 + *(int *)(v35 + 24), v68, (unint64_t *)&qword_26ADC9198, v45);
        uint64_t v48 = (uint64_t)v60;
        uint64_t v49 = (uint64_t)&v60[*(int *)(v64 + 48)];
        sub_23BA90928(v46, (uint64_t)v60, (unint64_t *)&qword_26ADC9198, v45);
        sub_23BA90928(v47, v49, (unint64_t *)&qword_26ADC9198, v45);
        uint64_t v51 = v66;
        uint64_t v50 = v67;
        uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
        if (v52(v48, 1, v67) == 1)
        {
          uint64_t v53 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
          sub_23BA90A54(v47, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
          sub_23BA90A54(v46, (unint64_t *)&qword_26ADC9198, v53);
          if (v52(v49, 1, v50) == 1)
          {
            sub_23BA90A54(v48, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
            return 1;
          }
        }
        else
        {
          uint64_t v54 = v62;
          sub_23BA90928(v48, v62, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
          if (v52(v49, 1, v50) != 1)
          {
            uint64_t v56 = v61;
            (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v61, v49, v50);
            sub_23BA8ADD4(&qword_268A75740, MEMORY[0x263F06EA8]);
            char v57 = sub_23BAD8220();
            uint64_t v58 = *(void (**)(char *, uint64_t))(v51 + 8);
            v58(v56, v50);
            uint64_t v59 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
            sub_23BA90A54(v68, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
            sub_23BA90A54(v46, (unint64_t *)&qword_26ADC9198, v59);
            v58((char *)v54, v50);
            sub_23BA90A54(v48, (unint64_t *)&qword_26ADC9198, v59);
            return (v57 & 1) != 0;
          }
          uint64_t v55 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
          sub_23BA90A54(v68, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
          sub_23BA90A54(v46, (unint64_t *)&qword_26ADC9198, v55);
          (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v54, v50);
        }
        uint64_t v39 = &qword_268A75730;
        uint64_t v40 = (unint64_t *)&qword_26ADC9198;
        unint64_t v41 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
        uint64_t v42 = v48;
        goto LABEL_17;
      }
    }
    else
    {
      sub_23BA90928((uint64_t)v21, (uint64_t)v25, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
      if (v37(v36, 1, v38) != 1)
      {
        uint64_t v43 = v63;
        sub_23BA89CA0(v36, v63);
        char v44 = MEMORY[0x23ECCBE00](v25, v43);
        sub_23BA8D878(v43, type metadata accessor for DataSource.Logo);
        sub_23BA90A54((uint64_t)v28, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
        sub_23BA90A54((uint64_t)v30, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
        sub_23BA8D878((uint64_t)v25, type metadata accessor for DataSource.Logo);
        sub_23BA90A54((uint64_t)v21, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
        if ((v44 & 1) == 0) {
          return 0;
        }
        goto LABEL_11;
      }
      sub_23BA90A54((uint64_t)v28, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
      sub_23BA90A54((uint64_t)v30, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
      sub_23BA8D878((uint64_t)v25, type metadata accessor for DataSource.Logo);
    }
    uint64_t v39 = &qword_268A75738;
    uint64_t v40 = &qword_26ADC9520;
    unint64_t v41 = (void (*)(uint64_t))type metadata accessor for DataSource.Logo;
    uint64_t v42 = (uint64_t)v21;
LABEL_17:
    sub_23BA909F8(v42, v39, v40, v41);
    return 0;
  }
  return result;
}

unint64_t sub_23BA8D7B8()
{
  unint64_t result = qword_26ADC94D8;
  if (!qword_26ADC94D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC94D8);
  }
  return result;
}

uint64_t sub_23BA8D80C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_23BA89854(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_23BA8D878(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_23BA8D8D8()
{
  unint64_t result = qword_26ADC94F0;
  if (!qword_26ADC94F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC94F0);
  }
  return result;
}

unint64_t sub_23BA8D92C()
{
  unint64_t result = qword_268A75620;
  if (!qword_268A75620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75620);
  }
  return result;
}

uint64_t sub_23BA8D980(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_23BA8D9D8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_23BA8D980(a1, a2);
  }
  return a1;
}

unint64_t sub_23BA8D9EC()
{
  unint64_t result = qword_268A75638;
  if (!qword_268A75638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75638);
  }
  return result;
}

unint64_t sub_23BA8DA40()
{
  unint64_t result = qword_268A75640;
  if (!qword_268A75640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75640);
  }
  return result;
}

unint64_t sub_23BA8DA94()
{
  unint64_t result = qword_268A75650;
  if (!qword_268A75650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75650);
  }
  return result;
}

uint64_t sub_23BA8DAE8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_23BA8705C(a1, a2);
  }
  return a1;
}

unint64_t sub_23BA8DAFC()
{
  unint64_t result = qword_268A75660;
  if (!qword_268A75660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75660);
  }
  return result;
}

unint64_t sub_23BA8DB50()
{
  unint64_t result = qword_268A75668;
  if (!qword_268A75668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75668);
  }
  return result;
}

unint64_t sub_23BA8DBA4()
{
  unint64_t result = qword_268A75678;
  if (!qword_268A75678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75678);
  }
  return result;
}

unint64_t sub_23BA8DBF8()
{
  unint64_t result = qword_268A75688;
  if (!qword_268A75688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75688);
  }
  return result;
}

unint64_t sub_23BA8DC4C()
{
  unint64_t result = qword_268A75690;
  if (!qword_268A75690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75690);
  }
  return result;
}

void sub_23BA8DCA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_23BA8DD08()
{
  unint64_t result = qword_268A756A0;
  if (!qword_268A756A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A756A0);
  }
  return result;
}

uint64_t sub_23BA8DD5C()
{
  return sub_23BA8ADD4(&qword_268A756A8, (void (*)(uint64_t))type metadata accessor for DataSource);
}

uint64_t sub_23BA8DDA4()
{
  return sub_23BA8ADD4(&qword_268A756B0, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
}

uint64_t *initializeBufferWithCopyOfBuffer for DataSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for DataSource.Logo(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_23BA89854(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_23BAD78E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_23BAD72C0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      sub_23BA89854(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
  }
  return v4;
}

uint64_t destroy for DataSource(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for DataSource.Logo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_23BAD78E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_23BAD72C0();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *initializeWithCopy for DataSource(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for DataSource.Logo(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_23BA89854(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_23BAD78E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_23BAD72C0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_23BA89854(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

void *assignWithCopy for DataSource(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DataSource.Logo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = sub_23BAD78E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_23BA8D878((uint64_t)v7, type metadata accessor for DataSource.Logo);
LABEL_6:
    sub_23BA89854(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v26 = sub_23BAD78E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(v7, v8, v26);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_23BAD72C0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    sub_23BA89854(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

_OWORD *initializeWithTake for DataSource(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DataSource.Logo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_23BA89854(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_23BAD78E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_23BAD72C0();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_23BA89854(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

void *assignWithTake for DataSource(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for DataSource.Logo(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      uint64_t v15 = sub_23BAD78E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_23BA8D878((uint64_t)v8, type metadata accessor for DataSource.Logo);
LABEL_6:
    sub_23BA89854(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v27 = sub_23BAD78E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v8, v9, v27);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_23BAD72C0();
  uint64_t v21 = *(void *)(v20 - 8);
  int v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    sub_23BA89854(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for DataSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23BA8ED94);
}

uint64_t sub_23BA8ED94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_23BA89854(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_23BA89854(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for DataSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23BA8EF0C);
}

uint64_t sub_23BA8EF0C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_23BA89854(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_23BA89854(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_23BA8F070()
{
  sub_23BA89854(319, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
  if (v0 <= 0x3F)
  {
    sub_23BA89854(319, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for DataSource.Logo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD78E0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for DataSource.Logo(uint64_t a1)
{
  uint64_t v2 = sub_23BAD78E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for DataSource.Logo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD78E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for DataSource.Logo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD78E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for DataSource.Logo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD78E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for DataSource.Logo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD78E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DataSource.Logo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23BA8F3F0);
}

uint64_t sub_23BA8F3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD78E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DataSource.Logo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23BA8F470);
}

uint64_t sub_23BA8F470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD78E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_23BA8F4E0()
{
  uint64_t result = sub_23BAD78E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DataSource.ImageContext()
{
  return &type metadata for DataSource.ImageContext;
}

uint64_t sub_23BA8F588(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

ValueMetadata *type metadata accessor for DataSource.DownloadedLogo()
{
  return &type metadata for DataSource.DownloadedLogo;
}

uint64_t _s9StocksKit10DataSourceV14DownloadedLogoV8VariantsVwxx_0(uint64_t *a1)
{
  uint64_t result = sub_23BA8705C(*a1, a1[1]);
  unint64_t v3 = a1[5];
  if (v3 >> 60 != 15) {
    uint64_t result = sub_23BA8705C(a1[4], v3);
  }
  unint64_t v4 = a1[9];
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = a1[8];
    return sub_23BA8705C(v5, v4);
  }
  return result;
}

uint64_t _s9StocksKit10DataSourceV14DownloadedLogoV8VariantsVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_23BA8D980(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 40);
  if (v6 >> 60 == 15)
  {
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
  }
  else
  {
    uint64_t v8 = *(void *)(a2 + 32);
    sub_23BA8D980(v8, *(void *)(a2 + 40));
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v6;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  unint64_t v9 = *(void *)(a2 + 72);
  if (v9 >> 60 == 15)
  {
    long long v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v10;
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 64);
    sub_23BA8D980(v11, *(void *)(a2 + 72));
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v9;
    *(_OWORD *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(_OWORD *)(a2 + 80);
  }
  return a1;
}

uint64_t _s9StocksKit10DataSourceV14DownloadedLogoV8VariantsVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_23BA8D980(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_23BA8705C(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v8 = (_OWORD *)(a1 + 32);
  unint64_t v9 = (_OWORD *)(a2 + 32);
  unint64_t v10 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) >> 60 == 15)
  {
    if (v10 >> 60 == 15)
    {
      long long v11 = *(_OWORD *)(a2 + 48);
      _OWORD *v8 = *v9;
      *(_OWORD *)(a1 + 48) = v11;
    }
    else
    {
      uint64_t v13 = *(void *)(a2 + 32);
      sub_23BA8D980(v13, *(void *)(a2 + 40));
      *(void *)(a1 + 32) = v13;
      *(void *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v10;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
    }
  }
  else if (v10 >> 60 == 15)
  {
    sub_23BA8F588(a1 + 32);
    long long v12 = *(_OWORD *)(a2 + 48);
    _OWORD *v8 = *v9;
    *(_OWORD *)(a1 + 48) = v12;
  }
  else
  {
    uint64_t v14 = *(void *)(a2 + 32);
    sub_23BA8D980(v14, *(void *)(a2 + 40));
    uint64_t v15 = *(void *)(a1 + 32);
    unint64_t v16 = *(void *)(a1 + 40);
    *(void *)(a1 + 32) = v14;
    *(void *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v10;
    sub_23BA8705C(v15, v16);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
  }
  uint64_t v17 = (_OWORD *)(a1 + 64);
  uint64_t v18 = (_OWORD *)(a2 + 64);
  unint64_t v19 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) >> 60 == 15)
  {
    if (v19 >> 60 == 15)
    {
      long long v20 = *(_OWORD *)(a2 + 80);
      _OWORD *v17 = *v18;
      *(_OWORD *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v20;
    }
    else
    {
      uint64_t v22 = *(void *)(a2 + 64);
      sub_23BA8D980(v22, *(void *)(a2 + 72));
      *(void *)(a1 + 64) = v22;
      *(void *)(a1 + 72) = v19;
      *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
    }
  }
  else if (v19 >> 60 == 15)
  {
    sub_23BA8F588(a1 + 64);
    long long v21 = *(_OWORD *)(a2 + 80);
    _OWORD *v17 = *v18;
    *(_OWORD *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v21;
  }
  else
  {
    uint64_t v23 = *(void *)(a2 + 64);
    sub_23BA8D980(v23, *(void *)(a2 + 72));
    uint64_t v24 = *(void *)(a1 + 64);
    unint64_t v25 = *(void *)(a1 + 72);
    *(void *)(a1 + 64) = v23;
    *(void *)(a1 + 72) = v19;
    sub_23BA8705C(v24, v25);
    *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
  }
  return a1;
}

uint64_t _s9StocksKit10DataSourceV14DownloadedLogoV8VariantsVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_23BA8705C(v4, v5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  unint64_t v6 = *(void *)(a1 + 40);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 40);
  if (v7 >> 60 == 15)
  {
    sub_23BA8F588(a1 + 32);
LABEL_4:
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v7;
  sub_23BA8705C(v9, v6);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_6:
  unint64_t v10 = *(void *)(a1 + 72);
  if (v10 >> 60 != 15)
  {
    unint64_t v11 = *(void *)(a2 + 72);
    if (v11 >> 60 != 15)
    {
      uint64_t v13 = *(void *)(a1 + 64);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v11;
      sub_23BA8705C(v13, v10);
      *(_OWORD *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(_OWORD *)(a2 + 80);
      return a1;
    }
    sub_23BA8F588(a1 + 64);
  }
  long long v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v12;
  return a1;
}

uint64_t _s9StocksKit10DataSourceV14DownloadedLogoV8VariantsVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s9StocksKit10DataSourceV14DownloadedLogoV8VariantsVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 96) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataSource.DownloadedLogo.Variants()
{
  return &type metadata for DataSource.DownloadedLogo.Variants;
}

uint64_t destroy for DataSource.DownloadedLogo.Variant(uint64_t a1)
{
  return sub_23BA8705C(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t initializeWithCopy for DataSource.DownloadedLogo.Variant(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_23BA8D980(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t *assignWithCopy for DataSource.DownloadedLogo.Variant(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_23BA8D980(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_23BA8705C(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for DataSource.DownloadedLogo.Variant(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_23BA8705C(v4, v5);
  *(_OWORD *)(a1 + 16) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for DataSource.DownloadedLogo.Variant(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DataSource.DownloadedLogo.Variant(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataSource.DownloadedLogo.Variant()
{
  return &type metadata for DataSource.DownloadedLogo.Variant;
}

ValueMetadata *type metadata accessor for DataSource.DownloadedLogo.CodingKeys()
{
  return &type metadata for DataSource.DownloadedLogo.CodingKeys;
}

ValueMetadata *type metadata accessor for DataSource.DownloadedLogo.Variant.CodingKeys()
{
  return &type metadata for DataSource.DownloadedLogo.Variant.CodingKeys;
}

ValueMetadata *type metadata accessor for DataSource.DownloadedLogo.Variants.CodingKeys()
{
  return &type metadata for DataSource.DownloadedLogo.Variants.CodingKeys;
}

ValueMetadata *type metadata accessor for DataSource.ImageContext.CodingKeys()
{
  return &type metadata for DataSource.ImageContext.CodingKeys;
}

unsigned char *_s9StocksKit10DataSourceV14DownloadedLogoV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x23BA8FD44);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DataSource.Logo.CodingKeys()
{
  return &type metadata for DataSource.Logo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for StocksKitServiceError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9StocksKit10DataSourceV14DownloadedLogoV7VariantV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BA8FED8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataSource.CodingKeys()
{
  return &type metadata for DataSource.CodingKeys;
}

unint64_t sub_23BA8FF14()
{
  unint64_t result = qword_268A756B8;
  if (!qword_268A756B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A756B8);
  }
  return result;
}

unint64_t sub_23BA8FF6C()
{
  unint64_t result = qword_268A756C0;
  if (!qword_268A756C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A756C0);
  }
  return result;
}

unint64_t sub_23BA8FFC4()
{
  unint64_t result = qword_268A756C8;
  if (!qword_268A756C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A756C8);
  }
  return result;
}

unint64_t sub_23BA9001C()
{
  unint64_t result = qword_268A756D0;
  if (!qword_268A756D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A756D0);
  }
  return result;
}

unint64_t sub_23BA90074()
{
  unint64_t result = qword_268A756D8;
  if (!qword_268A756D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A756D8);
  }
  return result;
}

unint64_t sub_23BA900CC()
{
  unint64_t result = qword_268A756E0;
  if (!qword_268A756E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A756E0);
  }
  return result;
}

unint64_t sub_23BA90124()
{
  unint64_t result = qword_268A756E8;
  if (!qword_268A756E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A756E8);
  }
  return result;
}

unint64_t sub_23BA9017C()
{
  unint64_t result = qword_268A756F0;
  if (!qword_268A756F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A756F0);
  }
  return result;
}

unint64_t sub_23BA901D4()
{
  unint64_t result = qword_268A756F8;
  if (!qword_268A756F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A756F8);
  }
  return result;
}

unint64_t sub_23BA9022C()
{
  unint64_t result = qword_268A75700;
  if (!qword_268A75700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75700);
  }
  return result;
}

unint64_t sub_23BA90284()
{
  unint64_t result = qword_268A75708;
  if (!qword_268A75708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75708);
  }
  return result;
}

unint64_t sub_23BA902DC()
{
  unint64_t result = qword_268A75710;
  if (!qword_268A75710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75710);
  }
  return result;
}

unint64_t sub_23BA90334()
{
  unint64_t result = qword_268A75718;
  if (!qword_268A75718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75718);
  }
  return result;
}

unint64_t sub_23BA9038C()
{
  unint64_t result = qword_268A75720;
  if (!qword_268A75720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75720);
  }
  return result;
}

unint64_t sub_23BA903E4()
{
  unint64_t result = qword_26ADC9500;
  if (!qword_26ADC9500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9500);
  }
  return result;
}

unint64_t sub_23BA9043C()
{
  unint64_t result = qword_26ADC94F8;
  if (!qword_26ADC94F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC94F8);
  }
  return result;
}

unint64_t sub_23BA90494()
{
  unint64_t result = qword_26ADC94E8;
  if (!qword_26ADC94E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC94E8);
  }
  return result;
}

unint64_t sub_23BA904EC()
{
  unint64_t result = qword_26ADC94E0;
  if (!qword_26ADC94E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC94E0);
  }
  return result;
}

uint64_t sub_23BA90540(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1869049708 && a2 == 0xE400000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_23BA90690(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746867696CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802658148 && a2 == 0xE400000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_23BA907D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461446567616D69 && a2 == 0xE900000000000061;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023BADE1B0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_23BA90928(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_23BA89854(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_23BA90994(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_23BA89854(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_23BA909F8(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_23BA90994(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_23BA90A54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_23BA89854(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

ValueMetadata *type metadata accessor for XPCURLSessionPool()
{
  return &type metadata for XPCURLSessionPool;
}

ValueMetadata *type metadata accessor for LazyURLSession()
{
  return &type metadata for LazyURLSession;
}

void sub_23BA90AE4(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_23BAD7D80();
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  sub_23BA91370(a2, (uint64_t)&v59);
  unint64_t v12 = 0;
  char v13 = v60;
  if ((v60 & 1) == 0)
  {
    uint64_t v52 = a3;
    uint64_t v53 = v3;
    unsigned int v14 = v59.val[0];
    unsigned int v15 = v59.val[1];
    uint64_t v50 = a1;
    uint64_t v51 = a2;
    unsigned int v17 = v59.val[2];
    unsigned int v16 = v59.val[3];
    uint64_t v49 = v10;
    uint64_t v48 = v8;
    unsigned int v18 = v59.val[4];
    unsigned int v19 = v59.val[5];
    uint64_t v47 = v11;
    unsigned int v21 = v59.val[6];
    unsigned int v20 = v59.val[7];
    audit_token_t atoken = v59;
    HIDWORD(v46) = audit_token_to_pid(&atoken);
    atoken.val[0] = v14;
    atoken.val[1] = v15;
    a3 = v52;
    uint64_t v4 = v53;
    atoken.val[2] = v17;
    atoken.val[3] = v16;
    a1 = v50;
    a2 = v51;
    atoken.val[4] = v18;
    atoken.val[5] = v19;
    atoken.val[6] = v21;
    atoken.val[7] = v20;
    uint64_t v22 = audit_token_to_pidversion(&atoken);
    unint64_t v12 = HIDWORD(v46) | (unint64_t)(v22 << 32);
  }
  *(void *)atoken.val = v12;
  LOBYTE(atoken.val[2]) = v13;
  sub_23BAD8020();
  uint64_t v23 = *(void *)v55.val;
  if (*(void *)v55.val)
  {
    if (qword_26ADC91C8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_23BAD8090();
    __swift_project_value_buffer(v24, (uint64_t)qword_26ADCC840);
    unint64_t v25 = sub_23BAD8070();
    os_log_type_t v26 = sub_23BAD8470();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 67109120;
      sub_23BA91370(a2, (uint64_t)&atoken);
      if (v58)
      {
        pid_t v28 = 0;
      }
      else
      {
        audit_token_t v55 = atoken;
        pid_t v28 = audit_token_to_pid(&v55);
      }
      v55.val[0] = v28;
      sub_23BAD84F0();
      _os_log_impl(&dword_23BA68000, v25, v26, "Reusing URLSession for pid: %d", v27, 8u);
      MEMORY[0x23ECCD620](v27, -1, -1);
    }
  }
  else
  {
    if (qword_26ADC91C8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_23BAD8090();
    __swift_project_value_buffer(v29, (uint64_t)qword_26ADCC840);
    uint64_t v30 = sub_23BAD8070();
    os_log_type_t v31 = sub_23BAD8470();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 67109120;
      sub_23BA91370(a2, (uint64_t)&atoken);
      if (v58)
      {
        pid_t v33 = 0;
      }
      else
      {
        audit_token_t v55 = atoken;
        pid_t v33 = audit_token_to_pid(&v55);
      }
      v55.val[0] = v33;
      sub_23BAD84F0();
      _os_log_impl(&dword_23BA68000, v30, v31, "Storing URLSession for pid: %d", v32, 8u);
      MEMORY[0x23ECCD620](v32, -1, -1);
    }

    uint64_t v34 = swift_allocObject();
    sub_23BA91370(a2, v34 + 16);
    *(void *)v55.val = MEMORY[0x263F8EE78];
    sub_23BA91444();
    sub_23BA91524(0, (unint64_t *)&qword_26ADC96F0, MEMORY[0x263F7CD78], MEMORY[0x263F8D488]);
    sub_23BA9149C();
    sub_23BAD8540();
    sub_23BA91524(0, &qword_26ADC81B8, (uint64_t (*)(uint64_t))sub_23BA91588, MEMORY[0x263F7CFF8]);
    swift_allocObject();
    uint64_t v23 = sub_23BAD7F00();
    uint64_t v35 = *a1;
    uint64_t v61 = v23;
    sub_23BA91370(a2, (uint64_t)&v55);
    unint64_t v36 = 0;
    char v37 = v56;
    if ((v56 & 1) == 0)
    {
      uint64_t v52 = a3;
      uint64_t v53 = v4;
      unsigned int v38 = v55.val[0];
      unsigned int v39 = v55.val[1];
      unsigned int v40 = v55.val[2];
      unsigned int v41 = v55.val[3];
      unsigned int v43 = v55.val[4];
      unsigned int v42 = v55.val[5];
      uint64_t v51 = v35;
      unsigned int v44 = v55.val[6];
      LODWORD(v49) = v55.val[7];
      audit_token_t v54 = v55;
      LODWORD(v5sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = audit_token_to_pid(&v54);
      v54.val[0] = v38;
      v54.val[1] = v39;
      a3 = v52;
      v54.val[2] = v40;
      v54.val[3] = v41;
      v54.val[4] = v43;
      v54.val[5] = v42;
      v54.val[6] = v44;
      v54.val[7] = v49;
      uint64_t v45 = audit_token_to_pidversion(&v54);
      unint64_t v36 = v50 | (unint64_t)(v45 << 32);
    }
    *(void *)v54.val = v36;
    LOBYTE(v54.val[2]) = v37;
    sub_23BAD7FF0();
  }
  *a3 = v23;
}

void sub_23BA91040(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_23BAD8090();
  __swift_project_value_buffer(v4, (uint64_t)qword_26ADCC840);
  uint64_t v5 = sub_23BAD8070();
  os_log_type_t v6 = sub_23BAD8470();
  if (os_log_type_enabled(v5, v6))
  {
    BOOL v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)BOOL v7 = 67109120;
    sub_23BA91370(a1, (uint64_t)&v18);
    if (v19)
    {
      pid_t v8 = 0;
    }
    else
    {
      audit_token_t atoken = v18;
      pid_t v8 = audit_token_to_pid(&atoken);
    }
    atoken.val[0] = v8;
    sub_23BAD84F0();
    _os_log_impl(&dword_23BA68000, v5, v6, "Creating URLSession for pid: %d", v7, 8u);
    MEMORY[0x23ECCD620](v7, -1, -1);
  }

  id v9 = objc_msgSend(self, sel_defaultSessionConfiguration);
  objc_msgSend(v9, sel_setURLCache_, 0);
  objc_msgSend(v9, sel_set_timingDataOptions_, (unint64_t)objc_msgSend(v9, sel__timingDataOptions) | 1);
  sub_23BA91370(a1, (uint64_t)&atoken);
  if ((v17 & 1) == 0)
  {
    audit_token_t v15 = atoken;
    uint64_t v10 = sub_23BA9168C(&v15, 32);
    unint64_t v12 = v11;
    char v13 = (void *)sub_23BAD72F0();
    sub_23BA8705C(v10, v12);
    objc_msgSend(v9, sel_set_sourceApplicationAuditTokenData_, v13);
  }
  id v14 = objc_msgSend(self, sel_sessionWithConfiguration_, v9);

  *a2 = v14;
}

void sub_23BA91290()
{
  sub_23BAD7EF0();
  sub_23BAD8440();
}

void sub_23BA912FC()
{
  sub_23BAD7EF0();
  sub_23BAD8450();
}

uint64_t sub_23BA91370(uint64_t a1, uint64_t a2)
{
  sub_23BA913D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23BA913D4()
{
  if (!qword_26ADC81D8)
  {
    unint64_t v0 = sub_23BAD84E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC81D8);
    }
  }
}

uint64_t sub_23BA9142C()
{
  return MEMORY[0x270FA0238](v0, 49, 7);
}

void sub_23BA9143C(void *a1@<X8>)
{
  sub_23BA91040(v1 + 16, a1);
}

unint64_t sub_23BA91444()
{
  unint64_t result = qword_26ADC91B8;
  if (!qword_26ADC91B8)
  {
    sub_23BAD7D80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC91B8);
  }
  return result;
}

unint64_t sub_23BA9149C()
{
  unint64_t result = qword_26ADC96F8;
  if (!qword_26ADC96F8)
  {
    sub_23BA91524(255, (unint64_t *)&qword_26ADC96F0, MEMORY[0x263F7CD78], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC96F8);
  }
  return result;
}

void sub_23BA91524(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_23BA91588()
{
  unint64_t result = qword_26ADC8218;
  if (!qword_26ADC8218)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26ADC8218);
  }
  return result;
}

uint64_t sub_23BA915C8(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_23BA9168C(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_23BA915C8(__src, &__src[a2]);
  }
  sub_23BAD72A0();
  swift_allocObject();
  sub_23BAD7290();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_23BAD72E0();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t StockSearchResult.stocks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StockSearchResult.source.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StockSearchResult() + 20);
  return sub_23BA851F4(v3, a1);
}

uint64_t type metadata accessor for StockSearchResult()
{
  uint64_t result = qword_268A75748;
  if (!qword_268A75748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StockSearchResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23BA917EC);
}

uint64_t sub_23BA917EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DataSource(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    unint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for StockSearchResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23BA918B0);
}

void *sub_23BA918B0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  char v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DataSource(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_23BA91958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_23BAD74D0();
  uint64_t v80 = *(void *)(v4 - 8);
  uint64_t v81 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v77 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_23BAD7350();
  uint64_t v78 = *(void *)(v6 - 8);
  uint64_t v79 = v6;
  MEMORY[0x270FA5388](v6);
  id v76 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v75 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v74 = (char *)&v53 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  audit_token_t v15 = (char *)&v53 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  audit_token_t v18 = (char *)&v53 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v53 - v19;
  uint64_t v21 = sub_23BAD7740();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  unint64_t v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v53 - v26;
  uint64_t v73 = sub_23BAD7BE0();
  int v72 = v28;
  uint64_t v71 = sub_23BAD7AE0();
  int v70 = v29;
  uint64_t v69 = sub_23BAD7BA0();
  int v68 = v30;
  uint64_t v67 = sub_23BAD7B50();
  int v66 = v31;
  uint64_t v65 = sub_23BAD7BC0();
  int v64 = v32;
  uint64_t v63 = sub_23BAD7B40();
  int v62 = v33;
  uint64_t v61 = sub_23BAD7BB0();
  int v60 = v34;
  uint64_t v59 = sub_23BAD7AF0();
  uint64_t v58 = v35;
  sub_23BAD7B20();
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v27, v21);
  int v36 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v25, v21);
  if (v36 == *MEMORY[0x263F7A9B0])
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
    int v57 = 0;
    goto LABEL_10;
  }
  int v37 = v36;
  if (v36 == *MEMORY[0x263F7A9A0])
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
    int v38 = 1;
LABEL_9:
    int v57 = v38;
    goto LABEL_10;
  }
  if (v36 == *MEMORY[0x263F7A9A8])
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
    int v38 = 2;
    goto LABEL_9;
  }
  if (v36 == *MEMORY[0x263F7A9B8])
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
    int v38 = 3;
    goto LABEL_9;
  }
  char v56 = v15;
  int v57 = *MEMORY[0x263F7A998];
  uint64_t v52 = *(void (**)(char *, uint64_t))(v22 + 8);
  v52(v27, v21);
  if (v37 == v57)
  {
    int v57 = 4;
  }
  else
  {
    v52(v25, v21);
    int v57 = 0;
  }
  audit_token_t v15 = v56;
LABEL_10:
  uint64_t v39 = (uint64_t)v20;
  sub_23BAD7B00();
  uint64_t v40 = (uint64_t)v18;
  sub_23BAD7B10();
  sub_23BAD7B70();
  sub_23BA928FC(MEMORY[0x263F7AED8], v84);
  LODWORD(v56) = v84[0];
  sub_23BA928FC(MEMORY[0x263F7AEE8], (char *)&v83);
  int v55 = v83;
  sub_23BA928FC(MEMORY[0x263F7AEE0], (char *)&v82);
  int v54 = v82;
  uint64_t v53 = sub_23BAD7BD0();
  char v42 = v41;
  uint64_t v43 = (uint64_t)v74;
  sub_23BAD7B90();
  uint64_t v44 = (uint64_t)v75;
  sub_23BAD7B60();
  uint64_t v45 = v76;
  sub_23BAD7B80();
  uint64_t v46 = v77;
  sub_23BAD7B30();
  uint64_t v47 = sub_23BAD7BF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(a1, v47);
  *(void *)a2 = v73;
  *(unsigned char *)(a2 + 8) = v72 & 1;
  *(void *)(a2 + 16) = v71;
  *(unsigned char *)(a2 + 24) = v70 & 1;
  *(void *)(a2 + 32) = v69;
  *(unsigned char *)(a2 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v68 & 1;
  *(void *)(a2 + 48) = v67;
  *(unsigned char *)(a2 + 56) = v66 & 1;
  *(void *)(a2 + 64) = v65;
  *(unsigned char *)(a2 + 72) = v64 & 1;
  *(void *)(a2 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v63;
  *(unsigned char *)(a2 + 88) = v62 & 1;
  *(void *)(a2 + 96) = v61;
  *(unsigned char *)(a2 + 104) = v60 & 1;
  uint64_t v48 = v58;
  *(void *)(a2 + 112) = v59;
  *(void *)(a2 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v48;
  *(unsigned char *)(a2 + 128) = v57;
  uint64_t v49 = (int *)type metadata accessor for Quote();
  sub_23BA96800(v39, a2 + v49[13]);
  sub_23BA96800(v40, a2 + v49[14]);
  sub_23BA96800((uint64_t)v15, a2 + v49[15]);
  *(unsigned char *)(a2 + v49[16]) = (_BYTE)v56;
  *(unsigned char *)(a2 + v49[17]) = v55;
  *(unsigned char *)(a2 + v49[18]) = v54;
  uint64_t v50 = a2 + v49[19];
  *(void *)uint64_t v50 = v53;
  *(unsigned char *)(v50 + 8) = v42 & 1;
  sub_23BA96800(v43, a2 + v49[20]);
  sub_23BA96800(v44, a2 + v49[21]);
  (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(a2 + v49[22], v45, v79);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v80 + 32))(a2 + v49[23], v46, v81);
}

unint64_t Quote.Source.description.getter()
{
  unint64_t result = 0x44636972656E6567;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x655271616473616ELL;
      break;
    case 2:
      unint64_t result = 0x6C6165526573796ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x52544B4D6573796ELL;
      break;
    case 5:
      unint64_t result = 0x52636972656E6567;
      break;
    case 6:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t Quote.Source.rawValue.getter()
{
  unint64_t result = 0x44636972656E6567;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x655271616473616ELL;
      break;
    case 2:
      unint64_t result = 0x6C6165526573796ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x52544B4D6573796ELL;
      break;
    case 5:
      unint64_t result = 0x52636972656E6567;
      break;
    case 6:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

StocksKit::Quote::Source_optional __swiftcall Quote.Source.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_23BAD8720();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_23BA92370()
{
  return sub_23BAD3924();
}

uint64_t sub_23BA9237C()
{
  return sub_23BABDD08();
}

uint64_t sub_23BA92384()
{
  return sub_23BAD3924();
}

StocksKit::Quote::Source_optional sub_23BA9238C(Swift::String *a1)
{
  return Quote.Source.init(rawValue:)(*a1);
}

unint64_t sub_23BA92398@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Quote.Source.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23BA923C0(unsigned __int8 *a1, char *a2)
{
  return sub_23BA9A8E8(*a1, *a2);
}

uint64_t sub_23BA923CC()
{
  return sub_23BAD82C0();
}

uint64_t sub_23BA9242C()
{
  return sub_23BAD82B0();
}

uint64_t Quote.price.getter()
{
  return *(void *)v0;
}

uint64_t Quote.priceChange.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t Quote.marketCapitalization.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t Quote.afterHoursPrice.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t Quote.afterHoursPriceChange.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t Quote.preMarketPrice.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t Quote.preMarketPriceChange.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t Quote.currencyCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

void Quote.exchangeStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 128);
}

uint64_t Quote.exchangeOpen.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Quote() + 52);
  return sub_23BA925A0(v3, a1);
}

uint64_t type metadata accessor for Quote()
{
  uint64_t result = qword_268A757B8;
  if (!qword_268A757B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23BA925A0(uint64_t a1, uint64_t a2)
{
  sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Quote.exchangeClose.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Quote() + 56);
  return sub_23BA925A0(v3, a1);
}

uint64_t Quote.exchangeNextOpen.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Quote() + 60);
  return sub_23BA925A0(v3, a1);
}

uint64_t Quote.priceSource.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Quote();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t Quote.afterHoursSource.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Quote();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 68));
  return result;
}

uint64_t Quote.preMarketSource.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Quote();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 72));
  return result;
}

uint64_t Quote.preferredRefreshInterval.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Quote() + 76));
}

uint64_t Quote.earningsStartDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Quote() + 80);
  return sub_23BA925A0(v3, a1);
}

uint64_t Quote.earningsEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Quote() + 84);
  return sub_23BA925A0(v3, a1);
}

uint64_t Quote.dateLastRefreshed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Quote() + 88);
  uint64_t v4 = sub_23BAD7350();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t Quote.marketTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Quote() + 92);
  uint64_t v4 = sub_23BAD74D0();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_23BA928FC@<X0>(void (*a1)(uint64_t)@<X1>, char *a2@<X8>)
{
  sub_23BA99F80(0, &qword_268A757F8, MEMORY[0x263F7A8D8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v29 - v5;
  uint64_t v7 = sub_23BAD7720();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v29 - v16;
  a1(v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    uint64_t result = sub_23BA99FE4((uint64_t)v6, &qword_268A757F8, MEMORY[0x263F7A8D8]);
    char v19 = 7;
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v6, v7);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v20(v14, v17, v7);
  v20(v11, v14, v7);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
  if (v21 == *MEMORY[0x263F7A8A8])
  {
    char v19 = 0;
LABEL_13:
    uint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
    v24(v14, v7);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v17, v7);
    goto LABEL_14;
  }
  int v22 = v21;
  if (v21 == *MEMORY[0x263F7A8B0] || v21 == *MEMORY[0x263F7A8A0])
  {
    char v19 = 1;
    goto LABEL_13;
  }
  if (v21 == *MEMORY[0x263F7A8C8])
  {
    char v19 = 3;
    goto LABEL_13;
  }
  if (v21 == *MEMORY[0x263F7A8C0])
  {
    unint64_t v25 = *(void (**)(char *, uint64_t))(v8 + 8);
    v25(v14, v7);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v17, v7);
    char v19 = 4;
  }
  else if (v21 == *MEMORY[0x263F7A8B8])
  {
    uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
    v26(v14, v7);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v26)(v17, v7);
    char v19 = 5;
  }
  else
  {
    int v27 = *MEMORY[0x263F7A8D0];
    int v28 = *(void (**)(char *, uint64_t))(v8 + 8);
    v28(v14, v7);
    if (v22 != v27) {
      v28(v11, v7);
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v17, v7);
    char v19 = 6;
  }
LABEL_14:
  *a2 = v19;
  return result;
}

unint64_t sub_23BA92CC8(char a1)
{
  unint64_t result = 0x6563697270;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6168436563697270;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x756F487265746661;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
    case 14:
      unint64_t result = 0x656B72614D657270;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x79636E6572727563;
      break;
    case 8:
    case 9:
    case 10:
      unint64_t result = 0x65676E6168637865;
      break;
    case 11:
    case 13:
      unint64_t result = 0xD000000000000010;
      break;
    case 12:
      unint64_t result = 0x756F536563697270;
      break;
    case 15:
      unint64_t result = 0xD000000000000018;
      break;
    case 16:
      unint64_t result = 0xD000000000000011;
      break;
    case 17:
      unint64_t result = 0x73676E696E726165;
      break;
    case 18:
      unint64_t result = 0xD000000000000011;
      break;
    case 19:
      unint64_t result = 0x695474656B72616DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_23BA92F64()
{
  return sub_23BA92CC8(*v0);
}

uint64_t sub_23BA92F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BA9958C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BA92F94(unsigned char *a1@<X8>)
{
  *a1 = 20;
}

uint64_t sub_23BA92FA0(uint64_t a1)
{
  unint64_t v2 = sub_23BA9664C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA92FDC(uint64_t a1)
{
  unint64_t v2 = sub_23BA9664C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Quote.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_23BA96748(0, &qword_268A75760, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA9664C();
  sub_23BAD89B0();
  char v14 = 0;
  sub_23BAD8800();
  if (!v2)
  {
    char v14 = 1;
    sub_23BAD8800();
    char v14 = 2;
    sub_23BAD8800();
    char v14 = 3;
    sub_23BAD8800();
    char v14 = 4;
    sub_23BAD8800();
    char v14 = 5;
    sub_23BAD8800();
    char v14 = 6;
    sub_23BAD8800();
    char v14 = 7;
    sub_23BAD87F0();
    char v14 = *(unsigned char *)(v3 + 128);
    char v13 = 8;
    sub_23BA966A0();
    sub_23BAD8850();
    uint64_t v10 = (int *)type metadata accessor for Quote();
    char v14 = 9;
    sub_23BAD7350();
    sub_23BA99F38(&qword_26ADC8238, MEMORY[0x263F07490]);
    sub_23BAD8820();
    char v14 = 10;
    sub_23BAD8820();
    char v14 = 11;
    sub_23BAD8820();
    char v14 = *(unsigned char *)(v3 + v10[16]);
    char v13 = 12;
    v12[1] = sub_23BA966F4();
    sub_23BAD8820();
    char v14 = *(unsigned char *)(v3 + v10[17]);
    char v13 = 13;
    sub_23BAD8820();
    char v14 = *(unsigned char *)(v3 + v10[18]);
    char v13 = 14;
    sub_23BAD8820();
    char v14 = 15;
    sub_23BAD8800();
    char v14 = 16;
    sub_23BAD8820();
    char v14 = 17;
    sub_23BAD8820();
    char v14 = 18;
    sub_23BAD8850();
    char v14 = 19;
    sub_23BAD74D0();
    sub_23BA99F38(&qword_268A75780, MEMORY[0x263F079C8]);
    sub_23BAD8850();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t Quote.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_23BAD74D0();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v51 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_23BAD7350();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  char v13 = (char *)&v45 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v45 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  char v19 = (char *)&v45 - v18;
  MEMORY[0x270FA5388](v17);
  int v21 = (char *)&v45 - v20;
  sub_23BA96748(0, &qword_268A75788, MEMORY[0x263F8E040]);
  uint64_t v54 = *(void *)(v22 - 8);
  uint64_t v55 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v45 - v23;
  uint64_t v59 = (int *)type metadata accessor for Quote();
  MEMORY[0x270FA5388](v59);
  int v60 = (uint64_t *)((char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = a1[3];
  uint64_t v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_23BA9664C();
  char v56 = v24;
  uint64_t v27 = (uint64_t)v57;
  sub_23BAD89A0();
  if (v27) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  }
  uint64_t v28 = (uint64_t)v21;
  int v57 = v19;
  uint64_t v46 = v16;
  uint64_t v29 = v54;
  char v62 = 0;
  uint64_t v30 = sub_23BAD8760();
  int v31 = v60;
  uint64_t *v60 = v30;
  *((unsigned char *)v31 + 8) = v32 & 1;
  char v62 = 1;
  uint64_t v31[2] = sub_23BAD8760();
  *((unsigned char *)v31 + 24) = v33 & 1;
  char v62 = 2;
  v31[4] = sub_23BAD8760();
  *((unsigned char *)v31 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v34 & 1;
  char v62 = 3;
  v31[6] = sub_23BAD8760();
  *((unsigned char *)v31 + 56) = v35 & 1;
  char v62 = 4;
  v31[8] = sub_23BAD8760();
  *((unsigned char *)v31 + 72) = v36 & 1;
  char v62 = 5;
  v31[10] = sub_23BAD8760();
  *((unsigned char *)v31 + 88) = v37 & 1;
  char v62 = 6;
  v31[12] = sub_23BAD8760();
  *((unsigned char *)v31 + 104) = v38 & 1;
  char v62 = 7;
  v31[14] = sub_23BAD8750();
  v31[15] = v39;
  char v61 = 8;
  sub_23BA967AC();
  sub_23BAD87B0();
  *((unsigned char *)v31 + 128) = v62;
  char v62 = 9;
  sub_23BA99F38(&qword_26ADC7F00, MEMORY[0x263F07490]);
  sub_23BAD8780();
  sub_23BA96800(v28, (uint64_t)v60 + v59[13]);
  char v62 = 10;
  sub_23BAD8780();
  sub_23BA96800((uint64_t)v57, (uint64_t)v60 + v59[14]);
  char v62 = 11;
  sub_23BAD8780();
  sub_23BA96800((uint64_t)v46, (uint64_t)v60 + v59[15]);
  char v61 = 12;
  sub_23BA96894();
  sub_23BAD8780();
  *((unsigned char *)v60 + v59[16]) = v62;
  char v61 = 13;
  sub_23BAD8780();
  *((unsigned char *)v60 + v59[17]) = v62;
  char v61 = 14;
  sub_23BAD8780();
  *((unsigned char *)v60 + v59[18]) = v62;
  char v62 = 15;
  uint64_t v40 = sub_23BAD8760();
  char v41 = (char *)v60 + v59[19];
  *(void *)char v41 = v40;
  v41[8] = v42 & 1;
  char v62 = 16;
  sub_23BAD8780();
  sub_23BA96800((uint64_t)v13, (uint64_t)v60 + v59[20]);
  char v62 = 17;
  sub_23BAD8780();
  sub_23BA96800((uint64_t)v10, (uint64_t)v60 + v59[21]);
  char v62 = 18;
  sub_23BAD87B0();
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))((char *)v60 + v59[22], v49, v53);
  char v62 = 19;
  sub_23BA99F38(&qword_268A757A0, MEMORY[0x263F079C8]);
  sub_23BAD87B0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v56, v55);
  uint64_t v43 = (uint64_t)v60;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))((char *)v60 + v59[23], v51, v48);
  sub_23BA968E8(v43, v50);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  return sub_23BA9694C(v43, (uint64_t (*)(void))type metadata accessor for Quote);
}

uint64_t sub_23BA941DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Quote.init(from:)(a1, a2);
}

uint64_t sub_23BA941F4(void *a1)
{
  return Quote.encode(to:)(a1);
}

uint64_t Quote.description.getter()
{
  sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v69 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v68 = (uint64_t)&v67 - v2;
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  uint64_t v3 = MEMORY[0x263F8D538];
  uint64_t v4 = MEMORY[0x263F8D5B8];
  if ((v0[1] & 1) == 0)
  {
    uint64_t v5 = *v0;
    sub_23BA99F80(0, &qword_268A755E0, (uint64_t (*)(uint64_t))sub_23BA891AC, MEMORY[0x263F8E0F8]);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_23BADABA0;
    *(void *)(v6 + 56) = v3;
    *(void *)(v6 + 64) = v4;
    *(void *)(v6 + 32) = v5;
    sub_23BAD8250();
  }
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = 0x2865746F7551;
  unint64_t v72 = 0xE600000000000000;
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  uint64_t v7 = v71;
  unint64_t v8 = v72;
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  if ((v0[3] & 1) == 0)
  {
    uint64_t v9 = v0[2];
    sub_23BA99F80(0, &qword_268A755E0, (uint64_t (*)(uint64_t))sub_23BA891AC, MEMORY[0x263F8E0F8]);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_23BADABA0;
    *(void *)(v10 + 56) = v3;
    *(void *)(v10 + 64) = v4;
    *(void *)(v10 + 32) = v9;
    sub_23BAD8250();
  }
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v7;
  unint64_t v72 = v8;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v71;
  unint64_t v12 = v72;
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  if ((v0[5] & 1) == 0)
  {
    uint64_t v13 = v0[4];
    sub_23BA99F80(0, &qword_268A755E0, (uint64_t (*)(uint64_t))sub_23BA891AC, MEMORY[0x263F8E0F8]);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_23BADABA0;
    *(void *)(v14 + 56) = v3;
    *(void *)(v14 + 64) = v4;
    *(void *)(v14 + 32) = v13;
    sub_23BAD8250();
  }
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v11;
  unint64_t v72 = v12;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v71;
  unint64_t v16 = v72;
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  if ((v0[7] & 1) == 0)
  {
    uint64_t v17 = v0[6];
    sub_23BA99F80(0, &qword_268A755E0, (uint64_t (*)(uint64_t))sub_23BA891AC, MEMORY[0x263F8E0F8]);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_23BADABA0;
    *(void *)(v18 + 56) = v3;
    *(void *)(v18 + 64) = v4;
    *(void *)(v18 + 32) = v17;
    sub_23BAD8250();
  }
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v15;
  unint64_t v72 = v16;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v71;
  unint64_t v20 = v72;
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  if ((v0[9] & 1) == 0)
  {
    uint64_t v21 = v0[8];
    sub_23BA99F80(0, &qword_268A755E0, (uint64_t (*)(uint64_t))sub_23BA891AC, MEMORY[0x263F8E0F8]);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_23BADABA0;
    *(void *)(v22 + 56) = v3;
    *(void *)(v22 + 64) = v4;
    *(void *)(v22 + 32) = v21;
    sub_23BAD8250();
  }
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v19;
  unint64_t v72 = v20;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = v71;
  unint64_t v24 = v72;
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  if ((v0[11] & 1) == 0)
  {
    uint64_t v25 = v0[10];
    sub_23BA99F80(0, &qword_268A755E0, (uint64_t (*)(uint64_t))sub_23BA891AC, MEMORY[0x263F8E0F8]);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_23BADABA0;
    *(void *)(v26 + 56) = v3;
    *(void *)(v26 + 64) = v4;
    *(void *)(v26 + 32) = v25;
    sub_23BAD8250();
  }
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v23;
  unint64_t v72 = v24;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = v71;
  unint64_t v28 = v72;
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  if ((v0[13] & 1) == 0)
  {
    uint64_t v29 = v0[12];
    sub_23BA99F80(0, &qword_268A755E0, (uint64_t (*)(uint64_t))sub_23BA891AC, MEMORY[0x263F8E0F8]);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_23BADABA0;
    *(void *)(v30 + 56) = v3;
    *(void *)(v30 + 64) = v4;
    *(void *)(v30 + 32) = v29;
    sub_23BAD8250();
  }
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v27;
  unint64_t v72 = v28;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = v71;
  unint64_t v32 = v72;
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v31;
  unint64_t v72 = v32;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = v71;
  unint64_t v34 = v72;
  uint64_t v71 = 46;
  unint64_t v72 = 0xE100000000000000;
  char v70 = *((unsigned char *)v0 + 128);
  sub_23BAD8260();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v33;
  unint64_t v72 = v34;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = v71;
  unint64_t v36 = v72;
  uint64_t v71 = 46;
  unint64_t v72 = 0xE100000000000000;
  char v37 = (int *)type metadata accessor for Quote();
  uint64_t v38 = v68;
  sub_23BA925A0((uint64_t)v0 + v37[13], v68);
  sub_23BAD8260();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v35;
  unint64_t v72 = v36;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = v71;
  unint64_t v40 = v72;
  uint64_t v71 = 46;
  unint64_t v72 = 0xE100000000000000;
  sub_23BA925A0((uint64_t)v0 + v37[14], v38);
  sub_23BAD8260();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v39;
  unint64_t v72 = v40;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v41 = v71;
  unint64_t v42 = v72;
  uint64_t v71 = 46;
  unint64_t v72 = 0xE100000000000000;
  sub_23BA925A0((uint64_t)v0 + v37[15], v38);
  sub_23BAD8260();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v41;
  unint64_t v72 = v42;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = v71;
  unint64_t v44 = v72;
  uint64_t v71 = 46;
  unint64_t v72 = 0xE100000000000000;
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v43;
  unint64_t v72 = v44;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v45 = v71;
  unint64_t v46 = v72;
  uint64_t v71 = 46;
  unint64_t v72 = 0xE100000000000000;
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v45;
  unint64_t v72 = v46;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v47 = v71;
  unint64_t v48 = v72;
  uint64_t v71 = 46;
  unint64_t v72 = 0xE100000000000000;
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v47;
  unint64_t v72 = v48;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = v71;
  unint64_t v50 = v72;
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  uint64_t v51 = (uint64_t *)((char *)v0 + v37[19]);
  if ((v51[1] & 1) == 0)
  {
    uint64_t v52 = *v51;
    sub_23BA99F80(0, &qword_268A755E0, (uint64_t (*)(uint64_t))sub_23BA891AC, MEMORY[0x263F8E0F8]);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_23BADABA0;
    *(void *)(v53 + 56) = MEMORY[0x263F8D538];
    *(void *)(v53 + 64) = MEMORY[0x263F8D5B8];
    *(void *)(v53 + 32) = v52;
    sub_23BAD8250();
  }
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v49;
  unint64_t v72 = v50;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v55 = v71;
  unint64_t v54 = v72;
  uint64_t v71 = 46;
  unint64_t v72 = 0xE100000000000000;
  uint64_t v56 = (uint64_t)v0 + v37[20];
  int v57 = v37;
  uint64_t v58 = v68;
  sub_23BA925A0(v56, v68);
  sub_23BAD8260();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v55;
  unint64_t v72 = v54;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v60 = v71;
  unint64_t v59 = v72;
  uint64_t v71 = 46;
  unint64_t v72 = 0xE100000000000000;
  sub_23BA925A0((uint64_t)v0 + v57[21], v58);
  sub_23BAD8260();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  sub_23BAD8280();
  uint64_t v71 = v60;
  unint64_t v72 = v59;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v62 = v71;
  unint64_t v61 = v72;
  sub_23BAD7350();
  sub_23BA99F38((unint64_t *)&qword_26ADC91A0, MEMORY[0x263F07490]);
  uint64_t v71 = sub_23BAD8870();
  unint64_t v72 = v63;
  sub_23BAD8280();
  uint64_t v71 = v62;
  unint64_t v72 = v61;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v65 = v71;
  unint64_t v64 = v72;
  sub_23BAD74D0();
  sub_23BA99F38(&qword_268A757A8, MEMORY[0x263F079C8]);
  sub_23BAD8870();
  uint64_t v71 = v65;
  unint64_t v72 = v64;
  swift_bridgeObjectRetain();
  sub_23BAD8280();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v71;
}

uint64_t _s9StocksKit5QuoteV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD7350();
  uint64_t v160 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  v158 = &v138[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23BA99EA4();
  uint64_t v159 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  v154 = &v138[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  v155 = &v138[-v10];
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v156 = &v138[-v12];
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v157 = (uint64_t)&v138[-v14];
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = &v138[-v15];
  sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = MEMORY[0x270FA5388](&v138[-v21]);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = &v138[-v28];
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  unint64_t v32 = &v138[-v31];
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  uint64_t v35 = &v138[-v34];
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  uint64_t v38 = &v138[-v37];
  uint64_t v39 = MEMORY[0x270FA5388](v36);
  uint64_t v41 = &v138[-v40];
  uint64_t v42 = MEMORY[0x270FA5388](v39);
  uint64_t v52 = &v138[-v51];
  char v53 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      char v53 = 1;
    }
    if (v53) {
      goto LABEL_64;
    }
  }
  char v54 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16)) {
      char v54 = 1;
    }
    if (v54) {
      goto LABEL_64;
    }
  }
  char v55 = *(unsigned char *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40))
  {
    if (!*(unsigned char *)(a2 + 40)) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
      char v55 = 1;
    }
    if (v55) {
      goto LABEL_64;
    }
  }
  char v56 = *(unsigned char *)(a2 + 56);
  if (*(unsigned char *)(a1 + 56))
  {
    if (!*(unsigned char *)(a2 + 56)) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*(double *)(a1 + 48) != *(double *)(a2 + 48)) {
      char v56 = 1;
    }
    if (v56) {
      goto LABEL_64;
    }
  }
  char v57 = *(unsigned char *)(a2 + 72);
  if (*(unsigned char *)(a1 + 72))
  {
    if (!*(unsigned char *)(a2 + 72)) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*(double *)(a1 + 64) != *(double *)(a2 + 64)) {
      char v57 = 1;
    }
    if (v57) {
      goto LABEL_64;
    }
  }
  char v58 = *(unsigned char *)(a2 + 88);
  if (*(unsigned char *)(a1 + 88))
  {
    if (!*(unsigned char *)(a2 + 88)) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*(double *)(a1 + 80) != *(double *)(a2 + 80)) {
      char v58 = 1;
    }
    if (v58) {
      goto LABEL_64;
    }
  }
  char v59 = *(unsigned char *)(a2 + 104);
  if (*(unsigned char *)(a1 + 104))
  {
    if (!*(unsigned char *)(a2 + 104)) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*(double *)(a1 + 96) != *(double *)(a2 + 96)) {
      char v59 = 1;
    }
    if (v59) {
      goto LABEL_64;
    }
  }
  uint64_t v60 = *(void *)(a1 + 120);
  uint64_t v61 = *(void *)(a2 + 120);
  if (!v60)
  {
    uint64_t v152 = v47;
    uint64_t v153 = v46;
    uint64_t v150 = v49;
    uint64_t v151 = v45;
    uint64_t v148 = v44;
    uint64_t v149 = v43;
    uint64_t v146 = v50;
    uint64_t v147 = v42;
    uint64_t v145 = v48;
    if (v61) {
      goto LABEL_64;
    }
    goto LABEL_50;
  }
  if (!v61) {
    goto LABEL_64;
  }
  uint64_t v152 = v47;
  uint64_t v153 = v46;
  uint64_t v150 = v49;
  uint64_t v151 = v45;
  uint64_t v148 = v44;
  uint64_t v149 = v43;
  uint64_t v146 = v50;
  uint64_t v147 = v42;
  uint64_t v145 = v48;
  if (*(void *)(a1 + 112) == *(void *)(a2 + 112) && v60 == v61 || (char v62 = sub_23BAD88A0(), v63 = 0, (v62 & 1) != 0))
  {
LABEL_50:
    if ((sub_23BA9AB9C(*(unsigned char *)(a1 + 128), *(unsigned char *)(a2 + 128)) & 1) == 0) {
      goto LABEL_64;
    }
    v143 = (int *)type metadata accessor for Quote();
    sub_23BA925A0(a1 + v143[13], (uint64_t)v52);
    sub_23BA925A0(a2 + v143[13], (uint64_t)v41);
    uint64_t v144 = (uint64_t)&v16[*(int *)(v159 + 48)];
    sub_23BA925A0((uint64_t)v52, (uint64_t)v16);
    sub_23BA925A0((uint64_t)v41, v144);
    unint64_t v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v160 + 48);
    uint64_t v141 = v160 + 48;
    v142 = v64;
    if (v64((uint64_t)v16, 1, v4) == 1)
    {
      uint64_t v65 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
      sub_23BA99FE4((uint64_t)v41, &qword_268A75758, MEMORY[0x263F07490]);
      sub_23BA99FE4((uint64_t)v52, &qword_268A75758, v65);
      int v66 = v142;
      if (v142(v144, 1, v4) != 1) {
        goto LABEL_62;
      }
      sub_23BA99FE4((uint64_t)v16, &qword_268A75758, MEMORY[0x263F07490]);
    }
    else
    {
      sub_23BA925A0((uint64_t)v16, (uint64_t)v38);
      if (v142(v144, 1, v4) == 1)
      {
        uint64_t v67 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
        sub_23BA99FE4((uint64_t)v41, &qword_268A75758, MEMORY[0x263F07490]);
        sub_23BA99FE4((uint64_t)v52, &qword_268A75758, v67);
        (*(void (**)(unsigned char *, uint64_t))(v160 + 8))(v38, v4);
        goto LABEL_62;
      }
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v160 + 32))(v158, v144, v4);
      sub_23BA99F38(&qword_268A757F0, MEMORY[0x263F07490]);
      int v139 = sub_23BAD8220();
      uint64_t v68 = *(void (**)(unsigned char *, uint64_t))(v160 + 8);
      uint64_t v140 = v160 + 8;
      uint64_t v144 = (uint64_t)v68;
      v68(v158, v4);
      uint64_t v69 = (uint64_t)v41;
      char v70 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
      sub_23BA99FE4(v69, &qword_268A75758, MEMORY[0x263F07490]);
      sub_23BA99FE4((uint64_t)v52, &qword_268A75758, v70);
      ((void (*)(unsigned char *, uint64_t))v144)(v38, v4);
      sub_23BA99FE4((uint64_t)v16, &qword_268A75758, v70);
      int v66 = v142;
      if ((v139 & 1) == 0) {
        goto LABEL_64;
      }
    }
    uint64_t v71 = v143;
    sub_23BA925A0(a1 + v143[14], (uint64_t)v35);
    sub_23BA925A0(a2 + v71[14], (uint64_t)v32);
    unint64_t v16 = (unsigned char *)v157;
    uint64_t v72 = v157 + *(int *)(v159 + 48);
    sub_23BA925A0((uint64_t)v35, v157);
    sub_23BA925A0((uint64_t)v32, v72);
    if (v66((uint64_t)v16, 1, v4) == 1)
    {
      uint64_t v73 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
      sub_23BA99FE4((uint64_t)v32, &qword_268A75758, MEMORY[0x263F07490]);
      uint64_t v74 = v73;
      unint64_t v16 = (unsigned char *)v157;
      sub_23BA99FE4((uint64_t)v35, &qword_268A75758, v74);
      if (v66(v72, 1, v4) == 1)
      {
        sub_23BA99FE4((uint64_t)v16, &qword_268A75758, MEMORY[0x263F07490]);
        goto LABEL_67;
      }
    }
    else
    {
      sub_23BA925A0((uint64_t)v16, (uint64_t)v29);
      if (v66(v72, 1, v4) != 1)
      {
        uint64_t v78 = v160;
        uint64_t v79 = v158;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v160 + 32))(v158, v72, v4);
        sub_23BA99F38(&qword_268A757F0, MEMORY[0x263F07490]);
        LODWORD(v144) = sub_23BAD8220();
        uint64_t v80 = *(void (**)(unsigned char *, uint64_t))(v78 + 8);
        v80(v79, v4);
        uint64_t v81 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
        sub_23BA99FE4((uint64_t)v32, &qword_268A75758, MEMORY[0x263F07490]);
        sub_23BA99FE4((uint64_t)v35, &qword_268A75758, v81);
        v80(v29, v4);
        sub_23BA99FE4(v157, &qword_268A75758, v81);
        if ((v144 & 1) == 0) {
          goto LABEL_64;
        }
LABEL_67:
        unsigned __int8 v82 = v143;
        uint64_t v83 = v153;
        sub_23BA925A0(a1 + v143[15], v153);
        uint64_t v84 = v152;
        sub_23BA925A0(a2 + v82[15], v152);
        uint64_t v85 = v156;
        uint64_t v86 = (uint64_t)&v156[*(int *)(v159 + 48)];
        sub_23BA925A0(v83, (uint64_t)v156);
        uint64_t v87 = v84;
        sub_23BA925A0(v84, v86);
        int64_t v88 = v142;
        if (v142((uint64_t)v85, 1, v4) == 1)
        {
          int v89 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
          sub_23BA99FE4(v87, &qword_268A75758, MEMORY[0x263F07490]);
          sub_23BA99FE4(v153, &qword_268A75758, v89);
          if (v88(v86, 1, v4) == 1)
          {
            sub_23BA99FE4((uint64_t)v85, &qword_268A75758, MEMORY[0x263F07490]);
LABEL_74:
            uint64_t v97 = v143[16];
            int v98 = *(unsigned __int8 *)(a1 + v97);
            int v99 = *(unsigned __int8 *)(a2 + v97);
            if (v98 == 7)
            {
              if (v99 != 7) {
                goto LABEL_64;
              }
            }
            else if (v99 == 7 || (sub_23BA9A8E8(v98, v99) & 1) == 0)
            {
              goto LABEL_64;
            }
            uint64_t v100 = v143[17];
            int v101 = *(unsigned __int8 *)(a1 + v100);
            int v102 = *(unsigned __int8 *)(a2 + v100);
            if (v101 == 7)
            {
              if (v102 != 7) {
                goto LABEL_64;
              }
            }
            else if (v102 == 7 || (sub_23BA9A8E8(v101, v102) & 1) == 0)
            {
              goto LABEL_64;
            }
            uint64_t v103 = v143[18];
            int v104 = *(unsigned __int8 *)(a1 + v103);
            int v105 = *(unsigned __int8 *)(a2 + v103);
            if (v104 == 7)
            {
              if (v105 != 7) {
                goto LABEL_64;
              }
            }
            else if (v105 == 7 || (sub_23BA9A8E8(v104, v105) & 1) == 0)
            {
              goto LABEL_64;
            }
            uint64_t v106 = v143[19];
            v107 = (double *)(a1 + v106);
            char v108 = *(unsigned char *)(a1 + v106 + 8);
            v109 = (double *)(a2 + v106);
            int v110 = *(unsigned __int8 *)(a2 + v106 + 8);
            if (v108)
            {
              if (!v110) {
                goto LABEL_64;
              }
            }
            else
            {
              if (*v107 != *v109) {
                LOBYTE(v11sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 1;
              }
              if (v110) {
                goto LABEL_64;
              }
            }
            v111 = v143;
            uint64_t v112 = v149;
            sub_23BA925A0(a1 + v143[20], v149);
            uint64_t v113 = v148;
            sub_23BA925A0(a2 + v111[20], v148);
            v114 = v155;
            uint64_t v115 = (uint64_t)&v155[*(int *)(v159 + 48)];
            uint64_t v116 = v112;
            sub_23BA925A0(v112, (uint64_t)v155);
            uint64_t v117 = v113;
            sub_23BA925A0(v113, v115);
            if (v142((uint64_t)v114, 1, v4) == 1)
            {
              v118 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
              sub_23BA99FE4(v113, &qword_268A75758, MEMORY[0x263F07490]);
              sub_23BA99FE4(v116, &qword_268A75758, v118);
              if (v142(v115, 1, v4) == 1)
              {
                sub_23BA99FE4((uint64_t)v155, &qword_268A75758, MEMORY[0x263F07490]);
LABEL_102:
                v125 = v143;
                uint64_t v126 = v150;
                sub_23BA925A0(a1 + v143[21], v150);
                uint64_t v127 = v146;
                sub_23BA925A0(a2 + v125[21], v146);
                v128 = v154;
                uint64_t v129 = (uint64_t)&v154[*(int *)(v159 + 48)];
                uint64_t v150 = v126;
                sub_23BA925A0(v126, (uint64_t)v154);
                sub_23BA925A0(v127, v129);
                if (v142((uint64_t)v128, 1, v4) == 1)
                {
                  v130 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
                  sub_23BA99FE4(v127, &qword_268A75758, MEMORY[0x263F07490]);
                  sub_23BA99FE4(v150, &qword_268A75758, v130);
                  if (v142(v129, 1, v4) == 1)
                  {
                    sub_23BA99FE4((uint64_t)v154, &qword_268A75758, MEMORY[0x263F07490]);
                    goto LABEL_109;
                  }
                  goto LABEL_107;
                }
                sub_23BA925A0((uint64_t)v154, v145);
                if (v142(v129, 1, v4) == 1)
                {
                  v131 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
                  sub_23BA99FE4(v127, &qword_268A75758, MEMORY[0x263F07490]);
                  sub_23BA99FE4(v150, &qword_268A75758, v131);
                  (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v145, v4);
LABEL_107:
                  id v76 = v154;
                  goto LABEL_63;
                }
                uint64_t v132 = v160;
                v133 = v158;
                (*(void (**)(unsigned char *, uint64_t, uint64_t))(v160 + 32))(v158, v129, v4);
                sub_23BA99F38(&qword_268A757F0, MEMORY[0x263F07490]);
                uint64_t v134 = v145;
                char v135 = sub_23BAD8220();
                v136 = *(void (**)(unsigned char *, uint64_t))(v132 + 8);
                v136(v133, v4);
                v137 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
                sub_23BA99FE4(v127, &qword_268A75758, MEMORY[0x263F07490]);
                sub_23BA99FE4(v150, &qword_268A75758, v137);
                v136((unsigned char *)v134, v4);
                sub_23BA99FE4((uint64_t)v154, &qword_268A75758, v137);
                if (v135)
                {
LABEL_109:
                  if (sub_23BAD7310())
                  {
                    char v63 = MEMORY[0x23ECCB9F0](a1 + v143[23], a2 + v143[23]);
                    return v63 & 1;
                  }
                }
LABEL_64:
                char v63 = 0;
                return v63 & 1;
              }
            }
            else
            {
              sub_23BA925A0((uint64_t)v155, v147);
              if (v142(v115, 1, v4) != 1)
              {
                uint64_t v120 = v160;
                v121 = v158;
                (*(void (**)(unsigned char *, uint64_t, uint64_t))(v160 + 32))(v158, v115, v4);
                sub_23BA99F38(&qword_268A757F0, MEMORY[0x263F07490]);
                uint64_t v122 = v147;
                LODWORD(v157) = sub_23BAD8220();
                v123 = *(void (**)(unsigned char *, uint64_t))(v120 + 8);
                v123(v121, v4);
                v124 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
                sub_23BA99FE4(v117, &qword_268A75758, MEMORY[0x263F07490]);
                sub_23BA99FE4(v116, &qword_268A75758, v124);
                v123((unsigned char *)v122, v4);
                sub_23BA99FE4((uint64_t)v155, &qword_268A75758, v124);
                if ((v157 & 1) == 0) {
                  goto LABEL_64;
                }
                goto LABEL_102;
              }
              v119 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
              sub_23BA99FE4(v113, &qword_268A75758, MEMORY[0x263F07490]);
              sub_23BA99FE4(v112, &qword_268A75758, v119);
              (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v147, v4);
            }
            id v76 = v155;
LABEL_63:
            sub_23BA9694C((uint64_t)v76, (uint64_t (*)(void))sub_23BA99EA4);
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v90 = v151;
          sub_23BA925A0((uint64_t)v85, v151);
          if (v88(v86, 1, v4) != 1)
          {
            uint64_t v92 = v160;
            uint64_t v93 = v158;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v160 + 32))(v158, v86, v4);
            sub_23BA99F38(&qword_268A757F0, MEMORY[0x263F07490]);
            LODWORD(v157) = sub_23BAD8220();
            uint64_t v94 = *(void (**)(unsigned char *, uint64_t))(v92 + 8);
            v94(v93, v4);
            uint64_t v95 = v90;
            uint64_t v96 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
            sub_23BA99FE4(v87, &qword_268A75758, MEMORY[0x263F07490]);
            sub_23BA99FE4(v153, &qword_268A75758, v96);
            v94((unsigned char *)v95, v4);
            sub_23BA99FE4((uint64_t)v85, &qword_268A75758, v96);
            if ((v157 & 1) == 0) {
              goto LABEL_64;
            }
            goto LABEL_74;
          }
          uint64_t v91 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
          sub_23BA99FE4(v87, &qword_268A75758, MEMORY[0x263F07490]);
          sub_23BA99FE4(v153, &qword_268A75758, v91);
          (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v90, v4);
        }
        id v76 = v85;
        goto LABEL_63;
      }
      uint64_t v75 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
      sub_23BA99FE4((uint64_t)v32, &qword_268A75758, MEMORY[0x263F07490]);
      sub_23BA99FE4((uint64_t)v35, &qword_268A75758, v75);
      (*(void (**)(unsigned char *, uint64_t))(v160 + 8))(v29, v4);
    }
LABEL_62:
    id v76 = v16;
    goto LABEL_63;
  }
  return v63 & 1;
}

unint64_t sub_23BA9664C()
{
  unint64_t result = qword_268A75768;
  if (!qword_268A75768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75768);
  }
  return result;
}

unint64_t sub_23BA966A0()
{
  unint64_t result = qword_268A75770;
  if (!qword_268A75770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75770);
  }
  return result;
}

unint64_t sub_23BA966F4()
{
  unint64_t result = qword_268A75778;
  if (!qword_268A75778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75778);
  }
  return result;
}

void sub_23BA96748(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_23BA9664C();
    unint64_t v7 = a3(a1, &type metadata for Quote.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_23BA967AC()
{
  unint64_t result = qword_268A75790;
  if (!qword_268A75790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75790);
  }
  return result;
}

uint64_t sub_23BA96800(uint64_t a1, uint64_t a2)
{
  sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23BA96894()
{
  unint64_t result = qword_268A75798;
  if (!qword_268A75798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75798);
  }
  return result;
}

uint64_t sub_23BA968E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Quote();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA9694C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_23BA969B0()
{
  unint64_t result = qword_268A757B0;
  if (!qword_268A757B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A757B0);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Quote(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *((unsigned char *)a2 + 40);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(void *)(a1 + 48) = a2[6];
    uint64_t v7 = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(void *)(a1 + 96) = a2[12];
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    uint64_t v8 = a2[14];
    uint64_t v9 = a2[15];
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    uint64_t v10 = a3[13];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    *(void *)(a1 + 112) = v8;
    *(void *)(a1 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v9;
    uint64_t v13 = sub_23BAD7350();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v18 = a3[14];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    if (v15((char *)a2 + v18, 1, v13))
    {
      sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v20, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
    }
    uint64_t v22 = a3[15];
    uint64_t v23 = (char *)v4 + v22;
    uint64_t v24 = (char *)a2 + v22;
    if (v15((char *)a2 + v22, 1, v13))
    {
      sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v23, v24, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
    }
    uint64_t v26 = a3[17];
    *((unsigned char *)v4 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    *((unsigned char *)v4 + v26) = *((unsigned char *)a2 + v26);
    uint64_t v27 = a3[19];
    *((unsigned char *)v4 + a3[18]) = *((unsigned char *)a2 + a3[18]);
    uint64_t v28 = (char *)v4 + v27;
    uint64_t v29 = (uint64_t)a2 + v27;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = *(unsigned char *)(v29 + 8);
    uint64_t v30 = a3[20];
    uint64_t v31 = (char *)v4 + v30;
    unint64_t v32 = (char *)a2 + v30;
    if (v15((char *)a2 + v30, 1, v13))
    {
      sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v31, v32, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v31, 0, 1, v13);
    }
    uint64_t v34 = a3[21];
    uint64_t v35 = (char *)v4 + v34;
    uint64_t v36 = (char *)a2 + v34;
    if (v15((char *)a2 + v34, 1, v13))
    {
      sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)v4 + a3[22], (uint64_t)a2 + a3[22], v13);
    }
    else
    {
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      v38(v35, v36, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v13);
      v38((char *)v4 + a3[22], (char *)a2 + a3[22], v13);
    }
    uint64_t v39 = a3[23];
    uint64_t v40 = (char *)v4 + v39;
    uint64_t v41 = (uint64_t)a2 + v39;
    uint64_t v42 = sub_23BAD74D0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  }
  return v4;
}

uint64_t destroy for Quote(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[13];
  uint64_t v5 = sub_23BAD7350();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[14];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = a1 + a2[15];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = a1 + a2[20];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = a1 + a2[21];
  unsigned int v12 = v7(v11, 1, v5);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v12) {
    v13(v11, v5);
  }
  v13(a1 + a2[22], v5);
  uint64_t v14 = a1 + a2[23];
  uint64_t v15 = sub_23BAD74D0();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  return v16(v14, v15);
}

uint64_t initializeWithCopy for Quote(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v7 = *(void *)(a2 + 112);
  uint64_t v8 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v9 = a3[13];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  *(void *)(a1 + 112) = v7;
  *(void *)(a1 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v8;
  uint64_t v12 = sub_23BAD7350();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[14];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v17, v18, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[15];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  if (v14((const void *)(a2 + v20), 1, v12))
  {
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v21, v22, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
  }
  uint64_t v24 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  uint64_t v25 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a3[20];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  if (v14((const void *)(a2 + v28), 1, v12))
  {
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v29, v30, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v29, 0, 1, v12);
  }
  uint64_t v32 = a3[21];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  if (v14((const void *)(a2 + v32), 1, v12))
  {
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a1 + a3[22], a2 + a3[22], v12);
  }
  else
  {
    uint64_t v36 = *(void (**)(void *, const void *, uint64_t))(v13 + 16);
    v36(v33, v34, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v33, 0, 1, v12);
    v36((void *)(a1 + a3[22]), (const void *)(a2 + a3[22]), v12);
  }
  uint64_t v37 = a3[23];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  uint64_t v40 = sub_23BAD74D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
  return a1;
}

uint64_t assignWithCopy for Quote(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = a2[4];
  *(unsigned char *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v8;
  uint64_t v9 = a2[6];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v9;
  uint64_t v10 = a2[8];
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 64) = v10;
  uint64_t v11 = a2[10];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v11;
  uint64_t v12 = a2[12];
  *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
  *(void *)(a1 + 96) = v12;
  *(void *)(a1 + 112) = a2[14];
  *(void *)(a1 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  uint64_t v13 = a3[13];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_23BAD7350();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  uint64_t v22 = a3[14];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (char *)a2 + v22;
  int v25 = v18((void *)(a1 + v22), 1, v16);
  int v26 = v18(v24, 1, v16);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v23, v24, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v23, v16);
LABEL_12:
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v23, v24, v16);
LABEL_13:
  uint64_t v28 = a3[15];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (char *)a2 + v28;
  int v31 = v18((void *)(a1 + v28), 1, v16);
  int v32 = v18(v30, 1, v16);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v29, v30, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v29, 0, 1, v16);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v29, v16);
LABEL_18:
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v29, v30, v16);
LABEL_19:
  *(unsigned char *)(a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  *(unsigned char *)(a1 + a3[18]) = *((unsigned char *)a2 + a3[18]);
  uint64_t v34 = a3[19];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (uint64_t *)((char *)a2 + v34);
  uint64_t v37 = *v36;
  *(unsigned char *)(v35 + 8) = *((unsigned char *)v36 + 8);
  *(void *)uint64_t v35 = v37;
  uint64_t v38 = a3[20];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (char *)a2 + v38;
  int v41 = v18((void *)(a1 + v38), 1, v16);
  int v42 = v18(v40, 1, v16);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v39, v40, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v39, 0, 1, v16);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v39, v16);
LABEL_24:
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v39, v40, v16);
LABEL_25:
  uint64_t v44 = a3[21];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (char *)a2 + v44;
  int v47 = v18((void *)(a1 + v44), 1, v16);
  int v48 = v18(v46, 1, v16);
  if (!v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v45, v46, v16);
      goto LABEL_31;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v45, v16);
    goto LABEL_30;
  }
  if (v48)
  {
LABEL_30:
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v45, v46, v16);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v45, 0, 1, v16);
LABEL_31:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 24))(a1 + a3[22], (uint64_t)a2 + a3[22], v16);
  uint64_t v50 = a3[23];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = (uint64_t)a2 + v50;
  uint64_t v53 = sub_23BAD74D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 24))(v51, v52, v53);
  return a1;
}

uint64_t initializeWithTake for Quote(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v8 = a3[13];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 112) = v7;
  uint64_t v11 = sub_23BAD7350();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = a3[14];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if (v13((const void *)(a2 + v15), 1, v11))
  {
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  uint64_t v19 = a3[15];
  int v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  if (v13((const void *)(a2 + v19), 1, v11))
  {
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v20, v21, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  uint64_t v23 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = a3[20];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (const void *)(a2 + v27);
  if (v13((const void *)(a2 + v27), 1, v11))
  {
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v28, v29, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v28, 0, 1, v11);
  }
  uint64_t v31 = a3[21];
  int v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  if (v13((const void *)(a2 + v31), 1, v11))
  {
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(a1 + a3[22], a2 + a3[22], v11);
  }
  else
  {
    uint64_t v35 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
    v35(v32, v33, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v32, 0, 1, v11);
    v35((void *)(a1 + a3[22]), (const void *)(a2 + a3[22]), v11);
  }
  uint64_t v36 = a3[23];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = sub_23BAD74D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  return a1;
}

uint64_t assignWithTake for Quote(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v8 = a3[13];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_23BAD7350();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[14];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  int v20 = v13((void *)(a1 + v17), 1, v11);
  int v21 = v13(v19, 1, v11);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v18, v19, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v18, v11);
LABEL_12:
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v18, v19, v11);
LABEL_13:
  uint64_t v23 = a3[15];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  int v26 = v13((void *)(a1 + v23), 1, v11);
  int v27 = v13(v25, 1, v11);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v24, v25, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v24, v11);
LABEL_18:
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v24, v25, v11);
LABEL_19:
  uint64_t v29 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v30 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  uint64_t v33 = a3[20];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  int v36 = v13((void *)(a1 + v33), 1, v11);
  int v37 = v13(v35, 1, v11);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v34, v35, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v34, 0, 1, v11);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v34, v11);
LABEL_24:
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v34, v35, v11);
LABEL_25:
  uint64_t v39 = a3[21];
  uint64_t v40 = (void *)(a1 + v39);
  int v41 = (void *)(a2 + v39);
  int v42 = v13((void *)(a1 + v39), 1, v11);
  int v43 = v13(v41, 1, v11);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v40, v41, v11);
      goto LABEL_31;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v40, v11);
    goto LABEL_30;
  }
  if (v43)
  {
LABEL_30:
    sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v40, v41, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v40, 0, 1, v11);
LABEL_31:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(a1 + a3[22], a2 + a3[22], v11);
  uint64_t v45 = a3[23];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = sub_23BAD74D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 40))(v46, v47, v48);
  return a1;
}

uint64_t getEnumTagSinglePayload for Quote(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23BA98C74);
}

uint64_t sub_23BA98C74(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 120);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v9 - 8) + 84) == a2)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v12 = a3[13];
LABEL_11:
    int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    return v14(a1 + v12, a2, v10);
  }
  uint64_t v13 = sub_23BAD7350();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v10 = v13;
    uint64_t v11 = *(void *)(v13 - 8);
    uint64_t v12 = a3[22];
    goto LABEL_11;
  }
  uint64_t v15 = sub_23BAD74D0();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[23];
  return v16(v18, a2, v17);
}

uint64_t storeEnumTagSinglePayload for Quote(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23BA98E3C);
}

uint64_t sub_23BA98E3C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = a2;
    return result;
  }
  sub_23BA99F80(0, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[13];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_23BAD7350();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[22];
    goto LABEL_7;
  }
  uint64_t v14 = sub_23BAD74D0();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[23];
  return v15(v17, a2, a2, v16);
}

void sub_23BA98FE4()
{
  sub_23BA99F80(319, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_23BAD7350();
    if (v1 <= 0x3F)
    {
      sub_23BAD74D0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for Quote.Source(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Quote.Source(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BA992B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Quote.Source()
{
  return &type metadata for Quote.Source;
}

uint64_t getEnumTagSinglePayload for Quote.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Quote.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BA9944CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Quote.CodingKeys()
{
  return &type metadata for Quote.CodingKeys;
}

unint64_t sub_23BA99488()
{
  unint64_t result = qword_268A757C8;
  if (!qword_268A757C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A757C8);
  }
  return result;
}

unint64_t sub_23BA994E0()
{
  unint64_t result = qword_268A757D0;
  if (!qword_268A757D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A757D0);
  }
  return result;
}

unint64_t sub_23BA99538()
{
  unint64_t result = qword_268A757D8;
  if (!qword_268A757D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A757D8);
  }
  return result;
}

uint64_t sub_23BA9958C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6563697270 && a2 == 0xE500000000000000;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168436563697270 && a2 == 0xEB0000000065676ELL || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023BADE1D0 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x756F487265746661 && a2 == 0xEF65636972507372 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023BADE1F0 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656B72614D657270 && a2 == 0xEE00656369725074 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023BADE210 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xEE00737574617453 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xEC0000006E65704FLL || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xED000065736F6C43 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023BADE230 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x756F536563697270 && a2 == 0xEB00000000656372 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023BADE250 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x656B72614D657270 && a2 == 0xEF656372756F5374 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023BADE270 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BADE290 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x73676E696E726165 && a2 == 0xEF65746144646E45 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BADE2B0 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x695474656B72616DLL && a2 == 0xEE00656E6F5A656DLL)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 19;
    }
    else {
      return 20;
    }
  }
}

unint64_t sub_23BA99E50()
{
  unint64_t result = qword_268A757E0;
  if (!qword_268A757E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A757E0);
  }
  return result;
}

void sub_23BA99EA4()
{
  if (!qword_268A757E8)
  {
    sub_23BA99F80(255, &qword_268A75758, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268A757E8);
    }
  }
}

uint64_t sub_23BA99F38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_23BA99F80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_23BA99FE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_23BA99F80(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_23BA9A054()
{
  unint64_t v0 = self;
  uint64_t v1 = (void *)sub_23BAD8230();
  id v2 = objc_msgSend(v0, sel_sc_userDefaultsWithSuiteName_backupDisabled_, v1, 1);

  qword_268A7BB20 = (uint64_t)v2;
}

uint64_t sub_23BA9A0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](a1);
  uint64_t v16 = v7;
  uint64_t v17 = v2;
  sub_23BAD7770();
  sub_23BAD7FE0();
  unint64_t v8 = (void *)sub_23BAD7F30();
  sub_23BAD7FB0();
  swift_release();

  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(&v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v2, a1);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v5 + 32))(v10 + v9, &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], a1);
  uint64_t v11 = (void *)sub_23BAD7F30();
  uint64_t v12 = sub_23BAD7FA0();
  swift_release();
  swift_release();

  return v12;
}

uint64_t sub_23BA9A290()
{
  return sub_23BAD79C0();
}

uint64_t sub_23BA9A2C0(void *a1)
{
  uint64_t v2 = sub_23BAD7770();
  MEMORY[0x270FA5388](v2 - 8);
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_23BAD8090();
  __swift_project_value_buffer(v3, (uint64_t)qword_26ADCC840);
  id v4 = a1;
  id v5 = a1;
  uint64_t v6 = sub_23BAD8070();
  os_log_type_t v7 = sub_23BAD8470();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v13 = v9;
    *(_DWORD *)unint64_t v8 = 136315138;
    swift_getErrorValue();
    uint64_t v10 = sub_23BAD88F0();
    sub_23BA7E794(v10, v11, &v13);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23BA68000, v6, v7, "Failed to refresh app configuration with error: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v9, -1, -1);
    MEMORY[0x23ECCD620](v8, -1, -1);
  }
  else
  {
  }
  sub_23BAD79B0();
  sub_23BA9A60C();
  swift_allocObject();
  return sub_23BAD7F90();
}

uint64_t sub_23BA9A530()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_23BA9A5B8(void *a1)
{
  return sub_23BA9A2C0(a1);
}

void sub_23BA9A60C()
{
  if (!qword_268A75800)
  {
    sub_23BAD7770();
    unint64_t v0 = sub_23BAD7FC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268A75800);
    }
  }
}

uint64_t sub_23BA9A664(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x79636E6572727563;
      break;
    case 2:
      uint64_t v5 = 0x75636F7470797263;
      unint64_t v3 = 0xEE0079636E657272;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x797469757165;
      break;
    case 4:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 6714469;
      break;
    case 5:
      uint64_t v5 = 0x73657275747566;
      break;
    case 6:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7865646E69;
      break;
    case 7:
      uint64_t v5 = 0x75466C617574756DLL;
      unint64_t v3 = 0xEA0000000000646ELL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x79636E6572727563) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xEE0079636E657272;
      if (v5 != 0x75636F7470797263) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x797469757165) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 6714469) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      if (v5 != 0x73657275747566) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x7865646E69;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xEA0000000000646ELL;
      if (v5 != 0x75466C617574756DLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_23BAD88A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_23BA9A8E8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEE00646579616C65;
  uint64_t v3 = 0x44636972656E6567;
  uint64_t v4 = a1;
  unint64_t v5 = 0x44636972656E6567;
  unint64_t v6 = 0xEE00646579616C65;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x655271616473616ELL;
      unint64_t v6 = 0xEE00656D69746C61;
      break;
    case 2:
      unint64_t v5 = 0x6C6165526573796ELL;
      unint64_t v6 = 0xEC000000656D6974;
      break;
    case 3:
      unint64_t v6 = 0x800000023BADD8F0;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v5 = 0x52544B4D6573796ELL;
      goto LABEL_7;
    case 5:
      unint64_t v5 = 0x52636972656E6567;
LABEL_7:
      unint64_t v6 = 0xEF656D69746C6165;
      break;
    case 6:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEE00656D69746C61;
      if (v5 == 0x655271616473616ELL) {
        goto LABEL_20;
      }
      goto LABEL_23;
    case 2:
      unint64_t v2 = 0xEC000000656D6974;
      if (v5 != 0x6C6165526573796ELL) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 3:
      unint64_t v2 = 0x800000023BADD8F0;
      if (v5 != 0xD000000000000010) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 4:
      unint64_t v2 = 0xEF656D69746C6165;
      if (v5 != 0x52544B4D6573796ELL) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 5:
      uint64_t v3 = 0x52636972656E6567;
      unint64_t v2 = 0xEF656D69746C6165;
      goto LABEL_19;
    case 6:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x6E776F6E6B6E75) {
        goto LABEL_23;
      }
      goto LABEL_20;
    default:
LABEL_19:
      if (v5 != v3) {
        goto LABEL_23;
      }
LABEL_20:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_23:
      }
        char v7 = sub_23BAD88A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_23BA9AB9C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1852141679;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6465736F6C63;
      break;
    case 3:
      uint64_t v5 = 0x656B72614D657270;
      unint64_t v3 = 0xE900000000000074;
      break;
    case 4:
      uint64_t v5 = 0x756F487265746661;
      unint64_t v3 = 0xEA00000000007372;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1852141679) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6465736F6C63) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x656B72614D657270;
      unint64_t v6 = 0xE900000000000074;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEA00000000007372;
      if (v5 != 0x756F487265746661) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_23BAD88A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_23BA9AD60(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x796144656E6FLL;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x796144656E6FLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6B656557656E6FLL;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x68746E6F4D656E6FLL;
      break;
    case 3:
      uint64_t v5 = 0x6E6F4D6565726874;
      unint64_t v3 = 0xEB00000000736874;
      break;
    case 4:
      uint64_t v5 = 0x68746E6F4D786973;
      goto LABEL_13;
    case 5:
      uint64_t v5 = 0x61446F5472616579;
      unint64_t v3 = 0xEA00000000006574;
      break;
    case 6:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x72616559656E6FLL;
      break;
    case 7:
      unint64_t v3 = 0xE800000000000000;
      unsigned int v6 = 1500477300;
      goto LABEL_10;
    case 8:
      uint64_t v5 = 0x7261655965766966;
LABEL_13:
      unint64_t v3 = 0xE900000000000073;
      break;
    case 9:
      unint64_t v3 = 0xE800000000000000;
      unsigned int v6 = 1500407156;
LABEL_10:
      uint64_t v5 = v6 | 0x7372616500000000;
      break;
    case 10:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7105633;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE700000000000000;
      if (v5 == 0x6B656557656E6FLL) {
        goto LABEL_32;
      }
      goto LABEL_36;
    case 2:
      unint64_t v7 = 0xE800000000000000;
      if (v5 != 0x68746E6F4D656E6FLL) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 3:
      unint64_t v7 = 0xEB00000000736874;
      if (v5 != 0x6E6F4D6565726874) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 4:
      uint64_t v8 = 0x68746E6F4D786973;
      goto LABEL_35;
    case 5:
      unint64_t v7 = 0xEA00000000006574;
      if (v5 != 0x61446F5472616579) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 6:
      unint64_t v7 = 0xE700000000000000;
      if (v5 != 0x72616559656E6FLL) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 7:
      unint64_t v7 = 0xE800000000000000;
      unsigned int v9 = 1500477300;
      goto LABEL_28;
    case 8:
      uint64_t v8 = 0x7261655965766966;
LABEL_35:
      unint64_t v7 = 0xE900000000000073;
      if (v5 != v8) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 9:
      unint64_t v7 = 0xE800000000000000;
      unsigned int v9 = 1500407156;
LABEL_28:
      if (v5 != (v9 | 0x7372616500000000)) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 10:
      unint64_t v7 = 0xE300000000000000;
      uint64_t v2 = 7105633;
      goto LABEL_31;
    default:
LABEL_31:
      if (v5 != v2) {
        goto LABEL_36;
      }
LABEL_32:
      if (v3 == v7) {
        char v10 = 1;
      }
      else {
LABEL_36:
      }
        char v10 = sub_23BAD88A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_23BA9B08C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xED00006572756C69;
  uint64_t v3 = 0x614665646F636564;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6961466863746566;
    }
    else {
      uint64_t v5 = 0x616C6C65636E6163;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEC0000006572756CLL;
    }
    else {
      unint64_t v6 = 0xEC0000006E6F6974;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x614665646F636564;
  unint64_t v6 = 0xED00006572756C69;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x6961466863746566;
    }
    else {
      uint64_t v3 = 0x616C6C65636E6163;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEC0000006572756CLL;
    }
    else {
      unint64_t v2 = 0xEC0000006E6F6974;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_23BAD88A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23BA9B1D8()
{
  uint64_t v1 = type metadata accessor for StocksKitServiceRequest(0);
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  int v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)v22 - v5;
  uint64_t v7 = sub_23BAD7380();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v22 - v12;
  uint64_t v14 = type metadata accessor for CancellableStocksKitServiceRequest(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAA76E8(v0, (uint64_t)v16, type metadata accessor for CancellableStocksKitServiceRequest);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v16, v7);
    strcpy((char *)v22, ".cancel(id: ");
    BYTE5(v22[1]) = 0;
    HIWORD(v22[1]) = -5120;
    sub_23BAA7584(&qword_26ADC81B0, MEMORY[0x263F07508]);
    sub_23BAD8870();
    sub_23BAD8280();
    swift_bridgeObjectRelease();
    sub_23BAD8280();
    uint64_t v17 = v22[0];
    uint64_t v13 = v11;
  }
  else
  {
    sub_23BAA5FE4();
    uint64_t v19 = (uint64_t)&v16[*(int *)(v18 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v16, v7);
    sub_23BAA7E08(v19, (uint64_t)v6, type metadata accessor for StocksKitServiceRequest);
    v22[0] = 0;
    v22[1] = 0xE000000000000000;
    sub_23BAD8590();
    swift_bridgeObjectRelease();
    strcpy((char *)v22, ".fetch(id: ");
    HIDWORD(v22[1]) = -352321536;
    sub_23BAA7584(&qword_26ADC81B0, MEMORY[0x263F07508]);
    sub_23BAD8870();
    sub_23BAD8280();
    swift_bridgeObjectRelease();
    sub_23BAD8280();
    sub_23BAA76E8((uint64_t)v6, (uint64_t)v4, type metadata accessor for StocksKitServiceRequest);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23BAA66B4((uint64_t)v4, type metadata accessor for DataSource.Logo);
    }
    else
    {
      sub_23BAA40E8();
      sub_23BAA863C((uint64_t)&v4[*(int *)(v20 + 48)]);
    }
    sub_23BAD8280();
    swift_bridgeObjectRelease();
    sub_23BAD8280();
    uint64_t v17 = v22[0];
    sub_23BAA66B4((uint64_t)v6, type metadata accessor for StocksKitServiceRequest);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return v17;
}

uint64_t sub_23BA9B634(void *a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E0C0];
  sub_23BAABB78(0, &qword_26ADC8140, (uint64_t (*)(void))sub_23BAA7488, (uint64_t)&type metadata for CancellableStocksKitServiceRequest.CancelCodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v34 = v3;
  uint64_t v31 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v32 = (char *)&v30 - v4;
  sub_23BAABB78(0, &qword_26ADC8138, (uint64_t (*)(void))sub_23BAA74DC, (uint64_t)&type metadata for CancellableStocksKitServiceRequest.FetchCodingKeys, v2);
  uint64_t v36 = v5;
  uint64_t v33 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v43 = (char *)&v30 - v6;
  uint64_t v30 = type metadata accessor for StocksKitServiceRequest(0);
  MEMORY[0x270FA5388](v30);
  uint64_t v35 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_23BAD7380();
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  int v37 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  int v41 = (char *)&v30 - v11;
  uint64_t v12 = type metadata accessor for CancellableStocksKitServiceRequest(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAABB78(0, &qword_26ADC8130, (uint64_t (*)(void))sub_23BAA7530, (uint64_t)&type metadata for CancellableStocksKitServiceRequest.CodingKeys, v2);
  uint64_t v16 = v15;
  uint64_t v40 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v30 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAA7530();
  sub_23BAD89B0();
  sub_23BAA76E8(v42, (uint64_t)v14, type metadata accessor for CancellableStocksKitServiceRequest);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = v31;
    uint64_t v20 = v38;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v37, v14, v8);
    char v47 = 1;
    sub_23BAA7488();
    int v21 = v32;
    sub_23BAD87E0();
    sub_23BAA7584(&qword_26ADC7F08, MEMORY[0x263F07508]);
    uint64_t v22 = v34;
    sub_23BAD8850();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v22);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v37, v8);
  }
  else
  {
    sub_23BAA5FE4();
    uint64_t v24 = (uint64_t)&v14[*(int *)(v23 + 48)];
    uint64_t v25 = v38;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v41, v14, v8);
    uint64_t v26 = v35;
    sub_23BAA7E08(v24, v35, type metadata accessor for StocksKitServiceRequest);
    char v46 = 0;
    sub_23BAA74DC();
    sub_23BAD87E0();
    char v45 = 0;
    sub_23BAA7584(&qword_26ADC7F08, MEMORY[0x263F07508]);
    uint64_t v27 = v36;
    uint64_t v28 = v39;
    sub_23BAD8850();
    if (!v28)
    {
      char v44 = 1;
      sub_23BAA7584((unint64_t *)&unk_26ADC8048, (void (*)(uint64_t))type metadata accessor for StocksKitServiceRequest);
      sub_23BAD8850();
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v43, v27);
    sub_23BAA66B4(v26, type metadata accessor for StocksKitServiceRequest);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v41, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v18, v16);
}

uint64_t sub_23BA9BCB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E040];
  sub_23BAABB78(0, &qword_26ADC8370, (uint64_t (*)(void))sub_23BAA7488, (uint64_t)&type metadata for CancellableStocksKitServiceRequest.CancelCodingKeys, MEMORY[0x263F8E040]);
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  MEMORY[0x270FA5388](v4);
  char v47 = (char *)&v38 - v5;
  sub_23BAABB78(0, &qword_26ADC8368, (uint64_t (*)(void))sub_23BAA74DC, (uint64_t)&type metadata for CancellableStocksKitServiceRequest.FetchCodingKeys, v3);
  uint64_t v46 = v6;
  uint64_t v43 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v38 - v7;
  sub_23BAABB78(0, &qword_26ADC8360, (uint64_t (*)(void))sub_23BAA7530, (uint64_t)&type metadata for CancellableStocksKitServiceRequest.CodingKeys, v3);
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v11 = type metadata accessor for CancellableStocksKitServiceRequest(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v38 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v38 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAA7530();
  uint64_t v20 = (uint64_t)v51;
  sub_23BAD89A0();
  if (v20) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v40 = v19;
  int v41 = v14;
  uint64_t v21 = v49;
  uint64_t v22 = v50;
  uint64_t v51 = a1;
  uint64_t v23 = sub_23BAD87C0();
  if (*(void *)(v23 + 16) != 1)
  {
    uint64_t v28 = sub_23BAD85F0();
    swift_allocError();
    uint64_t v29 = v10;
    uint64_t v31 = v30;
    sub_23BA80824();
    *uint64_t v31 = v11;
    sub_23BAD8740();
    sub_23BAD85D0();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v31, *MEMORY[0x263F8DCB0], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v21);
    a1 = v51;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v24 = v11;
  if (*(unsigned char *)(v23 + 32))
  {
    char v55 = 1;
    sub_23BAA7488();
    uint64_t v25 = v47;
    sub_23BAD8730();
    uint64_t v39 = v11;
    sub_23BAD7380();
    sub_23BAA7584(&qword_26ADC8248, MEMORY[0x263F07508]);
    uint64_t v26 = (uint64_t)v41;
    uint64_t v27 = v45;
    sub_23BAD87B0();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v25, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v21);
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = v26;
  }
  else
  {
    char v54 = 0;
    sub_23BAA74DC();
    uint64_t v32 = v22;
    sub_23BAD8730();
    uint64_t v39 = v24;
    char v47 = v10;
    sub_23BAD7380();
    char v53 = 0;
    sub_23BAA7584(&qword_26ADC8248, MEMORY[0x263F07508]);
    uint64_t v35 = (uint64_t)v17;
    uint64_t v34 = v46;
    sub_23BAD87B0();
    sub_23BAA5FE4();
    type metadata accessor for StocksKitServiceRequest(0);
    char v52 = 1;
    sub_23BAA7584(&qword_26ADC8280, (void (*)(uint64_t))type metadata accessor for StocksKitServiceRequest);
    sub_23BAD87B0();
    uint64_t v36 = v48;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v34);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v47, v21);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v37 = (uint64_t)v40;
  sub_23BAA7E08(v35, (uint64_t)v40, type metadata accessor for CancellableStocksKitServiceRequest);
  sub_23BAA7E08(v37, v42, type metadata accessor for CancellableStocksKitServiceRequest);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
}

uint64_t sub_23BA9C4B4()
{
  return 25705;
}

uint64_t sub_23BA9C4C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_23BAD88A0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23BA9C540(uint64_t a1)
{
  unint64_t v2 = sub_23BAA7488();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA9C57C(uint64_t a1)
{
  unint64_t v2 = sub_23BAA7488();
  return MEMORY[0x270FA00B8](a1, v2);
}

BOOL sub_23BA9C5B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23BA9C5D0()
{
  if (*v0) {
    return 0x6C65636E6163;
  }
  else {
    return 0x6863746566;
  }
}

uint64_t sub_23BA9C604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BAA8BB8(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BA9C62C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23BA9C638(uint64_t a1)
{
  unint64_t v2 = sub_23BAA7530();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA9C674(uint64_t a1)
{
  unint64_t v2 = sub_23BAA7530();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_23BA9C6B0()
{
  if (*v0) {
    return 0x74736575716572;
  }
  else {
    return 25705;
  }
}

uint64_t sub_23BA9C6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BAA8C9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BA9C708(uint64_t a1)
{
  unint64_t v2 = sub_23BAA74DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA9C744(uint64_t a1)
{
  unint64_t v2 = sub_23BAA74DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_23BA9C780@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23BA9BCB8(a1, a2);
}

uint64_t sub_23BA9C798(void *a1)
{
  return sub_23BA9B634(a1);
}

uint64_t sub_23BA9C7B4(void *a1)
{
  unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E0C0];
  sub_23BAABB78(0, &qword_268A75898, (uint64_t (*)(void))sub_23BAAB8AC, (uint64_t)&type metadata for StocksKitServiceRequest.LogoCodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v40 = v3;
  uint64_t v35 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v39 = (char *)&v34 - v4;
  uint64_t v36 = type metadata accessor for DataSource.Logo(0);
  MEMORY[0x270FA5388](v36);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAABB78(0, &qword_26ADC8150, (uint64_t (*)(void))sub_23BAAB900, (uint64_t)&type metadata for StocksKitServiceRequest.CurrencyConversionsCodingKeys, v2);
  uint64_t v38 = v7;
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v37 = (char *)&v34 - v8;
  sub_23BAA86D0(0, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v44 = (uint64_t)&v34 - v10;
  uint64_t v11 = type metadata accessor for StocksKitServiceRequest(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAABB78(0, &qword_26ADC8148, (uint64_t (*)(void))sub_23BAAB954, (uint64_t)&type metadata for StocksKitServiceRequest.CodingKeys, v2);
  uint64_t v15 = v14;
  uint64_t v42 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v34 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAAB954();
  sub_23BAD89B0();
  sub_23BAA76E8(v43, (uint64_t)v13, type metadata accessor for StocksKitServiceRequest);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = v35;
    sub_23BAA4170();
    uint64_t v20 = *(void *)&v13[*(int *)(v19 + 48)];
    sub_23BAA7E08((uint64_t)v13, (uint64_t)v6, type metadata accessor for DataSource.Logo);
    LOBYTE(v45) = 1;
    sub_23BAAB8AC();
    uint64_t v21 = v39;
    sub_23BAD87E0();
    LOBYTE(v45) = 0;
    sub_23BAA7584(&qword_26ADC8288, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    uint64_t v23 = v40;
    uint64_t v22 = v41;
    sub_23BAD8850();
    if (!v22)
    {
      uint64_t v45 = v20;
      char v48 = 1;
      sub_23BAABA50();
      sub_23BAD8850();
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v23);
    sub_23BAA66B4((uint64_t)v6, type metadata accessor for DataSource.Logo);
  }
  else
  {
    uint64_t v24 = v34;
    uint64_t v25 = *(void *)v13;
    uint64_t v26 = *((void *)v13 + 1);
    char v27 = v13[16];
    sub_23BAA40E8();
    sub_23BAABAA4((uint64_t)&v13[*(int *)(v28 + 48)], v44);
    LOBYTE(v45) = 0;
    sub_23BAAB900();
    uint64_t v29 = v37;
    sub_23BAD87E0();
    uint64_t v45 = v25;
    uint64_t v46 = v26;
    uint64_t v30 = v29;
    char v47 = v27;
    char v48 = 0;
    sub_23BAABB24();
    uint64_t v31 = v38;
    uint64_t v32 = v41;
    sub_23BAD8850();
    if (!v32)
    {
      LOBYTE(v45) = 1;
      sub_23BAD8680();
      sub_23BAA7584(&qword_26ADC8100, MEMORY[0x263F8F6D8]);
      sub_23BAD8820();
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v31);
    sub_23BAA863C(v44);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v17, v15);
}

uint64_t sub_23BA9CDD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E040];
  sub_23BAABB78(0, &qword_268A75880, (uint64_t (*)(void))sub_23BAAB8AC, (uint64_t)&type metadata for StocksKitServiceRequest.LogoCodingKeys, MEMORY[0x263F8E040]);
  uint64_t v46 = v4;
  uint64_t v43 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v47 = (char *)&v38 - v5;
  sub_23BAABB78(0, &qword_26ADC8380, (uint64_t (*)(void))sub_23BAAB900, (uint64_t)&type metadata for StocksKitServiceRequest.CurrencyConversionsCodingKeys, v3);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  uint64_t v45 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v38 - v8;
  sub_23BAABB78(0, &qword_26ADC8378, (uint64_t (*)(void))sub_23BAAB954, (uint64_t)&type metadata for StocksKitServiceRequest.CodingKeys, v3);
  uint64_t v48 = *(void *)(v9 - 8);
  uint64_t v49 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v38 - v10;
  uint64_t v12 = type metadata accessor for StocksKitServiceRequest(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v38 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v38 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAAB954();
  uint64_t v21 = v51;
  sub_23BAD89A0();
  if (v21) {
    goto LABEL_7;
  }
  uint64_t v40 = v15;
  uint64_t v41 = v18;
  uint64_t v39 = v20;
  uint64_t v51 = a1;
  uint64_t v22 = v49;
  uint64_t v23 = v50;
  uint64_t v24 = sub_23BAD87C0();
  uint64_t v25 = (char *)v24;
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v28 = sub_23BAD85F0();
    swift_allocError();
    uint64_t v30 = v29;
    sub_23BA80824();
    *uint64_t v30 = v12;
    sub_23BAD8740();
    sub_23BAD85D0();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x263F8DCB0], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v22);
    a1 = v51;
LABEL_7:
    uint64_t v32 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  if (*(unsigned char *)(v24 + 32))
  {
    char v57 = 1;
    sub_23BAAB8AC();
    sub_23BAD8730();
    uint64_t v50 = v25;
    type metadata accessor for DataSource.Logo(0);
    char v56 = 0;
    sub_23BAA7584(&qword_26ADC8060, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    uint64_t v26 = (uint64_t)v40;
    uint64_t v27 = v46;
    sub_23BAD87B0();
    sub_23BAA4170();
    char v55 = 1;
    sub_23BAAB9A8();
    uint64_t v34 = v47;
    sub_23BAD87B0();
    uint64_t v35 = v26;
    uint64_t v36 = v48;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v22);
  }
  else
  {
    char v54 = 0;
    sub_23BAAB900();
    sub_23BAD8730();
    char v53 = 0;
    sub_23BAAB9FC();
    uint64_t v31 = v44;
    sub_23BAD87B0();
    sub_23BAA40E8();
    sub_23BAD8680();
    char v52 = 1;
    sub_23BAA7584(&qword_26ADC8340, MEMORY[0x263F8F6D8]);
    sub_23BAD8780();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v23, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v22);
    uint64_t v35 = (uint64_t)v41;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = (uint64_t)v39;
  sub_23BAA7E08(v35, (uint64_t)v39, type metadata accessor for StocksKitServiceRequest);
  sub_23BAA7E08(v37, v42, type metadata accessor for StocksKitServiceRequest);
  uint64_t v32 = (uint64_t)v51;
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

BOOL sub_23BA9D5C8(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_23BA9D5D8()
{
  return sub_23BAD8950();
}

uint64_t sub_23BA9D600(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_23BA9D6F4()
{
  return sub_23BAD8980();
}

uint64_t sub_23BA9D73C(char a1)
{
  if (a1) {
    return 0x6572756C696166;
  }
  else {
    return 0x73736563637573;
  }
}

uint64_t sub_23BA9D76C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23BA9D7EC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23BA9D86C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v43 = type metadata accessor for StocksKitServiceResult.FailureCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_23BAD8860();
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v42 = (char *)v33 - v10;
  uint64_t v44 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v41 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StocksKitServiceResult.SuccessCodingKeys();
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v36 = v12;
  v33[1] = v13;
  uint64_t v14 = sub_23BAD8860();
  uint64_t v38 = *(void *)(v14 - 8);
  uint64_t v39 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v35 = (char *)v33 - v16;
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v34 = (char *)v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v7;
  uint64_t v50 = v6;
  type metadata accessor for StocksKitServiceResult.CodingKeys();
  swift_getWitnessTable();
  uint64_t v22 = sub_23BAD8860();
  uint64_t v51 = *(void *)(v22 - 8);
  uint64_t v52 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v33 - v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAD89B0();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v53, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = v44;
    uint64_t v26 = v41;
    uint64_t v27 = v49;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v21, v49);
    char v55 = 1;
    uint64_t v28 = v42;
    uint64_t v29 = v52;
    sub_23BAD87E0();
    uint64_t v30 = v46;
    sub_23BAD8850();
    uint64_t v31 = v45;
  }
  else
  {
    uint64_t v25 = v37;
    uint64_t v26 = v34;
    uint64_t v27 = v50;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v21, v50);
    char v54 = 0;
    uint64_t v28 = v35;
    uint64_t v29 = v52;
    sub_23BAD87E0();
    uint64_t v30 = v39;
    sub_23BAD8850();
    uint64_t v31 = v38;
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v24, v29);
}

uint64_t sub_23BA9DDF0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v58 = a5;
  uint64_t v57 = a4;
  uint64_t v67 = a6;
  uint64_t v9 = type metadata accessor for StocksKitServiceResult.FailureCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v65 = v9;
  uint64_t v54 = sub_23BAD87D0();
  uint64_t v60 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  int v66 = (char *)&v49 - v10;
  uint64_t v11 = type metadata accessor for StocksKitServiceResult.SuccessCodingKeys();
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v62 = v11;
  uint64_t v53 = sub_23BAD87D0();
  uint64_t v59 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  char v63 = (char *)&v49 - v12;
  type metadata accessor for StocksKitServiceResult.CodingKeys();
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v70 = sub_23BAD87D0();
  uint64_t v68 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v14 = (char *)&v49 - v13;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t v69 = type metadata accessor for StocksKitServiceResult();
  uint64_t v52 = *(void *)(v69 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v69);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v49 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v49 - v21;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v23 = v76;
  sub_23BAD89A0();
  if (v23) {
    goto LABEL_7;
  }
  uint64_t v51 = v20;
  uint64_t v71 = (uint64_t)v17;
  uint64_t v50 = v22;
  uint64_t v24 = v69;
  uint64_t v25 = v70;
  id v76 = a1;
  uint64_t v26 = v14;
  *(void *)&long long v72 = sub_23BAD87C0();
  sub_23BAD8330();
  swift_getWitnessTable();
  *(void *)&long long v74 = sub_23BAD8520();
  *((void *)&v74 + 1) = v27;
  *(void *)&long long v75 = v28;
  *((void *)&v75 + 1) = v29;
  sub_23BAD8510();
  swift_getWitnessTable();
  sub_23BAD8420();
  char v30 = v72;
  if (v72 == 2 || (long long v49 = v74, v72 = v74, v73 = v75, (sub_23BAD8430() & 1) == 0))
  {
    uint64_t v35 = sub_23BAD85F0();
    swift_allocError();
    uint64_t v37 = v36;
    sub_23BA80824();
    *uint64_t v37 = v24;
    sub_23BAD8740();
    sub_23BAD85D0();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v37, *MEMORY[0x263F8DCB0], v35);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v26, v25);
    a1 = v76;
LABEL_7:
    uint64_t v38 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v38);
  }
  if (v30)
  {
    LOBYTE(v72) = 1;
    uint64_t v40 = v66;
    sub_23BAD8730();
    uint64_t v48 = v67;
    uint64_t v41 = v71;
    uint64_t v42 = v54;
    sub_23BAD87B0();
    uint64_t v43 = v40;
    uint64_t v44 = v68;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v42);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v25);
    uint64_t v45 = v24;
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 32);
    uint64_t v47 = v50;
    v46(v50, v41, v24);
  }
  else
  {
    LOBYTE(v72) = 0;
    uint64_t v31 = v63;
    sub_23BAD8730();
    uint64_t v32 = v51;
    uint64_t v33 = v53;
    sub_23BAD87B0();
    uint64_t v34 = v68;
    (*(void (**)(char *, uint64_t))(v59 + 8))(v31, v33);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v25);
    uint64_t v45 = v24;
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 32);
    uint64_t v47 = v50;
    v46(v50, (uint64_t)v32, v24);
    uint64_t v48 = v67;
  }
  v46(v48, (uint64_t)v47, v45);
  uint64_t v38 = (uint64_t)v76;
  return __swift_destroy_boxed_opaque_existential_1(v38);
}

uint64_t sub_23BA9E5FC()
{
  if (*v0) {
    return 1869049708;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_23BA9E634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BAA8D78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BA9E65C(uint64_t a1)
{
  unint64_t v2 = sub_23BAAB954();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA9E698(uint64_t a1)
{
  unint64_t v2 = sub_23BAAB954();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_23BA9E6D4()
{
  if (*v0) {
    return 0x656E696C64616564;
  }
  else {
    return 0x6C6F506568636163;
  }
}

uint64_t sub_23BA9E718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BAA8E58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BA9E740(uint64_t a1)
{
  unint64_t v2 = sub_23BAAB900();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA9E77C(uint64_t a1)
{
  unint64_t v2 = sub_23BAAB900();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_23BA9E7B8()
{
  if (*v0) {
    return 0x747865746E6F63;
  }
  else {
    return 1869049708;
  }
}

uint64_t sub_23BA9E7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BAA8F64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BA9E814(uint64_t a1)
{
  unint64_t v2 = sub_23BAAB8AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BA9E850(uint64_t a1)
{
  unint64_t v2 = sub_23BAAB8AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_23BA9E88C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23BA9CDD0(a1, a2);
}

uint64_t sub_23BA9E8A4(void *a1)
{
  return sub_23BA9C7B4(a1);
}

uint64_t sub_23BA9E8BC()
{
  uint64_t v1 = MEMORY[0x270FA5388](v0);
  char v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAA76E8(v1, (uint64_t)v3, type metadata accessor for StocksKitServiceRequest);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23BAA66B4((uint64_t)v3, type metadata accessor for DataSource.Logo);
    return 1869049708;
  }
  else
  {
    sub_23BAA40E8();
    sub_23BAA863C((uint64_t)&v3[*(int *)(v5 + 48)]);
    return 0xD000000000000013;
  }
}

BOOL sub_23BA9E9B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23BA9D5C8(*a1, *a2);
}

uint64_t sub_23BA9E9CC()
{
  return sub_23BA9D6F4();
}

uint64_t sub_23BA9E9E0()
{
  return sub_23BA9D5D8();
}

uint64_t sub_23BA9E9F4()
{
  return sub_23BAD8980();
}

uint64_t sub_23BA9EA40()
{
  return sub_23BA9D73C(*v0);
}

uint64_t sub_23BA9EA54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BA9D600(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BA9EA88@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_23BAA9048();
  *a1 = result;
  return result;
}

uint64_t sub_23BA9EABC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_23BA9EB10(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_23BA9EB64()
{
  return 0x6E6F73616572;
}

uint64_t sub_23BA9EB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_23BA9EC7C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void))sub_23BA9D76C, a4);
}

uint64_t sub_23BA9EB90@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_23BA9ECD4(a1, (uint64_t (*)(void, void, void))sub_23BA6F7A8, a2);
}

uint64_t sub_23BA9EBA8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_23BA9EBFC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_23BA9EC50()
{
  return 0x65756C6176;
}

uint64_t sub_23BA9EC64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_23BA9EC7C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void))sub_23BA9D7EC, a4);
}

uint64_t sub_23BA9EC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void, void, void)@<X4>, unsigned char *a5@<X8>)
{
  uint64_t result = a4(a1, a2, a3[2], a3[3], a3[4]);
  *a5 = result & 1;
  return result;
}

uint64_t sub_23BA9ECBC@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_23BA9ECD4(a1, (uint64_t (*)(void, void, void))sub_23BAAC608, a2);
}

uint64_t sub_23BA9ECD4@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BA9ED10(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_23BA9ED64(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_23BA9EDB8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_23BA9D86C(a1, a2, *(void *)(a3 - 8), *(void *)(a3 - 16));
}

uint64_t sub_23BA9EDD8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  return sub_23BA9DDF0(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), *(void *)(a3 - 8), *(void *)(a3 - 16), a4);
}

uint64_t sub_23BA9EE00(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23BA9B08C(*a1, *a2);
}

uint64_t sub_23BA9EE0C()
{
  return sub_23BAD8980();
}

uint64_t sub_23BA9EECC()
{
  sub_23BAD8270();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BA9EF78()
{
  return sub_23BAD8980();
}

uint64_t sub_23BA9F034@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_23BAA9050();
  *a1 = result;
  return result;
}

void sub_23BA9F064(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xED00006572756C69;
  unint64_t v4 = 0xEC0000006572756CLL;
  uint64_t v5 = 0x6961466863746566;
  if (v2 != 1)
  {
    uint64_t v5 = 0x616C6C65636E6163;
    unint64_t v4 = 0xEC0000006E6F6974;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x614665646F636564;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_23BA9F0E0()
{
  return sub_23BAD82C0();
}

uint64_t sub_23BA9F140()
{
  return sub_23BAD82B0();
}

uint64_t sub_23BA9F190()
{
  uint64_t v1 = v0;
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_23BAD8090();
  __swift_project_value_buffer(v2, (uint64_t)qword_26ADCC840);
  unint64_t v3 = sub_23BAD8070();
  os_log_type_t v4 = sub_23BAD8470();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_23BA68000, v3, v4, "XPCSessionWrapper deinit", v5, 2u);
    MEMORY[0x23ECCD620](v5, -1, -1);
  }

  BOOL v6 = *(os_unfair_lock_s **)(v1 + 16);
  os_unfair_lock_lock(v6 + 6);
  sub_23BA9F2B4();
  os_unfair_lock_unlock(v6 + 6);
  swift_release();
  return v1;
}

uint64_t sub_23BA9F2B4()
{
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_23BAD8090();
  __swift_project_value_buffer(v0, (uint64_t)qword_26ADCC840);
  uint64_t v1 = sub_23BAD8070();
  os_log_type_t v2 = sub_23BAD8470();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v3 = 0;
    _os_log_impl(&dword_23BA68000, v1, v2, "Cancelling XPC...", v3, 2u);
    MEMORY[0x23ECCD620](v3, -1, -1);
  }

  return sub_23BAD80F0();
}

uint64_t sub_23BA9F3C0()
{
  sub_23BA9F190();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCSessionWrapper()
{
  return self;
}

uint64_t sub_23BA9F414(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), void (*a8)(void), uint64_t a9)
{
  uint64_t v46 = a7;
  uint64_t v47 = a8;
  uint64_t v44 = a6;
  uint64_t v45 = a4;
  uint64_t v49 = a5;
  uint64_t v50 = a3;
  uint64_t v42 = a1;
  uint64_t v48 = a9;
  uint64_t v11 = type metadata accessor for StocksKitServiceRequest(0);
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v41 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v43 = (uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v38 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v38 - v20;
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_23BAD8090();
  __swift_project_value_buffer(v22, (uint64_t)qword_26ADCC840);
  sub_23BAA76E8(a2, (uint64_t)v21, type metadata accessor for StocksKitServiceRequest);
  uint64_t v23 = sub_23BAD8070();
  os_log_type_t v24 = sub_23BAD8470();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v39 = a2;
    uint64_t v40 = v9;
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v52 = v38;
    *(_DWORD *)uint64_t v25 = 136315138;
    sub_23BAA76E8((uint64_t)v21, (uint64_t)v19, type metadata accessor for StocksKitServiceRequest);
    sub_23BAA76E8((uint64_t)v19, (uint64_t)v16, type metadata accessor for StocksKitServiceRequest);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23BAA66B4((uint64_t)v19, type metadata accessor for StocksKitServiceRequest);
      sub_23BAA66B4((uint64_t)v16, type metadata accessor for DataSource.Logo);
      unint64_t v26 = 0xE400000000000000;
      uint64_t v27 = 1869049708;
    }
    else
    {
      sub_23BAA40E8();
      uint64_t v29 = (uint64_t)&v16[*(int *)(v28 + 48)];
      sub_23BAA66B4((uint64_t)v19, type metadata accessor for StocksKitServiceRequest);
      sub_23BAA863C(v29);
      unint64_t v26 = 0x800000023BADE3B0;
      uint64_t v27 = 0xD000000000000013;
    }
    uint64_t v51 = sub_23BA7E794(v27, v26, &v52);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    sub_23BAA66B4((uint64_t)v21, type metadata accessor for StocksKitServiceRequest);
    _os_log_impl(&dword_23BA68000, v23, v24, "Sending XPC message from proxy: %s", v25, 0xCu);
    uint64_t v30 = v38;
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v30, -1, -1);
    MEMORY[0x23ECCD620](v25, -1, -1);

    a2 = v39;
  }
  else
  {
    sub_23BAA66B4((uint64_t)v21, type metadata accessor for StocksKitServiceRequest);
  }
  uint64_t v31 = v43;
  uint64_t v32 = *v42;
  sub_23BAA76E8(a2, v43, type metadata accessor for StocksKitServiceRequest);
  unint64_t v33 = (*(unsigned __int8 *)(v41 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v32;
  sub_23BAA7E08(v31, v34 + v33, type metadata accessor for StocksKitServiceRequest);
  uint64_t v35 = (void *)(v34 + ((v12 + v33 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v36 = v49;
  void *v35 = v45;
  v35[1] = v36;
  type metadata accessor for CancellableStocksKitServiceRequest(0);
  v46(0);
  sub_23BAA7584(&qword_26ADC8040, (void (*)(uint64_t))type metadata accessor for CancellableStocksKitServiceRequest);
  v47();
  swift_retain();
  swift_retain();
  sub_23BAD80E0();
  return swift_release();
}

uint64_t sub_23BA9F900(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v47 = a5;
  uint64_t v48 = a4;
  uint64_t v45 = a3;
  uint64_t v44 = type metadata accessor for StocksKitServiceRequest(0);
  uint64_t v6 = MEMORY[0x270FA5388](v44);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v43 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v43 - v12;
  sub_23BAAA028();
  uint64_t v46 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v43 - v18;
  sub_23BAAAFFC(0, &qword_26ADC81A8, (uint64_t (*)(uint64_t))sub_23BAAA028, MEMORY[0x263F8E848]);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (void **)((char *)&v43 - v21);
  sub_23BAAA1E4(a1, (uint64_t)&v43 - v21, &qword_26ADC81A8, (uint64_t (*)(uint64_t))sub_23BAAA028);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = *v22;
    if (qword_26ADC91C8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_23BAD8090();
    __swift_project_value_buffer(v24, (uint64_t)qword_26ADCC840);
    id v25 = v23;
    id v26 = v23;
    uint64_t v27 = sub_23BAD8070();
    os_log_type_t v28 = sub_23BAD8470();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 138412290;
      id v31 = v23;
      uint64_t v32 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v50 = v32;
      sub_23BAD84F0();
      *uint64_t v30 = v32;

      _os_log_impl(&dword_23BA68000, v27, v28, "Failure sending request, error: %@", v29, 0xCu);
      sub_23BAA86D0(0, (unint64_t *)&qword_26ADC9730, (void (*)(uint64_t))sub_23BAA8724);
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v30, -1, -1);
      MEMORY[0x23ECCD620](v29, -1, -1);
    }
    else
    {
    }
    char *v17 = 0;
    swift_storeEnumTagMultiPayload();
    v48(v17);

    uint64_t v19 = v17;
  }
  else
  {
    sub_23BAA7E08((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(void))sub_23BAAA028);
    if (qword_26ADC91C8 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_23BAD8090();
    __swift_project_value_buffer(v33, (uint64_t)qword_26ADCC840);
    sub_23BAA76E8(v45, (uint64_t)v13, type metadata accessor for StocksKitServiceRequest);
    uint64_t v34 = sub_23BAD8070();
    os_log_type_t v35 = sub_23BAD8470();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v50 = v37;
      *(_DWORD *)uint64_t v36 = 136315138;
      sub_23BAA76E8((uint64_t)v13, (uint64_t)v11, type metadata accessor for StocksKitServiceRequest);
      sub_23BAA76E8((uint64_t)v11, (uint64_t)v8, type metadata accessor for StocksKitServiceRequest);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_23BAA66B4((uint64_t)v11, type metadata accessor for StocksKitServiceRequest);
        sub_23BAA66B4((uint64_t)v8, type metadata accessor for DataSource.Logo);
        unint64_t v38 = 0xE400000000000000;
        uint64_t v39 = 1869049708;
      }
      else
      {
        sub_23BAA40E8();
        uint64_t v41 = (uint64_t)&v8[*(int *)(v40 + 48)];
        sub_23BAA66B4((uint64_t)v11, type metadata accessor for StocksKitServiceRequest);
        sub_23BAA863C(v41);
        unint64_t v38 = 0x800000023BADE3B0;
        uint64_t v39 = 0xD000000000000013;
      }
      uint64_t v49 = sub_23BA7E794(v39, v38, &v50);
      sub_23BAD84F0();
      swift_bridgeObjectRelease();
      sub_23BAA66B4((uint64_t)v13, type metadata accessor for StocksKitServiceRequest);
      _os_log_impl(&dword_23BA68000, v34, v35, "Done sending request: %s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v37, -1, -1);
      MEMORY[0x23ECCD620](v36, -1, -1);
    }
    else
    {
      sub_23BAA66B4((uint64_t)v13, type metadata accessor for StocksKitServiceRequest);
    }

    v48(v19);
  }
  return sub_23BAA66B4((uint64_t)v19, (uint64_t (*)(void))sub_23BAAA028);
}

uint64_t sub_23BA9FF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a1;
  uint64_t v26 = type metadata accessor for CancellableStocksKitServiceRequest(0);
  MEMORY[0x270FA5388](v26);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_23BAD7380();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_23BAD8090();
  __swift_project_value_buffer(v10, (uint64_t)qword_26ADCC840);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v24 = a2;
  v23(v9, a2, v6);
  uint64_t v11 = sub_23BAD8070();
  os_log_type_t v12 = sub_23BAD8470();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v28 = v21;
    uint64_t v22 = v2;
    *(_DWORD *)uint64_t v13 = 136315138;
    v19[1] = v13 + 4;
    uint64_t v20 = v13;
    sub_23BAA7584(&qword_26ADC81B0, MEMORY[0x263F07508]);
    uint64_t v14 = sub_23BAD8870();
    uint64_t v27 = sub_23BA7E794(v14, v15, &v28);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v16 = v20;
    _os_log_impl(&dword_23BA68000, v11, v12, "Sending cancellation XPC message for id: %s", v20, 0xCu);
    uint64_t v17 = v21;
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v17, -1, -1);
    MEMORY[0x23ECCD620](v16, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  v23(v5, v24, v6);
  swift_storeEnumTagMultiPayload();
  sub_23BAA7584(&qword_26ADC8040, (void (*)(uint64_t))type metadata accessor for CancellableStocksKitServiceRequest);
  sub_23BAD80D0();
  return sub_23BAA66B4((uint64_t)v5, type metadata accessor for CancellableStocksKitServiceRequest);
}

void sub_23BAA030C()
{
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_23BAD8090();
  __swift_project_value_buffer(v0, (uint64_t)qword_26ADCC840);
  oslog = sub_23BAD8070();
  os_log_type_t v1 = sub_23BAD8470();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl(&dword_23BA68000, oslog, v1, "Done sending XPC cancellation message", v2, 2u);
    MEMORY[0x23ECCD620](v2, -1, -1);
  }
}

void sub_23BAA03F4(uint64_t a1)
{
  uint64_t v2 = sub_23BAD8130();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v20 - v7;
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_23BAD8090();
  __swift_project_value_buffer(v9, (uint64_t)qword_26ADCC840);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, a1, v2);
  v10(v6, a1, v2);
  uint64_t v11 = sub_23BAD8070();
  os_log_type_t v12 = sub_23BAD8470();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v23 = v21;
    *(_DWORD *)uint64_t v13 = 67109378;
    int v14 = sub_23BAD8120() & 1;
    unint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
    v15(v8, v2);
    LODWORD(v22) = v14;
    sub_23BAD84F0();
    *(_WORD *)(v13 + 8) = 2080;
    uint64_t v16 = sub_23BAD8110();
    uint64_t v22 = sub_23BA7E794(v16, v17, &v23);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    v15(v6, v2);
    _os_log_impl(&dword_23BA68000, v11, v12, "Session cancelled (recoverable: %{BOOL}d): %s", (uint8_t *)v13, 0x12u);
    uint64_t v18 = v21;
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v18, -1, -1);
    MEMORY[0x23ECCD620](v13, -1, -1);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v8, v2);
    v19(v6, v2);
  }
}

uint64_t sub_23BAA06D4(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = sub_23BAD8380();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for StocksKitServiceRequest(0);
  v3[12] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[13] = v6;
  v3[14] = *(void *)(v6 + 64);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  uint64_t v7 = sub_23BAD7380();
  v3[19] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[20] = v8;
  v3[21] = *(void *)(v8 + 64);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23BAA08B4, 0, 0);
}

uint64_t sub_23BAA08B4()
{
  uint64_t v51 = v0;
  sub_23BAD7370();
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[6];
  uint64_t v7 = sub_23BAD8090();
  __swift_project_value_buffer(v7, (uint64_t)qword_26ADCC840);
  sub_23BAA76E8(v6, v5, type metadata accessor for StocksKitServiceRequest);
  uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v49(v1, v2, v3);
  uint64_t v8 = sub_23BAD8070();
  os_log_type_t v9 = sub_23BAD8470();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v46 = v9;
    uint64_t v11 = v0[17];
    uint64_t v10 = v0[18];
    uint64_t v12 = v0[16];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    v50[0] = v47;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_23BAA76E8(v10, v11, type metadata accessor for StocksKitServiceRequest);
    sub_23BAA76E8(v11, v12, type metadata accessor for StocksKitServiceRequest);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v15 = v0[16];
    uint64_t v16 = v0[17];
    if (EnumCaseMultiPayload == 1)
    {
      sub_23BAA66B4(v0[17], type metadata accessor for StocksKitServiceRequest);
      sub_23BAA66B4(v15, type metadata accessor for DataSource.Logo);
      unint64_t v17 = 0xE400000000000000;
      uint64_t v18 = 1869049708;
    }
    else
    {
      sub_23BAA40E8();
      uint64_t v24 = v15 + *(int *)(v23 + 48);
      sub_23BAA66B4(v16, type metadata accessor for StocksKitServiceRequest);
      sub_23BAA863C(v24);
      unint64_t v17 = 0x800000023BADE3B0;
      uint64_t v18 = 0xD000000000000013;
    }
    uint64_t v25 = v0[23];
    uint64_t v27 = v0[19];
    uint64_t v26 = v0[20];
    uint64_t v28 = v0[18];
    v0[3] = sub_23BA7E794(v18, v17, v50);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    sub_23BAA66B4(v28, type metadata accessor for StocksKitServiceRequest);
    *(_WORD *)(v13 + 12) = 2080;
    sub_23BAA7584(&qword_26ADC81B0, MEMORY[0x263F07508]);
    uint64_t v29 = sub_23BAD8870();
    v0[4] = sub_23BA7E794(v29, v30, v50);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v22(v25, v27);
    _os_log_impl(&dword_23BA68000, v8, v46, "Fetching request: %s from proxy with id: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v47, -1, -1);
    MEMORY[0x23ECCD620](v13, -1, -1);
  }
  else
  {
    uint64_t v19 = v0[23];
    uint64_t v20 = v0[19];
    uint64_t v21 = v0[20];
    sub_23BAA66B4(v0[18], type metadata accessor for StocksKitServiceRequest);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v22(v19, v20);
  }
  v0[25] = v22;
  id v31 = sub_23BAA7750();
  v0[26] = v31;
  uint64_t v32 = v31;
  uint64_t v33 = v0[22];
  uint64_t v34 = v0[19];
  uint64_t v35 = v0[20];
  uint64_t v36 = v0[15];
  uint64_t v48 = v0[21];
  uint64_t v37 = v0[13];
  uint64_t v38 = v0[6];
  uint64_t v39 = v0[7];
  v49(v33, v0[24], v34);
  sub_23BAA76E8(v38, v36, type metadata accessor for StocksKitServiceRequest);
  unint64_t v40 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v41 = (v48 + *(unsigned __int8 *)(v37 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v42 = swift_allocObject();
  v0[27] = v42;
  *(void *)(v42 + 16) = v39;
  *(void *)(v42 + 24) = v32;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v35 + 32))(v42 + v40, v33, v34);
  sub_23BAA7E08(v36, v42 + v41, type metadata accessor for StocksKitServiceRequest);
  swift_retain();
  swift_retain();
  uint64_t v43 = (void *)swift_task_alloc();
  v0[28] = v43;
  *uint64_t v43 = v0;
  v43[1] = sub_23BAA0ED8;
  uint64_t v44 = v0[5];
  return MEMORY[0x270F7A458](v44, &unk_268A75850, v42, &type metadata for DataSource.DownloadedLogo);
}

uint64_t sub_23BAA0ED8()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_23BAA10FC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_23BAA0FF4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_23BAA0FF4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[25];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[19];
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_23BAA10FC()
{
  uint64_t v1 = *(void **)(v0 + 232);
  swift_release();
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  sub_23BAA7FCC();
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v6 = *(void *)(v0 + 80);
    uint64_t v5 = *(void *)(v0 + 88);
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 72);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7);
    sub_23BAA8024(v3, v4);
    unint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
    uint64_t v9 = *(void *)(v0 + 192);
    uint64_t v10 = *(void *)(v0 + 152);
    uint64_t v12 = *(void *)(v0 + 72);
    uint64_t v11 = *(void *)(v0 + 80);
    uint64_t v13 = *(void *)(v0 + 64);
    sub_23BAA7584(&qword_268A75488, MEMORY[0x263F8F488]);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v14, v11, v13);
    swift_willThrow();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    v17(v9, v10);
  }
  else
  {
    (*(void (**)(void, void))(v0 + 200))(*(void *)(v0 + 192), *(void *)(v0 + 152));
    swift_release();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_23BAA1368(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = sub_23BAD8380();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for StocksKitServiceRequest(0);
  v3[12] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[13] = v6;
  v3[14] = *(void *)(v6 + 64);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  uint64_t v7 = sub_23BAD7380();
  v3[19] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[20] = v8;
  v3[21] = *(void *)(v8 + 64);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23BAA1548, 0, 0);
}

uint64_t sub_23BAA1548()
{
  uint64_t v52 = v0;
  sub_23BAD7370();
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[6];
  uint64_t v7 = sub_23BAD8090();
  __swift_project_value_buffer(v7, (uint64_t)qword_26ADCC840);
  sub_23BAA76E8(v6, v5, type metadata accessor for StocksKitServiceRequest);
  uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v50(v1, v2, v3);
  uint64_t v8 = sub_23BAD8070();
  os_log_type_t v9 = sub_23BAD8470();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v47 = v9;
    uint64_t v11 = v0[17];
    uint64_t v10 = v0[18];
    uint64_t v12 = v0[16];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    v51[0] = v48;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_23BAA76E8(v10, v11, type metadata accessor for StocksKitServiceRequest);
    sub_23BAA76E8(v11, v12, type metadata accessor for StocksKitServiceRequest);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v15 = v0[16];
    uint64_t v16 = v0[17];
    if (EnumCaseMultiPayload == 1)
    {
      sub_23BAA66B4(v0[17], type metadata accessor for StocksKitServiceRequest);
      sub_23BAA66B4(v15, type metadata accessor for DataSource.Logo);
      unint64_t v17 = 0xE400000000000000;
      uint64_t v18 = 1869049708;
    }
    else
    {
      sub_23BAA40E8();
      uint64_t v24 = v15 + *(int *)(v23 + 48);
      sub_23BAA66B4(v16, type metadata accessor for StocksKitServiceRequest);
      sub_23BAA863C(v24);
      unint64_t v17 = 0x800000023BADE3B0;
      uint64_t v18 = 0xD000000000000013;
    }
    uint64_t v25 = v0[23];
    uint64_t v27 = v0[19];
    uint64_t v26 = v0[20];
    uint64_t v28 = v0[18];
    v0[3] = sub_23BA7E794(v18, v17, v51);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    sub_23BAA66B4(v28, type metadata accessor for StocksKitServiceRequest);
    *(_WORD *)(v13 + 12) = 2080;
    sub_23BAA7584(&qword_26ADC81B0, MEMORY[0x263F07508]);
    uint64_t v29 = sub_23BAD8870();
    v0[4] = sub_23BA7E794(v29, v30, v51);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v22(v25, v27);
    _os_log_impl(&dword_23BA68000, v8, v47, "Fetching request: %s from proxy with id: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v48, -1, -1);
    MEMORY[0x23ECCD620](v13, -1, -1);
  }
  else
  {
    uint64_t v19 = v0[23];
    uint64_t v20 = v0[19];
    uint64_t v21 = v0[20];
    sub_23BAA66B4(v0[18], type metadata accessor for StocksKitServiceRequest);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v22(v19, v20);
  }
  v0[25] = v22;
  id v31 = sub_23BAA7750();
  v0[26] = v31;
  uint64_t v32 = v31;
  uint64_t v33 = v0[22];
  uint64_t v34 = v0[19];
  uint64_t v35 = v0[20];
  uint64_t v36 = v0[15];
  uint64_t v49 = v0[21];
  uint64_t v37 = v0[13];
  uint64_t v38 = v0[6];
  uint64_t v39 = v0[7];
  v50(v33, v0[24], v34);
  sub_23BAA76E8(v38, v36, type metadata accessor for StocksKitServiceRequest);
  unint64_t v40 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v41 = (v49 + *(unsigned __int8 *)(v37 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v42 = swift_allocObject();
  v0[27] = v42;
  *(void *)(v42 + 16) = v39;
  *(void *)(v42 + 24) = v32;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v35 + 32))(v42 + v40, v33, v34);
  sub_23BAA7E08(v36, v42 + v41, type metadata accessor for StocksKitServiceRequest);
  swift_retain();
  swift_retain();
  uint64_t v43 = (void *)swift_task_alloc();
  v0[28] = v43;
  uint64_t v44 = type metadata accessor for CurrencyConversionsResult();
  *uint64_t v43 = v0;
  v43[1] = sub_23BAA1B70;
  uint64_t v45 = v0[5];
  return MEMORY[0x270F7A458](v45, &unk_268A75838, v42, v44);
}

uint64_t sub_23BAA1B70()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_23BAAC604;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_23BAAC60C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_23BAA1C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  void v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_23BAA1CB4, 0, 0);
}

uint64_t sub_23BAA1CB4()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_23BAA1DA8;
  uint64_t v4 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v4, 0, 0, 0x3A5F286863746566, 0xE900000000000029, sub_23BAAA6D0, v1, &type metadata for DataSource.DownloadedLogo);
}

uint64_t sub_23BAA1DA8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_23BAA1EE4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_23BAA1EE4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23BAA1F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  void v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_23BAA1F70, 0, 0);
}

uint64_t sub_23BAA1F70()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  uint64_t v4 = type metadata accessor for CurrencyConversionsResult();
  *uint64_t v3 = v0;
  v3[1] = sub_23BAA2068;
  uint64_t v5 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v5, 0, 0, 0x3A5F286863746566, 0xE900000000000029, sub_23BAA8764, v1, v4);
}

uint64_t sub_23BAA2068()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_23BAAC614, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_23BAA21A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v24 = a3;
  uint64_t v25 = a1;
  sub_23BAAA6DC();
  uint64_t v23 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v22 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_23BAD7380();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StocksKitServiceRequest(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAA76E8(v27, (uint64_t)v15, type metadata accessor for StocksKitServiceRequest);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v26, v8);
  uint64_t v16 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v23);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v18 = (v14 + *(unsigned __int8 *)(v9 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v19 = (v10 + *(unsigned __int8 *)(v6 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v20 = swift_allocObject();
  sub_23BAA7E08((uint64_t)v15, v20 + v17, type metadata accessor for StocksKitServiceRequest);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v20 + v18, v11, v8);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v20 + v19, v22, v16);
  sub_23BAA909C(v24, v26, v27, (uint64_t)sub_23BAAAA00, v20);
  return swift_release();
}

uint64_t sub_23BAA24AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v26 = a3;
  uint64_t v27 = a1;
  sub_23BAAAFFC(0, &qword_26ADC80E8, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyConversionsResult, MEMORY[0x263F8F480]);
  uint64_t v25 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v24 = (char *)&v24 - v7;
  uint64_t v9 = sub_23BAD7380();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StocksKitServiceRequest(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAA76E8(v29, (uint64_t)v16, type metadata accessor for StocksKitServiceRequest);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v28, v9);
  unint64_t v17 = v8;
  uint64_t v18 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v17, v27, v25);
  unint64_t v19 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v20 = (v15 + *(unsigned __int8 *)(v10 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v21 = (v11 + *(unsigned __int8 *)(v6 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = swift_allocObject();
  sub_23BAA7E08((uint64_t)v16, v22 + v19, type metadata accessor for StocksKitServiceRequest);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v22 + v20, v12, v9);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v22 + v21, v24, v18);
  sub_23BAA97D8(v26, v28, v29, (uint64_t)sub_23BAA8A50, v22);
  return swift_release();
}

uint64_t sub_23BAA27E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v89 = a4;
  uint64_t v90 = a3;
  int64_t v88 = a2;
  sub_23BAA7E08(a1, (uint64_t)v96, (uint64_t (*)(void))sub_23BAAAE38);
  uint64_t v5 = v96[0];
  unint64_t v79 = v96[5];
  uint64_t v80 = v96[4];
  uint64_t v78 = v96[6];
  unint64_t v76 = v96[1];
  uint64_t v77 = v96[7];
  unint64_t v83 = v96[9];
  uint64_t v84 = v96[8];
  uint64_t v81 = v96[11];
  uint64_t v82 = v96[10];
  uint64_t v6 = sub_23BAD7380();
  uint64_t v91 = *(void *)(v6 - 8);
  uint64_t v92 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v87 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v86 = (char *)&v66 - v9;
  uint64_t v85 = type metadata accessor for StocksKitServiceRequest(0);
  uint64_t v10 = MEMORY[0x270FA5388](v85);
  uint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v66 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v66 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  unint64_t v21 = (char *)&v66 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v66 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v66 - v25;
  sub_23BAA7E08(a1, (uint64_t)v95, (uint64_t (*)(void))sub_23BAAAE38);
  sub_23BAA7E08(a1, (uint64_t)v97, (uint64_t (*)(void))sub_23BAAAE38);
  if (v97[96])
  {
    uint64_t v86 = (char *)v5;
    if (qword_26ADC91C8 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_23BAD8090();
    __swift_project_value_buffer(v27, (uint64_t)qword_26ADCC840);
    sub_23BAA76E8((uint64_t)v88, (uint64_t)v24, type metadata accessor for StocksKitServiceRequest);
    uint64_t v28 = v91;
    uint64_t v29 = v87;
    uint64_t v30 = v92;
    (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v87, v90, v92);
    id v31 = sub_23BAD8070();
    int v32 = sub_23BAD8470();
    if (os_log_type_enabled(v31, (os_log_type_t)v32))
    {
      LODWORD(v84) = v32;
      uint64_t v33 = swift_slowAlloc();
      int64_t v88 = (void *)swift_slowAlloc();
      uint64_t v90 = swift_slowAlloc();
      v93[0] = v90;
      *(_DWORD *)uint64_t v33 = 136315650;
      sub_23BAA76E8((uint64_t)v24, (uint64_t)v15, type metadata accessor for StocksKitServiceRequest);
      sub_23BAA76E8((uint64_t)v15, (uint64_t)v12, type metadata accessor for StocksKitServiceRequest);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v34 = 1869049708;
        sub_23BAA66B4((uint64_t)v12, type metadata accessor for DataSource.Logo);
        unint64_t v35 = 0xE400000000000000;
      }
      else
      {
        uint64_t v34 = 0xD000000000000013;
        sub_23BAA40E8();
        sub_23BAA863C((uint64_t)&v12[*(int *)(v48 + 48)]);
        unint64_t v35 = 0x800000023BADE3B0;
      }
      sub_23BAA66B4((uint64_t)v15, type metadata accessor for StocksKitServiceRequest);
      uint64_t v94 = sub_23BA7E794(v34, v35, v93);
      sub_23BAD84F0();
      swift_bridgeObjectRelease();
      sub_23BAA66B4((uint64_t)v24, type metadata accessor for StocksKitServiceRequest);
      *(_WORD *)(v33 + 12) = 2112;
      sub_23BAAA094();
      swift_allocError();
      char v47 = (char)v86;
      *uint64_t v49 = (_BYTE)v86;
      uint64_t v50 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v94 = v50;
      sub_23BAD84F0();
      uint64_t v51 = v88;
      void *v88 = v50;
      *(_WORD *)(v33 + 22) = 2080;
      sub_23BAA7584(&qword_26ADC81B0, MEMORY[0x263F07508]);
      uint64_t v52 = v87;
      uint64_t v53 = v92;
      uint64_t v54 = sub_23BAD8870();
      uint64_t v94 = sub_23BA7E794(v54, v55, v93);
      sub_23BAD84F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v52, v53);
      _os_log_impl(&dword_23BA68000, v31, (os_log_type_t)v84, "Got failure response for request: %s, failure reason: %@, for id: %s", (uint8_t *)v33, 0x20u);
      sub_23BAA86D0(0, (unint64_t *)&qword_26ADC9730, (void (*)(uint64_t))sub_23BAA8724);
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v51, -1, -1);
      uint64_t v56 = v90;
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v56, -1, -1);
      MEMORY[0x23ECCD620](v33, -1, -1);
    }
    else
    {
      sub_23BAA66B4((uint64_t)v24, type metadata accessor for StocksKitServiceRequest);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);

      char v47 = (char)v86;
    }
    sub_23BAAA094();
    uint64_t v57 = swift_allocError();
    unsigned char *v58 = v47;
    v93[0] = v57;
    sub_23BAAA6DC();
    return sub_23BAD8350();
  }
  else
  {
    uint64_t v87 = (char *)v95[0];
    uint64_t v36 = v95[2];
    uint64_t v37 = v95[3];
    uint64_t v74 = v95[4];
    uint64_t v75 = v95[1];
    uint64_t v72 = v95[6];
    uint64_t v73 = v95[5];
    uint64_t v70 = v95[8];
    uint64_t v71 = v95[7];
    uint64_t v68 = v95[10];
    uint64_t v69 = v95[9];
    uint64_t v67 = v95[11];
    sub_23BA8D980(v5, v76);
    sub_23BA8D9D8(v80, v79);
    sub_23BA8D9D8(v84, v83);
    if (qword_26ADC91C8 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_23BAD8090();
    __swift_project_value_buffer(v38, (uint64_t)qword_26ADCC840);
    sub_23BAA76E8((uint64_t)v88, (uint64_t)v26, type metadata accessor for StocksKitServiceRequest);
    uint64_t v39 = v91;
    unint64_t v40 = v86;
    uint64_t v41 = v92;
    (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v86, v90, v92);
    uint64_t v42 = sub_23BAD8070();
    os_log_type_t v43 = sub_23BAD8470();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v90 = swift_slowAlloc();
      v93[0] = v90;
      *(_DWORD *)uint64_t v44 = 136315394;
      sub_23BAA76E8((uint64_t)v26, (uint64_t)v21, type metadata accessor for StocksKitServiceRequest);
      sub_23BAA76E8((uint64_t)v21, (uint64_t)v18, type metadata accessor for StocksKitServiceRequest);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v45 = 1869049708;
        sub_23BAA66B4((uint64_t)v18, type metadata accessor for DataSource.Logo);
        unint64_t v46 = 0xE400000000000000;
      }
      else
      {
        uint64_t v45 = 0xD000000000000013;
        sub_23BAA40E8();
        sub_23BAA863C((uint64_t)&v18[*(int *)(v60 + 48)]);
        unint64_t v46 = 0x800000023BADE3B0;
      }
      sub_23BAA66B4((uint64_t)v21, type metadata accessor for StocksKitServiceRequest);
      uint64_t v94 = sub_23BA7E794(v45, v46, v93);
      sub_23BAD84F0();
      swift_bridgeObjectRelease();
      sub_23BAA66B4((uint64_t)v26, type metadata accessor for StocksKitServiceRequest);
      *(_WORD *)(v44 + 12) = 2080;
      sub_23BAA7584(&qword_26ADC81B0, MEMORY[0x263F07508]);
      uint64_t v61 = v86;
      uint64_t v62 = v92;
      uint64_t v63 = sub_23BAD8870();
      uint64_t v94 = sub_23BA7E794(v63, v64, v93);
      sub_23BAD84F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v61, v62);
      _os_log_impl(&dword_23BA68000, v42, v43, "Got success response for request: %s, for id: %s", (uint8_t *)v44, 0x16u);
      uint64_t v65 = v90;
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v65, -1, -1);
      MEMORY[0x23ECCD620](v44, -1, -1);
    }
    else
    {
      sub_23BAA66B4((uint64_t)v26, type metadata accessor for StocksKitServiceRequest);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
    }

    v93[0] = (uint64_t)v87;
    v93[1] = v75;
    v93[2] = v36;
    v93[3] = v37;
    v93[4] = v74;
    v93[5] = v73;
    v93[6] = v72;
    v93[7] = v71;
    v93[8] = v70;
    v93[9] = v69;
    v93[10] = v68;
    v93[11] = v67;
    sub_23BAAA6DC();
    return sub_23BAD8360();
  }
}

uint64_t sub_23BAA3250(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v87 = a3;
  uint64_t v88 = a4;
  uint64_t v86 = a2;
  sub_23BAAAFFC(0, &qword_26ADC81A0, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyConversionsResult, MEMORY[0x263F8E848]);
  uint64_t v81 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v82 = (uint64_t *)((char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v6);
  uint64_t v83 = (uint64_t)&v79 - v8;
  uint64_t v9 = sub_23BAD7380();
  uint64_t v89 = *(void *)(v9 - 8);
  uint64_t v90 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v85 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v84 = (char *)&v79 - v12;
  uint64_t v80 = type metadata accessor for StocksKitServiceRequest(0);
  uint64_t v13 = MEMORY[0x270FA5388](v80);
  uint64_t v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v79 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  unint64_t v21 = (char *)&v79 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v79 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v79 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v79 - v28;
  uint64_t v30 = type metadata accessor for CurrencyConversionsResult();
  uint64_t v31 = MEMORY[0x270FA5388](v30 - 8);
  uint64_t v79 = (uint64_t)&v79 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v79 - v33;
  sub_23BAAA028();
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (unsigned __int8 *)&v79 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAA76E8(a1, (uint64_t)v37, (uint64_t (*)(void))sub_23BAAA028);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    int v38 = *v37;
    if (qword_26ADC91C8 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_23BAD8090();
    __swift_project_value_buffer(v39, (uint64_t)qword_26ADCC840);
    sub_23BAA76E8((uint64_t)v86, (uint64_t)v27, type metadata accessor for StocksKitServiceRequest);
    uint64_t v41 = v89;
    uint64_t v40 = v90;
    uint64_t v42 = v85;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v85, v87, v90);
    os_log_type_t v43 = sub_23BAD8070();
    os_log_type_t v44 = sub_23BAD8470();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v86 = (void *)swift_slowAlloc();
      uint64_t v87 = swift_slowAlloc();
      uint64_t v92 = v87;
      *(_DWORD *)uint64_t v45 = 136315650;
      sub_23BAA76E8((uint64_t)v27, (uint64_t)v18, type metadata accessor for StocksKitServiceRequest);
      sub_23BAA76E8((uint64_t)v18, (uint64_t)v15, type metadata accessor for StocksKitServiceRequest);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      LODWORD(v84) = v38;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v47 = 1869049708;
        sub_23BAA66B4((uint64_t)v15, type metadata accessor for DataSource.Logo);
        unint64_t v48 = 0xE400000000000000;
      }
      else
      {
        uint64_t v47 = 0xD000000000000013;
        sub_23BAA40E8();
        sub_23BAA863C((uint64_t)&v15[*(int *)(v59 + 48)]);
        unint64_t v48 = 0x800000023BADE3B0;
      }
      sub_23BAA66B4((uint64_t)v18, type metadata accessor for StocksKitServiceRequest);
      uint64_t v91 = sub_23BA7E794(v47, v48, &v92);
      sub_23BAD84F0();
      swift_bridgeObjectRelease();
      sub_23BAA66B4((uint64_t)v27, type metadata accessor for StocksKitServiceRequest);
      *(_WORD *)(v45 + 12) = 2112;
      sub_23BAAA094();
      swift_allocError();
      LOBYTE(v38) = (_BYTE)v84;
      unsigned char *v60 = (_BYTE)v84;
      uint64_t v61 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v91 = v61;
      sub_23BAD84F0();
      uint64_t v62 = v86;
      *uint64_t v86 = v61;
      *(_WORD *)(v45 + 22) = 2080;
      sub_23BAA7584(&qword_26ADC81B0, MEMORY[0x263F07508]);
      uint64_t v63 = v85;
      uint64_t v64 = v90;
      uint64_t v65 = sub_23BAD8870();
      uint64_t v91 = sub_23BA7E794(v65, v66, &v92);
      sub_23BAD84F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v63, v64);
      _os_log_impl(&dword_23BA68000, v43, v44, "Got failure response for request: %s, failure reason: %@, for id: %s", (uint8_t *)v45, 0x20u);
      sub_23BAA86D0(0, (unint64_t *)&qword_26ADC9730, (void (*)(uint64_t))sub_23BAA8724);
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v62, -1, -1);
      uint64_t v67 = v87;
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v67, -1, -1);
      MEMORY[0x23ECCD620](v45, -1, -1);
    }
    else
    {
      sub_23BAA66B4((uint64_t)v27, type metadata accessor for StocksKitServiceRequest);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v40);
    }

    sub_23BAAA094();
    uint64_t v68 = swift_allocError();
    *uint64_t v69 = v38;
    uint64_t v92 = v68;
    sub_23BAAAFFC(0, &qword_26ADC80E8, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyConversionsResult, MEMORY[0x263F8F480]);
    return sub_23BAD8350();
  }
  else
  {
    sub_23BAA7E08((uint64_t)v37, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
    uint64_t v49 = (uint64_t)v34;
    if (qword_26ADC91C8 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_23BAD8090();
    __swift_project_value_buffer(v50, (uint64_t)qword_26ADCC840);
    sub_23BAA76E8((uint64_t)v86, (uint64_t)v29, type metadata accessor for StocksKitServiceRequest);
    uint64_t v52 = v89;
    uint64_t v51 = v90;
    uint64_t v53 = v84;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v84, v87, v90);
    uint64_t v54 = sub_23BAD8070();
    os_log_type_t v55 = sub_23BAD8470();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v87 = swift_slowAlloc();
      uint64_t v92 = v87;
      *(_DWORD *)uint64_t v56 = 136315394;
      sub_23BAA76E8((uint64_t)v29, (uint64_t)v24, type metadata accessor for StocksKitServiceRequest);
      sub_23BAA76E8((uint64_t)v24, (uint64_t)v21, type metadata accessor for StocksKitServiceRequest);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v57 = 1869049708;
        sub_23BAA66B4((uint64_t)v21, type metadata accessor for DataSource.Logo);
        unint64_t v58 = 0xE400000000000000;
      }
      else
      {
        uint64_t v57 = 0xD000000000000013;
        sub_23BAA40E8();
        sub_23BAA863C((uint64_t)&v21[*(int *)(v71 + 48)]);
        unint64_t v58 = 0x800000023BADE3B0;
      }
      sub_23BAA66B4((uint64_t)v24, type metadata accessor for StocksKitServiceRequest);
      uint64_t v91 = sub_23BA7E794(v57, v58, &v92);
      sub_23BAD84F0();
      swift_bridgeObjectRelease();
      sub_23BAA66B4((uint64_t)v29, type metadata accessor for StocksKitServiceRequest);
      *(_WORD *)(v56 + 12) = 2080;
      sub_23BAA7584(&qword_26ADC81B0, MEMORY[0x263F07508]);
      uint64_t v72 = v84;
      uint64_t v73 = v90;
      uint64_t v74 = sub_23BAD8870();
      uint64_t v91 = sub_23BA7E794(v74, v75, &v92);
      sub_23BAD84F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v72, v73);
      _os_log_impl(&dword_23BA68000, v54, v55, "Got success response for request: %s, for id: %s", (uint8_t *)v56, 0x16u);
      uint64_t v76 = v87;
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v76, -1, -1);
      MEMORY[0x23ECCD620](v56, -1, -1);
    }
    else
    {
      sub_23BAA66B4((uint64_t)v29, type metadata accessor for StocksKitServiceRequest);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v51);
    }
    uint64_t v77 = v83;
    sub_23BAA76E8(v49, v83, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
    swift_storeEnumTagMultiPayload();
    uint64_t v78 = v82;
    sub_23BAAA1E4(v77, (uint64_t)v82, &qword_26ADC81A0, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyConversionsResult);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v92 = *v78;
      sub_23BAAAFFC(0, &qword_26ADC80E8, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyConversionsResult, MEMORY[0x263F8F480]);
      sub_23BAD8350();
    }
    else
    {
      sub_23BAA7E08((uint64_t)v78, v79, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
      sub_23BAAAFFC(0, &qword_26ADC80E8, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyConversionsResult, MEMORY[0x263F8F480]);
      sub_23BAD8360();
    }
    sub_23BAAA264(v77);
    return sub_23BAA66B4(v49, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
  }
}

uint64_t type metadata accessor for StocksKitServiceProxy()
{
  return self;
}

uint64_t sub_23BAA3ED0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_23BAD78E0();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      sub_23BAA4170();
      *(void *)(a1 + *(int *)(v7 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 48));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      sub_23BAA40E8();
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v11 = (void *)(a1 + v10);
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_23BAD8680();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_23BAA86D0(0, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23BAA40E8()
{
  if (!qword_26ADC9188)
  {
    sub_23BAA86D0(255, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26ADC9188);
    }
  }
}

void sub_23BAA4170()
{
  if (!qword_268A75808)
  {
    type metadata accessor for DataSource.Logo(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268A75808);
    }
  }
}

uint64_t sub_23BAA41DC(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_23BAD78E0();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    uint64_t v4 = v2;
    uint64_t v5 = a1;
  }
  else
  {
    sub_23BAA40E8();
    uint64_t v7 = a1 + *(int *)(v6 + 48);
    uint64_t v8 = sub_23BAD8680();
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8);
    if (result) {
      return result;
    }
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    uint64_t v5 = v7;
    uint64_t v4 = v8;
  }
  return v3(v5, v4);
}

uint64_t sub_23BAA42E4(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_23BAD78E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    sub_23BAA4170();
    *(void *)(a1 + *(int *)(v5 + 48)) = *(void *)(a2 + *(int *)(v5 + 48));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    sub_23BAA40E8();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    uint64_t v10 = sub_23BAD8680();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_23BAA86D0(0, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23BAA44AC(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_23BAA66B4(a1, type metadata accessor for StocksKitServiceRequest);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_23BAD78E0();
      (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      sub_23BAA4170();
      *(void *)(a1 + *(int *)(v5 + 48)) = *(void *)((char *)a2 + *(int *)(v5 + 48));
    }
    else
    {
      long long v6 = *a2;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)a1 = v6;
      sub_23BAA40E8();
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (void *)(a1 + v8);
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_23BAD8680();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_23BAA86D0(0, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for StocksKitServiceRequest(uint64_t a1)
{
  return sub_23BA825D8(a1, (uint64_t *)&unk_26ADC94A0);
}

uint64_t sub_23BAA46B8(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_23BAD78E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    sub_23BAA4170();
    *(void *)(a1 + *(int *)(v5 + 48)) = *(void *)(a2 + *(int *)(v5 + 48));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    sub_23BAA40E8();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    uint64_t v10 = sub_23BAD8680();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_23BAA86D0(0, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23BAA4880(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_23BAA66B4(a1, type metadata accessor for StocksKitServiceRequest);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_23BAD78E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      sub_23BAA4170();
      *(void *)(a1 + *(int *)(v5 + 48)) = *(void *)(a2 + *(int *)(v5 + 48));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      sub_23BAA40E8();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (void *)(a1 + v7);
      uint64_t v9 = (const void *)(a2 + v7);
      uint64_t v10 = sub_23BAD8680();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_23BAA86D0(0, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23BAA4A78()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_23BAA4A88()
{
  sub_23BAA86D0(319, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v3;
    sub_23BAD78E0();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v5 = &v2;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StocksKitServiceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BAA4C60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksKitServiceError()
{
  return &type metadata for StocksKitServiceError;
}

uint64_t sub_23BAA4C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_23BAA4CA0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_23BAA4D6C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    unsigned int v11 = a2[v6];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v13 = v6;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a2;
          goto LABEL_21;
        case 2:
          int v14 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v14 = *(_DWORD *)a2;
LABEL_21:
          int v15 = (v14 | (v12 << (8 * v6))) + 2;
          unsigned int v11 = v14 + 2;
          if (v6 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *))(v5 + 16))(a1);
      *((unsigned char *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v6) = 0;
    }
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    *int v3 = *(void *)a2;
    int v3 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_23BAA4F40(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24) - 8;
  uint64_t v3 = *(void *)v2;
  unint64_t v4 = *(void *)(*(void *)v2 + 64);
  if (v4 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v5 = a1[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1) {
    uint64_t v10 = v3;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  }
  return (*(uint64_t (**)(void))(v10 + 8))();
}

uint64_t sub_23BAA507C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_23BAA51F0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_23BAA5430(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_23BAA55A4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_23BAA57E4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_23BAA5928(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x23BAA5B00);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_23BAA5B28(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_23BAA5BF0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
    if (*(void *)(v6 + 64) <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
      size_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    if (*(void *)(v4 + 64) > v5) {
      unint64_t v5 = *(void *)(v4 + 64);
    }
    a1[v5] = a2;
  }
}

uint64_t type metadata accessor for StocksKitServiceResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t *sub_23BAA5D30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = sub_23BAD7380();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload != 1)
    {
      sub_23BAA5FE4();
      uint64_t v10 = *(int *)(v9 + 48);
      int v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      type metadata accessor for StocksKitServiceRequest(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v13 = sub_23BAD78E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        sub_23BAA4170();
        *(void *)&v11[*(int *)(v14 + 48)] = *(void *)&v12[*(int *)(v14 + 48)];
      }
      else
      {
        *(_OWORD *)int v11 = *(_OWORD *)v12;
        v11[16] = v12[16];
        sub_23BAA40E8();
        uint64_t v16 = *(int *)(v15 + 48);
        unsigned int v17 = &v11[v16];
        unsigned int v18 = &v12[v16];
        uint64_t v19 = sub_23BAD8680();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          sub_23BAA86D0(0, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23BAA5FE4()
{
  if (!qword_26ADC91A8)
  {
    sub_23BAD7380();
    type metadata accessor for StocksKitServiceRequest(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26ADC91A8);
    }
  }
}

uint64_t sub_23BAA6058(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = sub_23BAD7380();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload != 1)
  {
    sub_23BAA5FE4();
    uint64_t v6 = a1 + *(int *)(v5 + 48);
    type metadata accessor for StocksKitServiceRequest(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_23BAD78E0();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      uint64_t v9 = v7;
      uint64_t v10 = v6;
    }
    else
    {
      sub_23BAA40E8();
      uint64_t v12 = v6 + *(int *)(v11 + 48);
      uint64_t v13 = sub_23BAD8680();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
      if (result) {
        return result;
      }
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
      uint64_t v10 = v12;
      uint64_t v9 = v13;
    }
    return v8(v10, v9);
  }
  return result;
}

uint64_t sub_23BAA61C8(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_23BAD7380();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload != 1)
  {
    sub_23BAA5FE4();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    type metadata accessor for StocksKitServiceRequest(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_23BAD78E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      sub_23BAA4170();
      *(void *)(v8 + *(int *)(v11 + 48)) = *(void *)(v9 + *(int *)(v11 + 48));
    }
    else
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
      sub_23BAA40E8();
      uint64_t v13 = *(int *)(v12 + 48);
      uint64_t v14 = (void *)(v8 + v13);
      uint64_t v15 = (const void *)(v9 + v13);
      uint64_t v16 = sub_23BAD8680();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_23BAA86D0(0, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23BAA642C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_23BAA66B4(a1, type metadata accessor for CancellableStocksKitServiceRequest);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_23BAD7380();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload != 1)
    {
      sub_23BAA5FE4();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = a1 + v7;
      uint64_t v9 = (long long *)(a2 + v7);
      type metadata accessor for StocksKitServiceRequest(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v10 = sub_23BAD78E0();
        (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        sub_23BAA4170();
        *(void *)(v8 + *(int *)(v11 + 48)) = *(void *)((char *)v9 + *(int *)(v11 + 48));
      }
      else
      {
        long long v12 = *v9;
        *(unsigned char *)(v8 + 16) = *((unsigned char *)v9 + 16);
        *(_OWORD *)uint64_t v8 = v12;
        sub_23BAA40E8();
        uint64_t v14 = *(int *)(v13 + 48);
        uint64_t v15 = (void *)(v8 + v14);
        uint64_t v16 = (char *)v9 + v14;
        uint64_t v17 = sub_23BAD8680();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          sub_23BAA86D0(0, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
          memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23BAA66B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for CancellableStocksKitServiceRequest(uint64_t a1)
{
  return sub_23BA825D8(a1, (uint64_t *)&unk_26ADC9218);
}

uint64_t sub_23BAA6734(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_23BAD7380();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload != 1)
  {
    sub_23BAA5FE4();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    type metadata accessor for StocksKitServiceRequest(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_23BAD78E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      sub_23BAA4170();
      *(void *)(v8 + *(int *)(v11 + 48)) = *(void *)(v9 + *(int *)(v11 + 48));
    }
    else
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
      sub_23BAA40E8();
      uint64_t v13 = *(int *)(v12 + 48);
      uint64_t v14 = (void *)(v8 + v13);
      uint64_t v15 = (const void *)(v9 + v13);
      uint64_t v16 = sub_23BAD8680();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_23BAA86D0(0, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23BAA6998(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_23BAA66B4(a1, type metadata accessor for CancellableStocksKitServiceRequest);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_23BAD7380();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload != 1)
    {
      sub_23BAA5FE4();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = a1 + v7;
      uint64_t v9 = a2 + v7;
      type metadata accessor for StocksKitServiceRequest(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v10 = sub_23BAD78E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
        sub_23BAA4170();
        *(void *)(v8 + *(int *)(v11 + 48)) = *(void *)(v9 + *(int *)(v11 + 48));
      }
      else
      {
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
        sub_23BAA40E8();
        uint64_t v13 = *(int *)(v12 + 48);
        uint64_t v14 = (void *)(v8 + v13);
        uint64_t v15 = (const void *)(v9 + v13);
        uint64_t v16 = sub_23BAD8680();
        uint64_t v17 = *(void *)(v16 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
        {
          sub_23BAA86D0(0, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
          memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23BAA6C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_23BAA6C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_23BAA6C70()
{
  uint64_t result = sub_23BAD7380();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8);
    uint64_t result = type metadata accessor for StocksKitServiceRequest(319);
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v4[4] = v4;
      v4[5] = v2 + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unint64_t sub_23BAA6D50()
{
  unint64_t result = qword_268A75810;
  if (!qword_268A75810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75810);
  }
  return result;
}

uint64_t sub_23BAA6DA4(uint64_t a1, uint64_t a2, void *a3)
{
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = type metadata accessor for StocksKitServiceRequest(0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *v3;
  v4[5] = v6;
  void v4[6] = v7;
  v4[7] = *a3;
  return MEMORY[0x270FA2498](sub_23BAA6E48, 0, 0);
}

uint64_t sub_23BAA6E48()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[3];
  sub_23BAA4170();
  uint64_t v5 = *(int *)(v4 + 48);
  sub_23BAA76E8(v3, v2, type metadata accessor for DataSource.Logo);
  *(void *)(v2 + v5) = v1;
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_23BAA6F3C;
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[2];
  return sub_23BAA06D4(v8, v7);
}

uint64_t sub_23BAA6F3C()
{
  uint64_t v2 = *(void *)(*v1 + 40);
  uint64_t v3 = *v1;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  sub_23BAA66B4(v2, type metadata accessor for StocksKitServiceRequest);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_23BAA70B4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
}

uint64_t sub_23BAA70B4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23BAA7118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = type metadata accessor for StocksKitServiceRequest(0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *v3;
  *(void *)(v4 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v6;
  *(void *)(v4 + 48) = v7;
  *(_OWORD *)(v4 + 56) = *(_OWORD *)a2;
  *(unsigned char *)(v4 + 88) = *(unsigned char *)(a2 + 16);
  return MEMORY[0x270FA2498](sub_23BAA71C4, 0, 0);
}

uint64_t sub_23BAA71C4()
{
  char v1 = *(unsigned char *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 24);
  sub_23BAA40E8();
  uint64_t v7 = v4 + *(int *)(v6 + 48);
  *(void *)uint64_t v4 = v3;
  *(void *)(v4 + 8) = v2;
  *(unsigned char *)(v4 + 16) = v1;
  sub_23BAA7668(v5, v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v8;
  void *v8 = v0;
  v8[1] = sub_23BAA72AC;
  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 16);
  return sub_23BAA1368(v10, v9);
}

uint64_t sub_23BAA72AC()
{
  uint64_t v2 = *(void *)(*v1 + 40);
  uint64_t v3 = *v1;
  *(void *)(v3 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v0;
  swift_task_dealloc();
  sub_23BAA66B4(v2, type metadata accessor for StocksKitServiceRequest);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_23BAA7424, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
}

uint64_t sub_23BAA7424()
{
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_23BAA7488()
{
  unint64_t result = qword_26ADC9200;
  if (!qword_26ADC9200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9200);
  }
  return result;
}

unint64_t sub_23BAA74DC()
{
  unint64_t result = qword_26ADC91E8;
  if (!qword_26ADC91E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC91E8);
  }
  return result;
}

unint64_t sub_23BAA7530()
{
  unint64_t result = qword_26ADC91D0;
  if (!qword_26ADC91D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC91D0);
  }
  return result;
}

uint64_t sub_23BAA7584(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for StocksKitServiceResult.FailureCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for StocksKitServiceResult.SuccessCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for StocksKitServiceResult.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_23BAA7614()
{
  unint64_t result = qword_26ADC9228;
  if (!qword_26ADC9228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9228);
  }
  return result;
}

uint64_t sub_23BAA7668(uint64_t a1, uint64_t a2)
{
  sub_23BAA86D0(0, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAA76E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

NSObject *sub_23BAA7750()
{
  char v1 = sub_23BAD8130();
  Class isa = v1[-1].isa;
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v46 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v46 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v46 - v12;
  uint64_t v14 = sub_23BAD80C0();
  MEMORY[0x270FA5388](v14 - 8);
  sub_23BAD8100();
  sub_23BAD80B0();
  uint64_t v15 = sub_23BAD80A0();
  if (v0)
  {
    id v54 = v0;
    id v16 = v0;
    sub_23BAA7FCC();
    if (swift_dynamicCast())
    {

      (*((void (**)(char *, char *, NSObject *))isa + 4))(v11, v13, v1);
      if (qword_26ADC91C8 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_23BAD8090();
      __swift_project_value_buffer(v17, (uint64_t)qword_26ADCC840);
      uint64_t v18 = (void (*)(char *, char *, NSObject *))*((void *)isa + 2);
      v18(v8, v11, v1);
      v18(v5, v11, v1);
      uint64_t v19 = sub_23BAD8070();
      os_log_type_t v20 = sub_23BAD8460();
      int v21 = v20;
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v22 = swift_slowAlloc();
        uint64_t v50 = v18;
        uint64_t v23 = v22;
        uint64_t v49 = swift_slowAlloc();
        uint64_t v53 = v49;
        *(_DWORD *)uint64_t v23 = 67109378;
        os_log_t v48 = v19;
        char v24 = sub_23BAD8120();
        int v47 = v21;
        int v25 = v24 & 1;
        unint64_t v46 = (void (*)(char *, NSObject *))*((void *)isa + 1);
        uint64_t v51 = ((unint64_t)isa + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v46(v8, v1);
        LODWORD(v52) = v25;
        sub_23BAD84F0();
        *(_WORD *)(v23 + 8) = 2080;
        uint64_t v26 = sub_23BAD8110();
        uint64_t v52 = sub_23BA7E794(v26, v27, &v53);
        sub_23BAD84F0();
        swift_bridgeObjectRelease();
        uint64_t v28 = v5;
        uint64_t v29 = v46;
        v46(v28, v1);
        uint64_t v19 = v48;
        _os_log_impl(&dword_23BA68000, v48, (os_log_type_t)v47, "Failed to initialize session (recoverable: %{BOOL}d): %s", (uint8_t *)v23, 0x12u);
        uint64_t v30 = v49;
        swift_arrayDestroy();
        MEMORY[0x23ECCD620](v30, -1, -1);
        uint64_t v31 = v23;
        uint64_t v18 = v50;
        MEMORY[0x23ECCD620](v31, -1, -1);
      }
      else
      {
        uint64_t v42 = (void (*)(char *, NSObject *))*((void *)isa + 1);
        uint64_t v51 = ((unint64_t)isa + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v42(v8, v1);
        os_log_type_t v43 = v5;
        uint64_t v29 = v42;
        v42(v43, v1);
      }

      sub_23BAA7584(&qword_26ADC8260, MEMORY[0x263F8F408]);
      swift_allocError();
      v18(v44, v11, v1);
      swift_willThrow();
      v29(v11, v1);
    }
    else
    {

      if (qword_26ADC91C8 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_23BAD8090();
      __swift_project_value_buffer(v34, (uint64_t)qword_26ADCC840);
      id v35 = v0;
      id v36 = v0;
      char v1 = sub_23BAD8070();
      os_log_type_t v37 = sub_23BAD8460();
      if (os_log_type_enabled(v1, v37))
      {
        int v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = (void *)swift_slowAlloc();
        *(_DWORD *)int v38 = 138412290;
        id v40 = v0;
        uint64_t v41 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v54 = v41;
        sub_23BAD84F0();
        *uint64_t v39 = v41;

        _os_log_impl(&dword_23BA68000, v1, v37, "Failed to initialize session: %@", v38, 0xCu);
        sub_23BAA86D0(0, (unint64_t *)&qword_26ADC9730, (void (*)(uint64_t))sub_23BAA8724);
        swift_arrayDestroy();
        MEMORY[0x23ECCD620](v39, -1, -1);
        MEMORY[0x23ECCD620](v38, -1, -1);
      }
      else
      {
      }
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v32 = v15;
    type metadata accessor for XPCSessionWrapper();
    char v1 = swift_allocObject();
    sub_23BAAA2F0();
    uint64_t v33 = swift_allocObject();
    *(_DWORD *)(v33 + 24) = 0;
    *(void *)(v33 + 16) = v32;
    v1[2].Class isa = (Class)v33;
  }
  return v1;
}

uint64_t sub_23BAA7E08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23BAA7E70(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_23BAD7380() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  uint64_t v9 = v1 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v10 = swift_task_alloc();
  long long v11 = *(_OWORD *)(v1 + 16);
  *(void *)(v3 + 16) = v10;
  *(void *)uint64_t v10 = v3;
  *(void *)(v10 + 8) = sub_23BA850D8;
  *(void *)(v10 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v1 + v6;
  *(void *)(v10 + 48) = v9;
  *(_OWORD *)(v10 + 24) = v11;
  *(void *)(v10 + 16) = a1;
  return MEMORY[0x270FA2498](sub_23BAA1F70, 0, 0);
}

unint64_t sub_23BAA7FCC()
{
  unint64_t result = qword_26ADC9740;
  if (!qword_26ADC9740)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26ADC9740);
  }
  return result;
}

void sub_23BAA8024(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_23BAD8130();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v52 = &v46[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  long long v11 = &v46[-v10];
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = &v46[-v13];
  MEMORY[0x270FA5388](v12);
  id v16 = &v46[-v15];
  uint64_t v17 = *(os_unfair_lock_s **)(a1 + 16);
  uint64_t v53 = a2;
  uint64_t v18 = (uint64_t)&v17[4];
  uint64_t v19 = v17 + 6;
  os_unfair_lock_lock(v17 + 6);
  sub_23BAA86B4(v18);
  if (v2)
  {
    os_unfair_lock_unlock(v19);
    id v56 = v2;
    id v20 = v2;
    sub_23BAA7FCC();
    if (swift_dynamicCast())
    {

      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v14, v16, v5);
      if (qword_26ADC91C8 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_23BAD8090();
      __swift_project_value_buffer(v21, (uint64_t)qword_26ADCC840);
      uint64_t v22 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16);
      v22(v11, v14, v5);
      uint64_t v23 = v52;
      v22(v52, v14, v5);
      char v24 = sub_23BAD8070();
      os_log_type_t v25 = sub_23BAD8460();
      int v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v50 = v22;
        uint64_t v28 = v27;
        uint64_t v49 = swift_slowAlloc();
        uint64_t v55 = v49;
        *(_DWORD *)uint64_t v28 = 67109378;
        os_log_t v48 = v24;
        int v29 = sub_23BAD8120() & 1;
        int v47 = v26;
        uint64_t v30 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
        uint64_t v51 = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v30(v11, v5);
        LODWORD(v54) = v29;
        sub_23BAD84F0();
        *(_WORD *)(v28 + 8) = 2080;
        uint64_t v31 = v52;
        uint64_t v32 = sub_23BAD8110();
        uint64_t v54 = sub_23BA7E794(v32, v33, &v55);
        sub_23BAD84F0();
        swift_bridgeObjectRelease();
        v30(v31, v5);
        char v24 = v48;
        _os_log_impl(&dword_23BA68000, v48, (os_log_type_t)v47, "Failed to send XPC message XPC error (recoverable: %{BOOL}d): %s", (uint8_t *)v28, 0x12u);
        uint64_t v34 = v49;
        swift_arrayDestroy();
        MEMORY[0x23ECCD620](v34, -1, -1);
        uint64_t v35 = v28;
        uint64_t v22 = v50;
        MEMORY[0x23ECCD620](v35, -1, -1);
      }
      else
      {
        uint64_t v30 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
        uint64_t v51 = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v30(v11, v5);
        v30(v23, v5);
      }

      sub_23BAA7584(&qword_26ADC8260, MEMORY[0x263F8F408]);
      swift_allocError();
      v22(v45, v14, v5);
      swift_willThrow();
      v30(v14, v5);
    }
    else
    {

      if (qword_26ADC91C8 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_23BAD8090();
      __swift_project_value_buffer(v36, (uint64_t)qword_26ADCC840);
      id v37 = v2;
      id v38 = v2;
      uint64_t v39 = sub_23BAD8070();
      os_log_type_t v40 = sub_23BAD8460();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v41 = 138412290;
        id v43 = v2;
        os_log_type_t v44 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v56 = v44;
        sub_23BAD84F0();
        *uint64_t v42 = v44;

        _os_log_impl(&dword_23BA68000, v39, v40, "Failed to send XPC message: %@", v41, 0xCu);
        sub_23BAA86D0(0, (unint64_t *)&qword_26ADC9730, (void (*)(uint64_t))sub_23BAA8724);
        swift_arrayDestroy();
        MEMORY[0x23ECCD620](v42, -1, -1);
        MEMORY[0x23ECCD620](v41, -1, -1);
      }
      else
      {
      }
      swift_willThrow();
    }
  }
  else
  {
    os_unfair_lock_unlock(v19);
  }
}

uint64_t sub_23BAA863C(uint64_t a1)
{
  sub_23BAA86D0(0, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BAA86B4(uint64_t a1)
{
  return sub_23BA9FF5C(a1, *(void *)(v1 + 16));
}

void sub_23BAA86D0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_23BAD84E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_23BAA8724()
{
  unint64_t result = qword_26ADC9728;
  if (!qword_26ADC9728)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26ADC9728);
  }
  return result;
}

uint64_t sub_23BAA8764(uint64_t a1)
{
  return sub_23BAA24AC(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_23BAA8770()
{
  uint64_t v1 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v20 = *(void *)(v1 + 64);
  uint64_t v21 = sub_23BAD7380();
  uint64_t v3 = *(void *)(v21 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v19 = *(void *)(v3 + 64);
  sub_23BAAAFFC(0, &qword_26ADC80E8, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyConversionsResult, MEMORY[0x263F8F480]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = *(void *)(v7 + 64);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_23BAD78E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + ((v2 + 16) & ~v2), v9);
  }
  else
  {
    sub_23BAA40E8();
    uint64_t v11 = v0 + ((v2 + 16) & ~v2) + *(int *)(v10 + 48);
    uint64_t v12 = sub_23BAD8680();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
  }
  uint64_t v14 = v2 | v4 | v8 | 7;
  uint64_t v15 = (((v2 + 16) & ~v2) + v20 + v4) & ~v4;
  uint64_t v16 = (v15 + v19 + v8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v15, v21);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v16, v6);
  return MEMORY[0x270FA0238](v0, v16 + v18, v14);
}

uint64_t sub_23BAA8A50(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_23BAD7380() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  sub_23BAAAFFC(0, &qword_26ADC80E8, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyConversionsResult, MEMORY[0x263F8F480]);
  uint64_t v10 = v1
      + ((v7 + v8 + *(unsigned __int8 *)(*(void *)(v9 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80));
  return sub_23BAA3250(a1, (void *)(v1 + v4), v1 + v7, v10);
}

uint64_t sub_23BAA8BB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6863746566 && a2 == 0xE500000000000000;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C65636E6163 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_23BAA8C9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_23BAA8D78(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000023BADE3B0 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1869049708 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_23BAA8E58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6F506568636163 && a2 == 0xEB00000000796369;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E696C64616564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_23BAA8F64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1869049708 && a2 == 0xE400000000000000;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x747865746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_23BAA9048()
{
  return 2;
}

uint64_t sub_23BAA9050()
{
  unint64_t v0 = sub_23BAD8720();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

void sub_23BAA909C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v63 = a5;
  uint64_t v9 = sub_23BAD8130();
  uint64_t v61 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v60 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v59 = (char *)&v57 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v62 = (char *)&v57 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v57 - v16;
  uint64_t v18 = type metadata accessor for CancellableStocksKitServiceRequest(0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAA5FE4();
  uint64_t v22 = (uint64_t)&v20[*(int *)(v21 + 48)];
  uint64_t v23 = sub_23BAD7380();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v20, a2, v23);
  sub_23BAA76E8(a3, v22, type metadata accessor for StocksKitServiceRequest);
  swift_storeEnumTagMultiPayload();
  char v24 = *(os_unfair_lock_s **)(a1 + 16);
  uint64_t v65 = a3;
  unint64_t v66 = v20;
  uint64_t v67 = a4;
  uint64_t v68 = v63;
  os_log_type_t v25 = (uint64_t *)&v24[4];
  int v26 = v24 + 6;
  os_unfair_lock_lock(v24 + 6);
  uint64_t v27 = v64;
  sub_23BAAAB60(v25);
  if (v27)
  {
    os_unfair_lock_unlock(v26);
    sub_23BAA66B4((uint64_t)v20, type metadata accessor for CancellableStocksKitServiceRequest);
    uint64_t v71 = v27;
    uint64_t v28 = v27;
    sub_23BAA7FCC();
    if (swift_dynamicCast())
    {
      uint64_t v29 = v9;

      uint64_t v31 = v61;
      uint64_t v30 = v62;
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v62, v17, v9);
      if (qword_26ADC91C8 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_23BAD8090();
      __swift_project_value_buffer(v32, (uint64_t)qword_26ADCC840);
      unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      uint64_t v34 = v59;
      v33(v59, v30, v29);
      uint64_t v35 = v60;
      uint64_t v64 = v33;
      v33(v60, v30, v29);
      uint64_t v36 = sub_23BAD8070();
      os_log_type_t v37 = sub_23BAD8460();
      int v38 = v37;
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v39 = swift_slowAlloc();
        int v58 = v38;
        os_log_type_t v40 = v35;
        uint64_t v41 = v39;
        uint64_t v63 = swift_slowAlloc();
        uint64_t v70 = v63;
        *(_DWORD *)uint64_t v41 = 67109378;
        os_log_t v57 = v36;
        int v42 = sub_23BAD8120() & 1;
        id v43 = *(void (**)(char *, uint64_t))(v31 + 8);
        v43(v34, v29);
        LODWORD(v69) = v42;
        sub_23BAD84F0();
        *(_WORD *)(v41 + 8) = 2080;
        uint64_t v44 = sub_23BAD8110();
        uint64_t v69 = sub_23BA7E794(v44, v45, &v70);
        uint64_t v30 = v62;
        sub_23BAD84F0();
        swift_bridgeObjectRelease();
        v43(v40, v29);
        uint64_t v36 = v57;
        _os_log_impl(&dword_23BA68000, v57, (os_log_type_t)v58, "Failed to send XPC message XPC error (recoverable: %{BOOL}d): %s", (uint8_t *)v41, 0x12u);
        uint64_t v46 = v63;
        swift_arrayDestroy();
        MEMORY[0x23ECCD620](v46, -1, -1);
        MEMORY[0x23ECCD620](v41, -1, -1);
      }
      else
      {
        id v43 = *(void (**)(char *, uint64_t))(v31 + 8);
        v43(v34, v29);
        v43(v35, v29);
      }

      sub_23BAA7584(&qword_26ADC8260, MEMORY[0x263F8F408]);
      swift_allocError();
      v64(v56, v30, v29);
      swift_willThrow();
      v43(v30, v29);
    }
    else
    {

      if (qword_26ADC91C8 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_23BAD8090();
      __swift_project_value_buffer(v47, (uint64_t)qword_26ADCC840);
      os_log_t v48 = v27;
      uint64_t v49 = v27;
      uint64_t v50 = sub_23BAD8070();
      os_log_type_t v51 = sub_23BAD8460();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        uint64_t v53 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v52 = 138412290;
        uint64_t v54 = v27;
        uint64_t v55 = (void *)_swift_stdlib_bridgeErrorToNSError();
        uint64_t v71 = (void (*)(char *, char *, uint64_t))v55;
        sub_23BAD84F0();
        *uint64_t v53 = v55;

        _os_log_impl(&dword_23BA68000, v50, v51, "Failed to send XPC message: %@", v52, 0xCu);
        sub_23BAA86D0(0, (unint64_t *)&qword_26ADC9730, (void (*)(uint64_t))sub_23BAA8724);
        swift_arrayDestroy();
        MEMORY[0x23ECCD620](v53, -1, -1);
        MEMORY[0x23ECCD620](v52, -1, -1);
      }
      else
      {
      }
      swift_willThrow();
    }
  }
  else
  {
    os_unfair_lock_unlock(v26);
    sub_23BAA66B4((uint64_t)v20, type metadata accessor for CancellableStocksKitServiceRequest);
  }
}

void sub_23BAA97D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v63 = a5;
  uint64_t v9 = sub_23BAD8130();
  uint64_t v61 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v60 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v59 = (char *)&v57 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v62 = (char *)&v57 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v57 - v16;
  uint64_t v18 = type metadata accessor for CancellableStocksKitServiceRequest(0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAA5FE4();
  uint64_t v22 = (uint64_t)&v20[*(int *)(v21 + 48)];
  uint64_t v23 = sub_23BAD7380();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v20, a2, v23);
  sub_23BAA76E8(a3, v22, type metadata accessor for StocksKitServiceRequest);
  swift_storeEnumTagMultiPayload();
  char v24 = *(os_unfair_lock_s **)(a1 + 16);
  uint64_t v65 = a3;
  unint64_t v66 = v20;
  uint64_t v67 = a4;
  uint64_t v68 = v63;
  os_log_type_t v25 = (uint64_t *)&v24[4];
  int v26 = v24 + 6;
  os_unfair_lock_lock(v24 + 6);
  uint64_t v27 = v64;
  sub_23BAA9F14(v25);
  if (v27)
  {
    os_unfair_lock_unlock(v26);
    sub_23BAA66B4((uint64_t)v20, type metadata accessor for CancellableStocksKitServiceRequest);
    uint64_t v71 = v27;
    uint64_t v28 = v27;
    sub_23BAA7FCC();
    if (swift_dynamicCast())
    {
      uint64_t v29 = v9;

      uint64_t v31 = v61;
      uint64_t v30 = v62;
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v62, v17, v9);
      if (qword_26ADC91C8 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_23BAD8090();
      __swift_project_value_buffer(v32, (uint64_t)qword_26ADCC840);
      unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      uint64_t v34 = v59;
      v33(v59, v30, v29);
      uint64_t v35 = v60;
      uint64_t v64 = v33;
      v33(v60, v30, v29);
      uint64_t v36 = sub_23BAD8070();
      os_log_type_t v37 = sub_23BAD8460();
      int v38 = v37;
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v39 = swift_slowAlloc();
        int v58 = v38;
        os_log_type_t v40 = v35;
        uint64_t v41 = v39;
        uint64_t v63 = swift_slowAlloc();
        uint64_t v70 = v63;
        *(_DWORD *)uint64_t v41 = 67109378;
        os_log_t v57 = v36;
        int v42 = sub_23BAD8120() & 1;
        id v43 = *(void (**)(char *, uint64_t))(v31 + 8);
        v43(v34, v29);
        LODWORD(v69) = v42;
        sub_23BAD84F0();
        *(_WORD *)(v41 + 8) = 2080;
        uint64_t v44 = sub_23BAD8110();
        uint64_t v69 = sub_23BA7E794(v44, v45, &v70);
        uint64_t v30 = v62;
        sub_23BAD84F0();
        swift_bridgeObjectRelease();
        v43(v40, v29);
        uint64_t v36 = v57;
        _os_log_impl(&dword_23BA68000, v57, (os_log_type_t)v58, "Failed to send XPC message XPC error (recoverable: %{BOOL}d): %s", (uint8_t *)v41, 0x12u);
        uint64_t v46 = v63;
        swift_arrayDestroy();
        MEMORY[0x23ECCD620](v46, -1, -1);
        MEMORY[0x23ECCD620](v41, -1, -1);
      }
      else
      {
        id v43 = *(void (**)(char *, uint64_t))(v31 + 8);
        v43(v34, v29);
        v43(v35, v29);
      }

      sub_23BAA7584(&qword_26ADC8260, MEMORY[0x263F8F408]);
      swift_allocError();
      v64(v56, v30, v29);
      swift_willThrow();
      v43(v30, v29);
    }
    else
    {

      if (qword_26ADC91C8 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_23BAD8090();
      __swift_project_value_buffer(v47, (uint64_t)qword_26ADCC840);
      os_log_t v48 = v27;
      uint64_t v49 = v27;
      uint64_t v50 = sub_23BAD8070();
      os_log_type_t v51 = sub_23BAD8460();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        uint64_t v53 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v52 = 138412290;
        uint64_t v54 = v27;
        uint64_t v55 = (void (*)(char *, char *, uint64_t))_swift_stdlib_bridgeErrorToNSError();
        uint64_t v71 = v55;
        sub_23BAD84F0();
        *uint64_t v53 = v55;

        _os_log_impl(&dword_23BA68000, v50, v51, "Failed to send XPC message: %@", v52, 0xCu);
        sub_23BAA86D0(0, (unint64_t *)&qword_26ADC9730, (void (*)(uint64_t))sub_23BAA8724);
        swift_arrayDestroy();
        MEMORY[0x23ECCD620](v53, -1, -1);
        MEMORY[0x23ECCD620](v52, -1, -1);
      }
      else
      {
      }
      swift_willThrow();
    }
  }
  else
  {
    os_unfair_lock_unlock(v26);
    sub_23BAA66B4((uint64_t)v20, type metadata accessor for CancellableStocksKitServiceRequest);
  }
}

uint64_t sub_23BAA9F14(uint64_t *a1)
{
  return sub_23BA9F414(a1, v1[2], v1[3], v1[4], v1[5], (uint64_t)&unk_26EF024F8, (void (*)(void))sub_23BAAA028, (void (*)(void))sub_23BAAA0E8, (uint64_t)sub_23BAA9F84);
}

uint64_t sub_23BAA9F84(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + v4;
  uint64_t v7 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void (**)(char *))v7;
  uint64_t v9 = *(void *)(v7 + 8);
  return sub_23BA9F900(a1, v5, v6, v8, v9);
}

void sub_23BAAA028()
{
  if (!qword_26ADC9468)
  {
    type metadata accessor for CurrencyConversionsResult();
    sub_23BAAA094();
    unint64_t v0 = type metadata accessor for StocksKitServiceResult();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC9468);
    }
  }
}

unint64_t sub_23BAAA094()
{
  unint64_t result = qword_26ADC9238;
  if (!qword_26ADC9238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9238);
  }
  return result;
}

unint64_t sub_23BAAA0E8()
{
  unint64_t result = qword_26ADC7EF0;
  if (!qword_26ADC7EF0)
  {
    sub_23BAAA028();
    sub_23BAA7584((unint64_t *)&qword_26ADC96B0, (void (*)(uint64_t))type metadata accessor for CurrencyConversionsResult);
    sub_23BAAA190();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC7EF0);
  }
  return result;
}

unint64_t sub_23BAAA190()
{
  unint64_t result = qword_26ADC9230;
  if (!qword_26ADC9230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9230);
  }
  return result;
}

uint64_t sub_23BAAA1E4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_23BAAAFFC(0, a3, a4, MEMORY[0x263F8E848]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_23BAAA264(uint64_t a1)
{
  sub_23BAAAFFC(0, &qword_26ADC81A0, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyConversionsResult, MEMORY[0x263F8E848]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23BAAA2F0()
{
  if (!qword_26ADC80F8)
  {
    sub_23BAD8100();
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_23BAD8600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC80F8);
    }
  }
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = sub_23BAD7380();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_23BAD78E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v8, v10);
  }
  else
  {
    sub_23BAA40E8();
    uint64_t v12 = v0 + v8 + *(int *)(v11 + 48);
    uint64_t v13 = sub_23BAD8680();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
  }
  return MEMORY[0x270FA0238](v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_23BAAA574(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_23BAD7380() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  uint64_t v9 = v1 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v10 = swift_task_alloc();
  long long v11 = *(_OWORD *)(v1 + 16);
  *(void *)(v3 + 16) = v10;
  *(void *)uint64_t v10 = v3;
  *(void *)(v10 + 8) = sub_23BA84C10;
  *(void *)(v10 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v1 + v6;
  *(void *)(v10 + 48) = v9;
  *(_OWORD *)(v10 + 24) = v11;
  *(void *)(v10 + 16) = a1;
  return MEMORY[0x270FA2498](sub_23BAA1CB4, 0, 0);
}

uint64_t sub_23BAAA6D0(uint64_t a1)
{
  return sub_23BAA21A4(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_23BAAA6DC()
{
  if (!qword_268A75858)
  {
    sub_23BAA7FCC();
    unint64_t v0 = sub_23BAD8370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268A75858);
    }
  }
}

uint64_t sub_23BAAA744()
{
  uint64_t v1 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v23 = *(void *)(v1 + 64);
  uint64_t v24 = sub_23BAD7380();
  uint64_t v4 = *(void *)(v24 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v22 = *(void *)(v4 + 64);
  sub_23BAAA6DC();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v21 = *(void *)(v8 + 64);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_23BAD78E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v3, v10);
  }
  else
  {
    sub_23BAA40E8();
    uint64_t v12 = v0 + v3 + *(int *)(v11 + 48);
    uint64_t v13 = sub_23BAD8680();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v20 = v12;
    uint64_t v15 = v12;
    uint64_t v3 = (v2 + 16) & ~v2;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v20, v13);
    }
  }
  uint64_t v16 = v2 | v5 | v9 | 7;
  uint64_t v17 = (v3 + v23 + v5) & ~v5;
  uint64_t v18 = (v17 + v22 + v9) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v17, v24);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v18, v7);
  return MEMORY[0x270FA0238](v0, v18 + v21, v16);
}

uint64_t sub_23BAAAA00(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_23BAD7380() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  sub_23BAAA6DC();
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(*(void *)(v9 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  uint64_t v11 = (void *)(v1 + v4);
  uint64_t v12 = v1 + v7;
  uint64_t v13 = v1 + v10;
  sub_23BAA7E08(a1, (uint64_t)v15, (uint64_t (*)(void))sub_23BAAAE38);
  return sub_23BAA27E4((uint64_t)v15, v11, v12, v13);
}

uint64_t sub_23BAAAB60(uint64_t *a1)
{
  return sub_23BA9F414(a1, v1[2], v1[3], v1[4], v1[5], (uint64_t)&unk_26EF02570, (void (*)(void))sub_23BAAAE38, (void (*)(void))sub_23BAAAE9C, (uint64_t)sub_23BAAAD7C);
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v1 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_23BAD78E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    sub_23BAA40E8();
    uint64_t v7 = v0 + v3 + *(int *)(v6 + 48);
    uint64_t v8 = sub_23BAD8680();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

void sub_23BAAAD7C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  uint64_t v6 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void (**)(uint64_t *))v6;
  uint64_t v8 = *(void *)(v6 + 8);
  sub_23BAAAF68(a1, (uint64_t)v9);
  sub_23BAAB078((uint64_t)v9, v5, v7, v8);
}

void sub_23BAAAE38()
{
  if (!qword_268A75860)
  {
    sub_23BAAA094();
    unint64_t v0 = type metadata accessor for StocksKitServiceResult();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268A75860);
    }
  }
}

unint64_t sub_23BAAAE9C()
{
  unint64_t result = qword_268A75868;
  if (!qword_268A75868)
  {
    sub_23BAAAE38();
    sub_23BAAAF14();
    sub_23BAAA190();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75868);
  }
  return result;
}

unint64_t sub_23BAAAF14()
{
  unint64_t result = qword_268A75870;
  if (!qword_268A75870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75870);
  }
  return result;
}

uint64_t sub_23BAAAF68(uint64_t a1, uint64_t a2)
{
  sub_23BAAAFFC(0, &qword_268A75878, (uint64_t (*)(uint64_t))sub_23BAAAE38, MEMORY[0x263F8E848]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23BAAAFFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_23BAA7FCC();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_23BAAB078(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v53 = a4;
  uint64_t v54 = a3;
  uint64_t v49 = a2;
  sub_23BAAAF68(a1, (uint64_t)v70);
  uint64_t v5 = (void *)v70[0];
  uint64_t v47 = v70[2];
  uint64_t v48 = v70[1];
  uint64_t v6 = v70[4];
  uint64_t v45 = v70[5];
  uint64_t v46 = v70[3];
  uint64_t v7 = v70[7];
  uint64_t v44 = v70[6];
  uint64_t v9 = v70[8];
  uint64_t v8 = v70[9];
  uint64_t v10 = v70[10];
  uint64_t v11 = v70[11];
  char v12 = v71;
  uint64_t v42 = type metadata accessor for StocksKitServiceRequest(0);
  uint64_t v13 = MEMORY[0x270FA5388](v42);
  uint64_t v43 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v50 = (char *)&v42 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v51 = a1;
  uint64_t v52 = (uint64_t)&v42 - v17;
  sub_23BAAAF68(a1, (uint64_t)v72);
  if (v72[97])
  {
    id v18 = v5;
    if (qword_26ADC91C8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_23BAD8090();
    __swift_project_value_buffer(v19, (uint64_t)qword_26ADCC840);
    id v20 = v5;
    id v21 = v5;
    uint64_t v22 = sub_23BAD8070();
    os_log_type_t v23 = sub_23BAD8470();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 138412290;
      id v26 = v5;
      uint64_t v27 = _swift_stdlib_bridgeErrorToNSError();
      v73[0] = v27;
      sub_23BAD84F0();
      *os_log_type_t v25 = v27;
      uint64_t v28 = v51;
      sub_23BAAB6F0(v51);
      sub_23BAAB6F0(v28);
      _os_log_impl(&dword_23BA68000, v22, v23, "Failure sending request, error: %@", v24, 0xCu);
      sub_23BAA86D0(0, (unint64_t *)&qword_26ADC9730, (void (*)(uint64_t))sub_23BAA8724);
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v25, -1, -1);
      MEMORY[0x23ECCD620](v24, -1, -1);
    }
    else
    {
      uint64_t v28 = v51;
      sub_23BAAB6F0(v51);
      sub_23BAAB6F0(v28);
    }

    memset(v73, 0, sizeof(v73));
    char v74 = 1;
    v54(v73);
    sub_23BAAB6F0(v28);
  }
  else
  {
    sub_23BAA7E08((uint64_t)v72, (uint64_t)v73, (uint64_t (*)(void))sub_23BAAAE38);
    uint64_t v57 = (uint64_t)v5;
    uint64_t v58 = v48;
    uint64_t v59 = v47;
    uint64_t v60 = v46;
    uint64_t v61 = v6;
    uint64_t v62 = v45;
    uint64_t v63 = v44;
    uint64_t v64 = v7;
    uint64_t v65 = v9;
    uint64_t v66 = v8;
    uint64_t v67 = v10;
    uint64_t v68 = v11;
    char v69 = v12 & 1;
    sub_23BAAB7DC((uint64_t)v5, v48, v47, v46, v6, v45, v44, v7, v9, v8, v10, v11, v12 & 1, (void (*)(void))sub_23BA8D980, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BA8D9D8);
    if (qword_26ADC91C8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_23BAD8090();
    __swift_project_value_buffer(v29, (uint64_t)qword_26ADCC840);
    uint64_t v30 = v52;
    sub_23BAA76E8(v49, v52, type metadata accessor for StocksKitServiceRequest);
    uint64_t v31 = sub_23BAD8070();
    os_log_type_t v32 = sub_23BAD8470();
    BOOL v33 = os_log_type_enabled(v31, v32);
    uint64_t v34 = (uint64_t)v50;
    if (v33)
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v56 = v36;
      *(_DWORD *)uint64_t v35 = 136315138;
      sub_23BAA76E8(v30, v34, type metadata accessor for StocksKitServiceRequest);
      uint64_t v37 = v43;
      sub_23BAA76E8(v34, v43, type metadata accessor for StocksKitServiceRequest);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_23BAA66B4(v34, type metadata accessor for StocksKitServiceRequest);
        sub_23BAA66B4(v37, type metadata accessor for DataSource.Logo);
        unint64_t v38 = 0xE400000000000000;
        uint64_t v39 = 1869049708;
      }
      else
      {
        sub_23BAA40E8();
        uint64_t v41 = v37 + *(int *)(v40 + 48);
        sub_23BAA66B4(v34, type metadata accessor for StocksKitServiceRequest);
        sub_23BAA863C(v41);
        unint64_t v38 = 0x800000023BADE3B0;
        uint64_t v39 = 0xD000000000000013;
      }
      uint64_t v55 = sub_23BA7E794(v39, v38, &v56);
      sub_23BAD84F0();
      swift_bridgeObjectRelease();
      sub_23BAA66B4(v30, type metadata accessor for StocksKitServiceRequest);
      _os_log_impl(&dword_23BA68000, v31, v32, "Done sending request: %s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v36, -1, -1);
      MEMORY[0x23ECCD620](v35, -1, -1);
    }
    else
    {
      sub_23BAA66B4(v30, type metadata accessor for StocksKitServiceRequest);
    }

    v54(&v57);
    sub_23BAAB7DC(v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, (void (*)(void))sub_23BA8705C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BA8DAE8);
  }
}

uint64_t sub_23BAAB6F0(uint64_t a1)
{
  return a1;
}

void sub_23BAAB754(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char a14)
{
  if (a14)
  {
  }
  else
  {
    sub_23BAAB7DC((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13 & 1, (void (*)(void))sub_23BA8705C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BA8DAE8);
  }
}

void sub_23BAAB7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, void (*a14)(void), void (*a15)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if ((a13 & 1) == 0)
  {
    a14();
    a15(a5, a6, a7, a8);
    a15(a9, a10, a11, a12);
  }
}

unint64_t sub_23BAAB8AC()
{
  unint64_t result = qword_268A75888;
  if (!qword_268A75888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75888);
  }
  return result;
}

unint64_t sub_23BAAB900()
{
  unint64_t result = qword_26ADC9488;
  if (!qword_26ADC9488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9488);
  }
  return result;
}

unint64_t sub_23BAAB954()
{
  unint64_t result = qword_26ADC9470;
  if (!qword_26ADC9470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9470);
  }
  return result;
}

unint64_t sub_23BAAB9A8()
{
  unint64_t result = qword_268A75890;
  if (!qword_268A75890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75890);
  }
  return result;
}

unint64_t sub_23BAAB9FC()
{
  unint64_t result = qword_26ADC82B0;
  if (!qword_26ADC82B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC82B0);
  }
  return result;
}

unint64_t sub_23BAABA50()
{
  unint64_t result = qword_268A758A0;
  if (!qword_268A758A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A758A0);
  }
  return result;
}

uint64_t sub_23BAABAA4(uint64_t a1, uint64_t a2)
{
  sub_23BAA86D0(0, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23BAABB24()
{
  unint64_t result = qword_26ADC8070;
  if (!qword_26ADC8070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC8070);
  }
  return result;
}

void sub_23BAABB78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for StocksKitServiceRequest.CodingKeys()
{
  return &type metadata for StocksKitServiceRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for StocksKitServiceRequest.CurrencyConversionsCodingKeys()
{
  return &type metadata for StocksKitServiceRequest.CurrencyConversionsCodingKeys;
}

ValueMetadata *type metadata accessor for StocksKitServiceRequest.LogoCodingKeys()
{
  return &type metadata for StocksKitServiceRequest.LogoCodingKeys;
}

uint64_t sub_23BAABC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

unsigned char *sub_23BAABC54(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CancellableStocksKitServiceRequest.CodingKeys()
{
  return &type metadata for CancellableStocksKitServiceRequest.CodingKeys;
}

uint64_t _s9StocksKit23StocksKitServiceRequestO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9StocksKit23StocksKitServiceRequestO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BAABDCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CancellableStocksKitServiceRequest.FetchCodingKeys()
{
  return &type metadata for CancellableStocksKitServiceRequest.FetchCodingKeys;
}

unsigned char *_s9StocksKit34CancellableStocksKitServiceRequestO16CancelCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x23BAABEA0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CancellableStocksKitServiceRequest.CancelCodingKeys()
{
  return &type metadata for CancellableStocksKitServiceRequest.CancelCodingKeys;
}

unint64_t sub_23BAABEDC()
{
  unint64_t result = qword_268A758A8;
  if (!qword_268A758A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A758A8);
  }
  return result;
}

unint64_t sub_23BAABF34()
{
  unint64_t result = qword_268A758B0;
  if (!qword_268A758B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A758B0);
  }
  return result;
}

unint64_t sub_23BAABF8C()
{
  unint64_t result = qword_268A758B8;
  if (!qword_268A758B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A758B8);
  }
  return result;
}

uint64_t sub_23BAABFE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_23BAABFFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_23BAAC018()
{
  return swift_getWitnessTable();
}

unint64_t sub_23BAAC038()
{
  unint64_t result = qword_268A758C0;
  if (!qword_268A758C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A758C0);
  }
  return result;
}

unint64_t sub_23BAAC090()
{
  unint64_t result = qword_268A758C8;
  if (!qword_268A758C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A758C8);
  }
  return result;
}

unint64_t sub_23BAAC0E8()
{
  unint64_t result = qword_268A758D0;
  if (!qword_268A758D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A758D0);
  }
  return result;
}

unint64_t sub_23BAAC140()
{
  unint64_t result = qword_26ADC9480;
  if (!qword_26ADC9480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9480);
  }
  return result;
}

unint64_t sub_23BAAC198()
{
  unint64_t result = qword_26ADC9478;
  if (!qword_26ADC9478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9478);
  }
  return result;
}

unint64_t sub_23BAAC1F0()
{
  unint64_t result = qword_26ADC9498;
  if (!qword_26ADC9498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9498);
  }
  return result;
}

unint64_t sub_23BAAC248()
{
  unint64_t result = qword_26ADC9490;
  if (!qword_26ADC9490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9490);
  }
  return result;
}

unint64_t sub_23BAAC2A0()
{
  unint64_t result = qword_268A758D8;
  if (!qword_268A758D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A758D8);
  }
  return result;
}

unint64_t sub_23BAAC2F8()
{
  unint64_t result = qword_268A758E0;
  if (!qword_268A758E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A758E0);
  }
  return result;
}

uint64_t sub_23BAAC34C()
{
  return swift_getWitnessTable();
}

uint64_t sub_23BAAC368()
{
  return swift_getWitnessTable();
}

uint64_t sub_23BAAC384()
{
  return swift_getWitnessTable();
}

uint64_t sub_23BAAC3A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_23BAAC3BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_23BAAC3D8()
{
  return swift_getWitnessTable();
}

unint64_t sub_23BAAC3F8()
{
  unint64_t result = qword_26ADC91E0;
  if (!qword_26ADC91E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC91E0);
  }
  return result;
}

unint64_t sub_23BAAC450()
{
  unint64_t result = qword_26ADC91D8;
  if (!qword_26ADC91D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC91D8);
  }
  return result;
}

unint64_t sub_23BAAC4A8()
{
  unint64_t result = qword_26ADC91F8;
  if (!qword_26ADC91F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC91F8);
  }
  return result;
}

unint64_t sub_23BAAC500()
{
  unint64_t result = qword_26ADC91F0;
  if (!qword_26ADC91F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC91F0);
  }
  return result;
}

unint64_t sub_23BAAC558()
{
  unint64_t result = qword_26ADC9210;
  if (!qword_26ADC9210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9210);
  }
  return result;
}

unint64_t sub_23BAAC5B0()
{
  unint64_t result = qword_26ADC9208;
  if (!qword_26ADC9208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9208);
  }
  return result;
}

BOOL ExchangeStatus.isClosed.getter()
{
  return *v0 > 1u;
}

StocksKit::ExchangeStatus_optional __swiftcall ExchangeStatus.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_23BAD8720();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t ExchangeStatus.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1852141679;
      break;
    case 2:
      uint64_t result = 0x6465736F6C63;
      break;
    case 3:
      uint64_t result = 0x656B72614D657270;
      break;
    case 4:
      uint64_t result = 0x756F487265746661;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_23BAAC734()
{
  unint64_t result = qword_268A758E8;
  if (!qword_268A758E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A758E8);
  }
  return result;
}

uint64_t sub_23BAAC788()
{
  return sub_23BAD8980();
}

uint64_t sub_23BAAC87C()
{
  sub_23BAD8270();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BAAC958()
{
  return sub_23BAD8980();
}

StocksKit::ExchangeStatus_optional sub_23BAACA48(Swift::String *a1)
{
  return ExchangeStatus.init(rawValue:)(*a1);
}

void sub_23BAACA54(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1852141679;
      goto LABEL_3;
    case 2:
      *a1 = 0x6465736F6C63;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x656B72614D657270;
      a1[1] = 0xE900000000000074;
      break;
    case 4:
      *a1 = 0x756F487265746661;
      a1[1] = 0xEA00000000007372;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_23BAACB0C()
{
  return sub_23BAD82C0();
}

uint64_t sub_23BAACB6C()
{
  return sub_23BAD82B0();
}

uint64_t sub_23BAACBBC(unsigned __int8 *a1, char *a2)
{
  return sub_23BA9AB9C(*a1, *a2);
}

uint64_t getEnumTagSinglePayload for ExchangeStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ExchangeStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BAACD24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExchangeStatus()
{
  return &type metadata for ExchangeStatus;
}

unint64_t sub_23BAACD5C()
{
  unint64_t result = qword_268A758F0;
  if (!qword_268A758F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A758F0);
  }
  return result;
}

uint64_t sub_23BAACDB0(void *a1)
{
  uint64_t v2 = v1;
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_23BAD8090();
  __swift_project_value_buffer(v4, (uint64_t)qword_26ADCC840);
  id v5 = a1;
  unsigned int v6 = sub_23BAD8070();
  os_log_type_t v7 = sub_23BAD8470();
  if (os_log_type_enabled(v6, v7))
  {
    int v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v29 = v9;
    *(_DWORD *)int v8 = 136315138;
    id v10 = objc_msgSend(v5, sel_configuration);
    id v11 = objc_msgSend(v10, sel_identifier);

    if (v11)
    {
      uint64_t v12 = sub_23BAD8240();
      unint64_t v14 = v13;
    }
    else
    {
      unint64_t v14 = 0xE700000000000000;
      uint64_t v12 = 0x6E776F6E6B6E75;
    }
    sub_23BA7E794(v12, v14, &v29);
    sub_23BAD84F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23BA68000, v6, v7, "Background URL session did finish for identifier: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v9, -1, -1);
    MEMORY[0x23ECCD620](v8, -1, -1);
  }
  else
  {
  }
  uint64_t v15 = OBJC_IVAR____TtC9StocksKit30StockServiceURLSessionDelegate_sessionDidFinishObservers;
  unint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtC9StocksKit30StockServiceURLSessionDelegate_sessionDidFinishObservers);
  uint64_t v29 = MEMORY[0x263F8EE78];
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_23BAD86C0();
    uint64_t v17 = result;
    if (result) {
      goto LABEL_11;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x263F8EE78];
    goto LABEL_23;
  }
  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v17) {
    goto LABEL_22;
  }
LABEL_11:
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_34;
  }
  for (uint64_t i = 0; i != v17; ++i)
  {
    if ((v16 & 0xC000000000000001) != 0)
    {
      uint64_t v20 = MEMORY[0x23ECCCAE0](i, v16);
    }
    else
    {
      uint64_t v20 = *(void *)(v16 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v21 = MEMORY[0x23ECCD700](v20 + 32);
    swift_unknownObjectRelease();
    if (v21)
    {
      sub_23BAD8620();
      sub_23BAD8640();
      sub_23BAD8650();
      sub_23BAD8630();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = v29;
LABEL_23:
  *(void *)(v2 + v15) = v22;
  swift_bridgeObjectRelease();
  unint64_t v23 = *(void *)(v2 + v15);
  if (!(v23 >> 62))
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v24) {
      goto LABEL_25;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_23BAD86C0();
  uint64_t v24 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_25:
  if (v24 >= 1)
  {
    uint64_t v25 = 0;
    do
    {
      if ((v23 & 0xC000000000000001) != 0)
      {
        uint64_t v26 = MEMORY[0x23ECCCAE0](v25, v23);
      }
      else
      {
        uint64_t v26 = *(void *)(v23 + 8 * v25 + 32);
        swift_retain();
      }
      ++v25;
      uint64_t v27 = *(void (**)(uint64_t))(v26 + 16);
      uint64_t v28 = swift_retain();
      v27(v28);
      swift_release();
      swift_release();
    }
    while (v24 != v25);
    return swift_bridgeObjectRelease_n();
  }
LABEL_34:
  __break(1u);
  return result;
}

id sub_23BAAD264()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for StockServiceURLSessionDelegate()
{
  return self;
}

uint64_t sub_23BAAD2D0()
{
  swift_release();
  sub_23BAAD354(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DisposableObserver()
{
  return self;
}

uint64_t sub_23BAAD334()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_23BAAD344()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_23BAAD354(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for IdentificationService()
{
  return self;
}

void sub_23BAAD40C()
{
  if (MEMORY[0x263F8EEE0]) {
    sub_23BAAD4AC(0, &qword_268A75978, (uint64_t (*)(uint64_t))sub_23BAAD478, MEMORY[0x263F8F2D8]);
  }
}

void sub_23BAAD478(uint64_t a1)
{
}

void sub_23BAAD4AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for ObserverProxy()
{
  return self;
}

void sub_23BAAD534(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v28 = a3;
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_23BAD7380();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAD7370();
  uint64_t v9 = sub_23BAD7360();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v9 == sub_23BAAE16C() && v11 == v12) {
    goto LABEL_20;
  }
  char v14 = sub_23BAD88A0();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return;
  }
  if (qword_268A752B0 != -1) {
    swift_once();
  }
  id v15 = (id)qword_268A7BB20;
  unint64_t v16 = (void *)sub_23BAD8230();
  uint64_t v17 = (void *)sub_23BAD8230();
  objc_msgSend(v15, sel_setObject_forKey_, v16, v17);

  id v18 = &v4[OBJC_IVAR____TtC9StocksKit21IdentificationService_lockedObservers];
  os_unfair_lock_lock((os_unfair_lock_t)&v4[OBJC_IVAR____TtC9StocksKit21IdentificationService_lockedObservers]);
  unint64_t v19 = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock((os_unfair_lock_t)v18);
  if (!(v19 >> 62))
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20) {
      goto LABEL_10;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_23BAD86C0();
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_20;
  }
LABEL_10:
  uint64_t v27 = v9;
  if (v20 >= 1)
  {
    uint64_t v21 = 0;
    do
    {
      if ((v19 & 0xC000000000000001) != 0)
      {
        uint64_t v23 = MEMORY[0x23ECCCAE0](v21, v19);
      }
      else
      {
        uint64_t v23 = *(void *)(v19 + 8 * v21 + 32);
        swift_retain();
      }
      v30[3] = ObjectType;
      v30[4] = sub_23BAAEA2C();
      v30[0] = v4;
      if (MEMORY[0x23ECCD700](v23 + 16))
      {
        uint64_t v24 = *(void *)(v23 + 24);
        uint64_t v25 = swift_getObjectType();
        uint64_t v26 = v4;
        v28(v30, v27, v11, v25, v24);
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v22 = v4;
      }
      ++v21;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);

      swift_release();
    }
    while (v20 != v21);
    goto LABEL_20;
  }
  __break(1u);
}

uint64_t sub_23BAAD84C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = *a1;
  if (*a1 >> 62) {
    goto LABEL_65;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    if (*a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_23BAD86C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    goto LABEL_12;
  }
LABEL_3:
  uint64_t v7 = 0;
  while (1)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = MEMORY[0x23ECCCAE0](v7, v5);
    }
    else
    {
      uint64_t v8 = *(void *)(v5 + 8 * v7 + 32);
      swift_retain();
    }
    uint64_t v9 = MEMORY[0x23ECCD700](v8 + 16);
    swift_release();
    swift_unknownObjectRelease();
    if (!v9) {
      break;
    }
    uint64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_23BAD86C0();
      if (!v6) {
        goto LABEL_10;
      }
      goto LABEL_3;
    }
    ++v7;
    if (v10 == v6) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
LABEL_72:
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_23BAD86C0();
    swift_bridgeObjectRelease();
    if (v15 != v31) {
      goto LABEL_19;
    }
    goto LABEL_12;
  }
  if (*a1 >> 62) {
    goto LABEL_72;
  }
  if (v15 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_19:
    uint64_t v16 = v7 + 5;
    while (1)
    {
      unint64_t v5 = v16 - 4;
      unint64_t v17 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        uint64_t v18 = MEMORY[0x23ECCCAE0](v16 - 4);
      }
      else
      {
        if ((v5 & 0x8000000000000000) != 0) {
          goto LABEL_55;
        }
        if (v5 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_56;
        }
        uint64_t v18 = *(void *)(v17 + 8 * v16);
        swift_retain();
      }
      uint64_t v19 = MEMORY[0x23ECCD700](v18 + 16);
      swift_release();
      swift_unknownObjectRelease();
      if (!v19) {
        goto LABEL_45;
      }
      if (v5 != v7) {
        break;
      }
LABEL_44:
      if (__OFADD__(v7++, 1)) {
        goto LABEL_58;
      }
LABEL_45:
      uint64_t v29 = v16 - 3;
      if (__OFADD__(v5, 1)) {
        goto LABEL_57;
      }
      if (*a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_23BAD86C0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v30 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      ++v16;
      if (v29 == v30) {
        goto LABEL_12;
      }
    }
    unint64_t v20 = *a1;
    if ((*a1 & 0xC000000000000001) != 0)
    {
      uint64_t v21 = MEMORY[0x23ECCCAE0](v7, *a1);
      unint64_t v20 = *a1;
      if ((*a1 & 0xC000000000000001) == 0)
      {
LABEL_30:
        if ((v5 & 0x8000000000000000) != 0) {
          goto LABEL_61;
        }
        if (v5 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_62;
        }
        uint64_t v22 = *(void *)(v20 + 8 * v16);
        swift_retain();
        goto LABEL_33;
      }
    }
    else
    {
      if (v7 < 0) {
        goto LABEL_59;
      }
      if ((unint64_t)v7 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_60;
      }
      uint64_t v21 = *(void *)(v20 + 8 * v7 + 32);
      swift_retain();
      if ((v20 & 0xC000000000000001) == 0) {
        goto LABEL_30;
      }
    }
    uint64_t v22 = MEMORY[0x23ECCCAE0](v16 - 4, v20);
    unint64_t v20 = *a1;
LABEL_33:
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *a1 = v20;
    if (!isUniquelyReferenced_nonNull_bridgeObject
      || (v20 & 0x8000000000000000) != 0
      || (v20 & 0x4000000000000000) != 0)
    {
      sub_23BAAE0F0(v20);
      unint64_t v20 = v24;
      *a1 = v24;
    }
    *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x2sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v22;
    swift_release();
    sub_23BAD8300();
    unint64_t v25 = *a1;
    int v26 = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *a1 = v25;
    if (!v26 || (v25 & 0x8000000000000000) != 0 || (v25 & 0x4000000000000000) != 0)
    {
      sub_23BAAE0F0(v25);
      unint64_t v25 = v27;
      *a1 = v27;
    }
    if ((v5 & 0x8000000000000000) != 0) {
      goto LABEL_63;
    }
    if (v5 >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_64;
    }
    *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 8 * v16) = v21;
    swift_release();
    sub_23BAD8300();
    goto LABEL_44;
  }
LABEL_12:
  if (!(*a1 >> 62))
  {
    uint64_t v11 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11 >= v7) {
      goto LABEL_14;
    }
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_23BAD86C0();
  swift_bridgeObjectRelease();
  if (v11 < v7) {
    goto LABEL_68;
  }
LABEL_14:
  sub_23BAAE34C(v7, v11);
  type metadata accessor for ObserverProxy();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v12 + 24) = a3;
  uint64_t v13 = swift_unknownObjectWeakAssign();
  MEMORY[0x23ECCC800](v13);
  if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_69:
  }
    sub_23BAD8310();
  sub_23BAD8320();
  return sub_23BAD8300();
}

void sub_23BAADCDC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9StocksKit21IdentificationService_lockedObservers;
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + OBJC_IVAR____TtC9StocksKit21IdentificationService_lockedObservers));
  swift_unknownObjectRetain();
  uint64_t v4 = sub_23BAAE658((unint64_t *)(v3 + 8), a1);
  swift_unknownObjectRelease();
  unint64_t v5 = *(void *)(v3 + 8);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_23BAD86C0();
    swift_bridgeObjectRelease();
    if (v6 >= v4) {
      goto LABEL_3;
    }
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 < v4) {
    goto LABEL_7;
  }
LABEL_3:
  sub_23BAAE34C(v4, v6);
  os_unfair_lock_unlock((os_unfair_lock_t)v3);
}

uint64_t sub_23BAADDC8()
{
  return sub_23BAAE16C();
}

void sub_23BAADDF4()
{
}

uint64_t sub_23BAADE40()
{
  return sub_23BAAE16C();
}

void sub_23BAADE70()
{
}

void sub_23BAADEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2 + OBJC_IVAR____TtC9StocksKit21IdentificationService_lockedObservers;
  os_unfair_lock_lock((os_unfair_lock_t)v5);
  sub_23BAAD84C((unint64_t *)(v5 + 8), a1, a2);
  os_unfair_lock_unlock((os_unfair_lock_t)v5);
}

void sub_23BAADF34(uint64_t a1)
{
}

uint64_t sub_23BAADF58()
{
  sub_23BAAD354(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_23BAADF90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23BAADFC0(a1, a2, a3, a4, a5, MEMORY[0x263F7AE30]);
}

uint64_t sub_23BAADFA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23BAADFC0(a1, a2, a3, a4, a5, MEMORY[0x263F7AE38]);
}

uint64_t sub_23BAADFC0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(a1, v10);
  return sub_23BAAE020((uint64_t)v12, a2, a3, v6, v10, v11, a6);
}

uint64_t sub_23BAAE020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  v17[3] = a5;
  v17[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  if (MEMORY[0x23ECCD700](a4 + 16))
  {
    uint64_t v14 = *(void *)(a4 + 24);
    uint64_t ObjectType = swift_getObjectType();
    a7(v17, a2, a3, ObjectType, v14);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

void sub_23BAAE0F0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_23BAD86C0();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x23ECCCAF0);
}

uint64_t sub_23BAAE16C()
{
  uint64_t v0 = sub_23BAD7380();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268A752B0 != -1) {
    swift_once();
  }
  id v4 = (id)qword_268A7BB20;
  uint64_t v5 = (void *)sub_23BAD8230();
  id v6 = objc_msgSend(v4, sel_stringForKey_, v5);

  if (v6)
  {
    uint64_t v7 = sub_23BAD8240();

    return v7;
  }
  else
  {
    sub_23BAD7370();
    uint64_t v9 = sub_23BAD7360();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    id v10 = (id)qword_268A7BB20;
    uint64_t v11 = (void *)sub_23BAD8230();
    uint64_t v12 = (void *)sub_23BAD8230();
    objc_msgSend(v10, sel_setObject_forKey_, v11, v12);

    return v9;
  }
}

uint64_t sub_23BAAE34C(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_23BAD86C0();
  swift_bridgeObjectRelease();
  if (v21 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_23BAD86C0();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_23BAD86C0();
    swift_bridgeObjectRelease();
    unint64_t v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v7 = 1;
  }
  if (v9 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  swift_bridgeObjectRetain();
  *uint64_t v3 = MEMORY[0x23ECCCAF0](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v13 = v11 + 32;
  uint64_t v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for ObserverProxy();
  swift_arrayDestroy();
  if (v5)
  {
    if (*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_23BAD86C0();
      swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_21:
        if (v16 < 0)
        {
LABEL_46:
          uint64_t result = sub_23BAD8710();
          __break(1u);
          return result;
        }
        unint64_t v17 = (char *)(v13 + 8 * v2);
        if (v4 != v2 || v14 >= &v17[8 * v16]) {
          memmove(v14, v17, 8 * v16);
        }
        if (!(*v3 >> 62))
        {
          uint64_t v18 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v19 = v18 + v5;
          if (!__OFADD__(v18, v5))
          {
LABEL_27:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x1sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v19;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_23BAD86C0();
        swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = v15 - v2;
      if (!__OFSUB__(v15, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_23BAD8300();
}

uint64_t sub_23BAAE658(unint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *a1;
  if (*a1 >> 62) {
    goto LABEL_64;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
  {
LABEL_3:
    unint64_t v6 = 0;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = MEMORY[0x23ECCCAE0](v6, v4);
      }
      else
      {
        uint64_t v7 = *(void *)(v4 + 8 * v6 + 32);
        swift_retain();
      }
      uint64_t v8 = MEMORY[0x23ECCD700](v7 + 16);
      swift_release();
      if (v8)
      {
        swift_unknownObjectRelease();
        if (v8 == a2) {
          break;
        }
      }
      unint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_23BAD86C0();
        if (!v5) {
          goto LABEL_11;
        }
        goto LABEL_3;
      }
      ++v6;
      if (v9 == v5) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v12 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
    }
    else if (!(*a1 >> 62))
    {
      if (v12 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_17:
        for (unint64_t i = v6 + 5; ; ++i)
        {
          unint64_t v4 = i - 4;
          unint64_t v14 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = MEMORY[0x23ECCCAE0](i - 4);
          }
          else
          {
            if ((v4 & 0x8000000000000000) != 0) {
              goto LABEL_54;
            }
            if (v4 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_55;
            }
            uint64_t v15 = *(void *)(v14 + 8 * i);
            swift_retain();
          }
          uint64_t v16 = MEMORY[0x23ECCD700](v15 + 16);
          swift_release();
          if (v16)
          {
            swift_unknownObjectRelease();
            if (v16 == a2) {
              goto LABEL_44;
            }
          }
          if (v4 != v6) {
            break;
          }
LABEL_43:
          if (__OFADD__(v6++, 1)) {
            goto LABEL_57;
          }
LABEL_44:
          unint64_t v26 = i - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_56;
          }
          if (*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v27 = sub_23BAD86C0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v27 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v26 == v27) {
            return v6;
          }
        }
        unint64_t v17 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v18 = MEMORY[0x23ECCCAE0](v6, *a1);
          unint64_t v17 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_29:
            if ((v4 & 0x8000000000000000) != 0) {
              goto LABEL_60;
            }
            if (v4 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_61;
            }
            uint64_t v19 = *(void *)(v17 + 8 * i);
            swift_retain();
            goto LABEL_32;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_58;
          }
          if (v6 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_59;
          }
          uint64_t v18 = *(void *)(v17 + 8 * v6 + 32);
          swift_retain();
          if ((v17 & 0xC000000000000001) == 0) {
            goto LABEL_29;
          }
        }
        uint64_t v19 = MEMORY[0x23ECCCAE0](i - 4, v17);
        unint64_t v17 = *a1;
LABEL_32:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v17;
        if (!isUniquelyReferenced_nonNull_bridgeObject
          || (v17 & 0x8000000000000000) != 0
          || (v17 & 0x4000000000000000) != 0)
        {
          sub_23BAAE0F0(v17);
          unint64_t v17 = v21;
          *a1 = v21;
        }
        *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x2sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v19;
        swift_release();
        sub_23BAD8300();
        unint64_t v22 = *a1;
        int v23 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v22;
        if (!v23 || (v22 & 0x8000000000000000) != 0 || (v22 & 0x4000000000000000) != 0)
        {
          sub_23BAAE0F0(v22);
          unint64_t v22 = v24;
          *a1 = v24;
        }
        if ((v4 & 0x8000000000000000) != 0) {
          goto LABEL_62;
        }
        if (v4 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_63;
        }
        *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v18;
        swift_release();
        sub_23BAD8300();
        goto LABEL_43;
      }
      return v6;
    }
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_23BAD86C0();
    swift_bridgeObjectRelease();
    if (v12 != v29) {
      goto LABEL_17;
    }
    return v6;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  unint64_t v10 = *a1;
  if (!(v10 >> 62)) {
    return *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_23BAD86C0();
  swift_bridgeObjectRelease();
  return v28;
}

unint64_t sub_23BAAEA2C()
{
  unint64_t result = qword_268A753B0;
  if (!qword_268A753B0)
  {
    type metadata accessor for IdentificationService();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A753B0);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_23BAAEAE4(uint64_t a1)
{
  sub_23BAAD4AC(0, &qword_268A75978, (uint64_t (*)(uint64_t))sub_23BAAD478, MEMORY[0x263F8F2D8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23BAAEB70(uint64_t a1)
{
  sub_23BAB4010();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_23BAB4140();
  uint64_t v7 = sub_23BAD86F0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_23BAB5260(v13, (uint64_t)v6, (uint64_t (*)(void))sub_23BAB4010);
    unint64_t result = sub_23BAB8868((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for Currency();
    unint64_t result = sub_23BAB5028((uint64_t)v6, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, (uint64_t (*)(void))type metadata accessor for Currency);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23BAAED64(uint64_t a1)
{
  sub_23BAB3FA8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_23BAB409C(0, &qword_26ADC8358, MEMORY[0x263F8DFB0]);
  uint64_t v7 = sub_23BAD86F0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_23BAB5260(v13, (uint64_t)v6, (uint64_t (*)(void))sub_23BAB3FA8);
    unint64_t result = sub_23BAB8868((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for Currency();
    unint64_t result = sub_23BAB5028((uint64_t)v6, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, (uint64_t (*)(void))type metadata accessor for Currency);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23BAAEF74(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_23BAB52C8();
  uint64_t v2 = (void *)sub_23BAD86F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_23BAB891C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    unint64_t v12 = (void *)(v2[7] + 16 * result);
    *unint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23BAAF094(uint64_t a1)
{
  sub_23BAB513C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_23BAB51AC(0, (unint64_t *)&qword_26ADC8348, MEMORY[0x263F8DFB0]);
  uint64_t v7 = sub_23BAD86F0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_23BAB5260(v13, (uint64_t)v6, (uint64_t (*)(void))sub_23BAB513C);
    unint64_t result = sub_23BAB8994((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_23BAD7380();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t static PeerHandler.machService.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_23BAAF2C4()
{
  uint64_t v0 = sub_23BAD84A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_23BAD8480();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_23BAD81C0();
  MEMORY[0x270FA5388](v5 - 8);
  v8[0] = sub_23BA84528(0, &qword_26ADC9720);
  sub_23BAD81A0();
  v8[1] = MEMORY[0x263F8EE78];
  sub_23BAB5090(&qword_26ADC9718, MEMORY[0x263F8F0F8]);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F0F8];
  sub_23BAB4208(0, &qword_26ADC9700, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
  sub_23BAB50D8(&qword_26ADC9708, &qword_26ADC9700, v6);
  sub_23BAD8540();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v0);
  uint64_t result = sub_23BAD84D0();
  qword_26ADC8298 = result;
  return result;
}

uint64_t PeerHandler.init(session:stockService:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  unint64_t v6 = sub_23BAAF094(MEMORY[0x263F8EE78]);
  sub_23BAAF5C4();
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 24) = 0;
  *(void *)(v7 + 16) = v6;
  a3[6] = v7;
  *a3 = a1;
  return sub_23BA6E620(a2, (uint64_t)(a3 + 1));
}

void sub_23BAAF5C4()
{
  if (!qword_26ADC8338)
  {
    sub_23BAB51AC(255, &qword_26ADC82F8, MEMORY[0x263F8D060]);
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_23BAD8600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC8338);
    }
  }
}

void sub_23BAAF648()
{
  if (!qword_26ADC8328)
  {
    sub_23BA87B48(255, (unint64_t *)&qword_26ADC9740);
    unint64_t v0 = sub_23BAD83E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC8328);
    }
  }
}

uint64_t PeerHandler.handleIncomingRequest(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_23BAD8180();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v28 + 64);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CancellableStocksKitServiceRequest(0);
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v27 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v25 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v25 - v14;
  sub_23BAB5090(&qword_26ADC8270, (void (*)(uint64_t))type metadata accessor for CancellableStocksKitServiceRequest);
  sub_23BAD8170();
  uint64_t v16 = (uint64_t)v26;
  v25[2] = a2;
  sub_23BAB5028((uint64_t)v13, (uint64_t)v15, type metadata accessor for CancellableStocksKitServiceRequest);
  if (qword_26ADC82A8 != -1) {
    swift_once();
  }
  v25[1] = qword_26ADC8298;
  sub_23BAB5260((uint64_t)v15, (uint64_t)v10, type metadata accessor for CancellableStocksKitServiceRequest);
  sub_23BAAFE90(v16, (uint64_t)v29);
  unint64_t v26 = v15;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))((char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v18 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v19 = (v8 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (*(unsigned __int8 *)(v17 + 80) + v19 + 56) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v21 = swift_allocObject();
  sub_23BAB5028((uint64_t)v10, v21 + v18, type metadata accessor for CancellableStocksKitServiceRequest);
  unint64_t v22 = v21 + v19;
  long long v23 = v29[1];
  *(_OWORD *)unint64_t v22 = v29[0];
  *(_OWORD *)(v22 + 16) = v23;
  *(_OWORD *)(v22 + 32) = v29[2];
  *(void *)(v22 + 48) = v30;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v21 + v20, v6, v4);
  sub_23BAD8150();
  swift_release();
  return sub_23BAB4764((uint64_t)v26, type metadata accessor for CancellableStocksKitServiceRequest);
}

void sub_23BAAFA58()
{
  if (!qword_26ADC8278)
  {
    sub_23BAAA094();
    unint64_t v0 = type metadata accessor for StocksKitServiceResult();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC8278);
    }
  }
}

unint64_t sub_23BAAFABC()
{
  unint64_t result = qword_26ADC81C8;
  if (!qword_26ADC81C8)
  {
    sub_23BAAFA58();
    sub_23BAAFB34();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC81C8);
  }
  return result;
}

unint64_t sub_23BAAFB34()
{
  unint64_t result = qword_26ADC9748;
  if (!qword_26ADC9748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9748);
  }
  return result;
}

uint64_t sub_23BAAFB88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StocksKitServiceRequest(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_23BAD7380();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = &v30[-v14];
  uint64_t v16 = type metadata accessor for CancellableStocksKitServiceRequest(0);
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = &v30[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23BAB5260(a1, (uint64_t)v18, type metadata accessor for CancellableStocksKitServiceRequest);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v13, v18, v9);
    MEMORY[0x270FA5388](v19);
    *(void *)&v30[-16] = v13;
    uint64_t v21 = (uint64_t)&v20[4];
    unint64_t v22 = v20 + 6;
    os_unfair_lock_lock(v20 + 6);
    sub_23BAB426C(v21);
    os_unfair_lock_unlock(v22);
    uint64_t v15 = v13;
  }
  else
  {
    sub_23BAA5FE4();
    uint64_t v24 = (uint64_t)&v18[*(int *)(v23 + 48)];
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v15, v18, v9);
    uint64_t v25 = sub_23BAB5028(v24, (uint64_t)v8, type metadata accessor for StocksKitServiceRequest);
    MEMORY[0x270FA5388](v25);
    *(void *)&v30[-32] = v15;
    *(void *)&v30[-24] = a3;
    uint64_t v27 = v26 + 4;
    uint64_t v28 = v26 + 6;
    *(void *)&v30[-16] = v8;
    *(void *)&v30[-8] = a2;
    os_unfair_lock_lock(v26 + 6);
    sub_23BAB4288(v27);
    os_unfair_lock_unlock(v28);
    sub_23BAB4764((uint64_t)v8, type metadata accessor for StocksKitServiceRequest);
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_23BAAFE90(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_23BAAFEC8()
{
  uint64_t v1 = *(void *)(type metadata accessor for CancellableStocksKitServiceRequest(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_23BAD8180();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v10 = sub_23BAD7380();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v3, v10);
  if (EnumCaseMultiPayload != 1)
  {
    sub_23BAA5FE4();
    uint64_t v12 = v0 + v3 + *(int *)(v11 + 48);
    type metadata accessor for StocksKitServiceRequest(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_23BAD78E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    }
    else
    {
      sub_23BAA40E8();
      uint64_t v25 = v4;
      uint64_t v15 = v12 + *(int *)(v14 + 48);
      uint64_t v16 = sub_23BAD8680();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v24 = v15;
      uint64_t v18 = v15;
      uint64_t v4 = v25;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v24, v16);
      }
    }
  }
  uint64_t v19 = v2 | v7 | 7;
  unint64_t v20 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = (v20 + v7 + 56) & ~v7;
  uint64_t v22 = v0 + v20;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v22 + 8);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v21, v5);
  return MEMORY[0x270FA0238](v0, v21 + v8, v19);
}

uint64_t sub_23BAB017C()
{
  uint64_t v1 = *(void *)(type metadata accessor for CancellableStocksKitServiceRequest(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(sub_23BAD8180() - 8);
  uint64_t v5 = v0 + ((v3 + *(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return sub_23BAAFB88(v0 + v2, v0 + v3, v5);
}

uint64_t sub_23BAB0258(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v45 = a1;
  uint64_t v44 = a5;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v6 = type metadata accessor for StocksKitServiceRequest(0);
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v42 = *(void *)(v43 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v49 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_23BAD8180();
  uint64_t v8 = *(void *)(v36 - 8);
  uint64_t v38 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v36);
  uint64_t v46 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAB4208(0, &qword_26ADC8320, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v37 = (uint64_t)&v34 - v11;
  uint64_t v13 = sub_23BAD7380();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v35 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v41 = (uint64_t)&v34 - v17;
  uint64_t v18 = *(void (**)(void))(v14 + 16);
  v18();
  uint64_t v19 = sub_23BAD83C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 1, 1, v19);
  uint64_t v20 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v46, v39, v36);
  sub_23BAB5260(v40, v49, type metadata accessor for StocksKitServiceRequest);
  ((void (*)(char *, uint64_t, uint64_t))v18)((char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v13);
  sub_23BAAFE90(v44, (uint64_t)v47);
  unint64_t v21 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v22 = (v38 + *(unsigned __int8 *)(v43 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v23 = (v42 + *(unsigned __int8 *)(v14 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v24 = (v15 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v25 + v21, v46, v20);
  sub_23BAB5028(v49, v25 + v22, type metadata accessor for StocksKitServiceRequest);
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v25 + v23, v35, v13);
  unint64_t v26 = v25 + v24;
  long long v27 = v47[1];
  *(_OWORD *)unint64_t v26 = v47[0];
  *(_OWORD *)(v26 + 16) = v27;
  *(_OWORD *)(v26 + 32) = v47[2];
  *(void *)(v26 + 48) = v48;
  uint64_t v28 = sub_23BAB19C8(v37, (uint64_t)&unk_268A75990, v25);
  uint64_t v29 = v45;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v47[0] = *v29;
  *uint64_t v29 = 0x8000000000000000;
  uint64_t v31 = v28;
  uint64_t v32 = v41;
  sub_23BABCA5C(v31, v41, isUniquelyReferenced_nonNull_native);
  *uint64_t v29 = *(void *)&v47[0];
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v32, v13);
}

uint64_t sub_23BAB06E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  uint64_t v8 = sub_23BAD7380();
  v7[13] = v8;
  v7[14] = *(void *)(v8 - 8);
  v7[15] = swift_task_alloc();
  v7[16] = type metadata accessor for StocksKitServiceRequest(0);
  v7[17] = swift_task_alloc();
  v7[18] = swift_task_alloc();
  v7[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23BAB07F0, 0, 0);
}

uint64_t sub_23BAB07F0()
{
  uint64_t v52 = v0;
  unint64_t v1 = sub_23BAD8140();
  uint64_t v50 = v2;
  uint64_t v48 = v4;
  uint64_t v49 = v3;
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 80);
  uint64_t v9 = *(void *)(v0 + 88);
  uint64_t v11 = sub_23BAD8090();
  __swift_project_value_buffer(v11, (uint64_t)qword_26ADCC840);
  sub_23BAB5260(v10, v5, type metadata accessor for StocksKitServiceRequest);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  uint64_t v12 = sub_23BAD8070();
  os_log_type_t v13 = sub_23BAD8470();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v15 = *(void *)(v0 + 152);
  if (v14)
  {
    os_log_type_t v46 = v13;
    log = v12;
    uint64_t v17 = *(void *)(v0 + 136);
    uint64_t v16 = *(void *)(v0 + 144);
    unint64_t v47 = v1;
    unint64_t v44 = HIDWORD(v1);
    uint64_t v18 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    uint64_t v51 = v45;
    *(_DWORD *)uint64_t v18 = 136315650;
    sub_23BAB5260(v15, v16, type metadata accessor for StocksKitServiceRequest);
    sub_23BAB5260(v16, v17, type metadata accessor for StocksKitServiceRequest);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v20 = *(void *)(v0 + 136);
    uint64_t v21 = *(void *)(v0 + 144);
    if (EnumCaseMultiPayload == 1)
    {
      sub_23BAB4764(*(void *)(v0 + 144), type metadata accessor for StocksKitServiceRequest);
      sub_23BAB4764(v20, type metadata accessor for DataSource.Logo);
      unint64_t v22 = 0xE400000000000000;
      uint64_t v23 = 1869049708;
    }
    else
    {
      sub_23BAA40E8();
      uint64_t v31 = v20 + *(int *)(v30 + 48);
      sub_23BAB4764(v21, type metadata accessor for StocksKitServiceRequest);
      sub_23BAB47C4(v31, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
      unint64_t v22 = 0x800000023BADE3B0;
      uint64_t v23 = 0xD000000000000013;
    }
    uint64_t v32 = *(void *)(v0 + 152);
    uint64_t v34 = *(void *)(v0 + 112);
    uint64_t v33 = *(void *)(v0 + 120);
    uint64_t v35 = *(void *)(v0 + 104);
    *(void *)(v0 + 56) = sub_23BA7E794(v23, v22, &v51);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    sub_23BAB4764(v32, type metadata accessor for StocksKitServiceRequest);
    *(_WORD *)(v18 + 12) = 2080;
    sub_23BAB5090(&qword_26ADC81B0, MEMORY[0x263F07508]);
    uint64_t v36 = sub_23BAD8870();
    *(void *)(v0 + 64) = sub_23BA7E794(v36, v37, &v51);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    *(_WORD *)(v18 + 22) = 1024;
    uint64_t v29 = v48;
    *(_DWORD *)(v0 + 168) = v47;
    *(_DWORD *)(v0 + 172) = v44;
    uint64_t v27 = v50;
    *(void *)(v0 + 176) = v50;
    uint64_t v28 = v49;
    *(void *)(v0 + 184) = v49;
    *(void *)(v0 + 192) = v48;
    *(_DWORD *)(v0 + 20sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = audit_token_to_pid((audit_token_t *)(v0 + 168));
    sub_23BAD84F0();
    _os_log_impl(&dword_23BA68000, log, v46, "XPC handling request %s with id: %s for pid: %d", (uint8_t *)v18, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v45, -1, -1);
    uint64_t v38 = v18;
    unint64_t v1 = v47;
    MEMORY[0x23ECCD620](v38, -1, -1);
  }
  else
  {
    uint64_t v25 = *(void *)(v0 + 112);
    uint64_t v24 = *(void *)(v0 + 120);
    uint64_t v26 = *(void *)(v0 + 104);
    sub_23BAB4764(*(void *)(v0 + 152), type metadata accessor for StocksKitServiceRequest);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);

    uint64_t v27 = v50;
    uint64_t v29 = v48;
    uint64_t v28 = v49;
  }
  uint64_t v39 = (void *)swift_task_alloc();
  *(void *)(v0 + 16sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v39;
  *uint64_t v39 = v0;
  v39[1] = sub_23BAB0D14;
  uint64_t v40 = *(void *)(v0 + 88);
  uint64_t v41 = *(void *)(v0 + 80);
  return sub_23BAB0F94(v0 + 16, v41, v40, v1, v27, v28, v29, v0 + 204);
}

uint64_t sub_23BAB0D14()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(unsigned char *)(v2 + 205) = *(unsigned char *)(v2 + 204);
    uint64_t v3 = sub_23BAB0E2C;
  }
  else
  {
    uint64_t v3 = sub_23BAB0ECC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_23BAB0E2C()
{
  sub_23BAB2270(*(unsigned __int8 *)(v0 + 205) | 0x100, *(void *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23BAB0ECC()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  sub_23BAB2130((uint64_t)v4, v1, v2, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_23BAB0F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[18] = v8;
  v9[19] = a8;
  v9[16] = a6;
  v9[17] = a7;
  v9[14] = a4;
  v9[15] = a5;
  v9[12] = a2;
  v9[13] = a3;
  v9[11] = a1;
  uint64_t v10 = sub_23BAD7380();
  v9[20] = v10;
  v9[21] = *(void *)(v10 - 8);
  v9[22] = swift_task_alloc();
  v9[23] = swift_task_alloc();
  uint64_t v11 = sub_23BAD8380();
  v9[24] = v11;
  v9[25] = *(void *)(v11 - 8);
  v9[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23BAB10D0, 0, 0);
}

uint64_t sub_23BAB10D0()
{
  if (qword_26ADC81D0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 96);
  long long v3 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 32) = v3;
  *(unsigned char *)(v0 + 48) = 0;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 216) = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v5;
  sub_23BA87B48(0, &qword_26ADC8210);
  *uint64_t v5 = v0;
  v5[1] = sub_23BAB1244;
  uint64_t v6 = *(void *)(v0 + 88);
  return MEMORY[0x270FA23C8](v6, v0 + 16, &unk_268A759A8, v4, 0, 0, 0xD00000000000001BLL, 0x800000023BADE5B0);
}

uint64_t sub_23BAB1244()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_23BAB13AC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_23BAB13AC()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(void **)(v0 + 232);
  swift_task_dealloc();
  *(void *)(v0 + 56) = v1;
  id v2 = v1;
  sub_23BA87B48(0, (unint64_t *)&qword_26ADC9740);
  if (swift_dynamicCast())
  {

    if (qword_26ADC91C8 != -1) {
      swift_once();
    }
    uint64_t v3 = *(void *)(v0 + 184);
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = sub_23BAD8090();
    __swift_project_value_buffer(v7, (uint64_t)qword_26ADCC840);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v6, v4);
    uint64_t v8 = sub_23BAD8070();
    os_log_type_t v9 = sub_23BAD8460();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = *(void *)(v0 + 184);
    uint64_t v12 = *(void *)(v0 + 160);
    uint64_t v13 = *(void *)(v0 + 168);
    if (v10)
    {
      BOOL v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v49 = v15;
      *(_DWORD *)BOOL v14 = 136315138;
      sub_23BAB5090(&qword_26ADC81B0, MEMORY[0x263F07508]);
      uint64_t v16 = sub_23BAD8870();
      *(void *)(v0 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = sub_23BA7E794(v16, v17, &v49);
      sub_23BAD84F0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
      _os_log_impl(&dword_23BA68000, v8, v9, "Request cancelled in XPC for id: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v15, -1, -1);
      MEMORY[0x23ECCD620](v14, -1, -1);
    }
    else
    {
      (*(void (**)(void, void))(v13 + 8))(*(void *)(v0 + 184), *(void *)(v0 + 160));
    }

    uint64_t v39 = *(void *)(v0 + 200);
    uint64_t v38 = *(void *)(v0 + 208);
    uint64_t v40 = *(void *)(v0 + 192);
    char v41 = 2;
    *(unsigned char *)(v0 + 5sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 2;
    sub_23BAAA094();
    swift_willThrowTypedImpl();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    uint64_t v42 = *(void **)(v0 + 56);
  }
  else
  {

    if (qword_26ADC91C8 != -1) {
      swift_once();
    }
    uint64_t v18 = *(void **)(v0 + 232);
    uint64_t v20 = *(void *)(v0 + 168);
    uint64_t v19 = *(void *)(v0 + 176);
    uint64_t v21 = *(void *)(v0 + 160);
    uint64_t v22 = *(void *)(v0 + 104);
    uint64_t v23 = sub_23BAD8090();
    __swift_project_value_buffer(v23, (uint64_t)qword_26ADCC840);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v22, v21);
    id v24 = v18;
    id v25 = v18;
    uint64_t v26 = sub_23BAD8070();
    os_log_type_t v27 = sub_23BAD8460();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v29 = *(void **)(v0 + 232);
    uint64_t v31 = *(void *)(v0 + 168);
    uint64_t v30 = *(void *)(v0 + 176);
    uint64_t v32 = *(void *)(v0 + 160);
    if (v28)
    {
      uint64_t v33 = swift_slowAlloc();
      unint64_t v47 = (void *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v49 = v48;
      *(_DWORD *)uint64_t v33 = 136315394;
      sub_23BAB5090(&qword_26ADC81B0, MEMORY[0x263F07508]);
      uint64_t v34 = sub_23BAD8870();
      *(void *)(v0 + 64) = sub_23BA7E794(v34, v35, &v49);
      sub_23BAD84F0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
      *(_WORD *)(v33 + 12) = 2114;
      id v36 = v29;
      uint64_t v37 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 72) = v37;
      sub_23BAD84F0();
      *unint64_t v47 = v37;

      _os_log_impl(&dword_23BA68000, v26, v27, "Request failed in XPC for id: %s, error: %{public}@", (uint8_t *)v33, 0x16u);
      sub_23BA844C0();
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v47, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23ECCD620](v48, -1, -1);
      MEMORY[0x23ECCD620](v33, -1, -1);
    }
    else
    {
      (*(void (**)(void, void))(v31 + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
    }
    uint64_t v43 = *(void **)(v0 + 232);
    char v41 = 1;
    *(unsigned char *)(v0 + 49) = 1;
    sub_23BAAA094();
    swift_willThrowTypedImpl();
    uint64_t v42 = v43;
  }

  unint64_t v44 = *(char **)(v0 + 152);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *unint64_t v44 = v41;
  uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
  return v45();
}

uint64_t sub_23BAB19C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_23BAD83C0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_23BAD83B0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_23BAB47C4(a1, &qword_26ADC8320, MEMORY[0x263F8F520]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23BAD8340();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void sub_23BAB1B64(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_23BAD7380();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_23BAD8090();
  __swift_project_value_buffer(v9, (uint64_t)qword_26ADCC840);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  BOOL v10 = sub_23BAD8070();
  os_log_type_t v11 = sub_23BAD8470();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v23 = v2;
    uint64_t v13 = (uint8_t *)v12;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = a2;
    uint64_t v15 = v14;
    uint64_t v25 = v14;
    uint64_t v21 = a1;
    *(_DWORD *)uint64_t v13 = 136315138;
    v20[1] = v13 + 4;
    sub_23BAB5090(&qword_26ADC81B0, MEMORY[0x263F07508]);
    uint64_t v16 = sub_23BAD8870();
    uint64_t v24 = sub_23BA7E794(v16, v17, &v25);
    a1 = v21;
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _os_log_impl(&dword_23BA68000, v10, v11, "XPC handling cancel request with id: %s", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v18 = v15;
    a2 = v22;
    MEMORY[0x23ECCD620](v18, -1, -1);
    MEMORY[0x23ECCD620](v13, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  if (*(void *)(*(void *)a1 + 16))
  {
    sub_23BAB8994(a2);
    if (v19)
    {
      sub_23BA87B48(0, (unint64_t *)&qword_26ADC9740);
      swift_retain();
      sub_23BAD83D0();
      swift_release();
    }
  }
}

void PeerHandler.handleCancellation(error:)(uint64_t a1)
{
  uint64_t v2 = sub_23BAD8130();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_23BAD8090();
  __swift_project_value_buffer(v6, (uint64_t)qword_26ADCC840);
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v7(v5, a1, v2);
  uint64_t v8 = sub_23BAD8070();
  os_log_type_t v9 = sub_23BAD8470();
  if (os_log_type_enabled(v8, v9))
  {
    BOOL v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)BOOL v10 = 138412290;
    v14[1] = v10 + 4;
    sub_23BAB5090(&qword_26ADC8260, MEMORY[0x263F8F408]);
    swift_allocError();
    v7(v11, (uint64_t)v5, v2);
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v16 = v12;
    sub_23BAD84F0();
    uint64_t v13 = v15;
    *uint64_t v15 = v12;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl(&dword_23BA68000, v8, v9, "XPC received cancellation because error: %@", v10, 0xCu);
    sub_23BA844C0();
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v13, -1, -1);
    MEMORY[0x23ECCD620](v10, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_23BAB2130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23BAAA094();
  uint64_t v8 = type metadata accessor for StocksKitServiceResult();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v13 - v10, a1, a3);
  swift_storeEnumTagMultiPayload();
  sub_23BAB2674((uint64_t)v11, a2, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_23BAB2270(__int16 a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD8190();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_23BAD81C0();
  uint64_t v7 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_23BAD8180();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  if (qword_26ADC82A8 != -1) {
    swift_once();
  }
  v18[1] = qword_26ADC8298;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
  __int16 v23 = a1 & 0x1FF;
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  sub_23BAB5028((uint64_t)&v23, v14 + v13 + v12, (uint64_t (*)(void))sub_23BAAFA58);
  aBlock[4] = sub_23BAB4BB8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23BA7E634;
  aBlock[3] = &block_descriptor_14;
  uint64_t v15 = _Block_copy(aBlock);
  sub_23BAD81A0();
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_23BAB5090(&qword_26ADC8268, MEMORY[0x263F8F030]);
  uint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
  sub_23BAB4208(0, &qword_26ADC8310, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_23BAB50D8(&qword_26ADC8318, &qword_26ADC8310, v16);
  sub_23BAD8540();
  MEMORY[0x23ECCC9F0](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  return swift_release();
}

uint64_t sub_23BAB2674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a4;
  v28[0] = a1;
  uint64_t v6 = sub_23BAD8190();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_23BAD81C0();
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAAA094();
  uint64_t v29 = a3;
  uint64_t v11 = type metadata accessor for StocksKitServiceResult();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v28 - v13;
  uint64_t v15 = sub_23BAD8180();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26ADC82A8 != -1) {
    swift_once();
  }
  v28[1] = qword_26ADC8298;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v15);
  (*(void (**)(char *, void, uint64_t))(v12 + 16))(v14, v28[0], v11);
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v20 = (v17 + v19 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v30;
  *(void *)(v21 + 16) = v29;
  *(void *)(v21 + 24) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v21 + v19, v18, v15);
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v21 + v20, v14, v11);
  aBlock[4] = sub_23BAB49C0;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23BA7E634;
  aBlock[3] = &block_descriptor_0;
  __int16 v23 = _Block_copy(aBlock);
  sub_23BAD81A0();
  uint64_t v36 = MEMORY[0x263F8EE78];
  sub_23BAB5090(&qword_26ADC8268, MEMORY[0x263F8F030]);
  uint64_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
  sub_23BAB4208(0, &qword_26ADC8310, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_23BAB50D8(&qword_26ADC8318, &qword_26ADC8310, v24);
  uint64_t v25 = v33;
  uint64_t v26 = v35;
  sub_23BAD8540();
  MEMORY[0x23ECCC9F0](0, v10, v25, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v32);
  return swift_release();
}

uint64_t sub_23BAB2B40()
{
  return sub_23BAD8160();
}

uint64_t sub_23BAB2BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  uint64_t v4 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  v3[12] = v4;
  v3[13] = *(void *)(v4 + 64);
  v3[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23BAB2CA0, 0, 0);
}

uint64_t sub_23BAB2CA0()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  sub_23BAAFE90(*(void *)(v0 + 80), v0 + 16);
  sub_23BAB5260(v2, v1, type metadata accessor for StocksKitServiceRequest);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v0 + 48);
  *(void *)(v5 + 64) = *(void *)(v0 + 64);
  sub_23BAB5028(v1, v5 + v4, type metadata accessor for StocksKitServiceRequest);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v7;
  uint64_t v8 = sub_23BA87B48(0, &qword_26ADC8210);
  void *v7 = v0;
  v7[1] = sub_23BAB2E08;
  uint64_t v9 = *(void *)(v0 + 72);
  return MEMORY[0x270F7A458](v9, &unk_268A759B8, v5, v8);
}

uint64_t sub_23BAB2E08()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_23BAB2F50, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_23BAB2F50()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23BAB2FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *long long v6 = v3;
  v6[1] = sub_23BA84C10;
  return sub_23BAB306C(a1, a3);
}

uint64_t sub_23BAB306C(uint64_t a1, uint64_t a2)
{
  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  type metadata accessor for DataSource.Logo(0);
  v3[21] = swift_task_alloc();
  v3[22] = type metadata accessor for CurrencyConversionsResult();
  v3[23] = swift_task_alloc();
  sub_23BAB4208(0, &qword_26ADC9170, MEMORY[0x263F8F6D8], MEMORY[0x263F8D8F0]);
  v3[24] = swift_task_alloc();
  v3[25] = type metadata accessor for StocksKitServiceRequest(0);
  v3[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23BAB31BC, 0, 0);
}

uint64_t sub_23BAB31BC()
{
  sub_23BAB5260(*(void *)(v0 + 152), *(void *)(v0 + 208), type metadata accessor for StocksKitServiceRequest);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = *(void *)(v0 + 208);
    uint64_t v3 = *(void **)(v0 + 160);
    uint64_t v2 = *(void *)(v0 + 168);
    sub_23BAA4170();
    uint64_t v5 = *(void *)(v1 + *(int *)(v4 + 48));
    sub_23BAB5028(v1, v2, type metadata accessor for DataSource.Logo);
    uint64_t v6 = v3[4];
    uint64_t v7 = v3[5];
    __swift_project_boxed_opaque_existential_1(v3 + 1, v6);
    *(void *)(v0 + 136) = v5;
    os_log_type_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8) + **(int **)(v7 + 8));
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v8;
    void *v8 = v0;
    v8[1] = sub_23BAB36C0;
    uint64_t v9 = *(void *)(v0 + 168);
    uint64_t v10 = v0 + 16;
    uint64_t v11 = v0 + 136;
    uint64_t v12 = v6;
    uint64_t v13 = v7;
    uint64_t v14 = v27;
  }
  else
  {
    uint64_t v15 = *(uint64_t **)(v0 + 208);
    uint64_t v16 = *(void *)(v0 + 192);
    uint64_t v17 = *(void **)(v0 + 160);
    uint64_t v18 = *v15;
    uint64_t v19 = v15[1];
    char v20 = *((unsigned char *)v15 + 16);
    sub_23BAA40E8();
    sub_23BAABAA4((uint64_t)v15 + *(int *)(v21 + 48), v16);
    uint64_t v22 = v17 + 1;
    uint64_t v23 = v17[4];
    uint64_t v24 = v17[5];
    __swift_project_boxed_opaque_existential_1(v22, v23);
    *(void *)(v0 + 112) = v18;
    *(void *)(v0 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v19;
    *(unsigned char *)(v0 + 128) = v20;
    BOOL v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 + 16)
                                                                              + **(int **)(v24 + 16));
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_23BAB348C;
    uint64_t v10 = *(void *)(v0 + 184);
    uint64_t v11 = *(void *)(v0 + 192);
    uint64_t v9 = v0 + 112;
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    uint64_t v14 = v28;
  }
  return v14(v10, v9, v11, v12, v13);
}

uint64_t sub_23BAB348C()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_23BAB3908;
  }
  else {
    uint64_t v2 = sub_23BAB35A0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_23BAB35A0()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = (uint64_t *)v0[18];
  v3[3] = v0[22];
  v3[4] = sub_23BAB5090(&qword_26ADC9778, (void (*)(uint64_t))type metadata accessor for CurrencyConversionsResult);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v3);
  sub_23BAB5028(v1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
  sub_23BAB47C4(v2, &qword_26ADC9170, MEMORY[0x263F8F6D8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_23BAB36C0()
{
  *(void *)(*(void *)v1 + 24sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_23BAB39B8;
  }
  else {
    uint64_t v2 = sub_23BAB37D4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_23BAB37D4()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(uint64_t **)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  long long v13 = *(_OWORD *)(v0 + 64);
  long long v14 = *(_OWORD *)(v0 + 48);
  long long v12 = *(_OWORD *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 104);
  v2[3] = (uint64_t)&type metadata for DataSource.DownloadedLogo;
  v2[4] = sub_23BAB4F6C();
  uint64_t v9 = swift_allocObject();
  *uint64_t v2 = v9;
  *(void *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = v4;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v6;
  *(_OWORD *)(v9 + 48) = v14;
  *(_OWORD *)(v9 + 64) = v13;
  *(_OWORD *)(v9 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v12;
  *(void *)(v9 + 96) = v7;
  *(void *)(v9 + 104) = v8;
  sub_23BAB4764(v1, type metadata accessor for DataSource.Logo);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_23BAB3908()
{
  sub_23BAB47C4(*(void *)(v0 + 192), &qword_26ADC9170, MEMORY[0x263F8F6D8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23BAB39B8()
{
  sub_23BAB4764(*(void *)(v0 + 168), type metadata accessor for DataSource.Logo);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_23BAB3A64(uint64_t a1)
{
}

uint64_t sub_23BAB3A7C()
{
  sub_23BAB4208(0, &qword_26ADC8228, (uint64_t (*)(uint64_t))sub_23BA913D4, MEMORY[0x263F8F838]);
  swift_allocObject();
  uint64_t result = sub_23BAD8AF0();
  qword_26ADCC838 = result;
  return result;
}

uint64_t destroy for PeerHandler(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  return swift_release();
}

uint64_t initializeWithCopy for PeerHandler(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a2 + 8;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 8, v4, v6);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  return a1;
}

void *assignWithCopy for PeerHandler(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PeerHandler(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PeerHandler(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PeerHandler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PeerHandler()
{
  return &type metadata for PeerHandler;
}

void sub_23BAB3FA8()
{
  if (!qword_26ADC82F0)
  {
    type metadata accessor for Currency();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26ADC82F0);
    }
  }
}

void sub_23BAB4010()
{
  if (!qword_26ADC82E8)
  {
    type metadata accessor for Currency();
    sub_23BAB409C(255, (unint64_t *)&unk_26ADC96E0, MEMORY[0x263F8D060]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26ADC82E8);
    }
  }
}

void sub_23BAB409C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for Currency();
    uint64_t v7 = sub_23BAB5090(&qword_26ADC96B8, (void (*)(uint64_t))type metadata accessor for Currency);
    unint64_t v8 = a3(a1, v6, MEMORY[0x263F8D538], v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_23BAB4140()
{
  if (!qword_26ADC8350)
  {
    type metadata accessor for Currency();
    sub_23BAB409C(255, (unint64_t *)&unk_26ADC96E0, MEMORY[0x263F8D060]);
    sub_23BAB5090(&qword_26ADC96B8, (void (*)(uint64_t))type metadata accessor for Currency);
    unint64_t v0 = sub_23BAD8700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC8350);
    }
  }
}

void sub_23BAB4208(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_23BAB426C(uint64_t a1)
{
  sub_23BAB1B64(a1, *(void *)(v1 + 16));
}

uint64_t sub_23BAB4288(void *a1)
{
  return sub_23BAB0258(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_23BAB42A8()
{
  uint64_t v1 = sub_23BAD8180();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v20 = *(void *)(v6 + 64);
  uint64_t v21 = sub_23BAD7380();
  uint64_t v9 = *(void *)(v21 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = *(void *)(v9 + 64);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_23BAD78E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v8, v11);
  }
  else
  {
    sub_23BAA40E8();
    uint64_t v13 = v0 + v8 + *(int *)(v12 + 48);
    uint64_t v14 = sub_23BAD8680();
    uint64_t v15 = *(void *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
  }
  uint64_t v16 = (v8 + v20 + v10) & ~v10;
  unint64_t v17 = (v19 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v16, v21);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + v17 + 8);
  swift_release();
  return MEMORY[0x270FA0238](v0, v17 + 56, v3 | v7 | v10 | 7);
}

uint64_t sub_23BAB4578(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_23BAD8180() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_23BAD7380() - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = v1 + v5;
  uint64_t v15 = v1 + v8;
  uint64_t v16 = v1 + v11;
  uint64_t v17 = v1 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v18;
  *uint64_t v18 = v2;
  v18[1] = sub_23BA84C10;
  return sub_23BAB06E0(a1, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_23BAB4764(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23BAB47C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_23BAB4208(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_23BAB4834()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_23BAD8180();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  sub_23BAAA094();
  uint64_t v7 = *(void *)(type metadata accessor for StocksKitServiceResult() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v6 + v8) & ~v8;
  uint64_t v10 = *(void *)(v7 + 64);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v2);
  if (!swift_getEnumCaseMultiPayload()) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v9, v1);
  }
  return MEMORY[0x270FA0238](v0, v9 + v10, v4 | v8 | 7);
}

uint64_t sub_23BAB49C0()
{
  sub_23BAD8180();
  sub_23BAAA094();
  type metadata accessor for StocksKitServiceResult();
  return sub_23BAB2B40();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_23BAB4ACC()
{
  return sub_23BAD8160();
}

uint64_t sub_23BAB4B24()
{
  uint64_t v1 = sub_23BAD8180();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 2;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_23BAB4BB8()
{
  sub_23BAD8180();
  return sub_23BAB4ACC();
}

uint64_t sub_23BAB4C3C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_23BA850D8;
  return sub_23BAB2BD8(a1, v5, v4);
}

uint64_t sub_23BAB4CE8()
{
  uint64_t v1 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 72) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_23BAD78E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    sub_23BAA40E8();
    uint64_t v7 = v0 + v3 + *(int *)(v6 + 48);
    uint64_t v8 = sub_23BAD8680();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_23BAB4E84(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for StocksKitServiceRequest(0) - 8);
  uint64_t v5 = v1 + 16;
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_23BA850D8;
  return sub_23BAB2FBC(a1, v5, v6);
}

unint64_t sub_23BAB4F6C()
{
  unint64_t result = qword_268A759C8;
  if (!qword_268A759C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A759C8);
  }
  return result;
}

uint64_t sub_23BAB4FC0()
{
  sub_23BA8705C(v0[2], v0[3]);
  unint64_t v1 = v0[7];
  if (v1 >> 60 != 15) {
    sub_23BA8705C(v0[6], v1);
  }
  unint64_t v2 = v0[11];
  if (v2 >> 60 != 15) {
    sub_23BA8705C(v0[10], v2);
  }
  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t sub_23BAB5028(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23BAB5090(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BAB50D8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23BAB4208(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_23BAB513C()
{
  if (!qword_26ADC8250)
  {
    sub_23BAD7380();
    sub_23BAAF648();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26ADC8250);
    }
  }
}

void sub_23BAB51AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_23BAD7380();
    sub_23BAAF648();
    uint64_t v8 = v7;
    uint64_t v9 = sub_23BAB5090(&qword_26ADC8240, MEMORY[0x263F07508]);
    unint64_t v10 = a3(a1, v6, v8, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_23BAB5260(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_23BAB52C8()
{
  if (!qword_268A759D0)
  {
    unint64_t v0 = sub_23BAD8700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268A759D0);
    }
  }
}

uint64_t sub_23BAB5334@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v2 = sub_23BAD7400();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v33 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAB5A6C();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAB5AD0();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v32 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = sub_23BAD74B0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAD7420();
  sub_23BAD7410();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  sub_23BAD73F0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  uint64_t v22 = (uint64_t)&v8[*(int *)(v6 + 56)];
  sub_23BAB5B28((uint64_t)v17, (uint64_t)v8);
  sub_23BAB5B28((uint64_t)v15, v22);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v23((uint64_t)v8, 1, v2) == 1)
  {
    sub_23BAB5B8C((uint64_t)v15, (uint64_t (*)(void))sub_23BAB5AD0);
    sub_23BAB5B8C((uint64_t)v17, (uint64_t (*)(void))sub_23BAB5AD0);
    if (v23(v22, 1, v2) == 1)
    {
      sub_23BAB5B8C((uint64_t)v8, (uint64_t (*)(void))sub_23BAB5AD0);
LABEL_8:
      uint64_t v27 = sub_23BAD79E0();
      swift_allocObject();
      uint64_t result = sub_23BAD79D0();
      uint64_t v29 = MEMORY[0x263F7AE50];
LABEL_12:
      uint64_t v31 = v35;
      v35[3] = v27;
      v31[4] = v29;
      *uint64_t v31 = result;
      return result;
    }
    goto LABEL_6;
  }
  sub_23BAB5B28((uint64_t)v8, (uint64_t)v12);
  if (v23(v22, 1, v2) == 1)
  {
    sub_23BAB5B8C((uint64_t)v15, (uint64_t (*)(void))sub_23BAB5AD0);
    sub_23BAB5B8C((uint64_t)v17, (uint64_t (*)(void))sub_23BAB5AD0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
LABEL_6:
    sub_23BAB5B8C((uint64_t)v8, (uint64_t (*)(void))sub_23BAB5A6C);
    goto LABEL_9;
  }
  uint64_t v24 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v33, v22, v2);
  sub_23BAB5BEC();
  char v25 = sub_23BAD8220();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v3 + 8);
  v26(v24, v2);
  sub_23BAB5B8C((uint64_t)v15, (uint64_t (*)(void))sub_23BAB5AD0);
  sub_23BAB5B8C((uint64_t)v17, (uint64_t (*)(void))sub_23BAB5AD0);
  v26(v12, v2);
  sub_23BAB5B8C((uint64_t)v8, (uint64_t (*)(void))sub_23BAB5AD0);
  if (v25) {
    goto LABEL_8;
  }
LABEL_9:
  uint64_t v30 = v34;
  __swift_project_boxed_opaque_existential_1(v34, v34[3]);
  sub_23BA87B48(0, &qword_268A759E0);
  uint64_t result = sub_23BAD7DD0();
  if (v37)
  {
    __swift_project_boxed_opaque_existential_1(v30, v30[3]);
    sub_23BA87B48(0, &qword_268A759E8);
    uint64_t result = sub_23BAD7DD0();
    if (v36)
    {
      uint64_t v27 = sub_23BAD78B0();
      swift_allocObject();
      uint64_t result = sub_23BAD78A0();
      uint64_t v29 = MEMORY[0x263F7AD00];
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ManagerAssembly()
{
  return self;
}

uint64_t sub_23BAB58B4()
{
  uint64_t v0 = sub_23BAD7F20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAD7E20();
  sub_23BA87B48(0, (unint64_t *)&unk_26ADC7F68);
  sub_23BAD7E90();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D010], v0);
  sub_23BAD7D60();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_23BAD7E20();
  sub_23BAD7730();
  sub_23BAD7E90();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_23BAB5A6C()
{
  if (!qword_268A759D8)
  {
    sub_23BAB5AD0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268A759D8);
    }
  }
}

void sub_23BAB5AD0()
{
  if (!qword_268A755C0)
  {
    sub_23BAD7400();
    unint64_t v0 = sub_23BAD84E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268A755C0);
    }
  }
}

uint64_t sub_23BAB5B28(uint64_t a1, uint64_t a2)
{
  sub_23BAB5AD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAB5B8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_23BAB5BEC()
{
  unint64_t result = qword_268A759F0;
  if (!qword_268A759F0)
  {
    sub_23BAD7400();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A759F0);
  }
  return result;
}

uint64_t sub_23BAB5C44()
{
  uint64_t v0 = sub_23BAD8090();
  __swift_allocate_value_buffer(v0, qword_26ADCC840);
  __swift_project_value_buffer(v0, (uint64_t)qword_26ADCC840);
  return sub_23BAD8080();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_23BAB5D24(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_23BAB9C6C(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      sub_23BAD8280();
      sub_23BAD8400();
      unint64_t v6 = *(void *)(v9 + 16);
      unint64_t v5 = *(void *)(v9 + 24);
      if (v6 >= v5 >> 1) {
        sub_23BAB9C6C(v5 > 1, v6 + 1, 1);
      }
      *(void *)(v9 + 16) = v6 + 1;
      uint64_t v7 = v9 + 16 * v6;
      *(void *)(v7 + 32) = 0;
      *(void *)(v7 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 0xE000000000000000;
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t CurrencyConversions.currencies.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t Currency.codingKey.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = _s9StocksKit8CurrencyV10identifierSSvg_0();
  uint64_t v4 = v3;
  a1[3] = (uint64_t)&type metadata for Currency.StringCodingKey;
  a1[4] = sub_23BAB5EE0();
  uint64_t result = swift_allocObject();
  *a1 = result;
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v4;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 1;
  return result;
}

unint64_t sub_23BAB5EE0()
{
  unint64_t result = qword_26ADC82D0;
  if (!qword_26ADC82D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC82D0);
  }
  return result;
}

uint64_t sub_23BAB5F34()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t Currency.init<A>(codingKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_23BAD7450();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAD8AC0();
  _s9StocksKit8CurrencyVyACSScfC_0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
  uint64_t v10 = type metadata accessor for Currency();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a3, 0, 1, v10);
}

uint64_t type metadata accessor for Currency()
{
  uint64_t result = qword_26ADC96C8;
  if (!qword_26ADC96C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23BAB6118()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23BAB6148@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_23BAB615C()
{
  return *(void *)(v0 + 16);
}

void sub_23BAB6168(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = 0;
}

uint64_t sub_23BAB6178(uint64_t a1)
{
  unint64_t v2 = sub_23BAB5EE0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BAB61B4(uint64_t a1)
{
  unint64_t v2 = sub_23BAB5EE0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Currency.hash(into:)()
{
  sub_23BAD7450();
  sub_23BAB65A0(&qword_26ADC91B0, MEMORY[0x263F07620]);
  return sub_23BAD81F0();
}

uint64_t sub_23BAB6278()
{
  return 0x65756C6156776172;
}

uint64_t sub_23BAB6290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_23BAD88A0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23BAB6328(uint64_t a1)
{
  unint64_t v2 = sub_23BAB654C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BAB6364(uint64_t a1)
{
  unint64_t v2 = sub_23BAB654C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Currency.encode(to:)(void *a1)
{
  sub_23BAB8FC0(0, &qword_268A759F8, (uint64_t (*)(void))sub_23BAB654C, (uint64_t)&type metadata for Currency.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAB654C();
  sub_23BAD89B0();
  sub_23BAD7450();
  sub_23BAB65A0(&qword_268A75A08, MEMORY[0x263F07620]);
  sub_23BAD8850();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23BAB654C()
{
  unint64_t result = qword_268A75A00;
  if (!qword_268A75A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75A00);
  }
  return result;
}

uint64_t sub_23BAB65A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Currency.hashValue.getter()
{
  return sub_23BAD8980();
}

uint64_t Currency.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v3 = sub_23BAD7450();
  uint64_t v18 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v19 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAB8FC0(0, &qword_268A75A10, (uint64_t (*)(void))sub_23BAB654C, (uint64_t)&type metadata for Currency.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v17 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = type metadata accessor for Currency();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAB654C();
  uint64_t v12 = v20;
  sub_23BAD89A0();
  if (!v12)
  {
    uint64_t v13 = v17;
    uint64_t v14 = v18;
    sub_23BAB65A0(&qword_268A75A18, MEMORY[0x263F07620]);
    sub_23BAD87B0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v19, v3);
    sub_23BAB6AC8((uint64_t)v11, v16);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23BAB6938()
{
  return sub_23BAD8980();
}

uint64_t sub_23BAB69C0()
{
  sub_23BAD7450();
  sub_23BAB65A0(&qword_26ADC91B0, MEMORY[0x263F07620]);
  return sub_23BAD81F0();
}

uint64_t sub_23BAB6A44()
{
  return sub_23BAD8980();
}

uint64_t sub_23BAB6AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Currency();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAB6B2C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Currency.init(from:)(a1, a2);
}

uint64_t sub_23BAB6B44(void *a1)
{
  sub_23BAB8FC0(0, &qword_268A759F8, (uint64_t (*)(void))sub_23BAB654C, (uint64_t)&type metadata for Currency.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAB654C();
  sub_23BAD89B0();
  sub_23BAD7450();
  sub_23BAB65A0(&qword_268A75A08, MEMORY[0x263F07620]);
  sub_23BAD8850();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23BAB6CF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = _s9StocksKit8CurrencyV10identifierSSvg_0();
  uint64_t v4 = v3;
  a1[3] = (uint64_t)&type metadata for Currency.StringCodingKey;
  a1[4] = sub_23BAB5EE0();
  uint64_t result = swift_allocObject();
  *a1 = result;
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v4;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 1;
  return result;
}

uint64_t CurrencyConversions.conversionRate(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Currency();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v32 = *v2;
  uint64_t v11 = sub_23BAB7170(a1, a2);
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_23BAD8090();
  __swift_project_value_buffer(v12, (uint64_t)qword_26ADCC840);
  sub_23BAB8E1C(a1, (uint64_t)v10);
  sub_23BAB8E1C(a2, (uint64_t)v8);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_23BAD8070();
  os_log_type_t v14 = sub_23BAD8470();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v32 = v30;
    *(_DWORD *)uint64_t v15 = 136446722;
    uint64_t v16 = _s9StocksKit8CurrencyV10identifierSSvg_0();
    uint64_t v31 = sub_23BA7E794(v16, v17, &v32);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    sub_23BABD908((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Currency);
    *(_WORD *)(v15 + 12) = 2082;
    uint64_t v18 = _s9StocksKit8CurrencyV10identifierSSvg_0();
    uint64_t v31 = sub_23BA7E794(v18, v19, &v32);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    sub_23BABD908((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Currency);
    *(_WORD *)(v15 + 22) = 2082;
    if (v11)
    {
      uint64_t v31 = sub_23BAB5D24(v11);
      sub_23BABDAD8(0, &qword_268A75A20, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
      sub_23BAB8E80();
      uint64_t v20 = sub_23BAD8200();
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v22 = 0xE300000000000000;
      uint64_t v20 = 7104878;
    }
    uint64_t v31 = sub_23BA7E794(v20, v22, &v32);
    sub_23BAD84F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23BA68000, v13, v14, "Converting %{public}s -> %{public}s: %{public}s", (uint8_t *)v15, 0x20u);
    uint64_t v28 = v30;
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v28, -1, -1);
    MEMORY[0x23ECCD620](v15, -1, -1);

    if (!v11) {
      return 0;
    }
  }
  else
  {
    sub_23BABD908((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Currency);
    sub_23BABD908((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Currency);

    swift_bridgeObjectRelease_n();
    if (!v11) {
      return 0;
    }
  }
  uint64_t v23 = *(void *)(v11 + 16);
  if (v23)
  {
    uint64_t v24 = (double *)(v11 + 40);
    double v25 = 1.0;
    do
    {
      double v26 = *(v24 - 1);
      if (*(unsigned char *)v24) {
        double v25 = v25 / v26;
      }
      else {
        double v25 = v25 * v26;
      }
      v24 += 2;
      --v23;
    }
    while (v23);
  }
  else
  {
    double v25 = 1.0;
  }
  swift_bridgeObjectRelease();
  return *(void *)&v25;
}

uint64_t sub_23BAB7170(uint64_t a1, uint64_t a2)
{
  sub_23BABDA14(0, &qword_268A75A68, (uint64_t (*)(uint64_t))sub_23BABD450, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v40 - v6;
  sub_23BAB3FA8();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Currency();
  MEMORY[0x270FA5388](v12 - 8);
  os_log_type_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v2;
  if (!*(void *)(*v2 + 16)) {
    goto LABEL_29;
  }
  unint64_t v16 = sub_23BAB8868(a2);
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = 0;
LABEL_8:
    if (!*(void *)(v15 + 16))
    {
LABEL_16:
      uint64_t v23 = 0;
LABEL_17:
      if (!v18) {
        goto LABEL_29;
      }
      goto LABEL_18;
    }
LABEL_9:
    unint64_t v24 = sub_23BAB8868(a1);
    if (v25)
    {
      uint64_t v23 = *(void *)(*(void *)(v15 + 56) + 8 * v24);
      uint64_t v26 = *(void *)(v23 + 16);
      swift_bridgeObjectRetain();
      if (!v26) {
        goto LABEL_17;
      }
      swift_bridgeObjectRetain();
      unint64_t v27 = sub_23BAB8868(a2);
      if (v28)
      {
        uint64_t v29 = *(void *)(*(void *)(v23 + 56) + 8 * v27);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_23BABDAD8(0, &qword_268A75A78, (uint64_t)&type metadata for CurrencyConversions.ConversionStep, MEMORY[0x263F8E0F8]);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_23BADABA0;
        *(void *)(v23 + 32) = v29;
        *(unsigned char *)(v23 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 1;
        return v23;
      }
      swift_bridgeObjectRelease();
      if (!v18)
      {
LABEL_29:
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    else
    {
      uint64_t v23 = 0;
      if (!v18) {
        goto LABEL_29;
      }
    }
LABEL_18:
    uint64_t v30 = swift_bridgeObjectRetain();
    sub_23BAB7600(v30, (uint64_t)v7);
    swift_bridgeObjectRelease();
    sub_23BABD450();
    uint64_t v32 = v31;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v7, 1, v31) == 1)
    {
      sub_23BABD4BC((uint64_t)v7);
    }
    else
    {
      uint64_t v33 = *(void *)&v7[*(int *)(v32 + 48)];
      uint64_t v34 = *(int *)(v9 + 48);
      sub_23BAB6AC8((uint64_t)v7, (uint64_t)v11);
      *(void *)&v11[v34] = v33;
      uint64_t v35 = *(void *)&v11[*(int *)(v9 + 48)];
      sub_23BAB6AC8((uint64_t)v11, (uint64_t)v14);
      if (v23 && *(void *)(v23 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v36 = sub_23BAB8868((uint64_t)v14);
        if (v37)
        {
          uint64_t v38 = *(void *)(*(void *)(v23 + 56) + 8 * v36);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          sub_23BABDAD8(0, &qword_268A75A78, (uint64_t)&type metadata for CurrencyConversions.ConversionStep, MEMORY[0x263F8E0F8]);
          uint64_t v23 = swift_allocObject();
          *(_OWORD *)(v23 + 16) = xmmword_23BAD9F20;
          *(void *)(v23 + 32) = v35;
          *(unsigned char *)(v23 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 0;
          *(void *)(v23 + 48) = v38;
          *(unsigned char *)(v23 + 56) = 1;
          sub_23BABD908((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Currency);
          return v23;
        }
        swift_bridgeObjectRelease();
      }
      sub_23BABD908((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Currency);
    }
    swift_bridgeObjectRelease();
    if (!v23) {
      return v23;
    }
    goto LABEL_29;
  }
  uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
  uint64_t v19 = *(void *)(v18 + 16);
  swift_bridgeObjectRetain();
  if (!v19) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_23BAB8868(a1);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (!*(void *)(v15 + 16)) {
      goto LABEL_16;
    }
    goto LABEL_9;
  }
  uint64_t v22 = *(void *)(*(void *)(v18 + 56) + 8 * v20);
  swift_bridgeObjectRelease_n();
  sub_23BABDAD8(0, &qword_268A75A78, (uint64_t)&type metadata for CurrencyConversions.ConversionStep, MEMORY[0x263F8E0F8]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_23BADABA0;
  *(void *)(v23 + 32) = v22;
  *(unsigned char *)(v23 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 0;
  return v23;
}

uint64_t sub_23BAB7600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23BABD450();
  uint64_t v5 = v4;
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_23BABD7D8(a1);
  if (v10) {
    goto LABEL_9;
  }
  if (*(_DWORD *)(a1 + 36) != v9)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    return v11(a2, 1, 1, v5);
  }
  else
  {
    uint64_t v12 = *(int *)(v5 + 48);
    sub_23BABD860((uint64_t)v7, result, v9, 0, a1);
    uint64_t v14 = v13;
    *(void *)&v7[v12] = v13;
    sub_23BAB8E1C((uint64_t)v7, a2);
    *(void *)(a2 + *(int *)(v5 + 48)) = v14;
    sub_23BABD908((uint64_t)v7, (uint64_t (*)(void))sub_23BABD450);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a2, 0, 1, v5);
  }
}

uint64_t sub_23BAB77BC()
{
  return 0;
}

uint64_t sub_23BAB7838()
{
  return sub_23BAB77BC();
}

uint64_t sub_23BAB7844()
{
  return 0x69737265766E6F63;
}

uint64_t sub_23BAB7868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x69737265766E6F63 && a2 == 0xEF6F547942736E6FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_23BAD88A0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23BAB7924(uint64_t a1)
{
  unint64_t v2 = sub_23BAB8EFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BAB7960(uint64_t a1)
{
  unint64_t v2 = sub_23BAB8EFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CurrencyConversions.encode(to:)(void *a1)
{
  sub_23BAB8FC0(0, &qword_26ADC83D0, (uint64_t (*)(void))sub_23BAB8EFC, (uint64_t)&type metadata for CurrencyConversions.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAB8EFC();
  sub_23BAD89B0();
  v10[3] = v8;
  sub_23BABCFD4(0, &qword_26ADC96D8, MEMORY[0x263F8D060]);
  sub_23BAB9028(&qword_26ADC8300, (void (*)(void))sub_23BAB8F50, (void (*)(void))sub_23BAB8F84);
  sub_23BAD8850();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CurrencyConversions.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v12 = a2;
  sub_23BAB8FC0(0, &qword_26ADC8120, (uint64_t (*)(void))sub_23BAB8EFC, (uint64_t)&type metadata for CurrencyConversions.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAB8EFC();
  sub_23BAD89A0();
  if (!v2)
  {
    int v9 = v12;
    sub_23BABCFD4(0, &qword_26ADC96D8, MEMORY[0x263F8D060]);
    sub_23BAB9028(&qword_26ADC80D8, (void (*)(void))sub_23BAB90C8, (void (*)(void))sub_23BAB90FC);
    sub_23BAD87B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *int v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23BAB7DA8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CurrencyConversions.init(from:)(a1, a2);
}

uint64_t sub_23BAB7DC0(void *a1)
{
  return CurrencyConversions.encode(to:)(a1);
}

uint64_t sub_23BAB7DD8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v103 = a2;
  uint64_t v105 = type metadata accessor for Currency();
  uint64_t v115 = *(void *)(v105 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v105);
  uint64_t v116 = (uint64_t)v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v101 - v6;
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  char v10 = (char *)v101 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  unint64_t v119 = (unint64_t)v101 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v101 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v114 = (uint64_t)v101 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v113 = (uint64_t)v101 - v19;
  MEMORY[0x270FA5388](v18);
  char v21 = (char *)v101 - v20;
  uint64_t v22 = (unint64_t (*)@<X0>(unint64_t *@<X8>))sub_23BAD7830();
  uint64_t v23 = *((void *)v22 - 1);
  MEMORY[0x270FA5388](v22);
  char v25 = (char *)v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BABDA14(0, &qword_26ADC82E0, (uint64_t (*)(uint64_t))type metadata accessor for Currency, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v26 - 8);
  char v28 = (char *)v101 - v27;
  unint64_t v29 = sub_23BAAEB70(MEMORY[0x263F8EE78]);
  uint64_t v30 = (void *)v29;
  uint64_t v121 = MEMORY[0x263F8EE88];
  uint64_t v31 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(a1 + 16);
  int v104 = v28;
  if (!v31)
  {
    swift_bridgeObjectRelease();
    v111 = 0;
    uint64_t v63 = MEMORY[0x263F8EE88];
    goto LABEL_16;
  }
  int v102 = v7;
  uint64_t v32 = 0;
  uint64_t v34 = *(void *)(v23 + 16);
  uint64_t v33 = v23 + 16;
  *(void *)&long long v112 = v34;
  unint64_t v35 = (*(unsigned __int8 *)(v33 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 64);
  v101[1] = a1;
  uint64_t v36 = a1 + v35;
  uint64_t v106 = *(void *)(v33 + 56);
  v107 = (void (**)(char *, unint64_t (*)@<X0>(unint64_t *@<X8>)))(v33 - 8);
  char v37 = (void *)v29;
  uint64_t v110 = v33;
  v111 = v22;
  char v108 = v21;
  v109 = v15;
  while (1)
  {
    uint64_t v117 = v36;
    v118 = v31;
    ((void (*)(char *))v112)(v25);
    sub_23BAD7810();
    _s9StocksKit8CurrencyVyACSScfC_0();
    uint64_t v41 = v114;
    sub_23BAB8E1C((uint64_t)v21, v114);
    uint64_t v42 = (uint64_t)v21;
    uint64_t v43 = v113;
    sub_23BABA584(v113, v41);
    sub_23BABD908(v43, (uint64_t (*)(void))type metadata accessor for Currency);
    sub_23BAD7800();
    _s9StocksKit8CurrencyVyACSScfC_0();
    uint64_t v44 = v119;
    sub_23BAB8E1C((uint64_t)v15, v119);
    sub_23BAB8E1C(v42, (uint64_t)v10);
    sub_23BAD7820();
    double v46 = v45;
    sub_23BABA824((uint64_t)v32);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v120 = v37;
    uint64_t v48 = v44;
    unint64_t v50 = sub_23BAB8868(v44);
    uint64_t v51 = v37[2];
    BOOL v52 = (v49 & 1) == 0;
    uint64_t v53 = v51 + v52;
    if (__OFADD__(v51, v52)) {
      break;
    }
    char v54 = v49;
    if (v37[3] >= v53)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_23BABCD5C();
      }
    }
    else
    {
      sub_23BABBCDC(v53, isUniquelyReferenced_nonNull_native);
      unint64_t v55 = sub_23BAB8868(v48);
      if ((v54 & 1) != (v56 & 1)) {
        goto LABEL_58;
      }
      unint64_t v50 = v55;
    }
    swift_bridgeObjectRelease();
    uint64_t v57 = swift_bridgeObjectRetain();
    char v21 = v108;
    uint64_t v15 = v109;
    uint64_t v58 = v111;
    char v37 = (void *)v57;
    if ((v54 & 1) == 0)
    {
      unint64_t v59 = sub_23BAAED64(MEMORY[0x263F8EE78]);
      v37[(v50 >> 6) + 8] |= 1 << v50;
      sub_23BAB8E1C(v119, v37[6] + *(void *)(v115 + 72) * v50);
      *(void *)(v37[7] + 8 * v5sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v59;
      uint64_t v60 = v37[2];
      BOOL v61 = __OFADD__(v60, 1);
      uint64_t v62 = v60 + 1;
      if (v61) {
        goto LABEL_54;
      }
      v37[2] = v62;
    }
    uint64_t v38 = v37[7];
    swift_bridgeObjectRelease();
    uint64_t v39 = 8 * v50;
    char v40 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v120 = *(void **)(v38 + v39);
    *(void *)(v38 + v39) = 0x8000000000000000;
    sub_23BABC8FC((uint64_t)v10, v40, v46);
    *(void *)(v38 + v39) = v120;
    swift_bridgeObjectRelease();
    sub_23BABD908((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Currency);
    sub_23BABD908(v119, (uint64_t (*)(void))type metadata accessor for Currency);
    sub_23BABD908((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Currency);
    sub_23BABD908((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Currency);
    (*v107)(v25, v58);
    uint64_t v36 = v117 + v106;
    uint64_t v32 = sub_23BAB8838;
    uint64_t v31 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)v118 - 1);
    if (v118 == (void (**)(char *, uint64_t, uint64_t, uint64_t))1)
    {
      uint64_t v30 = v37;
      swift_bridgeObjectRelease();
      v111 = sub_23BAB8838;
      uint64_t v63 = v121;
      uint64_t v7 = v102;
      char v28 = v104;
LABEL_16:
      uint64_t v64 = 0;
      uint64_t v65 = *(void *)(v63 + 56);
      uint64_t v113 = v63 + 56;
      uint64_t v66 = 1 << *(unsigned char *)(v63 + 32);
      uint64_t v67 = -1;
      if (v66 < 64) {
        uint64_t v67 = ~(-1 << v66);
      }
      unint64_t v68 = v67 & v65;
      uint64_t v114 = (unint64_t)(v66 + 63) >> 6;
      uint64_t v117 = v115 + 48;
      v118 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v115 + 56);
      long long v112 = xmmword_23BADABA0;
      while (1)
      {
        if (v68)
        {
          unint64_t v70 = __clz(__rbit64(v68));
          v68 &= v68 - 1;
          unint64_t v71 = v70 | (v64 << 6);
        }
        else
        {
          uint64_t v72 = v64 + 1;
          if (__OFADD__(v64, 1)) {
            goto LABEL_55;
          }
          if (v72 >= v114)
          {
LABEL_50:
            (*v118)(v28, 1, 1, v105);
LABEL_51:
            swift_release();
            uint64_t result = sub_23BABA824((uint64_t)v111);
            *uint64_t v103 = v30;
            return result;
          }
          unint64_t v73 = *(void *)(v113 + 8 * v72);
          ++v64;
          if (!v73)
          {
            uint64_t v64 = v72 + 1;
            if (v72 + 1 >= v114) {
              goto LABEL_50;
            }
            unint64_t v73 = *(void *)(v113 + 8 * v64);
            if (!v73)
            {
              uint64_t v64 = v72 + 2;
              if (v72 + 2 >= v114) {
                goto LABEL_50;
              }
              unint64_t v73 = *(void *)(v113 + 8 * v64);
              if (!v73)
              {
                uint64_t v74 = v72 + 3;
                if (v74 >= v114) {
                  goto LABEL_50;
                }
                unint64_t v73 = *(void *)(v113 + 8 * v74);
                if (!v73)
                {
                  while (1)
                  {
                    uint64_t v64 = v74 + 1;
                    if (__OFADD__(v74, 1)) {
                      goto LABEL_57;
                    }
                    if (v64 >= v114) {
                      goto LABEL_50;
                    }
                    unint64_t v73 = *(void *)(v113 + 8 * v64);
                    ++v74;
                    if (v73) {
                      goto LABEL_37;
                    }
                  }
                }
                uint64_t v64 = v74;
              }
            }
          }
LABEL_37:
          unint64_t v68 = (v73 - 1) & v73;
          unint64_t v71 = __clz(__rbit64(v73)) + (v64 << 6);
        }
        uint64_t v75 = v115;
        uint64_t v76 = *(void *)(v115 + 72);
        sub_23BAB8E1C(*(void *)(v63 + 48) + v76 * v71, (uint64_t)v28);
        uint64_t v77 = v105;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v28, 0, 1, v105);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v28, 1, v77) == 1) {
          goto LABEL_51;
        }
        sub_23BAB6AC8((uint64_t)v28, (uint64_t)v7);
        if (!v30[2] || (sub_23BAB8868((uint64_t)v7), (v78 & 1) == 0))
        {
          unint64_t v119 = v68;
          uint64_t v79 = v63;
          uint64_t v80 = v116;
          sub_23BAB8E1C((uint64_t)v7, v116);
          sub_23BABDA14(0, &qword_268A75A60, (uint64_t (*)(uint64_t))sub_23BAB3FA8, MEMORY[0x263F8E0F8]);
          sub_23BAB3FA8();
          uint64_t v82 = v81 - 8;
          unint64_t v83 = (*(unsigned __int8 *)(*(void *)(v81 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v81 - 8) + 80);
          uint64_t v84 = swift_allocObject();
          *(_OWORD *)(v84 + 16) = v112;
          uint64_t v85 = v84 + v83;
          uint64_t v86 = *(int *)(v82 + 56);
          uint64_t v87 = v7;
          sub_23BAB8E1C((uint64_t)v7, v85);
          *(void *)(v85 + v86) = 0x3FF0000000000000;
          unint64_t v88 = sub_23BAAED64(v84);
          int v89 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v120 = v30;
          unint64_t v91 = sub_23BAB8868(v80);
          uint64_t v92 = v30[2];
          BOOL v93 = (v90 & 1) == 0;
          uint64_t v94 = v92 + v93;
          if (__OFADD__(v92, v93)) {
            goto LABEL_53;
          }
          char v95 = v90;
          if (v30[3] >= v94)
          {
            if ((v89 & 1) == 0) {
              sub_23BABCD5C();
            }
          }
          else
          {
            sub_23BABBCDC(v94, v89);
            unint64_t v96 = sub_23BAB8868(v116);
            if ((v95 & 1) != (v97 & 1)) {
              goto LABEL_58;
            }
            unint64_t v91 = v96;
          }
          uint64_t v7 = v87;
          uint64_t v30 = v120;
          if (v95)
          {
            uint64_t v69 = v120[7];
            swift_bridgeObjectRelease();
            *(void *)(v69 + 8 * v91) = v88;
          }
          else
          {
            v120[(v91 >> 6) + 8] |= 1 << v91;
            sub_23BAB8E1C(v116, v30[6] + v91 * v76);
            *(void *)(v30[7] + 8 * v91) = v88;
            uint64_t v98 = v30[2];
            BOOL v61 = __OFADD__(v98, 1);
            uint64_t v99 = v98 + 1;
            if (v61) {
              goto LABEL_56;
            }
            void v30[2] = v99;
          }
          swift_bridgeObjectRelease();
          sub_23BABD908(v116, (uint64_t (*)(void))type metadata accessor for Currency);
          char v28 = v104;
          uint64_t v63 = v79;
          unint64_t v68 = v119;
        }
        sub_23BABD908((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Currency);
      }
    }
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  uint64_t result = sub_23BAD88D0();
  __break(1u);
  return result;
}

unint64_t sub_23BAB8838@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_23BAAED64(MEMORY[0x263F8EE78]);
  *a1 = result;
  return result;
}

unint64_t sub_23BAB8868(uint64_t a1)
{
  sub_23BAD8940();
  sub_23BAD7450();
  sub_23BAB65A0(&qword_26ADC91B0, MEMORY[0x263F07620]);
  sub_23BAD81F0();
  uint64_t v2 = sub_23BAD8980();
  return sub_23BAB8A2C(a1, v2);
}

unint64_t sub_23BAB891C(uint64_t a1, uint64_t a2)
{
  sub_23BAD8940();
  sub_23BAD8270();
  uint64_t v4 = sub_23BAD8980();
  return sub_23BAB8B78(a1, a2, v4);
}

unint64_t sub_23BAB8994(uint64_t a1)
{
  sub_23BAD7380();
  sub_23BAB65A0(&qword_26ADC8240, MEMORY[0x263F07508]);
  uint64_t v2 = sub_23BAD81E0();
  return sub_23BAB8C5C(a1, v2);
}

unint64_t sub_23BAB8A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Currency() - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    do
    {
      sub_23BAB8E1C(*(void *)(v2 + 48) + v12 * v10, (uint64_t)v8);
      char v13 = MEMORY[0x23ECCB970](v8, a1);
      sub_23BABD908((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Currency);
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_23BAB8B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23BAD88A0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        char v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23BAD88A0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_23BAB8C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_23BAD7380();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    char v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_23BAB65A0(&qword_268A75A80, MEMORY[0x263F07508]);
      char v15 = sub_23BAD8220();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_23BAB8E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Currency();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23BAB8E80()
{
  unint64_t result = qword_268A75A28;
  if (!qword_268A75A28)
  {
    sub_23BABDAD8(255, &qword_268A75A20, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75A28);
  }
  return result;
}

unint64_t sub_23BAB8EFC()
{
  unint64_t result = qword_26ADC9680;
  if (!qword_26ADC9680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9680);
  }
  return result;
}

uint64_t sub_23BAB8F50()
{
  return sub_23BAB65A0(&qword_26ADC82D8, (void (*)(uint64_t))type metadata accessor for Currency);
}

uint64_t sub_23BAB8F84()
{
  return sub_23BAB9138(&qword_26ADC8308, (void (*)(void))sub_23BAB8F50);
}

void sub_23BAB8FC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_23BAB9028(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23BABCFD4(255, &qword_26ADC96D8, MEMORY[0x263F8D060]);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BAB90C8()
{
  return sub_23BAB65A0(&qword_26ADC80D0, (void (*)(uint64_t))type metadata accessor for Currency);
}

uint64_t sub_23BAB90FC()
{
  return sub_23BAB9138(&qword_26ADC80E0, (void (*)(void))sub_23BAB90C8);
}

uint64_t sub_23BAB9138(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23BABD318(255, (unint64_t *)&unk_26ADC96E0, MEMORY[0x263F8D060]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BAB91CC()
{
  return sub_23BAB65A0(&qword_26ADC96C0, (void (*)(uint64_t))type metadata accessor for Currency);
}

uint64_t initializeBufferWithCopyOfBuffer for Currency(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD7450();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for Currency(uint64_t a1)
{
  uint64_t v2 = sub_23BAD7450();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for Currency(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD7450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for Currency(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD7450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for Currency(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD7450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for Currency(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD7450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Currency(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23BAB9488);
}

uint64_t sub_23BAB9488(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD7450();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Currency(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23BAB9508);
}

uint64_t sub_23BAB9508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23BAD7450();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_23BAB9578()
{
  uint64_t result = sub_23BAD7450();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrencyConversions()
{
  return &type metadata for CurrencyConversions;
}

unint64_t sub_23BAB9618()
{
  unint64_t result = qword_268A75A30;
  if (!qword_268A75A30)
  {
    sub_23BABCFD4(255, &qword_268A75A38, MEMORY[0x263F8CFE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75A30);
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrencyConversions.CodingKeys()
{
  return &type metadata for CurrencyConversions.CodingKeys;
}

unsigned char *_s9StocksKit19CurrencyConversionsV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x23BAB973CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Currency.CodingKeys()
{
  return &type metadata for Currency.CodingKeys;
}

uint64_t initializeWithCopy for Currency.StringCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Currency.StringCodingKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Currency.StringCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for Currency.StringCodingKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Currency.StringCodingKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Currency.StringCodingKey()
{
  return &type metadata for Currency.StringCodingKey;
}

unint64_t sub_23BAB9910()
{
  unint64_t result = qword_268A75A40;
  if (!qword_268A75A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75A40);
  }
  return result;
}

unint64_t sub_23BAB9968()
{
  unint64_t result = qword_268A75A48;
  if (!qword_268A75A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75A48);
  }
  return result;
}

unint64_t sub_23BAB99C0()
{
  unint64_t result = qword_26ADC9690;
  if (!qword_26ADC9690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9690);
  }
  return result;
}

unint64_t sub_23BAB9A18()
{
  unint64_t result = qword_26ADC9688;
  if (!qword_26ADC9688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9688);
  }
  return result;
}

unint64_t sub_23BAB9A70()
{
  unint64_t result = qword_268A75A50;
  if (!qword_268A75A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75A50);
  }
  return result;
}

unint64_t sub_23BAB9AC8()
{
  unint64_t result = qword_268A75A58;
  if (!qword_268A75A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75A58);
  }
  return result;
}

unint64_t sub_23BAB9B20()
{
  unint64_t result = qword_26ADC82C0;
  if (!qword_26ADC82C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC82C0);
  }
  return result;
}

unint64_t sub_23BAB9B78()
{
  unint64_t result = qword_26ADC82C8;
  if (!qword_26ADC82C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC82C8);
  }
  return result;
}

uint64_t sub_23BAB9BCC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_23BAB9C8C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_23BAB9BEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_23BAB9E34(a1, a2, a3, *v3, &qword_268A75A90, (uint64_t)&type metadata for FundMetadata.Sector);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_23BAB9C1C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_23BAB9E34(a1, a2, a3, *v3, &qword_268A75A98, (uint64_t)&type metadata for FundMetadata.Holding);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_23BAB9C4C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_23BAB9FDC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_23BAB9C6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_23BABA248(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_23BAB9C8C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_23BABDAD8(0, &qword_268A75AA8, (uint64_t)&type metadata for Stock, MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  char v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[120 * v8]) {
      memmove(v12, v13, 120 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[120 * v8] || v12 >= &v13[120 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_23BAD8710();
  __break(1u);
  return result;
}

uint64_t sub_23BAB9E34(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_23BABDAD8(0, a5, a6, MEMORY[0x263F8E0F8]);
    uint64_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 24);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v14 = v12 + 32;
  char v15 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v14 >= &v15[24 * v10]) {
      memmove(v14, v15, 24 * v10);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[24 * v10] || v14 >= &v15[24 * v10])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  uint64_t result = sub_23BAD8710();
  __break(1u);
  return result;
}

uint64_t sub_23BAB9FDC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    size_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_23BABDA14(0, &qword_268A75A88, type metadata accessor for StockChart.Entry, MEMORY[0x263F8E0F8]);
  uint64_t v10 = *(void *)(type metadata accessor for StockChart.Entry(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  size_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  long long v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for StockChart.Entry(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  char v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_23BAD8710();
  __break(1u);
  return result;
}

uint64_t sub_23BABA248(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_23BABDAD8(0, &qword_268A75470, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_23BAD8710();
  __break(1u);
  return result;
}

uint64_t sub_23BABA3D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_23BAD8940();
  swift_bridgeObjectRetain();
  sub_23BAD8270();
  uint64_t v8 = sub_23BAD8980();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_23BAD88A0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      size_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_23BAD88A0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_23BABAED0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_23BABA584(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Currency();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8);
  unint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v22 - v11;
  uint64_t v13 = *v2;
  sub_23BAD8940();
  sub_23BAD7450();
  sub_23BAB65A0(&qword_26ADC91B0, MEMORY[0x263F07620]);
  swift_bridgeObjectRetain();
  sub_23BAD81F0();
  uint64_t v14 = sub_23BAD8980();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  unint64_t v16 = v14 & ~v15;
  if ((*(void *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
  {
    uint64_t v23 = v12;
    uint64_t v24 = a1;
    uint64_t v17 = ~v15;
    uint64_t v18 = *(void *)(v7 + 72);
    while (1)
    {
      sub_23BAB8E1C(*(void *)(v13 + 48) + v18 * v16, (uint64_t)v10);
      char v19 = MEMORY[0x23ECCB970](v10, a2);
      sub_23BABD908((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Currency);
      if (v19) {
        break;
      }
      unint64_t v16 = (v16 + 1) & v17;
      if (((*(void *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v23;
        a1 = v24;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_23BABD908(a2, (uint64_t (*)(void))type metadata accessor for Currency);
    sub_23BAB8E1C(*(void *)(*v3 + 48) + v18 * v16, v24);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23BAB8E1C(a2, (uint64_t)v12);
    uint64_t v25 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_23BABB06C((uint64_t)v12, v16, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v25;
    swift_bridgeObjectRelease();
    sub_23BAB6AC8(a2, a1);
    return 1;
  }
}

uint64_t sub_23BABA824(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_23BABA834()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_23BABDA78();
  uint64_t v3 = sub_23BAD8560();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_23BAD8940();
      sub_23BAD8270();
      uint64_t result = sub_23BAD8980();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_23BABAB10()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Currency();
  uint64_t v34 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_23BABD3BC();
  uint64_t v6 = sub_23BAD8560();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v31 = v0;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v33 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    int64_t v32 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v32) {
          goto LABEL_33;
        }
        unint64_t v19 = v33[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v19 = v33[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v19 = v33[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v32)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v31;
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero(v33, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v33 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v33[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v33[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v34 + 72);
      sub_23BAB6AC8(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
      sub_23BAD8940();
      sub_23BAD7450();
      sub_23BAB65A0(&qword_26ADC91B0, MEMORY[0x263F07620]);
      sub_23BAD81F0();
      uint64_t result = sub_23BAD8980();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_23BAB6AC8((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v7;
  return result;
}

uint64_t sub_23BABAED0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_23BABA834();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_23BABB2C8();
      goto LABEL_22;
    }
    sub_23BABB6AC();
  }
  uint64_t v11 = *v4;
  sub_23BAD8940();
  sub_23BAD8270();
  uint64_t result = sub_23BAD8980();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_23BAD88A0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_23BAD88C0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_23BAD88A0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_23BABB06C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Currency();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_23BABAB10();
  }
  else
  {
    if (v13 > v12)
    {
      sub_23BABB478();
      goto LABEL_12;
    }
    sub_23BABB958();
  }
  uint64_t v14 = *v4;
  sub_23BAD8940();
  sub_23BAD7450();
  sub_23BAB65A0(&qword_26ADC91B0, MEMORY[0x263F07620]);
  sub_23BAD81F0();
  uint64_t v15 = sub_23BAD8980();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v25 = v8;
    uint64_t v17 = ~v16;
    uint64_t v18 = *(void *)(v9 + 72);
    do
    {
      sub_23BAB8E1C(*(void *)(v14 + 48) + v18 * a2, (uint64_t)v11);
      char v19 = MEMORY[0x23ECCB970](v11, a1);
      sub_23BABD908((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Currency);
      if (v19) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v20 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_23BAB6AC8(a1, *(void *)(v20 + 48) + *(void *)(v9 + 72) * a2);
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (!v23)
  {
    *(void *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_23BAD88C0();
  __break(1u);
  return result;
}

void *sub_23BABB2C8()
{
  unint64_t v1 = v0;
  sub_23BABDA78();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_23BAD8550();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    char v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23BABB478()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Currency();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BABD3BC();
  uint64_t v6 = *v0;
  uint64_t v7 = sub_23BAD8550();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v17) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v10 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v10 + 8 * v13);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    unint64_t v20 = *(void *)(v3 + 72) * v19;
    sub_23BAB8E1C(*(void *)(v6 + 48) + v20, (uint64_t)v5);
    uint64_t result = (void *)sub_23BAB6AC8((uint64_t)v5, *(void *)(v8 + 48) + v20);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v17) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v10 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23BABB6AC()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_23BABDA78();
  uint64_t v3 = sub_23BAD8560();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_23BAD8940();
    swift_bridgeObjectRetain();
    sub_23BAD8270();
    uint64_t result = sub_23BAD8980();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23BABB958()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Currency();
  uint64_t v33 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_23BABD3BC();
  uint64_t v6 = sub_23BAD8560();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v30 = v0;
  uint64_t v31 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v31 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v31 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v33 + 72);
    sub_23BAB8E1C(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
    sub_23BAD8940();
    sub_23BAD7450();
    sub_23BAB65A0(&qword_26ADC91B0, MEMORY[0x263F07620]);
    sub_23BAD81F0();
    uint64_t result = sub_23BAD8980();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_23BAB6AC8((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v31 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23BABBCDC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Currency();
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_23BABCFD4(0, (unint64_t *)&qword_26ADC8350, MEMORY[0x263F8DFB0]);
  int v40 = a2;
  uint64_t v9 = sub_23BAD86E0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v38 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v36 = v2;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    uint64_t v22 = v38;
    unint64_t v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = v38[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = v38[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v39 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v40)
    {
      sub_23BAB6AC8(v26, (uint64_t)v7);
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
    }
    else
    {
      sub_23BAB8E1C(v26, (uint64_t)v7);
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
      swift_bridgeObjectRetain();
    }
    sub_23BAD8940();
    sub_23BAD7450();
    sub_23BAB65A0(&qword_26ADC91B0, MEMORY[0x263F07620]);
    sub_23BAD81F0();
    uint64_t result = sub_23BAD8980();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_23BAB6AC8((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  uint64_t v22 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_23BABC0E0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Currency();
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_23BABD318(0, &qword_26ADC8358, MEMORY[0x263F8DFB0]);
  int v40 = a2;
  uint64_t v9 = sub_23BAD86E0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v36 = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v38 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    uint64_t v22 = v38;
    unint64_t v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = v38[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = v38[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v39 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v40) {
      sub_23BAB6AC8(v26, (uint64_t)v7);
    }
    else {
      sub_23BAB8E1C(v26, (uint64_t)v7);
    }
    uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
    sub_23BAD8940();
    sub_23BAD7450();
    sub_23BAB65A0(&qword_26ADC91B0, MEMORY[0x263F07620]);
    sub_23BAD81F0();
    uint64_t result = sub_23BAD8980();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_23BAB6AC8((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  uint64_t v22 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_23BABC4DC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_23BAD7380();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_23BABD968();
  int v46 = a2;
  uint64_t v10 = sub_23BAD86E0();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  int64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_23BAB65A0(&qword_26ADC8240, MEMORY[0x263F07508]);
    uint64_t result = sub_23BAD81E0();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_23BABC8FC(uint64_t a1, char a2, double a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for Currency();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_23BAB8868(a1);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t result = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = v11[3];
    if (v18 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      unint64_t v19 = *v4;
      if (v17)
      {
LABEL_8:
        *(double *)(v19[7] + 8 * v13) = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v18 >= result && (a2 & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_23BABD0A4();
      goto LABEL_7;
    }
    sub_23BABC0E0(result, a2 & 1);
    uint64_t result = sub_23BAB8868(a1);
    if ((v17 & 1) == (v20 & 1))
    {
      unint64_t v13 = result;
      unint64_t v19 = *v4;
      if (v17) {
        goto LABEL_8;
      }
LABEL_11:
      sub_23BAB8E1C(a1, (uint64_t)v10);
      return sub_23BABCC04(v13, (uint64_t)v10, v19, a3);
    }
  }
  uint64_t result = sub_23BAD88D0();
  __break(1u);
  return result;
}

uint64_t sub_23BABCA5C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_23BAD7380();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = (void *)*v3;
  unint64_t v14 = sub_23BAB8994(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_23BABD548();
    goto LABEL_7;
  }
  sub_23BABC4DC(v17, a3 & 1);
  unint64_t v23 = sub_23BAB8994(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_23BAD88D0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_23BABCCA4(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_23BABCC04(unint64_t a1, uint64_t a2, void *a3, double a4)
{
  a3[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a3[6];
  uint64_t v9 = type metadata accessor for Currency();
  uint64_t result = sub_23BAB6AC8(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1);
  *(double *)(a3[7] + 8 * a1) = a4;
  uint64_t v11 = a3[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a3[2] = v13;
  }
  return result;
}

uint64_t sub_23BABCCA4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_23BAD7380();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

void *sub_23BABCD5C()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Currency();
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BABCFD4(0, (unint64_t *)&qword_26ADC8350, MEMORY[0x263F8DFB0]);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_23BAD86D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *unint64_t v1 = v7;
    return result;
  }
  char v24 = v1;
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v25 + 72) * v17;
    sub_23BAB8E1C(*(void *)(v5 + 48) + v18, (uint64_t)v4);
    uint64_t v19 = 8 * v17;
    uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_23BAB6AC8((uint64_t)v4, *(void *)(v7 + 48) + v18);
    *(void *)(*(void *)(v7 + 56) + v19) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    unint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_23BABCFD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for Currency();
    sub_23BABD318(255, (unint64_t *)&unk_26ADC96E0, MEMORY[0x263F8D060]);
    uint64_t v8 = v7;
    uint64_t v9 = sub_23BAB65A0(&qword_26ADC96B8, (void (*)(uint64_t))type metadata accessor for Currency);
    unint64_t v10 = a3(a1, v6, v8, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void *sub_23BABD0A4()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Currency();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BABD318(0, &qword_26ADC8358, MEMORY[0x263F8DFB0]);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_23BAD86D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *unint64_t v1 = v8;
    return result;
  }
  unint64_t v26 = v1;
  uint64_t result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_23BAB8E1C(*(void *)(v6 + 48) + v19, (uint64_t)v5);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v6 + 56) + v20);
    uint64_t result = (void *)sub_23BAB6AC8((uint64_t)v5, *(void *)(v8 + 48) + v19);
    *(void *)(*(void *)(v8 + 56) + v2sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v21;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    unint64_t v1 = v26;
    goto LABEL_25;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_23BABD318(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for Currency();
    uint64_t v7 = sub_23BAB65A0(&qword_26ADC96B8, (void (*)(uint64_t))type metadata accessor for Currency);
    unint64_t v8 = a3(a1, v6, MEMORY[0x263F8D538], v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_23BABD3BC()
{
  if (!qword_26ADC8330)
  {
    type metadata accessor for Currency();
    sub_23BAB65A0(&qword_26ADC96B8, (void (*)(uint64_t))type metadata accessor for Currency);
    unint64_t v0 = sub_23BAD8580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC8330);
    }
  }
}

void sub_23BABD450()
{
  if (!qword_268A75A70)
  {
    type metadata accessor for Currency();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268A75A70);
    }
  }
}

uint64_t sub_23BABD4BC(uint64_t a1)
{
  sub_23BABDA14(0, &qword_268A75A68, (uint64_t (*)(uint64_t))sub_23BABD450, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_23BABD548()
{
  uint64_t v1 = sub_23BAD7380();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BABD968();
  int64_t v24 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_23BAD86D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v24 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v25 = v5 + 64;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  uint64_t v28 = v2 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    unint64_t v17 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v17, v1);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v17, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23BABD7D8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_23BABD860(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(a5 + 48);
    uint64_t v8 = type metadata accessor for Currency();
    return sub_23BAB8E1C(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a2, v6);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23BABD908(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_23BABD968()
{
  if (!qword_26ADC8348)
  {
    sub_23BAD7380();
    sub_23BAAF648();
    sub_23BAB65A0(&qword_26ADC8240, MEMORY[0x263F07508]);
    unint64_t v0 = sub_23BAD8700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26ADC8348);
    }
  }
}

void sub_23BABDA14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_23BABDA78()
{
  if (!qword_268A75AA0)
  {
    unint64_t v0 = sub_23BAD8580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268A75AA0);
    }
  }
}

void sub_23BABDAD8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for CurrencyConversions.ConversionStep(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CurrencyConversions.ConversionStep(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_23BABDBB0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_23BABDBB8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CurrencyConversions.ConversionStep()
{
  return &type metadata for CurrencyConversions.ConversionStep;
}

uint64_t sub_23BABDBD4()
{
  sub_23BAD8270();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BABDD08()
{
  sub_23BAD8270();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BABDE50()
{
  sub_23BAD8270();
  return swift_bridgeObjectRelease();
}

uint64_t Stock.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Stock.symbol.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Stock.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Stock.exchange.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void Stock.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 64);
}

uint64_t Stock.symbolDisplayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Stock.shortName.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Stock.compactName.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Stock.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23BAD8270();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BAD8270();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BAD8270();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BAD8270();
  swift_bridgeObjectRelease();
  sub_23BAD8270();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BAD8270();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BAD8270();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BAD8270();
  return swift_bridgeObjectRelease();
}

unint64_t sub_23BABE3B4(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6F626D7973;
      break;
    case 2:
      unint64_t result = 1701667182;
      break;
    case 3:
      unint64_t result = 0x65676E6168637865;
      break;
    case 4:
      unint64_t result = 1701869940;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x6D614E74726F6873;
      break;
    case 7:
      unint64_t result = 0x4E746361706D6F63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_23BABE4A8()
{
  return sub_23BABE3B4(*v0);
}

uint64_t sub_23BABE4B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BABFAB4(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BABE4D8(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_23BABE4E4(uint64_t a1)
{
  unint64_t v2 = sub_23BABF2B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BABE520(uint64_t a1)
{
  unint64_t v2 = sub_23BABF2B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Stock.encode(to:)(void *a1)
{
  sub_23BABF35C(0, &qword_268A75AB0, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v17 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v23 = *(void *)(v1 + 24);
  uint64_t v24 = v8;
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v21 = *(void *)(v1 + 40);
  uint64_t v22 = v9;
  uint64_t v10 = *(void *)(v1 + 48);
  uint64_t v19 = *(void *)(v1 + 56);
  uint64_t v20 = v10;
  int v18 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v11 = *(void *)(v1 + 72);
  uint64_t v17[5] = *(void *)(v1 + 80);
  v17[6] = v11;
  uint64_t v12 = *(void *)(v1 + 88);
  v17[3] = *(void *)(v1 + 96);
  v17[4] = v12;
  uint64_t v13 = *(void *)(v1 + 112);
  v17[1] = *(void *)(v1 + 104);
  v17[2] = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BABF2B4();
  sub_23BAD89B0();
  char v34 = 0;
  uint64_t v14 = v25;
  sub_23BAD8830();
  if (!v14)
  {
    char v15 = v18;
    char v33 = 1;
    sub_23BAD8830();
    char v32 = 2;
    sub_23BAD8830();
    char v31 = 3;
    sub_23BAD8830();
    char v30 = v15;
    char v29 = 4;
    sub_23BABF308();
    sub_23BAD8850();
    char v28 = 5;
    sub_23BAD8830();
    char v27 = 6;
    sub_23BAD8830();
    char v26 = 7;
    sub_23BAD8830();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Stock.hashValue.getter()
{
  return sub_23BAD8980();
}

uint64_t Stock.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_23BABF35C(0, &qword_268A75AC8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v34 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BABF2B4();
  sub_23BAD89A0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v55 = 0;
  uint64_t v11 = sub_23BAD8790();
  uint64_t v13 = v12;
  char v54 = 1;
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_23BAD8790();
  uint64_t v45 = v11;
  char v53 = 2;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_23BAD8790();
  uint64_t v46 = v15;
  uint64_t v43 = v16;
  char v52 = 3;
  uint64_t v18 = v17;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_23BAD8790();
  uint64_t v21 = v20;
  uint64_t v41 = v19;
  uint64_t v42 = v18;
  char v50 = 4;
  sub_23BABF3C0();
  swift_bridgeObjectRetain();
  sub_23BAD87B0();
  uint64_t v39 = v21;
  LODWORD(v18) = v51;
  char v49 = 5;
  uint64_t v37 = sub_23BAD8790();
  int v38 = v18;
  char v48 = 6;
  uint64_t v40 = v22;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_23BAD8790();
  char v47 = 7;
  uint64_t v36 = v24;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_23BAD8790();
  uint64_t v27 = v26;
  char v28 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v35 = v25;
  v28(v9, v6);
  swift_bridgeObjectRetain();
  uint64_t v29 = v46;
  swift_bridgeObjectRetain();
  uint64_t v30 = v42;
  swift_bridgeObjectRetain();
  uint64_t v31 = v39;
  swift_bridgeObjectRetain();
  uint64_t v34 = v23;
  uint64_t v32 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v45;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v44;
  *(void *)(a2 + 24) = v29;
  *(void *)(a2 + 32) = v43;
  *(void *)(a2 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v30;
  *(void *)(a2 + 48) = v41;
  *(void *)(a2 + 56) = v31;
  *(unsigned char *)(a2 + 64) = v38;
  uint64_t v33 = v36;
  *(void *)(a2 + 72) = v37;
  *(void *)(a2 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v32;
  *(void *)(a2 + 88) = v34;
  *(void *)(a2 + 96) = v33;
  *(void *)(a2 + 104) = v35;
  *(void *)(a2 + 112) = v27;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BABEF08@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BABEF14()
{
  return sub_23BAD8980();
}

uint64_t sub_23BABEF9C()
{
  return sub_23BAD8980();
}

uint64_t sub_23BABF020@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Stock.init(from:)(a1, a2);
}

uint64_t sub_23BABF038(void *a1)
{
  return Stock.encode(to:)(a1);
}

uint64_t _s9StocksKit5StockV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v33 = *(void *)(a1 + 56);
  uint64_t v34 = *(void *)(a1 + 48);
  unsigned __int8 v32 = *(unsigned char *)(a1 + 64);
  uint64_t v30 = *(void *)(a1 + 72);
  uint64_t v26 = *(void *)(a1 + 88);
  uint64_t v24 = *(void *)(a1 + 96);
  uint64_t v21 = *(void *)(a1 + 112);
  uint64_t v22 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v31 = *(unsigned char *)(a2 + 64);
  uint64_t v28 = *(void *)(a1 + 80);
  uint64_t v29 = *(void *)(a2 + 72);
  uint64_t v27 = *(void *)(a2 + 80);
  uint64_t v25 = *(void *)(a2 + 88);
  uint64_t v23 = *(void *)(a2 + 96);
  uint64_t v19 = *(void *)(a2 + 112);
  uint64_t v20 = *(void *)(a2 + 104);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_23BAD88A0(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v6 || (v14 = sub_23BAD88A0(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v4 == v8 && v5 == v9 || (v15 = sub_23BAD88A0(), uint64_t result = 0, (v15 & 1) != 0))
      {
        if (v34 == v11 && v33 == v10 || (v16 = sub_23BAD88A0(), uint64_t result = 0, (v16 & 1) != 0))
        {
          if (sub_23BA9A664(v32, v31))
          {
            if (v30 == v29 && v28 == v27 || (v17 = sub_23BAD88A0(), uint64_t result = 0, (v17 & 1) != 0))
            {
              if (v26 == v25 && v24 == v23 || (v18 = sub_23BAD88A0(), uint64_t result = 0, (v18 & 1) != 0))
              {
                if (v22 == v20 && v21 == v19)
                {
                  return 1;
                }
                else
                {
                  return sub_23BAD88A0();
                }
              }
            }
          }
          else
          {
            return 0;
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_23BABF2B4()
{
  unint64_t result = qword_268A75AB8;
  if (!qword_268A75AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75AB8);
  }
  return result;
}

unint64_t sub_23BABF308()
{
  unint64_t result = qword_268A75AC0;
  if (!qword_268A75AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75AC0);
  }
  return result;
}

void sub_23BABF35C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_23BABF2B4();
    unint64_t v7 = a3(a1, &type metadata for Stock.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_23BABF3C0()
{
  unint64_t result = qword_268A75AD0;
  if (!qword_268A75AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75AD0);
  }
  return result;
}

unint64_t sub_23BABF418()
{
  unint64_t result = qword_268A75AD8;
  if (!qword_268A75AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75AD8);
  }
  return result;
}

uint64_t destroy for Stock()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Stock(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Stock(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for Stock(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Stock(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Stock(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Stock()
{
  return &type metadata for Stock;
}

uint64_t getEnumTagSinglePayload for StockType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Stock.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BABF974);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Stock.CodingKeys()
{
  return &type metadata for Stock.CodingKeys;
}

unint64_t sub_23BABF9B0()
{
  unint64_t result = qword_268A75AE0;
  if (!qword_268A75AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75AE0);
  }
  return result;
}

unint64_t sub_23BABFA08()
{
  unint64_t result = qword_268A75AE8;
  if (!qword_268A75AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75AE8);
  }
  return result;
}

unint64_t sub_23BABFA60()
{
  unint64_t result = qword_268A75AF0;
  if (!qword_268A75AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75AF0);
  }
  return result;
}

uint64_t sub_23BABFAB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xE800000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BADE630 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D614E74726F6873 && a2 == 0xE900000000000065 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4E746361706D6F63 && a2 == 0xEB00000000656D61)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_23BABFDDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v139 = a2;
  uint64_t v3 = sub_23BAD7550();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v149 = v3;
  uint64_t v150 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v148 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v147 = (char *)&v99 - v7;
  uint64_t v146 = (void *)sub_23BAD7580();
  uint64_t v8 = *(v146 - 1);
  uint64_t v9 = MEMORY[0x270FA5388](v146);
  uint64_t v145 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v144 = (char *)&v99 - v11;
  sub_23BAC0B40(0, &qword_268A75AF8, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v12 - 8);
  char v14 = (char *)&v99 - v13;
  sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  char v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v99 - v19;
  sub_23BAC0B40(0, &qword_268A75758, MEMORY[0x263F07490]);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v24 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v99 - v25;
  uint64_t v131 = sub_23BAD75F0();
  int v130 = v27;
  uint64_t v129 = sub_23BAD75B0();
  int v126 = v28;
  uint64_t v125 = sub_23BAD75E0();
  int v124 = v29;
  uint64_t v121 = sub_23BAD7610();
  int v120 = v30;
  uint64_t v117 = sub_23BAD7640();
  int v116 = v31;
  uint64_t v115 = sub_23BAD7630();
  int v110 = v32;
  uint64_t v109 = sub_23BAD76E0();
  int v108 = v33;
  uint64_t v107 = sub_23BAD7620();
  int v106 = v34;
  uint64_t v105 = sub_23BAD76C0();
  int v104 = v35;
  uint64_t v103 = sub_23BAD76D0();
  int v102 = v36;
  uint64_t v101 = sub_23BAD7690();
  int v100 = v37;
  uint64_t v134 = v26;
  sub_23BAD76B0();
  char v135 = v24;
  sub_23BAD7670();
  uint64_t v114 = sub_23BAD75D0();
  uint64_t v113 = v38;
  v136 = v20;
  sub_23BAD7590();
  v137 = v18;
  sub_23BAD76A0();
  v138 = v14;
  sub_23BAD7660();
  uint64_t v133 = sub_23BAD7650();
  uint64_t v132 = v39;
  uint64_t v128 = sub_23BAD7600();
  uint64_t v127 = v40;
  uint64_t v123 = sub_23BAD76F0();
  uint64_t v122 = v41;
  uint64_t v119 = sub_23BAD7700();
  uint64_t v118 = v42;
  uint64_t v112 = sub_23BAD75A0();
  uint64_t v111 = v43;
  uint64_t v44 = sub_23BAD7680();
  int64_t v45 = *(void *)(v44 + 16);
  uint64_t v140 = a1;
  if (v45)
  {
    uint64_t v151 = MEMORY[0x263F8EE78];
    sub_23BAB9C1C(0, v45, 0);
    char v47 = *(void (**)(char *, char *, void *))(v8 + 16);
    uint64_t v46 = v8 + 16;
    v142 = v47;
    unint64_t v48 = (*(unsigned __int8 *)(v46 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 64);
    uint64_t v99 = v44;
    unint64_t v49 = v44 + v48;
    uint64_t v141 = *(void *)(v46 + 56);
    char v50 = (void (**)(char *, void *))(v46 - 8);
    uint64_t v143 = v46;
    unsigned __int8 v51 = v144;
    do
    {
      char v52 = v146;
      char v53 = v142;
      v142(v51, (char *)v49, v146);
      char v54 = v145;
      v53(v145, v51, v52);
      uint64_t v55 = sub_23BAD7540();
      uint64_t v57 = v56;
      sub_23BAD7530();
      uint64_t v59 = v58;
      uint64_t v60 = *v50;
      (*v50)(v54, v52);
      v60(v51, v52);
      uint64_t v61 = v151;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23BAB9C1C(0, *(void *)(v61 + 16) + 1, 1);
        uint64_t v61 = v151;
      }
      unint64_t v63 = *(void *)(v61 + 16);
      unint64_t v62 = *(void *)(v61 + 24);
      if (v63 >= v62 >> 1)
      {
        sub_23BAB9C1C(v62 > 1, v63 + 1, 1);
        uint64_t v61 = v151;
      }
      *(void *)(v61 + 16) = v63 + 1;
      uint64_t v64 = (void *)(v61 + 24 * v63);
      v64[4] = v55;
      v64[5] = v57;
      v64[6] = v59;
      v49 += v141;
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease();
    a1 = v140;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v61 = MEMORY[0x263F8EE78];
  }
  uint64_t v65 = sub_23BAD75C0();
  int64_t v66 = *(void *)(v65 + 16);
  uint64_t v67 = MEMORY[0x263F8EE78];
  if (v66)
  {
    uint64_t v151 = MEMORY[0x263F8EE78];
    sub_23BAB9BEC(0, v66, 0);
    unint64_t v68 = *(void **)(v150 + 16);
    uint64_t v69 = *(unsigned __int8 *)(v150 + 80);
    uint64_t v144 = (char *)v65;
    uint64_t v70 = v65 + ((v69 + 32) & ~v69);
    uint64_t v145 = *(char **)(v150 + 72);
    uint64_t v146 = v68;
    v150 += 16;
    unint64_t v71 = (void (**)(char *, uint64_t))(v150 - 8);
    do
    {
      uint64_t v72 = (void (*)(char *, char *, uint64_t))v146;
      unint64_t v73 = v147;
      uint64_t v74 = v149;
      ((void (*)(char *, uint64_t, uint64_t))v146)(v147, v70, v149);
      uint64_t v75 = v148;
      v72(v148, v73, v74);
      uint64_t v76 = sub_23BAD7540();
      uint64_t v78 = v77;
      sub_23BAD7530();
      uint64_t v80 = v79;
      uint64_t v81 = *v71;
      (*v71)(v75, v74);
      v81(v73, v74);
      uint64_t v67 = v151;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23BAB9BEC(0, *(void *)(v67 + 16) + 1, 1);
        uint64_t v67 = v151;
      }
      unint64_t v83 = *(void *)(v67 + 16);
      unint64_t v82 = *(void *)(v67 + 24);
      if (v83 >= v82 >> 1)
      {
        sub_23BAB9BEC(v82 > 1, v83 + 1, 1);
        uint64_t v67 = v151;
      }
      *(void *)(v67 + 16) = v83 + 1;
      uint64_t v84 = (void *)(v67 + 24 * v83);
      v84[4] = v76;
      v84[5] = v78;
      v84[6] = v80;
      v70 += (uint64_t)v145;
      --v66;
    }
    while (v66);
    a1 = v140;
  }
  uint64_t v85 = sub_23BAD7710();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v85 - 8) + 8))(a1, v85);
  swift_bridgeObjectRelease();
  uint64_t v86 = v139;
  *int v139 = v131;
  *((unsigned char *)v86 + 8) = v130 & 1;
  v86[2] = v129;
  *((unsigned char *)v86 + 24) = v126 & 1;
  v86[4] = v125;
  *((unsigned char *)v86 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v124 & 1;
  v86[6] = v121;
  *((unsigned char *)v86 + 56) = v120 & 1;
  v86[8] = v117;
  *((unsigned char *)v86 + 72) = v116 & 1;
  v86[10] = v115;
  *((unsigned char *)v86 + 88) = v110 & 1;
  v86[12] = v109;
  *((unsigned char *)v86 + 104) = v108 & 1;
  v86[14] = v107;
  *((unsigned char *)v86 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v106 & 1;
  v86[16] = v105;
  *((unsigned char *)v86 + 136) = v104 & 1;
  v86[18] = v103;
  *((unsigned char *)v86 + 152) = v102 & 1;
  v86[20] = v101;
  *((unsigned char *)v86 + 168) = v100 & 1;
  uint64_t v87 = (int *)type metadata accessor for QuoteDetail();
  unint64_t v88 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_23BAC3BB4((uint64_t)v134, (uint64_t)v86 + v87[15], &qword_268A75758, MEMORY[0x263F07490]);
  sub_23BAC3BB4((uint64_t)v135, (uint64_t)v86 + v87[16], &qword_268A75758, v88);
  int v89 = (uint64_t *)((char *)v86 + v87[17]);
  uint64_t v90 = v113;
  *int v89 = v114;
  v89[1] = v90;
  unint64_t v91 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
  sub_23BAC3BB4((uint64_t)v136, (uint64_t)v86 + v87[18], (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
  sub_23BAC3BB4((uint64_t)v137, (uint64_t)v86 + v87[19], (unint64_t *)&qword_26ADC9198, v91);
  uint64_t result = sub_23BAC3BB4((uint64_t)v138, (uint64_t)v86 + v87[20], &qword_268A75AF8, MEMORY[0x263F079C8]);
  BOOL v93 = (uint64_t *)((char *)v86 + v87[21]);
  uint64_t v94 = v132;
  *BOOL v93 = v133;
  v93[1] = v94;
  uint64_t v95 = v127;
  v93[2] = v128;
  v93[3] = v95;
  uint64_t v96 = v122;
  v93[4] = v123;
  v93[5] = v96;
  uint64_t v97 = v118;
  v93[6] = v119;
  v93[7] = v97;
  uint64_t v98 = v111;
  v93[8] = v112;
  v93[9] = v98;
  v93[10] = v61;
  v93[11] = v67;
  return result;
}

uint64_t QuoteDetail.dayOpenPrice.getter()
{
  return *(void *)v0;
}

uint64_t QuoteDetail.dayLowPrice.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t QuoteDetail.dayHighPrice.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t QuoteDetail.yearLowPrice.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t QuoteDetail.yearHighPrice.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t QuoteDetail.dividendYield.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t QuoteDetail.volume.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t QuoteDetail.averageVolume.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t QuoteDetail.priceEarningsRatio.getter()
{
  return *(void *)(v0 + 128);
}

uint64_t QuoteDetail.beta.getter()
{
  return *(void *)(v0 + 144);
}

uint64_t QuoteDetail.earningsPerShare.getter()
{
  return *(void *)(v0 + 160);
}

uint64_t QuoteDetail.earningsStartDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for QuoteDetail();
  return sub_23BAC0A2C(v1 + *(int *)(v3 + 60), a1, &qword_268A75758, MEMORY[0x263F07490]);
}

uint64_t type metadata accessor for QuoteDetail()
{
  uint64_t result = qword_268A75B28;
  if (!qword_268A75B28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t QuoteDetail.earningsEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for QuoteDetail();
  return sub_23BAC0A2C(v1 + *(int *)(v3 + 64), a1, &qword_268A75758, MEMORY[0x263F07490]);
}

uint64_t QuoteDetail.currencyCode.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for QuoteDetail() + 68));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t QuoteDetail.detailsURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for QuoteDetail();
  return sub_23BAC0A2C(v1 + *(int *)(v3 + 72), a1, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
}

uint64_t sub_23BAC0A2C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_23BAC0B40(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t QuoteDetail.keyStatisticsURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for QuoteDetail();
  return sub_23BAC0A2C(v1 + *(int *)(v3 + 76), a1, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
}

uint64_t QuoteDetail.marketTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for QuoteDetail();
  return sub_23BAC0A2C(v1 + *(int *)(v3 + 80), a1, &qword_268A75AF8, MEMORY[0x263F079C8]);
}

void sub_23BAC0B40(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_23BAD84E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t QuoteDetail.fundMetadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for QuoteDetail() + 84));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  uint64_t v12 = v3[8];
  uint64_t v13 = v3[9];
  uint64_t v15 = v3[10];
  uint64_t v14 = v3[11];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v12;
  a1[9] = v13;
  a1[10] = v15;
  a1[11] = v14;
  return sub_23BAC0C08(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v15);
}

uint64_t sub_23BAC0C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_23BAC0CAC(char a1)
{
  unint64_t result = 0x506E65704F796164;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7250776F4C796164;
      break;
    case 2:
      unint64_t result = 0x5068676948796164;
      break;
    case 3:
      unint64_t result = 0x50776F4C72616579;
      break;
    case 4:
      unint64_t result = 0x6867694872616579;
      break;
    case 5:
      unint64_t result = 0x646E656469766964;
      break;
    case 6:
      unint64_t result = 0x656D756C6F76;
      break;
    case 7:
      unint64_t result = 0x5665676172657661;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 1635018082;
      break;
    case 10:
    case 15:
      unint64_t result = 0xD000000000000010;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 12:
      unint64_t result = 0x73676E696E726165;
      break;
    case 13:
      unint64_t result = 0x79636E6572727563;
      break;
    case 14:
      unint64_t result = 0x55736C6961746564;
      break;
    case 16:
      unint64_t result = 0x695474656B72616DLL;
      break;
    case 17:
      unint64_t result = 0x6174654D646E7566;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_23BAC0F14()
{
  return sub_23BAC0CAC(*v0);
}

uint64_t sub_23BAC0F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BAC6B04(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BAC0F44(unsigned char *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_23BAC0F50(uint64_t a1)
{
  unint64_t v2 = sub_23BAC3A4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BAC0F8C(uint64_t a1)
{
  unint64_t v2 = sub_23BAC3A4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t QuoteDetail.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_23BAC3AF4(0, &qword_268A75B00, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAC3A4C();
  sub_23BAD89B0();
  LOBYTE(v16[0]) = 0;
  sub_23BAD8800();
  if (!v2)
  {
    LOBYTE(v16[0]) = 1;
    sub_23BAD8800();
    LOBYTE(v16[0]) = 2;
    sub_23BAD8800();
    LOBYTE(v16[0]) = 3;
    sub_23BAD8800();
    LOBYTE(v16[0]) = 4;
    sub_23BAD8800();
    LOBYTE(v16[0]) = 5;
    sub_23BAD8800();
    LOBYTE(v16[0]) = 6;
    sub_23BAD8810();
    LOBYTE(v16[0]) = 7;
    sub_23BAD8810();
    LOBYTE(v16[0]) = 8;
    sub_23BAD8800();
    LOBYTE(v16[0]) = 9;
    sub_23BAD8800();
    LOBYTE(v16[0]) = 10;
    sub_23BAD8800();
    uint64_t v11 = type metadata accessor for QuoteDetail();
    LOBYTE(v16[0]) = 11;
    sub_23BAD7350();
    sub_23BAC7550(&qword_26ADC8238, MEMORY[0x263F07490]);
    sub_23BAD8820();
    LOBYTE(v16[0]) = 12;
    sub_23BAD8820();
    LOBYTE(v16[0]) = 13;
    sub_23BAD87F0();
    LOBYTE(v16[0]) = 14;
    sub_23BAD72C0();
    sub_23BAC7550(&qword_26ADC8230, MEMORY[0x263F06EA8]);
    sub_23BAD8820();
    LOBYTE(v16[0]) = 15;
    sub_23BAD8820();
    LOBYTE(v16[0]) = 16;
    sub_23BAD74D0();
    sub_23BAC7550(&qword_268A75780, MEMORY[0x263F079C8]);
    sub_23BAD8820();
    uint64_t v12 = (_OWORD *)(v3 + *(int *)(v11 + 84));
    long long v13 = v12[1];
    v16[0] = *v12;
    v16[1] = v13;
    long long v14 = v12[3];
    void v16[2] = v12[2];
    uint64_t v16[3] = v14;
    long long v15 = v12[5];
    v16[4] = v12[4];
    v16[5] = v15;
    char v17 = 17;
    sub_23BAC3AA0();
    sub_23BAD8820();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t QuoteDetail.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  sub_23BAC0B40(0, &qword_268A75AF8, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v54 = (uint64_t)&v50 - v4;
  sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v50 - v9;
  sub_23BAC0B40(0, &qword_268A75758, MEMORY[0x263F07490]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  long long v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v50 - v15;
  sub_23BAC3AF4(0, &qword_268A75B18, MEMORY[0x263F8E040]);
  uint64_t v57 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v50 - v19;
  uint64_t v60 = (int *)type metadata accessor for QuoteDetail();
  MEMORY[0x270FA5388](v60);
  uint64_t v61 = (uint64_t *)((char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = a1[3];
  uint64_t v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_23BAC3A4C();
  uint64_t v56 = v20;
  uint64_t v23 = (uint64_t)v58;
  sub_23BAD89A0();
  if (v23) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  }
  uint64_t v58 = v16;
  char v53 = v14;
  char v52 = v10;
  unsigned __int8 v51 = v8;
  LOBYTE(v62) = 0;
  uint64_t v24 = sub_23BAD8760();
  uint64_t v25 = v61;
  uint64_t *v61 = v24;
  *((unsigned char *)v25 + 8) = v26 & 1;
  LOBYTE(v62) = 1;
  v25[2] = sub_23BAD8760();
  *((unsigned char *)v25 + 24) = v27 & 1;
  LOBYTE(v62) = 2;
  v25[4] = sub_23BAD8760();
  *((unsigned char *)v25 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v28 & 1;
  LOBYTE(v62) = 3;
  v25[6] = sub_23BAD8760();
  *((unsigned char *)v25 + 56) = v29 & 1;
  LOBYTE(v62) = 4;
  v25[8] = sub_23BAD8760();
  *((unsigned char *)v25 + 72) = v30 & 1;
  LOBYTE(v62) = 5;
  v25[10] = sub_23BAD8760();
  *((unsigned char *)v25 + 88) = v31 & 1;
  LOBYTE(v62) = 6;
  v25[12] = sub_23BAD8770();
  *((unsigned char *)v25 + 104) = v32 & 1;
  LOBYTE(v62) = 7;
  v25[14] = sub_23BAD8770();
  *((unsigned char *)v25 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v33 & 1;
  LOBYTE(v62) = 8;
  v25[16] = sub_23BAD8760();
  *((unsigned char *)v25 + 136) = v34 & 1;
  LOBYTE(v62) = 9;
  uint64_t v35 = sub_23BAD8760();
  int v36 = v61;
  v61[18] = v35;
  *((unsigned char *)v36 + 152) = v37 & 1;
  LOBYTE(v62) = 10;
  uint64_t v38 = sub_23BAD8760();
  uint64_t v39 = v61;
  v61[20] = v38;
  *((unsigned char *)v39 + 168) = v40 & 1;
  sub_23BAD7350();
  LOBYTE(v62) = 11;
  sub_23BAC7550(&qword_26ADC7F00, MEMORY[0x263F07490]);
  sub_23BAD8780();
  sub_23BAC3BB4((uint64_t)v58, (uint64_t)v61 + v60[15], &qword_268A75758, MEMORY[0x263F07490]);
  LOBYTE(v62) = 12;
  sub_23BAD8780();
  sub_23BAC3BB4((uint64_t)v53, (uint64_t)v61 + v60[16], &qword_268A75758, MEMORY[0x263F07490]);
  LOBYTE(v62) = 13;
  uint64_t v41 = sub_23BAD8750();
  uint64_t v42 = (uint64_t *)((char *)v61 + v60[17]);
  *uint64_t v42 = v41;
  v42[1] = v43;
  sub_23BAD72C0();
  LOBYTE(v62) = 14;
  sub_23BAC7550(&qword_26ADC7EF8, MEMORY[0x263F06EA8]);
  sub_23BAD8780();
  sub_23BAC3BB4((uint64_t)v52, (uint64_t)v61 + v60[18], (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
  LOBYTE(v62) = 15;
  sub_23BAD8780();
  sub_23BAC3BB4((uint64_t)v51, (uint64_t)v61 + v60[19], (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
  sub_23BAD74D0();
  LOBYTE(v62) = 16;
  sub_23BAC7550(&qword_268A757A0, MEMORY[0x263F079C8]);
  sub_23BAD8780();
  sub_23BAC3BB4(v54, (uint64_t)v61 + v60[20], &qword_268A75AF8, MEMORY[0x263F079C8]);
  char v68 = 17;
  sub_23BAC3C20();
  sub_23BAD8780();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v56, v57);
  uint64_t v44 = (uint64_t)v61;
  int64_t v45 = (_OWORD *)((char *)v61 + v60[21]);
  long long v46 = v63;
  _OWORD *v45 = v62;
  v45[1] = v46;
  long long v47 = v65;
  uint64_t v45[2] = v64;
  v45[3] = v47;
  long long v48 = v67;
  void v45[4] = v66;
  v45[5] = v48;
  sub_23BAC3C74(v44, v55);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  return sub_23BAC3CD8(v44);
}

uint64_t sub_23BAC2090@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return QuoteDetail.init(from:)(a1, a2);
}

uint64_t sub_23BAC20A8(void *a1)
{
  return QuoteDetail.encode(to:)(a1);
}

BOOL _s9StocksKit11QuoteDetailV2eeoiySbAC_ACtFZ_0()
{
  uint64_t v176 = sub_23BAD74D0();
  uint64_t v171 = *(void *)(v176 - 8);
  MEMORY[0x270FA5388](v176);
  v168 = &v159[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F079C8];
  sub_23BAC732C(0, &qword_268A75B50, &qword_268A75AF8, MEMORY[0x263F079C8]);
  uint64_t v169 = v2;
  MEMORY[0x270FA5388](v2);
  v175 = &v159[-v3];
  sub_23BAC0B40(0, &qword_268A75AF8, v1);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  v170 = &v159[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  v172 = &v159[-v8];
  MEMORY[0x270FA5388](v7);
  v173 = &v159[-v9];
  uint64_t v187 = sub_23BAD72C0();
  uint64_t v183 = *(void *)(v187 - 8);
  MEMORY[0x270FA5388](v187);
  v174 = &v159[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
  sub_23BAC732C(0, &qword_268A75730, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
  uint64_t v182 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  v180 = &v159[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  v186 = &v159[-v15];
  sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, v11);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  v177 = &v159[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v178 = &v159[-v20];
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v179 = &v159[-v22];
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v181 = &v159[-v24];
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v184 = &v159[-v26];
  MEMORY[0x270FA5388](v25);
  v185 = &v159[-v27];
  uint64_t v28 = sub_23BAD7350();
  uint64_t v190 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  v189 = &v159[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v30 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_23BAC732C(0, (unint64_t *)&qword_268A757E8, &qword_268A75758, MEMORY[0x263F07490]);
  uint64_t v32 = v31;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  v188 = &v159[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v33);
  int v36 = &v159[-v35];
  sub_23BAC0B40(0, &qword_268A75758, v30);
  uint64_t v38 = MEMORY[0x270FA5388](v37 - 8);
  char v40 = &v159[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v41 = MEMORY[0x270FA5388](v38);
  uint64_t v43 = &v159[-v42];
  uint64_t v44 = MEMORY[0x270FA5388](v41);
  long long v46 = &v159[-v45];
  uint64_t v47 = MEMORY[0x270FA5388](v44);
  unint64_t v49 = &v159[-v48];
  uint64_t v50 = MEMORY[0x270FA5388](v47);
  char v52 = &v159[-v51];
  MEMORY[0x270FA5388](v50);
  uint64_t v56 = &v159[-v55];
  char v57 = *(unsigned char *)(v53 + 8);
  if (*(unsigned char *)(v54 + 8))
  {
    if (!*(unsigned char *)(v53 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)v54 != *(double *)v53) {
      char v57 = 1;
    }
    if (v57) {
      return 0;
    }
  }
  char v58 = *(unsigned char *)(v53 + 24);
  if (*(unsigned char *)(v54 + 24))
  {
    if (!*(unsigned char *)(v53 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(v54 + 16) != *(double *)(v53 + 16)) {
      char v58 = 1;
    }
    if (v58) {
      return 0;
    }
  }
  char v59 = *(unsigned char *)(v53 + 40);
  if (*(unsigned char *)(v54 + 40))
  {
    if (!*(unsigned char *)(v53 + 40)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(v54 + 32) != *(double *)(v53 + 32)) {
      char v59 = 1;
    }
    if (v59) {
      return 0;
    }
  }
  char v60 = *(unsigned char *)(v53 + 56);
  if (*(unsigned char *)(v54 + 56))
  {
    if (!*(unsigned char *)(v53 + 56)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(v54 + 48) != *(double *)(v53 + 48)) {
      char v60 = 1;
    }
    if (v60) {
      return 0;
    }
  }
  char v61 = *(unsigned char *)(v53 + 72);
  if (*(unsigned char *)(v54 + 72))
  {
    if (!*(unsigned char *)(v53 + 72)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(v54 + 64) != *(double *)(v53 + 64)) {
      char v61 = 1;
    }
    if (v61) {
      return 0;
    }
  }
  char v62 = *(unsigned char *)(v53 + 88);
  if (*(unsigned char *)(v54 + 88))
  {
    if (!*(unsigned char *)(v53 + 88)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(v54 + 80) != *(double *)(v53 + 80)) {
      char v62 = 1;
    }
    if (v62) {
      return 0;
    }
  }
  char v63 = *(unsigned char *)(v53 + 104);
  if (*(unsigned char *)(v54 + 104))
  {
    if (!*(unsigned char *)(v53 + 104)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(v54 + 96) != *(void *)(v53 + 96)) {
      char v63 = 1;
    }
    if (v63) {
      return 0;
    }
  }
  char v64 = *(unsigned char *)(v53 + 120);
  if (*(unsigned char *)(v54 + 120))
  {
    if (!*(unsigned char *)(v53 + 120)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(v54 + 112) != *(void *)(v53 + 112)) {
      char v64 = 1;
    }
    if (v64) {
      return 0;
    }
  }
  char v65 = *(unsigned char *)(v53 + 136);
  if (*(unsigned char *)(v54 + 136))
  {
    if (!*(unsigned char *)(v53 + 136)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(v54 + 128) != *(double *)(v53 + 128)) {
      char v65 = 1;
    }
    if (v65) {
      return 0;
    }
  }
  char v66 = *(unsigned char *)(v53 + 152);
  if (*(unsigned char *)(v54 + 152))
  {
    if (!*(unsigned char *)(v53 + 152)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(v54 + 144) != *(double *)(v53 + 144)) {
      char v66 = 1;
    }
    if (v66) {
      return 0;
    }
  }
  char v67 = *(unsigned char *)(v53 + 168);
  if (*(unsigned char *)(v54 + 168))
  {
    if (!*(unsigned char *)(v53 + 168)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(v54 + 160) != *(double *)(v53 + 160)) {
      char v67 = 1;
    }
    if (v67) {
      return 0;
    }
  }
  uint64_t v164 = v54;
  uint64_t v165 = v53;
  v163 = (int *)type metadata accessor for QuoteDetail();
  uint64_t v68 = v164 + v163[15];
  v167 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_23BAC0A2C(v68, (uint64_t)v56, &qword_268A75758, MEMORY[0x263F07490]);
  sub_23BAC0A2C(v165 + v163[15], (uint64_t)v52, &qword_268A75758, v167);
  v166 = &v36[*(int *)(v32 + 48)];
  sub_23BAC0A2C((uint64_t)v56, (uint64_t)v36, &qword_268A75758, v167);
  sub_23BAC0A2C((uint64_t)v52, (uint64_t)v166, &qword_268A75758, v167);
  v162 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v190 + 48);
  v167 = (void (*)(uint64_t))(v190 + 48);
  if (v162((uint64_t)v36, 1, v28) == 1)
  {
    uint64_t v69 = (void (*)(uint64_t))MEMORY[0x263F07490];
    sub_23BAC3B58((uint64_t)v52, &qword_268A75758, MEMORY[0x263F07490]);
    sub_23BAC3B58((uint64_t)v56, &qword_268A75758, v69);
    if (v162((uint64_t)v166, 1, v28) == 1)
    {
      sub_23BAC3B58((uint64_t)v36, &qword_268A75758, MEMORY[0x263F07490]);
      goto LABEL_74;
    }
LABEL_72:
    sub_23BAC7390((uint64_t)v36, (unint64_t *)&qword_268A757E8, &qword_268A75758, MEMORY[0x263F07490]);
    return 0;
  }
  sub_23BAC0A2C((uint64_t)v36, (uint64_t)v49, &qword_268A75758, MEMORY[0x263F07490]);
  if (v162((uint64_t)v166, 1, v28) == 1)
  {
    uint64_t v70 = (void (*)(uint64_t))MEMORY[0x263F07490];
    sub_23BAC3B58((uint64_t)v52, &qword_268A75758, MEMORY[0x263F07490]);
    sub_23BAC3B58((uint64_t)v56, &qword_268A75758, v70);
    (*(void (**)(unsigned char *, uint64_t))(v190 + 8))(v49, v28);
    goto LABEL_72;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v190 + 32))(v189, v166, v28);
  sub_23BAC7550(&qword_268A757F0, MEMORY[0x263F07490]);
  int v160 = sub_23BAD8220();
  unint64_t v71 = *(unsigned char **)(v190 + 8);
  uint64_t v161 = v190 + 8;
  v166 = v71;
  ((void (*)(unsigned char *, uint64_t))v71)(v189, v28);
  uint64_t v72 = (uint64_t)v52;
  unint64_t v73 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_23BAC3B58(v72, &qword_268A75758, MEMORY[0x263F07490]);
  sub_23BAC3B58((uint64_t)v56, &qword_268A75758, v73);
  ((void (*)(unsigned char *, uint64_t))v166)(v49, v28);
  sub_23BAC3B58((uint64_t)v36, &qword_268A75758, v73);
  if ((v160 & 1) == 0) {
    return 0;
  }
LABEL_74:
  uint64_t v74 = v163;
  uint64_t v75 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_23BAC0A2C(v164 + v163[16], (uint64_t)v46, &qword_268A75758, MEMORY[0x263F07490]);
  sub_23BAC0A2C(v165 + v74[16], (uint64_t)v43, &qword_268A75758, v75);
  uint64_t v76 = v188;
  uint64_t v77 = (uint64_t)&v188[*(int *)(v32 + 48)];
  sub_23BAC0A2C((uint64_t)v46, (uint64_t)v188, &qword_268A75758, v75);
  sub_23BAC0A2C((uint64_t)v43, v77, &qword_268A75758, v75);
  uint64_t v78 = v162;
  if (v162((uint64_t)v76, 1, v28) == 1)
  {
    uint64_t v79 = (void (*)(uint64_t))MEMORY[0x263F07490];
    sub_23BAC3B58((uint64_t)v43, &qword_268A75758, MEMORY[0x263F07490]);
    sub_23BAC3B58((uint64_t)v46, &qword_268A75758, v79);
    if (v78(v77, 1, v28) == 1)
    {
      sub_23BAC3B58((uint64_t)v76, &qword_268A75758, MEMORY[0x263F07490]);
      goto LABEL_81;
    }
LABEL_79:
    sub_23BAC7390((uint64_t)v76, (unint64_t *)&qword_268A757E8, &qword_268A75758, MEMORY[0x263F07490]);
    return 0;
  }
  sub_23BAC0A2C((uint64_t)v76, (uint64_t)v40, &qword_268A75758, MEMORY[0x263F07490]);
  if (v78(v77, 1, v28) == 1)
  {
    uint64_t v80 = (void (*)(uint64_t))MEMORY[0x263F07490];
    sub_23BAC3B58((uint64_t)v43, &qword_268A75758, MEMORY[0x263F07490]);
    sub_23BAC3B58((uint64_t)v46, &qword_268A75758, v80);
    (*(void (**)(unsigned char *, uint64_t))(v190 + 8))(v40, v28);
    uint64_t v76 = v188;
    goto LABEL_79;
  }
  uint64_t v81 = v189;
  uint64_t v82 = v190;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v190 + 32))(v189, v77, v28);
  sub_23BAC7550(&qword_268A757F0, MEMORY[0x263F07490]);
  char v83 = sub_23BAD8220();
  uint64_t v84 = *(void (**)(unsigned char *, uint64_t))(v82 + 8);
  v84(v81, v28);
  uint64_t v85 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_23BAC3B58((uint64_t)v43, &qword_268A75758, MEMORY[0x263F07490]);
  sub_23BAC3B58((uint64_t)v46, &qword_268A75758, v85);
  v84(v40, v28);
  sub_23BAC3B58((uint64_t)v188, &qword_268A75758, v85);
  if ((v83 & 1) == 0) {
    return 0;
  }
LABEL_81:
  uint64_t v86 = v163[17];
  uint64_t v87 = (void *)(v164 + v86);
  uint64_t v88 = *(void *)(v164 + v86 + 8);
  int v89 = (void *)(v165 + v86);
  uint64_t v90 = v89[1];
  if (!v88)
  {
    if (v90) {
      return 0;
    }
    goto LABEL_88;
  }
  if (!v90) {
    return 0;
  }
  if (*v87 == *v89 && v88 == v90 || (v91 = sub_23BAD88A0(), BOOL result = 0, (v91 & 1) != 0))
  {
LABEL_88:
    BOOL v93 = v163;
    uint64_t v94 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
    uint64_t v95 = v185;
    sub_23BAC0A2C(v164 + v163[18], (uint64_t)v185, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    uint64_t v96 = v184;
    sub_23BAC0A2C(v165 + v93[18], (uint64_t)v184, (unint64_t *)&qword_26ADC9198, v94);
    uint64_t v97 = v186;
    uint64_t v98 = (uint64_t)&v186[*(int *)(v182 + 48)];
    sub_23BAC0A2C((uint64_t)v95, (uint64_t)v186, (unint64_t *)&qword_26ADC9198, v94);
    sub_23BAC0A2C((uint64_t)v96, v98, (unint64_t *)&qword_26ADC9198, v94);
    uint64_t v99 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v183 + 48);
    if (v99((uint64_t)v97, 1, v187) == 1)
    {
      int v100 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
      sub_23BAC3B58((uint64_t)v184, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
      sub_23BAC3B58((uint64_t)v185, (unint64_t *)&qword_26ADC9198, v100);
      if (v99(v98, 1, v187) == 1)
      {
        sub_23BAC3B58((uint64_t)v186, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
        goto LABEL_95;
      }
    }
    else
    {
      sub_23BAC0A2C((uint64_t)v186, (uint64_t)v181, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
      if (v99(v98, 1, v187) != 1)
      {
        uint64_t v102 = v183;
        uint64_t v103 = v174;
        uint64_t v104 = v187;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v183 + 32))(v174, v98, v187);
        sub_23BAC7550(&qword_268A75740, MEMORY[0x263F06EA8]);
        uint64_t v105 = v181;
        char v106 = sub_23BAD8220();
        uint64_t v107 = *(void (**)(unsigned char *, uint64_t))(v102 + 8);
        v107(v103, v104);
        int v108 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
        sub_23BAC3B58((uint64_t)v184, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
        sub_23BAC3B58((uint64_t)v185, (unint64_t *)&qword_26ADC9198, v108);
        v107(v105, v104);
        sub_23BAC3B58((uint64_t)v186, (unint64_t *)&qword_26ADC9198, v108);
        if ((v106 & 1) == 0) {
          return 0;
        }
LABEL_95:
        uint64_t v109 = v163;
        int v110 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
        uint64_t v111 = v179;
        sub_23BAC0A2C(v164 + v163[19], (uint64_t)v179, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
        uint64_t v112 = v178;
        sub_23BAC0A2C(v165 + v109[19], (uint64_t)v178, (unint64_t *)&qword_26ADC9198, v110);
        uint64_t v113 = v180;
        uint64_t v114 = (uint64_t)&v180[*(int *)(v182 + 48)];
        sub_23BAC0A2C((uint64_t)v111, (uint64_t)v180, (unint64_t *)&qword_26ADC9198, v110);
        sub_23BAC0A2C((uint64_t)v112, v114, (unint64_t *)&qword_26ADC9198, v110);
        if (v99((uint64_t)v113, 1, v187) == 1)
        {
          uint64_t v115 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
          sub_23BAC3B58((uint64_t)v178, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
          sub_23BAC3B58((uint64_t)v179, (unint64_t *)&qword_26ADC9198, v115);
          if (v99(v114, 1, v187) == 1)
          {
            sub_23BAC3B58((uint64_t)v180, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
            goto LABEL_102;
          }
        }
        else
        {
          sub_23BAC0A2C((uint64_t)v180, (uint64_t)v177, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
          if (v99(v114, 1, v187) != 1)
          {
            uint64_t v117 = v183;
            uint64_t v118 = v174;
            uint64_t v119 = v187;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v183 + 32))(v174, v114, v187);
            sub_23BAC7550(&qword_268A75740, MEMORY[0x263F06EA8]);
            int v120 = v177;
            char v121 = sub_23BAD8220();
            uint64_t v122 = *(void (**)(unsigned char *, uint64_t))(v117 + 8);
            v122(v118, v119);
            uint64_t v123 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
            sub_23BAC3B58((uint64_t)v178, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
            sub_23BAC3B58((uint64_t)v179, (unint64_t *)&qword_26ADC9198, v123);
            v122(v120, v119);
            sub_23BAC3B58((uint64_t)v180, (unint64_t *)&qword_26ADC9198, v123);
            if ((v121 & 1) == 0) {
              return 0;
            }
LABEL_102:
            int v124 = v163;
            uint64_t v125 = (void (*)(uint64_t))MEMORY[0x263F079C8];
            int v126 = v173;
            sub_23BAC0A2C(v164 + v163[20], (uint64_t)v173, &qword_268A75AF8, MEMORY[0x263F079C8]);
            uint64_t v127 = v172;
            sub_23BAC0A2C(v165 + v124[20], (uint64_t)v172, &qword_268A75AF8, v125);
            uint64_t v128 = v175;
            uint64_t v129 = (uint64_t)&v175[*(int *)(v169 + 48)];
            sub_23BAC0A2C((uint64_t)v126, (uint64_t)v175, &qword_268A75AF8, v125);
            sub_23BAC0A2C((uint64_t)v127, v129, &qword_268A75AF8, v125);
            int v130 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v171 + 48);
            if (v130((uint64_t)v128, 1, v176) == 1)
            {
              uint64_t v131 = (void (*)(uint64_t))MEMORY[0x263F079C8];
              sub_23BAC3B58((uint64_t)v172, &qword_268A75AF8, MEMORY[0x263F079C8]);
              sub_23BAC3B58((uint64_t)v173, &qword_268A75AF8, v131);
              if (v130(v129, 1, v176) == 1)
              {
                sub_23BAC3B58((uint64_t)v175, &qword_268A75AF8, MEMORY[0x263F079C8]);
                goto LABEL_109;
              }
            }
            else
            {
              sub_23BAC0A2C((uint64_t)v175, (uint64_t)v170, &qword_268A75AF8, MEMORY[0x263F079C8]);
              if (v130(v129, 1, v176) != 1)
              {
                uint64_t v133 = v171;
                uint64_t v134 = v168;
                uint64_t v135 = v176;
                (*(void (**)(unsigned char *, uint64_t, uint64_t))(v171 + 32))(v168, v129, v176);
                sub_23BAC7550(&qword_268A75B58, MEMORY[0x263F079C8]);
                v136 = v170;
                char v137 = sub_23BAD8220();
                v138 = *(void (**)(unsigned char *, uint64_t))(v133 + 8);
                v138(v134, v135);
                int v139 = (void (*)(uint64_t))MEMORY[0x263F079C8];
                sub_23BAC3B58((uint64_t)v172, &qword_268A75AF8, MEMORY[0x263F079C8]);
                sub_23BAC3B58((uint64_t)v173, &qword_268A75AF8, v139);
                v138(v136, v135);
                sub_23BAC3B58((uint64_t)v175, &qword_268A75AF8, v139);
                if ((v137 & 1) == 0) {
                  return 0;
                }
LABEL_109:
                uint64_t v140 = v163[21];
                uint64_t v141 = *(void *)(v164 + v140);
                uint64_t v142 = *(void *)(v164 + v140 + 8);
                uint64_t v143 = *(void *)(v164 + v140 + 16);
                uint64_t v144 = *(void *)(v164 + v140 + 24);
                uint64_t v145 = *(void *)(v164 + v140 + 32);
                uint64_t v147 = *(void *)(v164 + v140 + 48);
                uint64_t v146 = *(unsigned char **)(v164 + v140 + 56);
                uint64_t v187 = *(void *)(v164 + v140 + 40);
                v188 = v146;
                uint64_t v148 = *(void *)(v164 + v140 + 64);
                uint64_t v150 = *(void *)(v164 + v140 + 80);
                uint64_t v149 = *(void *)(v164 + v140 + 88);
                v189 = *(unsigned char **)(v164 + v140 + 72);
                uint64_t v190 = v149;
                uint64_t v151 = v165 + v140;
                uint64_t v152 = *(unsigned char **)(v151 + 8);
                v179 = *(unsigned char **)v151;
                v180 = v152;
                uint64_t v153 = *(void *)(v151 + 24);
                v181 = *(unsigned char **)(v151 + 16);
                uint64_t v182 = v153;
                v154 = *(unsigned char **)(v151 + 40);
                uint64_t v183 = *(void *)(v151 + 32);
                v184 = v154;
                v155 = *(unsigned char **)(v151 + 56);
                v185 = *(unsigned char **)(v151 + 48);
                v186 = v155;
                v156 = *(unsigned char **)(v151 + 64);
                uint64_t v157 = *(void *)(v151 + 80);
                v177 = *(unsigned char **)(v151 + 72);
                v178 = v156;
                uint64_t v176 = *(void *)(v151 + 88);
                if (v150)
                {
                  uint64_t v192 = v141;
                  uint64_t v193 = v142;
                  uint64_t v194 = v143;
                  uint64_t v195 = v144;
                  uint64_t v196 = v145;
                  v197 = (unsigned char *)v187;
                  uint64_t v198 = v147;
                  v199 = v188;
                  uint64_t v200 = v148;
                  v201 = v189;
                  uint64_t v202 = v150;
                  uint64_t v203 = v190;
                  if (v157)
                  {
                    v191[0] = v179;
                    v191[1] = v180;
                    v191[2] = v181;
                    v191[3] = v182;
                    v191[4] = v183;
                    v191[5] = v184;
                    v191[6] = v185;
                    v191[7] = v186;
                    v191[8] = v178;
                    v191[9] = v177;
                    v191[10] = v157;
                    v191[11] = v176;
                    char v158 = _s9StocksKit12FundMetadataV2eeoiySbAC_ACtFZ_0(&v192, v191);
                    v185 = v197;
                    v186 = v199;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    return (v158 & 1) != 0;
                  }
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else if (!v157)
                {
                  return 1;
                }
                uint64_t v192 = v141;
                uint64_t v193 = v142;
                uint64_t v194 = v143;
                uint64_t v195 = v144;
                uint64_t v196 = v145;
                v197 = (unsigned char *)v187;
                uint64_t v198 = v147;
                v199 = v188;
                uint64_t v200 = v148;
                v201 = v189;
                uint64_t v202 = v150;
                uint64_t v203 = v190;
                v204 = v179;
                v205 = v180;
                v206 = v181;
                uint64_t v207 = v182;
                uint64_t v208 = v183;
                v209 = v184;
                v210 = v185;
                v211 = v186;
                v212 = v178;
                v213 = v177;
                uint64_t v214 = v157;
                uint64_t v215 = v176;
                sub_23BAC0C08((uint64_t)v179, (uint64_t)v180, (uint64_t)v181, v182, v183, (uint64_t)v184, (uint64_t)v185, (uint64_t)v186, (uint64_t)v178, (uint64_t)v177, v157);
                sub_23BAC73EC((uint64_t)&v192);
                return 0;
              }
              uint64_t v132 = (void (*)(uint64_t))MEMORY[0x263F079C8];
              sub_23BAC3B58((uint64_t)v172, &qword_268A75AF8, MEMORY[0x263F079C8]);
              sub_23BAC3B58((uint64_t)v173, &qword_268A75AF8, v132);
              (*(void (**)(unsigned char *, uint64_t))(v171 + 8))(v170, v176);
            }
            sub_23BAC7390((uint64_t)v175, &qword_268A75B50, &qword_268A75AF8, MEMORY[0x263F079C8]);
            return 0;
          }
          int v116 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
          sub_23BAC3B58((uint64_t)v178, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
          sub_23BAC3B58((uint64_t)v179, (unint64_t *)&qword_26ADC9198, v116);
          (*(void (**)(unsigned char *, uint64_t))(v183 + 8))(v177, v187);
        }
        sub_23BAC7390((uint64_t)v180, &qword_268A75730, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
        return 0;
      }
      uint64_t v101 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
      sub_23BAC3B58((uint64_t)v184, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
      sub_23BAC3B58((uint64_t)v185, (unint64_t *)&qword_26ADC9198, v101);
      (*(void (**)(unsigned char *, uint64_t))(v183 + 8))(v181, v187);
    }
    sub_23BAC7390((uint64_t)v186, &qword_268A75730, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    return 0;
  }
  return result;
}

unint64_t sub_23BAC3A4C()
{
  unint64_t result = qword_268A75B08;
  if (!qword_268A75B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75B08);
  }
  return result;
}

unint64_t sub_23BAC3AA0()
{
  unint64_t result = qword_268A75B10;
  if (!qword_268A75B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75B10);
  }
  return result;
}

void sub_23BAC3AF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_23BAC3A4C();
    unint64_t v7 = a3(a1, &type metadata for QuoteDetail.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_23BAC3B58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_23BAC0B40(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_23BAC3BB4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_23BAC0B40(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_23BAC3C20()
{
  unint64_t result = qword_268A75B20;
  if (!qword_268A75B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75B20);
  }
  return result;
}

uint64_t sub_23BAC3C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for QuoteDetail();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAC3CD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for QuoteDetail();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeBufferWithCopyOfBuffer for QuoteDetail(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *((unsigned char *)a2 + 40);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(void *)(a1 + 48) = a2[6];
    uint64_t v7 = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = a2[10];
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    *(void *)(a1 + 96) = a2[12];
    *(unsigned char *)(a1 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *((unsigned char *)a2 + 120);
    *(void *)(a1 + 112) = a2[14];
    *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
    *(void *)(a1 + 128) = a2[16];
    uint64_t v8 = a2[18];
    *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
    *(void *)(a1 + 144) = v8;
    uint64_t v9 = a2[20];
    *(unsigned char *)(a1 + 168) = *((unsigned char *)a2 + 168);
    *(void *)(a1 + 16sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v9;
    uint64_t v10 = a3[15];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_23BAD7350();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      sub_23BAC0B40(0, &qword_268A75758, MEMORY[0x263F07490]);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v18 = a3[16];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    if (v15((char *)a2 + v18, 1, v13))
    {
      sub_23BAC0B40(0, &qword_268A75758, MEMORY[0x263F07490]);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v20, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
    }
    uint64_t v22 = a3[17];
    uint64_t v23 = a3[18];
    uint64_t v24 = (void *)((char *)v4 + v22);
    uint64_t v25 = (uint64_t *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    void *v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = (char *)v4 + v23;
    uint64_t v28 = (char *)a2 + v23;
    uint64_t v29 = sub_23BAD72C0();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain();
    if (v31(v28, 1, v29))
    {
      sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
      memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    uint64_t v33 = a3[19];
    uint64_t v34 = (char *)v4 + v33;
    uint64_t v35 = (char *)a2 + v33;
    if (v31((char *)a2 + v33, 1, v29))
    {
      sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v34, v35, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v34, 0, 1, v29);
    }
    uint64_t v37 = a3[20];
    uint64_t v38 = (char *)v4 + v37;
    uint64_t v39 = (char *)a2 + v37;
    uint64_t v40 = sub_23BAD74D0();
    uint64_t v41 = *(void *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      sub_23BAC0B40(0, &qword_268A75AF8, MEMORY[0x263F079C8]);
      memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    uint64_t v43 = a3[21];
    uint64_t v44 = (void *)((char *)v4 + v43);
    uint64_t v45 = (uint64_t *)((char *)a2 + v43);
    uint64_t v46 = v45[10];
    if (v46)
    {
      uint64_t v47 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v47;
      uint64_t v48 = v45[3];
      v44[2] = v45[2];
      v44[3] = v48;
      uint64_t v49 = v45[5];
      v44[4] = v45[4];
      v44[5] = v49;
      uint64_t v50 = v45[7];
      v44[6] = v45[6];
      v44[7] = v50;
      uint64_t v51 = v45[9];
      v44[8] = v45[8];
      v44[9] = v51;
      uint64_t v52 = v45[11];
      v44[10] = v46;
      v44[11] = v52;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v53 = *((_OWORD *)v45 + 3);
      *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
      *((_OWORD *)v44 + 3) = v53;
      long long v54 = *((_OWORD *)v45 + 5);
      *((_OWORD *)v44 + 4) = *((_OWORD *)v45 + 4);
      *((_OWORD *)v44 + 5) = v54;
      long long v55 = *((_OWORD *)v45 + 1);
      *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v55;
    }
  }
  return v4;
}

uint64_t destroy for QuoteDetail(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[15];
  uint64_t v5 = sub_23BAD7350();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[16];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[18];
  uint64_t v10 = sub_23BAD72C0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v13 = a1 + a2[19];
  if (!v12(v13, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v14 = a1 + a2[20];
  uint64_t v15 = sub_23BAD74D0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  if (*(void *)(a1 + a2[21] + 80))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for QuoteDetail(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v7 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v7;
  uint64_t v8 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 16sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v8;
  uint64_t v9 = a3[15];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_23BAD7350();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    sub_23BAC0B40(0, &qword_268A75758, MEMORY[0x263F07490]);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[16];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    sub_23BAC0B40(0, &qword_268A75758, MEMORY[0x263F07490]);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v17, v18, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[17];
  uint64_t v21 = a3[18];
  uint64_t v22 = (void *)(a1 + v20);
  uint64_t v23 = (void *)(a2 + v20);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (void *)(a1 + v21);
  uint64_t v26 = (const void *)(a2 + v21);
  uint64_t v27 = sub_23BAD72C0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  if (v29(v26, 1, v27))
  {
    sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  uint64_t v31 = a3[19];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  if (v29((const void *)(a2 + v31), 1, v27))
  {
    sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v32, v33, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v32, 0, 1, v27);
  }
  uint64_t v35 = a3[20];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  uint64_t v38 = sub_23BAD74D0();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    sub_23BAC0B40(0, &qword_268A75AF8, MEMORY[0x263F079C8]);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v36, v37, v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  uint64_t v41 = a3[21];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  uint64_t v44 = v43[10];
  if (v44)
  {
    uint64_t v45 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v45;
    uint64_t v46 = v43[3];
    void v42[2] = v43[2];
    v42[3] = v46;
    uint64_t v47 = v43[5];
    v42[4] = v43[4];
    v42[5] = v47;
    uint64_t v48 = v43[7];
    v42[6] = v43[6];
    v42[7] = v48;
    uint64_t v49 = v43[9];
    v42[8] = v43[8];
    v42[9] = v49;
    uint64_t v50 = v43[11];
    v42[10] = v44;
    v42[11] = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v51 = *((_OWORD *)v43 + 3);
    *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
    *((_OWORD *)v42 + 3) = v51;
    long long v52 = *((_OWORD *)v43 + 5);
    *((_OWORD *)v42 + 4) = *((_OWORD *)v43 + 4);
    *((_OWORD *)v42 + 5) = v52;
    long long v53 = *((_OWORD *)v43 + 1);
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v53;
  }
  return a1;
}

uint64_t assignWithCopy for QuoteDetail(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = a2[4];
  *(unsigned char *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v8;
  uint64_t v9 = a2[6];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v9;
  uint64_t v10 = a2[8];
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 64) = v10;
  uint64_t v11 = a2[10];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v11;
  uint64_t v12 = a2[12];
  *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
  *(void *)(a1 + 96) = v12;
  uint64_t v13 = a2[14];
  *(unsigned char *)(a1 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *((unsigned char *)a2 + 120);
  *(void *)(a1 + 112) = v13;
  uint64_t v14 = a2[16];
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  *(void *)(a1 + 128) = v14;
  uint64_t v15 = a2[18];
  *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
  *(void *)(a1 + 144) = v15;
  uint64_t v16 = a2[20];
  *(unsigned char *)(a1 + 168) = *((unsigned char *)a2 + 168);
  *(void *)(a1 + 16sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v16;
  uint64_t v17 = a3[15];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_23BAD7350();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    sub_23BAC0B40(0, &qword_268A75758, MEMORY[0x263F07490]);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  uint64_t v26 = a3[16];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (char *)a2 + v26;
  int v29 = v22((void *)(a1 + v26), 1, v20);
  int v30 = v22(v28, 1, v20);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v27, v28, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v27, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v27, v20);
LABEL_12:
    sub_23BAC0B40(0, &qword_268A75758, MEMORY[0x263F07490]);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v21 + 24))(v27, v28, v20);
LABEL_13:
  uint64_t v32 = a3[17];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)((char *)a2 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[18];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = sub_23BAD72C0();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40(v37, 1, v38);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v39 + 8))(v36, v38);
LABEL_18:
    sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, char *, uint64_t))(v39 + 24))(v36, v37, v38);
LABEL_19:
  uint64_t v44 = a3[19];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (char *)a2 + v44;
  int v47 = v40((void *)(a1 + v44), 1, v38);
  int v48 = v40(v46, 1, v38);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v45, v46, v38);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v45, 0, 1, v38);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v48)
  {
    (*(void (**)(void *, uint64_t))(v39 + 8))(v45, v38);
LABEL_24:
    sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, char *, uint64_t))(v39 + 24))(v45, v46, v38);
LABEL_25:
  uint64_t v50 = a3[20];
  long long v51 = (void *)(a1 + v50);
  long long v52 = (char *)a2 + v50;
  uint64_t v53 = sub_23BAD74D0();
  uint64_t v54 = *(void *)(v53 - 8);
  long long v55 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v54 + 48);
  int v56 = v55(v51, 1, v53);
  int v57 = v55(v52, 1, v53);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(void *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v57)
  {
    (*(void (**)(void *, uint64_t))(v54 + 8))(v51, v53);
LABEL_30:
    sub_23BAC0B40(0, &qword_268A75AF8, MEMORY[0x263F079C8]);
    memcpy(v51, v52, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, char *, uint64_t))(v54 + 24))(v51, v52, v53);
LABEL_31:
  uint64_t v59 = a3[21];
  char v60 = (void *)(a1 + v59);
  char v61 = (uint64_t *)((char *)a2 + v59);
  uint64_t v62 = *(void *)(a1 + v59 + 80);
  uint64_t v63 = *(uint64_t *)((char *)a2 + v59 + 80);
  if (v62)
  {
    if (v63)
    {
      void *v60 = *v61;
      v60[1] = v61[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v60[2] = v61[2];
      v60[3] = v61[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v60[4] = v61[4];
      v60[5] = v61[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v60[6] = v61[6];
      v60[7] = v61[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v60[8] = v61[8];
      v60[9] = v61[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v60[10] = v61[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v60[11] = v61[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23BAC5550((uint64_t)v60);
      long long v64 = *((_OWORD *)v61 + 1);
      *(_OWORD *)char v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v64;
      long long v65 = *((_OWORD *)v61 + 5);
      long long v67 = *((_OWORD *)v61 + 2);
      long long v66 = *((_OWORD *)v61 + 3);
      *((_OWORD *)v60 + 4) = *((_OWORD *)v61 + 4);
      *((_OWORD *)v60 + 5) = v65;
      *((_OWORD *)v60 + 2) = v67;
      *((_OWORD *)v60 + 3) = v66;
    }
  }
  else if (v63)
  {
    void *v60 = *v61;
    v60[1] = v61[1];
    v60[2] = v61[2];
    v60[3] = v61[3];
    v60[4] = v61[4];
    v60[5] = v61[5];
    v60[6] = v61[6];
    v60[7] = v61[7];
    v60[8] = v61[8];
    v60[9] = v61[9];
    v60[10] = v61[10];
    v60[11] = v61[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v68 = *((_OWORD *)v61 + 1);
    *(_OWORD *)char v60 = *(_OWORD *)v61;
    *((_OWORD *)v60 + 1) = v68;
    long long v69 = *((_OWORD *)v61 + 2);
    long long v70 = *((_OWORD *)v61 + 3);
    long long v71 = *((_OWORD *)v61 + 5);
    *((_OWORD *)v60 + 4) = *((_OWORD *)v61 + 4);
    *((_OWORD *)v60 + 5) = v71;
    *((_OWORD *)v60 + 2) = v69;
    *((_OWORD *)v60 + 3) = v70;
  }
  return a1;
}

uint64_t sub_23BAC5550(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for QuoteDetail(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v7 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v7;
  uint64_t v8 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 16sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v8;
  uint64_t v9 = a3[15];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_23BAD7350();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    sub_23BAC0B40(0, &qword_268A75758, MEMORY[0x263F07490]);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[16];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    sub_23BAC0B40(0, &qword_268A75758, MEMORY[0x263F07490]);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v17, v18, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_23BAD72C0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v27 = a3[19];
  uint64_t v28 = (void *)(a1 + v27);
  int v29 = (const void *)(a2 + v27);
  if (v25((const void *)(a2 + v27), 1, v23))
  {
    sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v28, v29, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
  }
  uint64_t v31 = a3[20];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  uint64_t v34 = sub_23BAD74D0();
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    sub_23BAC0B40(0, &qword_268A75AF8, MEMORY[0x263F079C8]);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 32))(v32, v33, v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  uint64_t v37 = a3[21];
  uint64_t v38 = (_OWORD *)(a1 + v37);
  uint64_t v39 = (_OWORD *)(a2 + v37);
  long long v40 = v39[3];
  v38[2] = v39[2];
  v38[3] = v40;
  long long v41 = v39[5];
  v38[4] = v39[4];
  v38[5] = v41;
  long long v42 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v42;
  return a1;
}

uint64_t assignWithTake for QuoteDetail(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v7 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v7;
  uint64_t v8 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 16sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v8;
  uint64_t v9 = a3[15];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_23BAD7350();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    sub_23BAC0B40(0, &qword_268A75758, MEMORY[0x263F07490]);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[16];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  int v21 = v14((void *)(a1 + v18), 1, v12);
  int v22 = v14(v20, 1, v12);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v19, v20, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v19, v12);
LABEL_12:
    sub_23BAC0B40(0, &qword_268A75758, MEMORY[0x263F07490]);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v19, v20, v12);
LABEL_13:
  uint64_t v24 = a3[17];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[18];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  uint64_t v32 = sub_23BAD72C0();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  int v35 = v34(v30, 1, v32);
  int v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
LABEL_18:
    sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v30, v31, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 40))(v30, v31, v32);
LABEL_19:
  uint64_t v38 = a3[19];
  uint64_t v39 = (void *)(a1 + v38);
  long long v40 = (void *)(a2 + v38);
  int v41 = v34((void *)(a1 + v38), 1, v32);
  int v42 = v34(v40, 1, v32);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 32))(v39, v40, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v39, 0, 1, v32);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v39, v32);
LABEL_24:
    sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 40))(v39, v40, v32);
LABEL_25:
  uint64_t v44 = a3[20];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  uint64_t v47 = sub_23BAD74D0();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
  int v50 = v49(v45, 1, v47);
  int v51 = v49(v46, 1, v47);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, void *, uint64_t))(v48 + 32))(v45, v46, v47);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v48 + 8))(v45, v47);
LABEL_30:
    sub_23BAC0B40(0, &qword_268A75AF8, MEMORY[0x263F079C8]);
    memcpy(v45, v46, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v48 + 40))(v45, v46, v47);
LABEL_31:
  uint64_t v53 = a3[21];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  if (!*(void *)(a1 + v53 + 80))
  {
LABEL_35:
    long long v61 = *(_OWORD *)(v55 + 48);
    *(_OWORD *)(v54 + 32) = *(_OWORD *)(v55 + 32);
    *(_OWORD *)(v54 + 48) = v61;
    long long v62 = *(_OWORD *)(v55 + 80);
    *(_OWORD *)(v54 + 64) = *(_OWORD *)(v55 + 64);
    *(_OWORD *)(v54 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v62;
    long long v63 = *(_OWORD *)(v55 + 16);
    *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
    *(_OWORD *)(v54 + 16) = v63;
    return a1;
  }
  if (!*(void *)(v55 + 80))
  {
    sub_23BAC5550(v54);
    goto LABEL_35;
  }
  uint64_t v56 = *(void *)(v55 + 8);
  *(void *)uint64_t v54 = *(void *)v55;
  *(void *)(v54 + 8) = v56;
  swift_bridgeObjectRelease();
  uint64_t v57 = *(void *)(v55 + 24);
  *(void *)(v54 + 16) = *(void *)(v55 + 16);
  *(void *)(v54 + 24) = v57;
  swift_bridgeObjectRelease();
  uint64_t v58 = *(void *)(v55 + 40);
  *(void *)(v54 + 32) = *(void *)(v55 + 32);
  *(void *)(v54 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v58;
  swift_bridgeObjectRelease();
  uint64_t v59 = *(void *)(v55 + 56);
  *(void *)(v54 + 48) = *(void *)(v55 + 48);
  *(void *)(v54 + 56) = v59;
  swift_bridgeObjectRelease();
  uint64_t v60 = *(void *)(v55 + 72);
  *(void *)(v54 + 64) = *(void *)(v55 + 64);
  *(void *)(v54 + 72) = v60;
  swift_bridgeObjectRelease();
  *(void *)(v54 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(void *)(v55 + 80);
  swift_bridgeObjectRelease();
  *(void *)(v54 + 88) = *(void *)(v55 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for QuoteDetail(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23BAC6314);
}

uint64_t sub_23BAC6314(uint64_t a1, uint64_t a2, int *a3)
{
  sub_23BAC0B40(0, &qword_268A75758, MEMORY[0x263F07490]);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[15];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v14(a1 + v9, a2, v7);
  }
  if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + a3[17] + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
    {
      uint64_t v7 = v13;
      uint64_t v8 = *(void *)(v13 - 8);
      uint64_t v9 = a3[18];
      goto LABEL_11;
    }
    sub_23BAC0B40(0, &qword_268A75AF8, MEMORY[0x263F079C8]);
    int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[20];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for QuoteDetail(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23BAC6508);
}

void sub_23BAC6508(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_23BAC0B40(0, &qword_268A75758, MEMORY[0x263F07490]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[15];
LABEL_7:
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v13(a1 + v11, a2, a2, v9);
    return;
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[17] + 8) = a2;
    return;
  }
  sub_23BAC0B40(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[18];
    goto LABEL_7;
  }
  sub_23BAC0B40(0, &qword_268A75AF8, MEMORY[0x263F079C8]);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a4[20];
  v15(v17, a2, a2, v16);
}

void sub_23BAC66DC()
{
  sub_23BAC0B40(319, &qword_268A75758, MEMORY[0x263F07490]);
  if (v0 <= 0x3F)
  {
    sub_23BAC0B40(319, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F)
    {
      sub_23BAC0B40(319, &qword_268A75AF8, MEMORY[0x263F079C8]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for QuoteDetail.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for QuoteDetail.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *uint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BAC69C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuoteDetail.CodingKeys()
{
  return &type metadata for QuoteDetail.CodingKeys;
}

unint64_t sub_23BAC6A00()
{
  unint64_t result = qword_268A75B38;
  if (!qword_268A75B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75B38);
  }
  return result;
}

unint64_t sub_23BAC6A58()
{
  unint64_t result = qword_268A75B40;
  if (!qword_268A75B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75B40);
  }
  return result;
}

unint64_t sub_23BAC6AB0()
{
  unint64_t result = qword_268A75B48;
  if (!qword_268A75B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75B48);
  }
  return result;
}

uint64_t sub_23BAC6B04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x506E65704F796164 && a2 == 0xEC00000065636972;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7250776F4C796164 && a2 == 0xEB00000000656369 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5068676948796164 && a2 == 0xEC00000065636972 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x50776F4C72616579 && a2 == 0xEC00000065636972 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6867694872616579 && a2 == 0xED00006563697250 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x646E656469766964 && a2 == 0xED0000646C656959 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656D756C6F76 && a2 == 0xE600000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x5665676172657661 && a2 == 0xED0000656D756C6FLL || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023BADE650 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1635018082 && a2 == 0xE400000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023BADE670 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023BADE290 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x73676E696E726165 && a2 == 0xEF65746144646E45 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x55736C6961746564 && a2 == 0xEA00000000004C52 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023BADE690 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x695474656B72616DLL && a2 == 0xEE00656E6F5A656DLL || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6174654D646E7566 && a2 == 0xEC00000061746164)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 17;
    }
    else {
      return 18;
    }
  }
}

void sub_23BAC732C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_23BAC0B40(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_23BAC7390(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_23BAC732C(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_23BAC73EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v8 = *(void *)(a1 + 152);
  long long v11 = *(_OWORD *)(a1 + 160);
  uint64_t v9 = *(void *)(a1 + 176);
  sub_23BAC74B0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80));
  sub_23BAC74B0(v12, v2, v3, v4, v5, v6, v7, v8, v11, *((uint64_t *)&v11 + 1), v9);
  return a1;
}

uint64_t sub_23BAC74B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result = a11;
  if (a11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23BAC7550(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t StockChart.Entry.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StockChart.Entry.referenceDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StockChart.Entry(0) + 20);
  uint64_t v4 = sub_23BAD7350();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for StockChart.Entry(uint64_t a1)
{
  return sub_23BA825D8(a1, (uint64_t *)&unk_268A75BE0);
}

uint64_t StockChart.Entry.open.getter()
{
  return sub_23BAC82CC(type metadata accessor for StockChart.Entry);
}

uint64_t StockChart.Entry.close.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StockChart.Entry(0) + 28));
}

uint64_t StockChart.Entry.high.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StockChart.Entry(0) + 32));
}

uint64_t StockChart.Entry.low.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StockChart.Entry(0) + 36));
}

uint64_t StockChart.Entry.volume.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StockChart.Entry(0) + 40));
}

uint64_t sub_23BAC772C()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x636E657265666572;
      break;
    case 2:
      uint64_t result = 1852141679;
      break;
    case 3:
      uint64_t result = 0x65736F6C63;
      break;
    case 4:
      uint64_t result = 1751607656;
      break;
    case 5:
      uint64_t result = 7827308;
      break;
    case 6:
      uint64_t result = 0x656D756C6F76;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23BAC77F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BACAE78(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BAC7818(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_23BAC7824(uint64_t a1)
{
  unint64_t v2 = sub_23BAC8F44();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BAC7860(uint64_t a1)
{
  unint64_t v2 = sub_23BAC8F44();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StockChart.Entry.encode(to:)(void *a1)
{
  sub_23BAC93E8(0, &qword_268A75B60, (uint64_t (*)(void))sub_23BAC8F44, (uint64_t)&type metadata for StockChart.Entry.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAC8F44();
  sub_23BAD89B0();
  char v16 = 0;
  sub_23BAD8830();
  if (!v1)
  {
    type metadata accessor for StockChart.Entry(0);
    char v15 = 1;
    sub_23BAD7350();
    sub_23BAC8F98(&qword_26ADC8238, MEMORY[0x263F07490]);
    sub_23BAD8850();
    char v14 = 2;
    sub_23BAD8800();
    char v13 = 3;
    sub_23BAD8800();
    char v12 = 4;
    sub_23BAD8800();
    char v11 = 5;
    sub_23BAD8800();
    char v10 = 6;
    sub_23BAD8800();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StockChart.Entry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = sub_23BAD7350();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAC93E8(0, &qword_268A75B70, (uint64_t (*)(void))sub_23BAC8F44, (uint64_t)&type metadata for StockChart.Entry.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v37 - v7;
  uint64_t v9 = type metadata accessor for StockChart.Entry(0);
  MEMORY[0x270FA5388](v9);
  char v11 = (uint64_t *)((char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAC8F44();
  uint64_t v43 = v8;
  char v12 = v44;
  sub_23BAD89A0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v13 = v5;
  uint64_t v44 = (int *)v9;
  uint64_t v14 = (uint64_t)a1;
  uint64_t v15 = v39;
  uint64_t v16 = v40;
  char v51 = 0;
  uint64_t v17 = (uint64_t)v11;
  uint64_t *v11 = sub_23BAD8790();
  v11[1] = v18;
  char v50 = 1;
  sub_23BAC8F98(&qword_26ADC7F00, MEMORY[0x263F07490]);
  sub_23BAD87B0();
  uint64_t v19 = v44;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v17 + v44[5], v13, v16);
  char v49 = 2;
  uint64_t v20 = sub_23BAD8760();
  uint64_t v21 = v17 + v19[6];
  *(void *)uint64_t v21 = v20;
  *(unsigned char *)(v21 + 8) = v22 & 1;
  char v48 = 3;
  uint64_t v23 = sub_23BAD8760();
  uint64_t v24 = v17 + v19[7];
  *(void *)uint64_t v24 = v23;
  *(unsigned char *)(v24 + 8) = v25 & 1;
  char v47 = 4;
  uint64_t v26 = sub_23BAD8760();
  uint64_t v27 = v17 + v19[8];
  *(void *)uint64_t v27 = v26;
  *(unsigned char *)(v27 + 8) = v28 & 1;
  char v46 = 5;
  uint64_t v29 = sub_23BAD8760();
  uint64_t v30 = v17 + v19[9];
  *(void *)uint64_t v30 = v29;
  *(unsigned char *)(v30 + 8) = v31 & 1;
  char v45 = 6;
  uint64_t v32 = sub_23BAD8760();
  char v34 = v33;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v42);
  uint64_t v35 = v17 + v19[10];
  *(void *)uint64_t v35 = v32;
  *(unsigned char *)(v35 + 8) = v34 & 1;
  sub_23BAC9000(v17, v38, type metadata accessor for StockChart.Entry);
  __swift_destroy_boxed_opaque_existential_1(v14);
  return sub_23BAC94E0(v17, type metadata accessor for StockChart.Entry);
}

uint64_t sub_23BAC80A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StockChart.Entry.init(from:)(a1, a2);
}

uint64_t sub_23BAC80BC(void *a1)
{
  return StockChart.Entry.encode(to:)(a1);
}

uint64_t StockChart.Feature.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_23BAD8720();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t StockChart.Feature.rawValue.getter()
{
  return 0x656D756C6F76;
}

uint64_t sub_23BAC8144()
{
  return sub_23BAD8980();
}

uint64_t sub_23BAC8194()
{
  return sub_23BAD8270();
}

uint64_t sub_23BAC81A8()
{
  return sub_23BAD8980();
}

uint64_t sub_23BAC81F4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_23BAD8720();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_23BAC8248(void *a1@<X8>)
{
  *a1 = 0x656D756C6F76;
  a1[1] = 0xE600000000000000;
}

uint64_t StockChart.entries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StockChart.dateRange.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StockChart(0);
  return sub_23BAC9000(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))sub_23BA6B024);
}

uint64_t StockChart.previousClose.getter()
{
  return sub_23BAC82CC(type metadata accessor for StockChart);
}

uint64_t sub_23BAC82CC(uint64_t (*a1)(void))
{
  return *(void *)(v1 + *(int *)(a1(0) + 24));
}

uint64_t StockChart.marketTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StockChart(0) + 28);
  uint64_t v4 = sub_23BAD74D0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

void *StockChart.features.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v3 = v2 - 1;
  uint64_t v4 = type metadata accessor for StockChart.Entry(0);
  unint64_t v5 = v1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80))
     + *(void *)(*(void *)(v4 - 8) + 72) * v3
     + *(int *)(v4 + 40);
  if ((*(unsigned char *)(v5 + 8) & 1) != 0 || *(double *)v5 <= 0.0) {
    return (void *)MEMORY[0x263F8EE78];
  }
  else {
    return &unk_26EF00218;
  }
}

uint64_t sub_23BAC8434()
{
  uint64_t result = 0x73656972746E65;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E615265746164;
      break;
    case 2:
      uint64_t result = 0x73756F6976657270;
      break;
    case 3:
      uint64_t result = 0x695474656B72616DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23BAC84E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BACB12C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BAC8508(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23BAC8514(uint64_t a1)
{
  unint64_t v2 = sub_23BAC92AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BAC8550(uint64_t a1)
{
  unint64_t v2 = sub_23BAC92AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StockChart.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_23BAC93E8(0, &qword_268A75B78, (uint64_t (*)(void))sub_23BAC92AC, (uint64_t)&type metadata for StockChart.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAC92AC();
  sub_23BAD89B0();
  uint64_t v12 = *v3;
  v11[15] = 0;
  sub_23BAC9300();
  sub_23BAC9450(&qword_268A75B90, &qword_268A75B98);
  sub_23BAD8850();
  if (!v2)
  {
    type metadata accessor for StockChart(0);
    v11[14] = 1;
    sub_23BA6B024();
    sub_23BAC9358(&qword_268A75BA0, &qword_26ADC8238);
    sub_23BAD8850();
    v11[13] = 2;
    sub_23BAD8800();
    v11[12] = 3;
    sub_23BAD74D0();
    sub_23BAC8F98(&qword_268A75780, MEMORY[0x263F079C8]);
    sub_23BAD8850();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t StockChart.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v25 = sub_23BAD74D0();
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v24 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA6B024();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAC93E8(0, &qword_268A75BA8, (uint64_t (*)(void))sub_23BAC92AC, (uint64_t)&type metadata for StockChart.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = (int *)type metadata accessor for StockChart(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_23BAC92AC();
  char v28 = v9;
  uint64_t v14 = v30;
  sub_23BAD89A0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  uint64_t v15 = v26;
  sub_23BAC9300();
  char v34 = 0;
  sub_23BAC9450(&qword_268A75BB0, &qword_268A75BB8);
  sub_23BAD87B0();
  *(void *)uint64_t v12 = v35;
  char v33 = 1;
  sub_23BAC9358(&qword_268A75BC0, &qword_26ADC7F00);
  sub_23BAD87B0();
  sub_23BAC9540((uint64_t)v6, (uint64_t)&v12[v10[5]]);
  char v32 = 2;
  uint64_t v16 = sub_23BAD8760();
  uint64_t v17 = &v12[v10[6]];
  *(void *)uint64_t v17 = v16;
  v17[8] = v18 & 1;
  char v31 = 3;
  sub_23BAC8F98(&qword_268A757A0, MEMORY[0x263F079C8]);
  uint64_t v20 = v24;
  uint64_t v19 = v25;
  sub_23BAD87B0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v28, v27);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v12[v10[7]], v20, v19);
  sub_23BAC9000((uint64_t)v12, v23, type metadata accessor for StockChart);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return sub_23BAC94E0((uint64_t)v12, type metadata accessor for StockChart);
}

uint64_t sub_23BAC8D8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StockChart.init(from:)(a1, a2);
}

uint64_t sub_23BAC8DA4(void *a1)
{
  return StockChart.encode(to:)(a1);
}

BOOL _s9StocksKit10StockChartV5EntryV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_23BAD88A0(), BOOL result = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = (int *)type metadata accessor for StockChart.Entry(0);
    if (sub_23BAD7310())
    {
      uint64_t v8 = v7[6];
      uint64_t v9 = (double *)((char *)a1 + v8);
      char v10 = *((unsigned char *)a1 + v8 + 8);
      uint64_t v11 = (double *)((char *)a2 + v8);
      int v12 = *((unsigned __int8 *)a2 + v8 + 8);
      if (v10)
      {
        if (!v12) {
          return 0;
        }
      }
      else
      {
        if (*v9 != *v11) {
          LOBYTE(v12) = 1;
        }
        if (v12) {
          return 0;
        }
      }
      uint64_t v13 = v7[7];
      uint64_t v14 = (double *)((char *)a1 + v13);
      char v15 = *((unsigned char *)a1 + v13 + 8);
      uint64_t v16 = (double *)((char *)a2 + v13);
      int v17 = *((unsigned __int8 *)a2 + v13 + 8);
      if (v15)
      {
        if (!v17) {
          return 0;
        }
      }
      else
      {
        if (*v14 != *v16) {
          LOBYTE(v17) = 1;
        }
        if (v17) {
          return 0;
        }
      }
      uint64_t v18 = v7[8];
      uint64_t v19 = (double *)((char *)a1 + v18);
      char v20 = *((unsigned char *)a1 + v18 + 8);
      uint64_t v21 = (double *)((char *)a2 + v18);
      int v22 = *((unsigned __int8 *)a2 + v18 + 8);
      if (v20)
      {
        if (!v22) {
          return 0;
        }
      }
      else
      {
        if (*v19 != *v21) {
          LOBYTE(v22) = 1;
        }
        if (v22) {
          return 0;
        }
      }
      uint64_t v23 = v7[9];
      uint64_t v24 = (double *)((char *)a1 + v23);
      char v25 = *((unsigned char *)a1 + v23 + 8);
      uint64_t v26 = (double *)((char *)a2 + v23);
      int v27 = *((unsigned __int8 *)a2 + v23 + 8);
      if (v25)
      {
        if (!v27) {
          return 0;
        }
      }
      else
      {
        if (*v24 != *v26) {
          LOBYTE(v27) = 1;
        }
        if (v27) {
          return 0;
        }
      }
      uint64_t v28 = v7[10];
      uint64_t v29 = (double *)((char *)a1 + v28);
      char v30 = *((unsigned char *)a1 + v28 + 8);
      char v31 = (double *)((char *)a2 + v28);
      char v32 = *((unsigned char *)a2 + v28 + 8);
      if ((v30 & 1) == 0)
      {
        if (*v29 != *v31) {
          char v32 = 1;
        }
        return (v32 & 1) == 0;
      }
      if (v32) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_23BAC8F44()
{
  unint64_t result = qword_268A75B68;
  if (!qword_268A75B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75B68);
  }
  return result;
}

uint64_t sub_23BAC8F98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for StockChart(uint64_t a1)
{
  return sub_23BA825D8(a1, (uint64_t *)&unk_268A75BD0);
}

uint64_t sub_23BAC9000(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s9StocksKit10StockChartV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  sub_23BA6B024();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v24 - v8;
  if (sub_23BACE04C(*a1, *a2))
  {
    uint64_t v25 = type metadata accessor for StockChart(0);
    uint64_t v10 = *(int *)(v25 + 20);
    uint64_t v11 = (uint64_t)a1 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    sub_23BAD7350();
    uint64_t v24 = a1;
    sub_23BAC8F98(&qword_268A757F0, MEMORY[0x263F07490]);
    char v13 = sub_23BAD8220();
    sub_23BAC9000(v11, (uint64_t)v9, (uint64_t (*)(void))sub_23BA6B024);
    sub_23BAC9000(v12, (uint64_t)v7, (uint64_t (*)(void))sub_23BA6B024);
    if (v13)
    {
      uint64_t v14 = v24;
      uint64_t v15 = v25;
      char v16 = sub_23BAD8220();
      sub_23BAC94E0((uint64_t)v7, (uint64_t (*)(void))sub_23BA6B024);
      sub_23BAC94E0((uint64_t)v9, (uint64_t (*)(void))sub_23BA6B024);
      if (v16)
      {
        uint64_t v17 = *(int *)(v15 + 24);
        uint64_t v18 = (double *)((char *)v14 + v17);
        char v19 = *((unsigned char *)v14 + v17 + 8);
        char v20 = (double *)((char *)a2 + v17);
        int v21 = *((unsigned __int8 *)a2 + v17 + 8);
        if (v19)
        {
          if (v21)
          {
LABEL_13:
            char v22 = MEMORY[0x23ECCB9F0]((char *)v14 + *(int *)(v15 + 28), (char *)a2 + *(int *)(v15 + 28));
            return v22 & 1;
          }
        }
        else
        {
          if (*v18 != *v20) {
            LOBYTE(v21) = 1;
          }
          if ((v21 & 1) == 0) {
            goto LABEL_13;
          }
        }
      }
    }
    else
    {
      sub_23BAC94E0((uint64_t)v7, (uint64_t (*)(void))sub_23BA6B024);
      sub_23BAC94E0((uint64_t)v9, (uint64_t (*)(void))sub_23BA6B024);
    }
  }
  char v22 = 0;
  return v22 & 1;
}

unint64_t sub_23BAC92AC()
{
  unint64_t result = qword_268A75B80;
  if (!qword_268A75B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75B80);
  }
  return result;
}

void sub_23BAC9300()
{
  if (!qword_268A75B88)
  {
    type metadata accessor for StockChart.Entry(255);
    unint64_t v0 = sub_23BAD8330();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268A75B88);
    }
  }
}

uint64_t sub_23BAC9358(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23BA6B024();
    sub_23BAC8F98(a2, MEMORY[0x263F07490]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_23BAC93E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_23BAC9450(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23BAC9300();
    sub_23BAC8F98(a2, (void (*)(uint64_t))type metadata accessor for StockChart.Entry);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BAC94E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23BAC9540(uint64_t a1, uint64_t a2)
{
  sub_23BA6B024();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23BAC95A8()
{
  unint64_t result = qword_268A75BC8;
  if (!qword_268A75BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75BC8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StockChart(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_23BAD7350();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    sub_23BA6B024();
    v12(&v9[*(int *)(v13 + 36)], &v10[*(int *)(v13 + 36)], v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    char v16 = (char *)v7 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(void *)char v16 = *(void *)v17;
    v16[8] = v17[8];
    uint64_t v18 = (char *)v7 + v15;
    char v19 = (char *)a2 + v15;
    uint64_t v20 = sub_23BAD74D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return v7;
}

uint64_t destroy for StockChart(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_23BAD7350();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  sub_23BA6B024();
  v6(v4 + *(int *)(v7 + 36), v5);
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_23BAD74D0();
  unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

void *initializeWithCopy for StockChart(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_23BAD7350();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  sub_23BA6B024();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  char v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  uint64_t v18 = sub_23BAD74D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

void *assignWithCopy for StockChart(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_23BAD7350();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  sub_23BA6B024();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  char v15 = v14[8];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_23BAD74D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

void *initializeWithTake for StockChart(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_23BAD7350();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  sub_23BA6B024();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  char v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  uint64_t v18 = sub_23BAD74D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

void *assignWithTake for StockChart(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_23BAD7350();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  sub_23BA6B024();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  char v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  uint64_t v18 = sub_23BAD74D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockChart(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23BAC9D10);
}

uint64_t sub_23BAC9D10(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_23BA6B024();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_23BAD74D0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for StockChart(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23BAC9E50);
}

void *sub_23BAC9E50(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    sub_23BA6B024();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_23BAD74D0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_23BAC9F7C()
{
  sub_23BA6B024();
  if (v0 <= 0x3F)
  {
    sub_23BAD74D0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for StockChart.Entry(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_23BAD7350();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v4 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = (char *)v4 + v14;
    uint64_t v18 = (char *)a2 + v14;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    int v21 = (char *)v4 + v19;
    char v22 = (char *)a2 + v19;
    *(void *)int v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = (char *)v4 + v20;
    uint64_t v24 = (char *)a2 + v20;
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    uint64_t v25 = a3[10];
    uint64_t v26 = (char *)v4 + v25;
    int v27 = (char *)a2 + v25;
    uint64_t v28 = *(void *)v27;
    v26[8] = v27[8];
    *(void *)uint64_t v26 = v28;
  }
  return v4;
}

uint64_t destroy for StockChart.Entry(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_23BAD7350();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for StockChart.Entry(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_23BAD7350();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v18;
  int v21 = (char *)a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  char v22 = (char *)a1 + v19;
  uint64_t v23 = (char *)a2 + v19;
  *(void *)char v22 = *(void *)v23;
  v22[8] = v23[8];
  uint64_t v24 = a3[10];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)v26;
  v25[8] = v26[8];
  *(void *)uint64_t v25 = v27;
  return a1;
}

void *assignWithCopy for StockChart.Entry(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_23BAD7350();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char v17 = v16[8];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  char v21 = v20[8];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  char v25 = v24[8];
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v25;
  uint64_t v26 = a3[10];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  char v29 = v28[8];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v29;
  return a1;
}

_OWORD *initializeWithTake for StockChart.Entry(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_23BAD7350();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  char v13 = (char *)a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = (char *)a1 + v11;
  uint64_t v15 = (char *)a2 + v11;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = (char *)a1 + v17;
  char v21 = (char *)a2 + v17;
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = a3[10];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)v24;
  v23[8] = v24[8];
  *(void *)uint64_t v23 = v25;
  return a1;
}

void *assignWithTake for StockChart.Entry(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_23BAD7350();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  char v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(void *)char v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = (char *)a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  char v21 = (char *)a1 + v18;
  uint64_t v22 = (char *)a2 + v18;
  *(void *)char v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = a3[10];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)v25;
  v24[8] = v25[8];
  *(void *)uint64_t v24 = v26;
  return a1;
}

uint64_t getEnumTagSinglePayload for StockChart.Entry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23BACA6E8);
}

uint64_t sub_23BACA6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_23BAD7350();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for StockChart.Entry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23BACA7AC);
}

uint64_t sub_23BACA7AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_23BAD7350();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_23BACA854()
{
  uint64_t result = sub_23BAD7350();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StockChart.Feature(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x23BACA998);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockChart.Feature()
{
  return &type metadata for StockChart.Feature;
}

uint64_t getEnumTagSinglePayload for StockChart.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StockChart.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BACAB2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockChart.CodingKeys()
{
  return &type metadata for StockChart.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for StockChart.Entry.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BACAC30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockChart.Entry.CodingKeys()
{
  return &type metadata for StockChart.Entry.CodingKeys;
}

unint64_t sub_23BACAC6C()
{
  unint64_t result = qword_268A75BF0;
  if (!qword_268A75BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75BF0);
  }
  return result;
}

unint64_t sub_23BACACC4()
{
  unint64_t result = qword_268A75BF8;
  if (!qword_268A75BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75BF8);
  }
  return result;
}

unint64_t sub_23BACAD1C()
{
  unint64_t result = qword_268A75C00;
  if (!qword_268A75C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75C00);
  }
  return result;
}

unint64_t sub_23BACAD74()
{
  unint64_t result = qword_268A75C08;
  if (!qword_268A75C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75C08);
  }
  return result;
}

unint64_t sub_23BACADCC()
{
  unint64_t result = qword_268A75C10;
  if (!qword_268A75C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75C10);
  }
  return result;
}

unint64_t sub_23BACAE24()
{
  unint64_t result = qword_268A75C18;
  if (!qword_268A75C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75C18);
  }
  return result;
}

uint64_t sub_23BACAE78(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xED00006574614465 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1852141679 && a2 == 0xE400000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65736F6C63 && a2 == 0xE500000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1751607656 && a2 == 0xE400000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 7827308 && a2 == 0xE300000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656D756C6F76 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_23BACB12C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656972746E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E615265746164 && a2 == 0xE900000000000065 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73756F6976657270 && a2 == 0xED000065736F6C43 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x695474656B72616DLL && a2 == 0xEE00656E6F5A656DLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_23BACB33C()
{
  uint64_t v1 = sub_23BAD7770();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  char v45 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v40 - v5;
  sub_23BACBB68();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v44 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_23BAD7500();
  uint64_t v46 = *(void *)(v49 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v49);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v43 = (char *)&v40 - v12;
  uint64_t v13 = sub_23BAD7510();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAD7CA0();
  sub_23BACBBC0();
  uint64_t v47 = v0;
  sub_23BAD7CE0();
  swift_release();
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (v17 == *MEMORY[0x263F7A800])
  {
    id v18 = objc_msgSend(self, sel_mainBundle);
    id v19 = objc_msgSend(v18, sel_bundleIdentifier);

    if (v19)
    {
      uint64_t v20 = sub_23BAD8240();
      uint64_t v48 = v21;

      __swift_project_boxed_opaque_existential_1((void *)(v47 + 80), *(void *)(v47 + 104));
      sub_23BAD79B0();
      uint64_t v22 = sub_23BAD7750();
      uint64_t v42 = v2;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v1);
      uint64_t v23 = *(void *)(v22 + 16);
      if (v23)
      {
        uint64_t v40 = v22;
        uint64_t v41 = v1;
        uint64_t v24 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 16);
        unint64_t v25 = v22 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
        uint64_t v26 = (void (**)(char *, uint64_t))(v46 + 8);
        uint64_t v27 = *(void *)(v46 + 72);
        swift_bridgeObjectRetain();
        uint64_t v28 = v49;
        while (1)
        {
          v24(v11, v25, v28);
          if (sub_23BAD74E0() == v20 && v29 == v48)
          {
            swift_bridgeObjectRelease();
            uint64_t v2 = v42;
            goto LABEL_18;
          }
          char v30 = sub_23BAD88A0();
          swift_bridgeObjectRelease();
          if (v30) {
            break;
          }
          uint64_t v28 = v49;
          (*v26)(v11, v49);
          v25 += v27;
          if (!--v23)
          {
            swift_bridgeObjectRelease();
            uint64_t v31 = 1;
            uint64_t v1 = v41;
            uint64_t v2 = v42;
            goto LABEL_15;
          }
        }
        uint64_t v2 = v42;
        uint64_t v28 = v49;
LABEL_18:
        swift_bridgeObjectRelease();
        uint64_t v33 = v46;
        uint64_t v34 = (uint64_t)v44;
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v44, v11, v28);
        uint64_t v31 = 0;
        uint64_t v1 = v41;
      }
      else
      {
        uint64_t v31 = 1;
        uint64_t v2 = v42;
        uint64_t v28 = v49;
LABEL_15:
        uint64_t v33 = v46;
        uint64_t v34 = (uint64_t)v44;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v34, v31, 1, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v34, 1, v28) != 1)
      {
        uint64_t v38 = v43;
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v43, v34, v28);
        unsigned __int8 v32 = sub_23BAD74F0();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v38, v28);
        return v32 & 1;
      }
      sub_23BACBC14(v34);
    }
    uint64_t v35 = self;
    __swift_project_boxed_opaque_existential_1((void *)(v47 + 80), *(void *)(v47 + 104));
    int v36 = v45;
    sub_23BAD79B0();
    uint64_t v37 = sub_23BAD7760();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v36, v1);
    unsigned __int8 v32 = objc_msgSend(v35, sel_enabledForCurrentLevel_, v37);
    return v32 & 1;
  }
  if (v17 == *MEMORY[0x263F7A808])
  {
    unsigned __int8 v32 = 1;
    return v32 & 1;
  }
  if (v17 == *MEMORY[0x263F7A810])
  {
    unsigned __int8 v32 = 0;
    return v32 & 1;
  }
  uint64_t result = sub_23BAD8890();
  __break(1u);
  return result;
}

uint64_t sub_23BACB958(uint64_t a1)
{
  *(unsigned char *)(v1 + 72) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 22) = 0;
  sub_23BA6E140(a1, v1 + 80);
  sub_23BA6E140(a1, (uint64_t)&v6);
  uint64_t v3 = sub_23BAD7A10();
  swift_allocObject();
  uint64_t v4 = sub_23BAD7A00();
  uint64_t v7 = v3;
  uint64_t v8 = MEMORY[0x263F7AE90];
  *(void *)&long long v6 = v4;
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_23BA6E620(&v6, v1 + 32);
  return v1;
}

uint64_t sub_23BACB9F8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeatureAvailability()
{
  return self;
}

uint64_t sub_23BACBA5C()
{
  return sub_23BACB33C() & 1;
}

uint64_t sub_23BACBA84@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA6E140(*v1 + 32, a1);
}

uint64_t sub_23BACBAA8()
{
  return sub_23BAD7CE0();
}

uint64_t sub_23BACBAD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x270F7A888](a1, a2, *v6, a6);
}

uint64_t sub_23BACBB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return MEMORY[0x270F7A898](a1, a2, a3, *v7, a7);
}

uint64_t sub_23BACBB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x270F7A880](a1, a2, a3, a4, *v8, a8);
}

void sub_23BACBB68()
{
  if (!qword_268A75C20)
  {
    sub_23BAD7500();
    unint64_t v0 = sub_23BAD84E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268A75C20);
    }
  }
}

unint64_t sub_23BACBBC0()
{
  unint64_t result = qword_268A75C28;
  if (!qword_268A75C28)
  {
    type metadata accessor for FeatureAvailability();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75C28);
  }
  return result;
}

uint64_t sub_23BACBC14(uint64_t a1)
{
  sub_23BACBB68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *InProcessStockService.__allocating_init(appConfigurationManager:attributionAssetManager:currencyManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = (void *)swift_allocObject();
  sub_23BA6E3EC();
  swift_allocObject();
  uint64_t v7 = sub_23BAD8000();
  sub_23BA6E574();
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 24) = 0;
  *(void *)(v8 + 16) = v7;
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = v8;
  return v6;
}

void *InProcessStockService.init(appConfigurationManager:attributionAssetManager:currencyManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_23BA6E3EC();
  swift_allocObject();
  uint64_t v8 = sub_23BAD8000();
  sub_23BA6E574();
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 24) = 0;
  *(void *)(v9 + 16) = v8;
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = v9;
  return v4;
}

uint64_t sub_23BACBD90@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 40);
  if (qword_26ADC81D0 != -1) {
    swift_once();
  }
  sub_23BAD8B00();
  sub_23BA91370((uint64_t)v10, (uint64_t)v11);
  a1[3] = &type metadata for LazyURLSession;
  unint64_t v4 = sub_23BACDF28();
  a1[4] = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = (void *)(v3 + 16);
  long long v6 = (os_unfair_lock_s *)(v3 + 24);
  os_unfair_lock_lock(v6);
  sub_23BACDF7C(v5, v10);
  os_unfair_lock_unlock(v6);
  *a1 = v10[0];
  uint64_t v7 = *MEMORY[0x263F7CDA8];
  uint64_t v8 = sub_23BAD7D90();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(a1, v7, v8);
}

uint64_t InProcessStockService.fetch(_:for:)(uint64_t a1, uint64_t a2, void *a3)
{
  v4[8] = a2;
  v4[9] = v3;
  v4[7] = a1;
  uint64_t v6 = sub_23BAD7D90();
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  type metadata accessor for DataSource.Logo(0);
  v4[13] = swift_task_alloc();
  uint64_t v7 = sub_23BAD78E0();
  v4[14] = v7;
  v4[15] = *(void *)(v7 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v8 = sub_23BAD7970();
  v4[17] = v8;
  v4[18] = *(void *)(v8 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = *a3;
  return MEMORY[0x270FA2498](sub_23BACC098, 0, 0);
}

uint64_t sub_23BACC098()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v4 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v13 = (void *)v0[12];
  uint64_t v5 = v0[8];
  sub_23BAD7EF0();
  uint64_t v6 = v0[5];
  uint64_t v14 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v6);
  sub_23BACC550(v5, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v1, v4, v3);
  sub_23BACBD90(v13);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[22] = v7;
  void *v7 = v0;
  v7[1] = sub_23BACC1D8;
  v8.n128_u64[0] = v0[21];
  uint64_t v9 = v0[20];
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[12];
  return MEMORY[0x270F78A88](v9, v10, v11, v6, v14, v8);
}

uint64_t sub_23BACC1D8()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 128);
  uint64_t v3 = *(void *)(*(void *)v1 + 120);
  uint64_t v4 = *(void *)(*(void *)v1 + 112);
  uint64_t v5 = *(void *)(*(void *)v1 + 96);
  uint64_t v6 = *(void *)(*(void *)v1 + 88);
  uint64_t v7 = *(void *)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    __n128 v8 = sub_23BACC4A8;
  }
  else {
    __n128 v8 = sub_23BACC3AC;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_23BACC3AC()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v5 = (uint64_t *)v0[7];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  sub_23BA8C9F0(v1, v5);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_23BACC4A8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23BACC550(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DataSource.Logo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t InProcessStockService.fetchCurrencyConversions(cachePolicy:deadline:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 88) = a1;
  *(void *)(v3 + 96) = v2;
  sub_23BAD7880();
  *(void *)(v3 + 104) = swift_task_alloc();
  *(void *)(v3 + 112) = type metadata accessor for CurrencyConversionsResult();
  *(void *)(v3 + 12sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = swift_task_alloc();
  uint64_t v5 = sub_23BAD7D90();
  *(void *)(v3 + 128) = v5;
  *(void *)(v3 + 136) = *(void *)(v5 - 8);
  *(void *)(v3 + 144) = swift_task_alloc();
  uint64_t v6 = sub_23BAD77D0();
  *(void *)(v3 + 152) = v6;
  *(void *)(v3 + 16sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(void *)(v6 - 8);
  *(void *)(v3 + 168) = swift_task_alloc();
  *(void *)(v3 + 176) = swift_task_alloc();
  *(void *)(v3 + 184) = swift_task_alloc();
  *(void *)(v3 + 192) = swift_task_alloc();
  *(void *)(v3 + 20sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = swift_task_alloc();
  uint64_t v7 = sub_23BAD7350();
  *(void *)(v3 + 208) = v7;
  *(void *)(v3 + 216) = *(void *)(v7 - 8);
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  uint64_t v8 = sub_23BAD7D70();
  *(void *)(v3 + 24sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v8;
  *(void *)(v3 + 248) = *(void *)(v8 - 8);
  *(void *)(v3 + 256) = swift_task_alloc();
  uint64_t v9 = sub_23BAD7770();
  *(void *)(v3 + 264) = v9;
  *(void *)(v3 + 272) = *(void *)(v9 - 8);
  *(void *)(v3 + 28sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = swift_task_alloc();
  *(_OWORD *)(v3 + 288) = *(_OWORD *)a2;
  *(unsigned char *)(v3 + 352) = *(unsigned char *)(a2 + 16);
  return MEMORY[0x270FA2498](sub_23BACC898, 0, 0);
}

uint64_t sub_23BACC898()
{
  uint64_t v31 = v0;
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_23BAD8090();
  *(void *)(v0 + 304) = __swift_project_value_buffer(v1, (uint64_t)qword_26ADCC840);
  uint64_t v2 = sub_23BAD8070();
  os_log_type_t v3 = sub_23BAD8470();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = *(unsigned char *)(v0 + 352);
    uint64_t v5 = *(void *)(v0 + 288);
    uint64_t v6 = *(void *)(v0 + 296);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v28 = v8;
    *(void *)&long long v29 = v5;
    *((void *)&v29 + 1) = v6;
    char v30 = v4;
    uint64_t v9 = StockService.CachePolicy.description.getter();
    *(void *)(v0 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = sub_23BA7E794(v9, v10, &v28);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23BA68000, v2, v3, "Currencies fetch started, cachePolicy: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v8, -1, -1);
    MEMORY[0x23ECCD620](v7, -1, -1);
  }

  sub_23BAD83F0();
  int v11 = *(unsigned __int8 *)(v0 + 352);
  if (v11 == 2)
  {
    if (!*(void *)(v0 + 296) && *(void *)(v0 + 288) == 1)
    {
      long long v12 = xmmword_23BAD93B0;
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v0 + 352))
  {
    long long v12 = *(_OWORD *)(v0 + 288);
LABEL_11:
    uint64_t v13 = *(double **)(v0 + 256);
    long long v29 = v12;
    char v30 = v11;
    sub_23BA6F584(4u, 0, v13);
    sub_23BAD7320();
    uint64_t v14 = sub_23BAD8070();
    os_log_type_t v15 = sub_23BAD8470();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_23BA68000, v14, v15, "Firing currencies fetch", v16, 2u);
      MEMORY[0x23ECCD620](v16, -1, -1);
    }

    sub_23BAD83F0();
    id v19 = *(void **)(v0 + 144);
    sub_23BAD7EF0();
    uint64_t v20 = *(void *)(v0 + 40);
    uint64_t v21 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v20);
    sub_23BACBD90(v19);
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_23BACD178;
    uint64_t v23 = *(void *)(v0 + 256);
    uint64_t v24 = *(void *)(v0 + 232);
    uint64_t v25 = *(void *)(v0 + 200);
    uint64_t v26 = *(void *)(v0 + 144);
    return MEMORY[0x270F785D8](v25, v23, v24, v26, v20, v21);
  }
  *(void *)(v0 + 312) = sub_23BAD7FE0();
  int v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 32sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v17;
  void *v17 = v0;
  v17[1] = sub_23BACCD88;
  uint64_t v18 = *(void *)(v0 + 280);
  return MEMORY[0x270F7A5E8](v18);
}

uint64_t sub_23BACCD88()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_23BACD88C;
  }
  else
  {
    (*(void (**)(void, void))(v2[34] + 8))(v2[35], v2[33]);
    swift_release();
    os_log_type_t v3 = sub_23BACCEC0;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_23BACCEC0()
{
  uint64_t v1 = *(void *)(v0 + 328);
  sub_23BA6F584(4u, 0, *(double **)(v0 + 256));
  sub_23BAD7320();
  uint64_t v2 = sub_23BAD8070();
  os_log_type_t v3 = sub_23BAD8470();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v4 = 0;
    _os_log_impl(&dword_23BA68000, v2, v3, "Firing currencies fetch", v4, 2u);
    MEMORY[0x23ECCD620](v4, -1, -1);
  }

  sub_23BAD83F0();
  if (v1)
  {
    uint64_t v6 = *(void *)(v0 + 248);
    uint64_t v5 = *(void *)(v0 + 256);
    uint64_t v7 = *(void *)(v0 + 240);
    (*(void (**)(void, void))(*(void *)(v0 + 216) + 8))(*(void *)(v0 + 232), *(void *)(v0 + 208));
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  else
  {
    unint64_t v10 = *(void **)(v0 + 144);
    sub_23BAD7EF0();
    uint64_t v11 = *(void *)(v0 + 40);
    uint64_t v12 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v11);
    sub_23BACBD90(v10);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_23BACD178;
    uint64_t v14 = *(void *)(v0 + 256);
    uint64_t v15 = *(void *)(v0 + 232);
    uint64_t v16 = *(void *)(v0 + 200);
    uint64_t v17 = *(void *)(v0 + 144);
    return MEMORY[0x270F785D8](v16, v14, v15, v17, v11, v12);
  }
}

uint64_t sub_23BACD178()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 344) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[17] + 8))(v2[18], v2[16]);
  if (v0) {
    os_log_type_t v3 = sub_23BACD99C;
  }
  else {
    os_log_type_t v3 = sub_23BACD2E0;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_23BACD2E0()
{
  uint64_t v59 = v0;
  uint64_t v2 = v0[24];
  uint64_t v1 = v0[25];
  uint64_t v4 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[20];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(v2, v1, v5);
  v7(v3, v1, v5);
  uint64_t v57 = (void (*)(uint64_t))v7;
  v7(v4, v1, v5);
  uint64_t v8 = sub_23BAD8070();
  os_log_type_t v9 = sub_23BAD8470();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = v0[27];
    uint64_t v11 = v0[28];
    uint64_t v12 = v0[26];
    uint64_t v13 = v0[24];
    uint64_t v50 = v0[23];
    uint64_t v51 = v0[22];
    uint64_t v54 = v0[20];
    uint64_t v55 = v0[19];
    uint64_t v14 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    uint64_t v58 = v53;
    *(_DWORD *)uint64_t v14 = 136315650;
    os_log_type_t type = v9;
    sub_23BAD77C0();
    sub_23BACDE80();
    uint64_t v15 = sub_23BAD8870();
    unint64_t v17 = v16;
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v47(v11, v12);
    v0[7] = sub_23BA7E794(v15, v17, &v58);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
    v18(v13, v55);
    *(_WORD *)(v14 + 12) = 2080;
    sub_23BAD77B0();
    uint64_t v19 = sub_23BAD8870();
    unint64_t v21 = v20;
    v47(v11, v12);
    v0[8] = sub_23BA7E794(v19, v21, &v58);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    uint64_t v22 = v55;
    v18(v50, v55);
    *(_WORD *)(v14 + 22) = 2080;
    uint64_t v23 = sub_23BAD7790();
    uint64_t v24 = sub_23BAD7830();
    uint64_t v25 = MEMORY[0x23ECCC820](v23, v24);
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    v0[9] = sub_23BA7E794(v25, v27, &v58);
    sub_23BAD84F0();
    swift_bridgeObjectRelease();
    uint64_t v56 = v18;
    v18(v51, v22);
    _os_log_impl(&dword_23BA68000, v8, type, "Currencies fetch success, createdAt: %s, staleAt: %s, result: %s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23ECCD620](v53, -1, -1);
    MEMORY[0x23ECCD620](v14, -1, -1);
  }
  else
  {
    uint64_t v28 = v0[23];
    uint64_t v29 = v0[22];
    uint64_t v30 = v0[19];
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0[20] + 8);
    v31(v0[24], v30);
    v31(v28, v30);
    uint64_t v56 = v31;
    v31(v29, v30);
  }
  uint64_t v48 = v0[30];
  uint64_t v49 = v0[32];
  uint64_t v32 = v0[28];
  uint64_t v45 = v0[31];
  uint64_t v46 = v0[29];
  uint64_t v34 = v0[26];
  uint64_t v33 = v0[27];
  uint64_t v35 = v0[21];
  uint64_t v36 = v0[19];
  uint64_t v37 = v0[14];
  uint64_t v38 = (char *)v0[15];
  uint64_t v39 = v0[13];
  uint64_t v43 = v0[25];
  uint64_t v44 = v0[11];
  v57(v35);
  uint64_t v40 = sub_23BAD7790();
  sub_23BAB7DD8(v40, &v58);
  *(void *)uint64_t v38 = v58;
  sub_23BAD77A0();
  sub_23BA8925C(v39, (uint64_t *)&v38[*(int *)(v37 + 20)]);
  sub_23BAD77C0();
  sub_23BAD77B0();
  v56(v35, v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(&v38[*(int *)(v37 + 28)], v32, v34);
  sub_23BACDE1C((uint64_t)v38, v44);
  v56(v43, v36);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v46, v34);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v49, v48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = (uint64_t (*)(void))v0[1];
  return v41();
}

uint64_t sub_23BACD88C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23BACD99C()
{
  uint64_t v2 = v0[31];
  uint64_t v1 = v0[32];
  uint64_t v3 = v0[30];
  (*(void (**)(void, void))(v0[27] + 8))(v0[29], v0[26]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_23BACDAE4()
{
  if (qword_26ADC91C8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_23BAD8090();
  __swift_project_value_buffer(v0, (uint64_t)qword_26ADCC840);
  uint64_t v1 = sub_23BAD8070();
  os_log_type_t v2 = sub_23BAD8470();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_23BA68000, v1, v2, "Fetching app config for currencies fetch", v3, 2u);
    MEMORY[0x23ECCD620](v3, -1, -1);
  }

  sub_23BAD7EF0();
  uint64_t v4 = v9;
  uint64_t v5 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v6 = sub_23BA9A0D0(v4, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t InProcessStockService.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t InProcessStockService.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23BACDCA0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_23BA850D8;
  return InProcessStockService.fetch(_:for:)(a1, a2, a3);
}

uint64_t sub_23BACDD54(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_23BA84C10;
  return InProcessStockService.fetchCurrencyConversions(cachePolicy:deadline:)(a1, a2);
}

uint64_t sub_23BACDE00()
{
  return sub_23BACDAE4();
}

uint64_t sub_23BACDE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrencyConversionsResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23BACDE80()
{
  unint64_t result = qword_26ADC91A0;
  if (!qword_26ADC91A0)
  {
    sub_23BAD7350();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC91A0);
  }
  return result;
}

uint64_t type metadata accessor for InProcessStockService()
{
  return self;
}

uint64_t method lookup function for InProcessStockService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for InProcessStockService);
}

uint64_t dispatch thunk of InProcessStockService.__allocating_init(appConfigurationManager:attributionAssetManager:currencyManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unint64_t sub_23BACDF28()
{
  unint64_t result = qword_26ADC8208;
  if (!qword_26ADC8208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC8208);
  }
  return result;
}

void sub_23BACDF7C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23BA90AE4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_23BACDF98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (double *)(a2 + 48);
    uint64_t v4 = (double *)(a1 + 48);
    do
    {
      double v5 = *v4;
      double v6 = *v3;
      if (*((void *)v4 - 2) == *((void *)v3 - 2) && *((void *)v4 - 1) == *((void *)v3 - 1))
      {
        if (v5 != v6) {
          return 0;
        }
      }
      else
      {
        char v8 = sub_23BAD88A0();
        uint64_t result = 0;
        if ((v8 & 1) == 0 || v5 != v6) {
          return result;
        }
      }
      v3 += 3;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_23BACE04C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for StockChart.Entry(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v41 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v11 || a1 == a2) {
    return 1;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 72);
  while (1)
  {
    sub_23BAD0BF8(a1 + v12, (uint64_t)v10);
    sub_23BAD0BF8(a2 + v12, (uint64_t)v7);
    BOOL v15 = *v10 == *v7 && v10[1] == v7[1];
    if (!v15 && (sub_23BAD88A0() & 1) == 0 || (sub_23BAD7310() & 1) == 0) {
      break;
    }
    uint64_t v16 = v4[6];
    unint64_t v17 = (double *)((char *)v10 + v16);
    char v18 = *((unsigned char *)v10 + v16 + 8);
    uint64_t v19 = (double *)((char *)v7 + v16);
    int v20 = *((unsigned __int8 *)v7 + v16 + 8);
    if (v18)
    {
      if (!v20) {
        break;
      }
    }
    else
    {
      if (*v17 != *v19) {
        LOBYTE(v2sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 1;
      }
      if (v20) {
        break;
      }
    }
    uint64_t v21 = v4[7];
    uint64_t v22 = (double *)((char *)v10 + v21);
    char v23 = *((unsigned char *)v10 + v21 + 8);
    uint64_t v24 = (double *)((char *)v7 + v21);
    int v25 = *((unsigned __int8 *)v7 + v21 + 8);
    if (v23)
    {
      if (!v25) {
        break;
      }
    }
    else
    {
      if (*v22 != *v24) {
        LOBYTE(v25) = 1;
      }
      if (v25) {
        break;
      }
    }
    uint64_t v26 = v4[8];
    unint64_t v27 = (double *)((char *)v10 + v26);
    char v28 = *((unsigned char *)v10 + v26 + 8);
    uint64_t v29 = (double *)((char *)v7 + v26);
    int v30 = *((unsigned __int8 *)v7 + v26 + 8);
    if (v28)
    {
      if (!v30) {
        break;
      }
    }
    else
    {
      if (*v27 != *v29) {
        LOBYTE(v3sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 1;
      }
      if (v30) {
        break;
      }
    }
    uint64_t v31 = v4[9];
    uint64_t v32 = (double *)((char *)v10 + v31);
    char v33 = *((unsigned char *)v10 + v31 + 8);
    uint64_t v34 = (double *)((char *)v7 + v31);
    int v35 = *((unsigned __int8 *)v7 + v31 + 8);
    if (v33)
    {
      if (!v35) {
        break;
      }
    }
    else
    {
      if (*v32 != *v34) {
        LOBYTE(v35) = 1;
      }
      if (v35) {
        break;
      }
    }
    uint64_t v36 = v4[10];
    uint64_t v37 = (double *)((char *)v10 + v36);
    char v38 = *((unsigned char *)v10 + v36 + 8);
    uint64_t v39 = (double *)((char *)v7 + v36);
    int v40 = *((unsigned __int8 *)v7 + v36 + 8);
    if (v38)
    {
      if (!v40) {
        break;
      }
    }
    else
    {
      if (*v37 != *v39) {
        LOBYTE(v4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 1;
      }
      if (v40) {
        break;
      }
    }
    sub_23BAD0C5C((uint64_t)v7);
    sub_23BAD0C5C((uint64_t)v10);
    v12 += v13;
    uint64_t result = 1;
    if (!--v11) {
      return result;
    }
  }
  sub_23BAD0C5C((uint64_t)v7);
  sub_23BAD0C5C((uint64_t)v10);
  return 0;
}

uint64_t sub_23BACE2E8()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x6C6F626D7973;
  }
}

uint64_t sub_23BACE324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BAD0728(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BACE34C(uint64_t a1)
{
  unint64_t v2 = sub_23BACE414();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BACE388(uint64_t a1)
{
  unint64_t v2 = sub_23BACE414();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FundMetadata.Holding.encode(to:)(void *a1)
{
  return sub_23BACE6B4(a1, &qword_268A75C50, (uint64_t (*)(void))sub_23BACE414, (uint64_t)&type metadata for FundMetadata.Holding.CodingKeys, (void (*)(void))sub_23BACE414);
}

unint64_t sub_23BACE414()
{
  unint64_t result = qword_268A75C58;
  if (!qword_268A75C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75C58);
  }
  return result;
}

uint64_t FundMetadata.Holding.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23BACE8E8(a1, &qword_268A75C60, (uint64_t (*)(void))sub_23BACE414, (uint64_t)&type metadata for FundMetadata.Holding.CodingKeys, (void (*)(void))sub_23BACE414, a2);
}

uint64_t sub_23BACE4BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FundMetadata.Holding.init(from:)(a1, a2);
}

uint64_t sub_23BACE4D4(void *a1)
{
  return FundMetadata.Holding.encode(to:)(a1);
}

uint64_t FundMetadata.Sector.sector.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double FundMetadata.Sector.percentageOfAssets.getter()
{
  return *(double *)(v0 + 16);
}

BOOL _s9StocksKit12FundMetadataV7HoldingV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  double v3 = *(double *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_23BAD88A0();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t sub_23BACE588()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x726F74636573;
  }
}

uint64_t sub_23BACE5C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BAD0810(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BACE5EC(uint64_t a1)
{
  unint64_t v2 = sub_23BACE844();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BACE628(uint64_t a1)
{
  unint64_t v2 = sub_23BACE844();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FundMetadata.Sector.encode(to:)(void *a1)
{
  return sub_23BACE6B4(a1, &qword_268A75C68, (uint64_t (*)(void))sub_23BACE844, (uint64_t)&type metadata for FundMetadata.Sector.CodingKeys, (void (*)(void))sub_23BACE844);
}

uint64_t sub_23BACE6B4(void *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(void))
{
  BOOL v15 = a5;
  sub_23BACFBE8(0, a2, a3, a4, MEMORY[0x263F8E0C0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v14 - v10;
  uint64_t v14 = *v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15();
  sub_23BAD89B0();
  char v18 = 0;
  uint64_t v12 = v16;
  sub_23BAD8830();
  if (!v12)
  {
    char v17 = 1;
    sub_23BAD8840();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_23BACE844()
{
  unint64_t result = qword_268A75C70;
  if (!qword_268A75C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75C70);
  }
  return result;
}

uint64_t FundMetadata.Sector.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23BACE8E8(a1, &qword_268A75C78, (uint64_t (*)(void))sub_23BACE844, (uint64_t)&type metadata for FundMetadata.Sector.CodingKeys, (void (*)(void))sub_23BACE844, a2);
}

uint64_t sub_23BACE8E8@<X0>(void *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X3>, void (*a5)(void)@<X4>, uint64_t *a6@<X8>)
{
  char v23 = a6;
  sub_23BACFBE8(0, a2, a3, a4, MEMORY[0x263F8E040]);
  uint64_t v10 = v9;
  uint64_t v22 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v21 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_23BAD89A0();
  if (v6) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = v22;
  uint64_t v13 = v23;
  char v25 = 0;
  uint64_t v15 = sub_23BAD8790();
  uint64_t v17 = v16;
  char v24 = 1;
  swift_bridgeObjectRetain();
  sub_23BAD87A0();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v10);
  *uint64_t v13 = v15;
  v13[1] = v17;
  long long v13[2] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BACEAEC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FundMetadata.Sector.init(from:)(a1, a2);
}

uint64_t sub_23BACEB04(void *a1)
{
  return FundMetadata.Sector.encode(to:)(a1);
}

uint64_t FundMetadata.assetClass.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FundMetadata.category.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FundMetadata.focus.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FundMetadata.niche.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FundMetadata.region.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FundMetadata.topHoldings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FundMetadata.topSectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BACEC20()
{
  uint64_t result = 0x616C437465737361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x79726F6765746163;
      break;
    case 2:
      uint64_t result = 0x7375636F66;
      break;
    case 3:
      uint64_t result = 0x656863696ELL;
      break;
    case 4:
      uint64_t result = 0x6E6F69676572;
      break;
    case 5:
      uint64_t result = 0x69646C6F48706F74;
      break;
    case 6:
      uint64_t result = 0x6F74636553706F74;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23BACED0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BAD08F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BACED34(uint64_t a1)
{
  unint64_t v2 = sub_23BACFAA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BACED70(uint64_t a1)
{
  unint64_t v2 = sub_23BACFAA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FundMetadata.encode(to:)(void *a1)
{
  sub_23BACFBE8(0, &qword_268A75C80, (uint64_t (*)(void))sub_23BACFAA4, (uint64_t)&type metadata for FundMetadata.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v15 - v6;
  uint64_t v8 = v1[2];
  uint64_t v23 = v1[3];
  uint64_t v24 = v8;
  uint64_t v9 = v1[4];
  uint64_t v21 = v1[5];
  uint64_t v22 = v9;
  uint64_t v10 = v1[6];
  uint64_t v19 = v1[7];
  uint64_t v20 = v10;
  uint64_t v11 = v1[9];
  uint64_t v17 = v1[8];
  uint64_t v18 = v11;
  uint64_t v12 = v1[10];
  uint64_t v15 = v1[11];
  uint64_t v16 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BACFAA4();
  sub_23BAD89B0();
  LOBYTE(v27) = 0;
  uint64_t v13 = v25;
  sub_23BAD87F0();
  if (!v13)
  {
    LOBYTE(v27) = 1;
    sub_23BAD87F0();
    LOBYTE(v27) = 2;
    sub_23BAD87F0();
    LOBYTE(v27) = 3;
    sub_23BAD87F0();
    LOBYTE(v27) = 4;
    sub_23BAD87F0();
    uint64_t v27 = v16;
    char v26 = 5;
    sub_23BACFB4C(0, &qword_268A75C90);
    sub_23BACFC50(&qword_268A75C98, (void (*)(void))sub_23BACFAF8);
    sub_23BAD8850();
    uint64_t v27 = v15;
    char v26 = 6;
    sub_23BACFB4C(0, &qword_268A75CA8);
    sub_23BACFD20(&qword_268A75CB0, (void (*)(void))sub_23BACFB94);
    sub_23BAD8850();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FundMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23BACFBE8(0, &qword_268A75CC0, (uint64_t (*)(void))sub_23BACFAA4, (uint64_t)&type metadata for FundMetadata.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = a1[3];
  uint64_t v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_23BACFAA4();
  sub_23BAD89A0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  }
  uint64_t v11 = v7;
  uint64_t v44 = a2;
  LOBYTE(v47) = 0;
  uint64_t v12 = sub_23BAD8750();
  uint64_t v14 = v13;
  LOBYTE(v47) = 1;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_23BAD8750();
  uint64_t v17 = v16;
  uint64_t v43 = v15;
  LOBYTE(v47) = 2;
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_23BAD8750();
  uint64_t v41 = v12;
  LOBYTE(v47) = 3;
  uint64_t v20 = v19;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_23BAD8750();
  uint64_t v42 = v22;
  uint64_t v37 = v21;
  uint64_t v38 = v20;
  LOBYTE(v47) = 4;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_23BAD8750();
  uint64_t v25 = v24;
  uint64_t v36 = v23;
  sub_23BACFB4C(0, &qword_268A75C90);
  char v46 = 5;
  sub_23BACFC50(&qword_268A75CC8, (void (*)(void))sub_23BACFCCC);
  uint64_t v39 = v25;
  swift_bridgeObjectRetain();
  sub_23BAD87B0();
  uint64_t v26 = v47;
  sub_23BACFB4C(0, &qword_268A75CA8);
  char v46 = 6;
  sub_23BACFD20(&qword_268A75CD8, (void (*)(void))sub_23BACFD9C);
  uint64_t v35 = v26;
  swift_bridgeObjectRetain();
  sub_23BAD87B0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v6);
  uint64_t v27 = v47;
  swift_bridgeObjectRetain();
  uint64_t v28 = v17;
  swift_bridgeObjectRetain();
  uint64_t v29 = v38;
  swift_bridgeObjectRetain();
  uint64_t v30 = v42;
  swift_bridgeObjectRetain();
  uint64_t v31 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v33 = v44;
  uint64_t v32 = (uint64_t)v45;
  *uint64_t v44 = v41;
  v33[1] = v14;
  void v33[2] = v43;
  v33[3] = v28;
  v33[4] = v40;
  v33[5] = v29;
  v33[6] = v37;
  v33[7] = v30;
  uint64_t v34 = v35;
  v33[8] = v36;
  v33[9] = v31;
  v33[10] = v34;
  v33[11] = v27;
  __swift_destroy_boxed_opaque_existential_1(v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BACF7A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FundMetadata.init(from:)(a1, a2);
}

uint64_t sub_23BACF7BC(void *a1)
{
  return FundMetadata.encode(to:)(a1);
}

uint64_t _s9StocksKit12FundMetadataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  uint64_t v10 = a1[8];
  uint64_t v11 = a1[9];
  uint64_t v12 = a1[10];
  uint64_t v13 = a1[11];
  uint64_t v14 = a2[1];
  uint64_t v15 = a2[2];
  uint64_t v17 = a2[3];
  uint64_t v16 = a2[4];
  uint64_t v19 = a2[5];
  uint64_t v18 = a2[6];
  uint64_t v21 = a2[7];
  uint64_t v20 = a2[8];
  uint64_t v23 = a2[9];
  uint64_t v22 = a2[10];
  uint64_t v24 = a2[11];
  if (!v3)
  {
    if (v14) {
      goto LABEL_38;
    }
    goto LABEL_8;
  }
  if (!v14) {
    goto LABEL_38;
  }
  if (*a1 == *a2 && v3 == v14) {
    goto LABEL_8;
  }
  uint64_t v57 = a1[2];
  uint64_t v58 = a1[10];
  uint64_t v66 = a1[9];
  uint64_t v69 = a2[9];
  uint64_t v62 = a2[10];
  uint64_t v64 = a1[8];
  uint64_t v59 = a1[6];
  uint64_t v60 = a2[11];
  uint64_t v25 = a1[11];
  uint64_t v26 = a2[8];
  uint64_t v27 = a1[7];
  uint64_t v28 = a2[7];
  uint64_t v29 = a2[6];
  uint64_t v30 = a1[4];
  uint64_t v31 = a1[5];
  uint64_t v72 = a2[5];
  uint64_t v32 = a2[4];
  uint64_t v56 = a2[2];
  char v33 = sub_23BAD88A0();
  uint64_t v15 = v56;
  uint64_t v4 = v57;
  uint64_t v16 = v32;
  uint64_t v7 = v31;
  uint64_t v5 = v30;
  uint64_t v18 = v29;
  uint64_t v21 = v28;
  uint64_t v9 = v27;
  uint64_t v20 = v26;
  uint64_t v13 = v25;
  uint64_t v12 = v58;
  uint64_t v8 = v59;
  uint64_t v24 = v60;
  uint64_t v22 = v62;
  uint64_t v10 = v64;
  uint64_t v11 = v66;
  uint64_t v23 = v69;
  uint64_t v19 = v72;
  char v34 = v33;
  char v35 = 0;
  if (v34)
  {
LABEL_8:
    if (v6)
    {
      if (!v17) {
        goto LABEL_38;
      }
      if (v4 != v15 || v6 != v17)
      {
        uint64_t v67 = v18;
        uint64_t v70 = v13;
        uint64_t v36 = v20;
        uint64_t v63 = v7;
        uint64_t v65 = v9;
        uint64_t v37 = v5;
        uint64_t v73 = v19;
        uint64_t v61 = v16;
        char v38 = sub_23BAD88A0();
        uint64_t v16 = v61;
        uint64_t v7 = v63;
        uint64_t v13 = v70;
        uint64_t v19 = v73;
        uint64_t v5 = v37;
        uint64_t v9 = v65;
        uint64_t v18 = v67;
        uint64_t v20 = v36;
        char v39 = v38;
        char v35 = 0;
        if ((v39 & 1) == 0) {
          return v35 & 1;
        }
      }
    }
    else if (v17)
    {
      goto LABEL_38;
    }
    if (v7)
    {
      if (!v19) {
        goto LABEL_38;
      }
      if (v5 != v16 || v7 != v19)
      {
        uint64_t v68 = v18;
        uint64_t v71 = v13;
        uint64_t v40 = v20;
        uint64_t v41 = v9;
        char v42 = sub_23BAD88A0();
        uint64_t v18 = v68;
        uint64_t v13 = v71;
        uint64_t v9 = v41;
        uint64_t v20 = v40;
        char v43 = v42;
        char v35 = 0;
        if ((v43 & 1) == 0) {
          return v35 & 1;
        }
      }
    }
    else if (v19)
    {
      goto LABEL_38;
    }
    if (v9)
    {
      if (!v21) {
        goto LABEL_38;
      }
      if (v8 != v18 || v9 != v21)
      {
        uint64_t v44 = v24;
        uint64_t v45 = v13;
        uint64_t v46 = v20;
        char v47 = sub_23BAD88A0();
        uint64_t v20 = v46;
        uint64_t v13 = v45;
        uint64_t v24 = v44;
        char v48 = v47;
        char v35 = 0;
        if ((v48 & 1) == 0) {
          return v35 & 1;
        }
      }
    }
    else if (v21)
    {
      goto LABEL_38;
    }
    if (v11)
    {
      if (!v23) {
        goto LABEL_38;
      }
      if (v10 != v20 || v11 != v23)
      {
        uint64_t v49 = v24;
        uint64_t v50 = v13;
        char v51 = sub_23BAD88A0();
        uint64_t v13 = v50;
        uint64_t v24 = v49;
        char v52 = v51;
        char v35 = 0;
        if ((v52 & 1) == 0) {
          return v35 & 1;
        }
      }
    }
    else if (v23)
    {
      goto LABEL_38;
    }
    uint64_t v53 = v24;
    uint64_t v54 = v13;
    if (sub_23BACDF98(v12, v22))
    {
      char v35 = sub_23BACDF98(v54, v53);
      return v35 & 1;
    }
LABEL_38:
    char v35 = 0;
  }
  return v35 & 1;
}

unint64_t sub_23BACFAA4()
{
  unint64_t result = qword_268A75C88;
  if (!qword_268A75C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75C88);
  }
  return result;
}

unint64_t sub_23BACFAF8()
{
  unint64_t result = qword_268A75CA0;
  if (!qword_268A75CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75CA0);
  }
  return result;
}

void sub_23BACFB4C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_23BAD8330();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_23BACFB94()
{
  unint64_t result = qword_268A75CB8;
  if (!qword_268A75CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75CB8);
  }
  return result;
}

void sub_23BACFBE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_23BACFC50(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23BACFB4C(255, &qword_268A75C90);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23BACFCCC()
{
  unint64_t result = qword_268A75CD0;
  if (!qword_268A75CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75CD0);
  }
  return result;
}

uint64_t sub_23BACFD20(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23BACFB4C(255, &qword_268A75CA8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23BACFD9C()
{
  unint64_t result = qword_268A75CE0;
  if (!qword_268A75CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75CE0);
  }
  return result;
}

uint64_t destroy for FundMetadata()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FundMetadata(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FundMetadata(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FundMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FundMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FundMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FundMetadata()
{
  return &type metadata for FundMetadata;
}

ValueMetadata *type metadata accessor for FundMetadata.Holding()
{
  return &type metadata for FundMetadata.Holding;
}

uint64_t _s9StocksKit12FundMetadataV7HoldingVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23BAD01A4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FundMetadata.Sector()
{
  return &type metadata for FundMetadata.Sector;
}

unsigned char *storeEnumTagSinglePayload for FundMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BAD02C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FundMetadata.CodingKeys()
{
  return &type metadata for FundMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for FundMetadata.Sector.CodingKeys()
{
  return &type metadata for FundMetadata.Sector.CodingKeys;
}

unsigned char *_s9StocksKit12FundMetadataV6SectorV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BAD03D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FundMetadata.Holding.CodingKeys()
{
  return &type metadata for FundMetadata.Holding.CodingKeys;
}

unint64_t sub_23BAD0414()
{
  unint64_t result = qword_268A75CE8;
  if (!qword_268A75CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75CE8);
  }
  return result;
}

unint64_t sub_23BAD046C()
{
  unint64_t result = qword_268A75CF0;
  if (!qword_268A75CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75CF0);
  }
  return result;
}

unint64_t sub_23BAD04C4()
{
  unint64_t result = qword_268A75CF8;
  if (!qword_268A75CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75CF8);
  }
  return result;
}

unint64_t sub_23BAD051C()
{
  unint64_t result = qword_268A75D00;
  if (!qword_268A75D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75D00);
  }
  return result;
}

unint64_t sub_23BAD0574()
{
  unint64_t result = qword_268A75D08;
  if (!qword_268A75D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75D08);
  }
  return result;
}

unint64_t sub_23BAD05CC()
{
  unint64_t result = qword_268A75D10;
  if (!qword_268A75D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75D10);
  }
  return result;
}

unint64_t sub_23BAD0624()
{
  unint64_t result = qword_268A75D18;
  if (!qword_268A75D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75D18);
  }
  return result;
}

unint64_t sub_23BAD067C()
{
  unint64_t result = qword_268A75D20;
  if (!qword_268A75D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75D20);
  }
  return result;
}

unint64_t sub_23BAD06D4()
{
  unint64_t result = qword_268A75D28;
  if (!qword_268A75D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75D28);
  }
  return result;
}

uint64_t sub_23BAD0728(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023BADE9B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_23BAD0810(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F74636573 && a2 == 0xE600000000000000;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023BADE9B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_23BAD08F8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x616C437465737361 && a2 == 0xEA00000000007373 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79726F6765746163 && a2 == 0xE800000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7375636F66 && a2 == 0xE500000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656863696ELL && a2 == 0xE500000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F69676572 && a2 == 0xE600000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x69646C6F48706F74 && a2 == 0xEB0000000073676ELL || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F74636553706F74 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_23BAD0BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockChart.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAD0C5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockChart.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CurrencyConversionsResult.conversions.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t CurrencyConversionsResult.source.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CurrencyConversionsResult();
  return sub_23BAD1B84(v1 + *(int *)(v3 + 20), a1, type metadata accessor for DataSource);
}

uint64_t type metadata accessor for CurrencyConversionsResult()
{
  uint64_t result = qword_26ADC9178;
  if (!qword_26ADC9178) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CurrencyConversionsResult.source.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CurrencyConversionsResult() + 20);
  return sub_23BAD0DAC(a1, v3);
}

uint64_t sub_23BAD0DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DataSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*CurrencyConversionsResult.source.modify())()
{
  return nullsub_1;
}

uint64_t CurrencyConversionsResult.createdAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CurrencyConversionsResult() + 24);
  uint64_t v4 = sub_23BAD7350();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t CurrencyConversionsResult.staleAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CurrencyConversionsResult() + 28);
  uint64_t v4 = sub_23BAD7350();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t CurrencyConversionsResult.init(conversions:source:createdAt:staleAt:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = *a1;
  uint64_t v9 = (int *)type metadata accessor for CurrencyConversionsResult();
  sub_23BAD102C(a2, (uint64_t)a5 + v9[5]);
  unint64_t v10 = (char *)a5 + v9[6];
  uint64_t v11 = sub_23BAD7350();
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  ((void (*)(void *__return_ptr, char *, uint64_t, uint64_t))v14)((void *)(v11 - 8), v10, a3, v11);
  uint64_t v12 = (char *)a5 + v9[7];
  return v14(v12, a4, v11);
}

uint64_t sub_23BAD102C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DataSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAD1090()
{
  uint64_t result = 0x69737265766E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656372756F73;
      break;
    case 2:
      uint64_t result = 0x4164657461657263;
      break;
    case 3:
      uint64_t result = 0x7441656C617473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23BAD1128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23BAD350C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BAD1150(uint64_t a1)
{
  unint64_t v2 = sub_23BAD1468();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23BAD118C(uint64_t a1)
{
  unint64_t v2 = sub_23BAD1468();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CurrencyConversionsResult.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_23BAD1A84(0, qword_26ADC83D8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAD1468();
  sub_23BAD89B0();
  uint64_t v12 = *v3;
  v11[15] = 0;
  sub_23BAD14BC();
  sub_23BAD8850();
  if (!v2)
  {
    type metadata accessor for CurrencyConversionsResult();
    v11[14] = 1;
    type metadata accessor for DataSource(0);
    sub_23BAD1B3C(&qword_26ADC8290, (void (*)(uint64_t))type metadata accessor for DataSource);
    sub_23BAD8850();
    v11[13] = 2;
    sub_23BAD7350();
    sub_23BAD1B3C(&qword_26ADC8238, MEMORY[0x263F07490]);
    sub_23BAD8850();
    v11[12] = 3;
    sub_23BAD8850();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_23BAD1468()
{
  unint64_t result = qword_26ADC9698;
  if (!qword_26ADC9698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC9698);
  }
  return result;
}

unint64_t sub_23BAD14BC()
{
  unint64_t result = qword_26ADC82B8;
  if (!qword_26ADC82B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC82B8);
  }
  return result;
}

uint64_t CurrencyConversionsResult.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v34 = sub_23BAD7350();
  uint64_t v32 = *(void *)(v34 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v34);
  uint64_t v30 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v31 = (char *)&v27 - v5;
  uint64_t v6 = type metadata accessor for DataSource(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAD1A84(0, &qword_26ADC8128, MEMORY[0x263F8E040]);
  uint64_t v35 = v9;
  uint64_t v33 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = type metadata accessor for CurrencyConversionsResult();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BAD1468();
  uint64_t v36 = v11;
  uint64_t v15 = (uint64_t)v37;
  sub_23BAD89A0();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v37 = a1;
  uint64_t v16 = v14;
  uint64_t v17 = v33;
  uint64_t v18 = v34;
  char v41 = 0;
  sub_23BAD1AE8();
  uint64_t v19 = v35;
  sub_23BAD87B0();
  *(void *)uint64_t v16 = v42;
  char v40 = 1;
  sub_23BAD1B3C(&qword_26ADC8068, (void (*)(uint64_t))type metadata accessor for DataSource);
  sub_23BAD87B0();
  uint64_t v27 = v12;
  uint64_t v28 = v16;
  sub_23BAD102C((uint64_t)v8, (uint64_t)&v16[*(int *)(v12 + 20)]);
  char v39 = 2;
  sub_23BAD1B3C(&qword_26ADC7F00, MEMORY[0x263F07490]);
  uint64_t v20 = v31;
  sub_23BAD87B0();
  uint64_t v21 = v27;
  uint64_t v22 = v20;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v23(&v28[*(int *)(v27 + 24)], v22, v18);
  char v38 = 3;
  sub_23BAD87B0();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v36, v19);
  uint64_t v24 = *(int *)(v21 + 28);
  uint64_t v25 = (uint64_t)v28;
  v23(&v28[v24], v30, v18);
  sub_23BAD1B84(v25, v29, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return sub_23BAD2870(v25, (uint64_t (*)(void))type metadata accessor for CurrencyConversionsResult);
}

void sub_23BAD1A84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_23BAD1468();
    unint64_t v7 = a3(a1, &type metadata for CurrencyConversionsResult.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_23BAD1AE8()
{
  unint64_t result = qword_26ADC80C8;
  if (!qword_26ADC80C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC80C8);
  }
  return result;
}

uint64_t sub_23BAD1B3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BAD1B84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23BAD1BEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CurrencyConversionsResult.init(from:)(a1, a2);
}

uint64_t sub_23BAD1C04(void *a1)
{
  return CurrencyConversionsResult.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for CurrencyConversionsResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (char *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = (char *)a1;
    uint64_t v6 = a3[5];
    unint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    void *v7 = *(uint64_t *)((char *)a2 + v6);
    v7[1] = v9;
    uint64_t v10 = type metadata accessor for DataSource(0);
    uint64_t v11 = *(int *)(v10 + 20);
    __dst = (char *)v7 + v11;
    uint64_t v31 = v10;
    uint64_t v12 = &v8[v11];
    uint64_t v13 = type metadata accessor for DataSource.Logo(0);
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
      memcpy(__dst, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v17 = sub_23BAD78E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v12, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v18 = *(int *)(v31 + 24);
    uint64_t v19 = (char *)v7 + v18;
    uint64_t v20 = &v8[v18];
    uint64_t v21 = sub_23BAD72C0();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v24 = a3[6];
    uint64_t v25 = &v5[v24];
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_23BAD7350();
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
    v28(v25, v26, v27);
    v28(&v5[a3[7]], (char *)a2 + a3[7], v27);
  }
  return v5;
}

uint64_t destroy for CurrencyConversionsResult(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for DataSource(0);
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = type metadata accessor for DataSource.Logo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = sub_23BAD78E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }
  uint64_t v9 = v4 + *(int *)(v5 + 24);
  uint64_t v10 = sub_23BAD72C0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = a1 + a2[6];
  uint64_t v13 = sub_23BAD7350();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v16)((void *)(v13 - 8), v12, v13);
  uint64_t v14 = a1 + a2[7];
  return v16(v14, v13);
}

char *initializeWithCopy for CurrencyConversionsResult(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = a3[5];
  uint64_t v4 = &a1[v3];
  uint64_t v5 = &a2[v3];
  uint64_t v6 = *(void *)&a2[v3 + 8];
  *(void *)uint64_t v4 = *(void *)&a2[v3];
  *((void *)v4 + 1) = v6;
  uint64_t v7 = type metadata accessor for DataSource(0);
  uint64_t v8 = *(int *)(v7 + 20);
  __dst = &v4[v8];
  uint64_t v9 = &v5[v8];
  uint64_t v10 = type metadata accessor for DataSource.Logo(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_23BAD78E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(__dst, v9, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v15 = *(int *)(v7 + 24);
  uint64_t v16 = &v4[v15];
  uint64_t v17 = &v5[v15];
  uint64_t v18 = sub_23BAD72C0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = a3[6];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_23BAD7350();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
  v25(v22, v23, v24);
  v25(&a1[a3[7]], &a2[a3[7]], v24);
  return a1;
}

char *assignWithCopy for CurrencyConversionsResult(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  *(void *)uint64_t v7 = *(void *)&a2[v6];
  *((void *)v7 + 1) = *(void *)&a2[v6 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = type metadata accessor for DataSource(0);
  uint64_t v9 = *(int *)(v35 + 20);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for DataSource.Logo(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v17 = sub_23BAD78E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v10, v11, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_23BAD2870((uint64_t)v10, type metadata accessor for DataSource.Logo);
LABEL_6:
    sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v34 = sub_23BAD78E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v10, v11, v34);
LABEL_7:
  uint64_t v19 = *(int *)(v35 + 24);
  uint64_t v20 = &v7[v19];
  uint64_t v21 = &v8[v19];
  uint64_t v22 = sub_23BAD72C0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_13:
  uint64_t v28 = a3[6];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &v36[v28];
  uint64_t v31 = sub_23BAD7350();
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 24);
  v32(v29, v30, v31);
  v32(&a1[a3[7]], &v36[a3[7]], v31);
  return a1;
}

uint64_t sub_23BAD2870(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeWithTake for CurrencyConversionsResult(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  *(_OWORD *)&a1[v6] = *(_OWORD *)&a2[v6];
  uint64_t v9 = type metadata accessor for DataSource(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = type metadata accessor for DataSource.Logo(0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = sub_23BAD78E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = *(int *)(v9 + 24);
  uint64_t v18 = &v7[v17];
  uint64_t v19 = &v8[v17];
  uint64_t v20 = sub_23BAD72C0();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = &a1[v23];
  int v25 = &a2[v23];
  uint64_t v26 = sub_23BAD7350();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32);
  v27(v24, v25, v26);
  v27(&a1[a3[7]], &a2[a3[7]], v26);
  return a1;
}

char *assignWithTake for CurrencyConversionsResult(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v37 = a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = *(void *)&a2[v6 + 8];
  *(void *)uint64_t v7 = *(void *)&a2[v6];
  *((void *)v7 + 1) = v9;
  swift_bridgeObjectRelease();
  uint64_t v36 = type metadata accessor for DataSource(0);
  uint64_t v10 = *(int *)(v36 + 20);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = type metadata accessor for DataSource.Logo(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = sub_23BAD78E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v11, v12, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_23BAD2870((uint64_t)v11, type metadata accessor for DataSource.Logo);
LABEL_6:
    sub_23BA6B0E0(0, &qword_26ADC9520, (void (*)(uint64_t))type metadata accessor for DataSource.Logo);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v35 = sub_23BAD78E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40))(v11, v12, v35);
LABEL_7:
  uint64_t v20 = *(int *)(v36 + 24);
  uint64_t v21 = &v7[v20];
  uint64_t v22 = &v8[v20];
  uint64_t v23 = sub_23BAD72C0();
  uint64_t v24 = *(void *)(v23 - 8);
  int v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    sub_23BA6B0E0(0, (unint64_t *)&qword_26ADC9198, MEMORY[0x263F06EA8]);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_13:
  uint64_t v29 = a3[6];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &v37[v29];
  uint64_t v32 = sub_23BAD7350();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 40);
  v33(v30, v31, v32);
  v33(&a1[a3[7]], &v37[a3[7]], v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrencyConversionsResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23BAD2FBC);
}

uint64_t sub_23BAD2FBC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DataSource(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_23BAD7350();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      int v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for CurrencyConversionsResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23BAD30FC);
}

void *sub_23BAD30FC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DataSource(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_23BAD7350();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      int v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_23BAD3228()
{
  uint64_t result = type metadata accessor for DataSource(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_23BAD7350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CurrencyConversionsResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BAD33CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrencyConversionsResult.CodingKeys()
{
  return &type metadata for CurrencyConversionsResult.CodingKeys;
}

unint64_t sub_23BAD3408()
{
  unint64_t result = qword_268A75D30;
  if (!qword_268A75D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75D30);
  }
  return result;
}

unint64_t sub_23BAD3460()
{
  unint64_t result = qword_26ADC96A8;
  if (!qword_26ADC96A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC96A8);
  }
  return result;
}

unint64_t sub_23BAD34B8()
{
  unint64_t result = qword_26ADC96A0;
  if (!qword_26ADC96A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC96A0);
  }
  return result;
}

uint64_t sub_23BAD350C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x69737265766E6F63 && a2 == 0xEB00000000736E6FLL;
  if (v2 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4164657461657263 && a2 == 0xE900000000000074 || (sub_23BAD88A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7441656C617473 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_23BAD88A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t dispatch thunk of StockServiceType.fetch(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + **(int **)(a5 + 8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_23BA850D8;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of StockServiceType.fetchCurrencyConversions(cachePolicy:deadline:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_23BA84C10;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_23BAD3924()
{
  return sub_23BAD8980();
}

uint64_t sub_23BAD3A7C()
{
  return sub_23BAD8980();
}

StocksKit::StockType_optional __swiftcall StockType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_23BAD8720();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t StockType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x79636E6572727563;
      break;
    case 2:
      uint64_t result = 0x75636F7470797263;
      break;
    case 3:
      uint64_t result = 0x797469757165;
      break;
    case 4:
      uint64_t result = 6714469;
      break;
    case 5:
      uint64_t result = 0x73657275747566;
      break;
    case 6:
      uint64_t result = 0x7865646E69;
      break;
    case 7:
      uint64_t result = 0x75466C617574756DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_23BAD3D1C()
{
  unint64_t result = qword_268A75D48;
  if (!qword_268A75D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75D48);
  }
  return result;
}

uint64_t sub_23BAD3D70()
{
  return sub_23BAD3A7C();
}

uint64_t sub_23BAD3D7C()
{
  return sub_23BABDBD4();
}

uint64_t sub_23BAD3D84()
{
  return sub_23BAD3A7C();
}

StocksKit::StockType_optional sub_23BAD3D8C(Swift::String *a1)
{
  return StockType.init(rawValue:)(*a1);
}

void sub_23BAD3D98(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x79636E6572727563;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "cryptocurrency");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0x797469757165;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      *(void *)a1 = 6714469;
      *(void *)(a1 + 8) = 0xE300000000000000;
      break;
    case 5:
      *(void *)a1 = 0x73657275747566;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 6:
      *(void *)a1 = 0x7865646E69;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 7:
      *(void *)a1 = 0x75466C617574756DLL;
      *(void *)(a1 + 8) = 0xEA0000000000646ELL;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_23BAD3EB0()
{
  return sub_23BAD82C0();
}

uint64_t sub_23BAD3F10()
{
  return sub_23BAD82B0();
}

uint64_t sub_23BAD3F60(unsigned __int8 *a1, char *a2)
{
  return sub_23BA9A664(*a1, *a2);
}

unsigned char *storeEnumTagSinglePayload for StockType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23BAD4038);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockType()
{
  return &type metadata for StockType;
}

unint64_t sub_23BAD4070()
{
  unint64_t result = qword_268A75D50;
  if (!qword_268A75D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268A75D50);
  }
  return result;
}

uint64_t QuoteDetailResult.quoteDetails.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t QuoteDetailResult.source.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for QuoteDetailResult() + 20);
  return sub_23BA851F4(v3, a1);
}

uint64_t type metadata accessor for QuoteDetailResult()
{
  uint64_t result = qword_268A75D58;
  if (!qword_268A75D58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for QuoteDetailResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23BAD4170);
}

uint64_t sub_23BAD4170(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DataSource(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for QuoteDetailResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23BAD4234);
}

void *sub_23BAD4234(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DataSource(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for VersionedPID(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for VersionedPID(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VersionedPID()
{
  return &type metadata for VersionedPID;
}

__n128 sub_23BAD4340@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  *(unsigned char *)(a2 + 32) = 0;
  return result;
}

__n128 sub_23BAD4350@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

uint64_t sub_23BAD435C()
{
  return sub_23BAD8980();
}

uint64_t sub_23BAD43B8()
{
  return sub_23BAD8970();
}

uint64_t sub_23BAD43F4()
{
  return sub_23BAD8980();
}

unint64_t sub_23BAD4450()
{
  unint64_t result = qword_26ADC81F0;
  if (!qword_26ADC81F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ADC81F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AuditToken()
{
  return &type metadata for AuditToken;
}

uint64_t StockResult.stocks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StockResult.source.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StockResult() + 20);
  return sub_23BA851F4(v3, a1);
}

uint64_t type metadata accessor for StockResult()
{
  uint64_t result = qword_268A75D68;
  if (!qword_268A75D68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StockResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23BAD4560);
}

uint64_t sub_23BAD4560(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DataSource(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for StockResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23BAD4624);
}

void *sub_23BAD4624(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DataSource(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t StockService.searchStocks(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_23BAD46F0, 0, 0);
}

uint64_t sub_23BAD46F0()
{
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = off_26ADC8088;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  uint64_t v6 = type metadata accessor for StockSearchResult();
  *uint64_t v5 = v0;
  v5[1] = sub_23BA72580;
  uint64_t v7 = v0[2];
  return MEMORY[0x270FA2360](v7, 0, 0, 0xD00000000000001ELL, 0x800000023BADE9D0, sub_23BAD4998, v4, v6);
}

uint64_t sub_23BAD4828(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_23BAD70D4(0, &qword_268A75DE8, (void (*)(uint64_t))type metadata accessor for StockSearchResult);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - v10, a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, v11, v8);
  StockService.searchStocks(for:completion:)(a3, a4, (uint64_t)sub_23BAD7168, v13);
  return swift_release();
}

uint64_t sub_23BAD4998(uint64_t a1)
{
  return sub_23BAD4828(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t StockService.fetchStocks(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a3;
  *(unsigned char *)(v3 + 72) = *(unsigned char *)(a3 + 16);
  return MEMORY[0x270FA2498](sub_23BAD49D4, 0, 0);
}

uint64_t sub_23BAD49D4()
{
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 40);
  long long v9 = *(_OWORD *)(v0 + 24);
  uint64_t v3 = off_26ADC8088;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v9;
  *(void *)(v4 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v2;
  *(unsigned char *)(v4 + 48) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  uint64_t v6 = type metadata accessor for StockResult();
  *uint64_t v5 = v0;
  v5[1] = sub_23BA72838;
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v7, 0, 0, 0xD00000000000001DLL, 0x800000023BADE9F0, sub_23BAD4D44, v4, v6);
}

uint64_t sub_23BAD4B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v23 = a2;
  sub_23BAD70D4(0, &qword_268A75DE0, (void (*)(uint64_t))type metadata accessor for StockResult);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v24[-1] - v14;
  uint64_t v16 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v24[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[0] = a4;
  v24[1] = a5;
  char v25 = a6;
  sub_23BA6ED18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  unint64_t v20 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v21 + v20, v15, v12);
  StockService.fetchStocks(for:cachePolicy:networkSession:completion:)(a3, (uint64_t)v24, (uint64_t)v18, (uint64_t)sub_23BAD7078, v21);
  swift_release();
  return sub_23BAD6D10((uint64_t)v18);
}

uint64_t sub_23BAD4D44(uint64_t a1)
{
  return sub_23BAD5580(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_23BAD4B2C);
}

uint64_t StockService.fetchStocks(for:cachePolicy:networkSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a4;
  *(void *)(v4 + 16) = a1;
  *(_OWORD *)(v4 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(_OWORD *)a3;
  *(unsigned char *)(v4 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(unsigned char *)(a3 + 16);
  return MEMORY[0x270FA2498](sub_23BAD4D90, 0, 0);
}

uint64_t sub_23BAD4D90()
{
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v6 = off_26ADC8088;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 56) = v7;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  *(void *)(v7 + 32) = v3;
  *(void *)(v7 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v2;
  *(unsigned char *)(v7 + 48) = v1;
  *(void *)(v7 + 56) = v4;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v8;
  uint64_t v9 = type metadata accessor for StockResult();
  void *v8 = v0;
  v8[1] = sub_23BAA1DA8;
  uint64_t v10 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v10, 0, 0, 0xD00000000000002CLL, 0x800000023BADEA10, sub_23BAD5074, v7, v9);
}

uint64_t sub_23BAD4EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v20 = a7;
  sub_23BAD70D4(0, &qword_268A75DE0, (void (*)(uint64_t))type metadata accessor for StockResult);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v21[-1] - v15;
  v21[0] = a4;
  v21[1] = a5;
  char v22 = a6;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v21[-1] - v15, a1, v13);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v18 + v17, v16, v13);
  StockService.fetchStocks(for:cachePolicy:networkSession:completion:)(a3, (uint64_t)v21, v20, (uint64_t)sub_23BAD7078, v18);
  return swift_release();
}

uint64_t sub_23BAD5074(uint64_t a1)
{
  return sub_23BAD58C8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_23BAD4EE8);
}

uint64_t StockService.fetchQuotes(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a3;
  *(unsigned char *)(v3 + 72) = *(unsigned char *)(a3 + 16);
  return MEMORY[0x270FA2498](sub_23BAD50BC, 0, 0);
}

uint64_t sub_23BAD50BC()
{
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 40);
  long long v9 = *(_OWORD *)(v0 + 24);
  uint64_t v3 = off_26ADC8088;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v9;
  *(void *)(v4 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v2;
  *(unsigned char *)(v4 + 48) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  uint64_t v6 = type metadata accessor for QuoteResult();
  *uint64_t v5 = v0;
  v5[1] = sub_23BAD5214;
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v7, 0, 0, 0xD00000000000001DLL, 0x800000023BADEA40, sub_23BAD5568, v4, v6);
}

uint64_t sub_23BAD5214()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_23BAD727C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_23BAD5350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v23 = a2;
  sub_23BAD70D4(0, &qword_268A75DD8, (void (*)(uint64_t))type metadata accessor for QuoteResult);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v24[-1] - v14;
  uint64_t v16 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v24[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[0] = a4;
  v24[1] = a5;
  char v25 = a6;
  sub_23BA6ED18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  unint64_t v20 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v21 + v20, v15, v12);
  StockService.fetchQuotes(for:cachePolicy:networkSession:completion:)(a3, (uint64_t)v24, (uint64_t)v18, (uint64_t)sub_23BAD6FFC, v21);
  swift_release();
  return sub_23BAD6D10((uint64_t)v18);
}

uint64_t sub_23BAD5568(uint64_t a1)
{
  return sub_23BAD5580(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_23BAD5350);
}

uint64_t sub_23BAD5580(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48));
}

uint64_t StockService.fetchQuotes(for:cachePolicy:networkSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a4;
  *(void *)(v4 + 16) = a1;
  *(_OWORD *)(v4 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(_OWORD *)a3;
  *(unsigned char *)(v4 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(unsigned char *)(a3 + 16);
  return MEMORY[0x270FA2498](sub_23BAD55CC, 0, 0);
}

uint64_t sub_23BAD55CC()
{
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v6 = off_26ADC8088;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 56) = v7;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  *(void *)(v7 + 32) = v3;
  *(void *)(v7 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v2;
  *(unsigned char *)(v7 + 48) = v1;
  *(void *)(v7 + 56) = v4;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v8;
  uint64_t v9 = type metadata accessor for QuoteResult();
  void *v8 = v0;
  v8[1] = sub_23BAA2068;
  uint64_t v10 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v10, 0, 0, 0xD00000000000002CLL, 0x800000023BADEA60, sub_23BAD58B0, v7, v9);
}

uint64_t sub_23BAD5724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v20 = a7;
  sub_23BAD70D4(0, &qword_268A75DD8, (void (*)(uint64_t))type metadata accessor for QuoteResult);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v21[-1] - v15;
  v21[0] = a4;
  v21[1] = a5;
  char v22 = a6;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v21[-1] - v15, a1, v13);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v18 + v17, v16, v13);
  StockService.fetchQuotes(for:cachePolicy:networkSession:completion:)(a3, (uint64_t)v21, v20, (uint64_t)sub_23BAD6FFC, v18);
  return swift_release();
}

uint64_t sub_23BAD58B0(uint64_t a1)
{
  return sub_23BAD58C8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_23BAD5724);
}

uint64_t sub_23BAD58C8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t StockService.fetchQuoteDetails(for:cachePolicy:networkSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a4;
  *(void *)(v4 + 16) = a1;
  *(_OWORD *)(v4 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(_OWORD *)a3;
  *(unsigned char *)(v4 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(unsigned char *)(a3 + 16);
  return MEMORY[0x270FA2498](sub_23BAD5918, 0, 0);
}

uint64_t sub_23BAD5918()
{
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v6 = off_26ADC8088;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 56) = v7;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  *(void *)(v7 + 32) = v3;
  *(void *)(v7 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v2;
  *(unsigned char *)(v7 + 48) = v1;
  *(void *)(v7 + 56) = v4;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v8;
  uint64_t v9 = type metadata accessor for QuoteDetailResult();
  void *v8 = v0;
  v8[1] = sub_23BAA2068;
  uint64_t v10 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v10, 0, 0, 0xD000000000000032, 0x800000023BADEA90, sub_23BAD5BFC, v7, v9);
}

uint64_t sub_23BAD5A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v20 = a7;
  sub_23BAD70D4(0, &qword_268A75DD0, (void (*)(uint64_t))type metadata accessor for QuoteDetailResult);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v21[-1] - v15;
  v21[0] = a4;
  v21[1] = a5;
  char v22 = a6;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v21[-1] - v15, a1, v13);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v18 + v17, v16, v13);
  StockService.fetchQuoteDetails(for:cachePolicy:networkSession:completion:)(a3, (uint64_t)v21, v20, (uint64_t)sub_23BAD6F34, v18);
  return swift_release();
}

uint64_t sub_23BAD5BFC(uint64_t a1)
{
  return sub_23BAD58C8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_23BAD5A70);
}

uint64_t StockService.fetchStockChart(for:range:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 16) = a1;
  *(unsigned char *)(v5 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *a4;
  *(_OWORD *)(v5 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = *(_OWORD *)a5;
  *(unsigned char *)(v5 + 81) = *(unsigned char *)(a5 + 16);
  return MEMORY[0x270FA2498](sub_23BAD5C50, 0, 0);
}

uint64_t sub_23BAD5C50()
{
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 81);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  char v4 = *(unsigned char *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v7 = off_26ADC8088;
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 56) = v8;
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  *(void *)(v8 + 32) = v5;
  *(unsigned char *)(v8 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v4;
  *(void *)(v8 + 48) = v3;
  *(void *)(v8 + 56) = v2;
  *(unsigned char *)(v8 + 64) = v1;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v9;
  uint64_t v10 = type metadata accessor for StockChartResult();
  *uint64_t v9 = v0;
  v9[1] = sub_23BAA1DA8;
  uint64_t v11 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v11, 0, 0, 0xD000000000000027, 0x800000023BADEAD0, sub_23BAD5FD4, v8, v10);
}

uint64_t sub_23BAD5DB0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v25 = a3;
  unint64_t v26 = a4;
  uint64_t v27 = a2;
  sub_23BAD70D4(0, &qword_268A75DC8, (void (*)(uint64_t))type metadata accessor for StockChartResult);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)&v25 - v16;
  uint64_t v18 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v30 = a5;
  v28[0] = a6;
  v28[1] = a7;
  char v29 = a8;
  sub_23BA6ED18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  unint64_t v22 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v23 + v22, v17, v14);
  StockService.fetchStockChart(for:range:cachePolicy:networkSession:completion:)(v25, v26, &v30, v28, (uint64_t)v20, (uint64_t)sub_23BAD6E24, v23);
  swift_release();
  return sub_23BAD6D10((uint64_t)v20);
}

uint64_t sub_23BAD5FD4(uint64_t a1)
{
  return sub_23BAD5DB0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned char *)(v1 + 64));
}

uint64_t StockService.fetchStockChart(for:range:cachePolicy:networkSession:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = a6;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(unsigned char *)(v6 + 88) = *a4;
  *(_OWORD *)(v6 + 48) = *(_OWORD *)a5;
  *(unsigned char *)(v6 + 89) = *(unsigned char *)(a5 + 16);
  return MEMORY[0x270FA2498](sub_23BAD6028, 0, 0);
}

uint64_t sub_23BAD6028()
{
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 89);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  char v4 = *(unsigned char *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = off_26ADC8088;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 64) = v9;
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  *(void *)(v9 + 32) = v6;
  *(unsigned char *)(v9 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v4;
  *(void *)(v9 + 48) = v3;
  *(void *)(v9 + 56) = v2;
  *(unsigned char *)(v9 + 64) = v1;
  *(void *)(v9 + 72) = v5;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v10;
  uint64_t v11 = type metadata accessor for StockChartResult();
  void *v10 = v0;
  v10[1] = sub_23BAD6198;
  uint64_t v12 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v12, 0, 0, 0xD000000000000036, 0x800000023BADEB00, sub_23BAD64D4, v9, v11);
}

uint64_t sub_23BAD6198()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 8sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_23BAD62D4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_23BAD62D4()
{
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23BAD6338(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t v22 = a3;
  unint64_t v23 = a4;
  uint64_t v24 = a2;
  sub_23BAD70D4(0, &qword_268A75DC8, (void (*)(uint64_t))type metadata accessor for StockChartResult);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v22 - v17;
  unsigned __int8 v27 = a5;
  v25[0] = a6;
  v25[1] = a7;
  char v26 = a8;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v22 - v17, a1, v15);
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v20 + v19, v18, v15);
  StockService.fetchStockChart(for:range:cachePolicy:networkSession:completion:)(v22, v23, &v27, v25, a9, (uint64_t)sub_23BAD6E24, v20);
  return swift_release();
}

uint64_t sub_23BAD64D4(uint64_t a1)
{
  return sub_23BAD6338(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned char *)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_23BAD6510(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), unint64_t *a6)
{
  uint64_t v10 = a3(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v22 - v11;
  sub_23BAD71A4(0, a4, a5);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v22 - v14;
  sub_23BAD6F70(a1, (uint64_t)v22 - v14, a4, a5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *((void *)v15 + 1);
    char v18 = v15[16];
    sub_23BA84174();
    uint64_t v19 = swift_allocError();
    *(void *)uint64_t v20 = v16;
    *(void *)(v20 + 8) = v17;
    *(unsigned char *)(v20 + 16) = v18;
    v22[1] = v19;
    sub_23BAD70D4(0, a6, a5);
    return sub_23BAD8350();
  }
  else
  {
    sub_23BAD7214((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))a5);
    sub_23BAD70D4(0, a6, a5);
    return sub_23BAD8360();
  }
}

uint64_t StockService.fetchDefaultWatchlist(cachePolicy:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)a2;
  *(unsigned char *)(v2 + 64) = *(unsigned char *)(a2 + 16);
  return MEMORY[0x270FA2498](sub_23BAD66C8, 0, 0);
}

uint64_t sub_23BAD66C8()
{
  if (qword_26ADC8090 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  char v4 = off_26ADC8088;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *(void *)(v5 + 32) = v2;
  *(unsigned char *)(v5 + 4sub_23BA75C5C((uint64_t)sub_23BA7D744, 0) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_23BA72580;
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v7, 0, 0, 0xD000000000000023, 0x800000023BADEB40, sub_23BAD6AA0, v5, &type metadata for WatchlistResult);
}

uint64_t sub_23BAD680C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v24 = a2;
  sub_23BAD6AB0();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = type metadata accessor for StockService.NetworkSession(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v25[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA6ED18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v25[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v18 + v17, (char *)&v25[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  id v19 = objc_msgSend(self, sel_defaultsForCurrentCountry, v24);
  id v20 = objc_msgSend(v19, sel_defaultSymbols);

  uint64_t v21 = sub_23BAD82E0();
  v25[0] = a3;
  v25[1] = a4;
  char v26 = a5;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_23BAD6C60;
  *(void *)(v22 + 24) = v18;
  swift_retain();
  StockService.fetchStocks(for:cachePolicy:networkSession:completion:)(v21, (uint64_t)v25, (uint64_t)v15, (uint64_t)sub_23BAD6D08, v22);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_23BAD6D10((uint64_t)v15);
}

uint64_t sub_23BAD6AA0(uint64_t a1)
{
  return sub_23BAD680C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

void sub_23BAD6AB0()
{
  if (!qword_268A75DC0)
  {
    sub_23BAA7FCC();
    unint64_t v0 = sub_23BAD8370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268A75DC0);
    }
  }
}

uint64_t sub_23BAD6B18(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  if (*(unsigned char *)(a1 + 17))
  {
    uint64_t v2 = *(void **)(a1 + 8);
    char v3 = *(unsigned char *)(a1 + 16);
    sub_23BA84174();
    swift_allocError();
    *(void *)uint64_t v4 = v1;
    *(void *)(v4 + 8) = v2;
    *(unsigned char *)(v4 + 16) = v3;
    sub_23BA83550(v1, v2, v3);
    sub_23BAD6AB0();
    return sub_23BAD8350();
  }
  else
  {
    sub_23BAD6AB0();
    swift_bridgeObjectRetain();
    return sub_23BAD8360();
  }
}

uint64_t sub_23BAD6BD0()
{
  sub_23BAD6AB0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_23BAD6C60(uint64_t a1)
{
  sub_23BAD6AB0();
  return sub_23BAD6B18(a1);
}

uint64_t sub_23BAD6CD0()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23BAD6D08(uint64_t a1)
{
  return sub_23BA7DCF0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_23BAD6D10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockService.NetworkSession(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BAD6D6C()
{
  return objectdestroy_44Tm(&qword_268A75DC8, (void (*)(uint64_t))type metadata accessor for StockChartResult);
}

uint64_t objectdestroy_44Tm(unint64_t *a1, void (*a2)(uint64_t))
{
  sub_23BAD70D4(0, a1, a2);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 16) & ~v5;
  uint64_t v7 = v6 + *(void *)(v4 + 64);
  uint64_t v8 = v5 | 7;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2 + v6, v3);
  return MEMORY[0x270FA0238](v2, v7, v8);
}

uint64_t sub_23BAD6E24(uint64_t a1)
{
  return sub_23BAD6E80(a1, &qword_268A75DC8, (void (*)(uint64_t))type metadata accessor for StockChartResult, (uint64_t (*)(void))type metadata accessor for StockChartResult, &qword_268A75490);
}

uint64_t sub_23BAD6E60()
{
  return objectdestroy_44Tm(&qword_268A75DC8, (void (*)(uint64_t))type metadata accessor for StockChartResult);
}

uint64_t sub_23BAD6E80(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), uint64_t (*a4)(void), unint64_t *a5)
{
  sub_23BAD70D4(0, a2, a3);
  return sub_23BAD6510(a1, v5+ ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80)), a4, a5, a3, a2);
}

uint64_t sub_23BAD6F14()
{
  return objectdestroy_44Tm(&qword_268A75DD0, (void (*)(uint64_t))type metadata accessor for QuoteDetailResult);
}

uint64_t sub_23BAD6F34(uint64_t a1)
{
  return sub_23BAD6E80(a1, &qword_268A75DD0, (void (*)(uint64_t))type metadata accessor for QuoteDetailResult, (uint64_t (*)(void))type metadata accessor for QuoteDetailResult, &qword_268A754B0);
}

uint64_t sub_23BAD6F70(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_23BAD71A4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_23BAD6FDC()
{
  return objectdestroy_44Tm(&qword_268A75DD8, (void (*)(uint64_t))type metadata accessor for QuoteResult);
}

uint64_t sub_23BAD6FFC(uint64_t a1)
{
  return sub_23BAD6E80(a1, &qword_268A75DD8, (void (*)(uint64_t))type metadata accessor for QuoteResult, (uint64_t (*)(void))type metadata accessor for QuoteResult, &qword_268A754D8);
}

uint64_t sub_23BAD7038()
{
  return objectdestroy_44Tm(&qword_268A75DD8, (void (*)(uint64_t))type metadata accessor for QuoteResult);
}

uint64_t sub_23BAD7058()
{
  return objectdestroy_44Tm(&qword_268A75DE0, (void (*)(uint64_t))type metadata accessor for StockResult);
}

uint64_t sub_23BAD7078(uint64_t a1)
{
  return sub_23BAD6E80(a1, &qword_268A75DE0, (void (*)(uint64_t))type metadata accessor for StockResult, (uint64_t (*)(void))type metadata accessor for StockResult, &qword_268A75468);
}

uint64_t sub_23BAD70B4()
{
  return objectdestroy_44Tm(&qword_268A75DE0, (void (*)(uint64_t))type metadata accessor for StockResult);
}

void sub_23BAD70D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_23BAA7FCC();
    unint64_t v4 = sub_23BAD8370();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_23BAD7148()
{
  return objectdestroy_44Tm(&qword_268A75DE8, (void (*)(uint64_t))type metadata accessor for StockSearchResult);
}

uint64_t sub_23BAD7168(uint64_t a1)
{
  return sub_23BAD6E80(a1, &qword_268A75DE8, (void (*)(uint64_t))type metadata accessor for StockSearchResult, (uint64_t (*)(void))type metadata accessor for StockSearchResult, &qword_268A75538);
}

void sub_23BAD71A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_23BA84174();
    unint64_t v4 = sub_23BAD8990();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_23BAD7214(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23BAD7280()
{
  return MEMORY[0x270EEDD58]();
}

uint64_t sub_23BAD7290()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_23BAD72A0()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_23BAD72B0()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_23BAD72C0()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_23BAD72D0()
{
  return MEMORY[0x270EEFFC8]();
}

uint64_t sub_23BAD72E0()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_23BAD72F0()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_23BAD7300()
{
  return MEMORY[0x270EF09B8]();
}

uint64_t sub_23BAD7310()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t sub_23BAD7320()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_23BAD7330()
{
  return MEMORY[0x270EF0C10]();
}

uint64_t sub_23BAD7340()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_23BAD7350()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_23BAD7360()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_23BAD7370()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_23BAD7380()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_23BAD7390()
{
  return MEMORY[0x270EF0D68]();
}

uint64_t sub_23BAD73A0()
{
  return MEMORY[0x270EF0D78]();
}

uint64_t _s9StocksKit8CurrencyV10identifierSSvg_0()
{
  return MEMORY[0x270EF0DB8]();
}

uint64_t sub_23BAD73C0()
{
  return MEMORY[0x270EF0DD8]();
}

uint64_t sub_23BAD73D0()
{
  return MEMORY[0x270EF0EE0]();
}

uint64_t sub_23BAD73E0()
{
  return MEMORY[0x270EF0F48]();
}

uint64_t sub_23BAD73F0()
{
  return MEMORY[0x270EF0F58]();
}

uint64_t sub_23BAD7400()
{
  return MEMORY[0x270EF0F70]();
}

uint64_t sub_23BAD7410()
{
  return MEMORY[0x270EF0F90]();
}

uint64_t sub_23BAD7420()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_23BAD7430()
{
  return MEMORY[0x270EF0FB0]();
}

uint64_t sub_23BAD7440()
{
  return MEMORY[0x270EF0FC0]();
}

uint64_t sub_23BAD7450()
{
  return MEMORY[0x270EF0FC8]();
}

uint64_t _s9StocksKit8CurrencyVyACSScfC_0()
{
  return MEMORY[0x270EF0FD0]();
}

uint64_t sub_23BAD7470()
{
  return MEMORY[0x270EF1008]();
}

uint64_t sub_23BAD7480()
{
  return MEMORY[0x270EF1050]();
}

uint64_t sub_23BAD7490()
{
  return MEMORY[0x270EF1060]();
}

uint64_t sub_23BAD74A0()
{
  return MEMORY[0x270EF1080]();
}

uint64_t sub_23BAD74B0()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_23BAD74C0()
{
  return MEMORY[0x270EF15E0]();
}

uint64_t sub_23BAD74D0()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_23BAD74E0()
{
  return MEMORY[0x270F77E30]();
}

uint64_t sub_23BAD74F0()
{
  return MEMORY[0x270F77E38]();
}

uint64_t sub_23BAD7500()
{
  return MEMORY[0x270F77E40]();
}

uint64_t sub_23BAD7510()
{
  return MEMORY[0x270F77E48]();
}

uint64_t sub_23BAD7520()
{
  return MEMORY[0x270F77E58]();
}

uint64_t sub_23BAD7530()
{
  return MEMORY[0x270F77E60]();
}

uint64_t sub_23BAD7540()
{
  return MEMORY[0x270F77E68]();
}

uint64_t sub_23BAD7550()
{
  return MEMORY[0x270F77E70]();
}

uint64_t sub_23BAD7560()
{
  return MEMORY[0x270F77E78]();
}

uint64_t sub_23BAD7570()
{
  return MEMORY[0x270F77E80]();
}

uint64_t sub_23BAD7580()
{
  return MEMORY[0x270F77E88]();
}

uint64_t sub_23BAD7590()
{
  return MEMORY[0x270F77E90]();
}

uint64_t sub_23BAD75A0()
{
  return MEMORY[0x270F77E98]();
}

uint64_t sub_23BAD75B0()
{
  return MEMORY[0x270F77EA0]();
}

uint64_t sub_23BAD75C0()
{
  return MEMORY[0x270F77EA8]();
}

uint64_t sub_23BAD75D0()
{
  return MEMORY[0x270F77EB0]();
}

uint64_t sub_23BAD75E0()
{
  return MEMORY[0x270F77EB8]();
}

uint64_t sub_23BAD75F0()
{
  return MEMORY[0x270F77EC0]();
}

uint64_t sub_23BAD7600()
{
  return MEMORY[0x270F77EC8]();
}

uint64_t sub_23BAD7610()
{
  return MEMORY[0x270F77ED0]();
}

uint64_t sub_23BAD7620()
{
  return MEMORY[0x270F77ED8]();
}

uint64_t sub_23BAD7630()
{
  return MEMORY[0x270F77EE0]();
}

uint64_t sub_23BAD7640()
{
  return MEMORY[0x270F77EE8]();
}

uint64_t sub_23BAD7650()
{
  return MEMORY[0x270F77EF0]();
}

uint64_t sub_23BAD7660()
{
  return MEMORY[0x270F77EF8]();
}

uint64_t sub_23BAD7670()
{
  return MEMORY[0x270F77F00]();
}

uint64_t sub_23BAD7680()
{
  return MEMORY[0x270F77F08]();
}

uint64_t sub_23BAD7690()
{
  return MEMORY[0x270F77F10]();
}

uint64_t sub_23BAD76A0()
{
  return MEMORY[0x270F77F18]();
}

uint64_t sub_23BAD76B0()
{
  return MEMORY[0x270F77F20]();
}

uint64_t sub_23BAD76C0()
{
  return MEMORY[0x270F77F28]();
}

uint64_t sub_23BAD76D0()
{
  return MEMORY[0x270F77F30]();
}

uint64_t sub_23BAD76E0()
{
  return MEMORY[0x270F77F38]();
}

uint64_t sub_23BAD76F0()
{
  return MEMORY[0x270F77F40]();
}

uint64_t sub_23BAD7700()
{
  return MEMORY[0x270F77F48]();
}

uint64_t sub_23BAD7710()
{
  return MEMORY[0x270F77F50]();
}

uint64_t sub_23BAD7720()
{
  return MEMORY[0x270F77F58]();
}

uint64_t sub_23BAD7730()
{
  return MEMORY[0x270F78080]();
}

uint64_t sub_23BAD7740()
{
  return MEMORY[0x270F78128]();
}

uint64_t sub_23BAD7750()
{
  return MEMORY[0x270F78260]();
}

uint64_t sub_23BAD7760()
{
  return MEMORY[0x270F782E0]();
}

uint64_t sub_23BAD7770()
{
  return MEMORY[0x270F78398]();
}

uint64_t sub_23BAD7780()
{
  return MEMORY[0x270F783A0]();
}

uint64_t sub_23BAD7790()
{
  return MEMORY[0x270F783B8]();
}

uint64_t sub_23BAD77A0()
{
  return MEMORY[0x270F783C0]();
}

uint64_t sub_23BAD77B0()
{
  return MEMORY[0x270F783C8]();
}

uint64_t sub_23BAD77C0()
{
  return MEMORY[0x270F783D0]();
}

uint64_t sub_23BAD77D0()
{
  return MEMORY[0x270F783D8]();
}

uint64_t sub_23BAD77E0()
{
  return MEMORY[0x270F78428]();
}

uint64_t sub_23BAD77F0()
{
  return MEMORY[0x270F78520]();
}

uint64_t sub_23BAD7800()
{
  return MEMORY[0x270F78538]();
}

uint64_t sub_23BAD7810()
{
  return MEMORY[0x270F78540]();
}

uint64_t sub_23BAD7820()
{
  return MEMORY[0x270F78548]();
}

uint64_t sub_23BAD7830()
{
  return MEMORY[0x270F78550]();
}

uint64_t sub_23BAD7850()
{
  return MEMORY[0x270F78620]();
}

uint64_t sub_23BAD7860()
{
  return MEMORY[0x270F78628]();
}

uint64_t sub_23BAD7870()
{
  return MEMORY[0x270F78630]();
}

uint64_t sub_23BAD7880()
{
  return MEMORY[0x270F78638]();
}

uint64_t sub_23BAD7890()
{
  return MEMORY[0x270F78780]();
}

uint64_t sub_23BAD78A0()
{
  return MEMORY[0x270F787A0]();
}

uint64_t sub_23BAD78B0()
{
  return MEMORY[0x270F787A8]();
}

uint64_t sub_23BAD78C0()
{
  return MEMORY[0x270F787B8]();
}

uint64_t sub_23BAD78D0()
{
  return MEMORY[0x270F78818]();
}

uint64_t sub_23BAD78E0()
{
  return MEMORY[0x270F78820]();
}

uint64_t sub_23BAD78F0()
{
  return MEMORY[0x270F78828]();
}

uint64_t sub_23BAD7900()
{
  return MEMORY[0x270F78838]();
}

uint64_t sub_23BAD7910()
{
  return MEMORY[0x270F78840]();
}

uint64_t sub_23BAD7920()
{
  return MEMORY[0x270F78848]();
}

uint64_t sub_23BAD7930()
{
  return MEMORY[0x270F78850]();
}

uint64_t sub_23BAD7940()
{
  return MEMORY[0x270F78858]();
}

uint64_t sub_23BAD7950()
{
  return MEMORY[0x270F78860]();
}

uint64_t sub_23BAD7960()
{
  return MEMORY[0x270F78868]();
}

uint64_t sub_23BAD7970()
{
  return MEMORY[0x270F78870]();
}

uint64_t sub_23BAD7980()
{
  return MEMORY[0x270F78878]();
}

uint64_t sub_23BAD7990()
{
  return MEMORY[0x270F78880]();
}

uint64_t sub_23BAD79A0()
{
  return MEMORY[0x270F78950]();
}

uint64_t sub_23BAD79B0()
{
  return MEMORY[0x270F78978]();
}

uint64_t sub_23BAD79C0()
{
  return MEMORY[0x270F78980]();
}

uint64_t sub_23BAD79D0()
{
  return MEMORY[0x270F78A00]();
}

uint64_t sub_23BAD79E0()
{
  return MEMORY[0x270F78A08]();
}

uint64_t sub_23BAD7A00()
{
  return MEMORY[0x270F78AA8]();
}

uint64_t sub_23BAD7A10()
{
  return MEMORY[0x270F78AB0]();
}

uint64_t sub_23BAD7A20()
{
  return MEMORY[0x270F78AC0]();
}

uint64_t sub_23BAD7A30()
{
  return MEMORY[0x270F78AC8]();
}

uint64_t sub_23BAD7A40()
{
  return MEMORY[0x270F78AD8]();
}

uint64_t sub_23BAD7A50()
{
  return MEMORY[0x270F78AE8]();
}

uint64_t sub_23BAD7A60()
{
  return MEMORY[0x270F78AF0]();
}

uint64_t sub_23BAD7A70()
{
  return MEMORY[0x270F78AF8]();
}

uint64_t sub_23BAD7A80()
{
  return MEMORY[0x270F78B00]();
}

uint64_t sub_23BAD7A90()
{
  return MEMORY[0x270F78B08]();
}

uint64_t sub_23BAD7AA0()
{
  return MEMORY[0x270F78B10]();
}

uint64_t sub_23BAD7AB0()
{
  return MEMORY[0x270F78B28]();
}

uint64_t sub_23BAD7AC0()
{
  return MEMORY[0x270F78B38]();
}

uint64_t sub_23BAD7AD0()
{
  return MEMORY[0x270F78B40]();
}

uint64_t sub_23BAD7AE0()
{
  return MEMORY[0x270F78B48]();
}

uint64_t sub_23BAD7AF0()
{
  return MEMORY[0x270F78B58]();
}

uint64_t sub_23BAD7B00()
{
  return MEMORY[0x270F78B60]();
}

uint64_t sub_23BAD7B10()
{
  return MEMORY[0x270F78B68]();
}

uint64_t sub_23BAD7B20()
{
  return MEMORY[0x270F78B70]();
}

uint64_t sub_23BAD7B30()
{
  return MEMORY[0x270F78B78]();
}

uint64_t sub_23BAD7B40()
{
  return MEMORY[0x270F78B80]();
}

uint64_t sub_23BAD7B50()
{
  return MEMORY[0x270F78B88]();
}

uint64_t sub_23BAD7B60()
{
  return MEMORY[0x270F78B90]();
}

uint64_t sub_23BAD7B70()
{
  return MEMORY[0x270F78BA0]();
}

uint64_t sub_23BAD7B80()
{
  return MEMORY[0x270F78BA8]();
}

uint64_t sub_23BAD7B90()
{
  return MEMORY[0x270F78BB0]();
}

uint64_t sub_23BAD7BA0()
{
  return MEMORY[0x270F78BB8]();
}

uint64_t sub_23BAD7BB0()
{
  return MEMORY[0x270F78BC0]();
}

uint64_t sub_23BAD7BC0()
{
  return MEMORY[0x270F78BC8]();
}

uint64_t sub_23BAD7BD0()
{
  return MEMORY[0x270F78BD0]();
}

uint64_t sub_23BAD7BE0()
{
  return MEMORY[0x270F78BD8]();
}

uint64_t sub_23BAD7BF0()
{
  return MEMORY[0x270F78BE0]();
}

uint64_t sub_23BAD7C00()
{
  return MEMORY[0x270F78BF0]();
}

uint64_t sub_23BAD7C10()
{
  return MEMORY[0x270F78C10]();
}

uint64_t sub_23BAD7C20()
{
  return MEMORY[0x270F78C18]();
}

uint64_t sub_23BAD7C30()
{
  return MEMORY[0x270F78C40]();
}

uint64_t sub_23BAD7C40()
{
  return MEMORY[0x270F78C50]();
}

uint64_t sub_23BAD7C50()
{
  return MEMORY[0x270F78C58]();
}

uint64_t sub_23BAD7C60()
{
  return MEMORY[0x270F78C60]();
}

uint64_t sub_23BAD7C70()
{
  return MEMORY[0x270F78CA8]();
}

uint64_t sub_23BAD7C80()
{
  return MEMORY[0x270F78CB0]();
}

uint64_t sub_23BAD7C90()
{
  return MEMORY[0x270F78D10]();
}

uint64_t sub_23BAD7CA0()
{
  return MEMORY[0x270F78D70]();
}

uint64_t sub_23BAD7CB0()
{
  return MEMORY[0x270F78DA0]();
}

uint64_t sub_23BAD7CE0()
{
  return MEMORY[0x270F7A890]();
}

uint64_t sub_23BAD7D00()
{
  return MEMORY[0x270F7A8E0]();
}

uint64_t sub_23BAD7D10()
{
  return MEMORY[0x270F7A8E8]();
}

uint64_t sub_23BAD7D20()
{
  return MEMORY[0x270F7A8F0]();
}

uint64_t sub_23BAD7D30()
{
  return MEMORY[0x270F79EA8]();
}

uint64_t sub_23BAD7D40()
{
  return MEMORY[0x270F79EB0]();
}

uint64_t sub_23BAD7D50()
{
  return MEMORY[0x270F79EB8]();
}

uint64_t sub_23BAD7D60()
{
  return MEMORY[0x270F79ED8]();
}

uint64_t sub_23BAD7D70()
{
  return MEMORY[0x270F79F30]();
}

uint64_t sub_23BAD7D80()
{
  return MEMORY[0x270F79F88]();
}

uint64_t sub_23BAD7D90()
{
  return MEMORY[0x270F79FD0]();
}

uint64_t sub_23BAD7DA0()
{
  return MEMORY[0x270F79FE0]();
}

uint64_t sub_23BAD7DB0()
{
  return MEMORY[0x270F79FE8]();
}

uint64_t sub_23BAD7DC0()
{
  return MEMORY[0x270F7A000]();
}

uint64_t sub_23BAD7DD0()
{
  return MEMORY[0x270F7A008]();
}

uint64_t sub_23BAD7DE0()
{
  return MEMORY[0x270F7A048]();
}

uint64_t sub_23BAD7DF0()
{
  return MEMORY[0x270F7A050]();
}

uint64_t sub_23BAD7E00()
{
  return MEMORY[0x270F7A058]();
}

uint64_t sub_23BAD7E10()
{
  return MEMORY[0x270F7A0A0]();
}

uint64_t sub_23BAD7E20()
{
  return MEMORY[0x270F7A0C0]();
}

uint64_t sub_23BAD7E50()
{
  return MEMORY[0x270F7A268]();
}

uint64_t sub_23BAD7E60()
{
  return MEMORY[0x270F7A2B8]();
}

uint64_t sub_23BAD7E70()
{
  return MEMORY[0x270F7A2C0]();
}

uint64_t sub_23BAD7E80()
{
  return MEMORY[0x270F7A420]();
}

uint64_t sub_23BAD7E90()
{
  return MEMORY[0x270F7A428]();
}

uint64_t sub_23BAD7EB0()
{
  return MEMORY[0x270F7A470]();
}

uint64_t sub_23BAD7EC0()
{
  return MEMORY[0x270F7A478]();
}

uint64_t sub_23BAD7ED0()
{
  return MEMORY[0x270F7A4C0]();
}

uint64_t sub_23BAD7EE0()
{
  return MEMORY[0x270F7A4C8]();
}

uint64_t sub_23BAD7EF0()
{
  return MEMORY[0x270F7A4E8]();
}

uint64_t sub_23BAD7F00()
{
  return MEMORY[0x270F7A4F8]();
}

uint64_t sub_23BAD7F10()
{
  return MEMORY[0x270F7A500]();
}

uint64_t sub_23BAD7F20()
{
  return MEMORY[0x270F7A560]();
}

uint64_t sub_23BAD7F30()
{
  return MEMORY[0x270F7A580]();
}

uint64_t sub_23BAD7F50()
{
  return MEMORY[0x270F7A600]();
}

uint64_t sub_23BAD7F60()
{
  return MEMORY[0x270F7A618]();
}

uint64_t sub_23BAD7F70()
{
  return MEMORY[0x270F7A620]();
}

uint64_t sub_23BAD7F80()
{
  return MEMORY[0x270F7A638]();
}

uint64_t sub_23BAD7F90()
{
  return MEMORY[0x270F7A650]();
}

uint64_t sub_23BAD7FA0()
{
  return MEMORY[0x270F7A668]();
}

uint64_t sub_23BAD7FB0()
{
  return MEMORY[0x270F7A680]();
}

uint64_t sub_23BAD7FC0()
{
  return MEMORY[0x270F7A698]();
}

uint64_t sub_23BAD7FD0()
{
  return MEMORY[0x270F7A6D8]();
}

uint64_t sub_23BAD7FE0()
{
  return MEMORY[0x270F7A6E0]();
}

uint64_t sub_23BAD7FF0()
{
  return MEMORY[0x270F7A700]();
}

uint64_t sub_23BAD8000()
{
  return MEMORY[0x270F7A710]();
}

uint64_t sub_23BAD8010()
{
  return MEMORY[0x270F7A718]();
}

uint64_t sub_23BAD8020()
{
  return MEMORY[0x270F7A720]();
}

uint64_t sub_23BAD8030()
{
  return MEMORY[0x270F7A740]();
}

uint64_t sub_23BAD8040()
{
  return MEMORY[0x270F7A748]();
}

uint64_t sub_23BAD8050()
{
  return MEMORY[0x270F7A758]();
}

uint64_t sub_23BAD8060()
{
  return MEMORY[0x270F7A768]();
}

uint64_t sub_23BAD8070()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_23BAD8080()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_23BAD8090()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_23BAD80A0()
{
  return MEMORY[0x270FA1A70]();
}

uint64_t sub_23BAD80B0()
{
  return MEMORY[0x270FA1AC0]();
}

uint64_t sub_23BAD80C0()
{
  return MEMORY[0x270FA1AF0]();
}

uint64_t sub_23BAD80D0()
{
  return MEMORY[0x270FA1B20]();
}

uint64_t sub_23BAD80E0()
{
  return MEMORY[0x270FA1B30]();
}

uint64_t sub_23BAD80F0()
{
  return MEMORY[0x270FA1B48]();
}

uint64_t sub_23BAD8100()
{
  return MEMORY[0x270FA1B90]();
}

uint64_t sub_23BAD8110()
{
  return MEMORY[0x270FA1C70]();
}

uint64_t sub_23BAD8120()
{
  return MEMORY[0x270FA1C78]();
}

uint64_t sub_23BAD8130()
{
  return MEMORY[0x270FA1C88]();
}

uint64_t sub_23BAD8140()
{
  return MEMORY[0x270FA1D38]();
}

uint64_t sub_23BAD8150()
{
  return MEMORY[0x270FA1D50]();
}

uint64_t sub_23BAD8160()
{
  return MEMORY[0x270FA1D68]();
}

uint64_t sub_23BAD8170()
{
  return MEMORY[0x270FA1D78]();
}

uint64_t sub_23BAD8180()
{
  return MEMORY[0x270FA1D98]();
}

uint64_t sub_23BAD8190()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_23BAD81A0()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_23BAD81B0()
{
  return MEMORY[0x270FA0A00]();
}

uint64_t sub_23BAD81C0()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_23BAD81D0()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_23BAD81E0()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_23BAD81F0()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_23BAD8200()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_23BAD8210()
{
  return MEMORY[0x270F9D550]();
}

uint64_t sub_23BAD8220()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_23BAD8230()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_23BAD8240()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_23BAD8250()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_23BAD8260()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_23BAD8270()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_23BAD8280()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_23BAD8290()
{
  return MEMORY[0x270F9D7D8]();
}

uint64_t sub_23BAD82A0()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_23BAD82B0()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_23BAD82C0()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_23BAD82D0()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_23BAD82E0()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_23BAD82F0()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_23BAD8300()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_23BAD8310()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_23BAD8320()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_23BAD8330()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_23BAD8340()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_23BAD8350()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_23BAD8360()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_23BAD8370()
{
  return MEMORY[0x270FA1E28]();
}

uint64_t sub_23BAD8380()
{
  return MEMORY[0x270FA1E30]();
}

uint64_t sub_23BAD8390()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_23BAD83A0()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_23BAD83B0()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_23BAD83C0()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_23BAD83D0()
{
  return MEMORY[0x270FA1FB0]();
}

uint64_t sub_23BAD83E0()
{
  return MEMORY[0x270FA1FC0]();
}

uint64_t sub_23BAD83F0()
{
  return MEMORY[0x270FA1FE8]();
}

uint64_t sub_23BAD8400()
{
  return MEMORY[0x270F9DDA0]();
}

uint64_t sub_23BAD8410()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_23BAD8420()
{
  return MEMORY[0x270F9E0E8]();
}

uint64_t sub_23BAD8430()
{
  return MEMORY[0x270F9E178]();
}

uint64_t sub_23BAD8440()
{
  return MEMORY[0x270F7A828]();
}

uint64_t sub_23BAD8450()
{
  return MEMORY[0x270F7A830]();
}

uint64_t sub_23BAD8460()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_23BAD8470()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_23BAD8480()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_23BAD8490()
{
  return MEMORY[0x270FA0C98]();
}

uint64_t sub_23BAD84A0()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_23BAD84B0()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_23BAD84C0()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_23BAD84D0()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_23BAD84E0()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_23BAD84F0()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_23BAD8500()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_23BAD8510()
{
  return MEMORY[0x270F9E708]();
}

uint64_t sub_23BAD8520()
{
  return MEMORY[0x270F9E718]();
}

uint64_t sub_23BAD8540()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_23BAD8550()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_23BAD8560()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_23BAD8570()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_23BAD8580()
{
  return MEMORY[0x270F9E978]();
}

uint64_t sub_23BAD8590()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_23BAD85A0()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_23BAD85B0()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_23BAD85C0()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_23BAD85D0()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_23BAD85E0()
{
  return MEMORY[0x270F9EA90]();
}

uint64_t sub_23BAD85F0()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_23BAD8600()
{
  return MEMORY[0x270F9EAE0]();
}

uint64_t sub_23BAD8610()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_23BAD8620()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_23BAD8630()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_23BAD8640()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_23BAD8650()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_23BAD8660()
{
  return MEMORY[0x270FA2168]();
}

uint64_t sub_23BAD8670()
{
  return MEMORY[0x270FA2190]();
}

uint64_t sub_23BAD8680()
{
  return MEMORY[0x270FA21A0]();
}

uint64_t sub_23BAD8690()
{
  return MEMORY[0x270FA21B0]();
}

uint64_t sub_23BAD86A0()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_23BAD86B0()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_23BAD86C0()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_23BAD86D0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_23BAD86E0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_23BAD86F0()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_23BAD8700()
{
  return MEMORY[0x270F9F0B8]();
}

uint64_t sub_23BAD8710()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_23BAD8720()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_23BAD8730()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_23BAD8740()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_23BAD8750()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_23BAD8760()
{
  return MEMORY[0x270F9F280]();
}

uint64_t sub_23BAD8770()
{
  return MEMORY[0x270F9F298]();
}

uint64_t sub_23BAD8780()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_23BAD8790()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_23BAD87A0()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_23BAD87B0()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_23BAD87C0()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_23BAD87D0()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_23BAD87E0()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_23BAD87F0()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_23BAD8800()
{
  return MEMORY[0x270F9F3C0]();
}

uint64_t sub_23BAD8810()
{
  return MEMORY[0x270F9F3D8]();
}

uint64_t sub_23BAD8820()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_23BAD8830()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_23BAD8840()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_23BAD8850()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_23BAD8860()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_23BAD8870()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_23BAD8880()
{
  return MEMORY[0x270F9F4F8]();
}

uint64_t sub_23BAD8890()
{
  return MEMORY[0x270F9F7C8]();
}

uint64_t sub_23BAD88A0()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_23BAD88C0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_23BAD88D0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_23BAD88E0()
{
  return MEMORY[0x270FA2398]();
}

uint64_t sub_23BAD88F0()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_23BAD8900()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_23BAD8910()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_23BAD8920()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_23BAD8930()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_23BAD8940()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_23BAD8950()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_23BAD8960()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_23BAD8970()
{
  return MEMORY[0x270F9FC78]();
}

uint64_t sub_23BAD8980()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_23BAD8990()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_23BAD89A0()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_23BAD89B0()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_23BAD89C0()
{
  return MEMORY[0x270EF2860]();
}

uint64_t sub_23BAD89D0()
{
  return MEMORY[0x270EF2870]();
}

uint64_t sub_23BAD89E0()
{
  return MEMORY[0x270EF2920]();
}

uint64_t sub_23BAD89F0()
{
  return MEMORY[0x270EF2928]();
}

uint64_t sub_23BAD8A00()
{
  return MEMORY[0x270EF2960]();
}

uint64_t sub_23BAD8A10()
{
  return MEMORY[0x270EF2970]();
}

uint64_t sub_23BAD8A20()
{
  return MEMORY[0x270EF2978]();
}

uint64_t sub_23BAD8A30()
{
  return MEMORY[0x270EF2980]();
}

uint64_t sub_23BAD8A40()
{
  return MEMORY[0x270EF2998]();
}

uint64_t sub_23BAD8A50()
{
  return MEMORY[0x270EF29A0]();
}

uint64_t sub_23BAD8A60()
{
  return MEMORY[0x270EF29D0]();
}

uint64_t sub_23BAD8A70()
{
  return MEMORY[0x270EF29F0]();
}

uint64_t sub_23BAD8A80()
{
  return MEMORY[0x270EF2A00]();
}

uint64_t sub_23BAD8A90()
{
  return MEMORY[0x270EF2A10]();
}

uint64_t sub_23BAD8AA0()
{
  return MEMORY[0x270F9FF68]();
}

uint64_t sub_23BAD8AB0()
{
  return MEMORY[0x270F9FFC8]();
}

uint64_t sub_23BAD8AC0()
{
  return MEMORY[0x270FA0090]();
}

uint64_t sub_23BAD8AF0()
{
  return MEMORY[0x270FA23A8]();
}

uint64_t sub_23BAD8B00()
{
  return MEMORY[0x270FA23B8]();
}

uint64_t sub_23BAD8B20()
{
  return MEMORY[0x270FA0128]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

pid_t audit_token_to_pid(audit_token_t *atoken)
{
  return MEMORY[0x270F98178](atoken);
}

int audit_token_to_pidversion(audit_token_t *atoken)
{
  return MEMORY[0x270F98180](atoken);
}

void bzero(void *a1, size_t a2)
{
}

long double log10(long double __x)
{
  MEMORY[0x270EDA0B0](__x);
  return result;
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x270FA0350]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x270FA0358]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x270FA0418]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_task_getMainExecutor()
{
  return MEMORY[0x270FA2468]();
}

uint64_t swift_task_isCurrentExecutor()
{
  return MEMORY[0x270FA2478]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}